; ModuleID = './auditing/circom-pairing/pairing.ll'
source_filename = "/Users/hongbo/code/circom-pairing/circuits/pairing.circom"

%struct_template_circuit_bits2num = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_bigmultshortlong2dunequal = type { i128, i128, i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_or = type { i128, i128, i128 }
%struct_template_circuit_num2bits = type { i128, i128, [256 x i128]* }
%struct_template_circuit_modsumfour = type { i128, i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_xor = type { i128, i128, i128 }
%struct_template_circuit_nor = type { i128, i128, i128 }
%struct_template_circuit_and = type { i128, i128, i128 }
%struct_template_circuit_modprod = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_splitthree = type { i128, i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_signedfp12multiplynocarryunequal = type { i128, i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_lessthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_multiand = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_fp12cyclotomiccompress = type { i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_nand = type { i128, i128, i128 }
%struct_template_circuit_modsub = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_not = type { i128, i128 }
%struct_template_circuit_bigmultshortlong = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_longtoshortnoendcarry = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_split = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_bigmultshortlong2d = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_modsubthree = type { i128, i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_binsum = type { i128, i128, [256 x [256 x i128]]*, [256 x i128]* }
%struct_template_circuit_bigmultshortlongunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_iszero = type { i128, i128, i128 }
%struct_template_circuit_signedfp2multiplynocarryunequal = type { i128, i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_lesseqthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_checkcarrytozero = type { i128, i128, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_modsumthree = type { i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_bigiszero = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_compconstant = type { i128, [256 x i128]*, [256 x i128]*, i128, i128 }
%struct_template_circuit_bigsub = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_checkcarrymodp = type { i128, i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_greatereqthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_signedfp12scalarmultiplynocarryunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_num2bitsneg = type { i128, i128, [256 x i128]* }
%struct_template_circuit_rangecheck2d = type { i128, i128, [256 x [256 x i128]]* }
%struct_template_circuit_signedlinefunctionequalnocarryfp2 = type { i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_modsum = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_signedfp12fp2multiplynocarryunequal = type { i128, i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp12fp2multiplynocarry = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp12multiplynocarry = type { i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_greaterthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_bigmult = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedfp2multiplynocarry = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_isequal = type { [256 x i128]*, i128 }
%struct_template_circuit_signedfp12scalarmultiplynocarry = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_forceequalifenabled = type { i128, [256 x i128]* }
%struct_template_circuit_bigadd = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedlinefunctionunequalnocarryfp2 = type { i128, i128, i128, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_aliascheck = type { [256 x i128]* }
%struct_template_circuit_bigsubmodp = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fpnegate = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_biglessthan = type { i128, i128, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_num2bits_strict = type { i128, [256 x i128]* }
%struct_template_circuit_bigmod2 = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp2negate = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_bits2num_strict = type { [256 x i128]*, i128 }
%struct_template_circuit_fpiszero = type { i128, i128, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_fp2iszero = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_bigisequal = type { i128, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_bigaddmodp = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedcheckcarrymodtozero = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fpisequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_fpsubtract = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedlinefunctionequalnocarry = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedlinefunctionunequalnocarry = type { i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp2conjugate = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_signedfp12cyclotomicsquarenocarry = type { i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfpcarrymodp = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp2isequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_bigmod = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fpsgn0 = type { i128, i128, [256 x i128]*, [256 x i128]*, i128, i128 }
%struct_template_circuit_bigmultmodp = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedfp2carrymodp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp2frobeniusmap = type { i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fpadd = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp2sgn0 = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128, i128 }
%struct_template_circuit_signedfp12carrymodp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp2subtract = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_primereduce = type { i128, i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp12add = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointontangent = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fpmultiply = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_ellipticcurvefunction = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_linefunctionunequalfp2 = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp2compress = type { i128, i128, i128, [256 x i128]*, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp2add = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_pointoncurvefp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointontangentfp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x [256 x i128]]]]* }
%struct_template_circuit_linefunctionunequal = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointonline = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointoncurve = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]* }
%struct_template_circuit_signedfp2multiplynocarrycompressthree = type { i128, i128, [256 x i128]*, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_signedfp2multiplynocarrycompress = type { i128, i128, [256 x i128]*, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_linefunctionequalfp2 = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_linefunctionequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12compress = type { i128, i128, i128, [256 x i128]*, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointonlinefp2 = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x [256 x i128]]]]* }
%struct_template_circuit_fp12cyclotomicsquare = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp2multiply = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp2invert = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurveaddunequalfp2 = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp2compresscarry = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp12frobeniusmap = type { i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12multiplywithlineunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12multiplywithlineunequalfp2 = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_bigmodinv = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_ellipticcurveaddunequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurvedouble = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_signedfp12multiplynocarrycompress = type { i128, i128, [256 x i128]*, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp2multiplythree = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurvescalarmultiplyunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp6invert = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurveadd = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128, [256 x [256 x i128]]*, i128, i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_ellipticcurvedoublefp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_millerloopfp2 = type { i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2 = type { i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp2divide = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurveaddfp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x i128]]]*, i128, [256 x [256 x [256 x i128]]]*, i128, i128, i128, i128, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]*, i128 }
%struct_template_circuit_fp12multiply = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvescalarmultiplyfp2 = type { i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, i128, [256 x [256 x [256 x [256 x i128]]]]*, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, i128 }
%struct_template_circuit_millerloop = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp12square = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvescalarmultiply = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128, [256 x [256 x [256 x i128]]]*, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_fp12cyclotomicdecompress = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12invert = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12exp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_millerloopfp2two = type { i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12cyclotomicexp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_finalexphardpart = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_blsmillerloop = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_finalexpeasypart = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_finalexponentiate = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_optimalatepairing = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_tatepairing = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }

@constraint = external global i1
@constraint.1 = external global i1
@constraint.2 = external global i1
@constraint.3 = external global i1
@constraint.4 = external global i1
@constraint.5 = external global i1
@constraint.6 = external global i1
@constraint.7 = external global i1
@constraint.8 = external global i1
@constraint.9 = external global i1
@constraint.10 = external global i1
@constraint.11 = external global i1
@constraint.12 = external global i1
@constraint.13 = external global i1
@constraint.14 = external global i1
@constraint.15 = external global i1
@constraint.16 = external global i1
@constraint.17 = external global i1
@constraint.18 = external global i1
@constraint.19 = external global i1
@constraint.20 = external global i1
@constraint.21 = external global i1
@constraint.22 = external global i1
@constraint.23 = external global i1
@constraint.24 = external global i1
@constraint.25 = external global i1
@constraint.26 = external global i1
@constraint.27 = external global i1
@constraint.28 = external global i1
@constraint.29 = external global i1
@constraint.30 = external global i1
@constraint.31 = external global i1
@constraint.32 = external global i1
@constraint.33 = external global i1
@constraint.34 = external global i1
@constraint.35 = external global i1
@constraint.36 = external global i1
@constraint.37 = external global i1
@constraint.38 = external global i1
@constraint.39 = external global i1
@constraint.40 = external global i1
@constraint.41 = external global i1
@constraint.42 = external global i1
@constraint.43 = external global i1
@constraint.44 = external global i1
@constraint.45 = external global i1
@constraint.46 = external global i1
@constraint.47 = external global i1
@constraint.48 = external global i1
@constraint.49 = external global i1
@constraint.50 = external global i1
@constraint.51 = external global i1
@constraint.52 = external global i1
@constraint.53 = external global i1
@constraint.54 = external global i1
@constraint.55 = external global i1
@constraint.56 = external global i1
@constraint.57 = external global i1
@constraint.58 = external global i1
@constraint.59 = external global i1
@constraint.60 = external global i1
@constraint.61 = external global i1
@constraint.62 = external global i1
@constraint.63 = external global i1
@constraint.64 = external global i1
@constraint.65 = external global i1
@constraint.66 = external global i1
@constraint.67 = external global i1
@constraint.68 = external global i1
@constraint.69 = external global i1
@constraint.70 = external global i1
@constraint.71 = external global i1
@constraint.72 = external global i1
@constraint.73 = external global i1
@constraint.74 = external global i1
@constraint.75 = external global i1
@constraint.76 = external global i1
@constraint.77 = external global i1
@constraint.78 = external global i1
@constraint.79 = external global i1
@constraint.80 = external global i1
@constraint.81 = external global i1
@constraint.82 = external global i1
@constraint.83 = external global i1
@constraint.84 = external global i1
@constraint.85 = external global i1
@constraint.86 = external global i1
@constraint.87 = external global i1
@constraint.88 = external global i1
@constraint.89 = external global i1
@constraint.90 = external global i1
@constraint.91 = external global i1
@constraint.92 = external global i1
@constraint.93 = external global i1
@constraint.94 = external global i1
@constraint.95 = external global i1
@constraint.96 = external global i1
@constraint.97 = external global i1
@constraint.98 = external global i1
@constraint.99 = external global i1
@constraint.100 = external global i1
@constraint.101 = external global i1
@constraint.102 = external global i1
@constraint.103 = external global i1
@constraint.104 = external global i1
@constraint.105 = external global i1
@constraint.106 = external global i1
@constraint.107 = external global i1
@constraint.108 = external global i1
@constraint.109 = external global i1
@constraint.110 = external global i1
@constraint.111 = external global i1
@constraint.112 = external global i1
@constraint.113 = external global i1
@constraint.114 = external global i1
@constraint.115 = external global i1
@constraint.116 = external global i1
@constraint.117 = external global i1
@constraint.118 = external global i1
@constraint.119 = external global i1
@constraint.120 = external global i1
@constraint.121 = external global i1
@constraint.122 = external global i1
@constraint.123 = external global i1
@constraint.124 = external global i1
@constraint.125 = external global i1
@constraint.126 = external global i1
@constraint.127 = external global i1
@constraint.128 = external global i1
@constraint.129 = external global i1
@constraint.130 = external global i1
@constraint.131 = external global i1
@constraint.132 = external global i1
@constraint.133 = external global i1
@constraint.134 = external global i1
@constraint.135 = external global i1
@constraint.136 = external global i1
@constraint.137 = external global i1
@constraint.138 = external global i1
@constraint.139 = external global i1
@constraint.140 = external global i1
@constraint.141 = external global i1
@constraint.142 = external global i1
@constraint.143 = external global i1
@constraint.144 = external global i1
@constraint.145 = external global i1
@constraint.146 = external global i1
@constraint.147 = external global i1
@constraint.148 = external global i1
@constraint.149 = external global i1
@constraint.150 = external global i1
@constraint.151 = external global i1
@constraint.152 = external global i1
@constraint.153 = external global i1
@constraint.154 = external global i1
@constraint.155 = external global i1
@constraint.156 = external global i1
@constraint.157 = external global i1
@constraint.158 = external global i1
@constraint.159 = external global i1
@constraint.160 = external global i1
@constraint.161 = external global i1
@constraint.162 = external global i1
@constraint.163 = external global i1
@constraint.164 = external global i1
@constraint.165 = external global i1
@constraint.166 = external global i1
@constraint.167 = external global i1
@constraint.168 = external global i1
@constraint.169 = external global i1
@constraint.170 = external global i1
@constraint.171 = external global i1
@constraint.172 = external global i1
@constraint.173 = external global i1
@constraint.174 = external global i1
@constraint.175 = external global i1
@constraint.176 = external global i1
@constraint.177 = external global i1
@constraint.178 = external global i1
@constraint.179 = external global i1
@constraint.180 = external global i1
@constraint.181 = external global i1
@constraint.182 = external global i1
@constraint.183 = external global i1
@constraint.184 = external global i1
@constraint.185 = external global i1
@constraint.186 = external global i1
@constraint.187 = external global i1
@constraint.188 = external global i1
@constraint.189 = external global i1
@constraint.190 = external global i1
@constraint.191 = external global i1
@constraint.192 = external global i1
@constraint.193 = external global i1
@constraint.194 = external global i1
@constraint.195 = external global i1
@constraint.196 = external global i1
@constraint.197 = external global i1
@constraint.198 = external global i1
@constraint.199 = external global i1
@constraint.200 = external global i1
@constraint.201 = external global i1
@constraint.202 = external global i1
@constraint.203 = external global i1
@constraint.204 = external global i1
@constraint.205 = external global i1
@constraint.206 = external global i1
@constraint.207 = external global i1
@constraint.208 = external global i1
@constraint.209 = external global i1
@constraint.210 = external global i1
@constraint.211 = external global i1
@constraint.212 = external global i1
@constraint.213 = external global i1
@constraint.214 = external global i1
@constraint.215 = external global i1
@constraint.216 = external global i1
@constraint.217 = external global i1
@constraint.218 = external global i1
@constraint.219 = external global i1
@constraint.220 = external global i1
@constraint.221 = external global i1
@constraint.222 = external global i1
@constraint.223 = external global i1
@constraint.224 = external global i1
@constraint.225 = external global i1
@constraint.226 = external global i1
@constraint.227 = external global i1
@constraint.228 = external global i1
@constraint.229 = external global i1
@constraint.230 = external global i1
@constraint.231 = external global i1
@constraint.232 = external global i1
@constraint.233 = external global i1
@constraint.234 = external global i1
@constraint.235 = external global i1
@constraint.236 = external global i1
@constraint.237 = external global i1
@constraint.238 = external global i1
@constraint.239 = external global i1
@constraint.240 = external global i1
@constraint.241 = external global i1
@constraint.242 = external global i1
@constraint.243 = external global i1
@constraint.244 = external global i1
@constraint.245 = external global i1
@constraint.246 = external global i1
@constraint.247 = external global i1
@constraint.248 = external global i1
@constraint.249 = external global i1
@constraint.250 = external global i1
@constraint.251 = external global i1
@constraint.252 = external global i1
@constraint.253 = external global i1
@constraint.254 = external global i1
@constraint.255 = external global i1
@constraint.256 = external global i1
@constraint.257 = external global i1
@constraint.258 = external global i1
@constraint.259 = external global i1
@constraint.260 = external global i1
@constraint.261 = external global i1
@constraint.262 = external global i1
@constraint.263 = external global i1
@constraint.264 = external global i1
@constraint.265 = external global i1
@constraint.266 = external global i1
@constraint.267 = external global i1
@constraint.268 = external global i1
@constraint.269 = external global i1
@constraint.270 = external global i1
@constraint.271 = external global i1
@constraint.272 = external global i1
@constraint.273 = external global i1
@constraint.274 = external global i1
@constraint.275 = external global i1
@constraint.276 = external global i1
@constraint.277 = external global i1
@constraint.278 = external global i1
@constraint.279 = external global i1
@constraint.280 = external global i1
@constraint.281 = external global i1
@constraint.282 = external global i1
@constraint.283 = external global i1
@constraint.284 = external global i1
@constraint.285 = external global i1
@constraint.286 = external global i1
@constraint.287 = external global i1
@constraint.288 = external global i1
@constraint.289 = external global i1
@constraint.290 = external global i1
@constraint.291 = external global i1
@constraint.292 = external global i1
@constraint.293 = external global i1
@constraint.294 = external global i1
@constraint.295 = external global i1
@constraint.296 = external global i1
@constraint.297 = external global i1
@constraint.298 = external global i1
@constraint.299 = external global i1
@constraint.300 = external global i1
@constraint.301 = external global i1
@constraint.302 = external global i1
@constraint.303 = external global i1
@constraint.304 = external global i1
@constraint.305 = external global i1
@constraint.306 = external global i1
@constraint.307 = external global i1
@constraint.308 = external global i1
@constraint.309 = external global i1
@constraint.310 = external global i1
@constraint.311 = external global i1
@constraint.312 = external global i1
@constraint.313 = external global i1
@constraint.314 = external global i1
@constraint.315 = external global i1
@constraint.316 = external global i1
@constraint.317 = external global i1
@constraint.318 = external global i1
@constraint.319 = external global i1
@constraint.320 = external global i1
@constraint.321 = external global i1
@constraint.322 = external global i1
@constraint.323 = external global i1
@constraint.324 = external global i1
@constraint.325 = external global i1
@constraint.326 = external global i1
@constraint.327 = external global i1
@constraint.328 = external global i1
@constraint.329 = external global i1
@constraint.330 = external global i1
@constraint.331 = external global i1
@constraint.332 = external global i1
@constraint.333 = external global i1
@constraint.334 = external global i1
@constraint.335 = external global i1
@constraint.336 = external global i1
@constraint.337 = external global i1
@constraint.338 = external global i1
@constraint.339 = external global i1
@constraint.340 = external global i1
@constraint.341 = external global i1
@constraint.342 = external global i1
@constraint.343 = external global i1
@constraint.344 = external global i1
@constraint.345 = external global i1
@constraint.346 = external global i1
@constraint.347 = external global i1
@constraint.348 = external global i1
@constraint.349 = external global i1
@constraint.350 = external global i1
@constraint.351 = external global i1
@constraint.352 = external global i1
@constraint.353 = external global i1
@constraint.354 = external global i1
@constraint.355 = external global i1
@constraint.356 = external global i1
@constraint.357 = external global i1
@constraint.358 = external global i1
@constraint.359 = external global i1
@constraint.360 = external global i1
@constraint.361 = external global i1
@constraint.362 = external global i1
@constraint.363 = external global i1
@constraint.364 = external global i1
@constraint.365 = external global i1
@constraint.366 = external global i1
@constraint.367 = external global i1
@constraint.368 = external global i1
@constraint.369 = external global i1
@constraint.370 = external global i1
@constraint.371 = external global i1
@constraint.372 = external global i1
@constraint.373 = external global i1
@constraint.374 = external global i1
@constraint.375 = external global i1
@constraint.376 = external global i1
@constraint.377 = external global i1
@constraint.378 = external global i1
@constraint.379 = external global i1
@constraint.380 = external global i1
@constraint.381 = external global i1
@constraint.382 = external global i1
@constraint.383 = external global i1
@constraint.384 = external global i1
@constraint.385 = external global i1
@constraint.386 = external global i1
@constraint.387 = external global i1
@constraint.388 = external global i1
@constraint.389 = external global i1
@constraint.390 = external global i1
@constraint.391 = external global i1
@constraint.392 = external global i1
@constraint.393 = external global i1
@constraint.394 = external global i1
@constraint.395 = external global i1
@constraint.396 = external global i1
@constraint.397 = external global i1
@constraint.398 = external global i1
@constraint.399 = external global i1
@constraint.400 = external global i1
@constraint.401 = external global i1
@constraint.402 = external global i1
@constraint.403 = external global i1
@constraint.404 = external global i1
@constraint.405 = external global i1
@constraint.406 = external global i1
@constraint.407 = external global i1
@constraint.408 = external global i1
@constraint.409 = external global i1
@constraint.410 = external global i1
@constraint.411 = external global i1
@constraint.412 = external global i1
@constraint.413 = external global i1
@constraint.414 = external global i1
@constraint.415 = external global i1
@constraint.416 = external global i1
@constraint.417 = external global i1
@constraint.418 = external global i1
@constraint.419 = external global i1
@constraint.420 = external global i1
@constraint.421 = external global i1
@constraint.422 = external global i1
@constraint.423 = external global i1
@constraint.424 = external global i1
@constraint.425 = external global i1
@constraint.426 = external global i1
@constraint.427 = external global i1
@constraint.428 = external global i1
@constraint.429 = external global i1
@constraint.430 = external global i1
@constraint.431 = external global i1
@constraint.432 = external global i1
@constraint.433 = external global i1
@constraint.434 = external global i1
@constraint.435 = external global i1
@constraint.436 = external global i1
@constraint.437 = external global i1
@constraint.438 = external global i1
@constraint.439 = external global i1
@constraint.440 = external global i1
@constraint.441 = external global i1
@constraint.442 = external global i1
@constraint.443 = external global i1
@constraint.444 = external global i1
@constraint.445 = external global i1
@constraint.446 = external global i1
@constraint.447 = external global i1
@constraint.448 = external global i1
@constraint.449 = external global i1
@constraint.450 = external global i1
@constraint.451 = external global i1
@constraint.452 = external global i1
@constraint.453 = external global i1
@constraint.454 = external global i1
@constraint.455 = external global i1
@constraint.456 = external global i1
@constraint.457 = external global i1
@constraint.458 = external global i1
@constraint.459 = external global i1
@constraint.460 = external global i1
@constraint.461 = external global i1
@constraint.462 = external global i1
@constraint.463 = external global i1
@constraint.464 = external global i1
@constraint.465 = external global i1
@constraint.466 = external global i1
@constraint.467 = external global i1
@constraint.468 = external global i1
@constraint.469 = external global i1
@constraint.470 = external global i1
@constraint.471 = external global i1
@constraint.472 = external global i1
@constraint.473 = external global i1
@constraint.474 = external global i1
@constraint.475 = external global i1
@constraint.476 = external global i1
@constraint.477 = external global i1
@constraint.478 = external global i1
@constraint.479 = external global i1
@constraint.480 = external global i1
@constraint.481 = external global i1
@constraint.482 = external global i1
@constraint.483 = external global i1
@constraint.484 = external global i1
@constraint.485 = external global i1
@constraint.486 = external global i1
@constraint.487 = external global i1
@constraint.488 = external global i1
@constraint.489 = external global i1
@constraint.490 = external global i1
@constraint.491 = external global i1
@constraint.492 = external global i1
@constraint.493 = external global i1
@constraint.494 = external global i1
@constraint.495 = external global i1
@constraint.496 = external global i1
@constraint.497 = external global i1
@constraint.498 = external global i1
@constraint.499 = external global i1
@constraint.500 = external global i1
@constraint.501 = external global i1
@constraint.502 = external global i1
@constraint.503 = external global i1
@constraint.504 = external global i1
@constraint.505 = external global i1
@constraint.506 = external global i1
@constraint.507 = external global i1
@constraint.508 = external global i1
@constraint.509 = external global i1
@constraint.510 = external global i1
@constraint.511 = external global i1
@constraint.512 = external global i1
@constraint.513 = external global i1
@constraint.514 = external global i1
@constraint.515 = external global i1
@constraint.516 = external global i1
@constraint.517 = external global i1
@constraint.518 = external global i1
@constraint.519 = external global i1
@constraint.520 = external global i1
@constraint.521 = external global i1
@constraint.522 = external global i1
@constraint.523 = external global i1
@constraint.524 = external global i1
@constraint.525 = external global i1
@constraint.526 = external global i1
@constraint.527 = external global i1
@constraint.528 = external global i1
@constraint.529 = external global i1
@constraint.530 = external global i1
@constraint.531 = external global i1
@constraint.532 = external global i1
@constraint.533 = external global i1
@constraint.534 = external global i1
@constraint.535 = external global i1
@constraint.536 = external global i1
@constraint.537 = external global i1
@constraint.538 = external global i1
@constraint.539 = external global i1
@constraint.540 = external global i1
@constraint.541 = external global i1
@constraint.542 = external global i1
@constraint.543 = external global i1
@constraint.544 = external global i1
@constraint.545 = external global i1
@constraint.546 = external global i1
@constraint.547 = external global i1
@constraint.548 = external global i1
@constraint.549 = external global i1
@constraint.550 = external global i1
@constraint.551 = external global i1
@constraint.552 = external global i1
@constraint.553 = external global i1
@constraint.554 = external global i1
@constraint.555 = external global i1
@constraint.556 = external global i1
@constraint.557 = external global i1
@constraint.558 = external global i1
@constraint.559 = external global i1
@constraint.560 = external global i1
@constraint.561 = external global i1
@constraint.562 = external global i1
@constraint.563 = external global i1
@constraint.564 = external global i1
@constraint.565 = external global i1
@constraint.566 = external global i1
@constraint.567 = external global i1
@constraint.568 = external global i1
@constraint.569 = external global i1
@constraint.570 = external global i1
@constraint.571 = external global i1
@constraint.572 = external global i1
@constraint.573 = external global i1
@constraint.574 = external global i1
@constraint.575 = external global i1
@constraint.576 = external global i1
@constraint.577 = external global i1
@constraint.578 = external global i1
@constraint.579 = external global i1
@constraint.580 = external global i1
@constraint.581 = external global i1
@constraint.582 = external global i1
@constraint.583 = external global i1
@constraint.584 = external global i1
@constraint.585 = external global i1
@constraint.586 = external global i1
@constraint.587 = external global i1
@constraint.588 = external global i1
@constraint.589 = external global i1
@constraint.590 = external global i1
@constraint.591 = external global i1
@constraint.592 = external global i1
@constraint.593 = external global i1
@constraint.594 = external global i1
@constraint.595 = external global i1
@constraint.596 = external global i1
@constraint.597 = external global i1
@constraint.598 = external global i1
@constraint.599 = external global i1
@constraint.600 = external global i1
@constraint.601 = external global i1
@constraint.602 = external global i1
@constraint.603 = external global i1
@constraint.604 = external global i1
@constraint.605 = external global i1
@constraint.606 = external global i1
@constraint.607 = external global i1
@constraint.608 = external global i1
@constraint.609 = external global i1
@constraint.610 = external global i1
@constraint.611 = external global i1
@constraint.612 = external global i1
@constraint.613 = external global i1
@constraint.614 = external global i1
@constraint.615 = external global i1
@constraint.616 = external global i1
@constraint.617 = external global i1
@constraint.618 = external global i1
@constraint.619 = external global i1
@constraint.620 = external global i1
@constraint.621 = external global i1
@constraint.622 = external global i1
@constraint.623 = external global i1
@constraint.624 = external global i1
@constraint.625 = external global i1
@constraint.626 = external global i1
@constraint.627 = external global i1
@constraint.628 = external global i1
@constraint.629 = external global i1
@constraint.630 = external global i1
@constraint.631 = external global i1
@constraint.632 = external global i1
@constraint.633 = external global i1
@constraint.634 = external global i1
@constraint.635 = external global i1
@constraint.636 = external global i1
@constraint.637 = external global i1
@constraint.638 = external global i1
@constraint.639 = external global i1
@constraint.640 = external global i1
@constraint.641 = external global i1
@constraint.642 = external global i1
@constraint.643 = external global i1
@constraint.644 = external global i1
@constraint.645 = external global i1
@constraint.646 = external global i1
@constraint.647 = external global i1
@constraint.648 = external global i1
@constraint.649 = external global i1
@constraint.650 = external global i1
@constraint.651 = external global i1
@constraint.652 = external global i1
@constraint.653 = external global i1
@constraint.654 = external global i1
@constraint.655 = external global i1
@constraint.656 = external global i1
@constraint.657 = external global i1
@constraint.658 = external global i1
@constraint.659 = external global i1
@constraint.660 = external global i1
@constraint.661 = external global i1
@constraint.662 = external global i1
@constraint.663 = external global i1
@constraint.664 = external global i1
@constraint.665 = external global i1
@constraint.666 = external global i1
@constraint.667 = external global i1
@constraint.668 = external global i1
@constraint.669 = external global i1
@constraint.670 = external global i1
@constraint.671 = external global i1
@constraint.672 = external global i1
@constraint.673 = external global i1
@constraint.674 = external global i1
@constraint.675 = external global i1
@constraint.676 = external global i1
@constraint.677 = external global i1
@constraint.678 = external global i1
@constraint.679 = external global i1
@constraint.680 = external global i1
@constraint.681 = external global i1
@constraint.682 = external global i1
@constraint.683 = external global i1
@constraint.684 = external global i1
@constraint.685 = external global i1
@constraint.686 = external global i1
@constraint.687 = external global i1
@constraint.688 = external global i1
@constraint.689 = external global i1
@constraint.690 = external global i1
@constraint.691 = external global i1
@constraint.692 = external global i1
@constraint.693 = external global i1
@constraint.694 = external global i1
@constraint.695 = external global i1
@constraint.696 = external global i1
@constraint.697 = external global i1
@constraint.698 = external global i1
@constraint.699 = external global i1
@constraint.700 = external global i1
@constraint.701 = external global i1
@constraint.702 = external global i1
@constraint.703 = external global i1
@constraint.704 = external global i1
@constraint.705 = external global i1
@constraint.706 = external global i1
@constraint.707 = external global i1
@constraint.708 = external global i1
@constraint.709 = external global i1
@constraint.710 = external global i1
@constraint.711 = external global i1
@constraint.712 = external global i1
@constraint.713 = external global i1
@constraint.714 = external global i1
@constraint.715 = external global i1
@constraint.716 = external global i1
@constraint.717 = external global i1
@constraint.718 = external global i1
@constraint.719 = external global i1
@constraint.720 = external global i1
@constraint.721 = external global i1
@constraint.722 = external global i1
@constraint.723 = external global i1
@constraint.724 = external global i1
@constraint.725 = external global i1
@constraint.726 = external global i1
@constraint.727 = external global i1
@constraint.728 = external global i1
@constraint.729 = external global i1
@constraint.730 = external global i1
@constraint.731 = external global i1
@constraint.732 = external global i1
@constraint.733 = external global i1
@constraint.734 = external global i1
@constraint.735 = external global i1
@constraint.736 = external global i1
@constraint.737 = external global i1
@constraint.738 = external global i1
@constraint.739 = external global i1
@constraint.740 = external global i1
@constraint.741 = external global i1
@constraint.742 = external global i1
@constraint.743 = external global i1
@constraint.744 = external global i1
@constraint.745 = external global i1
@constraint.746 = external global i1
@constraint.747 = external global i1
@constraint.748 = external global i1
@constraint.749 = external global i1
@constraint.750 = external global i1
@constraint.751 = external global i1
@constraint.752 = external global i1
@constraint.753 = external global i1
@constraint.754 = external global i1
@constraint.755 = external global i1
@constraint.756 = external global i1
@constraint.757 = external global i1
@constraint.758 = external global i1
@constraint.759 = external global i1
@constraint.760 = external global i1
@constraint.761 = external global i1
@constraint.762 = external global i1
@constraint.763 = external global i1
@constraint.764 = external global i1
@constraint.765 = external global i1
@constraint.766 = external global i1
@constraint.767 = external global i1
@constraint.768 = external global i1
@constraint.769 = external global i1
@constraint.770 = external global i1
@constraint.771 = external global i1
@constraint.772 = external global i1
@constraint.773 = external global i1
@constraint.774 = external global i1
@constraint.775 = external global i1
@constraint.776 = external global i1
@constraint.777 = external global i1
@constraint.778 = external global i1
@constraint.779 = external global i1
@constraint.780 = external global i1
@constraint.781 = external global i1
@constraint.782 = external global i1
@constraint.783 = external global i1
@constraint.784 = external global i1
@constraint.785 = external global i1
@constraint.786 = external global i1
@constraint.787 = external global i1
@constraint.788 = external global i1
@constraint.789 = external global i1
@constraint.790 = external global i1
@constraint.791 = external global i1
@constraint.792 = external global i1
@constraint.793 = external global i1
@constraint.794 = external global i1
@constraint.795 = external global i1
@constraint.796 = external global i1
@constraint.797 = external global i1
@constraint.798 = external global i1
@constraint.799 = external global i1
@constraint.800 = external global i1
@constraint.801 = external global i1
@constraint.802 = external global i1
@constraint.803 = external global i1
@constraint.804 = external global i1
@constraint.805 = external global i1
@constraint.806 = external global i1
@constraint.807 = external global i1
@constraint.808 = external global i1
@constraint.809 = external global i1
@constraint.810 = external global i1
@constraint.811 = external global i1
@constraint.812 = external global i1
@constraint.813 = external global i1
@constraint.814 = external global i1
@constraint.815 = external global i1
@constraint.816 = external global i1
@constraint.817 = external global i1
@constraint.818 = external global i1
@constraint.819 = external global i1
@constraint.820 = external global i1
@constraint.821 = external global i1
@constraint.822 = external global i1
@constraint.823 = external global i1
@constraint.824 = external global i1
@constraint.825 = external global i1
@constraint.826 = external global i1
@constraint.827 = external global i1
@constraint.828 = external global i1
@constraint.829 = external global i1
@constraint.830 = external global i1
@constraint.831 = external global i1
@constraint.832 = external global i1
@constraint.833 = external global i1
@constraint.834 = external global i1
@constraint.835 = external global i1
@constraint.836 = external global i1
@constraint.837 = external global i1
@constraint.838 = external global i1
@constraint.839 = external global i1
@constraint.840 = external global i1
@constraint.841 = external global i1
@constraint.842 = external global i1
@constraint.843 = external global i1
@constraint.844 = external global i1
@constraint.845 = external global i1
@constraint.846 = external global i1
@constraint.847 = external global i1
@constraint.848 = external global i1
@constraint.849 = external global i1
@constraint.850 = external global i1
@constraint.851 = external global i1
@constraint.852 = external global i1
@constraint.853 = external global i1
@constraint.854 = external global i1
@constraint.855 = external global i1
@constraint.856 = external global i1
@constraint.857 = external global i1
@constraint.858 = external global i1
@constraint.859 = external global i1
@constraint.860 = external global i1
@constraint.861 = external global i1
@constraint.862 = external global i1
@constraint.863 = external global i1
@constraint.864 = external global i1
@constraint.865 = external global i1
@constraint.866 = external global i1
@constraint.867 = external global i1
@constraint.868 = external global i1
@constraint.869 = external global i1
@constraint.870 = external global i1
@constraint.871 = external global i1
@constraint.872 = external global i1
@constraint.873 = external global i1
@constraint.874 = external global i1
@constraint.875 = external global i1
@constraint.876 = external global i1
@constraint.877 = external global i1
@constraint.878 = external global i1
@constraint.879 = external global i1
@constraint.880 = external global i1
@constraint.881 = external global i1
@constraint.882 = external global i1
@constraint.883 = external global i1
@constraint.884 = external global i1
@constraint.885 = external global i1
@constraint.886 = external global i1
@constraint.887 = external global i1
@constraint.888 = external global i1
@constraint.889 = external global i1
@constraint.890 = external global i1
@constraint.891 = external global i1
@constraint.892 = external global i1
@constraint.893 = external global i1
@constraint.894 = external global i1
@constraint.895 = external global i1
@constraint.896 = external global i1
@constraint.897 = external global i1
@constraint.898 = external global i1
@constraint.899 = external global i1
@constraint.900 = external global i1
@constraint.901 = external global i1
@constraint.902 = external global i1
@constraint.903 = external global i1
@constraint.904 = external global i1
@constraint.905 = external global i1
@constraint.906 = external global i1
@constraint.907 = external global i1
@constraint.908 = external global i1
@constraint.909 = external global i1
@constraint.910 = external global i1
@constraint.911 = external global i1
@constraint.912 = external global i1
@constraint.913 = external global i1
@constraint.914 = external global i1
@constraint.915 = external global i1
@constraint.916 = external global i1
@constraint.917 = external global i1
@constraint.918 = external global i1
@constraint.919 = external global i1
@constraint.920 = external global i1
@constraint.921 = external global i1
@constraint.922 = external global i1
@constraint.923 = external global i1
@constraint.924 = external global i1
@constraint.925 = external global i1
@constraint.926 = external global i1
@constraint.927 = external global i1
@constraint.928 = external global i1
@constraint.929 = external global i1
@constraint.930 = external global i1
@constraint.931 = external global i1
@constraint.932 = external global i1
@constraint.933 = external global i1
@constraint.934 = external global i1
@constraint.935 = external global i1
@constraint.936 = external global i1
@constraint.937 = external global i1
@constraint.938 = external global i1
@constraint.939 = external global i1
@constraint.940 = external global i1
@constraint.941 = external global i1
@constraint.942 = external global i1
@constraint.943 = external global i1
@constraint.944 = external global i1
@constraint.945 = external global i1
@constraint.946 = external global i1
@constraint.947 = external global i1
@constraint.948 = external global i1
@constraint.949 = external global i1
@constraint.950 = external global i1
@constraint.951 = external global i1
@constraint.952 = external global i1
@constraint.953 = external global i1
@constraint.954 = external global i1
@constraint.955 = external global i1
@constraint.956 = external global i1
@constraint.957 = external global i1
@constraint.958 = external global i1

define void @fn_intrinsic_utils_constraint(i128 %0, i128 %1, i1* %2) {
entry:
  %constraint = icmp eq i128 %0, %1
  store i1 %constraint, i1* %2, align 1
  ret void
}

define i128 @fn_intrinsic_utils_switch(i1 %0, i128 %1, i128 %2) {
entry:
  br i1 %0, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  ret i128 %1

if.false:                                         ; preds = %entry
  ret i128 %2
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare fp128 @llvm.powi.f128.i32(fp128, i32) #0

define i128 @fn_intrinsic_utils_powi(i128 %0, i128 %1) {
entry:
  %utils_powi.base = uitofp i128 %0 to fp128
  %utils_powi.power = trunc i128 %1 to i32
  %utils_powi.cal = call fp128 @llvm.powi.f128.i32(fp128 %utils_powi.base, i32 %utils_powi.power)
  %utils_powi.ret = fptoui fp128 %utils_powi.cal to i128
  ret i128 %utils_powi.ret
}

define i128 @fn_intrinsic_utils_init() {
entry:
  ret i128 0
}

define void @fn_intrinsic_utils_assert(i1 %0) {
entry:
  ret void
}

define void @fn_intrinsic_utils_arraydim(i128* %0, ...) {
entry:
  ret void
}

define [256 x [256 x [256 x i128]]]* @get_generator_G2(i128 %0, i128 %1) {
entry:
  %eq = icmp eq i128 %0, 55
  %eq2 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq2
  call void @fn_intrinsic_utils_assert(i1 %and)
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 95420233661880, i128 1773856045391785, i128 5044075188989616, i128 23082975677810779, i128 22805092780977487, i128 23121359448368568, i128 161253150172098, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %g23 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0
  %2 = bitcast [256 x i128]* %g23 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array4 = alloca [256 x i128], align 8
  store [256 x i128] [i128 12522360964131710, i128 27624298323292107, i128 31369054948478259, i128 20553930357265165, i128 32921944760061193, i128 30416570139545860, i128 1398625365433447, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array4, align 4
  %g26 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1
  %4 = bitcast [256 x i128]* %g26 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array7 = alloca [256 x i128], align 8
  store [256 x i128] [i128 5440959206139905, i128 5515662923731907, i128 10491004233861355, i128 28691331721860307, i128 27955817036233384, i128 18631882631076677, i128 907600843284315, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array7, align 4
  %g29 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 0
  %6 = bitcast [256 x i128]* %g29 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array10 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11548582681213374, i128 7404909498155861, i128 12768329608264924, i128 12731371725497493, i128 11463081752430568, i128 7184576637437304, i128 424072857758157, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array10, align 4
  %g212 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1
  %8 = bitcast [256 x i128]* %g212 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i2 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array4 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add106, %loop.latch ]
  %eq = icmp eq i128 %i.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a9 = load i128, i128* %array_getter, align 4
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b12 = load i128, i128* %array_getter11, align 4
  %sge = icmp sge i128 %a9, %b12
  br i1 %sge, label %if.true6, label %if.false7

if.false:                                         ; preds = %loop.body
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a46 = load i128, i128* %array_getter45, align 4
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b50 = load i128, i128* %array_getter49, align 4
  %sub53 = sub i128 %i.0, 1
  %array_getter54 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %sub53
  %borrow55 = load i128, i128* %array_getter54, align 4
  %add56 = add i128 %b50, %borrow55
  %sge57 = icmp sge i128 %a46, %add56
  br i1 %sge57, label %if.true41, label %if.false42

if.true6:                                         ; preds = %if.true
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a16 = load i128, i128* %array_getter15, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b20 = load i128, i128* %array_getter19, align 4
  %sub = sub i128 %a16, %b20
  %diff22 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sub, i128* %diff22, align 4
  %borrow25 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 0, i128* %borrow25, align 4
  br label %if.exit

if.false7:                                        ; preds = %if.true
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a29 = load i128, i128* %array_getter28, align 4
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b33 = load i128, i128* %array_getter32, align 4
  %sub34 = sub i128 %a29, %b33
  %lshift = shl i128 1, %0
  %add = add i128 %sub34, %lshift
  %diff37 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add, i128* %diff37, align 4
  %borrow40 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 1, i128* %borrow40, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false7, %if.true6
  br label %if.exit104

if.true41:                                        ; preds = %if.false
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a61 = load i128, i128* %array_getter60, align 4
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b65 = load i128, i128* %array_getter64, align 4
  %sub66 = sub i128 %a61, %b65
  %sub69 = sub i128 %i.0, 1
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %sub69
  %borrow71 = load i128, i128* %array_getter70, align 4
  %sub72 = sub i128 %sub66, %borrow71
  %diff75 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sub72, i128* %diff75, align 4
  %borrow78 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 0, i128* %borrow78, align 4
  br label %if.exit103

if.false42:                                       ; preds = %if.false
  %lshift80 = shl i128 1, %0
  %array_getter83 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a84 = load i128, i128* %array_getter83, align 4
  %add85 = add i128 %lshift80, %a84
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b89 = load i128, i128* %array_getter88, align 4
  %sub90 = sub i128 %add85, %b89
  %sub93 = sub i128 %i.0, 1
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %sub93
  %borrow95 = load i128, i128* %array_getter94, align 4
  %sub96 = sub i128 %sub90, %borrow95
  %diff99 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sub96, i128* %diff99, align 4
  %borrow102 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 1, i128* %borrow102, align 4
  br label %if.exit103

if.exit103:                                       ; preds = %if.false42, %if.true41
  br label %if.exit104

if.exit104:                                       ; preds = %if.exit103, %if.exit
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit104
  %add106 = add i128 %i.0, 1
  %slt = icmp slt i128 %add106, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x i128]* %uniform_array
}

define [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %temp2 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %out5 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %out5, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 50
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch33, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add35, %loop.latch33 ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %out11 = load i128, i128* %array_getter, align 4
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.1
  %b14 = load i128, i128* %array_getter13, align 4
  %mul = mul i128 %2, %b14
  %add15 = add i128 %out11, %mul
  %lshift = shl i128 1, %0
  %mod = srem i128 %add15, %lshift
  %out19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  store i128 %mod, i128* %out19, align 4
  %add22 = add i128 %i.1, 1
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add22
  %out24 = load i128, i128* %array_getter23, align 4
  %lshift27 = shl i128 1, %0
  %sdiv = sdiv i128 %add15, %lshift27
  %add28 = add i128 %out24, %sdiv
  %add31 = add i128 %i.1, 1
  %out32 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add31
  store i128 %add28, i128* %out32, align 4
  br label %loop.latch33

loop.latch33:                                     ; preds = %loop.body8
  %add35 = add i128 %i.1, 1
  %slt37 = icmp slt i128 %add35, %1
  br i1 %slt37, label %loop.body8, label %loop.exit38

loop.exit38:                                      ; preds = %loop.latch33
  ret [256 x i128]* %uniform_array
}

define [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %0, [256 x [256 x i128]]* %1, i128 %2) {
entry:
  %i2 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add25, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0, i128 %i.0
  %a4 = load i128, i128* %array_getter, align 4
  %mul = mul i128 %a4, %2
  %array_getter7 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 1, i128 %i.0
  %a8 = load i128, i128* %array_getter7, align 4
  %sub = sub i128 %mul, %a8
  %out10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.0
  store i128 %sub, i128* %out10, align 4
  %array_getter13 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0, i128 %i.0
  %a14 = load i128, i128* %array_getter13, align 4
  %array_getter17 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 1, i128 %i.0
  %a18 = load i128, i128* %array_getter17, align 4
  %mul20 = mul i128 %a18, %2
  %add = add i128 %a14, %mul20
  %out23 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %i.0
  store i128 %add, i128* %out23, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add25 = add i128 %i.0, 1
  %slt = icmp slt i128 %add25, %0
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x i128]]* %uniform_array
}

define i128 @nbits(i128 %0) {
entry:
  %n1 = call i128 @fn_intrinsic_utils_init()
  %r2 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %n.0 = phi i128 [ 1, %entry ], [ %mul, %loop.latch ]
  %r.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %add = add i128 %r.0, 1
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %mul = mul i128 %n.0, 2
  %sub = sub i128 %mul, 1
  %slt = icmp slt i128 %sub, %0
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 %add
}

define i128 @log_ceil(i128 %0) {
entry:
  %n_temp1 = call i128 @fn_intrinsic_utils_init()
  %i2 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %n_temp.0 = phi i128 [ %0, %entry ], [ %sdiv, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %eq = icmp eq i128 %n_temp.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  ret i128 %i.0

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false
  %sdiv = sdiv i128 %n_temp.0, 2
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 254
}

define [256 x [256 x i128]]* @get_generator_G1(i128 %0, i128 %1) {
entry:
  %eq = icmp eq i128 %0, 55
  %eq2 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq2
  call void @fn_intrinsic_utils_assert(i1 %and)
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 16589478066046651, i128 22658679592837110, i128 35004527604248919, i128 16789302793630161, i128 7530538873701625, i128 32234187716135413, i128 1684953952445941, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %g13 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %2 = bitcast [256 x i128]* %g13 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array4 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11860609209853921, i128 4091579406338073, i128 12578493816062195, i128 13088963032438982, i128 24961455755233629, i128 8501508834176643, i128 612415636564648, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array4, align 4
  %g16 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %4 = bitcast [256 x i128]* %g16 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define i128 @is_equal_Fp2(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %idx2 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch13, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add15, %loop.latch13 ]
  br label %loop.body3

loop.body3:                                       ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 %i.0, i128 %idx.0
  %a6 = load i128, i128* %array_getter, align 4
  %array_getter9 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %i.0, i128 %idx.0
  %b10 = load i128, i128* %array_getter9, align 4
  %ne = icmp ne i128 %a6, %b10
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body3
  ret i128 0

if.false:                                         ; preds = %loop.body3
  br label %if.exit

if.exit:                                          ; preds = %if.false
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body3, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch13

loop.latch13:                                     ; preds = %loop.exit
  %add15 = add i128 %i.0, 1
  %slt17 = icmp slt i128 %add15, 2
  br i1 %slt17, label %loop.body, label %loop.exit18

loop.exit18:                                      ; preds = %loop.latch13
  ret i128 1
}

define [256 x [256 x [256 x [256 x i128]]]]* @get_iso3_coeffs(i128 %0, i128 %1) {
entry:
  %eq = icmp eq i128 %0, 55
  %eq2 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq2
  call void @fn_intrinsic_utils_assert(i1 %and)
  %uniform_array = alloca [256 x [256 x [256 x [256 x i128]]]], align 8
  %eq4 = icmp eq i128 %0, 55
  %eq6 = icmp eq i128 %1, 7
  %and7 = and i1 %eq4, %eq6
  br i1 %and7, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 15950248680265686, i128 32024958503631044, i128 4244301805875352, i128 29783714120969249, i128 35703698803053471, i128 29228779030399226, i128 406640325010316, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %coeffs8 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0
  %2 = bitcast [256 x i128]* %coeffs8 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array9 = alloca [256 x i128], align 8
  store [256 x i128] [i128 15950248680265686, i128 32024958503631044, i128 4244301805875352, i128 29783714120969249, i128 35703698803053471, i128 29228779030399226, i128 406640325010316, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array9, align 4
  %coeffs11 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1
  %4 = bitcast [256 x i128]* %coeffs11 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array12, align 4
  %coeffs14 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0
  %6 = bitcast [256 x i128]* %coeffs14 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array15 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11821949021832986, i128 24017281472965197, i128 12732905417626058, i128 17293548324979811, i128 35053502371232479, i128 15628743053269744, i128 1219920975030950, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array15, align 4
  %coeffs17 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1
  %8 = bitcast [256 x i128]* %coeffs17 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array18 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11821949021832990, i128 24017281472965197, i128 12732905417626058, i128 17293548324979811, i128 35053502371232479, i128 15628743053269744, i128 1219920975030950, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array18, align 4
  %coeffs20 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0
  %10 = bitcast [256 x i128]* %coeffs20 to i8*
  %11 = bitcast [256 x i128]* %const_inline_array18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array21 = alloca [256 x i128], align 8
  store [256 x i128] [i128 23925373020398477, i128 12008640736482598, i128 24380851218295013, i128 26661172671971889, i128 17526751185616239, i128 7814371526634872, i128 609960487515475, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array21, align 4
  %coeffs23 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1
  %12 = bitcast [256 x i128]* %coeffs23 to i8*
  %13 = bitcast [256 x i128]* %const_inline_array21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array24 = alloca [256 x i128], align 8
  store [256 x i128] [i128 27772197702098641, i128 20013442957632273, i128 16977207223501411, i128 11048465426985092, i128 34728404155321983, i128 8828725064705003, i128 1626561300041267, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array24, align 4
  %coeffs26 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0
  %14 = bitcast [256 x i128]* %coeffs26 to i8*
  %15 = bitcast [256 x i128]* %const_inline_array24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array27 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array27, align 4
  %coeffs29 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1
  %16 = bitcast [256 x i128]* %coeffs29 to i8*
  %17 = bitcast [256 x i128]* %const_inline_array27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array30 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array30, align 4
  %coeffs32 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0
  %18 = bitcast [256 x i128]* %coeffs32 to i8*
  %19 = bitcast [256 x i128]* %const_inline_array30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array33 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231395, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array33, align 4
  %coeffs35 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1
  %20 = bitcast [256 x i128]* %coeffs35 to i8*
  %21 = bitcast [256 x i128]* %const_inline_array33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array36 = alloca [256 x i128], align 8
  store [256 x i128] [i128 12, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array36, align 4
  %coeffs38 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0
  %22 = bitcast [256 x i128]* %coeffs38 to i8*
  %23 = bitcast [256 x i128]* %const_inline_array36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array39 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231455, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array39, align 4
  %coeffs41 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1
  %24 = bitcast [256 x i128]* %coeffs41 to i8*
  %25 = bitcast [256 x i128]* %const_inline_array39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array42 = alloca [256 x i128], align 8
  store [256 x i128] [i128 1, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array42, align 4
  %coeffs44 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0
  %26 = bitcast [256 x i128]* %coeffs44 to i8*
  %27 = bitcast [256 x i128]* %const_inline_array42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array45 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array45, align 4
  %coeffs47 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1
  %28 = bitcast [256 x i128]* %coeffs47 to i8*
  %29 = bitcast [256 x i128]* %const_inline_array45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array48 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array48, align 4
  %coeffs50 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0
  %30 = bitcast [256 x i128]* %coeffs50 to i8*
  %31 = bitcast [256 x i128]* %const_inline_array48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array51 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array51, align 4
  %coeffs53 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1
  %32 = bitcast [256 x i128]* %coeffs53 to i8*
  %33 = bitcast [256 x i128]* %const_inline_array51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array54 = alloca [256 x i128], align 8
  store [256 x i128] [i128 22455448142010118, i128 21348055796076581, i128 27572038961197616, i128 1120560719995342, i128 22827171220970826, i128 11095397727559917, i128 1491014525037828, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array54, align 4
  %coeffs56 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0
  %34 = bitcast [256 x i128]* %coeffs56 to i8*
  %35 = bitcast [256 x i128]* %const_inline_array54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array57 = alloca [256 x i128], align 8
  store [256 x i128] [i128 22455448142010118, i128 21348055796076581, i128 27572038961197616, i128 1120560719995342, i128 22827171220970826, i128 11095397727559917, i128 1491014525037828, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array57, align 4
  %coeffs59 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1
  %36 = bitcast [256 x i128]* %coeffs59 to i8*
  %37 = bitcast [256 x i128]* %const_inline_array57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array60 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array60, align 4
  %coeffs62 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0
  %38 = bitcast [256 x i128]* %coeffs62 to i8*
  %39 = bitcast [256 x i128]* %const_inline_array60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array63 = alloca [256 x i128], align 8
  store [256 x i128] [i128 15950248680265662, i128 32024958503631044, i128 4244301805875352, i128 29783714120969249, i128 35703698803053471, i128 29228779030399226, i128 406640325010316, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array63, align 4
  %coeffs65 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1
  %40 = bitcast [256 x i128]* %coeffs65 to i8*
  %41 = bitcast [256 x i128]* %const_inline_array63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array66 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11821949021832988, i128 24017281472965197, i128 12732905417626058, i128 17293548324979811, i128 35053502371232479, i128 15628743053269744, i128 1219920975030950, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array66, align 4
  %coeffs68 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0
  %42 = bitcast [256 x i128]* %coeffs68 to i8*
  %43 = bitcast [256 x i128]* %const_inline_array66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array69 = alloca [256 x i128], align 8
  store [256 x i128] [i128 23925373020398479, i128 12008640736482598, i128 24380851218295013, i128 26661172671971889, i128 17526751185616239, i128 7814371526634872, i128 609960487515475, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array69, align 4
  %coeffs71 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1
  %44 = bitcast [256 x i128]* %coeffs71 to i8*
  %45 = bitcast [256 x i128]* %const_inline_array69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array72 = alloca [256 x i128], align 8
  store [256 x i128] [i128 14480323801877264, i128 5335576544261059, i128 7435489548777956, i128 4243102168992702, i128 4975321819444090, i128 32509805231324272, i128 1287694362532669, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array72, align 4
  %coeffs74 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0
  %46 = bitcast [256 x i128]* %coeffs74 to i8*
  %47 = bitcast [256 x i128]* %const_inline_array72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array75 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array75, align 4
  %coeffs77 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1
  %48 = bitcast [256 x i128]* %coeffs77 to i8*
  %49 = bitcast [256 x i128]* %const_inline_array75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array78 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231035, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array78, align 4
  %coeffs80 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0
  %50 = bitcast [256 x i128]* %coeffs80 to i8*
  %51 = bitcast [256 x i128]* %const_inline_array78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array81 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231035, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array81, align 4
  %coeffs83 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1
  %52 = bitcast [256 x i128]* %coeffs83 to i8*
  %53 = bitcast [256 x i128]* %const_inline_array81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array84 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array84, align 4
  %coeffs86 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0
  %54 = bitcast [256 x i128]* %coeffs86 to i8*
  %55 = bitcast [256 x i128]* %const_inline_array84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array87 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231251, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array87, align 4
  %coeffs89 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1
  %56 = bitcast [256 x i128]* %coeffs89 to i8*
  %57 = bitcast [256 x i128]* %const_inline_array87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array90 = alloca [256 x i128], align 8
  store [256 x i128] [i128 18, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array90, align 4
  %coeffs92 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0
  %58 = bitcast [256 x i128]* %coeffs92 to i8*
  %59 = bitcast [256 x i128]* %const_inline_array90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array93 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231449, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array93, align 4
  %coeffs95 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1
  %60 = bitcast [256 x i128]* %coeffs95 to i8*
  %61 = bitcast [256 x i128]* %const_inline_array93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array96 = alloca [256 x i128], align 8
  store [256 x i128] [i128 1, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array96, align 4
  %coeffs98 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0
  %62 = bitcast [256 x i128]* %coeffs98 to i8*
  %63 = bitcast [256 x i128]* %const_inline_array96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array99 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array99, align 4
  %coeffs101 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1
  %64 = bitcast [256 x i128]* %coeffs101 to i8*
  %65 = bitcast [256 x i128]* %const_inline_array99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  ret [256 x [256 x [256 x [256 x i128]]]]* %uniform_array
}

define void @fn_template_init_bits2num(%struct_template_circuit_bits2num* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 0
  %bits2num.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 1
  %bits2num.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %bits2num.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bits2num.in.read_input_inner, [256 x i128]** %bits2num.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %e22 = call i128 @fn_intrinsic_utils_init()
  %i3 = call i128 @fn_intrinsic_utils_init()
  %lc14 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %e2.0 = phi i128 [ 1, %entry ], [ %add11, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add13, %loop.latch ]
  %lc1.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %in = load [256 x i128]*, [256 x i128]** %bits2num.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in7 = load i128, i128* %array_getter, align 4
  %mul = mul i128 %in7, %e2.0
  %add = add i128 %lc1.0, %mul
  %add11 = add i128 %e2.0, %e2.0
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add13 = add i128 %i.0, 1
  %slt = icmp slt i128 %add13, %bits2num.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %add, i1* @constraint)
  %bits2num.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 2
  store i128 %add, i128* %bits2num.out.write_output_inner, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 2
  %bits2num.out.read_output_inner = load i128, i128* %struct_getter19, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %bits2num.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bits2num.n.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %bits2num.out.write_output_inner21 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 2
  store i128 %bits2num.out.read_output_inner, i128* %bits2num.out.write_output_inner21, align 4
  ret void
}

define %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 %0) {
entry:
  %struct_template_circuit_bits2num = alloca %struct_template_circuit_bits2num, align 8
  %bits2num.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %struct_template_circuit_bits2num, i32 0, i32 0
  store i128 %0, i128* %bits2num.n.write_arg_inner, align 4
  ret %struct_template_circuit_bits2num* %struct_template_circuit_bits2num
}

define [256 x i128]* @SplitThreeFn(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %var_inline_array = alloca [256 x i128], align 8
  %lshift = shl i128 1, %1
  %mod = srem i128 %0, %lshift
  %var_inline_array1 = getelementptr inbounds [256 x i128], [256 x i128]* %var_inline_array, i128 0, i128 0
  store i128 %mod, i128* %var_inline_array1, align 4
  %lshift4 = shl i128 1, %1
  %sdiv = sdiv i128 %0, %lshift4
  %lshift5 = shl i128 1, %2
  %mod6 = srem i128 %sdiv, %lshift5
  %var_inline_array7 = getelementptr inbounds [256 x i128], [256 x i128]* %var_inline_array, i128 0, i128 1
  store i128 %mod6, i128* %var_inline_array7, align 4
  %add = add i128 %1, %2
  %lshift11 = shl i128 1, %add
  %sdiv12 = sdiv i128 %0, %lshift11
  %lshift13 = shl i128 1, %3
  %mod14 = srem i128 %sdiv12, %lshift13
  %var_inline_array15 = getelementptr inbounds [256 x i128], [256 x i128]* %var_inline_array, i128 0, i128 2
  store i128 %mod14, i128* %var_inline_array15, align 4
  ret [256 x i128]* %var_inline_array
}

define [256 x [256 x [256 x i128]]]* @get_roots_of_unity(i128 %0, i128 %1) {
entry:
  %idx2 = call i128 @fn_intrinsic_utils_init()
  %eq = icmp eq i128 %0, 55
  %eq3 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq3
  call void @fn_intrinsic_utils_assert(i1 %and)
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %roots5 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0, i128 %idx.0
  store i128 0, i128* %roots5, align 4
  %roots8 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1, i128 %idx.0
  store i128 0, i128* %roots8, align 4
  %roots11 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 0, i128 %idx.0
  store i128 0, i128* %roots11, align 4
  %roots14 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1, i128 %idx.0
  store i128 0, i128* %roots14, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %roots19 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %roots19, align 4
  %roots21 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0
  store i128 1, i128* %roots21, align 4
  %eq23 = icmp eq i128 %0, 55
  %eq25 = icmp eq i128 %1, 7
  %and26 = and i1 %eq23, %eq25
  br i1 %and26, label %if.true, label %if.false

if.true:                                          ; preds = %loop.exit
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 4649817190157321, i128 14178090100713872, i128 25898210532243870, i128 6361890036890480, i128 6755281389607612, i128 401348527762810, i128 470331148861392, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %roots28 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 0
  %2 = bitcast [256 x i128]* %roots28 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array29 = alloca [256 x i128], align 8
  store [256 x i128] [i128 4649817190157321, i128 14178090100713872, i128 25898210532243870, i128 6361890036890480, i128 6755281389607612, i128 401348527762810, i128 470331148861392, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array29, align 4
  %roots31 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 1
  %4 = bitcast [256 x i128]* %roots31 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array32 = alloca [256 x i128], align 8
  store [256 x i128] [i128 4649817190157321, i128 14178090100713872, i128 25898210532243870, i128 6361890036890480, i128 6755281389607612, i128 401348527762810, i128 470331148861392, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array32, align 4
  %roots34 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 0
  %6 = bitcast [256 x i128]* %roots34 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array35 = alloca [256 x i128], align 8
  store [256 x i128] [i128 31097504852074146, i128 21847832108733923, i128 11215546103677201, i128 1564033941097252, i128 9796175148277139, i128 23041766052141807, i128 1359550313685033, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array35, align 4
  %roots37 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 1
  %8 = bitcast [256 x i128]* %roots37 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %loop.exit
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_bigmultshortlong2dunequal(%struct_template_circuit_bigmultshortlong2dunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 0
  %bigmultshortlong2dunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 1
  %bigmultshortlong2dunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 2
  %bigmultshortlong2dunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 3
  %bigmultshortlong2dunequal.la.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 4
  %bigmultshortlong2dunequal.lb.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %bigmultshortlong2dunequal.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_inner, [256 x [256 x i128]]** %bigmultshortlong2dunequal.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %bigmultshortlong2dunequal.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_inner, [256 x [256 x i128]]** %bigmultshortlong2dunequal.b.declare_input, align 8
  %deg27 = call i128 @fn_intrinsic_utils_init()
  %j28 = call i128 @fn_intrinsic_utils_init()
  %b_poly = alloca [256 x [256 x i128]]*, align 8
  %b_poly9 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %b_poly9, [256 x [256 x i128]]** %b_poly, align 8
  %i110 = call i128 @fn_intrinsic_utils_init()
  %j111 = call i128 @fn_intrinsic_utils_init()
  %deg112 = call i128 @fn_intrinsic_utils_init()
  %prod_val = alloca [256 x [256 x i128]]*, align 8
  %prod_val13 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %prod_val13, [256 x [256 x i128]]** %prod_val, align 8
  %bigmultshortlong2dunequal.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.declare_output, align 8
  %i14 = call i128 @fn_intrinsic_utils_init()
  %out_poly = alloca [256 x [256 x i128]]*, align 8
  %out_poly15 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %out_poly15, [256 x [256 x i128]]** %out_poly, align 8
  %a_poly = alloca [256 x [256 x i128]]*, align 8
  %a_poly16 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %a_poly16, [256 x [256 x i128]]** %a_poly, align 8
  %k217 = call i128 @fn_intrinsic_utils_init()
  %pow = alloca [256 x [256 x i128]]*, align 8
  %pow18 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %pow18, [256 x [256 x i128]]** %pow, align 8
  %j19 = call i128 @fn_intrinsic_utils_init()
  %i220 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub = sub i128 %add, 1
  %add25 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub26 = sub i128 %add25, 1
  %add29 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub30 = sub i128 %add29, 1
  %add33 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub34 = sub i128 %add33, 1
  %uniform_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]** %prod_val, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch46, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add48, %loop.latch46 ]
  br label %loop.body35

loop.body35:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add40, %loop.latch ]
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %prod_val38 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store i128 0, i128* %prod_val38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body35
  %add40 = add i128 %j.0, 1
  %add44 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub45 = sub i128 %add44, 1
  %slt = icmp slt i128 %add40, %sub45
  br i1 %slt, label %loop.body35, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch46

loop.latch46:                                     ; preds = %loop.exit
  %add48 = add i128 %i.0, 1
  %add52 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub53 = sub i128 %add52, 1
  %slt54 = icmp slt i128 %add48, %sub53
  br i1 %slt54, label %loop.body, label %loop.exit55

loop.exit55:                                      ; preds = %loop.latch46
  br label %loop.body56

loop.body56:                                      ; preds = %loop.latch104, %loop.exit55
  %i1.0 = phi i128 [ 0, %loop.exit55 ], [ %add106, %loop.latch104 ]
  br label %loop.body57

loop.body57:                                      ; preds = %loop.latch97, %loop.body56
  %i2.0 = phi i128 [ 0, %loop.body56 ], [ %add99, %loop.latch97 ]
  br label %loop.body58

loop.body58:                                      ; preds = %loop.latch90, %loop.body57
  %j1.0 = phi i128 [ 0, %loop.body57 ], [ %add92, %loop.latch90 ]
  br label %loop.body59

loop.body59:                                      ; preds = %loop.latch83, %loop.body58
  %j2.0 = phi i128 [ 0, %loop.body58 ], [ %add85, %loop.latch83 ]
  %add62 = add i128 %i1.0, %i2.0
  %add65 = add i128 %j1.0, %j2.0
  %prod_val66 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %prod_val66, i128 0, i128 %add62, i128 %add65
  %prod_val69 = load i128, i128* %array_getter, align 4
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.a.declare_input, align 8
  %array_getter72 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i1.0, i128 %j1.0
  %a73 = load i128, i128* %array_getter72, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.b.declare_input, align 8
  %array_getter76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i2.0, i128 %j2.0
  %b77 = load i128, i128* %array_getter76, align 4
  %mul = mul i128 %a73, %b77
  %add78 = add i128 %prod_val69, %mul
  %ptr_getter79 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %prod_val82 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter79, i128 0, i128 %add62, i128 %add65
  store i128 %add78, i128* %prod_val82, align 4
  br label %loop.latch83

loop.latch83:                                     ; preds = %loop.body59
  %add85 = add i128 %j2.0, 1
  %slt88 = icmp slt i128 %add85, %bigmultshortlong2dunequal.kb.read_arg_inner
  br i1 %slt88, label %loop.body59, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch83
  br label %loop.latch90

loop.latch90:                                     ; preds = %loop.exit89
  %add92 = add i128 %j1.0, 1
  %slt95 = icmp slt i128 %add92, %bigmultshortlong2dunequal.ka.read_arg_inner
  br i1 %slt95, label %loop.body58, label %loop.exit96

loop.exit96:                                      ; preds = %loop.latch90
  br label %loop.latch97

loop.latch97:                                     ; preds = %loop.exit96
  %add99 = add i128 %i2.0, 1
  %slt102 = icmp slt i128 %add99, %bigmultshortlong2dunequal.lb.read_arg_inner
  br i1 %slt102, label %loop.body57, label %loop.exit103

loop.exit103:                                     ; preds = %loop.latch97
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.exit103
  %add106 = add i128 %i1.0, 1
  %slt109 = icmp slt i128 %add106, %bigmultshortlong2dunequal.la.read_arg_inner
  br i1 %slt109, label %loop.body56, label %loop.exit110

loop.exit110:                                     ; preds = %loop.latch104
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch132, %loop.exit110
  %i.1 = phi i128 [ 0, %loop.exit110 ], [ %add134, %loop.latch132 ]
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch122, %loop.body111
  %j.1 = phi i128 [ 0, %loop.body111 ], [ %add124, %loop.latch122 ]
  %prod_val113 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %array_getter116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %prod_val113, i128 0, i128 %i.1, i128 %j.1
  %prod_val117 = load i128, i128* %array_getter116, align 4
  %ptr_getter118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.declare_output, align 8
  %out121 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter118, i128 0, i128 %i.1, i128 %j.1
  store i128 %prod_val117, i128* %out121, align 4
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.body112
  %add124 = add i128 %j.1, 1
  %add128 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub129 = sub i128 %add128, 1
  %slt130 = icmp slt i128 %add124, %sub129
  br i1 %slt130, label %loop.body112, label %loop.exit131

loop.exit131:                                     ; preds = %loop.latch122
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.exit131
  %add134 = add i128 %i.1, 1
  %add138 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub139 = sub i128 %add138, 1
  %slt140 = icmp slt i128 %add134, %sub139
  br i1 %slt140, label %loop.body111, label %loop.exit141

loop.exit141:                                     ; preds = %loop.latch132
  %add144 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub145 = sub i128 %add144, 1
  %add148 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub149 = sub i128 %add148, 1
  %sgt = icmp sgt i128 %sub145, %sub149
  %add152 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub153 = sub i128 %add152, 1
  %add156 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub157 = sub i128 %add156, 1
  %utils_switch = call i128 @fn_intrinsic_utils_switch(i1 %sgt, i128 %sub153, i128 %sub157)
  %uniform_array160 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array160, [256 x [256 x i128]]** %pow, align 8
  br label %loop.body161

loop.body161:                                     ; preds = %loop.latch178, %loop.exit141
  %i.2 = phi i128 [ 0, %loop.exit141 ], [ %add180, %loop.latch178 ]
  br label %loop.body162

loop.body162:                                     ; preds = %loop.latch170, %loop.body161
  %j.2 = phi i128 [ 0, %loop.body161 ], [ %add173, %loop.latch170 ]
  %pow165 = call i128 @fn_intrinsic_utils_powi(i128 %i.2, i128 %j.2)
  %ptr_getter166 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %pow169 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter166, i128 0, i128 %i.2, i128 %j.2
  store i128 %pow165, i128* %pow169, align 4
  br label %loop.latch170

loop.latch170:                                    ; preds = %loop.body162
  %add173 = add i128 %j.2, 1
  %slt176 = icmp slt i128 %add173, %utils_switch
  br i1 %slt176, label %loop.body162, label %loop.exit177

loop.exit177:                                     ; preds = %loop.latch170
  br label %loop.latch178

loop.latch178:                                    ; preds = %loop.exit177
  %add180 = add i128 %i.2, 1
  %slt183 = icmp slt i128 %add180, %utils_switch
  br i1 %slt183, label %loop.body161, label %loop.exit184

loop.exit184:                                     ; preds = %loop.latch178
  %add187 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub188 = sub i128 %add187, 1
  %add191 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub192 = sub i128 %add191, 1
  %uniform_array193 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array193, [256 x [256 x i128]]** %a_poly, align 8
  %add196 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub197 = sub i128 %add196, 1
  %add200 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub201 = sub i128 %add200, 1
  %uniform_array202 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array202, [256 x [256 x i128]]** %b_poly, align 8
  %add205 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub206 = sub i128 %add205, 1
  %add209 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub210 = sub i128 %add209, 1
  %uniform_array211 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array211, [256 x [256 x i128]]** %out_poly, align 8
  br label %loop.body212

loop.body212:                                     ; preds = %loop.latch364, %loop.exit184
  %i.3 = phi i128 [ 0, %loop.exit184 ], [ %add366, %loop.latch364 ]
  br label %loop.body213

loop.body213:                                     ; preds = %loop.latch354, %loop.body212
  %j.3 = phi i128 [ 0, %loop.body212 ], [ %add356, %loop.latch354 ]
  %ptr_getter214 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %a_poly217 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter214, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %a_poly217, align 4
  %ptr_getter218 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %b_poly221 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter218, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %b_poly221, align 4
  %ptr_getter222 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %out_poly225 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter222, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %out_poly225, align 4
  br label %loop.body226

loop.body226:                                     ; preds = %loop.latch344, %loop.body213
  %deg1.0 = phi i128 [ 0, %loop.body213 ], [ %add346, %loop.latch344 ]
  %slt229 = icmp slt i128 %deg1.0, %bigmultshortlong2dunequal.la.read_arg_inner
  br i1 %slt229, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body226
  br label %loop.body230

if.false:                                         ; preds = %loop.body226
  br label %if.exit

loop.body230:                                     ; preds = %loop.latch258, %if.true
  %deg2.0 = phi i128 [ 0, %if.true ], [ %add260, %loop.latch258 ]
  %a_poly231 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %array_getter234 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a_poly231, i128 0, i128 %i.3, i128 %j.3
  %a_poly235 = load i128, i128* %array_getter234, align 4
  %a236 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.a.declare_input, align 8
  %array_getter239 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a236, i128 0, i128 %deg1.0, i128 %deg2.0
  %a240 = load i128, i128* %array_getter239, align 4
  %pow241 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter244 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow241, i128 0, i128 %i.3, i128 %deg1.0
  %pow245 = load i128, i128* %array_getter244, align 4
  %mul246 = mul i128 %a240, %pow245
  %pow247 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter250 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow247, i128 0, i128 %j.3, i128 %deg2.0
  %pow251 = load i128, i128* %array_getter250, align 4
  %mul252 = mul i128 %mul246, %pow251
  %add253 = add i128 %a_poly235, %mul252
  %ptr_getter254 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %a_poly257 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter254, i128 0, i128 %i.3, i128 %j.3
  store i128 %add253, i128* %a_poly257, align 4
  br label %loop.latch258

loop.latch258:                                    ; preds = %loop.body230
  %add260 = add i128 %deg2.0, 1
  %slt263 = icmp slt i128 %add260, %bigmultshortlong2dunequal.ka.read_arg_inner
  br i1 %slt263, label %loop.body230, label %loop.exit264

loop.exit264:                                     ; preds = %loop.latch258
  br label %if.exit

if.exit:                                          ; preds = %loop.exit264, %if.false
  %slt269 = icmp slt i128 %deg1.0, %bigmultshortlong2dunequal.lb.read_arg_inner
  br i1 %slt269, label %if.true265, label %if.false266

if.true265:                                       ; preds = %if.exit
  br label %loop.body270

if.false266:                                      ; preds = %if.exit
  br label %if.exit305

loop.body270:                                     ; preds = %loop.latch298, %if.true265
  %deg2.1 = phi i128 [ 0, %if.true265 ], [ %add300, %loop.latch298 ]
  %b_poly271 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %array_getter274 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b_poly271, i128 0, i128 %i.3, i128 %j.3
  %b_poly275 = load i128, i128* %array_getter274, align 4
  %b276 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.b.declare_input, align 8
  %array_getter279 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b276, i128 0, i128 %deg1.0, i128 %deg2.1
  %b280 = load i128, i128* %array_getter279, align 4
  %pow281 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter284 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow281, i128 0, i128 %i.3, i128 %deg1.0
  %pow285 = load i128, i128* %array_getter284, align 4
  %mul286 = mul i128 %b280, %pow285
  %pow287 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter290 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow287, i128 0, i128 %j.3, i128 %deg2.1
  %pow291 = load i128, i128* %array_getter290, align 4
  %mul292 = mul i128 %mul286, %pow291
  %add293 = add i128 %b_poly275, %mul292
  %ptr_getter294 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %b_poly297 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter294, i128 0, i128 %i.3, i128 %j.3
  store i128 %add293, i128* %b_poly297, align 4
  br label %loop.latch298

loop.latch298:                                    ; preds = %loop.body270
  %add300 = add i128 %deg2.1, 1
  %slt303 = icmp slt i128 %add300, %bigmultshortlong2dunequal.kb.read_arg_inner
  br i1 %slt303, label %loop.body270, label %loop.exit304

loop.exit304:                                     ; preds = %loop.latch298
  br label %if.exit305

if.exit305:                                       ; preds = %loop.exit304, %if.false266
  br label %loop.body306

loop.body306:                                     ; preds = %loop.latch334, %if.exit305
  %deg2.2 = phi i128 [ 0, %if.exit305 ], [ %add336, %loop.latch334 ]
  %out_poly307 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %array_getter310 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out_poly307, i128 0, i128 %i.3, i128 %j.3
  %out_poly311 = load i128, i128* %array_getter310, align 4
  %out312 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.declare_output, align 8
  %array_getter315 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out312, i128 0, i128 %deg1.0, i128 %deg2.2
  %out316 = load i128, i128* %array_getter315, align 4
  %pow317 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter320 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow317, i128 0, i128 %i.3, i128 %deg1.0
  %pow321 = load i128, i128* %array_getter320, align 4
  %mul322 = mul i128 %out316, %pow321
  %pow323 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter326 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow323, i128 0, i128 %j.3, i128 %deg2.2
  %pow327 = load i128, i128* %array_getter326, align 4
  %mul328 = mul i128 %mul322, %pow327
  %add329 = add i128 %out_poly311, %mul328
  %ptr_getter330 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %out_poly333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter330, i128 0, i128 %i.3, i128 %j.3
  store i128 %add329, i128* %out_poly333, align 4
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.body306
  %add336 = add i128 %deg2.2, 1
  %add340 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub341 = sub i128 %add340, 1
  %slt342 = icmp slt i128 %add336, %sub341
  br i1 %slt342, label %loop.body306, label %loop.exit343

loop.exit343:                                     ; preds = %loop.latch334
  br label %loop.latch344

loop.latch344:                                    ; preds = %loop.exit343
  %add346 = add i128 %deg1.0, 1
  %add350 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub351 = sub i128 %add350, 1
  %slt352 = icmp slt i128 %add346, %sub351
  br i1 %slt352, label %loop.body226, label %loop.exit353

loop.exit353:                                     ; preds = %loop.latch344
  br label %loop.latch354

loop.latch354:                                    ; preds = %loop.exit353
  %add356 = add i128 %j.3, 1
  %add360 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub361 = sub i128 %add360, 1
  %slt362 = icmp slt i128 %add356, %sub361
  br i1 %slt362, label %loop.body213, label %loop.exit363

loop.exit363:                                     ; preds = %loop.latch354
  br label %loop.latch364

loop.latch364:                                    ; preds = %loop.exit363
  %add366 = add i128 %i.3, 1
  %add370 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub371 = sub i128 %add370, 1
  %slt372 = icmp slt i128 %add366, %sub371
  br i1 %slt372, label %loop.body212, label %loop.exit373

loop.exit373:                                     ; preds = %loop.latch364
  br label %loop.body374

loop.body374:                                     ; preds = %loop.latch402, %loop.exit373
  %i.4 = phi i128 [ 0, %loop.exit373 ], [ %add404, %loop.latch402 ]
  br label %loop.body375

loop.body375:                                     ; preds = %loop.latch392, %loop.body374
  %j.4 = phi i128 [ 0, %loop.body374 ], [ %add394, %loop.latch392 ]
  %out_poly376 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %array_getter379 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out_poly376, i128 0, i128 %i.4, i128 %j.4
  %out_poly380 = load i128, i128* %array_getter379, align 4
  %a_poly381 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %array_getter384 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a_poly381, i128 0, i128 %i.4, i128 %j.4
  %a_poly385 = load i128, i128* %array_getter384, align 4
  %b_poly386 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %array_getter389 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b_poly386, i128 0, i128 %i.4, i128 %j.4
  %b_poly390 = load i128, i128* %array_getter389, align 4
  %mul391 = mul i128 %a_poly385, %b_poly390
  call void @fn_intrinsic_utils_constraint(i128 %out_poly380, i128 %mul391, i1* @constraint.1)
  br label %loop.latch392

loop.latch392:                                    ; preds = %loop.body375
  %add394 = add i128 %j.4, 1
  %add398 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub399 = sub i128 %add398, 1
  %slt400 = icmp slt i128 %add394, %sub399
  br i1 %slt400, label %loop.body375, label %loop.exit401

loop.exit401:                                     ; preds = %loop.latch392
  br label %loop.latch402

loop.latch402:                                    ; preds = %loop.exit401
  %add404 = add i128 %i.4, 1
  %add408 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub409 = sub i128 %add408, 1
  %slt410 = icmp slt i128 %add404, %sub409
  br i1 %slt410, label %loop.body374, label %loop.exit411

loop.exit411:                                     ; preds = %loop.latch402
  br label %arraydim

arraydim:                                         ; preds = %loop.exit411
  %ptr_cast = bitcast [256 x [256 x i128]]** %bigmultshortlong2dunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigmultshortlong2dunequal.la.read_arg_inner, i128 %bigmultshortlong2dunequal.ka.read_arg_inner)
  %ptr_cast412 = bitcast [256 x [256 x i128]]** %prod_val to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast412, i128 %sub30, i128 %sub34)
  %ptr_cast413 = bitcast [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast413, i128 %sub, i128 %sub26)
  %ptr_cast414 = bitcast [256 x [256 x i128]]** %pow to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast414, i128 %utils_switch, i128 %utils_switch)
  %ptr_cast415 = bitcast [256 x [256 x i128]]** %a_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast415, i128 %sub188, i128 %sub192)
  %ptr_cast416 = bitcast [256 x [256 x i128]]** %b_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast416, i128 %sub197, i128 %sub201)
  %ptr_cast417 = bitcast [256 x [256 x i128]]** %bigmultshortlong2dunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast417, i128 %bigmultshortlong2dunequal.lb.read_arg_inner, i128 %bigmultshortlong2dunequal.kb.read_arg_inner)
  %ptr_cast418 = bitcast [256 x [256 x i128]]** %out_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast418, i128 %sub206, i128 %sub210)
  br label %exit

exit:                                             ; preds = %arraydim
  %out419 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.declare_output, align 8
  %bigmultshortlong2dunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %out419, [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %0, i128 %1, i128 %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_bigmultshortlong2dunequal = alloca %struct_template_circuit_bigmultshortlong2dunequal, align 8
  %bigmultshortlong2dunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlong2dunequal.n.write_arg_inner, align 4
  %bigmultshortlong2dunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlong2dunequal.ka.write_arg_inner, align 4
  %bigmultshortlong2dunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlong2dunequal.kb.write_arg_inner, align 4
  %bigmultshortlong2dunequal.la.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 3
  store i128 %3, i128* %bigmultshortlong2dunequal.la.write_arg_inner, align 4
  %bigmultshortlong2dunequal.lb.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 4
  store i128 %4, i128* %bigmultshortlong2dunequal.lb.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal
}

define void @fn_template_init_or(%struct_template_circuit_or* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 0
  %or.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 1
  %or.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %or.a.read_input_inner, %or.b.read_input_inner
  %mul = mul i128 %or.a.read_input_inner, %or.b.read_input_inner
  %sub = sub i128 %add, %mul
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub, i1* @constraint.2)
  %or.out.write_output_inner = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 2
  store i128 %sub, i128* %or.out.write_output_inner, align 4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 2
  %or.out.read_output_inner = load i128, i128* %struct_getter6, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %or.out.write_output_inner8 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 2
  store i128 %or.out.read_output_inner, i128* %or.out.write_output_inner8, align 4
  ret void
}

define %struct_template_circuit_or* @fn_template_build_or() {
entry:
  %struct_template_circuit_or = alloca %struct_template_circuit_or, align 8
  ret %struct_template_circuit_or* %struct_template_circuit_or
}

define [256 x [256 x [256 x [256 x i128]]]]* @get_Fp12_frobenius(i128 %0, i128 %1) {
entry:
  %eq = icmp eq i128 %0, 96
  %eq2 = icmp eq i128 %1, 4
  %and = and i1 %eq, %eq2
  %eq4 = icmp eq i128 %0, 77
  %eq6 = icmp eq i128 %1, 5
  %and7 = and i1 %eq4, %eq6
  %or = and i1 %and, %and7
  %eq9 = icmp eq i128 %0, 55
  %eq11 = icmp eq i128 %1, 7
  %and12 = and i1 %eq9, %eq11
  %or13 = and i1 %or, %and12
  call void @fn_intrinsic_utils_assert(i1 %or13)
  %uniform_array = alloca [256 x [256 x [256 x [256 x i128]]]], align 8
  %eq15 = icmp eq i128 %0, 96
  %eq17 = icmp eq i128 %1, 4
  %and18 = and i1 %eq15, %eq17
  br i1 %and18, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %coeff19 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff19, align 4
  %coeff21 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff21, align 4
  %coeff23 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff23, align 4
  %coeff25 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff25, align 4
  %coeff27 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff27, align 4
  %coeff29 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff29, align 4
  %coeff31 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff31, align 4
  %coeff33 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff33, align 4
  %coeff35 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 0
  store i128 1, i128* %coeff35, align 4
  %coeff37 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 1
  store i128 0, i128* %coeff37, align 4
  %coeff39 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 2
  store i128 0, i128* %coeff39, align 4
  %coeff41 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 3
  store i128 0, i128* %coeff41, align 4
  %coeff43 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff43, align 4
  %coeff45 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff45, align 4
  %coeff47 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff47, align 4
  %coeff49 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff49, align 4
  %coeff51 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff51, align 4
  %coeff53 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff53, align 4
  %coeff55 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff55, align 4
  %coeff57 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff57, align 4
  %coeff59 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff59, align 4
  %coeff61 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff61, align 4
  %coeff63 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff63, align 4
  %coeff65 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff65, align 4
  %coeff67 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff67, align 4
  %coeff69 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff69, align 4
  %coeff71 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff71, align 4
  %coeff73 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff73, align 4
  %coeff75 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff75, align 4
  %coeff77 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff77, align 4
  %coeff79 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff79, align 4
  %coeff81 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff81, align 4
  %coeff83 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff83, align 4
  %coeff85 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff85, align 4
  %coeff87 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff87, align 4
  %coeff89 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff89, align 4
  %coeff91 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff91, align 4
  %coeff93 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff93, align 4
  %coeff95 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff95, align 4
  %coeff97 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff97, align 4
  %coeff99 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 0
  store i128 1, i128* %coeff99, align 4
  %coeff101 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 1
  store i128 0, i128* %coeff101, align 4
  %coeff103 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 2
  store i128 0, i128* %coeff103, align 4
  %coeff105 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 3
  store i128 0, i128* %coeff105, align 4
  %coeff107 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff107, align 4
  %coeff109 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff109, align 4
  %coeff111 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff111, align 4
  %coeff113 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff113, align 4
  %coeff115 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff115, align 4
  %coeff117 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff117, align 4
  %coeff119 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff119, align 4
  %coeff121 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff121, align 4
  %coeff123 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff123, align 4
  %coeff125 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff125, align 4
  %coeff127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff127, align 4
  %coeff129 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff129, align 4
  %coeff131 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 0
  store i128 10162220749080420597, i128* %coeff131, align 4
  %coeff133 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 1
  store i128 9564161016340867348, i128* %coeff133, align 4
  %coeff135 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 2
  store i128 1141103942305410158, i128* %coeff135, align 4
  %coeff137 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 3
  store i128 196758051849933427, i128* %coeff137, align 4
  %coeff139 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 0
  store i128 3240210269972515253, i128* %coeff139, align 4
  %coeff141 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 1
  store i128 8211817353910544778, i128* %coeff141, align 4
  %coeff143 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 2
  store i128 6098234019238335271, i128* %coeff143, align 4
  %coeff145 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 3
  store i128 3946525681149945645, i128* %coeff145, align 4
  %coeff147 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff147, align 4
  %coeff149 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff149, align 4
  %coeff151 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff151, align 4
  %coeff153 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff153, align 4
  %coeff155 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 0
  store i128 10087218741710072489, i128* %coeff155, align 4
  %coeff157 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 1
  store i128 1132760428998381904, i128* %coeff157, align 4
  %coeff159 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 2
  store i128 12253596937043474777, i128* %coeff159, align 4
  %coeff161 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 3
  store i128 4143283731404378736, i128* %coeff161, align 4
  %coeff163 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff163, align 4
  %coeff165 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff165, align 4
  %coeff167 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff167, align 4
  %coeff169 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff169, align 4
  %coeff171 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff171, align 4
  %coeff173 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff173, align 4
  %coeff175 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff175, align 4
  %coeff177 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff177, align 4
  %coeff179 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff179, align 4
  %coeff181 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff181, align 4
  %coeff183 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff183, align 4
  %coeff185 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff185, align 4
  %coeff187 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff187, align 4
  %coeff189 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff189, align 4
  %coeff191 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff191, align 4
  %coeff193 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff193, align 4
  %coeff195 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 0
  store i128 11175958356731299912, i128* %coeff195, align 4
  %coeff197 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 1
  store i128 10276094391070563771, i128* %coeff197, align 4
  %coeff199 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 2
  store i128 17552803892972843059, i128* %coeff199, align 4
  %coeff201 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 3
  store i128 88488527846361668, i128* %coeff201, align 4
  %coeff203 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 0
  store i128 2226472662321635938, i128* %coeff203, align 4
  %coeff205 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 1
  store i128 7499883979180848355, i128* %coeff205, align 4
  %coeff207 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 2
  store i128 8133278146575421281, i128* %coeff207, align 4
  %coeff209 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 3
  store i128 4054795205153517403, i128* %coeff209, align 4
  %coeff211 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff211, align 4
  %coeff213 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff213, align 4
  %coeff215 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff215, align 4
  %coeff217 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff217, align 4
  %coeff219 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff219, align 4
  %coeff221 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff221, align 4
  %coeff223 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff223, align 4
  %coeff225 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff225, align 4
  %coeff227 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff227, align 4
  %coeff229 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff229, align 4
  %coeff231 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff231, align 4
  %coeff233 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 3
  store i128 1595500335, i128* %coeff233, align 4
  %coeff235 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff235, align 4
  %coeff237 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff237, align 4
  %coeff239 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff239, align 4
  %coeff241 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff241, align 4
  %coeff243 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff243, align 4
  %coeff245 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff245, align 4
  %coeff247 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff247, align 4
  %coeff249 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 3
  store i128 1595500335, i128* %coeff249, align 4
  %coeff251 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff251, align 4
  %coeff253 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff253, align 4
  %coeff255 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff255, align 4
  %coeff257 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff257, align 4
  %coeff259 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff259, align 4
  %coeff261 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff261, align 4
  %coeff263 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff263, align 4
  %coeff265 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff265, align 4
  %coeff267 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff267, align 4
  %coeff269 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff269, align 4
  %coeff271 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff271, align 4
  %coeff273 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff273, align 4
  %coeff275 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff275, align 4
  %coeff277 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff277, align 4
  %coeff279 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff279, align 4
  %coeff281 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff281, align 4
  %coeff283 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff283, align 4
  %coeff285 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff285, align 4
  %coeff287 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff287, align 4
  %coeff289 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff289, align 4
  %coeff291 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff291, align 4
  %coeff293 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff293, align 4
  %coeff295 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff295, align 4
  %coeff297 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff297, align 4
  %coeff299 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff299, align 4
  %coeff301 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff301, align 4
  %coeff303 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff303, align 4
  %coeff305 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff305, align 4
  %coeff307 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff307, align 4
  %coeff309 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff309, align 4
  %coeff311 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff311, align 4
  %coeff313 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff313, align 4
  %coeff315 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff315, align 4
  %coeff317 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff317, align 4
  %coeff319 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff319, align 4
  %coeff321 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff321, align 4
  %coeff323 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff323, align 4
  %coeff325 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff325, align 4
  %coeff327 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff327, align 4
  %coeff329 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff329, align 4
  %coeff331 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff331, align 4
  %coeff333 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff333, align 4
  %coeff335 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff335, align 4
  %coeff337 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff337, align 4
  %coeff339 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff339, align 4
  %coeff341 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff341, align 4
  %coeff343 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff343, align 4
  %coeff345 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff345, align 4
  %coeff347 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff347, align 4
  %coeff349 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff349, align 4
  %coeff351 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff351, align 4
  %coeff353 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff353, align 4
  %coeff355 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff355, align 4
  %coeff357 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff357, align 4
  %coeff359 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff359, align 4
  %coeff361 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff361, align 4
  %coeff363 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff363, align 4
  %coeff365 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff365, align 4
  %coeff367 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff367, align 4
  %coeff369 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff369, align 4
  %coeff371 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff371, align 4
  %coeff373 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff373, align 4
  %coeff375 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff375, align 4
  %coeff377 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff377, align 4
  %coeff379 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff379, align 4
  %coeff381 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff381, align 4
  %coeff383 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff383, align 4
  %coeff385 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff385, align 4
  %coeff387 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff387, align 4
  %coeff389 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff389, align 4
  %coeff391 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff391, align 4
  %coeff393 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff393, align 4
  %coeff395 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff395, align 4
  %coeff397 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff397, align 4
  %coeff399 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff399, align 4
  %coeff401 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff401, align 4
  %coeff403 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff403, align 4
  %coeff405 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff405, align 4
  %coeff407 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff407, align 4
  %coeff409 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff409, align 4
  %coeff411 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff411, align 4
  %coeff413 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff413, align 4
  %coeff415 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff415, align 4
  %coeff417 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff417, align 4
  %coeff419 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff419, align 4
  %coeff421 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff421, align 4
  %coeff423 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff423, align 4
  %coeff425 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 3
  store i128 1595500335, i128* %coeff425, align 4
  %coeff427 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff427, align 4
  %coeff429 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff429, align 4
  %coeff431 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff431, align 4
  %coeff433 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff433, align 4
  %coeff435 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff435, align 4
  %coeff437 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff437, align 4
  %coeff439 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff439, align 4
  %coeff441 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff441, align 4
  %coeff443 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff443, align 4
  %coeff445 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff445, align 4
  %coeff447 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff447, align 4
  %coeff449 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff449, align 4
  %coeff451 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff451, align 4
  %coeff453 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff453, align 4
  %coeff455 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff455, align 4
  %coeff457 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff457, align 4
  %coeff459 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff459, align 4
  %coeff461 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff461, align 4
  %coeff463 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff463, align 4
  %coeff465 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff465, align 4
  %coeff467 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff467, align 4
  %coeff469 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff469, align 4
  %coeff471 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff471, align 4
  %coeff473 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff473, align 4
  %coeff475 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff475, align 4
  %coeff477 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff477, align 4
  %coeff479 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff479, align 4
  %coeff481 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff481, align 4
  %coeff483 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff483, align 4
  %coeff485 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff485, align 4
  %coeff487 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff487, align 4
  %coeff489 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff489, align 4
  %coeff491 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff491, align 4
  %coeff493 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff493, align 4
  %coeff495 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff495, align 4
  %coeff497 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff497, align 4
  %coeff499 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff499, align 4
  %coeff501 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff501, align 4
  %coeff503 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff503, align 4
  %coeff505 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff505, align 4
  %coeff507 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff507, align 4
  %coeff509 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff509, align 4
  %coeff511 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff511, align 4
  %coeff513 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff513, align 4
  %coeff515 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 0
  store i128 2226472662321635938, i128* %coeff515, align 4
  %coeff517 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 1
  store i128 7499883979180848355, i128* %coeff517, align 4
  %coeff519 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 2
  store i128 8133278146575421281, i128* %coeff519, align 4
  %coeff521 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 3
  store i128 4054795205153517403, i128* %coeff521, align 4
  %coeff523 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 0
  store i128 11175958356731299912, i128* %coeff523, align 4
  %coeff525 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 1
  store i128 10276094391070563771, i128* %coeff525, align 4
  %coeff527 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 2
  store i128 17552803892972843059, i128* %coeff527, align 4
  %coeff529 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 3
  store i128 88488527846361668, i128* %coeff529, align 4
  %coeff531 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff531, align 4
  %coeff533 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff533, align 4
  %coeff535 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff535, align 4
  %coeff537 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff537, align 4
  %coeff539 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 0
  store i128 3315212277342863360, i128* %coeff539, align 4
  %coeff541 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 1
  store i128 16643217941253030222, i128* %coeff541, align 4
  %coeff543 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 2
  store i128 13432485102504789563, i128* %coeff543, align 4
  %coeff545 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 3
  store i128 1595500335, i128* %coeff545, align 4
  %coeff547 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff547, align 4
  %coeff549 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff549, align 4
  %coeff551 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff551, align 4
  %coeff553 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff553, align 4
  %coeff555 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff555, align 4
  %coeff557 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff557, align 4
  %coeff559 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff559, align 4
  %coeff561 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff561, align 4
  %coeff563 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff563, align 4
  %coeff565 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff565, align 4
  %coeff567 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff567, align 4
  %coeff569 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff569, align 4
  %coeff571 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff571, align 4
  %coeff573 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff573, align 4
  %coeff575 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff575, align 4
  %coeff577 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff577, align 4
  %coeff579 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 0
  store i128 3240210269972515253, i128* %coeff579, align 4
  %coeff581 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 1
  store i128 8211817353910544778, i128* %coeff581, align 4
  %coeff583 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 2
  store i128 6098234019238335271, i128* %coeff583, align 4
  %coeff585 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 3
  store i128 3946525681149945645, i128* %coeff585, align 4
  %coeff587 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 0
  store i128 10162220749080420597, i128* %coeff587, align 4
  %coeff589 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 1
  store i128 9564161016340867348, i128* %coeff589, align 4
  %coeff591 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 2
  store i128 1141103942305410158, i128* %coeff591, align 4
  %coeff593 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 3
  store i128 196758051849933427, i128* %coeff593, align 4
  %coeff595 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff595, align 4
  %coeff597 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff597, align 4
  %coeff599 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff599, align 4
  %coeff601 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff601, align 4
  %coeff603 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff603, align 4
  %coeff605 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff605, align 4
  %coeff607 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff607, align 4
  %coeff609 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff609, align 4
  %coeff611 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff611, align 4
  %coeff613 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff613, align 4
  %coeff615 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff615, align 4
  %coeff617 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff617, align 4
  %coeff619 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff619, align 4
  %coeff621 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff621, align 4
  %coeff623 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff623, align 4
  %coeff625 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff625, align 4
  %coeff627 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff627, align 4
  %coeff629 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff629, align 4
  %coeff631 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff631, align 4
  %coeff633 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff633, align 4
  %coeff635 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff635, align 4
  %coeff637 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff637, align 4
  %coeff639 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff639, align 4
  %coeff641 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff641, align 4
  %coeff643 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff643, align 4
  %coeff645 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff645, align 4
  %coeff647 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff647, align 4
  %coeff649 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff649, align 4
  %coeff651 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff651, align 4
  %coeff653 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff653, align 4
  %coeff655 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff655, align 4
  %coeff657 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff657, align 4
  %coeff659 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff659, align 4
  %coeff661 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff661, align 4
  %coeff663 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff663, align 4
  %coeff665 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff665, align 4
  %coeff667 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff667, align 4
  %coeff669 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff669, align 4
  %coeff671 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff671, align 4
  %coeff673 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff673, align 4
  %coeff675 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff675, align 4
  %coeff677 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff677, align 4
  %coeff679 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff679, align 4
  %coeff681 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff681, align 4
  %coeff683 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff683, align 4
  %coeff685 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff685, align 4
  %coeff687 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff687, align 4
  %coeff689 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff689, align 4
  %coeff691 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff691, align 4
  %coeff693 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff693, align 4
  %coeff695 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff695, align 4
  %coeff697 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff697, align 4
  %coeff699 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff699, align 4
  %coeff701 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff701, align 4
  %coeff703 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff703, align 4
  %coeff705 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff705, align 4
  %coeff707 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 0
  store i128 3240210269972515253, i128* %coeff707, align 4
  %coeff709 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 1
  store i128 8211817353910544778, i128* %coeff709, align 4
  %coeff711 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 2
  store i128 6098234019238335271, i128* %coeff711, align 4
  %coeff713 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 3
  store i128 3946525681149945645, i128* %coeff713, align 4
  %coeff715 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 0
  store i128 10162220749080420597, i128* %coeff715, align 4
  %coeff717 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 1
  store i128 9564161016340867348, i128* %coeff717, align 4
  %coeff719 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 2
  store i128 1141103942305410158, i128* %coeff719, align 4
  %coeff721 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 3
  store i128 196758051849933427, i128* %coeff721, align 4
  %coeff723 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff723, align 4
  %coeff725 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff725, align 4
  %coeff727 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff727, align 4
  %coeff729 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff729, align 4
  %coeff731 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 0
  store i128 10087218741710072489, i128* %coeff731, align 4
  %coeff733 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 1
  store i128 1132760428998381904, i128* %coeff733, align 4
  %coeff735 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 2
  store i128 12253596937043474777, i128* %coeff735, align 4
  %coeff737 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 3
  store i128 4143283731404378736, i128* %coeff737, align 4
  %coeff739 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff739, align 4
  %coeff741 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff741, align 4
  %coeff743 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff743, align 4
  %coeff745 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff745, align 4
  %coeff747 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff747, align 4
  %coeff749 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff749, align 4
  %coeff751 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff751, align 4
  %coeff753 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff753, align 4
  %coeff755 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff755, align 4
  %coeff757 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff757, align 4
  %coeff759 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff759, align 4
  %coeff761 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff761, align 4
  %coeff763 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff763, align 4
  %coeff765 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff765, align 4
  %coeff767 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff767, align 4
  %coeff769 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff769, align 4
  %coeff771 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 0
  store i128 2226472662321635938, i128* %coeff771, align 4
  %coeff773 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 1
  store i128 7499883979180848355, i128* %coeff773, align 4
  %coeff775 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 2
  store i128 8133278146575421281, i128* %coeff775, align 4
  %coeff777 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 3
  store i128 4054795205153517403, i128* %coeff777, align 4
  %coeff779 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 0
  store i128 11175958356731299912, i128* %coeff779, align 4
  %coeff781 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 1
  store i128 10276094391070563771, i128* %coeff781, align 4
  %coeff783 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 2
  store i128 17552803892972843059, i128* %coeff783, align 4
  %coeff785 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 3
  store i128 88488527846361668, i128* %coeff785, align 4
  %coeff787 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff787, align 4
  %coeff789 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff789, align 4
  %coeff791 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff791, align 4
  %coeff793 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff793, align 4
  %coeff795 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff795, align 4
  %coeff797 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff797, align 4
  %coeff799 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff799, align 4
  %coeff801 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff801, align 4
  %coeff803 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff803, align 4
  %coeff805 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff805, align 4
  %coeff807 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff807, align 4
  %coeff809 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff809, align 4
  %coeff811 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff811, align 4
  %coeff813 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff813, align 4
  %coeff815 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff815, align 4
  %coeff817 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff817, align 4
  %coeff819 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff819, align 4
  %coeff821 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff821, align 4
  %coeff823 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff823, align 4
  %coeff825 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 3
  store i128 1595500335, i128* %coeff825, align 4
  %coeff827 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff827, align 4
  %coeff829 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff829, align 4
  %coeff831 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff831, align 4
  %coeff833 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff833, align 4
  %coeff835 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff835, align 4
  %coeff837 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff837, align 4
  %coeff839 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff839, align 4
  %coeff841 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff841, align 4
  %coeff843 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff843, align 4
  %coeff845 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff845, align 4
  %coeff847 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff847, align 4
  %coeff849 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff849, align 4
  %coeff851 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff851, align 4
  %coeff853 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff853, align 4
  %coeff855 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff855, align 4
  %coeff857 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff857, align 4
  %coeff859 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff859, align 4
  %coeff861 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff861, align 4
  %coeff863 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff863, align 4
  %coeff865 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff865, align 4
  %coeff867 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff867, align 4
  %coeff869 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff869, align 4
  %coeff871 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff871, align 4
  %coeff873 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 3
  store i128 1595500335, i128* %coeff873, align 4
  %coeff875 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff875, align 4
  %coeff877 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff877, align 4
  %coeff879 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff879, align 4
  %coeff881 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff881, align 4
  %coeff883 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff883, align 4
  %coeff885 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff885, align 4
  %coeff887 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff887, align 4
  %coeff889 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff889, align 4
  %coeff891 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff891, align 4
  %coeff893 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff893, align 4
  %coeff895 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff895, align 4
  %coeff897 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff897, align 4
  %coeff899 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff899, align 4
  %coeff901 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff901, align 4
  %coeff903 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff903, align 4
  %coeff905 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff905, align 4
  %coeff907 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff907, align 4
  %coeff909 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff909, align 4
  %coeff911 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff911, align 4
  %coeff913 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff913, align 4
  %coeff915 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff915, align 4
  %coeff917 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff917, align 4
  %coeff919 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff919, align 4
  %coeff921 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff921, align 4
  %coeff923 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff923, align 4
  %coeff925 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff925, align 4
  %coeff927 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff927, align 4
  %coeff929 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff929, align 4
  %coeff931 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff931, align 4
  %coeff933 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff933, align 4
  %coeff935 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff935, align 4
  %coeff937 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff937, align 4
  %coeff939 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff939, align 4
  %coeff941 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff941, align 4
  %coeff943 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff943, align 4
  %coeff945 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff945, align 4
  %coeff947 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff947, align 4
  %coeff949 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff949, align 4
  %coeff951 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff951, align 4
  %coeff953 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff953, align 4
  %coeff955 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff955, align 4
  %coeff957 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff957, align 4
  %coeff959 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff959, align 4
  %coeff961 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff961, align 4
  %coeff963 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff963, align 4
  %coeff965 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff965, align 4
  %coeff967 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff967, align 4
  %coeff969 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff969, align 4
  %coeff971 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff971, align 4
  %coeff973 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff973, align 4
  %coeff975 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff975, align 4
  %coeff977 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff977, align 4
  %coeff979 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff979, align 4
  %coeff981 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff981, align 4
  %coeff983 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff983, align 4
  %coeff985 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff985, align 4
  %coeff987 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff987, align 4
  %coeff989 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff989, align 4
  %coeff991 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff991, align 4
  %coeff993 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff993, align 4
  %coeff995 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff995, align 4
  %coeff997 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff997, align 4
  %coeff999 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff999, align 4
  %coeff1001 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff1001, align 4
  %coeff1003 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1003, align 4
  %coeff1005 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1005, align 4
  %coeff1007 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1007, align 4
  %coeff1009 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1009, align 4
  %coeff1011 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff1011, align 4
  %coeff1013 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff1013, align 4
  %coeff1015 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff1015, align 4
  %coeff1017 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff1017, align 4
  %coeff1019 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1019, align 4
  %coeff1021 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1021, align 4
  %coeff1023 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1023, align 4
  %coeff1025 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1025, align 4
  %coeff1027 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff1027, align 4
  %coeff1029 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff1029, align 4
  %coeff1031 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff1031, align 4
  %coeff1033 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff1033, align 4
  %coeff1035 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1035, align 4
  %coeff1037 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1037, align 4
  %coeff1039 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1039, align 4
  %coeff1041 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1041, align 4
  %coeff1043 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff1043, align 4
  %coeff1045 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff1045, align 4
  %coeff1047 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff1047, align 4
  %coeff1049 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff1049, align 4
  %coeff1051 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1051, align 4
  %coeff1053 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1053, align 4
  %coeff1055 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1055, align 4
  %coeff1057 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1057, align 4
  %coeff1059 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff1059, align 4
  %coeff1061 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff1061, align 4
  %coeff1063 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff1063, align 4
  %coeff1065 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 3
  store i128 1595500335, i128* %coeff1065, align 4
  %coeff1067 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1067, align 4
  %coeff1069 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1069, align 4
  %coeff1071 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1071, align 4
  %coeff1073 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1073, align 4
  %coeff1075 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1075, align 4
  %coeff1077 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1077, align 4
  %coeff1079 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1079, align 4
  %coeff1081 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1081, align 4
  %coeff1083 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1083, align 4
  %coeff1085 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1085, align 4
  %coeff1087 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1087, align 4
  %coeff1089 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1089, align 4
  %coeff1091 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 0
  store i128 11175958356731299912, i128* %coeff1091, align 4
  %coeff1093 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 1
  store i128 10276094391070563771, i128* %coeff1093, align 4
  %coeff1095 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 2
  store i128 17552803892972843059, i128* %coeff1095, align 4
  %coeff1097 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 3
  store i128 88488527846361668, i128* %coeff1097, align 4
  %coeff1099 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 0
  store i128 2226472662321635938, i128* %coeff1099, align 4
  %coeff1101 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 1
  store i128 7499883979180848355, i128* %coeff1101, align 4
  %coeff1103 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 2
  store i128 8133278146575421281, i128* %coeff1103, align 4
  %coeff1105 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 3
  store i128 4054795205153517403, i128* %coeff1105, align 4
  %coeff1107 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1107, align 4
  %coeff1109 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1109, align 4
  %coeff1111 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1111, align 4
  %coeff1113 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1113, align 4
  %coeff1115 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 0
  store i128 3315212277342863360, i128* %coeff1115, align 4
  %coeff1117 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 1
  store i128 16643217941253030222, i128* %coeff1117, align 4
  %coeff1119 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 2
  store i128 13432485102504789563, i128* %coeff1119, align 4
  %coeff1121 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 3
  store i128 1595500335, i128* %coeff1121, align 4
  %coeff1123 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff1123, align 4
  %coeff1125 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff1125, align 4
  %coeff1127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff1127, align 4
  %coeff1129 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff1129, align 4
  %coeff1131 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff1131, align 4
  %coeff1133 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff1133, align 4
  %coeff1135 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff1135, align 4
  %coeff1137 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff1137, align 4
  %coeff1139 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff1139, align 4
  %coeff1141 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff1141, align 4
  %coeff1143 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff1143, align 4
  %coeff1145 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff1145, align 4
  %coeff1147 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1147, align 4
  %coeff1149 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1149, align 4
  %coeff1151 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1151, align 4
  %coeff1153 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1153, align 4
  %coeff1155 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 0
  store i128 10162220749080420597, i128* %coeff1155, align 4
  %coeff1157 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 1
  store i128 9564161016340867348, i128* %coeff1157, align 4
  %coeff1159 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 2
  store i128 1141103942305410158, i128* %coeff1159, align 4
  %coeff1161 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 3
  store i128 196758051849933427, i128* %coeff1161, align 4
  %coeff1163 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 0
  store i128 3240210269972515253, i128* %coeff1163, align 4
  %coeff1165 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 1
  store i128 8211817353910544778, i128* %coeff1165, align 4
  %coeff1167 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 2
  store i128 6098234019238335271, i128* %coeff1167, align 4
  %coeff1169 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 3
  store i128 3946525681149945645, i128* %coeff1169, align 4
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %eq1173 = icmp eq i128 %0, 77
  %eq1175 = icmp eq i128 %1, 5
  %and1176 = and i1 %eq1173, %eq1175
  br i1 %and1176, label %if.true1170, label %if.false1171

if.true1170:                                      ; preds = %if.exit
  %coeff1178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1178, align 4
  %coeff1180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1180, align 4
  %coeff1182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1182, align 4
  %coeff1184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1184, align 4
  %coeff1186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1186, align 4
  %coeff1188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1188, align 4
  %coeff1190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1190, align 4
  %coeff1192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1192, align 4
  %coeff1194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1194, align 4
  %coeff1196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1196, align 4
  %coeff1198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 0
  store i128 1, i128* %coeff1198, align 4
  %coeff1200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 1
  store i128 0, i128* %coeff1200, align 4
  %coeff1202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 2
  store i128 0, i128* %coeff1202, align 4
  %coeff1204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 3
  store i128 0, i128* %coeff1204, align 4
  %coeff1206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 4
  store i128 0, i128* %coeff1206, align 4
  %coeff1208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1208, align 4
  %coeff1210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1210, align 4
  %coeff1212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1212, align 4
  %coeff1214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1214, align 4
  %coeff1216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1216, align 4
  %coeff1218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff1218, align 4
  %coeff1220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1220, align 4
  %coeff1222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1222, align 4
  %coeff1224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1224, align 4
  %coeff1226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1226, align 4
  %coeff1228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1228, align 4
  %coeff1230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1230, align 4
  %coeff1232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1232, align 4
  %coeff1234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1234, align 4
  %coeff1236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1236, align 4
  %coeff1238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff1238, align 4
  %coeff1240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff1240, align 4
  %coeff1242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff1242, align 4
  %coeff1244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff1244, align 4
  %coeff1246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff1246, align 4
  %coeff1248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1248, align 4
  %coeff1250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1250, align 4
  %coeff1252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1252, align 4
  %coeff1254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1254, align 4
  %coeff1256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1256, align 4
  %coeff1258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff1258, align 4
  %coeff1260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff1260, align 4
  %coeff1262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff1262, align 4
  %coeff1264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff1264, align 4
  %coeff1266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff1266, align 4
  %coeff1268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1268, align 4
  %coeff1270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1270, align 4
  %coeff1272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1272, align 4
  %coeff1274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1274, align 4
  %coeff1276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1276, align 4
  %coeff1278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 0
  store i128 1, i128* %coeff1278, align 4
  %coeff1280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 1
  store i128 0, i128* %coeff1280, align 4
  %coeff1282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 2
  store i128 0, i128* %coeff1282, align 4
  %coeff1284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 3
  store i128 0, i128* %coeff1284, align 4
  %coeff1286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 4
  store i128 0, i128* %coeff1286, align 4
  %coeff1288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1288, align 4
  %coeff1290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1290, align 4
  %coeff1292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1292, align 4
  %coeff1294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1294, align 4
  %coeff1296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff1296, align 4
  %coeff1298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1298, align 4
  %coeff1300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1300, align 4
  %coeff1302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1302, align 4
  %coeff1304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1304, align 4
  %coeff1306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1306, align 4
  %coeff1308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1308, align 4
  %coeff1310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1310, align 4
  %coeff1312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1312, align 4
  %coeff1314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1314, align 4
  %coeff1316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1316, align 4
  %coeff1318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 0
  store i128 10162220747404304629, i128* %coeff1318, align 4
  %coeff1320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 1
  store i128 14855039761456506129, i128* %coeff1320, align 4
  %coeff1322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 2
  store i128 3411428196565980464, i128* %coeff1322, align 4
  %coeff1324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 3
  store i128 7512101048188645252, i128* %coeff1324, align 4
  %coeff1326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 4
  store i128 5565305834980146611, i128* %coeff1326, align 4
  %coeff1328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 0
  store i128 3240210268673567157, i128* %coeff1328, align 4
  %coeff1330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 1
  store i128 16355175448886016788, i128* %coeff1330, align 4
  %coeff1332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 2
  store i128 12820864110352905289, i128* %coeff1332, align 4
  %coeff1334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 3
  store i128 308003166227093089, i128* %coeff1334, align 4
  %coeff1336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 4
  store i128 14115041459879225501, i128* %coeff1336, align 4
  %coeff1338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1338, align 4
  %coeff1340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1340, align 4
  %coeff1342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1342, align 4
  %coeff1344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1344, align 4
  %coeff1346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1346, align 4
  %coeff1348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 0
  store i128 10087218740379830953, i128* %coeff1348, align 4
  %coeff1350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 1
  store i128 18219880333079910417, i128* %coeff1350, align 4
  %coeff1352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 2
  store i128 6730265852384016549, i128* %coeff1352, align 4
  %coeff1354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 3
  store i128 920891278224531339, i128* %coeff1354, align 4
  %coeff1356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 4
  store i128 1233603221149818976, i128* %coeff1356, align 4
  %coeff1358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff1358, align 4
  %coeff1360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff1360, align 4
  %coeff1362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff1362, align 4
  %coeff1364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff1364, align 4
  %coeff1366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff1366, align 4
  %coeff1368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff1368, align 4
  %coeff1370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff1370, align 4
  %coeff1372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff1372, align 4
  %coeff1374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff1374, align 4
  %coeff1376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff1376, align 4
  %coeff1378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff1378, align 4
  %coeff1380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1380, align 4
  %coeff1382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1382, align 4
  %coeff1384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1384, align 4
  %coeff1386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1386, align 4
  %coeff1388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1388, align 4
  %coeff1390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1390, align 4
  %coeff1392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1392, align 4
  %coeff1394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1394, align 4
  %coeff1396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1396, align 4
  %coeff1398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 0
  store i128 11175958356102187080, i128* %coeff1398, align 4
  %coeff1400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 1
  store i128 3113730970175488220, i128* %coeff1400, align 4
  %coeff1402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 2
  store i128 208286685198802022, i128* %coeff1402, align 4
  %coeff1404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 3
  store i128 15461248674371682336, i128* %coeff1404, align 4
  %coeff1406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 4
  store i128 3241905720840261199, i128* %coeff1406, align 4
  %coeff1408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 0
  store i128 2226472659975684706, i128* %coeff1408, align 4
  %coeff1410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 1
  store i128 9649740166457483082, i128* %coeff1410, align 4
  %coeff1412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 2
  store i128 16024005621720083731, i128* %coeff1412, align 4
  %coeff1414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 3
  store i128 10805599613753607620, i128* %coeff1414, align 4
  %coeff1416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 4
  store i128 16438441574019110913, i128* %coeff1416, align 4
  %coeff1418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1418, align 4
  %coeff1420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1420, align 4
  %coeff1422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1422, align 4
  %coeff1424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1424, align 4
  %coeff1426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1426, align 4
  %coeff1428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1428, align 4
  %coeff1430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1430, align 4
  %coeff1432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1432, align 4
  %coeff1434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1434, align 4
  %coeff1436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1436, align 4
  %coeff1438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff1438, align 4
  %coeff1440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1440, align 4
  %coeff1442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1442, align 4
  %coeff1444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1444, align 4
  %coeff1446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 4
  store i128 1521, i128* %coeff1446, align 4
  %coeff1448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1448, align 4
  %coeff1450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1450, align 4
  %coeff1452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1452, align 4
  %coeff1454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1454, align 4
  %coeff1456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1456, align 4
  %coeff1458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff1458, align 4
  %coeff1460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1460, align 4
  %coeff1462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1462, align 4
  %coeff1464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1464, align 4
  %coeff1466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 4
  store i128 1521, i128* %coeff1466, align 4
  %coeff1468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1468, align 4
  %coeff1470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1470, align 4
  %coeff1472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1472, align 4
  %coeff1474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1474, align 4
  %coeff1476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1476, align 4
  %coeff1478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1478, align 4
  %coeff1480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1480, align 4
  %coeff1482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1482, align 4
  %coeff1484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1484, align 4
  %coeff1486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1486, align 4
  %coeff1488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1488, align 4
  %coeff1490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1490, align 4
  %coeff1492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1492, align 4
  %coeff1494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1494, align 4
  %coeff1496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1496, align 4
  %coeff1498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff1498, align 4
  %coeff1500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1500, align 4
  %coeff1502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1502, align 4
  %coeff1504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1504, align 4
  %coeff1506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1506, align 4
  %coeff1508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1508, align 4
  %coeff1510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1510, align 4
  %coeff1512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1512, align 4
  %coeff1514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1514, align 4
  %coeff1516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1516, align 4
  %coeff1518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff1518, align 4
  %coeff1520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1520, align 4
  %coeff1522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1522, align 4
  %coeff1524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1524, align 4
  %coeff1526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1526, align 4
  %coeff1528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1528, align 4
  %coeff1530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1530, align 4
  %coeff1532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1532, align 4
  %coeff1534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1534, align 4
  %coeff1536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff1536, align 4
  %coeff1538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1538, align 4
  %coeff1540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1540, align 4
  %coeff1542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1542, align 4
  %coeff1544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1544, align 4
  %coeff1546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1546, align 4
  %coeff1548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1548, align 4
  %coeff1550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1550, align 4
  %coeff1552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1552, align 4
  %coeff1554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1554, align 4
  %coeff1556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1556, align 4
  %coeff1558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff1558, align 4
  %coeff1560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff1560, align 4
  %coeff1562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff1562, align 4
  %coeff1564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff1564, align 4
  %coeff1566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff1566, align 4
  %coeff1568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff1568, align 4
  %coeff1570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff1570, align 4
  %coeff1572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff1572, align 4
  %coeff1574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff1574, align 4
  %coeff1576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff1576, align 4
  %coeff1578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1578, align 4
  %coeff1580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1580, align 4
  %coeff1582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1582, align 4
  %coeff1584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1584, align 4
  %coeff1586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1586, align 4
  %coeff1588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff1588, align 4
  %coeff1590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1590, align 4
  %coeff1592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1592, align 4
  %coeff1594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1594, align 4
  %coeff1596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1596, align 4
  %coeff1598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff1598, align 4
  %coeff1600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff1600, align 4
  %coeff1602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff1602, align 4
  %coeff1604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff1604, align 4
  %coeff1606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff1606, align 4
  %coeff1608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff1608, align 4
  %coeff1610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff1610, align 4
  %coeff1612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff1612, align 4
  %coeff1614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff1614, align 4
  %coeff1616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff1616, align 4
  %coeff1618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1618, align 4
  %coeff1620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1620, align 4
  %coeff1622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1622, align 4
  %coeff1624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1624, align 4
  %coeff1626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1626, align 4
  %coeff1628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1628, align 4
  %coeff1630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1630, align 4
  %coeff1632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1632, align 4
  %coeff1634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1634, align 4
  %coeff1636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1636, align 4
  %coeff1638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff1638, align 4
  %coeff1640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff1640, align 4
  %coeff1642 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff1642, align 4
  %coeff1644 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff1644, align 4
  %coeff1646 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff1646, align 4
  %coeff1648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff1648, align 4
  %coeff1650 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff1650, align 4
  %coeff1652 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff1652, align 4
  %coeff1654 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff1654, align 4
  %coeff1656 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff1656, align 4
  %coeff1658 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1658, align 4
  %coeff1660 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1660, align 4
  %coeff1662 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1662, align 4
  %coeff1664 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1664, align 4
  %coeff1666 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1666, align 4
  %coeff1668 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1668, align 4
  %coeff1670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1670, align 4
  %coeff1672 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1672, align 4
  %coeff1674 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1674, align 4
  %coeff1676 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1676, align 4
  %coeff1678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff1678, align 4
  %coeff1680 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1680, align 4
  %coeff1682 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1682, align 4
  %coeff1684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1684, align 4
  %coeff1686 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 4
  store i128 1521, i128* %coeff1686, align 4
  %coeff1688 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1688, align 4
  %coeff1690 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1690, align 4
  %coeff1692 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1692, align 4
  %coeff1694 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1694, align 4
  %coeff1696 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1696, align 4
  %coeff1698 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff1698, align 4
  %coeff1700 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1700, align 4
  %coeff1702 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1702, align 4
  %coeff1704 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1704, align 4
  %coeff1706 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1706, align 4
  %coeff1708 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1708, align 4
  %coeff1710 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1710, align 4
  %coeff1712 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1712, align 4
  %coeff1714 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1714, align 4
  %coeff1716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1716, align 4
  %coeff1718 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff1718, align 4
  %coeff1720 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff1720, align 4
  %coeff1722 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff1722, align 4
  %coeff1724 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff1724, align 4
  %coeff1726 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff1726, align 4
  %coeff1728 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1728, align 4
  %coeff1730 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1730, align 4
  %coeff1732 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1732, align 4
  %coeff1734 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1734, align 4
  %coeff1736 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1736, align 4
  %coeff1738 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff1738, align 4
  %coeff1740 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1740, align 4
  %coeff1742 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1742, align 4
  %coeff1744 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1744, align 4
  %coeff1746 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff1746, align 4
  %coeff1748 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1748, align 4
  %coeff1750 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1750, align 4
  %coeff1752 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1752, align 4
  %coeff1754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1754, align 4
  %coeff1756 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1756, align 4
  %coeff1758 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff1758, align 4
  %coeff1760 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1760, align 4
  %coeff1762 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1762, align 4
  %coeff1764 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1764, align 4
  %coeff1766 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1766, align 4
  %coeff1768 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1768, align 4
  %coeff1770 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1770, align 4
  %coeff1772 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1772, align 4
  %coeff1774 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1774, align 4
  %coeff1776 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff1776, align 4
  %coeff1778 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1778, align 4
  %coeff1780 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1780, align 4
  %coeff1782 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1782, align 4
  %coeff1784 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1784, align 4
  %coeff1786 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1786, align 4
  %coeff1788 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1788, align 4
  %coeff1790 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1790, align 4
  %coeff1792 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1792, align 4
  %coeff1794 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1794, align 4
  %coeff1796 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1796, align 4
  %coeff1798 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 0
  store i128 2226472659975684706, i128* %coeff1798, align 4
  %coeff1800 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 1
  store i128 9649740166457483082, i128* %coeff1800, align 4
  %coeff1802 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 2
  store i128 16024005621720083731, i128* %coeff1802, align 4
  %coeff1804 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 3
  store i128 10805599613753607620, i128* %coeff1804, align 4
  %coeff1806 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 4
  store i128 16438441574019110913, i128* %coeff1806, align 4
  %coeff1808 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 0
  store i128 11175958356102187080, i128* %coeff1808, align 4
  %coeff1810 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 1
  store i128 3113730970175488220, i128* %coeff1810, align 4
  %coeff1812 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 2
  store i128 208286685198802022, i128* %coeff1812, align 4
  %coeff1814 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 3
  store i128 15461248674371682336, i128* %coeff1814, align 4
  %coeff1816 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 4
  store i128 3241905720840261199, i128* %coeff1816, align 4
  %coeff1818 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1818, align 4
  %coeff1820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1820, align 4
  %coeff1822 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1822, align 4
  %coeff1824 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1824, align 4
  %coeff1826 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1826, align 4
  %coeff1828 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 0
  store i128 3315212275698040832, i128* %coeff1828, align 4
  %coeff1830 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 1
  store i128 12990334877262620692, i128* %coeff1830, align 4
  %coeff1832 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 2
  store i128 9502026454534869203, i128* %coeff1832, align 4
  %coeff1834 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 3
  store i128 6899212936191207002, i128* %coeff1834, align 4
  %coeff1836 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 4
  store i128 1521, i128* %coeff1836, align 4
  %coeff1838 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff1838, align 4
  %coeff1840 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff1840, align 4
  %coeff1842 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff1842, align 4
  %coeff1844 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff1844, align 4
  %coeff1846 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff1846, align 4
  %coeff1848 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff1848, align 4
  %coeff1850 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff1850, align 4
  %coeff1852 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff1852, align 4
  %coeff1854 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff1854, align 4
  %coeff1856 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff1856, align 4
  %coeff1858 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff1858, align 4
  %coeff1860 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1860, align 4
  %coeff1862 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1862, align 4
  %coeff1864 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1864, align 4
  %coeff1866 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff1866, align 4
  %coeff1868 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1868, align 4
  %coeff1870 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1870, align 4
  %coeff1872 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1872, align 4
  %coeff1874 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1874, align 4
  %coeff1876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1876, align 4
  %coeff1878 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 0
  store i128 3240210268673567157, i128* %coeff1878, align 4
  %coeff1880 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 1
  store i128 16355175448886016788, i128* %coeff1880, align 4
  %coeff1882 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 2
  store i128 12820864110352905289, i128* %coeff1882, align 4
  %coeff1884 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 3
  store i128 308003166227093089, i128* %coeff1884, align 4
  %coeff1886 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 4
  store i128 14115041459879225501, i128* %coeff1886, align 4
  %coeff1888 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 0
  store i128 10162220747404304629, i128* %coeff1888, align 4
  %coeff1890 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 1
  store i128 14855039761456506129, i128* %coeff1890, align 4
  %coeff1892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 2
  store i128 3411428196565980464, i128* %coeff1892, align 4
  %coeff1894 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 3
  store i128 7512101048188645252, i128* %coeff1894, align 4
  %coeff1896 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 4
  store i128 5565305834980146611, i128* %coeff1896, align 4
  %coeff1898 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1898, align 4
  %coeff1900 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1900, align 4
  %coeff1902 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1902, align 4
  %coeff1904 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1904, align 4
  %coeff1906 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1906, align 4
  %coeff1908 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1908, align 4
  %coeff1910 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1910, align 4
  %coeff1912 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1912, align 4
  %coeff1914 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1914, align 4
  %coeff1916 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1916, align 4
  %coeff1918 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1918, align 4
  %coeff1920 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1920, align 4
  %coeff1922 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1922, align 4
  %coeff1924 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1924, align 4
  %coeff1926 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1926, align 4
  %coeff1928 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1928, align 4
  %coeff1930 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1930, align 4
  %coeff1932 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1932, align 4
  %coeff1934 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1934, align 4
  %coeff1936 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1936, align 4
  %coeff1938 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff1938, align 4
  %coeff1940 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1940, align 4
  %coeff1942 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1942, align 4
  %coeff1944 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1944, align 4
  %coeff1946 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1946, align 4
  %coeff1948 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1948, align 4
  %coeff1950 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1950, align 4
  %coeff1952 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1952, align 4
  %coeff1954 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1954, align 4
  %coeff1956 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1956, align 4
  %coeff1958 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1958, align 4
  %coeff1960 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1960, align 4
  %coeff1962 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1962, align 4
  %coeff1964 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1964, align 4
  %coeff1966 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1966, align 4
  %coeff1968 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1968, align 4
  %coeff1970 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1970, align 4
  %coeff1972 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1972, align 4
  %coeff1974 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1974, align 4
  %coeff1976 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1976, align 4
  %coeff1978 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff1978, align 4
  %coeff1980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff1980, align 4
  %coeff1982 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff1982, align 4
  %coeff1984 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff1984, align 4
  %coeff1986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff1986, align 4
  %coeff1988 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1988, align 4
  %coeff1990 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1990, align 4
  %coeff1992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1992, align 4
  %coeff1994 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1994, align 4
  %coeff1996 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1996, align 4
  %coeff1998 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1998, align 4
  %coeff2000 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff2000, align 4
  %coeff2002 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff2002, align 4
  %coeff2004 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff2004, align 4
  %coeff2006 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff2006, align 4
  %coeff2008 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2008, align 4
  %coeff2010 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2010, align 4
  %coeff2012 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2012, align 4
  %coeff2014 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2014, align 4
  %coeff2016 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2016, align 4
  %coeff2018 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2018, align 4
  %coeff2020 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2020, align 4
  %coeff2022 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2022, align 4
  %coeff2024 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2024, align 4
  %coeff2026 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2026, align 4
  %coeff2028 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2028, align 4
  %coeff2030 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2030, align 4
  %coeff2032 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2032, align 4
  %coeff2034 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2034, align 4
  %coeff2036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2036, align 4
  %coeff2038 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 0
  store i128 3240210268673567157, i128* %coeff2038, align 4
  %coeff2040 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 1
  store i128 16355175448886016788, i128* %coeff2040, align 4
  %coeff2042 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 2
  store i128 12820864110352905289, i128* %coeff2042, align 4
  %coeff2044 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 3
  store i128 308003166227093089, i128* %coeff2044, align 4
  %coeff2046 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 4
  store i128 14115041459879225501, i128* %coeff2046, align 4
  %coeff2048 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 0
  store i128 10162220747404304629, i128* %coeff2048, align 4
  %coeff2050 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 1
  store i128 14855039761456506129, i128* %coeff2050, align 4
  %coeff2052 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 2
  store i128 3411428196565980464, i128* %coeff2052, align 4
  %coeff2054 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 3
  store i128 7512101048188645252, i128* %coeff2054, align 4
  %coeff2056 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 4
  store i128 5565305834980146611, i128* %coeff2056, align 4
  %coeff2058 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2058, align 4
  %coeff2060 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2060, align 4
  %coeff2062 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2062, align 4
  %coeff2064 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2064, align 4
  %coeff2066 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2066, align 4
  %coeff2068 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 0
  store i128 10087218740379830953, i128* %coeff2068, align 4
  %coeff2070 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 1
  store i128 18219880333079910417, i128* %coeff2070, align 4
  %coeff2072 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 2
  store i128 6730265852384016549, i128* %coeff2072, align 4
  %coeff2074 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 3
  store i128 920891278224531339, i128* %coeff2074, align 4
  %coeff2076 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 4
  store i128 1233603221149818976, i128* %coeff2076, align 4
  %coeff2078 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff2078, align 4
  %coeff2080 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff2080, align 4
  %coeff2082 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff2082, align 4
  %coeff2084 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff2084, align 4
  %coeff2086 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff2086, align 4
  %coeff2088 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff2088, align 4
  %coeff2090 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff2090, align 4
  %coeff2092 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff2092, align 4
  %coeff2094 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff2094, align 4
  %coeff2096 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff2096, align 4
  %coeff2098 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff2098, align 4
  %coeff2100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2100, align 4
  %coeff2102 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2102, align 4
  %coeff2104 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2104, align 4
  %coeff2106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2106, align 4
  %coeff2108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2108, align 4
  %coeff2110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2110, align 4
  %coeff2112 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2112, align 4
  %coeff2114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2114, align 4
  %coeff2116 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2116, align 4
  %coeff2118 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 0
  store i128 2226472659975684706, i128* %coeff2118, align 4
  %coeff2120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 1
  store i128 9649740166457483082, i128* %coeff2120, align 4
  %coeff2122 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 2
  store i128 16024005621720083731, i128* %coeff2122, align 4
  %coeff2124 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 3
  store i128 10805599613753607620, i128* %coeff2124, align 4
  %coeff2126 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 4
  store i128 16438441574019110913, i128* %coeff2126, align 4
  %coeff2128 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 0
  store i128 11175958356102187080, i128* %coeff2128, align 4
  %coeff2130 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 1
  store i128 3113730970175488220, i128* %coeff2130, align 4
  %coeff2132 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 2
  store i128 208286685198802022, i128* %coeff2132, align 4
  %coeff2134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 3
  store i128 15461248674371682336, i128* %coeff2134, align 4
  %coeff2136 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 4
  store i128 3241905720840261199, i128* %coeff2136, align 4
  %coeff2138 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2138, align 4
  %coeff2140 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2140, align 4
  %coeff2142 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2142, align 4
  %coeff2144 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2144, align 4
  %coeff2146 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2146, align 4
  %coeff2148 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2148, align 4
  %coeff2150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2150, align 4
  %coeff2152 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2152, align 4
  %coeff2154 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2154, align 4
  %coeff2156 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2156, align 4
  %coeff2158 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff2158, align 4
  %coeff2160 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2160, align 4
  %coeff2162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2162, align 4
  %coeff2164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2164, align 4
  %coeff2166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2166, align 4
  %coeff2168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2168, align 4
  %coeff2170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2170, align 4
  %coeff2172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2172, align 4
  %coeff2174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2174, align 4
  %coeff2176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2176, align 4
  %coeff2178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff2178, align 4
  %coeff2180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2180, align 4
  %coeff2182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2182, align 4
  %coeff2184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2184, align 4
  %coeff2186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 4
  store i128 1521, i128* %coeff2186, align 4
  %coeff2188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff2188, align 4
  %coeff2190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2190, align 4
  %coeff2192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2192, align 4
  %coeff2194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2194, align 4
  %coeff2196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2196, align 4
  %coeff2198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff2198, align 4
  %coeff2200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff2200, align 4
  %coeff2202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff2202, align 4
  %coeff2204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff2204, align 4
  %coeff2206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff2206, align 4
  %coeff2208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff2208, align 4
  %coeff2210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff2210, align 4
  %coeff2212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff2212, align 4
  %coeff2214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff2214, align 4
  %coeff2216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff2216, align 4
  %coeff2218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff2218, align 4
  %coeff2220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2220, align 4
  %coeff2222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2222, align 4
  %coeff2224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2224, align 4
  %coeff2226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2226, align 4
  %coeff2228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2228, align 4
  %coeff2230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2230, align 4
  %coeff2232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2232, align 4
  %coeff2234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2234, align 4
  %coeff2236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2236, align 4
  %coeff2238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff2238, align 4
  %coeff2240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2240, align 4
  %coeff2242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2242, align 4
  %coeff2244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2244, align 4
  %coeff2246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 4
  store i128 1521, i128* %coeff2246, align 4
  %coeff2248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2248, align 4
  %coeff2250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2250, align 4
  %coeff2252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2252, align 4
  %coeff2254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2254, align 4
  %coeff2256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2256, align 4
  %coeff2258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2258, align 4
  %coeff2260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2260, align 4
  %coeff2262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2262, align 4
  %coeff2264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2264, align 4
  %coeff2266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2266, align 4
  %coeff2268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2268, align 4
  %coeff2270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2270, align 4
  %coeff2272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2272, align 4
  %coeff2274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2274, align 4
  %coeff2276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2276, align 4
  %coeff2278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff2278, align 4
  %coeff2280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff2280, align 4
  %coeff2282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff2282, align 4
  %coeff2284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff2284, align 4
  %coeff2286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff2286, align 4
  %coeff2288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff2288, align 4
  %coeff2290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff2290, align 4
  %coeff2292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff2292, align 4
  %coeff2294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff2294, align 4
  %coeff2296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff2296, align 4
  %coeff2298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2298, align 4
  %coeff2300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2300, align 4
  %coeff2302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2302, align 4
  %coeff2304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2304, align 4
  %coeff2306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2306, align 4
  %coeff2308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff2308, align 4
  %coeff2310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2310, align 4
  %coeff2312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2312, align 4
  %coeff2314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2314, align 4
  %coeff2316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2316, align 4
  %coeff2318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff2318, align 4
  %coeff2320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff2320, align 4
  %coeff2322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff2322, align 4
  %coeff2324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff2324, align 4
  %coeff2326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff2326, align 4
  %coeff2328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff2328, align 4
  %coeff2330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff2330, align 4
  %coeff2332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff2332, align 4
  %coeff2334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff2334, align 4
  %coeff2336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff2336, align 4
  %coeff2338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff2338, align 4
  %coeff2340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff2340, align 4
  %coeff2342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff2342, align 4
  %coeff2344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff2344, align 4
  %coeff2346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff2346, align 4
  %coeff2348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2348, align 4
  %coeff2350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2350, align 4
  %coeff2352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2352, align 4
  %coeff2354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2354, align 4
  %coeff2356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2356, align 4
  %coeff2358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff2358, align 4
  %coeff2360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff2360, align 4
  %coeff2362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff2362, align 4
  %coeff2364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff2364, align 4
  %coeff2366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff2366, align 4
  %coeff2368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff2368, align 4
  %coeff2370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff2370, align 4
  %coeff2372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff2372, align 4
  %coeff2374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff2374, align 4
  %coeff2376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff2376, align 4
  %coeff2378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2378, align 4
  %coeff2380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2380, align 4
  %coeff2382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2382, align 4
  %coeff2384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2384, align 4
  %coeff2386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2386, align 4
  %coeff2388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2388, align 4
  %coeff2390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2390, align 4
  %coeff2392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2392, align 4
  %coeff2394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2394, align 4
  %coeff2396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2396, align 4
  %coeff2398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff2398, align 4
  %coeff2400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2400, align 4
  %coeff2402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2402, align 4
  %coeff2404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2404, align 4
  %coeff2406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2406, align 4
  %coeff2408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2408, align 4
  %coeff2410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2410, align 4
  %coeff2412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2412, align 4
  %coeff2414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2414, align 4
  %coeff2416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2416, align 4
  %coeff2418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff2418, align 4
  %coeff2420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2420, align 4
  %coeff2422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2422, align 4
  %coeff2424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2424, align 4
  %coeff2426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2426, align 4
  %coeff2428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff2428, align 4
  %coeff2430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2430, align 4
  %coeff2432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2432, align 4
  %coeff2434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2434, align 4
  %coeff2436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2436, align 4
  %coeff2438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff2438, align 4
  %coeff2440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff2440, align 4
  %coeff2442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff2442, align 4
  %coeff2444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff2444, align 4
  %coeff2446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff2446, align 4
  %coeff2448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff2448, align 4
  %coeff2450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff2450, align 4
  %coeff2452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff2452, align 4
  %coeff2454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff2454, align 4
  %coeff2456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff2456, align 4
  %coeff2458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff2458, align 4
  %coeff2460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2460, align 4
  %coeff2462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2462, align 4
  %coeff2464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2464, align 4
  %coeff2466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff2466, align 4
  %coeff2468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2468, align 4
  %coeff2470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2470, align 4
  %coeff2472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2472, align 4
  %coeff2474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2474, align 4
  %coeff2476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2476, align 4
  %coeff2478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff2478, align 4
  %coeff2480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2480, align 4
  %coeff2482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2482, align 4
  %coeff2484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2484, align 4
  %coeff2486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 4
  store i128 1521, i128* %coeff2486, align 4
  %coeff2488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2488, align 4
  %coeff2490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2490, align 4
  %coeff2492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2492, align 4
  %coeff2494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2494, align 4
  %coeff2496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2496, align 4
  %coeff2498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2498, align 4
  %coeff2500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2500, align 4
  %coeff2502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2502, align 4
  %coeff2504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2504, align 4
  %coeff2506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2506, align 4
  %coeff2508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2508, align 4
  %coeff2510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2510, align 4
  %coeff2512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2512, align 4
  %coeff2514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2514, align 4
  %coeff2516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2516, align 4
  %coeff2518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 0
  store i128 11175958356102187080, i128* %coeff2518, align 4
  %coeff2520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 1
  store i128 3113730970175488220, i128* %coeff2520, align 4
  %coeff2522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 2
  store i128 208286685198802022, i128* %coeff2522, align 4
  %coeff2524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 3
  store i128 15461248674371682336, i128* %coeff2524, align 4
  %coeff2526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 4
  store i128 3241905720840261199, i128* %coeff2526, align 4
  %coeff2528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 0
  store i128 2226472659975684706, i128* %coeff2528, align 4
  %coeff2530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 1
  store i128 9649740166457483082, i128* %coeff2530, align 4
  %coeff2532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 2
  store i128 16024005621720083731, i128* %coeff2532, align 4
  %coeff2534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 3
  store i128 10805599613753607620, i128* %coeff2534, align 4
  %coeff2536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 4
  store i128 16438441574019110913, i128* %coeff2536, align 4
  %coeff2538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2538, align 4
  %coeff2540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2540, align 4
  %coeff2542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2542, align 4
  %coeff2544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2544, align 4
  %coeff2546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2546, align 4
  %coeff2548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 0
  store i128 3315212275698040832, i128* %coeff2548, align 4
  %coeff2550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 1
  store i128 12990334877262620692, i128* %coeff2550, align 4
  %coeff2552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 2
  store i128 9502026454534869203, i128* %coeff2552, align 4
  %coeff2554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 3
  store i128 6899212936191207002, i128* %coeff2554, align 4
  %coeff2556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 4
  store i128 1521, i128* %coeff2556, align 4
  %coeff2558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff2558, align 4
  %coeff2560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff2560, align 4
  %coeff2562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff2562, align 4
  %coeff2564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff2564, align 4
  %coeff2566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff2566, align 4
  %coeff2568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff2568, align 4
  %coeff2570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff2570, align 4
  %coeff2572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff2572, align 4
  %coeff2574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff2574, align 4
  %coeff2576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff2576, align 4
  %coeff2578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff2578, align 4
  %coeff2580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2580, align 4
  %coeff2582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2582, align 4
  %coeff2584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2584, align 4
  %coeff2586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff2586, align 4
  %coeff2588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2588, align 4
  %coeff2590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2590, align 4
  %coeff2592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2592, align 4
  %coeff2594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2594, align 4
  %coeff2596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2596, align 4
  %coeff2598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 0
  store i128 10162220747404304629, i128* %coeff2598, align 4
  %coeff2600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 1
  store i128 14855039761456506129, i128* %coeff2600, align 4
  %coeff2602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 2
  store i128 3411428196565980464, i128* %coeff2602, align 4
  %coeff2604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 3
  store i128 7512101048188645252, i128* %coeff2604, align 4
  %coeff2606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 4
  store i128 5565305834980146611, i128* %coeff2606, align 4
  %coeff2608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 0
  store i128 3240210268673567157, i128* %coeff2608, align 4
  %coeff2610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 1
  store i128 16355175448886016788, i128* %coeff2610, align 4
  %coeff2612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 2
  store i128 12820864110352905289, i128* %coeff2612, align 4
  %coeff2614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 3
  store i128 308003166227093089, i128* %coeff2614, align 4
  %coeff2616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 4
  store i128 14115041459879225501, i128* %coeff2616, align 4
  br label %if.exit2617

if.false1171:                                     ; preds = %if.exit
  br label %if.exit2617

if.exit2617:                                      ; preds = %if.false1171, %if.true1170
  %eq2621 = icmp eq i128 %0, 55
  %eq2623 = icmp eq i128 %1, 7
  %and2624 = and i1 %eq2621, %eq2623
  br i1 %and2624, label %if.true2618, label %if.false2619

if.true2618:                                      ; preds = %if.exit2617
  %coeff2626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2626, align 4
  %coeff2628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2628, align 4
  %coeff2630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2630, align 4
  %coeff2632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2632, align 4
  %coeff2634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2634, align 4
  %coeff2636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff2636, align 4
  %coeff2638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff2638, align 4
  %coeff2640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2640, align 4
  %coeff2642 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2642, align 4
  %coeff2644 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2644, align 4
  %coeff2646 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2646, align 4
  %coeff2648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2648, align 4
  %coeff2650 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff2650, align 4
  %coeff2652 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff2652, align 4
  %coeff2654 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 0
  store i128 1, i128* %coeff2654, align 4
  %coeff2656 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 1
  store i128 0, i128* %coeff2656, align 4
  %coeff2658 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 2
  store i128 0, i128* %coeff2658, align 4
  %coeff2660 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 3
  store i128 0, i128* %coeff2660, align 4
  %coeff2662 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 4
  store i128 0, i128* %coeff2662, align 4
  %coeff2664 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 5
  store i128 0, i128* %coeff2664, align 4
  %coeff2666 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 6
  store i128 0, i128* %coeff2666, align 4
  %coeff2668 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2668, align 4
  %coeff2670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2670, align 4
  %coeff2672 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2672, align 4
  %coeff2674 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2674, align 4
  %coeff2676 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2676, align 4
  %coeff2678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff2678, align 4
  %coeff2680 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff2680, align 4
  %coeff2682 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff2682, align 4
  %coeff2684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2684, align 4
  %coeff2686 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2686, align 4
  %coeff2688 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2688, align 4
  %coeff2690 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2690, align 4
  %coeff2692 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff2692, align 4
  %coeff2694 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff2694, align 4
  %coeff2696 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff2696, align 4
  %coeff2698 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2698, align 4
  %coeff2700 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2700, align 4
  %coeff2702 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2702, align 4
  %coeff2704 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2704, align 4
  %coeff2706 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff2706, align 4
  %coeff2708 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff2708, align 4
  %coeff2710 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff2710, align 4
  %coeff2712 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff2712, align 4
  %coeff2714 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff2714, align 4
  %coeff2716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff2716, align 4
  %coeff2718 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff2718, align 4
  %coeff2720 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 5
  store i128 0, i128* %coeff2720, align 4
  %coeff2722 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 6
  store i128 0, i128* %coeff2722, align 4
  %coeff2724 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff2724, align 4
  %coeff2726 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff2726, align 4
  %coeff2728 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff2728, align 4
  %coeff2730 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff2730, align 4
  %coeff2732 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff2732, align 4
  %coeff2734 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff2734, align 4
  %coeff2736 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff2736, align 4
  %coeff2738 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff2738, align 4
  %coeff2740 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff2740, align 4
  %coeff2742 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff2742, align 4
  %coeff2744 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff2744, align 4
  %coeff2746 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff2746, align 4
  %coeff2748 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 5
  store i128 0, i128* %coeff2748, align 4
  %coeff2750 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff2750, align 4
  %coeff2752 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2752, align 4
  %coeff2754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2754, align 4
  %coeff2756 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2756, align 4
  %coeff2758 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2758, align 4
  %coeff2760 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2760, align 4
  %coeff2762 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff2762, align 4
  %coeff2764 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff2764, align 4
  %coeff2766 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 0
  store i128 1, i128* %coeff2766, align 4
  %coeff2768 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 1
  store i128 0, i128* %coeff2768, align 4
  %coeff2770 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 2
  store i128 0, i128* %coeff2770, align 4
  %coeff2772 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 3
  store i128 0, i128* %coeff2772, align 4
  %coeff2774 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 4
  store i128 0, i128* %coeff2774, align 4
  %coeff2776 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 5
  store i128 0, i128* %coeff2776, align 4
  %coeff2778 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 6
  store i128 0, i128* %coeff2778, align 4
  %coeff2780 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2780, align 4
  %coeff2782 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2782, align 4
  %coeff2784 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2784, align 4
  %coeff2786 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2786, align 4
  %coeff2788 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2788, align 4
  %coeff2790 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff2790, align 4
  %coeff2792 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff2792, align 4
  %coeff2794 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2794, align 4
  %coeff2796 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2796, align 4
  %coeff2798 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2798, align 4
  %coeff2800 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2800, align 4
  %coeff2802 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2802, align 4
  %coeff2804 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff2804, align 4
  %coeff2806 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff2806, align 4
  %coeff2808 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2808, align 4
  %coeff2810 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2810, align 4
  %coeff2812 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2812, align 4
  %coeff2814 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2814, align 4
  %coeff2816 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2816, align 4
  %coeff2818 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff2818, align 4
  %coeff2820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff2820, align 4
  %coeff2822 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 0
  store i128 2099988056465336, i128* %coeff2822, align 4
  %coeff2824 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 1
  store i128 20964146866715418, i128* %coeff2824, align 4
  %coeff2826 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 2
  store i128 26479447919286778, i128* %coeff2826, align 4
  %coeff2828 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 3
  store i128 28687334188327454, i128* %coeff2828, align 4
  %coeff2830 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 4
  store i128 18245231482781651, i128* %coeff2830, align 4
  %coeff2832 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 5
  store i128 21665078698214405, i128* %coeff2832, align 4
  %coeff2834 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 6
  store i128 1760545476751041, i128* %coeff2834, align 4
  %coeff2836 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 0
  store i128 33647333985766131, i128* %coeff2836, align 4
  %coeff2838 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 1
  store i128 15061775342732377, i128* %coeff2838, align 4
  %coeff2840 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 2
  store i128 10634308716634293, i128* %coeff2840, align 4
  %coeff2842 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 3
  store i128 15267386808624246, i128* %coeff2842, align 4
  %coeff2844 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 4
  store i128 34335022074067067, i128* %coeff2844, align 4
  %coeff2846 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 5
  store i128 1778035881690211, i128* %coeff2846, align 4
  %coeff2848 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 6
  store i128 69335985795384, i128* %coeff2848, align 4
  %coeff2850 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2850, align 4
  %coeff2852 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2852, align 4
  %coeff2854 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2854, align 4
  %coeff2856 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2856, align 4
  %coeff2858 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2858, align 4
  %coeff2860 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff2860, align 4
  %coeff2862 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff2862, align 4
  %coeff2864 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 0
  store i128 35184372088875692, i128* %coeff2864, align 4
  %coeff2866 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 1
  store i128 22472499736345367, i128* %coeff2866, align 4
  %coeff2868 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 2
  store i128 5698637743850064, i128* %coeff2868, align 4
  %coeff2870 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 3
  store i128 21300661132716363, i128* %coeff2870, align 4
  %coeff2872 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 4
  store i128 21929049149954008, i128* %coeff2872, align 4
  %coeff2874 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 5
  store i128 23430044241153146, i128* %coeff2874, align 4
  %coeff2876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 6
  store i128 1829881462546425, i128* %coeff2876, align 4
  %coeff2878 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff2878, align 4
  %coeff2880 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff2880, align 4
  %coeff2882 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff2882, align 4
  %coeff2884 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff2884, align 4
  %coeff2886 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff2886, align 4
  %coeff2888 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 5
  store i128 401348527762810, i128* %coeff2888, align 4
  %coeff2890 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 6
  store i128 470331148861392, i128* %coeff2890, align 4
  %coeff2892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff2892, align 4
  %coeff2894 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff2894, align 4
  %coeff2896 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff2896, align 4
  %coeff2898 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff2898, align 4
  %coeff2900 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff2900, align 4
  %coeff2902 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 5
  store i128 401348527762810, i128* %coeff2902, align 4
  %coeff2904 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 6
  store i128 470331148861392, i128* %coeff2904, align 4
  %coeff2906 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff2906, align 4
  %coeff2908 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff2908, align 4
  %coeff2910 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff2910, align 4
  %coeff2912 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff2912, align 4
  %coeff2914 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff2914, align 4
  %coeff2916 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff2916, align 4
  %coeff2918 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff2918, align 4
  %coeff2920 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2920, align 4
  %coeff2922 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2922, align 4
  %coeff2924 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2924, align 4
  %coeff2926 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2926, align 4
  %coeff2928 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2928, align 4
  %coeff2930 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff2930, align 4
  %coeff2932 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff2932, align 4
  %coeff2934 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 0
  store i128 7031280223355158, i128* %coeff2934, align 4
  %coeff2936 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 1
  store i128 35145111776945462, i128* %coeff2936, align 4
  %coeff2938 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 2
  store i128 15263901815609576, i128* %coeff2938, align 4
  %coeff2940 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 3
  store i128 27123300247230202, i128* %coeff2940, align 4
  %coeff2942 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 4
  store i128 8449056334504512, i128* %coeff2942, align 4
  %coeff2944 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 5
  store i128 34652109665036566, i128* %coeff2944, align 4
  %coeff2946 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 6
  store i128 400995163066007, i128* %coeff2946, align 4
  %coeff2948 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 0
  store i128 28716041818876309, i128* %coeff2948, align 4
  %coeff2950 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 1
  store i128 880810432502333, i128* %coeff2950, align 4
  %coeff2952 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 2
  store i128 21849854820311495, i128* %coeff2952, align 4
  %coeff2954 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 3
  store i128 16831420749721498, i128* %coeff2954, align 4
  %coeff2956 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 4
  store i128 8102400203380238, i128* %coeff2956, align 4
  %coeff2958 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 5
  store i128 24819801933832019, i128* %coeff2958, align 4
  %coeff2960 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 6
  store i128 1428886299480417, i128* %coeff2960, align 4
  %coeff2962 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2962, align 4
  %coeff2964 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2964, align 4
  %coeff2966 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2966, align 4
  %coeff2968 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2968, align 4
  %coeff2970 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2970, align 4
  %coeff2972 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff2972, align 4
  %coeff2974 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff2974, align 4
  %coeff2976 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2976, align 4
  %coeff2978 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2978, align 4
  %coeff2980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2980, align 4
  %coeff2982 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2982, align 4
  %coeff2984 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2984, align 4
  %coeff2986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff2986, align 4
  %coeff2988 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff2988, align 4
  %coeff2990 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 0
  store i128 562949953355775, i128* %coeff2990, align 4
  %coeff2992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff2992, align 4
  %coeff2994 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff2994, align 4
  %coeff2996 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff2996, align 4
  %coeff2998 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff2998, align 4
  %coeff3000 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3000, align 4
  %coeff3002 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 6
  store i128 0, i128* %coeff3002, align 4
  %coeff3004 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff3004, align 4
  %coeff3006 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff3006, align 4
  %coeff3008 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff3008, align 4
  %coeff3010 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff3010, align 4
  %coeff3012 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff3012, align 4
  %coeff3014 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff3014, align 4
  %coeff3016 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff3016, align 4
  %coeff3018 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 0
  store i128 562949953355774, i128* %coeff3018, align 4
  %coeff3020 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3020, align 4
  %coeff3022 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3022, align 4
  %coeff3024 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3024, align 4
  %coeff3026 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3026, align 4
  %coeff3028 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3028, align 4
  %coeff3030 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3030, align 4
  %coeff3032 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff3032, align 4
  %coeff3034 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3034, align 4
  %coeff3036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3036, align 4
  %coeff3038 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3038, align 4
  %coeff3040 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3040, align 4
  %coeff3042 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3042, align 4
  %coeff3044 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3044, align 4
  %coeff3046 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3046, align 4
  %coeff3048 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3048, align 4
  %coeff3050 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3050, align 4
  %coeff3052 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3052, align 4
  %coeff3054 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3054, align 4
  %coeff3056 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3056, align 4
  %coeff3058 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3058, align 4
  %coeff3060 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff3060, align 4
  %coeff3062 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff3062, align 4
  %coeff3064 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff3064, align 4
  %coeff3066 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff3066, align 4
  %coeff3068 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff3068, align 4
  %coeff3070 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff3070, align 4
  %coeff3072 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff3072, align 4
  %coeff3074 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3074, align 4
  %coeff3076 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3076, align 4
  %coeff3078 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3078, align 4
  %coeff3080 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3080, align 4
  %coeff3082 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3082, align 4
  %coeff3084 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3084, align 4
  %coeff3086 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3086, align 4
  %coeff3088 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3088, align 4
  %coeff3090 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3090, align 4
  %coeff3092 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3092, align 4
  %coeff3094 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3094, align 4
  %coeff3096 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3096, align 4
  %coeff3098 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3098, align 4
  %coeff3100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3100, align 4
  %coeff3102 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff3102, align 4
  %coeff3104 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3104, align 4
  %coeff3106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3106, align 4
  %coeff3108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3108, align 4
  %coeff3110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3110, align 4
  %coeff3112 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3112, align 4
  %coeff3114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3114, align 4
  %coeff3116 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff3116, align 4
  %coeff3118 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff3118, align 4
  %coeff3120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff3120, align 4
  %coeff3122 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff3122, align 4
  %coeff3124 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff3124, align 4
  %coeff3126 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff3126, align 4
  %coeff3128 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff3128, align 4
  %coeff3130 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3130, align 4
  %coeff3132 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3132, align 4
  %coeff3134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3134, align 4
  %coeff3136 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3136, align 4
  %coeff3138 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3138, align 4
  %coeff3140 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3140, align 4
  %coeff3142 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3142, align 4
  %coeff3144 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3144, align 4
  %coeff3146 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3146, align 4
  %coeff3148 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3148, align 4
  %coeff3150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3150, align 4
  %coeff3152 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3152, align 4
  %coeff3154 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3154, align 4
  %coeff3156 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3156, align 4
  %coeff3158 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff3158, align 4
  %coeff3160 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff3160, align 4
  %coeff3162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff3162, align 4
  %coeff3164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff3164, align 4
  %coeff3166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff3166, align 4
  %coeff3168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff3168, align 4
  %coeff3170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff3170, align 4
  %coeff3172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff3172, align 4
  %coeff3174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff3174, align 4
  %coeff3176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff3176, align 4
  %coeff3178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff3178, align 4
  %coeff3180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff3180, align 4
  %coeff3182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 5
  store i128 401348527762810, i128* %coeff3182, align 4
  %coeff3184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 6
  store i128 470331148861392, i128* %coeff3184, align 4
  %coeff3186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff3186, align 4
  %coeff3188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3188, align 4
  %coeff3190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3190, align 4
  %coeff3192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3192, align 4
  %coeff3194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3194, align 4
  %coeff3196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3196, align 4
  %coeff3198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3198, align 4
  %coeff3200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff3200, align 4
  %coeff3202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3202, align 4
  %coeff3204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3204, align 4
  %coeff3206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3206, align 4
  %coeff3208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3208, align 4
  %coeff3210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3210, align 4
  %coeff3212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3212, align 4
  %coeff3214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff3214, align 4
  %coeff3216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff3216, align 4
  %coeff3218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff3218, align 4
  %coeff3220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff3220, align 4
  %coeff3222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff3222, align 4
  %coeff3224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff3224, align 4
  %coeff3226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff3226, align 4
  %coeff3228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff3228, align 4
  %coeff3230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff3230, align 4
  %coeff3232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff3232, align 4
  %coeff3234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff3234, align 4
  %coeff3236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff3236, align 4
  %coeff3238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff3238, align 4
  %coeff3240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff3240, align 4
  %coeff3242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3242, align 4
  %coeff3244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3244, align 4
  %coeff3246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3246, align 4
  %coeff3248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3248, align 4
  %coeff3250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3250, align 4
  %coeff3252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3252, align 4
  %coeff3254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3254, align 4
  %coeff3256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3256, align 4
  %coeff3258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3258, align 4
  %coeff3260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3260, align 4
  %coeff3262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3262, align 4
  %coeff3264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3264, align 4
  %coeff3266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3266, align 4
  %coeff3268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3268, align 4
  %coeff3270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff3270, align 4
  %coeff3272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff3272, align 4
  %coeff3274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff3274, align 4
  %coeff3276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff3276, align 4
  %coeff3278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff3278, align 4
  %coeff3280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 5
  store i128 401348527762810, i128* %coeff3280, align 4
  %coeff3282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 6
  store i128 470331148861392, i128* %coeff3282, align 4
  %coeff3284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff3284, align 4
  %coeff3286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff3286, align 4
  %coeff3288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff3288, align 4
  %coeff3290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff3290, align 4
  %coeff3292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff3292, align 4
  %coeff3294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff3294, align 4
  %coeff3296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff3296, align 4
  %coeff3298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3298, align 4
  %coeff3300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3300, align 4
  %coeff3302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3302, align 4
  %coeff3304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3304, align 4
  %coeff3306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3306, align 4
  %coeff3308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3308, align 4
  %coeff3310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3310, align 4
  %coeff3312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3312, align 4
  %coeff3314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3314, align 4
  %coeff3316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3316, align 4
  %coeff3318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3318, align 4
  %coeff3320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3320, align 4
  %coeff3322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3322, align 4
  %coeff3324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3324, align 4
  %coeff3326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 0
  store i128 562949953355774, i128* %coeff3326, align 4
  %coeff3328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3328, align 4
  %coeff3330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3330, align 4
  %coeff3332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3332, align 4
  %coeff3334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3334, align 4
  %coeff3336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3336, align 4
  %coeff3338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 6
  store i128 0, i128* %coeff3338, align 4
  %coeff3340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff3340, align 4
  %coeff3342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff3342, align 4
  %coeff3344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff3344, align 4
  %coeff3346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff3346, align 4
  %coeff3348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff3348, align 4
  %coeff3350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff3350, align 4
  %coeff3352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff3352, align 4
  %coeff3354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3354, align 4
  %coeff3356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3356, align 4
  %coeff3358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3358, align 4
  %coeff3360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3360, align 4
  %coeff3362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3362, align 4
  %coeff3364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3364, align 4
  %coeff3366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3366, align 4
  %coeff3368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff3368, align 4
  %coeff3370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3370, align 4
  %coeff3372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3372, align 4
  %coeff3374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3374, align 4
  %coeff3376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3376, align 4
  %coeff3378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3378, align 4
  %coeff3380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3380, align 4
  %coeff3382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff3382, align 4
  %coeff3384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff3384, align 4
  %coeff3386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff3386, align 4
  %coeff3388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff3388, align 4
  %coeff3390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff3390, align 4
  %coeff3392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 5
  store i128 0, i128* %coeff3392, align 4
  %coeff3394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 6
  store i128 0, i128* %coeff3394, align 4
  %coeff3396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff3396, align 4
  %coeff3398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff3398, align 4
  %coeff3400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff3400, align 4
  %coeff3402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff3402, align 4
  %coeff3404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff3404, align 4
  %coeff3406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff3406, align 4
  %coeff3408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff3408, align 4
  %coeff3410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 0
  store i128 562949953355774, i128* %coeff3410, align 4
  %coeff3412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3412, align 4
  %coeff3414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3414, align 4
  %coeff3416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3416, align 4
  %coeff3418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3418, align 4
  %coeff3420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3420, align 4
  %coeff3422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff3422, align 4
  %coeff3424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3424, align 4
  %coeff3426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3426, align 4
  %coeff3428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3428, align 4
  %coeff3430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3430, align 4
  %coeff3432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3432, align 4
  %coeff3434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3434, align 4
  %coeff3436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3436, align 4
  %coeff3438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3438, align 4
  %coeff3440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3440, align 4
  %coeff3442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3442, align 4
  %coeff3444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3444, align 4
  %coeff3446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3446, align 4
  %coeff3448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3448, align 4
  %coeff3450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3450, align 4
  %coeff3452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff3452, align 4
  %coeff3454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff3454, align 4
  %coeff3456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff3456, align 4
  %coeff3458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff3458, align 4
  %coeff3460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff3460, align 4
  %coeff3462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff3462, align 4
  %coeff3464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff3464, align 4
  %coeff3466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3466, align 4
  %coeff3468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3468, align 4
  %coeff3470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3470, align 4
  %coeff3472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3472, align 4
  %coeff3474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3474, align 4
  %coeff3476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3476, align 4
  %coeff3478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3478, align 4
  %coeff3480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3480, align 4
  %coeff3482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3482, align 4
  %coeff3484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3484, align 4
  %coeff3486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3486, align 4
  %coeff3488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3488, align 4
  %coeff3490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3490, align 4
  %coeff3492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3492, align 4
  %coeff3494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 0
  store i128 28716041818876309, i128* %coeff3494, align 4
  %coeff3496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 1
  store i128 880810432502333, i128* %coeff3496, align 4
  %coeff3498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 2
  store i128 21849854820311495, i128* %coeff3498, align 4
  %coeff3500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 3
  store i128 16831420749721498, i128* %coeff3500, align 4
  %coeff3502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 4
  store i128 8102400203380238, i128* %coeff3502, align 4
  %coeff3504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 5
  store i128 24819801933832019, i128* %coeff3504, align 4
  %coeff3506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 6
  store i128 1428886299480417, i128* %coeff3506, align 4
  %coeff3508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 0
  store i128 7031280223355158, i128* %coeff3508, align 4
  %coeff3510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 1
  store i128 35145111776945462, i128* %coeff3510, align 4
  %coeff3512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 2
  store i128 15263901815609576, i128* %coeff3512, align 4
  %coeff3514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 3
  store i128 27123300247230202, i128* %coeff3514, align 4
  %coeff3516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 4
  store i128 8449056334504512, i128* %coeff3516, align 4
  %coeff3518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 5
  store i128 34652109665036566, i128* %coeff3518, align 4
  %coeff3520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 6
  store i128 400995163066007, i128* %coeff3520, align 4
  %coeff3522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff3522, align 4
  %coeff3524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3524, align 4
  %coeff3526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3526, align 4
  %coeff3528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3528, align 4
  %coeff3530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3530, align 4
  %coeff3532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3532, align 4
  %coeff3534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3534, align 4
  %coeff3536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 0
  store i128 562949953355774, i128* %coeff3536, align 4
  %coeff3538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 1
  store i128 13553422473102428, i128* %coeff3538, align 4
  %coeff3540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 2
  store i128 31415118892071007, i128* %coeff3540, align 4
  %coeff3542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 3
  store i128 22654059864235337, i128* %coeff3542, align 4
  %coeff3544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 4
  store i128 30651204406894710, i128* %coeff3544, align 4
  %coeff3546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 5
  store i128 13070338751470, i128* %coeff3546, align 4
  %coeff3548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3548, align 4
  %coeff3550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff3550, align 4
  %coeff3552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff3552, align 4
  %coeff3554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff3554, align 4
  %coeff3556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff3556, align 4
  %coeff3558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff3558, align 4
  %coeff3560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 5
  store i128 401348527762810, i128* %coeff3560, align 4
  %coeff3562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 6
  store i128 470331148861392, i128* %coeff3562, align 4
  %coeff3564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff3564, align 4
  %coeff3566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff3566, align 4
  %coeff3568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff3568, align 4
  %coeff3570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff3570, align 4
  %coeff3572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff3572, align 4
  %coeff3574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 5
  store i128 401348527762810, i128* %coeff3574, align 4
  %coeff3576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 6
  store i128 470331148861392, i128* %coeff3576, align 4
  %coeff3578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 0
  store i128 562949953355775, i128* %coeff3578, align 4
  %coeff3580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3580, align 4
  %coeff3582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3582, align 4
  %coeff3584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3584, align 4
  %coeff3586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3586, align 4
  %coeff3588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3588, align 4
  %coeff3590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff3590, align 4
  %coeff3592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3592, align 4
  %coeff3594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3594, align 4
  %coeff3596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3596, align 4
  %coeff3598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3598, align 4
  %coeff3600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3600, align 4
  %coeff3602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3602, align 4
  %coeff3604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3604, align 4
  %coeff3606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 0
  store i128 33647333985766131, i128* %coeff3606, align 4
  %coeff3608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 1
  store i128 15061775342732377, i128* %coeff3608, align 4
  %coeff3610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 2
  store i128 10634308716634293, i128* %coeff3610, align 4
  %coeff3612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 3
  store i128 15267386808624246, i128* %coeff3612, align 4
  %coeff3614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 4
  store i128 34335022074067067, i128* %coeff3614, align 4
  %coeff3616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 5
  store i128 1778035881690211, i128* %coeff3616, align 4
  %coeff3618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 6
  store i128 69335985795384, i128* %coeff3618, align 4
  %coeff3620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 0
  store i128 2099988056465336, i128* %coeff3620, align 4
  %coeff3622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 1
  store i128 20964146866715418, i128* %coeff3622, align 4
  %coeff3624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 2
  store i128 26479447919286778, i128* %coeff3624, align 4
  %coeff3626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 3
  store i128 28687334188327454, i128* %coeff3626, align 4
  %coeff3628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 4
  store i128 18245231482781651, i128* %coeff3628, align 4
  %coeff3630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 5
  store i128 21665078698214405, i128* %coeff3630, align 4
  %coeff3632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 6
  store i128 1760545476751041, i128* %coeff3632, align 4
  %coeff3634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3634, align 4
  %coeff3636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3636, align 4
  %coeff3638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3638, align 4
  %coeff3640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3640, align 4
  %coeff3642 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3642, align 4
  %coeff3644 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3644, align 4
  %coeff3646 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3646, align 4
  %coeff3648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3648, align 4
  %coeff3650 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3650, align 4
  %coeff3652 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3652, align 4
  %coeff3654 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3654, align 4
  %coeff3656 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3656, align 4
  %coeff3658 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3658, align 4
  %coeff3660 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3660, align 4
  %coeff3662 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3662, align 4
  %coeff3664 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3664, align 4
  %coeff3666 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3666, align 4
  %coeff3668 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3668, align 4
  %coeff3670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3670, align 4
  %coeff3672 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3672, align 4
  %coeff3674 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3674, align 4
  %coeff3676 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff3676, align 4
  %coeff3678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff3678, align 4
  %coeff3680 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff3680, align 4
  %coeff3682 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff3682, align 4
  %coeff3684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff3684, align 4
  %coeff3686 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff3686, align 4
  %coeff3688 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff3688, align 4
  %coeff3690 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff3690, align 4
  %coeff3692 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3692, align 4
  %coeff3694 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3694, align 4
  %coeff3696 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3696, align 4
  %coeff3698 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3698, align 4
  %coeff3700 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3700, align 4
  %coeff3702 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3702, align 4
  %coeff3704 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff3704, align 4
  %coeff3706 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3706, align 4
  %coeff3708 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3708, align 4
  %coeff3710 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3710, align 4
  %coeff3712 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3712, align 4
  %coeff3714 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3714, align 4
  %coeff3716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3716, align 4
  %coeff3718 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3718, align 4
  %coeff3720 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3720, align 4
  %coeff3722 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3722, align 4
  %coeff3724 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3724, align 4
  %coeff3726 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3726, align 4
  %coeff3728 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3728, align 4
  %coeff3730 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3730, align 4
  %coeff3732 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff3732, align 4
  %coeff3734 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff3734, align 4
  %coeff3736 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff3736, align 4
  %coeff3738 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff3738, align 4
  %coeff3740 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff3740, align 4
  %coeff3742 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff3742, align 4
  %coeff3744 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff3744, align 4
  %coeff3746 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff3746, align 4
  %coeff3748 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff3748, align 4
  %coeff3750 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff3750, align 4
  %coeff3752 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff3752, align 4
  %coeff3754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff3754, align 4
  %coeff3756 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 5
  store i128 0, i128* %coeff3756, align 4
  %coeff3758 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff3758, align 4
  %coeff3760 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3760, align 4
  %coeff3762 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3762, align 4
  %coeff3764 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3764, align 4
  %coeff3766 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3766, align 4
  %coeff3768 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3768, align 4
  %coeff3770 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3770, align 4
  %coeff3772 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3772, align 4
  %coeff3774 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3774, align 4
  %coeff3776 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3776, align 4
  %coeff3778 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3778, align 4
  %coeff3780 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3780, align 4
  %coeff3782 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3782, align 4
  %coeff3784 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3784, align 4
  %coeff3786 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3786, align 4
  %coeff3788 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff3788, align 4
  %coeff3790 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff3790, align 4
  %coeff3792 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff3792, align 4
  %coeff3794 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff3794, align 4
  %coeff3796 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff3796, align 4
  %coeff3798 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff3798, align 4
  %coeff3800 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff3800, align 4
  %coeff3802 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3802, align 4
  %coeff3804 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3804, align 4
  %coeff3806 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3806, align 4
  %coeff3808 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3808, align 4
  %coeff3810 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3810, align 4
  %coeff3812 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3812, align 4
  %coeff3814 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3814, align 4
  %coeff3816 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3816, align 4
  %coeff3818 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3818, align 4
  %coeff3820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3820, align 4
  %coeff3822 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3822, align 4
  %coeff3824 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3824, align 4
  %coeff3826 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3826, align 4
  %coeff3828 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3828, align 4
  %coeff3830 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 0
  store i128 33647333985766131, i128* %coeff3830, align 4
  %coeff3832 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 1
  store i128 15061775342732377, i128* %coeff3832, align 4
  %coeff3834 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 2
  store i128 10634308716634293, i128* %coeff3834, align 4
  %coeff3836 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 3
  store i128 15267386808624246, i128* %coeff3836, align 4
  %coeff3838 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 4
  store i128 34335022074067067, i128* %coeff3838, align 4
  %coeff3840 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 5
  store i128 1778035881690211, i128* %coeff3840, align 4
  %coeff3842 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 6
  store i128 69335985795384, i128* %coeff3842, align 4
  %coeff3844 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 0
  store i128 2099988056465336, i128* %coeff3844, align 4
  %coeff3846 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 1
  store i128 20964146866715418, i128* %coeff3846, align 4
  %coeff3848 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 2
  store i128 26479447919286778, i128* %coeff3848, align 4
  %coeff3850 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 3
  store i128 28687334188327454, i128* %coeff3850, align 4
  %coeff3852 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 4
  store i128 18245231482781651, i128* %coeff3852, align 4
  %coeff3854 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 5
  store i128 21665078698214405, i128* %coeff3854, align 4
  %coeff3856 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 6
  store i128 1760545476751041, i128* %coeff3856, align 4
  %coeff3858 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff3858, align 4
  %coeff3860 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3860, align 4
  %coeff3862 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3862, align 4
  %coeff3864 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3864, align 4
  %coeff3866 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3866, align 4
  %coeff3868 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3868, align 4
  %coeff3870 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3870, align 4
  %coeff3872 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 0
  store i128 35184372088875692, i128* %coeff3872, align 4
  %coeff3874 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 1
  store i128 22472499736345367, i128* %coeff3874, align 4
  %coeff3876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 2
  store i128 5698637743850064, i128* %coeff3876, align 4
  %coeff3878 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 3
  store i128 21300661132716363, i128* %coeff3878, align 4
  %coeff3880 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 4
  store i128 21929049149954008, i128* %coeff3880, align 4
  %coeff3882 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 5
  store i128 23430044241153146, i128* %coeff3882, align 4
  %coeff3884 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 6
  store i128 1829881462546425, i128* %coeff3884, align 4
  %coeff3886 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff3886, align 4
  %coeff3888 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff3888, align 4
  %coeff3890 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff3890, align 4
  %coeff3892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff3892, align 4
  %coeff3894 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff3894, align 4
  %coeff3896 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff3896, align 4
  %coeff3898 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff3898, align 4
  %coeff3900 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff3900, align 4
  %coeff3902 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff3902, align 4
  %coeff3904 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff3904, align 4
  %coeff3906 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff3906, align 4
  %coeff3908 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff3908, align 4
  %coeff3910 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff3910, align 4
  %coeff3912 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff3912, align 4
  %coeff3914 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff3914, align 4
  %coeff3916 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3916, align 4
  %coeff3918 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3918, align 4
  %coeff3920 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3920, align 4
  %coeff3922 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3922, align 4
  %coeff3924 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3924, align 4
  %coeff3926 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3926, align 4
  %coeff3928 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3928, align 4
  %coeff3930 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3930, align 4
  %coeff3932 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3932, align 4
  %coeff3934 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3934, align 4
  %coeff3936 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3936, align 4
  %coeff3938 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3938, align 4
  %coeff3940 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3940, align 4
  %coeff3942 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 0
  store i128 28716041818876309, i128* %coeff3942, align 4
  %coeff3944 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 1
  store i128 880810432502333, i128* %coeff3944, align 4
  %coeff3946 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 2
  store i128 21849854820311495, i128* %coeff3946, align 4
  %coeff3948 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 3
  store i128 16831420749721498, i128* %coeff3948, align 4
  %coeff3950 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 4
  store i128 8102400203380238, i128* %coeff3950, align 4
  %coeff3952 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 5
  store i128 24819801933832019, i128* %coeff3952, align 4
  %coeff3954 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 6
  store i128 1428886299480417, i128* %coeff3954, align 4
  %coeff3956 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 0
  store i128 7031280223355158, i128* %coeff3956, align 4
  %coeff3958 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 1
  store i128 35145111776945462, i128* %coeff3958, align 4
  %coeff3960 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 2
  store i128 15263901815609576, i128* %coeff3960, align 4
  %coeff3962 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 3
  store i128 27123300247230202, i128* %coeff3962, align 4
  %coeff3964 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 4
  store i128 8449056334504512, i128* %coeff3964, align 4
  %coeff3966 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 5
  store i128 34652109665036566, i128* %coeff3966, align 4
  %coeff3968 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 6
  store i128 400995163066007, i128* %coeff3968, align 4
  %coeff3970 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3970, align 4
  %coeff3972 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3972, align 4
  %coeff3974 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3974, align 4
  %coeff3976 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3976, align 4
  %coeff3978 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3978, align 4
  %coeff3980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3980, align 4
  %coeff3982 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3982, align 4
  %coeff3984 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3984, align 4
  %coeff3986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3986, align 4
  %coeff3988 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3988, align 4
  %coeff3990 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3990, align 4
  %coeff3992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3992, align 4
  %coeff3994 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3994, align 4
  %coeff3996 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3996, align 4
  %coeff3998 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3998, align 4
  %coeff4000 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4000, align 4
  %coeff4002 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4002, align 4
  %coeff4004 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4004, align 4
  %coeff4006 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4006, align 4
  %coeff4008 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4008, align 4
  %coeff4010 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4010, align 4
  %coeff4012 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff4012, align 4
  %coeff4014 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff4014, align 4
  %coeff4016 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff4016, align 4
  %coeff4018 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff4018, align 4
  %coeff4020 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff4020, align 4
  %coeff4022 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff4022, align 4
  %coeff4024 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff4024, align 4
  %coeff4026 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 0
  store i128 562949953355774, i128* %coeff4026, align 4
  %coeff4028 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4028, align 4
  %coeff4030 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4030, align 4
  %coeff4032 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4032, align 4
  %coeff4034 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4034, align 4
  %coeff4036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4036, align 4
  %coeff4038 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff4038, align 4
  %coeff4040 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff4040, align 4
  %coeff4042 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff4042, align 4
  %coeff4044 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff4044, align 4
  %coeff4046 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff4046, align 4
  %coeff4048 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff4048, align 4
  %coeff4050 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff4050, align 4
  %coeff4052 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4052, align 4
  %coeff4054 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff4054, align 4
  %coeff4056 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff4056, align 4
  %coeff4058 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff4058, align 4
  %coeff4060 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff4060, align 4
  %coeff4062 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff4062, align 4
  %coeff4064 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 5
  store i128 0, i128* %coeff4064, align 4
  %coeff4066 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 6
  store i128 0, i128* %coeff4066, align 4
  %coeff4068 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff4068, align 4
  %coeff4070 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff4070, align 4
  %coeff4072 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff4072, align 4
  %coeff4074 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff4074, align 4
  %coeff4076 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff4076, align 4
  %coeff4078 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff4078, align 4
  %coeff4080 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff4080, align 4
  %coeff4082 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff4082, align 4
  %coeff4084 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4084, align 4
  %coeff4086 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4086, align 4
  %coeff4088 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4088, align 4
  %coeff4090 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4090, align 4
  %coeff4092 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4092, align 4
  %coeff4094 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4094, align 4
  %coeff4096 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4096, align 4
  %coeff4098 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4098, align 4
  %coeff4100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4100, align 4
  %coeff4102 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4102, align 4
  %coeff4104 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4104, align 4
  %coeff4106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4106, align 4
  %coeff4108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4108, align 4
  %coeff4110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 0
  store i128 562949953355774, i128* %coeff4110, align 4
  %coeff4112 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4112, align 4
  %coeff4114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4114, align 4
  %coeff4116 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4116, align 4
  %coeff4118 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4118, align 4
  %coeff4120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4120, align 4
  %coeff4122 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 6
  store i128 0, i128* %coeff4122, align 4
  %coeff4124 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff4124, align 4
  %coeff4126 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff4126, align 4
  %coeff4128 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff4128, align 4
  %coeff4130 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff4130, align 4
  %coeff4132 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff4132, align 4
  %coeff4134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff4134, align 4
  %coeff4136 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff4136, align 4
  %coeff4138 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff4138, align 4
  %coeff4140 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff4140, align 4
  %coeff4142 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff4142, align 4
  %coeff4144 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff4144, align 4
  %coeff4146 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff4146, align 4
  %coeff4148 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff4148, align 4
  %coeff4150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff4150, align 4
  %coeff4152 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff4152, align 4
  %coeff4154 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff4154, align 4
  %coeff4156 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff4156, align 4
  %coeff4158 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff4158, align 4
  %coeff4160 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff4160, align 4
  %coeff4162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff4162, align 4
  %coeff4164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff4164, align 4
  %coeff4166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff4166, align 4
  %coeff4168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff4168, align 4
  %coeff4170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff4170, align 4
  %coeff4172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff4172, align 4
  %coeff4174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff4174, align 4
  %coeff4176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 5
  store i128 401348527762810, i128* %coeff4176, align 4
  %coeff4178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 6
  store i128 470331148861392, i128* %coeff4178, align 4
  %coeff4180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff4180, align 4
  %coeff4182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff4182, align 4
  %coeff4184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff4184, align 4
  %coeff4186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff4186, align 4
  %coeff4188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff4188, align 4
  %coeff4190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff4190, align 4
  %coeff4192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff4192, align 4
  %coeff4194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff4194, align 4
  %coeff4196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff4196, align 4
  %coeff4198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff4198, align 4
  %coeff4200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff4200, align 4
  %coeff4202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff4202, align 4
  %coeff4204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff4204, align 4
  %coeff4206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff4206, align 4
  %coeff4208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff4208, align 4
  %coeff4210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff4210, align 4
  %coeff4212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff4212, align 4
  %coeff4214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff4214, align 4
  %coeff4216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff4216, align 4
  %coeff4218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff4218, align 4
  %coeff4220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4220, align 4
  %coeff4222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff4222, align 4
  %coeff4224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff4224, align 4
  %coeff4226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff4226, align 4
  %coeff4228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff4228, align 4
  %coeff4230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff4230, align 4
  %coeff4232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 5
  store i128 401348527762810, i128* %coeff4232, align 4
  %coeff4234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 6
  store i128 470331148861392, i128* %coeff4234, align 4
  %coeff4236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff4236, align 4
  %coeff4238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff4238, align 4
  %coeff4240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff4240, align 4
  %coeff4242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff4242, align 4
  %coeff4244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff4244, align 4
  %coeff4246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 5
  store i128 401348527762810, i128* %coeff4246, align 4
  %coeff4248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 6
  store i128 470331148861392, i128* %coeff4248, align 4
  %coeff4250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff4250, align 4
  %coeff4252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff4252, align 4
  %coeff4254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff4254, align 4
  %coeff4256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff4256, align 4
  %coeff4258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff4258, align 4
  %coeff4260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff4260, align 4
  %coeff4262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4262, align 4
  %coeff4264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4264, align 4
  %coeff4266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4266, align 4
  %coeff4268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4268, align 4
  %coeff4270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4270, align 4
  %coeff4272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4272, align 4
  %coeff4274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4274, align 4
  %coeff4276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4276, align 4
  %coeff4278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff4278, align 4
  %coeff4280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff4280, align 4
  %coeff4282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff4282, align 4
  %coeff4284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff4284, align 4
  %coeff4286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff4286, align 4
  %coeff4288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff4288, align 4
  %coeff4290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff4290, align 4
  %coeff4292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff4292, align 4
  %coeff4294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff4294, align 4
  %coeff4296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff4296, align 4
  %coeff4298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff4298, align 4
  %coeff4300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff4300, align 4
  %coeff4302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 5
  store i128 401348527762810, i128* %coeff4302, align 4
  %coeff4304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 6
  store i128 470331148861392, i128* %coeff4304, align 4
  %coeff4306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff4306, align 4
  %coeff4308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff4308, align 4
  %coeff4310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff4310, align 4
  %coeff4312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff4312, align 4
  %coeff4314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff4314, align 4
  %coeff4316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff4316, align 4
  %coeff4318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff4318, align 4
  %coeff4320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff4320, align 4
  %coeff4322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff4322, align 4
  %coeff4324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff4324, align 4
  %coeff4326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff4326, align 4
  %coeff4328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff4328, align 4
  %coeff4330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff4330, align 4
  %coeff4332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff4332, align 4
  %coeff4334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff4334, align 4
  %coeff4336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4336, align 4
  %coeff4338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4338, align 4
  %coeff4340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4340, align 4
  %coeff4342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4342, align 4
  %coeff4344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4344, align 4
  %coeff4346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4346, align 4
  %coeff4348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff4348, align 4
  %coeff4350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff4350, align 4
  %coeff4352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff4352, align 4
  %coeff4354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff4354, align 4
  %coeff4356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff4356, align 4
  %coeff4358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff4358, align 4
  %coeff4360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff4360, align 4
  %coeff4362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff4362, align 4
  %coeff4364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4364, align 4
  %coeff4366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4366, align 4
  %coeff4368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4368, align 4
  %coeff4370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4370, align 4
  %coeff4372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4372, align 4
  %coeff4374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4374, align 4
  %coeff4376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff4376, align 4
  %coeff4378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff4378, align 4
  %coeff4380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff4380, align 4
  %coeff4382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff4382, align 4
  %coeff4384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff4384, align 4
  %coeff4386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff4386, align 4
  %coeff4388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4388, align 4
  %coeff4390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff4390, align 4
  %coeff4392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff4392, align 4
  %coeff4394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff4394, align 4
  %coeff4396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff4396, align 4
  %coeff4398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff4398, align 4
  %coeff4400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff4400, align 4
  %coeff4402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4402, align 4
  %coeff4404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff4404, align 4
  %coeff4406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff4406, align 4
  %coeff4408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff4408, align 4
  %coeff4410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff4410, align 4
  %coeff4412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff4412, align 4
  %coeff4414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff4414, align 4
  %coeff4416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff4416, align 4
  %coeff4418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 0
  store i128 562949953355774, i128* %coeff4418, align 4
  %coeff4420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4420, align 4
  %coeff4422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4422, align 4
  %coeff4424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4424, align 4
  %coeff4426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4426, align 4
  %coeff4428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4428, align 4
  %coeff4430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff4430, align 4
  %coeff4432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4432, align 4
  %coeff4434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4434, align 4
  %coeff4436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4436, align 4
  %coeff4438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4438, align 4
  %coeff4440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4440, align 4
  %coeff4442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4442, align 4
  %coeff4444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4444, align 4
  %coeff4446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 0
  store i128 562949953355775, i128* %coeff4446, align 4
  %coeff4448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4448, align 4
  %coeff4450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4450, align 4
  %coeff4452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4452, align 4
  %coeff4454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4454, align 4
  %coeff4456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4456, align 4
  %coeff4458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 6
  store i128 0, i128* %coeff4458, align 4
  %coeff4460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff4460, align 4
  %coeff4462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff4462, align 4
  %coeff4464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff4464, align 4
  %coeff4466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff4466, align 4
  %coeff4468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff4468, align 4
  %coeff4470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff4470, align 4
  %coeff4472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff4472, align 4
  %coeff4474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff4474, align 4
  %coeff4476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff4476, align 4
  %coeff4478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff4478, align 4
  %coeff4480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff4480, align 4
  %coeff4482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff4482, align 4
  %coeff4484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff4484, align 4
  %coeff4486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff4486, align 4
  %coeff4488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff4488, align 4
  %coeff4490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff4490, align 4
  %coeff4492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff4492, align 4
  %coeff4494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff4494, align 4
  %coeff4496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff4496, align 4
  %coeff4498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff4498, align 4
  %coeff4500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff4500, align 4
  %coeff4502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 0
  store i128 7031280223355158, i128* %coeff4502, align 4
  %coeff4504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 1
  store i128 35145111776945462, i128* %coeff4504, align 4
  %coeff4506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 2
  store i128 15263901815609576, i128* %coeff4506, align 4
  %coeff4508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 3
  store i128 27123300247230202, i128* %coeff4508, align 4
  %coeff4510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 4
  store i128 8449056334504512, i128* %coeff4510, align 4
  %coeff4512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 5
  store i128 34652109665036566, i128* %coeff4512, align 4
  %coeff4514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 6
  store i128 400995163066007, i128* %coeff4514, align 4
  %coeff4516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 0
  store i128 28716041818876309, i128* %coeff4516, align 4
  %coeff4518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 1
  store i128 880810432502333, i128* %coeff4518, align 4
  %coeff4520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 2
  store i128 21849854820311495, i128* %coeff4520, align 4
  %coeff4522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 3
  store i128 16831420749721498, i128* %coeff4522, align 4
  %coeff4524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 4
  store i128 8102400203380238, i128* %coeff4524, align 4
  %coeff4526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 5
  store i128 24819801933832019, i128* %coeff4526, align 4
  %coeff4528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 6
  store i128 1428886299480417, i128* %coeff4528, align 4
  %coeff4530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff4530, align 4
  %coeff4532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff4532, align 4
  %coeff4534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff4534, align 4
  %coeff4536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff4536, align 4
  %coeff4538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff4538, align 4
  %coeff4540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff4540, align 4
  %coeff4542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff4542, align 4
  %coeff4544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 0
  store i128 562949953355774, i128* %coeff4544, align 4
  %coeff4546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 1
  store i128 13553422473102428, i128* %coeff4546, align 4
  %coeff4548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 2
  store i128 31415118892071007, i128* %coeff4548, align 4
  %coeff4550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 3
  store i128 22654059864235337, i128* %coeff4550, align 4
  %coeff4552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 4
  store i128 30651204406894710, i128* %coeff4552, align 4
  %coeff4554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 5
  store i128 13070338751470, i128* %coeff4554, align 4
  %coeff4556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4556, align 4
  %coeff4558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff4558, align 4
  %coeff4560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff4560, align 4
  %coeff4562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff4562, align 4
  %coeff4564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff4564, align 4
  %coeff4566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff4566, align 4
  %coeff4568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff4568, align 4
  %coeff4570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff4570, align 4
  %coeff4572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff4572, align 4
  %coeff4574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff4574, align 4
  %coeff4576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff4576, align 4
  %coeff4578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff4578, align 4
  %coeff4580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff4580, align 4
  %coeff4582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff4582, align 4
  %coeff4584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff4584, align 4
  %coeff4586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 0
  store i128 562949953355775, i128* %coeff4586, align 4
  %coeff4588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4588, align 4
  %coeff4590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4590, align 4
  %coeff4592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4592, align 4
  %coeff4594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4594, align 4
  %coeff4596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4596, align 4
  %coeff4598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff4598, align 4
  %coeff4600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4600, align 4
  %coeff4602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4602, align 4
  %coeff4604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4604, align 4
  %coeff4606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4606, align 4
  %coeff4608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4608, align 4
  %coeff4610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4610, align 4
  %coeff4612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4612, align 4
  %coeff4614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 0
  store i128 2099988056465336, i128* %coeff4614, align 4
  %coeff4616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 1
  store i128 20964146866715418, i128* %coeff4616, align 4
  %coeff4618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 2
  store i128 26479447919286778, i128* %coeff4618, align 4
  %coeff4620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 3
  store i128 28687334188327454, i128* %coeff4620, align 4
  %coeff4622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 4
  store i128 18245231482781651, i128* %coeff4622, align 4
  %coeff4624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 5
  store i128 21665078698214405, i128* %coeff4624, align 4
  %coeff4626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 6
  store i128 1760545476751041, i128* %coeff4626, align 4
  %coeff4628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 0
  store i128 33647333985766131, i128* %coeff4628, align 4
  %coeff4630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 1
  store i128 15061775342732377, i128* %coeff4630, align 4
  %coeff4632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 2
  store i128 10634308716634293, i128* %coeff4632, align 4
  %coeff4634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 3
  store i128 15267386808624246, i128* %coeff4634, align 4
  %coeff4636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 4
  store i128 34335022074067067, i128* %coeff4636, align 4
  %coeff4638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 5
  store i128 1778035881690211, i128* %coeff4638, align 4
  %coeff4640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 6
  store i128 69335985795384, i128* %coeff4640, align 4
  br label %if.exit4641

if.false2619:                                     ; preds = %if.exit2617
  br label %if.exit4641

if.exit4641:                                      ; preds = %if.false2619, %if.true2618
  ret [256 x [256 x [256 x [256 x i128]]]]* %uniform_array
}

define void @fn_template_init_num2bits(%struct_template_circuit_num2bits* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %0, i32 0, i32 0
  %num2bits.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %0, i32 0, i32 1
  %num2bits.in.read_input_inner = load i128, i128* %struct_getter1, align 4
  %lc12 = call i128 @fn_intrinsic_utils_init()
  %e23 = call i128 @fn_intrinsic_utils_init()
  %i4 = call i128 @fn_intrinsic_utils_init()
  %num2bits.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %num2bits.out.declare_output, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %lc1.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %e2.0 = phi i128 [ 1, %entry ], [ %add24, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add26, %loop.latch ]
  %rshift = lshr i128 %num2bits.in.read_input_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %num2bits.out.declare_output, align 8
  %out7 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %out7, align 4
  %out8 = load [256 x i128]*, [256 x i128]** %num2bits.out.declare_output, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %out8, i128 0, i128 %i.0
  %out10 = load i128, i128* %array_getter, align 4
  %out11 = load [256 x i128]*, [256 x i128]** %num2bits.out.declare_output, align 8
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %out11, i128 0, i128 %i.0
  %out14 = load i128, i128* %array_getter13, align 4
  %sub = sub i128 %out14, 1
  %mul = mul i128 %out10, %sub
  call void @fn_intrinsic_utils_constraint(i128 %mul, i128 0, i1* @constraint.3)
  %out16 = load [256 x i128]*, [256 x i128]** %num2bits.out.declare_output, align 8
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %out16, i128 0, i128 %i.0
  %out19 = load i128, i128* %array_getter18, align 4
  %mul21 = mul i128 %out19, %e2.0
  %add = add i128 %lc1.0, %mul21
  %add24 = add i128 %e2.0, %e2.0
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add26 = add i128 %i.0, 1
  %slt = icmp slt i128 %add26, %num2bits.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  call void @fn_intrinsic_utils_constraint(i128 %add, i128 %num2bits.in.read_input_inner, i1* @constraint.4)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %num2bits.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %num2bits.n.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out31 = load [256 x i128]*, [256 x i128]** %num2bits.out.declare_output, align 8
  %num2bits.out.write_output_inner = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %0, i32 0, i32 2
  store [256 x i128]* %out31, [256 x i128]** %num2bits.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %0) {
entry:
  %struct_template_circuit_num2bits = alloca %struct_template_circuit_num2bits, align 8
  %num2bits.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %struct_template_circuit_num2bits, i32 0, i32 0
  store i128 %0, i128* %num2bits.n.write_arg_inner, align 4
  ret %struct_template_circuit_num2bits* %struct_template_circuit_num2bits
}

define i128 @min(i128 %0, i128 %1) {
entry:
  %slt = icmp slt i128 %0, %1
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  ret i128 %0

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false
  ret i128 %1
}

define void @fn_template_init_modsumfour(%struct_template_circuit_modsumfour* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 0
  %modsumfour.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 1
  %modsumfour.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 2
  %modsumfour.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 3
  %modsumfour.c.read_input_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 4
  %modsumfour.d.read_input_inner = load i128, i128* %struct_getter4, align 4
  %sum = call i128 @fn_intrinsic_utils_init()
  %carry = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %modsumfour.n.read_arg_inner, 2
  %sle = icmp sle i128 %add, 253
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add6 = add i128 %modsumfour.n.read_arg_inner, 2
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add6)
  %add7 = add i128 %modsumfour.a.read_input_inner, %modsumfour.b.read_input_inner
  %add8 = add i128 %add7, %modsumfour.c.read_input_inner
  %add9 = add i128 %add8, %modsumfour.d.read_input_inner
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter11, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %add9, i1* @constraint.5)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %add9, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %modsumfour.n.read_arg_inner
  %n2b15 = load i128, i128* %array_getter, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %add20 = add i128 %modsumfour.n.read_arg_inner, 1
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter18, i128 0, i128 %add20
  %n2b22 = load i128, i128* %array_getter21, align 4
  %mul = mul i128 2, %n2b22
  %add23 = add i128 %n2b15, %mul
  call void @fn_intrinsic_utils_constraint(i128 %carry, i128 %add23, i1* @constraint.6)
  %modsumfour.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 6
  store i128 %add23, i128* %modsumfour.carry.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 6
  %modsumfour.carry.read_output_inner = load i128, i128* %struct_getter27, align 4
  %add30 = add i128 %modsumfour.a.read_input_inner, %modsumfour.b.read_input_inner
  %add32 = add i128 %add30, %modsumfour.c.read_input_inner
  %add34 = add i128 %add32, %modsumfour.d.read_input_inner
  %lshift = shl i128 1, %modsumfour.n.read_arg_inner
  %mul37 = mul i128 %modsumfour.carry.read_output_inner, %lshift
  %sub = sub i128 %add34, %mul37
  call void @fn_intrinsic_utils_constraint(i128 %sum, i128 %sub, i1* @constraint.7)
  %modsumfour.sum.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 5
  store i128 %sub, i128* %modsumfour.sum.write_output_inner, align 4
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 5
  %modsumfour.sum.read_output_inner = load i128, i128* %struct_getter41, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %modsumfour.sum.write_output_inner43 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 5
  store i128 %modsumfour.sum.read_output_inner, i128* %modsumfour.sum.write_output_inner43, align 4
  %modsumfour.carry.write_output_inner45 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 6
  store i128 %modsumfour.carry.read_output_inner, i128* %modsumfour.carry.write_output_inner45, align 4
  ret void
}

define %struct_template_circuit_modsumfour* @fn_template_build_modsumfour(i128 %0) {
entry:
  %struct_template_circuit_modsumfour = alloca %struct_template_circuit_modsumfour, align 8
  %modsumfour.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %struct_template_circuit_modsumfour, i32 0, i32 0
  store i128 %0, i128* %modsumfour.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsumfour* %struct_template_circuit_modsumfour
}

define void @fn_template_init_xor(%struct_template_circuit_xor* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 0
  %xor.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 1
  %xor.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %xor.a.read_input_inner, %xor.b.read_input_inner
  %mul = mul i128 2, %xor.a.read_input_inner
  %mul4 = mul i128 %mul, %xor.b.read_input_inner
  %sub = sub i128 %add, %mul4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub, i1* @constraint.8)
  %xor.out.write_output_inner = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 2
  store i128 %sub, i128* %xor.out.write_output_inner, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 2
  %xor.out.read_output_inner = load i128, i128* %struct_getter7, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %xor.out.write_output_inner9 = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 2
  store i128 %xor.out.read_output_inner, i128* %xor.out.write_output_inner9, align 4
  ret void
}

define %struct_template_circuit_xor* @fn_template_build_xor() {
entry:
  %struct_template_circuit_xor = alloca %struct_template_circuit_xor, align 8
  ret %struct_template_circuit_xor* %struct_template_circuit_xor
}

define [256 x i128]* @SplitFn(i128 %0, i128 %1, i128 %2) {
entry:
  %var_inline_array = alloca [256 x i128], align 8
  %lshift = shl i128 1, %1
  %mod = srem i128 %0, %lshift
  %var_inline_array1 = getelementptr inbounds [256 x i128], [256 x i128]* %var_inline_array, i128 0, i128 0
  store i128 %mod, i128* %var_inline_array1, align 4
  %lshift4 = shl i128 1, %1
  %sdiv = sdiv i128 %0, %lshift4
  %lshift5 = shl i128 1, %2
  %mod6 = srem i128 %sdiv, %lshift5
  %var_inline_array7 = getelementptr inbounds [256 x i128], [256 x i128]* %var_inline_array, i128 0, i128 1
  store i128 %mod6, i128* %var_inline_array7, align 4
  ret [256 x i128]* %var_inline_array
}

define [256 x i128]* @signed_long_to_short(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %carry1 = call i128 @fn_intrinsic_utils_init()
  %X2 = call i128 @fn_intrinsic_utils_init()
  %MAXL3 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %borrow7 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array8 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a10 = load i128, i128* %array_getter, align 4
  %temp12 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.0
  store i128 %a10, i128* %temp12, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch20, %loop.exit
  %i.1 = phi i128 [ %1, %loop.exit ], [ %add22, %loop.latch20 ]
  %temp19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.1
  store i128 0, i128* %temp19, align 4
  br label %loop.latch20

loop.latch20:                                     ; preds = %loop.body16
  %add22 = add i128 %i.1, 1
  %sle = icmp sle i128 %add22, 50
  br i1 %sle, label %loop.body16, label %loop.exit25

loop.exit25:                                      ; preds = %loop.latch20
  %lshift = shl i128 1, %0
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch83, %loop.exit25
  %i.2 = phi i128 [ 0, %loop.exit25 ], [ %add85, %loop.latch83 ]
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp30 = load i128, i128* %array_getter29, align 4
  %sge = icmp sge i128 %temp30, 0
  br i1 %sge, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body26
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp34 = load i128, i128* %array_getter33, align 4
  %mod = srem i128 %temp34, %lshift
  %out38 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  store i128 %mod, i128* %out38, align 4
  %add41 = add i128 %i.2, 1
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add41
  %temp43 = load i128, i128* %array_getter42, align 4
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp47 = load i128, i128* %array_getter46, align 4
  %sdiv = sdiv i128 %temp47, %lshift
  %add49 = add i128 %temp43, %sdiv
  %add52 = add i128 %i.2, 1
  %temp53 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add52
  store i128 %add49, i128* %temp53, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body26
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp57 = load i128, i128* %array_getter56, align 4
  %neg = sub i128 0, %temp57
  %add59 = add i128 %neg, %lshift
  %sub = sub i128 %add59, 1
  %sdiv61 = sdiv i128 %sub, %lshift
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp65 = load i128, i128* %array_getter64, align 4
  %mul = mul i128 %sdiv61, %lshift
  %add68 = add i128 %temp65, %mul
  %out71 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  store i128 %add68, i128* %out71, align 4
  %add74 = add i128 %i.2, 1
  %array_getter75 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add74
  %temp76 = load i128, i128* %array_getter75, align 4
  %sub78 = sub i128 %temp76, %sdiv61
  %add81 = add i128 %i.2, 1
  %temp82 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add81
  store i128 %sub78, i128* %temp82, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch83

loop.latch83:                                     ; preds = %if.exit
  %add85 = add i128 %i.2, 1
  %slt88 = icmp slt i128 %add85, 50
  br i1 %slt88, label %loop.body26, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch83
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 50
  %temp95 = load i128, i128* %array_getter94, align 4
  %sge96 = icmp sge i128 %temp95, 0
  br i1 %sge96, label %if.true90, label %if.false91

if.true90:                                        ; preds = %loop.exit89
  %array_getter99 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 50
  %temp100 = load i128, i128* %array_getter99, align 4
  %eq = icmp eq i128 %temp100, 0
  call void @fn_intrinsic_utils_assert(i1 %eq)
  %out103 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 50
  store i128 0, i128* %out103, align 4
  ret [256 x i128]* %uniform_array

if.false91:                                       ; preds = %loop.exit89
  br label %if.exit105

if.exit105:                                       ; preds = %if.false91
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch114, %if.exit105
  %i.3 = phi i128 [ 0, %if.exit105 ], [ %add116, %loop.latch114 ]
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.3
  %a110 = load i128, i128* %array_getter109, align 4
  %temp113 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.3
  store i128 %a110, i128* %temp113, align 4
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.body106
  %add116 = add i128 %i.3, 1
  %slt119 = icmp slt i128 %add116, %1
  br i1 %slt119, label %loop.body106, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch114
  br label %loop.body122

loop.body122:                                     ; preds = %loop.latch126, %loop.exit120
  %i.4 = phi i128 [ %1, %loop.exit120 ], [ %add128, %loop.latch126 ]
  %temp125 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.4
  store i128 0, i128* %temp125, align 4
  br label %loop.latch126

loop.latch126:                                    ; preds = %loop.body122
  %add128 = add i128 %i.4, 1
  %sle131 = icmp sle i128 %add128, 50
  br i1 %sle131, label %loop.body122, label %loop.exit132

loop.exit132:                                     ; preds = %loop.latch126
  br label %loop.body133

loop.body133:                                     ; preds = %loop.latch202, %loop.exit132
  %i.5 = phi i128 [ 0, %loop.exit132 ], [ %add204, %loop.latch202 ]
  %array_getter138 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp139 = load i128, i128* %array_getter138, align 4
  %slt140 = icmp slt i128 %temp139, 0
  br i1 %slt140, label %if.true134, label %if.false135

if.true134:                                       ; preds = %loop.body133
  %array_getter143 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp144 = load i128, i128* %array_getter143, align 4
  %neg145 = sub i128 0, %temp144
  %sdiv147 = sdiv i128 %neg145, %lshift
  %array_getter150 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp151 = load i128, i128* %array_getter150, align 4
  %mul154 = mul i128 %sdiv147, %lshift
  %add155 = add i128 %temp151, %mul154
  %out158 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 %add155, i128* %out158, align 4
  %add161 = add i128 %i.5, 1
  %array_getter162 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add161
  %temp163 = load i128, i128* %array_getter162, align 4
  %sub165 = sub i128 %temp163, %sdiv147
  %add168 = add i128 %i.5, 1
  %temp169 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add168
  store i128 %sub165, i128* %temp169, align 4
  br label %if.exit201

if.false135:                                      ; preds = %loop.body133
  %array_getter172 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp173 = load i128, i128* %array_getter172, align 4
  %add175 = add i128 %temp173, %lshift
  %sub176 = sub i128 %add175, 1
  %sdiv178 = sdiv i128 %sub176, %lshift
  %array_getter181 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp182 = load i128, i128* %array_getter181, align 4
  %mul185 = mul i128 %sdiv178, %lshift
  %sub186 = sub i128 %temp182, %mul185
  %out189 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 %sub186, i128* %out189, align 4
  %add192 = add i128 %i.5, 1
  %array_getter193 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add192
  %temp194 = load i128, i128* %array_getter193, align 4
  %add196 = add i128 %temp194, %sdiv178
  %add199 = add i128 %i.5, 1
  %temp200 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add199
  store i128 %add196, i128* %temp200, align 4
  br label %if.exit201

if.exit201:                                       ; preds = %if.false135, %if.true134
  br label %loop.latch202

loop.latch202:                                    ; preds = %if.exit201
  %add204 = add i128 %i.5, 1
  %slt207 = icmp slt i128 %add204, 50
  br i1 %slt207, label %loop.body133, label %loop.exit208

loop.exit208:                                     ; preds = %loop.latch202
  %array_getter211 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 50
  %temp212 = load i128, i128* %array_getter211, align 4
  %eq213 = icmp eq i128 %temp212, 0
  call void @fn_intrinsic_utils_assert(i1 %eq213)
  %out216 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 50
  store i128 1, i128* %out216, align 4
  ret [256 x i128]* %uniform_array
}

define void @fn_template_init_nor(%struct_template_circuit_nor* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 0
  %nor.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 1
  %nor.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 %nor.a.read_input_inner, %nor.b.read_input_inner
  %add = add i128 %mul, 1
  %sub = sub i128 %add, %nor.a.read_input_inner
  %sub4 = sub i128 %sub, %nor.b.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub4, i1* @constraint.9)
  %nor.out.write_output_inner = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 2
  store i128 %sub4, i128* %nor.out.write_output_inner, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 2
  %nor.out.read_output_inner = load i128, i128* %struct_getter7, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %nor.out.write_output_inner9 = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 2
  store i128 %nor.out.read_output_inner, i128* %nor.out.write_output_inner9, align 4
  ret void
}

define %struct_template_circuit_nor* @fn_template_build_nor() {
entry:
  %struct_template_circuit_nor = alloca %struct_template_circuit_nor, align 8
  ret %struct_template_circuit_nor* %struct_template_circuit_nor
}

define void @fn_template_init_and(%struct_template_circuit_and* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 0
  %and.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 1
  %and.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 %and.a.read_input_inner, %and.b.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %mul, i1* @constraint.10)
  %and.out.write_output_inner = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 2
  store i128 %mul, i128* %and.out.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 2
  %and.out.read_output_inner = load i128, i128* %struct_getter4, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %and.out.write_output_inner6 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 2
  store i128 %and.out.read_output_inner, i128* %and.out.write_output_inner6, align 4
  ret void
}

define %struct_template_circuit_and* @fn_template_build_and() {
entry:
  %struct_template_circuit_and = alloca %struct_template_circuit_and, align 8
  ret %struct_template_circuit_and* %struct_template_circuit_and
}

define void @fn_template_init_modprod(%struct_template_circuit_modprod* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 0
  %modprod.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 1
  %modprod.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 2
  %modprod.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %prod = call i128 @fn_intrinsic_utils_init()
  %carry = call i128 @fn_intrinsic_utils_init()
  %i3 = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %modprod.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %mul = mul i128 2, %modprod.n.read_arg_inner
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %mul)
  %mul5 = mul i128 %modprod.a.read_input_inner, %modprod.b.read_input_inner
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter7, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %mul5, i1* @constraint.11)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %mul5, i128* %num2bits.in.write_input_outter, align 4
  %call9 = call %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 %modprod.n.read_arg_inner)
  %call11 = call %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 %modprod.n.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add45, %loop.latch ]
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %i.0
  %n2b15 = load i128, i128* %array_getter, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call9, i32 0, i32 1
  %bits2num.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter, i128 0, i128 %i.0
  %b2n120 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_utils_constraint(i128 %b2n120, i128 %n2b15, i1* @constraint.12)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call9, i32 0, i32 1
  %bits2num.in.read_input_outter23 = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %b2n125 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter23, i128 0, i128 %i.0
  store i128 %n2b15, i128* %b2n125, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %add = add i128 %i.0, %modprod.n.read_arg_inner
  %array_getter31 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter28, i128 0, i128 %add
  %n2b32 = load i128, i128* %array_getter31, align 4
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call11, i32 0, i32 1
  %bits2num.in.read_input_outter35 = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter35, i128 0, i128 %i.0
  %b2n238 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %b2n238, i128 %n2b32, i1* @constraint.13)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call11, i32 0, i32 1
  %bits2num.in.read_input_outter41 = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %b2n243 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter41, i128 0, i128 %i.0
  store i128 %n2b32, i128* %b2n243, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add45 = add i128 %i.0, 1
  %slt = icmp slt i128 %add45, %modprod.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call9, i32 0, i32 2
  %bits2num.out.read_output_outter = load i128, i128* %struct_getter49, align 4
  call void @fn_intrinsic_utils_constraint(i128 %prod, i128 %bits2num.out.read_output_outter, i1* @constraint.14)
  %modprod.prod.write_output_inner = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 3
  store i128 %bits2num.out.read_output_outter, i128* %modprod.prod.write_output_inner, align 4
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 3
  %modprod.prod.read_output_inner = load i128, i128* %struct_getter53, align 4
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call11, i32 0, i32 2
  %bits2num.out.read_output_outter56 = load i128, i128* %struct_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry, i128 %bits2num.out.read_output_outter56, i1* @constraint.15)
  %modprod.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 4
  store i128 %bits2num.out.read_output_outter56, i128* %modprod.carry.write_output_inner, align 4
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 4
  %modprod.carry.read_output_inner = load i128, i128* %struct_getter60, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  br label %exit

exit:                                             ; preds = %arraydim
  %modprod.prod.write_output_inner62 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 3
  store i128 %modprod.prod.read_output_inner, i128* %modprod.prod.write_output_inner62, align 4
  %modprod.carry.write_output_inner64 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 4
  store i128 %modprod.carry.read_output_inner, i128* %modprod.carry.write_output_inner64, align 4
  ret void
}

define %struct_template_circuit_modprod* @fn_template_build_modprod(i128 %0) {
entry:
  %struct_template_circuit_modprod = alloca %struct_template_circuit_modprod, align 8
  %modprod.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %struct_template_circuit_modprod, i32 0, i32 0
  store i128 %0, i128* %modprod.n.write_arg_inner, align 4
  ret %struct_template_circuit_modprod* %struct_template_circuit_modprod
}

define void @fn_template_init_splitthree(%struct_template_circuit_splitthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 0
  %splitthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 1
  %splitthree.m.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 2
  %splitthree.k.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 3
  %splitthree.in.read_input_inner = load i128, i128* %struct_getter3, align 4
  %small = call i128 @fn_intrinsic_utils_init()
  %big = call i128 @fn_intrinsic_utils_init()
  %medium = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %splitthree.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %lshift = shl i128 1, %splitthree.n.read_arg_inner
  %mod = srem i128 %splitthree.in.read_input_inner, %lshift
  %splitthree.small.write_output_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 4
  store i128 %mod, i128* %splitthree.small.write_output_inner, align 4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 4
  %splitthree.small.read_output_inner = load i128, i128* %struct_getter6, align 4
  %lshift9 = shl i128 1, %splitthree.n.read_arg_inner
  %sdiv = sdiv i128 %splitthree.in.read_input_inner, %lshift9
  %lshift10 = shl i128 1, %splitthree.m.read_arg_inner
  %mod11 = srem i128 %sdiv, %lshift10
  %splitthree.medium.write_output_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 5
  store i128 %mod11, i128* %splitthree.medium.write_output_inner, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 5
  %splitthree.medium.read_output_inner = load i128, i128* %struct_getter14, align 4
  %add = add i128 %splitthree.n.read_arg_inner, %splitthree.m.read_arg_inner
  %lshift18 = shl i128 1, %add
  %sdiv19 = sdiv i128 %splitthree.in.read_input_inner, %lshift18
  %splitthree.big.write_output_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 6
  store i128 %sdiv19, i128* %splitthree.big.write_output_inner, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 6
  %splitthree.big.read_output_inner = load i128, i128* %struct_getter22, align 4
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %splitthree.n.read_arg_inner)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter26, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %splitthree.small.read_output_inner, i1* @constraint.16)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %splitthree.small.read_output_inner, i128* %num2bits.in.write_input_outter, align 4
  %call29 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %splitthree.m.read_arg_inner)
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call29, i32 0, i32 1
  %num2bits.in.read_input_outter33 = load i128, i128* %struct_getter32, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter33, i128 %splitthree.medium.read_output_inner, i1* @constraint.17)
  %num2bits.in.write_input_outter35 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call29, i32 0, i32 1
  store i128 %splitthree.medium.read_output_inner, i128* %num2bits.in.write_input_outter35, align 4
  %call36 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %splitthree.k.read_arg_inner)
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call36, i32 0, i32 1
  %num2bits.in.read_input_outter40 = load i128, i128* %struct_getter39, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter40, i128 %splitthree.big.read_output_inner, i1* @constraint.18)
  %num2bits.in.write_input_outter42 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call36, i32 0, i32 1
  store i128 %splitthree.big.read_output_inner, i128* %num2bits.in.write_input_outter42, align 4
  %lshift47 = shl i128 1, %splitthree.n.read_arg_inner
  %mul = mul i128 %splitthree.medium.read_output_inner, %lshift47
  %add48 = add i128 %splitthree.small.read_output_inner, %mul
  %add52 = add i128 %splitthree.n.read_arg_inner, %splitthree.m.read_arg_inner
  %lshift53 = shl i128 1, %add52
  %mul54 = mul i128 %splitthree.big.read_output_inner, %lshift53
  %add55 = add i128 %add48, %mul54
  call void @fn_intrinsic_utils_constraint(i128 %splitthree.in.read_input_inner, i128 %add55, i1* @constraint.19)
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %splitthree.small.write_output_inner57 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 4
  store i128 %splitthree.small.read_output_inner, i128* %splitthree.small.write_output_inner57, align 4
  %splitthree.medium.write_output_inner59 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 5
  store i128 %splitthree.medium.read_output_inner, i128* %splitthree.medium.write_output_inner59, align 4
  %splitthree.big.write_output_inner61 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 6
  store i128 %splitthree.big.read_output_inner, i128* %splitthree.big.write_output_inner61, align 4
  ret void
}

define %struct_template_circuit_splitthree* @fn_template_build_splitthree(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_splitthree = alloca %struct_template_circuit_splitthree, align 8
  %splitthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %struct_template_circuit_splitthree, i32 0, i32 0
  store i128 %0, i128* %splitthree.n.write_arg_inner, align 4
  %splitthree.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %struct_template_circuit_splitthree, i32 0, i32 1
  store i128 %1, i128* %splitthree.m.write_arg_inner, align 4
  %splitthree.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %struct_template_circuit_splitthree, i32 0, i32 2
  store i128 %2, i128* %splitthree.k.write_arg_inner, align 4
  ret %struct_template_circuit_splitthree* %struct_template_circuit_splitthree
}

define void @fn_template_init_signedfp12multiplynocarryunequal(%struct_template_circuit_signedfp12multiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 0
  %signedfp12multiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 1
  %signedfp12multiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 2
  %signedfp12multiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 3
  %signedfp12multiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %signedfp12multiplynocarryunequal.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.a.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %signedfp12multiplynocarryunequal.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.b.declare_input, align 8
  %l6 = call i128 @fn_intrinsic_utils_init()
  %signedfp12multiplynocarryunequal.x.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %X, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %signedfp12multiplynocarryunequal.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall7 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %j9 = call i128 @fn_intrinsic_utils_init()
  %XI010 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  %sub = sub i128 %add, 1
  %call = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  %call25 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  %call31 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  %call37 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch189, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add191, %loop.latch189 ]
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add108, %loop.latch ]
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 %i.0, i128 0, i128 %j.0
  %a41 = load i128, i128* %array_getter, align 4
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter43, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %a0b047 = load i128, i128* %array_getter46, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a0b047, i128 %a41, i1* @constraint.20)
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter49 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter48, align 8
  %a0b052 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter49, i128 0, i128 %i.0, i128 %j.0
  store i128 %a41, i128* %a0b052, align 4
  %a53 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.a.declare_input, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a53, i128 0, i128 %i.0, i128 0, i128 %j.0
  %a57 = load i128, i128* %array_getter56, align 4
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call25, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter60 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter59, align 8
  %array_getter63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter60, i128 0, i128 %i.0, i128 %j.0
  %a0b164 = load i128, i128* %array_getter63, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a0b164, i128 %a57, i1* @constraint.21)
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call25, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter66, align 8
  %a0b170 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter67, i128 0, i128 %i.0, i128 %j.0
  store i128 %a57, i128* %a0b170, align 4
  %a71 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.a.declare_input, align 8
  %array_getter74 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a71, i128 0, i128 %i.0, i128 1, i128 %j.0
  %a75 = load i128, i128* %array_getter74, align 4
  %struct_getter77 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call31, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter78 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter77, align 8
  %array_getter81 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter78, i128 0, i128 %i.0, i128 %j.0
  %a1b082 = load i128, i128* %array_getter81, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a1b082, i128 %a75, i1* @constraint.22)
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call31, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter85 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter84, align 8
  %a1b088 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter85, i128 0, i128 %i.0, i128 %j.0
  store i128 %a75, i128* %a1b088, align 4
  %a89 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.a.declare_input, align 8
  %array_getter92 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a89, i128 0, i128 %i.0, i128 1, i128 %j.0
  %a93 = load i128, i128* %array_getter92, align 4
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call37, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter96 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter95, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter96, i128 0, i128 %i.0, i128 %j.0
  %a1b1100 = load i128, i128* %array_getter99, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a1b1100, i128 %a93, i1* @constraint.23)
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call37, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter103 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter102, align 8
  %a1b1106 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter103, i128 0, i128 %i.0, i128 %j.0
  store i128 %a93, i128* %a1b1106, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body38
  %add108 = add i128 %j.0, 1
  %slt = icmp slt i128 %add108, %signedfp12multiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body38, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch182, %loop.exit
  %j.1 = phi i128 [ 0, %loop.exit ], [ %add184, %loop.latch182 ]
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.b.declare_input, align 8
  %array_getter114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 0, i128 %j.1
  %b115 = load i128, i128* %array_getter114, align 4
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter117, align 8
  %array_getter120 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.1
  %a0b0121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a0b0121, i128 %b115, i1* @constraint.24)
  %struct_getter123 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter124 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter123, align 8
  %a0b0127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter124, i128 0, i128 %i.0, i128 %j.1
  store i128 %b115, i128* %a0b0127, align 4
  %b128 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.b.declare_input, align 8
  %array_getter131 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b128, i128 0, i128 %i.0, i128 0, i128 %j.1
  %b132 = load i128, i128* %array_getter131, align 4
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call31, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter135 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter134, align 8
  %array_getter138 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter135, i128 0, i128 %i.0, i128 %j.1
  %a1b0139 = load i128, i128* %array_getter138, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a1b0139, i128 %b132, i1* @constraint.25)
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call31, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter142 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter141, align 8
  %a1b0145 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter142, i128 0, i128 %i.0, i128 %j.1
  store i128 %b132, i128* %a1b0145, align 4
  %b146 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.b.declare_input, align 8
  %array_getter149 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b146, i128 0, i128 %i.0, i128 1, i128 %j.1
  %b150 = load i128, i128* %array_getter149, align 4
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call25, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter153 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter152, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter153, i128 0, i128 %i.0, i128 %j.1
  %a0b1157 = load i128, i128* %array_getter156, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a0b1157, i128 %b150, i1* @constraint.26)
  %struct_getter159 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call25, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter160 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter159, align 8
  %a0b1163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter160, i128 0, i128 %i.0, i128 %j.1
  store i128 %b150, i128* %a0b1163, align 4
  %b164 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.b.declare_input, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b164, i128 0, i128 %i.0, i128 1, i128 %j.1
  %b168 = load i128, i128* %array_getter167, align 4
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call37, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter171 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter170, align 8
  %array_getter174 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter171, i128 0, i128 %i.0, i128 %j.1
  %a1b1175 = load i128, i128* %array_getter174, align 4
  call void @fn_intrinsic_utils_constraint(i128 %a1b1175, i128 %b168, i1* @constraint.27)
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call37, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter178 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter177, align 8
  %a1b1181 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter178, i128 0, i128 %i.0, i128 %j.1
  store i128 %b168, i128* %a1b1181, align 4
  br label %loop.latch182

loop.latch182:                                    ; preds = %loop.body111
  %add184 = add i128 %j.1, 1
  %slt187 = icmp slt i128 %add184, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  br i1 %slt187, label %loop.body111, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch182
  br label %loop.latch189

loop.latch189:                                    ; preds = %loop.exit188
  %add191 = add i128 %i.0, 1
  %slt194 = icmp slt i128 %add191, 6
  br i1 %slt194, label %loop.body, label %loop.exit195

loop.exit195:                                     ; preds = %loop.latch189
  %mul = mul i128 2, 6
  %sub197 = sub i128 %mul, 1
  %add200 = add i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  %sub201 = sub i128 %add200, 1
  br label %loop.body202

loop.body202:                                     ; preds = %loop.latch261, %loop.exit195
  %i.1 = phi i128 [ 0, %loop.exit195 ], [ %add263, %loop.latch261 ]
  br label %loop.body203

loop.body203:                                     ; preds = %loop.latch251, %loop.body202
  %j.2 = phi i128 [ 0, %loop.body202 ], [ %add253, %loop.latch251 ]
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter205, align 8
  %array_getter208 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.2
  %a0b0209 = load i128, i128* %array_getter208, align 4
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call37, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter212 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter211, align 8
  %array_getter215 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter212, i128 0, i128 %i.1, i128 %j.2
  %a1b1216 = load i128, i128* %array_getter215, align 4
  %sub217 = sub i128 %a0b0209, %a1b1216
  %X218 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %array_getter221 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X218, i128 0, i128 %i.1, i128 0, i128 %j.2
  %X222 = load i128, i128* %array_getter221, align 4
  call void @fn_intrinsic_utils_constraint(i128 %X222, i128 %sub217, i1* @constraint.28)
  %ptr_getter223 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %X226 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter223, i128 0, i128 %i.1, i128 0, i128 %j.2
  store i128 %sub217, i128* %X226, align 4
  %struct_getter228 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call25, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter229 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter228, align 8
  %array_getter232 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter229, i128 0, i128 %i.1, i128 %j.2
  %a0b1233 = load i128, i128* %array_getter232, align 4
  %struct_getter235 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call31, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter236 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter235, align 8
  %array_getter239 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter236, i128 0, i128 %i.1, i128 %j.2
  %a1b0240 = load i128, i128* %array_getter239, align 4
  %add241 = add i128 %a0b1233, %a1b0240
  %X242 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X242, i128 0, i128 %i.1, i128 1, i128 %j.2
  %X246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_utils_constraint(i128 %X246, i128 %add241, i1* @constraint.29)
  %ptr_getter247 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %X250 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter247, i128 0, i128 %i.1, i128 1, i128 %j.2
  store i128 %add241, i128* %X250, align 4
  br label %loop.latch251

loop.latch251:                                    ; preds = %loop.body203
  %add253 = add i128 %j.2, 1
  %add257 = add i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  %sub258 = sub i128 %add257, 1
  %slt259 = icmp slt i128 %add253, %sub258
  br i1 %slt259, label %loop.body203, label %loop.exit260

loop.exit260:                                     ; preds = %loop.latch251
  br label %loop.latch261

loop.latch261:                                    ; preds = %loop.exit260
  %add263 = add i128 %i.1, 1
  %mul266 = mul i128 2, 6
  %sub267 = sub i128 %mul266, 1
  %slt268 = icmp slt i128 %add263, %sub267
  br i1 %slt268, label %loop.body202, label %loop.exit269

loop.exit269:                                     ; preds = %loop.latch261
  br label %loop.body270

loop.body270:                                     ; preds = %loop.latch376, %loop.exit269
  %i.2 = phi i128 [ 0, %loop.exit269 ], [ %add378, %loop.latch376 ]
  br label %loop.body271

loop.body271:                                     ; preds = %loop.latch366, %loop.body270
  %j.3 = phi i128 [ 0, %loop.body270 ], [ %add368, %loop.latch366 ]
  %sub274 = sub i128 6, 1
  %slt275 = icmp slt i128 %i.2, %sub274
  br i1 %slt275, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body271
  %X276 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %array_getter279 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X276, i128 0, i128 %i.2, i128 0, i128 %j.3
  %X280 = load i128, i128* %array_getter279, align 4
  %X281 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %add284 = add i128 6, %i.2
  %array_getter286 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X281, i128 0, i128 %add284, i128 0, i128 %j.3
  %X287 = load i128, i128* %array_getter286, align 4
  %mul289 = mul i128 %X287, 1
  %add290 = add i128 %X280, %mul289
  %X291 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %add294 = add i128 6, %i.2
  %array_getter296 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X291, i128 0, i128 %add294, i128 1, i128 %j.3
  %X297 = load i128, i128* %array_getter296, align 4
  %sub298 = sub i128 %add290, %X297
  %out299 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %array_getter302 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out299, i128 0, i128 %i.2, i128 0, i128 %j.3
  %out303 = load i128, i128* %array_getter302, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out303, i128 %sub298, i1* @constraint.30)
  %ptr_getter304 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %out307 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter304, i128 0, i128 %i.2, i128 0, i128 %j.3
  store i128 %sub298, i128* %out307, align 4
  %X308 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %array_getter311 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X308, i128 0, i128 %i.2, i128 1, i128 %j.3
  %X312 = load i128, i128* %array_getter311, align 4
  %X313 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %add316 = add i128 6, %i.2
  %array_getter318 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X313, i128 0, i128 %add316, i128 0, i128 %j.3
  %X319 = load i128, i128* %array_getter318, align 4
  %add320 = add i128 %X312, %X319
  %X321 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %add324 = add i128 6, %i.2
  %array_getter326 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X321, i128 0, i128 %add324, i128 1, i128 %j.3
  %X327 = load i128, i128* %array_getter326, align 4
  %add328 = add i128 %add320, %X327
  %out329 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %array_getter332 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out329, i128 0, i128 %i.2, i128 1, i128 %j.3
  %out333 = load i128, i128* %array_getter332, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out333, i128 %add328, i1* @constraint.31)
  %ptr_getter334 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %out337 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter334, i128 0, i128 %i.2, i128 1, i128 %j.3
  store i128 %add328, i128* %out337, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body271
  %X338 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %array_getter341 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X338, i128 0, i128 %i.2, i128 0, i128 %j.3
  %X342 = load i128, i128* %array_getter341, align 4
  %out343 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %array_getter346 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out343, i128 0, i128 %i.2, i128 0, i128 %j.3
  %out347 = load i128, i128* %array_getter346, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out347, i128 %X342, i1* @constraint.32)
  %ptr_getter348 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %out351 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter348, i128 0, i128 %i.2, i128 0, i128 %j.3
  store i128 %X342, i128* %out351, align 4
  %X352 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %array_getter355 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X352, i128 0, i128 %i.2, i128 1, i128 %j.3
  %X356 = load i128, i128* %array_getter355, align 4
  %out357 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %array_getter360 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out357, i128 0, i128 %i.2, i128 1, i128 %j.3
  %out361 = load i128, i128* %array_getter360, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out361, i128 %X356, i1* @constraint.33)
  %ptr_getter362 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %out365 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter362, i128 0, i128 %i.2, i128 1, i128 %j.3
  store i128 %X356, i128* %out365, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch366

loop.latch366:                                    ; preds = %if.exit
  %add368 = add i128 %j.3, 1
  %add372 = add i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  %sub373 = sub i128 %add372, 1
  %slt374 = icmp slt i128 %add368, %sub373
  br i1 %slt374, label %loop.body271, label %loop.exit375

loop.exit375:                                     ; preds = %loop.latch366
  br label %loop.latch376

loop.latch376:                                    ; preds = %loop.exit375
  %add378 = add i128 %i.2, 1
  %slt381 = icmp slt i128 %add378, 6
  br i1 %slt381, label %loop.body270, label %loop.exit382

loop.exit382:                                     ; preds = %loop.latch376
  br label %arraydim

arraydim:                                         ; preds = %loop.exit382
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner)
  %ptr_cast383 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast383, i128 %sub197, i128 2, i128 %sub201)
  %ptr_cast384 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast384, i128 6, i128 2, i128 %sub)
  %ptr_cast385 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast385, i128 6, i128 2, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %X386 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.declare_inter, align 8
  %signedfp12multiplynocarryunequal.x.write_inter_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %X386, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.write_inter_inner, align 8
  %out387 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.declare_output, align 8
  %signedfp12multiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out387, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp12multiplynocarryunequal = alloca %struct_template_circuit_signedfp12multiplynocarryunequal, align 8
  %signedfp12multiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp12multiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp12multiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp12multiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp12multiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp12multiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp12multiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp12multiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal
}

define void @fn_template_init_lessthan(%struct_template_circuit_lessthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 0
  %lessthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 1
  %lessthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %lessthan.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %lessthan.in.read_input_inner, [256 x i128]** %lessthan.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %lessthan.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add = add i128 %lessthan.n.read_arg_inner, 1
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add)
  %in = load [256 x i128]*, [256 x i128]** %lessthan.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 0
  %in3 = load i128, i128* %array_getter, align 4
  %lshift = shl i128 1, %lessthan.n.read_arg_inner
  %add5 = add i128 %in3, %lshift
  %in6 = load [256 x i128]*, [256 x i128]** %lessthan.in.declare_input, align 8
  %array_getter7 = getelementptr inbounds [256 x i128], [256 x i128]* %in6, i128 0, i128 1
  %in8 = load i128, i128* %array_getter7, align 4
  %sub = sub i128 %add5, %in8
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter10, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %sub, i1* @constraint.34)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %sub, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter12, align 8
  %array_getter14 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %lessthan.n.read_arg_inner
  %n2b15 = load i128, i128* %array_getter14, align 4
  %sub16 = sub i128 1, %n2b15
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub16, i1* @constraint.35)
  %lessthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 2
  store i128 %sub16, i128* %lessthan.out.write_output_inner, align 4
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 2
  %lessthan.out.read_output_inner = load i128, i128* %struct_getter20, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  %ptr_cast = bitcast [256 x i128]** %lessthan.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %lessthan.out.write_output_inner22 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_inner, i128* %lessthan.out.write_output_inner22, align 4
  ret void
}

define %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %0) {
entry:
  %struct_template_circuit_lessthan = alloca %struct_template_circuit_lessthan, align 8
  %lessthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %struct_template_circuit_lessthan, i32 0, i32 0
  store i128 %0, i128* %lessthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_lessthan* %struct_template_circuit_lessthan
}

define i128 @long_is_zero(i128 %0, [256 x i128]* %1) {
entry:
  %idx1 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %1, i128 0, i128 %idx.0
  %a3 = load i128, i128* %array_getter, align 4
  %ne = icmp ne i128 %a3, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  ret i128 0

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %0
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 1
}

define [256 x i128]* @long_add(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %carry1 = call i128 @fn_intrinsic_utils_init()
  %i3 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %carry.0 = phi i128 [ 0, %entry ], [ %sumAndCarry20, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add22, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a6 = load i128, i128* %array_getter, align 4
  %array_getter8 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b9 = load i128, i128* %array_getter8, align 4
  %add = add i128 %a6, %b9
  %add11 = add i128 %add, %carry.0
  %call = call [256 x i128]* @SplitFn(i128 %add11, i128 %0, i128 %0)
  %array_getter14 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 0
  %sumAndCarry15 = load i128, i128* %array_getter14, align 4
  %sum17 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry15, i128* %sum17, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 1
  %sumAndCarry20 = load i128, i128* %array_getter19, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add22 = add i128 %i.0, 1
  %slt = icmp slt i128 %add22, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sum27 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %1
  store i128 %sumAndCarry20, i128* %sum27, align 4
  ret [256 x i128]* %uniform_array
}

define void @fn_template_init_multiand(%struct_template_circuit_multiand* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 0
  %multiand.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 1
  %multiand.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %multiand.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %multiand.in.read_input_inner, [256 x i128]** %multiand.in.declare_input, align 8
  %i2 = call i128 @fn_intrinsic_utils_init()
  %ands = alloca [256 x %struct_template_circuit_multiand*]*, align 8
  %ands3 = alloca [256 x %struct_template_circuit_multiand*], align 8
  store [256 x %struct_template_circuit_multiand*]* %ands3, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %n24 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %n15 = call i128 @fn_intrinsic_utils_init()
  %eq = icmp eq i128 %multiand.n.read_arg_inner, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %in = load [256 x i128]*, [256 x i128]** %multiand.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 0
  %in7 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %in7, i1* @constraint.36)
  %multiand.out.write_output_inner = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %in7, i128* %multiand.out.write_output_inner, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  %multiand.out.read_output_inner = load i128, i128* %struct_getter10, align 4
  br label %if.exit133

if.false:                                         ; preds = %entry
  %eq14 = icmp eq i128 %multiand.n.read_arg_inner, 2
  br i1 %eq14, label %if.true11, label %if.false12

if.true11:                                        ; preds = %if.false
  %call = call %struct_template_circuit_and* @fn_template_build_and()
  %in15 = load [256 x i128]*, [256 x i128]** %multiand.in.declare_input, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %in15, i128 0, i128 0
  %in17 = load i128, i128* %array_getter16, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 0
  %and.a.read_input_outter = load i128, i128* %struct_getter19, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.a.read_input_outter, i128 %in17, i1* @constraint.37)
  %and.a.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 0
  store i128 %in17, i128* %and.a.write_input_outter, align 4
  %in21 = load [256 x i128]*, [256 x i128]** %multiand.in.declare_input, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %in21, i128 0, i128 1
  %in23 = load i128, i128* %array_getter22, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 1
  %and.b.read_input_outter = load i128, i128* %struct_getter25, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.b.read_input_outter, i128 %in23, i1* @constraint.38)
  %and.b.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 1
  store i128 %in23, i128* %and.b.write_input_outter, align 4
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 2
  %and.out.read_output_outter = load i128, i128* %struct_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %and.out.read_output_outter, i1* @constraint.39)
  %multiand.out.write_output_inner31 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %and.out.read_output_outter, i128* %multiand.out.write_output_inner31, align 4
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  %multiand.out.read_output_inner34 = load i128, i128* %struct_getter33, align 4
  br label %if.exit

if.false12:                                       ; preds = %if.false
  %call35 = call %struct_template_circuit_and* @fn_template_build_and()
  %sdiv = sdiv i128 %multiand.n.read_arg_inner, 2
  %sdiv39 = sdiv i128 %multiand.n.read_arg_inner, 2
  %sub = sub i128 %multiand.n.read_arg_inner, %sdiv39
  %call41 = call %struct_template_circuit_multiand* @fn_template_build_multiand(i128 %sdiv)
  %ptr_getter42 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %ands43 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ptr_getter42, i128 0, i128 0
  store %struct_template_circuit_multiand* %call41, %struct_template_circuit_multiand** %ands43, align 8
  %call45 = call %struct_template_circuit_multiand* @fn_template_build_multiand(i128 %sub)
  %ptr_getter46 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %ands47 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ptr_getter46, i128 0, i128 1
  store %struct_template_circuit_multiand* %call45, %struct_template_circuit_multiand** %ands47, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %if.false12
  %i.0 = phi i128 [ 0, %if.false12 ], [ %add, %loop.latch ]
  %in48 = load [256 x i128]*, [256 x i128]** %multiand.in.declare_input, align 8
  %array_getter50 = getelementptr inbounds [256 x i128], [256 x i128]* %in48, i128 0, i128 %i.0
  %in51 = load i128, i128* %array_getter50, align 4
  %ands52 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %array_getter53 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands52, i128 0, i128 0
  %ands54 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter53, align 8
  %ptr_cast = bitcast %struct_template_circuit_multiand* %ands54 to %struct_template_circuit_multiand*
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast, i32 0, i32 1
  %multiand.in.read_input_inner56 = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner56, i128 0, i128 %i.0
  %ands59 = load i128, i128* %array_getter58, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ands59, i128 %in51, i1* @constraint.40)
  %ptr_getter60 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %array_getter61 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ptr_getter60, i128 0, i128 0
  %ands62 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter61, align 8
  %ptr_cast63 = bitcast %struct_template_circuit_multiand* %ands62 to %struct_template_circuit_multiand*
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast63, i32 0, i32 1
  %multiand.in.read_input_inner65 = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %ands67 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner65, i128 0, i128 %i.0
  store i128 %in51, i128* %ands67, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %sdiv
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch95, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add97, %loop.latch95 ]
  %in72 = load [256 x i128]*, [256 x i128]** %multiand.in.declare_input, align 8
  %add75 = add i128 %sdiv, %i.1
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %in72, i128 0, i128 %add75
  %in77 = load i128, i128* %array_getter76, align 4
  %ands78 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %array_getter79 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands78, i128 0, i128 1
  %ands80 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter79, align 8
  %ptr_cast81 = bitcast %struct_template_circuit_multiand* %ands80 to %struct_template_circuit_multiand*
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast81, i32 0, i32 1
  %multiand.in.read_input_inner83 = load [256 x i128]*, [256 x i128]** %struct_getter82, align 8
  %array_getter85 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner83, i128 0, i128 %i.1
  %ands86 = load i128, i128* %array_getter85, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ands86, i128 %in77, i1* @constraint.41)
  %ptr_getter87 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %array_getter88 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ptr_getter87, i128 0, i128 1
  %ands89 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter88, align 8
  %ptr_cast90 = bitcast %struct_template_circuit_multiand* %ands89 to %struct_template_circuit_multiand*
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast90, i32 0, i32 1
  %multiand.in.read_input_inner92 = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %ands94 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner92, i128 0, i128 %i.1
  store i128 %in77, i128* %ands94, align 4
  br label %loop.latch95

loop.latch95:                                     ; preds = %loop.body71
  %add97 = add i128 %i.1, 1
  %slt100 = icmp slt i128 %add97, %sub
  br i1 %slt100, label %loop.body71, label %loop.exit101

loop.exit101:                                     ; preds = %loop.latch95
  %ands102 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %array_getter103 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands102, i128 0, i128 0
  %ands104 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter103, align 8
  %ptr_cast105 = bitcast %struct_template_circuit_multiand* %ands104 to %struct_template_circuit_multiand*
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast105, i32 0, i32 2
  %multiand.out.read_output_inner107 = load i128, i128* %struct_getter106, align 4
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call35, i32 0, i32 0
  %and.a.read_input_outter110 = load i128, i128* %struct_getter109, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.a.read_input_outter110, i128 %multiand.out.read_output_inner107, i1* @constraint.42)
  %and.a.write_input_outter112 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call35, i32 0, i32 0
  store i128 %multiand.out.read_output_inner107, i128* %and.a.write_input_outter112, align 4
  %ands113 = load [256 x %struct_template_circuit_multiand*]*, [256 x %struct_template_circuit_multiand*]** %ands, align 8
  %array_getter114 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands113, i128 0, i128 1
  %ands115 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter114, align 8
  %ptr_cast116 = bitcast %struct_template_circuit_multiand* %ands115 to %struct_template_circuit_multiand*
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast116, i32 0, i32 2
  %multiand.out.read_output_inner118 = load i128, i128* %struct_getter117, align 4
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call35, i32 0, i32 1
  %and.b.read_input_outter121 = load i128, i128* %struct_getter120, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.b.read_input_outter121, i128 %multiand.out.read_output_inner118, i1* @constraint.43)
  %and.b.write_input_outter123 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call35, i32 0, i32 1
  store i128 %multiand.out.read_output_inner118, i128* %and.b.write_input_outter123, align 4
  %struct_getter125 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call35, i32 0, i32 2
  %and.out.read_output_outter126 = load i128, i128* %struct_getter125, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %and.out.read_output_outter126, i1* @constraint.44)
  %multiand.out.write_output_inner129 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %and.out.read_output_outter126, i128* %multiand.out.write_output_inner129, align 4
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  %multiand.out.read_output_inner132 = load i128, i128* %struct_getter131, align 4
  br label %if.exit

if.exit:                                          ; preds = %loop.exit101, %if.true11
  %multiand.out.declare_output.0 = phi i128 [ %multiand.out.read_output_inner34, %if.true11 ], [ %multiand.out.read_output_inner132, %loop.exit101 ]
  br label %if.exit133

if.exit133:                                       ; preds = %if.exit, %if.true
  %multiand.out.declare_output.1 = phi i128 [ %multiand.out.read_output_inner, %if.true ], [ %multiand.out.declare_output.0, %if.exit ]
  br label %arraydim

arraydim:                                         ; preds = %if.exit133
  %ptr_cast134 = bitcast [256 x i128]** %multiand.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast134, i128 %multiand.n.read_arg_inner)
  %ptr_cast135 = bitcast [256 x %struct_template_circuit_multiand*]** %ands to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast135, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %multiand.out.write_output_inner137 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %multiand.out.declare_output.1, i128* %multiand.out.write_output_inner137, align 4
  ret void
}

define %struct_template_circuit_multiand* @fn_template_build_multiand(i128 %0) {
entry:
  %struct_template_circuit_multiand = alloca %struct_template_circuit_multiand, align 8
  %multiand.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %struct_template_circuit_multiand, i32 0, i32 0
  store i128 %0, i128* %multiand.n.write_arg_inner, align 4
  ret %struct_template_circuit_multiand* %struct_template_circuit_multiand
}

define i128 @long_gt(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %sub = sub i128 %1, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ %sub, %entry ], [ %sub19, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a3 = load i128, i128* %array_getter, align 4
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b6 = load i128, i128* %array_getter5, align 4
  %sgt = icmp sgt i128 %a3, %b6
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  ret i128 1

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter11, align 4
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b16 = load i128, i128* %array_getter15, align 4
  %slt = icmp slt i128 %a12, %b16
  br i1 %slt, label %if.true7, label %if.false8

if.true7:                                         ; preds = %if.exit
  ret i128 0

if.false8:                                        ; preds = %if.exit
  br label %if.exit17

if.exit17:                                        ; preds = %if.false8
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit17
  %sub19 = sub i128 %i.0, 1
  %sge = icmp sge i128 %sub19, 0
  br i1 %sge, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 0
}

define void @fn_template_init_fp12cyclotomiccompress(%struct_template_circuit_fp12cyclotomiccompress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %0, i32 0, i32 0
  %fp12cyclotomiccompress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %0, i32 0, i32 1
  %fp12cyclotomiccompress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %0, i32 0, i32 2
  %fp12cyclotomiccompress.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter2, align 8
  %fp12cyclotomiccompress.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12cyclotomiccompress.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.in.declare_input, align 8
  %eps3 = call i128 @fn_intrinsic_utils_init()
  %fp12cyclotomiccompress.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %j4 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch63, %entry
  %eps.0 = phi i128 [ 0, %entry ], [ %add65, %loop.latch63 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 1, i128 %eps.0, i128 %j.0
  %in9 = load i128, i128* %array_getter, align 4
  %out10 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %array_getter13 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out10, i128 0, i128 0, i128 %eps.0, i128 %j.0
  %out14 = load i128, i128* %array_getter13, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out14, i128 %in9, i1* @constraint.45)
  %ptr_getter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %out17 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter, i128 0, i128 0, i128 %eps.0, i128 %j.0
  store i128 %in9, i128* %out17, align 4
  %in18 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.in.declare_input, align 8
  %array_getter21 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in18, i128 0, i128 4, i128 %eps.0, i128 %j.0
  %in22 = load i128, i128* %array_getter21, align 4
  %out23 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %array_getter26 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out23, i128 0, i128 1, i128 %eps.0, i128 %j.0
  %out27 = load i128, i128* %array_getter26, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out27, i128 %in22, i1* @constraint.46)
  %ptr_getter28 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %out31 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter28, i128 0, i128 1, i128 %eps.0, i128 %j.0
  store i128 %in22, i128* %out31, align 4
  %in32 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.in.declare_input, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in32, i128 0, i128 2, i128 %eps.0, i128 %j.0
  %in36 = load i128, i128* %array_getter35, align 4
  %out37 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out37, i128 0, i128 2, i128 %eps.0, i128 %j.0
  %out41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out41, i128 %in36, i1* @constraint.47)
  %ptr_getter42 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %out45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter42, i128 0, i128 2, i128 %eps.0, i128 %j.0
  store i128 %in36, i128* %out45, align 4
  %in46 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.in.declare_input, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in46, i128 0, i128 5, i128 %eps.0, i128 %j.0
  %in50 = load i128, i128* %array_getter49, align 4
  %out51 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out51, i128 0, i128 3, i128 %eps.0, i128 %j.0
  %out55 = load i128, i128* %array_getter54, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out55, i128 %in50, i1* @constraint.48)
  %ptr_getter56 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %out59 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter56, i128 0, i128 3, i128 %eps.0, i128 %j.0
  store i128 %in50, i128* %out59, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body6
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp12cyclotomiccompress.k.read_arg_inner
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch63

loop.latch63:                                     ; preds = %loop.exit
  %add65 = add i128 %eps.0, 1
  %slt67 = icmp slt i128 %add65, 2
  br i1 %slt67, label %loop.body, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch63
  br label %arraydim

arraydim:                                         ; preds = %loop.exit68
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 4, i128 2, i128 %fp12cyclotomiccompress.k.read_arg_inner)
  %ptr_cast69 = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast69, i128 6, i128 2, i128 %fp12cyclotomiccompress.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out70 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.declare_output, align 8
  %fp12cyclotomiccompress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %0, i32 0, i32 3
  store [256 x [256 x [256 x i128]]]* %out70, [256 x [256 x [256 x i128]]]** %fp12cyclotomiccompress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12cyclotomiccompress* @fn_template_build_fp12cyclotomiccompress(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_fp12cyclotomiccompress = alloca %struct_template_circuit_fp12cyclotomiccompress, align 8
  %fp12cyclotomiccompress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %struct_template_circuit_fp12cyclotomiccompress, i32 0, i32 0
  store i128 %0, i128* %fp12cyclotomiccompress.n.write_arg_inner, align 4
  %fp12cyclotomiccompress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %struct_template_circuit_fp12cyclotomiccompress, i32 0, i32 1
  store i128 %1, i128* %fp12cyclotomiccompress.k.write_arg_inner, align 4
  ret %struct_template_circuit_fp12cyclotomiccompress* %struct_template_circuit_fp12cyclotomiccompress
}

define void @fn_template_init_nand(%struct_template_circuit_nand* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 0
  %nand.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 1
  %nand.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 %nand.a.read_input_inner, %nand.b.read_input_inner
  %sub = sub i128 1, %mul
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub, i1* @constraint.49)
  %nand.out.write_output_inner = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 2
  store i128 %sub, i128* %nand.out.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 2
  %nand.out.read_output_inner = load i128, i128* %struct_getter4, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %nand.out.write_output_inner6 = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 2
  store i128 %nand.out.read_output_inner, i128* %nand.out.write_output_inner6, align 4
  ret void
}

define %struct_template_circuit_nand* @fn_template_build_nand() {
entry:
  %struct_template_circuit_nand = alloca %struct_template_circuit_nand, align 8
  ret %struct_template_circuit_nand* %struct_template_circuit_nand
}

define i128 @get_BLS12_381_parameter() {
entry:
  ret i128 15132376222941642752
}

define void @fn_template_init_modsub(%struct_template_circuit_modsub* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 0
  %modsub.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 1
  %modsub.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 2
  %modsub.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %borrow = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %modsub.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %modsub.n.read_arg_inner)
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt6, i128 %modsub.a.read_input_inner, i1* @constraint.50)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %modsub.a.read_input_inner, i128* %lt9, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter12 = load [256 x i128]*, [256 x i128]** %struct_getter11, align 8
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter12, i128 0, i128 1
  %lt14 = load i128, i128* %array_getter13, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt14, i128 %modsub.b.read_input_inner, i1* @constraint.51)
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter17 = load [256 x i128]*, [256 x i128]** %struct_getter16, align 8
  %lt18 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter17, i128 0, i128 1
  store i128 %modsub.b.read_input_inner, i128* %lt18, align 4
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %borrow, i128 %lessthan.out.read_output_outter, i1* @constraint.52)
  %modsub.borrow.write_output_inner = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 4
  store i128 %lessthan.out.read_output_outter, i128* %modsub.borrow.write_output_inner, align 4
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 4
  %modsub.borrow.read_output_inner = load i128, i128* %struct_getter24, align 4
  %lshift = shl i128 1, %modsub.n.read_arg_inner
  %mul = mul i128 %modsub.borrow.read_output_inner, %lshift
  %add = add i128 %mul, %modsub.a.read_input_inner
  %sub = sub i128 %add, %modsub.b.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub, i1* @constraint.53)
  %modsub.out.write_output_inner = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 3
  store i128 %sub, i128* %modsub.out.write_output_inner, align 4
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 3
  %modsub.out.read_output_inner = load i128, i128* %struct_getter32, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %modsub.out.write_output_inner34 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 3
  store i128 %modsub.out.read_output_inner, i128* %modsub.out.write_output_inner34, align 4
  %modsub.borrow.write_output_inner36 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 4
  store i128 %modsub.borrow.read_output_inner, i128* %modsub.borrow.write_output_inner36, align 4
  ret void
}

define %struct_template_circuit_modsub* @fn_template_build_modsub(i128 %0) {
entry:
  %struct_template_circuit_modsub = alloca %struct_template_circuit_modsub, align 8
  %modsub.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %struct_template_circuit_modsub, i32 0, i32 0
  store i128 %0, i128* %modsub.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsub* %struct_template_circuit_modsub
}

define void @fn_template_init_not(%struct_template_circuit_not* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 0
  %not.in.read_input_inner = load i128, i128* %struct_getter, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %add = add i128 1, %not.in.read_input_inner
  %mul = mul i128 2, %not.in.read_input_inner
  %sub = sub i128 %add, %mul
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub, i1* @constraint.54)
  %not.out.write_output_inner = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 1
  store i128 %sub, i128* %not.out.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 1
  %not.out.read_output_inner = load i128, i128* %struct_getter4, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %not.out.write_output_inner6 = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 1
  store i128 %not.out.read_output_inner, i128* %not.out.write_output_inner6, align 4
  ret void
}

define %struct_template_circuit_not* @fn_template_build_not() {
entry:
  %struct_template_circuit_not = alloca %struct_template_circuit_not, align 8
  ret %struct_template_circuit_not* %struct_template_circuit_not
}

define void @fn_template_init_bigmultshortlong(%struct_template_circuit_bigmultshortlong* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 0
  %bigmultshortlong.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 1
  %bigmultshortlong.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 2
  %bigmultshortlong.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 3
  %bigmultshortlong.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigmultshortlong.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultshortlong.a.read_input_inner, [256 x i128]** %bigmultshortlong.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 4
  %bigmultshortlong.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %bigmultshortlong.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultshortlong.b.read_input_inner, [256 x i128]** %bigmultshortlong.b.declare_input, align 8
  %k25 = call i128 @fn_intrinsic_utils_init()
  %pow = alloca [256 x [256 x i128]]*, align 8
  %pow6 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %pow6, [256 x [256 x i128]]** %pow, align 8
  %i7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %out_poly = alloca [256 x i128]*, align 8
  %out_poly9 = alloca [256 x i128], align 8
  store [256 x i128]* %out_poly9, [256 x i128]** %out_poly, align 8
  %bigmultshortlong.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigmultshortlong.out.declare_output, align 8
  %prod_val = alloca [256 x i128]*, align 8
  %prod_val10 = alloca [256 x i128], align 8
  store [256 x i128]* %prod_val10, [256 x i128]** %prod_val, align 8
  %a_idx11 = call i128 @fn_intrinsic_utils_init()
  %a_poly = alloca [256 x i128]*, align 8
  %a_poly12 = alloca [256 x i128], align 8
  store [256 x i128]* %a_poly12, [256 x i128]** %a_poly, align 8
  %b_poly = alloca [256 x i128]*, align 8
  %b_poly13 = alloca [256 x i128], align 8
  store [256 x i128]* %b_poly13, [256 x i128]** %b_poly, align 8
  %sle = icmp sle i128 %bigmultshortlong.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %mul = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul17 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub18 = sub i128 %mul17, 1
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %prod_val, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch82, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add84, %loop.latch82 ]
  %ptr_getter = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %prod_val20 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 0, i128* %prod_val20, align 4
  %slt = icmp slt i128 %i.0, %bigmultshortlong.k.read_arg_inner
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %loop.body23

if.false:                                         ; preds = %loop.body
  %sub46 = sub i128 %i.0, %bigmultshortlong.k.read_arg_inner
  %add47 = add i128 %sub46, 1
  br label %loop.body48

loop.body23:                                      ; preds = %loop.latch, %if.true
  %a_idx.0 = phi i128 [ 0, %if.true ], [ %add40, %loop.latch ]
  %prod_val24 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %prod_val24, i128 0, i128 %i.0
  %prod_val26 = load i128, i128* %array_getter, align 4
  %a = load [256 x i128]*, [256 x i128]** %bigmultshortlong.a.declare_input, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %a_idx.0
  %a29 = load i128, i128* %array_getter28, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigmultshortlong.b.declare_input, align 8
  %sub32 = sub i128 %i.0, %a_idx.0
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %sub32
  %b34 = load i128, i128* %array_getter33, align 4
  %mul35 = mul i128 %a29, %b34
  %add = add i128 %prod_val26, %mul35
  %ptr_getter36 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %prod_val38 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter36, i128 0, i128 %i.0
  store i128 %add, i128* %prod_val38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body23
  %add40 = add i128 %a_idx.0, 1
  %sle43 = icmp sle i128 %add40, %i.0
  br i1 %sle43, label %loop.body23, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %if.exit

loop.body48:                                      ; preds = %loop.latch68, %if.false
  %a_idx.1 = phi i128 [ %add47, %if.false ], [ %add70, %loop.latch68 ]
  %prod_val49 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %prod_val49, i128 0, i128 %i.0
  %prod_val52 = load i128, i128* %array_getter51, align 4
  %a53 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.a.declare_input, align 8
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %a53, i128 0, i128 %a_idx.1
  %a56 = load i128, i128* %array_getter55, align 4
  %b57 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.b.declare_input, align 8
  %sub60 = sub i128 %i.0, %a_idx.1
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %b57, i128 0, i128 %sub60
  %b62 = load i128, i128* %array_getter61, align 4
  %mul63 = mul i128 %a56, %b62
  %add64 = add i128 %prod_val52, %mul63
  %ptr_getter65 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %prod_val67 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter65, i128 0, i128 %i.0
  store i128 %add64, i128* %prod_val67, align 4
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.body48
  %add70 = add i128 %a_idx.1, 1
  %slt73 = icmp slt i128 %add70, %bigmultshortlong.k.read_arg_inner
  br i1 %slt73, label %loop.body48, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch68
  br label %if.exit

if.exit:                                          ; preds = %loop.exit74, %loop.exit
  %prod_val75 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %array_getter77 = getelementptr inbounds [256 x i128], [256 x i128]* %prod_val75, i128 0, i128 %i.0
  %prod_val78 = load i128, i128* %array_getter77, align 4
  %ptr_getter79 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.out.declare_output, align 8
  %out81 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter79, i128 0, i128 %i.0
  store i128 %prod_val78, i128* %out81, align 4
  br label %loop.latch82

loop.latch82:                                     ; preds = %if.exit
  %add84 = add i128 %i.0, 1
  %mul87 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub88 = sub i128 %mul87, 1
  %slt89 = icmp slt i128 %add84, %sub88
  br i1 %slt89, label %loop.body, label %loop.exit90

loop.exit90:                                      ; preds = %loop.latch82
  %mul92 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub93 = sub i128 %mul92, 1
  %uniform_array96 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array96, [256 x [256 x i128]]** %pow, align 8
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch113, %loop.exit90
  %i.1 = phi i128 [ 0, %loop.exit90 ], [ %add115, %loop.latch113 ]
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch106, %loop.body97
  %j.0 = phi i128 [ 0, %loop.body97 ], [ %add108, %loop.latch106 ]
  %pow101 = call i128 @fn_intrinsic_utils_powi(i128 %i.1, i128 %j.0)
  %ptr_getter102 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %pow105 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter102, i128 0, i128 %i.1, i128 %j.0
  store i128 %pow101, i128* %pow105, align 4
  br label %loop.latch106

loop.latch106:                                    ; preds = %loop.body98
  %add108 = add i128 %j.0, 1
  %slt111 = icmp slt i128 %add108, %sub93
  br i1 %slt111, label %loop.body98, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch106
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.exit112
  %add115 = add i128 %i.1, 1
  %slt118 = icmp slt i128 %add115, %sub93
  br i1 %slt118, label %loop.body97, label %loop.exit119

loop.exit119:                                     ; preds = %loop.latch113
  %mul121 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub122 = sub i128 %mul121, 1
  %uniform_array123 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array123, [256 x i128]** %a_poly, align 8
  %mul125 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub126 = sub i128 %mul125, 1
  %uniform_array127 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array127, [256 x i128]** %b_poly, align 8
  %mul129 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub130 = sub i128 %mul129, 1
  %uniform_array131 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array131, [256 x i128]** %out_poly, align 8
  br label %loop.body132

loop.body132:                                     ; preds = %loop.latch214, %loop.exit119
  %i.2 = phi i128 [ 0, %loop.exit119 ], [ %add216, %loop.latch214 ]
  %ptr_getter133 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %out_poly135 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter133, i128 0, i128 %i.2
  store i128 0, i128* %out_poly135, align 4
  %ptr_getter136 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %a_poly138 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter136, i128 0, i128 %i.2
  store i128 0, i128* %a_poly138, align 4
  %ptr_getter139 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %b_poly141 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter139, i128 0, i128 %i.2
  store i128 0, i128* %b_poly141, align 4
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch161, %loop.body132
  %j.1 = phi i128 [ 0, %loop.body132 ], [ %add163, %loop.latch161 ]
  %out_poly143 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %array_getter145 = getelementptr inbounds [256 x i128], [256 x i128]* %out_poly143, i128 0, i128 %i.2
  %out_poly146 = load i128, i128* %array_getter145, align 4
  %out147 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.out.declare_output, align 8
  %array_getter149 = getelementptr inbounds [256 x i128], [256 x i128]* %out147, i128 0, i128 %j.1
  %out150 = load i128, i128* %array_getter149, align 4
  %pow151 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter154 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow151, i128 0, i128 %i.2, i128 %j.1
  %pow155 = load i128, i128* %array_getter154, align 4
  %mul156 = mul i128 %out150, %pow155
  %add157 = add i128 %out_poly146, %mul156
  %ptr_getter158 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %out_poly160 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter158, i128 0, i128 %i.2
  store i128 %add157, i128* %out_poly160, align 4
  br label %loop.latch161

loop.latch161:                                    ; preds = %loop.body142
  %add163 = add i128 %j.1, 1
  %mul166 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub167 = sub i128 %mul166, 1
  %slt168 = icmp slt i128 %add163, %sub167
  br i1 %slt168, label %loop.body142, label %loop.exit169

loop.exit169:                                     ; preds = %loop.latch161
  br label %loop.body170

loop.body170:                                     ; preds = %loop.latch207, %loop.exit169
  %j.2 = phi i128 [ 0, %loop.exit169 ], [ %add209, %loop.latch207 ]
  %a_poly171 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %array_getter173 = getelementptr inbounds [256 x i128], [256 x i128]* %a_poly171, i128 0, i128 %i.2
  %a_poly174 = load i128, i128* %array_getter173, align 4
  %a175 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.a.declare_input, align 8
  %array_getter177 = getelementptr inbounds [256 x i128], [256 x i128]* %a175, i128 0, i128 %j.2
  %a178 = load i128, i128* %array_getter177, align 4
  %pow179 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow179, i128 0, i128 %i.2, i128 %j.2
  %pow183 = load i128, i128* %array_getter182, align 4
  %mul184 = mul i128 %a178, %pow183
  %add185 = add i128 %a_poly174, %mul184
  %ptr_getter186 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %a_poly188 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter186, i128 0, i128 %i.2
  store i128 %add185, i128* %a_poly188, align 4
  %b_poly189 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %array_getter191 = getelementptr inbounds [256 x i128], [256 x i128]* %b_poly189, i128 0, i128 %i.2
  %b_poly192 = load i128, i128* %array_getter191, align 4
  %b193 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.b.declare_input, align 8
  %array_getter195 = getelementptr inbounds [256 x i128], [256 x i128]* %b193, i128 0, i128 %j.2
  %b196 = load i128, i128* %array_getter195, align 4
  %pow197 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow197, i128 0, i128 %i.2, i128 %j.2
  %pow201 = load i128, i128* %array_getter200, align 4
  %mul202 = mul i128 %b196, %pow201
  %add203 = add i128 %b_poly192, %mul202
  %ptr_getter204 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %b_poly206 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter204, i128 0, i128 %i.2
  store i128 %add203, i128* %b_poly206, align 4
  br label %loop.latch207

loop.latch207:                                    ; preds = %loop.body170
  %add209 = add i128 %j.2, 1
  %slt212 = icmp slt i128 %add209, %bigmultshortlong.k.read_arg_inner
  br i1 %slt212, label %loop.body170, label %loop.exit213

loop.exit213:                                     ; preds = %loop.latch207
  br label %loop.latch214

loop.latch214:                                    ; preds = %loop.exit213
  %add216 = add i128 %i.2, 1
  %mul219 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub220 = sub i128 %mul219, 1
  %slt221 = icmp slt i128 %add216, %sub220
  br i1 %slt221, label %loop.body132, label %loop.exit222

loop.exit222:                                     ; preds = %loop.latch214
  br label %loop.body223

loop.body223:                                     ; preds = %loop.latch237, %loop.exit222
  %i.3 = phi i128 [ 0, %loop.exit222 ], [ %add239, %loop.latch237 ]
  %out_poly224 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %array_getter226 = getelementptr inbounds [256 x i128], [256 x i128]* %out_poly224, i128 0, i128 %i.3
  %out_poly227 = load i128, i128* %array_getter226, align 4
  %a_poly228 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %array_getter230 = getelementptr inbounds [256 x i128], [256 x i128]* %a_poly228, i128 0, i128 %i.3
  %a_poly231 = load i128, i128* %array_getter230, align 4
  %b_poly232 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %array_getter234 = getelementptr inbounds [256 x i128], [256 x i128]* %b_poly232, i128 0, i128 %i.3
  %b_poly235 = load i128, i128* %array_getter234, align 4
  %mul236 = mul i128 %a_poly231, %b_poly235
  call void @fn_intrinsic_utils_constraint(i128 %out_poly227, i128 %mul236, i1* @constraint.55)
  br label %loop.latch237

loop.latch237:                                    ; preds = %loop.body223
  %add239 = add i128 %i.3, 1
  %mul242 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub243 = sub i128 %mul242, 1
  %slt244 = icmp slt i128 %add239, %sub243
  br i1 %slt244, label %loop.body223, label %loop.exit245

loop.exit245:                                     ; preds = %loop.latch237
  br label %arraydim

arraydim:                                         ; preds = %loop.exit245
  %ptr_cast = bitcast [256 x i128]** %prod_val to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %sub18)
  %ptr_cast246 = bitcast [256 x i128]** %bigmultshortlong.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast246, i128 %bigmultshortlong.k.read_arg_inner)
  %ptr_cast247 = bitcast [256 x i128]** %a_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast247, i128 %sub122)
  %ptr_cast248 = bitcast [256 x i128]** %out_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast248, i128 %sub130)
  %ptr_cast249 = bitcast [256 x i128]** %b_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast249, i128 %sub126)
  %ptr_cast250 = bitcast [256 x [256 x i128]]** %pow to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast250, i128 %sub93, i128 %sub93)
  %ptr_cast251 = bitcast [256 x i128]** %bigmultshortlong.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast251, i128 %sub)
  %ptr_cast252 = bitcast [256 x i128]** %bigmultshortlong.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast252, i128 %bigmultshortlong.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out253 = load [256 x i128]*, [256 x i128]** %bigmultshortlong.out.declare_output, align 8
  %bigmultshortlong.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 5
  store [256 x i128]* %out253, [256 x i128]** %bigmultshortlong.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_bigmultshortlong = alloca %struct_template_circuit_bigmultshortlong, align 8
  %bigmultshortlong.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlong.n.write_arg_inner, align 4
  %bigmultshortlong.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlong.k.write_arg_inner, align 4
  %bigmultshortlong.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlong.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong
}

define void @fn_template_init_longtoshortnoendcarry(%struct_template_circuit_longtoshortnoendcarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 0
  %longtoshortnoendcarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 1
  %longtoshortnoendcarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 2
  %longtoshortnoendcarry.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %longtoshortnoendcarry.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %longtoshortnoendcarry.in.read_input_inner, [256 x i128]** %longtoshortnoendcarry.in.declare_input, align 8
  %split = alloca [256 x [256 x i128]]*, align 8
  %split3 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %split3, [256 x [256 x i128]]** %split, align 8
  %carry = alloca [256 x i128]*, align 8
  %carry4 = alloca [256 x i128], align 8
  store [256 x i128]* %carry4, [256 x i128]** %carry, align 8
  %runningCarryRangeChecks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %runningCarryRangeChecks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %sumAndCarry = alloca [256 x i128]*, align 8
  %sumAndCarry7 = alloca [256 x i128], align 8
  store [256 x i128]* %sumAndCarry7, [256 x i128]** %sumAndCarry, align 8
  %longtoshortnoendcarry.runningcarry.declare_inter = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %runningCarry = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %runningCarry, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %outRangeChecks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %outRangeChecks8 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %outRangeChecks8, [256 x %struct_template_circuit_num2bits*]** %outRangeChecks, align 8
  %longtoshortnoendcarry.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall9 to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %sle = icmp sle i128 %longtoshortnoendcarry.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add = add i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %uniform_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]** %split, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add20, %loop.latch ]
  %in = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in13 = load i128, i128* %array_getter, align 4
  %call = call [256 x i128]* @SplitThreeFn(i128 %in13, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner)
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %split18 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 %i.0
  %1 = bitcast [256 x i128]* %split18 to i8*
  %2 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add20 = add i128 %i.0, 1
  %slt = icmp slt i128 %add20, %longtoshortnoendcarry.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %uniform_array24 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array24, [256 x i128]** %carry, align 8
  %ptr_getter25 = load [256 x i128]*, [256 x i128]** %carry, align 8
  %carry26 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter25, i128 0, i128 0
  store i128 0, i128* %carry26, align 4
  %split27 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split27, i128 0, i128 0, i128 0
  %split29 = load i128, i128* %array_getter28, align 4
  %ptr_getter30 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %out31 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter30, i128 0, i128 0
  store i128 %split29, i128* %out31, align 4
  %sgt = icmp sgt i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.exit
  %split33 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split33, i128 0, i128 0, i128 1
  %split35 = load i128, i128* %array_getter34, align 4
  %split36 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split36, i128 0, i128 1, i128 0
  %split38 = load i128, i128* %array_getter37, align 4
  %add39 = add i128 %split35, %split38
  %call42 = call [256 x i128]* @SplitFn(i128 %add39, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner)
  store [256 x i128]* %call42, [256 x i128]** %sumAndCarry, align 8
  %sumAndCarry43 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter44 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry43, i128 0, i128 0
  %sumAndCarry45 = load i128, i128* %array_getter44, align 4
  %ptr_getter46 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %out47 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter46, i128 0, i128 1
  store i128 %sumAndCarry45, i128* %out47, align 4
  %sumAndCarry48 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry48, i128 0, i128 1
  %sumAndCarry50 = load i128, i128* %array_getter49, align 4
  %ptr_getter51 = load [256 x i128]*, [256 x i128]** %carry, align 8
  %carry52 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter51, i128 0, i128 1
  store i128 %sumAndCarry50, i128* %carry52, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.exit
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %sgt56 = icmp sgt i128 %longtoshortnoendcarry.k.read_arg_inner, 2
  br i1 %sgt56, label %if.true53, label %if.false54

if.true53:                                        ; preds = %if.exit
  br label %loop.body57

if.false54:                                       ; preds = %if.exit
  br label %if.exit121

loop.body57:                                      ; preds = %loop.latch94, %if.true53
  %i.1 = phi i128 [ 2, %if.true53 ], [ %add96, %loop.latch94 ]
  %split58 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split58, i128 0, i128 %i.1, i128 0
  %split61 = load i128, i128* %array_getter60, align 4
  %split62 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %sub = sub i128 %i.1, 1
  %array_getter64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split62, i128 0, i128 %sub, i128 1
  %split65 = load i128, i128* %array_getter64, align 4
  %add66 = add i128 %split61, %split65
  %split67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %sub69 = sub i128 %i.1, 2
  %array_getter70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split67, i128 0, i128 %sub69, i128 2
  %split71 = load i128, i128* %array_getter70, align 4
  %add72 = add i128 %add66, %split71
  %carry73 = load [256 x i128]*, [256 x i128]** %carry, align 8
  %sub75 = sub i128 %i.1, 1
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %carry73, i128 0, i128 %sub75
  %carry77 = load i128, i128* %array_getter76, align 4
  %add78 = add i128 %add72, %carry77
  %call81 = call [256 x i128]* @SplitFn(i128 %add78, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner)
  store [256 x i128]* %call81, [256 x i128]** %sumAndCarry, align 8
  %sumAndCarry82 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter83 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry82, i128 0, i128 0
  %sumAndCarry84 = load i128, i128* %array_getter83, align 4
  %ptr_getter85 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %out87 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter85, i128 0, i128 %i.1
  store i128 %sumAndCarry84, i128* %out87, align 4
  %sumAndCarry88 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter89 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry88, i128 0, i128 1
  %sumAndCarry90 = load i128, i128* %array_getter89, align 4
  %ptr_getter91 = load [256 x i128]*, [256 x i128]** %carry, align 8
  %carry93 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter91, i128 0, i128 %i.1
  store i128 %sumAndCarry90, i128* %carry93, align 4
  br label %loop.latch94

loop.latch94:                                     ; preds = %loop.body57
  %add96 = add i128 %i.1, 1
  %slt99 = icmp slt i128 %add96, %longtoshortnoendcarry.k.read_arg_inner
  br i1 %slt99, label %loop.body57, label %loop.exit100

loop.exit100:                                     ; preds = %loop.latch94
  %split101 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %sub103 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split101, i128 0, i128 %sub103, i128 1
  %split105 = load i128, i128* %array_getter104, align 4
  %split106 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %split, align 8
  %sub108 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 2
  %array_getter109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %split106, i128 0, i128 %sub108, i128 2
  %split110 = load i128, i128* %array_getter109, align 4
  %add111 = add i128 %split105, %split110
  %carry112 = load [256 x i128]*, [256 x i128]** %carry, align 8
  %sub114 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %array_getter115 = getelementptr inbounds [256 x i128], [256 x i128]* %carry112, i128 0, i128 %sub114
  %carry116 = load i128, i128* %array_getter115, align 4
  %add117 = add i128 %add111, %carry116
  %ptr_getter118 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %out120 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter118, i128 0, i128 %longtoshortnoendcarry.k.read_arg_inner
  store i128 %add117, i128* %out120, align 4
  br label %if.exit121

if.exit121:                                       ; preds = %loop.exit100, %if.false54
  %add123 = add i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  br label %loop.body124

loop.body124:                                     ; preds = %loop.latch143, %if.exit121
  %i.2 = phi i128 [ 0, %if.exit121 ], [ %add145, %loop.latch143 ]
  %call126 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %longtoshortnoendcarry.n.read_arg_inner)
  %ptr_getter127 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %outRangeChecks, align 8
  %outRangeChecks129 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter127, i128 0, i128 %i.2
  store %struct_template_circuit_num2bits* %call126, %struct_template_circuit_num2bits** %outRangeChecks129, align 8
  %out130 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %array_getter132 = getelementptr inbounds [256 x i128], [256 x i128]* %out130, i128 0, i128 %i.2
  %out133 = load i128, i128* %array_getter132, align 4
  %outRangeChecks134 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %outRangeChecks, align 8
  %array_getter136 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %outRangeChecks134, i128 0, i128 %i.2
  %outRangeChecks137 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter136, align 8
  %struct_getter138 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks137, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter138, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %out133, i1* @constraint.56)
  %ptr_getter139 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %outRangeChecks, align 8
  %array_getter141 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter139, i128 0, i128 %i.2
  %outRangeChecks142 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter141, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks142, i32 0, i32 1
  store i128 %out133, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.body124
  %add145 = add i128 %i.2, 1
  %add148 = add i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %slt149 = icmp slt i128 %add145, %add148
  br i1 %slt149, label %loop.body124, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch143
  %in153 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.in.declare_input, align 8
  %array_getter154 = getelementptr inbounds [256 x i128], [256 x i128]* %in153, i128 0, i128 0
  %in155 = load i128, i128* %array_getter154, align 4
  %out156 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %array_getter157 = getelementptr inbounds [256 x i128], [256 x i128]* %out156, i128 0, i128 0
  %out158 = load i128, i128* %array_getter157, align 4
  %sub159 = sub i128 %in155, %out158
  %lshift = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %sdiv = sdiv i128 %sub159, %lshift
  %ptr_getter161 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %runningCarry162 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter161, i128 0, i128 0
  store i128 %sdiv, i128* %runningCarry162, align 4
  %call165 = call i128 @log_ceil(i128 %longtoshortnoendcarry.k.read_arg_inner)
  %add166 = add i128 %longtoshortnoendcarry.n.read_arg_inner, %call165
  %call167 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add166)
  %ptr_getter168 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %runningCarryRangeChecks169 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter168, i128 0, i128 0
  store %struct_template_circuit_num2bits* %call167, %struct_template_circuit_num2bits** %runningCarryRangeChecks169, align 8
  %runningCarry170 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %array_getter171 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry170, i128 0, i128 0
  %runningCarry172 = load i128, i128* %array_getter171, align 4
  %runningCarryRangeChecks173 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %array_getter174 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks173, i128 0, i128 0
  %runningCarryRangeChecks175 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter174, align 8
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks175, i32 0, i32 1
  %num2bits.in.read_input_outter177 = load i128, i128* %struct_getter176, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter177, i128 %runningCarry172, i1* @constraint.57)
  %ptr_getter178 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %array_getter179 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter178, i128 0, i128 0
  %runningCarryRangeChecks180 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter179, align 8
  %num2bits.in.write_input_outter181 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks180, i32 0, i32 1
  store i128 %runningCarry172, i128* %num2bits.in.write_input_outter181, align 4
  %runningCarry182 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %array_getter183 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry182, i128 0, i128 0
  %runningCarry184 = load i128, i128* %array_getter183, align 4
  %lshift186 = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %mul = mul i128 %runningCarry184, %lshift186
  %in187 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.in.declare_input, align 8
  %array_getter188 = getelementptr inbounds [256 x i128], [256 x i128]* %in187, i128 0, i128 0
  %in189 = load i128, i128* %array_getter188, align 4
  %out190 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %array_getter191 = getelementptr inbounds [256 x i128], [256 x i128]* %out190, i128 0, i128 0
  %out192 = load i128, i128* %array_getter191, align 4
  %sub193 = sub i128 %in189, %out192
  call void @fn_intrinsic_utils_constraint(i128 %mul, i128 %sub193, i1* @constraint.58)
  br label %loop.body194

loop.body194:                                     ; preds = %loop.latch261, %loop.exit150
  %i.3 = phi i128 [ 1, %loop.exit150 ], [ %add263, %loop.latch261 ]
  %in195 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.in.declare_input, align 8
  %array_getter197 = getelementptr inbounds [256 x i128], [256 x i128]* %in195, i128 0, i128 %i.3
  %in198 = load i128, i128* %array_getter197, align 4
  %out199 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %array_getter201 = getelementptr inbounds [256 x i128], [256 x i128]* %out199, i128 0, i128 %i.3
  %out202 = load i128, i128* %array_getter201, align 4
  %sub203 = sub i128 %in198, %out202
  %runningCarry204 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %sub206 = sub i128 %i.3, 1
  %array_getter207 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry204, i128 0, i128 %sub206
  %runningCarry208 = load i128, i128* %array_getter207, align 4
  %add209 = add i128 %sub203, %runningCarry208
  %lshift211 = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %sdiv212 = sdiv i128 %add209, %lshift211
  %ptr_getter213 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %runningCarry215 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter213, i128 0, i128 %i.3
  store i128 %sdiv212, i128* %runningCarry215, align 4
  %call218 = call i128 @log_ceil(i128 %longtoshortnoendcarry.k.read_arg_inner)
  %add219 = add i128 %longtoshortnoendcarry.n.read_arg_inner, %call218
  %call220 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add219)
  %ptr_getter221 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %runningCarryRangeChecks223 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter221, i128 0, i128 %i.3
  store %struct_template_circuit_num2bits* %call220, %struct_template_circuit_num2bits** %runningCarryRangeChecks223, align 8
  %runningCarry224 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %array_getter226 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry224, i128 0, i128 %i.3
  %runningCarry227 = load i128, i128* %array_getter226, align 4
  %runningCarryRangeChecks228 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %array_getter230 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks228, i128 0, i128 %i.3
  %runningCarryRangeChecks231 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter230, align 8
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks231, i32 0, i32 1
  %num2bits.in.read_input_outter233 = load i128, i128* %struct_getter232, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter233, i128 %runningCarry227, i1* @constraint.59)
  %ptr_getter234 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks, align 8
  %array_getter236 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter234, i128 0, i128 %i.3
  %runningCarryRangeChecks237 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter236, align 8
  %num2bits.in.write_input_outter238 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks237, i32 0, i32 1
  store i128 %runningCarry227, i128* %num2bits.in.write_input_outter238, align 4
  %runningCarry239 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %array_getter241 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry239, i128 0, i128 %i.3
  %runningCarry242 = load i128, i128* %array_getter241, align 4
  %lshift244 = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %mul245 = mul i128 %runningCarry242, %lshift244
  %in246 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.in.declare_input, align 8
  %array_getter248 = getelementptr inbounds [256 x i128], [256 x i128]* %in246, i128 0, i128 %i.3
  %in249 = load i128, i128* %array_getter248, align 4
  %out250 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %array_getter252 = getelementptr inbounds [256 x i128], [256 x i128]* %out250, i128 0, i128 %i.3
  %out253 = load i128, i128* %array_getter252, align 4
  %sub254 = sub i128 %in249, %out253
  %runningCarry255 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %sub257 = sub i128 %i.3, 1
  %array_getter258 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry255, i128 0, i128 %sub257
  %runningCarry259 = load i128, i128* %array_getter258, align 4
  %add260 = add i128 %sub254, %runningCarry259
  call void @fn_intrinsic_utils_constraint(i128 %mul245, i128 %add260, i1* @constraint.60)
  br label %loop.latch261

loop.latch261:                                    ; preds = %loop.body194
  %add263 = add i128 %i.3, 1
  %slt266 = icmp slt i128 %add263, %longtoshortnoendcarry.k.read_arg_inner
  br i1 %slt266, label %loop.body194, label %loop.exit267

loop.exit267:                                     ; preds = %loop.latch261
  %runningCarry268 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %sub270 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %array_getter271 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry268, i128 0, i128 %sub270
  %runningCarry272 = load i128, i128* %array_getter271, align 4
  %out273 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %array_getter275 = getelementptr inbounds [256 x i128], [256 x i128]* %out273, i128 0, i128 %longtoshortnoendcarry.k.read_arg_inner
  %out276 = load i128, i128* %array_getter275, align 4
  call void @fn_intrinsic_utils_constraint(i128 %runningCarry272, i128 %out276, i1* @constraint.61)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit267
  %ptr_cast = bitcast [256 x [256 x i128]]** %split to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %longtoshortnoendcarry.k.read_arg_inner, i128 3)
  %ptr_cast277 = bitcast [256 x %struct_template_circuit_num2bits*]** %runningCarryRangeChecks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast277, i128 %longtoshortnoendcarry.k.read_arg_inner)
  %ptr_cast278 = bitcast [256 x i128]** %longtoshortnoendcarry.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast278, i128 %longtoshortnoendcarry.k.read_arg_inner)
  %ptr_cast279 = bitcast [256 x i128]** %carry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast279, i128 %longtoshortnoendcarry.k.read_arg_inner)
  %ptr_cast280 = bitcast [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast280, i128 %longtoshortnoendcarry.k.read_arg_inner)
  %ptr_cast281 = bitcast [256 x i128]** %longtoshortnoendcarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast281, i128 %add)
  %ptr_cast282 = bitcast [256 x i128]** %sumAndCarry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast282, i128 2)
  %ptr_cast283 = bitcast [256 x %struct_template_circuit_num2bits*]** %outRangeChecks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast283, i128 %add123)
  br label %exit

exit:                                             ; preds = %arraydim
  %runningCarry284 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.runningcarry.declare_inter, align 8
  %longtoshortnoendcarry.runningcarry.write_inter_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 3
  store [256 x i128]* %runningCarry284, [256 x i128]** %longtoshortnoendcarry.runningcarry.write_inter_inner, align 8
  %out285 = load [256 x i128]*, [256 x i128]** %longtoshortnoendcarry.out.declare_output, align 8
  %longtoshortnoendcarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 4
  store [256 x i128]* %out285, [256 x i128]** %longtoshortnoendcarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_longtoshortnoendcarry* @fn_template_build_longtoshortnoendcarry(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_longtoshortnoendcarry = alloca %struct_template_circuit_longtoshortnoendcarry, align 8
  %longtoshortnoendcarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %struct_template_circuit_longtoshortnoendcarry, i32 0, i32 0
  store i128 %0, i128* %longtoshortnoendcarry.n.write_arg_inner, align 4
  %longtoshortnoendcarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %struct_template_circuit_longtoshortnoendcarry, i32 0, i32 1
  store i128 %1, i128* %longtoshortnoendcarry.k.write_arg_inner, align 4
  ret %struct_template_circuit_longtoshortnoendcarry* %struct_template_circuit_longtoshortnoendcarry
}

define void @fn_template_init_split(%struct_template_circuit_split* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 0
  %split.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 1
  %split.m.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 2
  %split.in.read_input_inner = load i128, i128* %struct_getter2, align 4
  %small = call i128 @fn_intrinsic_utils_init()
  %big = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %split.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %lshift = shl i128 1, %split.n.read_arg_inner
  %mod = srem i128 %split.in.read_input_inner, %lshift
  %split.small.write_output_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 3
  store i128 %mod, i128* %split.small.write_output_inner, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 3
  %split.small.read_output_inner = load i128, i128* %struct_getter5, align 4
  %lshift8 = shl i128 1, %split.n.read_arg_inner
  %sdiv = sdiv i128 %split.in.read_input_inner, %lshift8
  %split.big.write_output_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 4
  store i128 %sdiv, i128* %split.big.write_output_inner, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 4
  %split.big.read_output_inner = load i128, i128* %struct_getter11, align 4
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %split.n.read_arg_inner)
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter15, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %split.small.read_output_inner, i1* @constraint.62)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %split.small.read_output_inner, i128* %num2bits.in.write_input_outter, align 4
  %call17 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %split.m.read_arg_inner)
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call17, i32 0, i32 1
  %num2bits.in.read_input_outter21 = load i128, i128* %struct_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter21, i128 %split.big.read_output_inner, i1* @constraint.63)
  %num2bits.in.write_input_outter23 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call17, i32 0, i32 1
  store i128 %split.big.read_output_inner, i128* %num2bits.in.write_input_outter23, align 4
  %lshift28 = shl i128 1, %split.n.read_arg_inner
  %mul = mul i128 %split.big.read_output_inner, %lshift28
  %add = add i128 %split.small.read_output_inner, %mul
  call void @fn_intrinsic_utils_constraint(i128 %split.in.read_input_inner, i128 %add, i1* @constraint.64)
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %split.small.write_output_inner30 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 3
  store i128 %split.small.read_output_inner, i128* %split.small.write_output_inner30, align 4
  %split.big.write_output_inner32 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 4
  store i128 %split.big.read_output_inner, i128* %split.big.write_output_inner32, align 4
  ret void
}

define %struct_template_circuit_split* @fn_template_build_split(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_split = alloca %struct_template_circuit_split, align 8
  %split.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %struct_template_circuit_split, i32 0, i32 0
  store i128 %0, i128* %split.n.write_arg_inner, align 4
  %split.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %struct_template_circuit_split, i32 0, i32 1
  store i128 %1, i128* %split.m.write_arg_inner, align 4
  ret %struct_template_circuit_split* %struct_template_circuit_split
}

define void @fn_template_init_bigmultshortlong2d(%struct_template_circuit_bigmultshortlong2d* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 0
  %bigmultshortlong2d.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 1
  %bigmultshortlong2d.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 2
  %bigmultshortlong2d.l.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %bigmultshortlong2d.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_inner, [256 x [256 x i128]]** %bigmultshortlong2d.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %bigmultshortlong2d.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_inner, [256 x [256 x i128]]** %bigmultshortlong2d.b.declare_input, align 8
  %a_poly = alloca [256 x [256 x i128]]*, align 8
  %a_poly5 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %a_poly5, [256 x [256 x i128]]** %a_poly, align 8
  %prod_val = alloca [256 x [256 x i128]]*, align 8
  %prod_val6 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %prod_val6, [256 x [256 x i128]]** %prod_val, align 8
  %i17 = call i128 @fn_intrinsic_utils_init()
  %i28 = call i128 @fn_intrinsic_utils_init()
  %j19 = call i128 @fn_intrinsic_utils_init()
  %j210 = call i128 @fn_intrinsic_utils_init()
  %out_poly = alloca [256 x [256 x i128]]*, align 8
  %out_poly11 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %out_poly11, [256 x [256 x i128]]** %out_poly, align 8
  %b_poly = alloca [256 x [256 x i128]]*, align 8
  %b_poly12 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %b_poly12, [256 x [256 x i128]]** %b_poly, align 8
  %k213 = call i128 @fn_intrinsic_utils_init()
  %j14 = call i128 @fn_intrinsic_utils_init()
  %i15 = call i128 @fn_intrinsic_utils_init()
  %deg116 = call i128 @fn_intrinsic_utils_init()
  %deg217 = call i128 @fn_intrinsic_utils_init()
  %pow = alloca [256 x [256 x i128]]*, align 8
  %pow18 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %pow18, [256 x [256 x i128]]** %pow, align 8
  %bigmultshortlong2d.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %bigmultshortlong2d.out.declare_output, align 8
  %mul = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul23 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub24 = sub i128 %mul23, 1
  %mul26 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub27 = sub i128 %mul26, 1
  %mul29 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub30 = sub i128 %mul29, 1
  %uniform_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]** %prod_val, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch40, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add42, %loop.latch40 ]
  br label %loop.body31

loop.body31:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %prod_val34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store i128 0, i128* %prod_val34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body31
  %add = add i128 %j.0, 1
  %mul38 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub39 = sub i128 %mul38, 1
  %slt = icmp slt i128 %add, %sub39
  br i1 %slt, label %loop.body31, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch40

loop.latch40:                                     ; preds = %loop.exit
  %add42 = add i128 %i.0, 1
  %mul45 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub46 = sub i128 %mul45, 1
  %slt47 = icmp slt i128 %add42, %sub46
  br i1 %slt47, label %loop.body, label %loop.exit48

loop.exit48:                                      ; preds = %loop.latch40
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch98, %loop.exit48
  %i1.0 = phi i128 [ 0, %loop.exit48 ], [ %add100, %loop.latch98 ]
  br label %loop.body50

loop.body50:                                      ; preds = %loop.latch91, %loop.body49
  %i2.0 = phi i128 [ 0, %loop.body49 ], [ %add93, %loop.latch91 ]
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch84, %loop.body50
  %j1.0 = phi i128 [ 0, %loop.body50 ], [ %add86, %loop.latch84 ]
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch77, %loop.body51
  %j2.0 = phi i128 [ 0, %loop.body51 ], [ %add79, %loop.latch77 ]
  %add55 = add i128 %i1.0, %i2.0
  %add58 = add i128 %j1.0, %j2.0
  %prod_val59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %prod_val59, i128 0, i128 %add55, i128 %add58
  %prod_val62 = load i128, i128* %array_getter, align 4
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.a.declare_input, align 8
  %array_getter65 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i1.0, i128 %j1.0
  %a66 = load i128, i128* %array_getter65, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.b.declare_input, align 8
  %array_getter69 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i2.0, i128 %j2.0
  %b70 = load i128, i128* %array_getter69, align 4
  %mul71 = mul i128 %a66, %b70
  %add72 = add i128 %prod_val62, %mul71
  %ptr_getter73 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %prod_val76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter73, i128 0, i128 %add55, i128 %add58
  store i128 %add72, i128* %prod_val76, align 4
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.body52
  %add79 = add i128 %j2.0, 1
  %slt82 = icmp slt i128 %add79, %bigmultshortlong2d.k.read_arg_inner
  br i1 %slt82, label %loop.body52, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch77
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.exit83
  %add86 = add i128 %j1.0, 1
  %slt89 = icmp slt i128 %add86, %bigmultshortlong2d.k.read_arg_inner
  br i1 %slt89, label %loop.body51, label %loop.exit90

loop.exit90:                                      ; preds = %loop.latch84
  br label %loop.latch91

loop.latch91:                                     ; preds = %loop.exit90
  %add93 = add i128 %i2.0, 1
  %slt96 = icmp slt i128 %add93, %bigmultshortlong2d.l.read_arg_inner
  br i1 %slt96, label %loop.body50, label %loop.exit97

loop.exit97:                                      ; preds = %loop.latch91
  br label %loop.latch98

loop.latch98:                                     ; preds = %loop.exit97
  %add100 = add i128 %i1.0, 1
  %slt103 = icmp slt i128 %add100, %bigmultshortlong2d.l.read_arg_inner
  br i1 %slt103, label %loop.body49, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch98
  br label %loop.body105

loop.body105:                                     ; preds = %loop.latch125, %loop.exit104
  %i.1 = phi i128 [ 0, %loop.exit104 ], [ %add127, %loop.latch125 ]
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch116, %loop.body105
  %j.1 = phi i128 [ 0, %loop.body105 ], [ %add118, %loop.latch116 ]
  %prod_val107 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %prod_val, align 8
  %array_getter110 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %prod_val107, i128 0, i128 %i.1, i128 %j.1
  %prod_val111 = load i128, i128* %array_getter110, align 4
  %ptr_getter112 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.out.declare_output, align 8
  %out115 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter112, i128 0, i128 %i.1, i128 %j.1
  store i128 %prod_val111, i128* %out115, align 4
  br label %loop.latch116

loop.latch116:                                    ; preds = %loop.body106
  %add118 = add i128 %j.1, 1
  %mul121 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub122 = sub i128 %mul121, 1
  %slt123 = icmp slt i128 %add118, %sub122
  br i1 %slt123, label %loop.body106, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch116
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.exit124
  %add127 = add i128 %i.1, 1
  %mul130 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub131 = sub i128 %mul130, 1
  %slt132 = icmp slt i128 %add127, %sub131
  br i1 %slt132, label %loop.body105, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch125
  %mul135 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub136 = sub i128 %mul135, 1
  %mul138 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub139 = sub i128 %mul138, 1
  %sgt = icmp sgt i128 %sub136, %sub139
  %mul141 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub142 = sub i128 %mul141, 1
  %mul144 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub145 = sub i128 %mul144, 1
  %utils_switch = call i128 @fn_intrinsic_utils_switch(i1 %sgt, i128 %sub142, i128 %sub145)
  %uniform_array148 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array148, [256 x [256 x i128]]** %pow, align 8
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch166, %loop.exit133
  %i.2 = phi i128 [ 0, %loop.exit133 ], [ %add168, %loop.latch166 ]
  br label %loop.body150

loop.body150:                                     ; preds = %loop.latch159, %loop.body149
  %j.2 = phi i128 [ 0, %loop.body149 ], [ %add161, %loop.latch159 ]
  %pow153 = call i128 @fn_intrinsic_utils_powi(i128 %i.2, i128 %j.2)
  %ptr_getter154 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %pow158 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter154, i128 0, i128 %i.2, i128 %j.2
  store i128 %pow153, i128* %pow158, align 4
  br label %loop.latch159

loop.latch159:                                    ; preds = %loop.body150
  %add161 = add i128 %j.2, 1
  %slt164 = icmp slt i128 %add161, %utils_switch
  br i1 %slt164, label %loop.body150, label %loop.exit165

loop.exit165:                                     ; preds = %loop.latch159
  br label %loop.latch166

loop.latch166:                                    ; preds = %loop.exit165
  %add168 = add i128 %i.2, 1
  %slt171 = icmp slt i128 %add168, %utils_switch
  br i1 %slt171, label %loop.body149, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch166
  %mul174 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub175 = sub i128 %mul174, 1
  %mul177 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub178 = sub i128 %mul177, 1
  %uniform_array179 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array179, [256 x [256 x i128]]** %a_poly, align 8
  %mul181 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub182 = sub i128 %mul181, 1
  %mul184 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub185 = sub i128 %mul184, 1
  %uniform_array186 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array186, [256 x [256 x i128]]** %b_poly, align 8
  %mul188 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub189 = sub i128 %mul188, 1
  %mul191 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub192 = sub i128 %mul191, 1
  %uniform_array193 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array193, [256 x [256 x i128]]** %out_poly, align 8
  br label %loop.body194

loop.body194:                                     ; preds = %loop.latch334, %loop.exit172
  %i.3 = phi i128 [ 0, %loop.exit172 ], [ %add336, %loop.latch334 ]
  br label %loop.body195

loop.body195:                                     ; preds = %loop.latch325, %loop.body194
  %j.3 = phi i128 [ 0, %loop.body194 ], [ %add327, %loop.latch325 ]
  %ptr_getter196 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %a_poly199 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter196, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %a_poly199, align 4
  %ptr_getter200 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %b_poly203 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter200, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %b_poly203, align 4
  %ptr_getter204 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %out_poly207 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter204, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %out_poly207, align 4
  br label %loop.body208

loop.body208:                                     ; preds = %loop.latch271, %loop.body195
  %deg1.0 = phi i128 [ 0, %loop.body195 ], [ %add273, %loop.latch271 ]
  br label %loop.body209

loop.body209:                                     ; preds = %loop.latch264, %loop.body208
  %deg2.0 = phi i128 [ 0, %loop.body208 ], [ %add266, %loop.latch264 ]
  %a_poly210 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %array_getter213 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a_poly210, i128 0, i128 %i.3, i128 %j.3
  %a_poly214 = load i128, i128* %array_getter213, align 4
  %a215 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.a.declare_input, align 8
  %array_getter218 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a215, i128 0, i128 %deg1.0, i128 %deg2.0
  %a219 = load i128, i128* %array_getter218, align 4
  %pow220 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter223 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow220, i128 0, i128 %i.3, i128 %deg1.0
  %pow224 = load i128, i128* %array_getter223, align 4
  %mul225 = mul i128 %a219, %pow224
  %pow226 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow226, i128 0, i128 %j.3, i128 %deg2.0
  %pow230 = load i128, i128* %array_getter229, align 4
  %mul231 = mul i128 %mul225, %pow230
  %add232 = add i128 %a_poly214, %mul231
  %ptr_getter233 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %a_poly236 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter233, i128 0, i128 %i.3, i128 %j.3
  store i128 %add232, i128* %a_poly236, align 4
  %b_poly237 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %array_getter240 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b_poly237, i128 0, i128 %i.3, i128 %j.3
  %b_poly241 = load i128, i128* %array_getter240, align 4
  %b242 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.b.declare_input, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b242, i128 0, i128 %deg1.0, i128 %deg2.0
  %b246 = load i128, i128* %array_getter245, align 4
  %pow247 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter250 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow247, i128 0, i128 %i.3, i128 %deg1.0
  %pow251 = load i128, i128* %array_getter250, align 4
  %mul252 = mul i128 %b246, %pow251
  %pow253 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter256 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow253, i128 0, i128 %j.3, i128 %deg2.0
  %pow257 = load i128, i128* %array_getter256, align 4
  %mul258 = mul i128 %mul252, %pow257
  %add259 = add i128 %b_poly241, %mul258
  %ptr_getter260 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %b_poly263 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter260, i128 0, i128 %i.3, i128 %j.3
  store i128 %add259, i128* %b_poly263, align 4
  br label %loop.latch264

loop.latch264:                                    ; preds = %loop.body209
  %add266 = add i128 %deg2.0, 1
  %slt269 = icmp slt i128 %add266, %bigmultshortlong2d.k.read_arg_inner
  br i1 %slt269, label %loop.body209, label %loop.exit270

loop.exit270:                                     ; preds = %loop.latch264
  br label %loop.latch271

loop.latch271:                                    ; preds = %loop.exit270
  %add273 = add i128 %deg1.0, 1
  %slt276 = icmp slt i128 %add273, %bigmultshortlong2d.l.read_arg_inner
  br i1 %slt276, label %loop.body208, label %loop.exit277

loop.exit277:                                     ; preds = %loop.latch271
  br label %loop.body278

loop.body278:                                     ; preds = %loop.latch316, %loop.exit277
  %deg1.1 = phi i128 [ 0, %loop.exit277 ], [ %add318, %loop.latch316 ]
  br label %loop.body279

loop.body279:                                     ; preds = %loop.latch307, %loop.body278
  %deg2.1 = phi i128 [ 0, %loop.body278 ], [ %add309, %loop.latch307 ]
  %out_poly280 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %array_getter283 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out_poly280, i128 0, i128 %i.3, i128 %j.3
  %out_poly284 = load i128, i128* %array_getter283, align 4
  %out285 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.out.declare_output, align 8
  %array_getter288 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out285, i128 0, i128 %deg1.1, i128 %deg2.1
  %out289 = load i128, i128* %array_getter288, align 4
  %pow290 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter293 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow290, i128 0, i128 %i.3, i128 %deg1.1
  %pow294 = load i128, i128* %array_getter293, align 4
  %mul295 = mul i128 %out289, %pow294
  %pow296 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter299 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow296, i128 0, i128 %j.3, i128 %deg2.1
  %pow300 = load i128, i128* %array_getter299, align 4
  %mul301 = mul i128 %mul295, %pow300
  %add302 = add i128 %out_poly284, %mul301
  %ptr_getter303 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %out_poly306 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter303, i128 0, i128 %i.3, i128 %j.3
  store i128 %add302, i128* %out_poly306, align 4
  br label %loop.latch307

loop.latch307:                                    ; preds = %loop.body279
  %add309 = add i128 %deg2.1, 1
  %mul312 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub313 = sub i128 %mul312, 1
  %slt314 = icmp slt i128 %add309, %sub313
  br i1 %slt314, label %loop.body279, label %loop.exit315

loop.exit315:                                     ; preds = %loop.latch307
  br label %loop.latch316

loop.latch316:                                    ; preds = %loop.exit315
  %add318 = add i128 %deg1.1, 1
  %mul321 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub322 = sub i128 %mul321, 1
  %slt323 = icmp slt i128 %add318, %sub322
  br i1 %slt323, label %loop.body278, label %loop.exit324

loop.exit324:                                     ; preds = %loop.latch316
  br label %loop.latch325

loop.latch325:                                    ; preds = %loop.exit324
  %add327 = add i128 %j.3, 1
  %mul330 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub331 = sub i128 %mul330, 1
  %slt332 = icmp slt i128 %add327, %sub331
  br i1 %slt332, label %loop.body195, label %loop.exit333

loop.exit333:                                     ; preds = %loop.latch325
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.exit333
  %add336 = add i128 %i.3, 1
  %mul339 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub340 = sub i128 %mul339, 1
  %slt341 = icmp slt i128 %add336, %sub340
  br i1 %slt341, label %loop.body194, label %loop.exit342

loop.exit342:                                     ; preds = %loop.latch334
  br label %loop.body343

loop.body343:                                     ; preds = %loop.latch370, %loop.exit342
  %i.4 = phi i128 [ 0, %loop.exit342 ], [ %add372, %loop.latch370 ]
  br label %loop.body344

loop.body344:                                     ; preds = %loop.latch361, %loop.body343
  %j.4 = phi i128 [ 0, %loop.body343 ], [ %add363, %loop.latch361 ]
  %out_poly345 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_poly, align 8
  %array_getter348 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out_poly345, i128 0, i128 %i.4, i128 %j.4
  %out_poly349 = load i128, i128* %array_getter348, align 4
  %a_poly350 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_poly, align 8
  %array_getter353 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a_poly350, i128 0, i128 %i.4, i128 %j.4
  %a_poly354 = load i128, i128* %array_getter353, align 4
  %b_poly355 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_poly, align 8
  %array_getter358 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b_poly355, i128 0, i128 %i.4, i128 %j.4
  %b_poly359 = load i128, i128* %array_getter358, align 4
  %mul360 = mul i128 %a_poly354, %b_poly359
  call void @fn_intrinsic_utils_constraint(i128 %out_poly349, i128 %mul360, i1* @constraint.65)
  br label %loop.latch361

loop.latch361:                                    ; preds = %loop.body344
  %add363 = add i128 %j.4, 1
  %mul366 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub367 = sub i128 %mul366, 1
  %slt368 = icmp slt i128 %add363, %sub367
  br i1 %slt368, label %loop.body344, label %loop.exit369

loop.exit369:                                     ; preds = %loop.latch361
  br label %loop.latch370

loop.latch370:                                    ; preds = %loop.exit369
  %add372 = add i128 %i.4, 1
  %mul375 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub376 = sub i128 %mul375, 1
  %slt377 = icmp slt i128 %add372, %sub376
  br i1 %slt377, label %loop.body343, label %loop.exit378

loop.exit378:                                     ; preds = %loop.latch370
  br label %arraydim

arraydim:                                         ; preds = %loop.exit378
  %ptr_cast = bitcast [256 x [256 x i128]]** %a_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %sub175, i128 %sub178)
  %ptr_cast379 = bitcast [256 x [256 x i128]]** %b_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast379, i128 %sub182, i128 %sub185)
  %ptr_cast380 = bitcast [256 x [256 x i128]]** %out_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast380, i128 %sub189, i128 %sub192)
  %ptr_cast381 = bitcast [256 x [256 x i128]]** %bigmultshortlong2d.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast381, i128 %bigmultshortlong2d.l.read_arg_inner, i128 %bigmultshortlong2d.k.read_arg_inner)
  %ptr_cast382 = bitcast [256 x [256 x i128]]** %bigmultshortlong2d.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast382, i128 %sub, i128 %sub24)
  %ptr_cast383 = bitcast [256 x [256 x i128]]** %pow to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast383, i128 %utils_switch, i128 %utils_switch)
  %ptr_cast384 = bitcast [256 x [256 x i128]]** %prod_val to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast384, i128 %sub27, i128 %sub30)
  %ptr_cast385 = bitcast [256 x [256 x i128]]** %bigmultshortlong2d.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast385, i128 %bigmultshortlong2d.l.read_arg_inner, i128 %bigmultshortlong2d.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out386 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %bigmultshortlong2d.out.declare_output, align 8
  %bigmultshortlong2d.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out386, [256 x [256 x i128]]** %bigmultshortlong2d.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_bigmultshortlong2d = alloca %struct_template_circuit_bigmultshortlong2d, align 8
  %bigmultshortlong2d.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlong2d.n.write_arg_inner, align 4
  %bigmultshortlong2d.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlong2d.k.write_arg_inner, align 4
  %bigmultshortlong2d.l.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlong2d.l.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d
}

define [256 x i128]* @get_BLS12_381_prime(i128 %0, i128 %1) {
entry:
  %uniform_array = alloca [256 x i128], align 8
  %eq = icmp eq i128 %0, 96
  %eq2 = icmp eq i128 %1, 4
  %and = and i1 %eq, %eq2
  %eq4 = icmp eq i128 %0, 77
  %eq6 = icmp eq i128 %1, 5
  %and7 = and i1 %eq4, %eq6
  %or = and i1 %and, %and7
  %eq9 = icmp eq i128 %0, 55
  %eq11 = icmp eq i128 %1, 7
  %and12 = and i1 %eq9, %eq11
  %or13 = and i1 %or, %and12
  call void @fn_intrinsic_utils_assert(i1 %or13)
  %eq15 = icmp eq i128 %0, 96
  %eq17 = icmp eq i128 %1, 4
  %and18 = and i1 %eq15, %eq17
  br i1 %and18, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 13402431019052935850, i128 17775978365956444830, i128 7239337961543745430, i128 4143283732999879072, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %p.0 = phi [256 x i128]* [ %const_inline_array, %if.true ], [ %uniform_array, %if.false ]
  %eq22 = icmp eq i128 %0, 77
  %eq24 = icmp eq i128 %1, 5
  %and25 = and i1 %eq22, %eq24
  br i1 %and25, label %if.true19, label %if.false20

if.true19:                                        ; preds = %if.exit
  %const_inline_array26 = alloca [256 x i128], align 8
  store [256 x i128] [i128 13402431016077871786, i128 12763471136632971302, i128 16232292306918877561, i128 7820104214415738342, i128 1233603221149820497, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array26, align 4
  br label %if.exit27

if.false20:                                       ; preds = %if.exit
  br label %if.exit27

if.exit27:                                        ; preds = %if.false20, %if.true19
  %p.1 = phi [256 x i128]* [ %const_inline_array26, %if.true19 ], [ %p.0, %if.false20 ]
  %eq31 = icmp eq i128 %0, 55
  %eq33 = icmp eq i128 %1, 7
  %and34 = and i1 %eq31, %eq33
  br i1 %and34, label %if.true28, label %if.false29

if.true28:                                        ; preds = %if.exit27
  %const_inline_array35 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231467, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array35, align 4
  br label %if.exit36

if.false29:                                       ; preds = %if.exit27
  br label %if.exit36

if.exit36:                                        ; preds = %if.false29, %if.true28
  %p.2 = phi [256 x i128]* [ %const_inline_array35, %if.true28 ], [ %p.1, %if.false29 ]
  ret [256 x i128]* %p.2
}

define i128 @get_fp_sgn0([256 x i128]* %0) {
entry:
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %0, i128 0, i128 0
  %a1 = load i128, i128* %array_getter, align 4
  %mod = srem i128 %a1, 2
  ret i128 %mod
}

define void @fn_template_init_modsubthree(%struct_template_circuit_modsubthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 0
  %modsubthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 1
  %modsubthree.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 2
  %modsubthree.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 3
  %modsubthree.c.read_input_inner = load i128, i128* %struct_getter3, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %borrow = call i128 @fn_intrinsic_utils_init()
  %b_plus_c = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %modsubthree.n.read_arg_inner, 2
  %sle = icmp sle i128 %add, 253
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %sub = sub i128 %modsubthree.a.read_input_inner, %modsubthree.b.read_input_inner
  %sub4 = sub i128 %sub, %modsubthree.c.read_input_inner
  %lshift = shl i128 1, %modsubthree.n.read_arg_inner
  %add6 = add i128 %sub4, %lshift
  %sge = icmp sge i128 %add6, 0
  call void @fn_intrinsic_utils_assert(i1 %sge)
  %add9 = add i128 %modsubthree.b.read_input_inner, %modsubthree.c.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %b_plus_c, i128 %add9, i1* @constraint.66)
  %modsubthree.b_plus_c.write_inter_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 4
  store i128 %add9, i128* %modsubthree.b_plus_c.write_inter_inner, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 4
  %modsubthree.b_plus_c.read_inter_inner = load i128, i128* %struct_getter12, align 4
  %add14 = add i128 %modsubthree.n.read_arg_inner, 1
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %add14)
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt18 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt18, i128 %modsubthree.a.read_input_inner, i1* @constraint.67)
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter21 = load [256 x i128]*, [256 x i128]** %struct_getter20, align 8
  %lt22 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter21, i128 0, i128 0
  store i128 %modsubthree.a.read_input_inner, i128* %lt22, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter26 = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter26, i128 0, i128 1
  %lt28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt28, i128 %modsubthree.b_plus_c.read_inter_inner, i1* @constraint.68)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %lt32 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter31, i128 0, i128 1
  store i128 %modsubthree.b_plus_c.read_inter_inner, i128* %lt32, align 4
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter34, align 4
  call void @fn_intrinsic_utils_constraint(i128 %borrow, i128 %lessthan.out.read_output_outter, i1* @constraint.69)
  %modsubthree.borrow.write_output_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 6
  store i128 %lessthan.out.read_output_outter, i128* %modsubthree.borrow.write_output_inner, align 4
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 6
  %modsubthree.borrow.read_output_inner = load i128, i128* %struct_getter38, align 4
  %lshift41 = shl i128 1, %modsubthree.n.read_arg_inner
  %mul = mul i128 %modsubthree.borrow.read_output_inner, %lshift41
  %add43 = add i128 %mul, %modsubthree.a.read_input_inner
  %sub45 = sub i128 %add43, %modsubthree.b_plus_c.read_inter_inner
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub45, i1* @constraint.70)
  %modsubthree.out.write_output_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 5
  store i128 %sub45, i128* %modsubthree.out.write_output_inner, align 4
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 5
  %modsubthree.out.read_output_inner = load i128, i128* %struct_getter49, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %modsubthree.b_plus_c.write_inter_inner51 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 4
  store i128 %modsubthree.b_plus_c.read_inter_inner, i128* %modsubthree.b_plus_c.write_inter_inner51, align 4
  %modsubthree.out.write_output_inner53 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 5
  store i128 %modsubthree.out.read_output_inner, i128* %modsubthree.out.write_output_inner53, align 4
  %modsubthree.borrow.write_output_inner55 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 6
  store i128 %modsubthree.borrow.read_output_inner, i128* %modsubthree.borrow.write_output_inner55, align 4
  ret void
}

define %struct_template_circuit_modsubthree* @fn_template_build_modsubthree(i128 %0) {
entry:
  %struct_template_circuit_modsubthree = alloca %struct_template_circuit_modsubthree, align 8
  %modsubthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %struct_template_circuit_modsubthree, i32 0, i32 0
  store i128 %0, i128* %modsubthree.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsubthree* %struct_template_circuit_modsubthree
}

define void @fn_template_init_binsum(%struct_template_circuit_binsum* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 0
  %binsum.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 1
  %binsum.ops.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 2
  %binsum.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter2, align 8
  %binsum.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %binsum.in.read_input_inner, [256 x [256 x i128]]** %binsum.in.declare_input, align 8
  %nout3 = call i128 @fn_intrinsic_utils_init()
  %k4 = call i128 @fn_intrinsic_utils_init()
  %lout5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %lin7 = call i128 @fn_intrinsic_utils_init()
  %binsum.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %binsum.out.declare_output, align 8
  %e28 = call i128 @fn_intrinsic_utils_init()
  %pow = call i128 @fn_intrinsic_utils_powi(i128 2, i128 %binsum.n.read_arg_inner)
  %sub = sub i128 %pow, 1
  %mul = mul i128 %sub, %binsum.ops.read_arg_inner
  %call = call i128 @nbits(i128 %mul)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch26, %entry
  %k.0 = phi i128 [ 0, %entry ], [ %add28, %loop.latch26 ]
  %lin.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch26 ]
  %e2.0 = phi i128 [ 1, %entry ], [ %add25, %loop.latch26 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add20, %loop.latch ]
  %lin.1 = phi i128 [ %lin.0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %binsum.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %j.0, i128 %k.0
  %in16 = load i128, i128* %array_getter, align 4
  %mul18 = mul i128 %in16, %e2.0
  %add = add i128 %lin.1, %mul18
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add20 = add i128 %j.0, 1
  %slt = icmp slt i128 %add20, %binsum.ops.read_arg_inner
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add25 = add i128 %e2.0, %e2.0
  br label %loop.latch26

loop.latch26:                                     ; preds = %loop.exit
  %add28 = add i128 %k.0, 1
  %slt31 = icmp slt i128 %add28, %binsum.n.read_arg_inner
  br i1 %slt31, label %loop.body, label %loop.exit32

loop.exit32:                                      ; preds = %loop.latch26
  br label %loop.body33

loop.body33:                                      ; preds = %loop.latch59, %loop.exit32
  %lout.0 = phi i128 [ 0, %loop.exit32 ], [ %add55, %loop.latch59 ]
  %k.1 = phi i128 [ 0, %loop.exit32 ], [ %add61, %loop.latch59 ]
  %e2.1 = phi i128 [ 1, %loop.exit32 ], [ %add58, %loop.latch59 ]
  %rshift = lshr i128 %add, %k.1
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %binsum.out.declare_output, align 8
  %out37 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %k.1
  store i128 %and, i128* %out37, align 4
  %out38 = load [256 x i128]*, [256 x i128]** %binsum.out.declare_output, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %out38, i128 0, i128 %k.1
  %out41 = load i128, i128* %array_getter40, align 4
  %out42 = load [256 x i128]*, [256 x i128]** %binsum.out.declare_output, align 8
  %array_getter44 = getelementptr inbounds [256 x i128], [256 x i128]* %out42, i128 0, i128 %k.1
  %out45 = load i128, i128* %array_getter44, align 4
  %sub46 = sub i128 %out45, 1
  %mul47 = mul i128 %out41, %sub46
  call void @fn_intrinsic_utils_constraint(i128 %mul47, i128 0, i1* @constraint.71)
  %out49 = load [256 x i128]*, [256 x i128]** %binsum.out.declare_output, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %out49, i128 0, i128 %k.1
  %out52 = load i128, i128* %array_getter51, align 4
  %mul54 = mul i128 %out52, %e2.1
  %add55 = add i128 %lout.0, %mul54
  %add58 = add i128 %e2.1, %e2.1
  br label %loop.latch59

loop.latch59:                                     ; preds = %loop.body33
  %add61 = add i128 %k.1, 1
  %slt64 = icmp slt i128 %add61, %call
  br i1 %slt64, label %loop.body33, label %loop.exit65

loop.exit65:                                      ; preds = %loop.latch59
  call void @fn_intrinsic_utils_constraint(i128 %add, i128 %add55, i1* @constraint.72)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit65
  %ptr_cast = bitcast [256 x [256 x i128]]** %binsum.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %binsum.ops.read_arg_inner, i128 %binsum.n.read_arg_inner)
  %ptr_cast68 = bitcast [256 x i128]** %binsum.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast68, i128 %call)
  br label %exit

exit:                                             ; preds = %arraydim
  %out69 = load [256 x i128]*, [256 x i128]** %binsum.out.declare_output, align 8
  %binsum.out.write_output_inner = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 3
  store [256 x i128]* %out69, [256 x i128]** %binsum.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_binsum* @fn_template_build_binsum(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_binsum = alloca %struct_template_circuit_binsum, align 8
  %binsum.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %struct_template_circuit_binsum, i32 0, i32 0
  store i128 %0, i128* %binsum.n.write_arg_inner, align 4
  %binsum.ops.write_arg_inner = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %struct_template_circuit_binsum, i32 0, i32 1
  store i128 %1, i128* %binsum.ops.write_arg_inner, align 4
  ret %struct_template_circuit_binsum* %struct_template_circuit_binsum
}

define void @fn_template_init_bigmultshortlongunequal(%struct_template_circuit_bigmultshortlongunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 0
  %bigmultshortlongunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 1
  %bigmultshortlongunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 2
  %bigmultshortlongunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 3
  %bigmultshortlongunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %bigmultshortlongunequal.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultshortlongunequal.a.read_input_inner, [256 x i128]** %bigmultshortlongunequal.a.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %bigmultshortlongunequal.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultshortlongunequal.b.read_input_inner, [256 x i128]** %bigmultshortlongunequal.b.declare_input, align 8
  %b_poly = alloca [256 x i128]*, align 8
  %b_poly6 = alloca [256 x i128], align 8
  store [256 x i128]* %b_poly6, [256 x i128]** %b_poly, align 8
  %i7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %bigmultshortlongunequal.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigmultshortlongunequal.out.declare_output, align 8
  %k29 = call i128 @fn_intrinsic_utils_init()
  %prod_val = alloca [256 x i128]*, align 8
  %prod_val10 = alloca [256 x i128], align 8
  store [256 x i128]* %prod_val10, [256 x i128]** %prod_val, align 8
  %pow = alloca [256 x [256 x i128]]*, align 8
  %pow11 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %pow11, [256 x [256 x i128]]** %pow, align 8
  %a_poly = alloca [256 x i128]*, align 8
  %a_poly12 = alloca [256 x i128], align 8
  store [256 x i128]* %a_poly12, [256 x i128]** %a_poly, align 8
  %out_poly = alloca [256 x i128]*, align 8
  %out_poly13 = alloca [256 x i128], align 8
  store [256 x i128]* %out_poly13, [256 x i128]** %out_poly, align 8
  %sle = icmp sle i128 %bigmultshortlongunequal.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub = sub i128 %add, 1
  %add18 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub19 = sub i128 %add18, 1
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %prod_val, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add23, %loop.latch ]
  %ptr_getter = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %prod_val21 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 0, i128* %prod_val21, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add23 = add i128 %i.0, 1
  %add27 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub28 = sub i128 %add27, 1
  %slt = icmp slt i128 %add23, %sub28
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body29

loop.body29:                                      ; preds = %loop.latch55, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add57, %loop.latch55 ]
  br label %loop.body30

loop.body30:                                      ; preds = %loop.latch48, %loop.body29
  %j.0 = phi i128 [ 0, %loop.body29 ], [ %add50, %loop.latch48 ]
  %prod_val31 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %add34 = add i128 %i.1, %j.0
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %prod_val31, i128 0, i128 %add34
  %prod_val35 = load i128, i128* %array_getter, align 4
  %a = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.a.declare_input, align 8
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.1
  %a38 = load i128, i128* %array_getter37, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.b.declare_input, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %j.0
  %b41 = load i128, i128* %array_getter40, align 4
  %mul = mul i128 %a38, %b41
  %add42 = add i128 %prod_val35, %mul
  %ptr_getter43 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %add46 = add i128 %i.1, %j.0
  %prod_val47 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter43, i128 0, i128 %add46
  store i128 %add42, i128* %prod_val47, align 4
  br label %loop.latch48

loop.latch48:                                     ; preds = %loop.body30
  %add50 = add i128 %j.0, 1
  %slt53 = icmp slt i128 %add50, %bigmultshortlongunequal.kb.read_arg_inner
  br i1 %slt53, label %loop.body30, label %loop.exit54

loop.exit54:                                      ; preds = %loop.latch48
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.exit54
  %add57 = add i128 %i.1, 1
  %slt60 = icmp slt i128 %add57, %bigmultshortlongunequal.ka.read_arg_inner
  br i1 %slt60, label %loop.body29, label %loop.exit61

loop.exit61:                                      ; preds = %loop.latch55
  br label %loop.body62

loop.body62:                                      ; preds = %loop.latch70, %loop.exit61
  %i.2 = phi i128 [ 0, %loop.exit61 ], [ %add72, %loop.latch70 ]
  %prod_val63 = load [256 x i128]*, [256 x i128]** %prod_val, align 8
  %array_getter65 = getelementptr inbounds [256 x i128], [256 x i128]* %prod_val63, i128 0, i128 %i.2
  %prod_val66 = load i128, i128* %array_getter65, align 4
  %ptr_getter67 = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.out.declare_output, align 8
  %out69 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter67, i128 0, i128 %i.2
  store i128 %prod_val66, i128* %out69, align 4
  br label %loop.latch70

loop.latch70:                                     ; preds = %loop.body62
  %add72 = add i128 %i.2, 1
  %add76 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub77 = sub i128 %add76, 1
  %slt78 = icmp slt i128 %add72, %sub77
  br i1 %slt78, label %loop.body62, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch70
  %add82 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub83 = sub i128 %add82, 1
  %uniform_array86 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array86, [256 x [256 x i128]]** %pow, align 8
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch103, %loop.exit79
  %i.3 = phi i128 [ 0, %loop.exit79 ], [ %add105, %loop.latch103 ]
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch96, %loop.body87
  %j.1 = phi i128 [ 0, %loop.body87 ], [ %add98, %loop.latch96 ]
  %pow91 = call i128 @fn_intrinsic_utils_powi(i128 %i.3, i128 %j.1)
  %ptr_getter92 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %pow95 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter92, i128 0, i128 %i.3, i128 %j.1
  store i128 %pow91, i128* %pow95, align 4
  br label %loop.latch96

loop.latch96:                                     ; preds = %loop.body88
  %add98 = add i128 %j.1, 1
  %slt101 = icmp slt i128 %add98, %sub83
  br i1 %slt101, label %loop.body88, label %loop.exit102

loop.exit102:                                     ; preds = %loop.latch96
  br label %loop.latch103

loop.latch103:                                    ; preds = %loop.exit102
  %add105 = add i128 %i.3, 1
  %slt108 = icmp slt i128 %add105, %sub83
  br i1 %slt108, label %loop.body87, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch103
  %add112 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub113 = sub i128 %add112, 1
  %uniform_array114 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array114, [256 x i128]** %a_poly, align 8
  %add117 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub118 = sub i128 %add117, 1
  %uniform_array119 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array119, [256 x i128]** %b_poly, align 8
  %add122 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub123 = sub i128 %add122, 1
  %uniform_array124 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array124, [256 x i128]** %out_poly, align 8
  br label %loop.body125

loop.body125:                                     ; preds = %loop.latch216, %loop.exit109
  %i.4 = phi i128 [ 0, %loop.exit109 ], [ %add218, %loop.latch216 ]
  %ptr_getter126 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %out_poly128 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter126, i128 0, i128 %i.4
  store i128 0, i128* %out_poly128, align 4
  %ptr_getter129 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %a_poly131 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter129, i128 0, i128 %i.4
  store i128 0, i128* %a_poly131, align 4
  %ptr_getter132 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %b_poly134 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter132, i128 0, i128 %i.4
  store i128 0, i128* %b_poly134, align 4
  br label %loop.body135

loop.body135:                                     ; preds = %loop.latch154, %loop.body125
  %j.2 = phi i128 [ 0, %loop.body125 ], [ %add156, %loop.latch154 ]
  %out_poly136 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %array_getter138 = getelementptr inbounds [256 x i128], [256 x i128]* %out_poly136, i128 0, i128 %i.4
  %out_poly139 = load i128, i128* %array_getter138, align 4
  %out140 = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.out.declare_output, align 8
  %array_getter142 = getelementptr inbounds [256 x i128], [256 x i128]* %out140, i128 0, i128 %j.2
  %out143 = load i128, i128* %array_getter142, align 4
  %pow144 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow144, i128 0, i128 %i.4, i128 %j.2
  %pow148 = load i128, i128* %array_getter147, align 4
  %mul149 = mul i128 %out143, %pow148
  %add150 = add i128 %out_poly139, %mul149
  %ptr_getter151 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %out_poly153 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter151, i128 0, i128 %i.4
  store i128 %add150, i128* %out_poly153, align 4
  br label %loop.latch154

loop.latch154:                                    ; preds = %loop.body135
  %add156 = add i128 %j.2, 1
  %add160 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub161 = sub i128 %add160, 1
  %slt162 = icmp slt i128 %add156, %sub161
  br i1 %slt162, label %loop.body135, label %loop.exit163

loop.exit163:                                     ; preds = %loop.latch154
  br label %loop.body164

loop.body164:                                     ; preds = %loop.latch183, %loop.exit163
  %j.3 = phi i128 [ 0, %loop.exit163 ], [ %add185, %loop.latch183 ]
  %a_poly165 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %array_getter167 = getelementptr inbounds [256 x i128], [256 x i128]* %a_poly165, i128 0, i128 %i.4
  %a_poly168 = load i128, i128* %array_getter167, align 4
  %a169 = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.a.declare_input, align 8
  %array_getter171 = getelementptr inbounds [256 x i128], [256 x i128]* %a169, i128 0, i128 %j.3
  %a172 = load i128, i128* %array_getter171, align 4
  %pow173 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter176 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow173, i128 0, i128 %i.4, i128 %j.3
  %pow177 = load i128, i128* %array_getter176, align 4
  %mul178 = mul i128 %a172, %pow177
  %add179 = add i128 %a_poly168, %mul178
  %ptr_getter180 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %a_poly182 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter180, i128 0, i128 %i.4
  store i128 %add179, i128* %a_poly182, align 4
  br label %loop.latch183

loop.latch183:                                    ; preds = %loop.body164
  %add185 = add i128 %j.3, 1
  %slt188 = icmp slt i128 %add185, %bigmultshortlongunequal.ka.read_arg_inner
  br i1 %slt188, label %loop.body164, label %loop.exit189

loop.exit189:                                     ; preds = %loop.latch183
  br label %loop.body190

loop.body190:                                     ; preds = %loop.latch209, %loop.exit189
  %j.4 = phi i128 [ 0, %loop.exit189 ], [ %add211, %loop.latch209 ]
  %b_poly191 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %array_getter193 = getelementptr inbounds [256 x i128], [256 x i128]* %b_poly191, i128 0, i128 %i.4
  %b_poly194 = load i128, i128* %array_getter193, align 4
  %b195 = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.b.declare_input, align 8
  %array_getter197 = getelementptr inbounds [256 x i128], [256 x i128]* %b195, i128 0, i128 %j.4
  %b198 = load i128, i128* %array_getter197, align 4
  %pow199 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pow, align 8
  %array_getter202 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pow199, i128 0, i128 %i.4, i128 %j.4
  %pow203 = load i128, i128* %array_getter202, align 4
  %mul204 = mul i128 %b198, %pow203
  %add205 = add i128 %b_poly194, %mul204
  %ptr_getter206 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %b_poly208 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter206, i128 0, i128 %i.4
  store i128 %add205, i128* %b_poly208, align 4
  br label %loop.latch209

loop.latch209:                                    ; preds = %loop.body190
  %add211 = add i128 %j.4, 1
  %slt214 = icmp slt i128 %add211, %bigmultshortlongunequal.kb.read_arg_inner
  br i1 %slt214, label %loop.body190, label %loop.exit215

loop.exit215:                                     ; preds = %loop.latch209
  br label %loop.latch216

loop.latch216:                                    ; preds = %loop.exit215
  %add218 = add i128 %i.4, 1
  %add222 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub223 = sub i128 %add222, 1
  %slt224 = icmp slt i128 %add218, %sub223
  br i1 %slt224, label %loop.body125, label %loop.exit225

loop.exit225:                                     ; preds = %loop.latch216
  br label %loop.body226

loop.body226:                                     ; preds = %loop.latch240, %loop.exit225
  %i.5 = phi i128 [ 0, %loop.exit225 ], [ %add242, %loop.latch240 ]
  %out_poly227 = load [256 x i128]*, [256 x i128]** %out_poly, align 8
  %array_getter229 = getelementptr inbounds [256 x i128], [256 x i128]* %out_poly227, i128 0, i128 %i.5
  %out_poly230 = load i128, i128* %array_getter229, align 4
  %a_poly231 = load [256 x i128]*, [256 x i128]** %a_poly, align 8
  %array_getter233 = getelementptr inbounds [256 x i128], [256 x i128]* %a_poly231, i128 0, i128 %i.5
  %a_poly234 = load i128, i128* %array_getter233, align 4
  %b_poly235 = load [256 x i128]*, [256 x i128]** %b_poly, align 8
  %array_getter237 = getelementptr inbounds [256 x i128], [256 x i128]* %b_poly235, i128 0, i128 %i.5
  %b_poly238 = load i128, i128* %array_getter237, align 4
  %mul239 = mul i128 %a_poly234, %b_poly238
  call void @fn_intrinsic_utils_constraint(i128 %out_poly230, i128 %mul239, i1* @constraint.73)
  br label %loop.latch240

loop.latch240:                                    ; preds = %loop.body226
  %add242 = add i128 %i.5, 1
  %add246 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub247 = sub i128 %add246, 1
  %slt248 = icmp slt i128 %add242, %sub247
  br i1 %slt248, label %loop.body226, label %loop.exit249

loop.exit249:                                     ; preds = %loop.latch240
  br label %arraydim

arraydim:                                         ; preds = %loop.exit249
  %ptr_cast = bitcast [256 x i128]** %bigmultshortlongunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigmultshortlongunequal.kb.read_arg_inner)
  %ptr_cast250 = bitcast [256 x i128]** %out_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast250, i128 %sub123)
  %ptr_cast251 = bitcast [256 x i128]** %bigmultshortlongunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast251, i128 %bigmultshortlongunequal.ka.read_arg_inner)
  %ptr_cast252 = bitcast [256 x i128]** %b_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast252, i128 %sub118)
  %ptr_cast253 = bitcast [256 x i128]** %a_poly to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast253, i128 %sub113)
  %ptr_cast254 = bitcast [256 x i128]** %prod_val to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast254, i128 %sub19)
  %ptr_cast255 = bitcast [256 x [256 x i128]]** %pow to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast255, i128 %sub83, i128 %sub83)
  %ptr_cast256 = bitcast [256 x i128]** %bigmultshortlongunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast256, i128 %sub)
  br label %exit

exit:                                             ; preds = %arraydim
  %out257 = load [256 x i128]*, [256 x i128]** %bigmultshortlongunequal.out.declare_output, align 8
  %bigmultshortlongunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 6
  store [256 x i128]* %out257, [256 x i128]** %bigmultshortlongunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_bigmultshortlongunequal = alloca %struct_template_circuit_bigmultshortlongunequal, align 8
  %bigmultshortlongunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlongunequal.n.write_arg_inner, align 4
  %bigmultshortlongunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlongunequal.ka.write_arg_inner, align 4
  %bigmultshortlongunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlongunequal.kb.write_arg_inner, align 4
  %bigmultshortlongunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 3
  store i128 %3, i128* %bigmultshortlongunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal
}

define i128 @max(i128 %0, i128 %1) {
entry:
  %sgt = icmp sgt i128 %0, %1
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  ret i128 %0

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false
  ret i128 %1
}

define void @fn_template_init_iszero(%struct_template_circuit_iszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 0
  %iszero.in.read_input_inner = load i128, i128* %struct_getter, align 4
  %out = call i128 @fn_intrinsic_utils_init()
  %inv = call i128 @fn_intrinsic_utils_init()
  %ne = icmp ne i128 %iszero.in.read_input_inner, 0
  %sdiv = sdiv i128 1, %iszero.in.read_input_inner
  %utils_switch = call i128 @fn_intrinsic_utils_switch(i1 %ne, i128 %sdiv, i128 0)
  %iszero.inv.write_inter_inner = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 1
  store i128 %utils_switch, i128* %iszero.inv.write_inter_inner, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 1
  %iszero.inv.read_inter_inner = load i128, i128* %struct_getter3, align 4
  %neg = sub i128 0, %iszero.in.read_input_inner
  %mul = mul i128 %neg, %iszero.inv.read_inter_inner
  %add = add i128 %mul, 1
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %add, i1* @constraint.74)
  %iszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 2
  store i128 %add, i128* %iszero.out.write_output_inner, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 2
  %iszero.out.read_output_inner = load i128, i128* %struct_getter9, align 4
  %mul12 = mul i128 %iszero.in.read_input_inner, %iszero.out.read_output_inner
  call void @fn_intrinsic_utils_constraint(i128 %mul12, i128 0, i1* @constraint.75)
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %iszero.inv.write_inter_inner14 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 1
  store i128 %iszero.inv.read_inter_inner, i128* %iszero.inv.write_inter_inner14, align 4
  %iszero.out.write_output_inner16 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 2
  store i128 %iszero.out.read_output_inner, i128* %iszero.out.write_output_inner16, align 4
  ret void
}

define %struct_template_circuit_iszero* @fn_template_build_iszero() {
entry:
  %struct_template_circuit_iszero = alloca %struct_template_circuit_iszero, align 8
  ret %struct_template_circuit_iszero* %struct_template_circuit_iszero
}

define void @fn_template_init_signedfp2multiplynocarryunequal(%struct_template_circuit_signedfp2multiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 0
  %signedfp2multiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 1
  %signedfp2multiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 2
  %signedfp2multiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 3
  %signedfp2multiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %signedfp2multiplynocarryunequal.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.a.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %signedfp2multiplynocarryunequal.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.b.declare_input, align 8
  %ab = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, align 8
  %ab6 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %i7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %l9 = call i128 @fn_intrinsic_utils_init()
  %signedfp2multiplynocarryunequal.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output, align 8
  %add = add i128 %signedfp2multiplynocarryunequal.ka.read_arg_inner, %signedfp2multiplynocarryunequal.kb.read_arg_inner
  %sub = sub i128 %add, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch80, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add82, %loop.latch80 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch74, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add76, %loop.latch74 ]
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp2multiplynocarryunequal.n.read_arg_inner, i128 %signedfp2multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp2multiplynocarryunequal.kb.read_arg_inner, i128 %signedfp2multiplynocarryunequal.m_out.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %ab17 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call, %struct_template_circuit_bigmultshortlongunequal** %ab17, align 8
  br label %loop.body18

loop.body18:                                      ; preds = %loop.latch, %loop.body12
  %l.0 = phi i128 [ 0, %loop.body12 ], [ %add41, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i.0, i128 %l.0
  %a21 = load i128, i128* %array_getter, align 4
  %ab22 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter25 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab22, i128 0, i128 %i.0, i128 %j.0
  %ab26 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter25, align 8
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab26, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %l.0
  %ab30 = load i128, i128* %array_getter29, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab30, i128 %a21, i1* @constraint.76)
  %ptr_getter31 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter31, i128 0, i128 %i.0, i128 %j.0
  %ab35 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter34, align 8
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab35, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter37 = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %ab39 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter37, i128 0, i128 %l.0
  store i128 %a21, i128* %ab39, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body18
  %add41 = add i128 %l.0, 1
  %slt = icmp slt i128 %add41, %signedfp2multiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body18, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body44

loop.body44:                                      ; preds = %loop.latch67, %loop.exit
  %l.1 = phi i128 [ 0, %loop.exit ], [ %add69, %loop.latch67 ]
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.b.declare_input, align 8
  %array_getter47 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %j.0, i128 %l.1
  %b48 = load i128, i128* %array_getter47, align 4
  %ab49 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab49, i128 0, i128 %i.0, i128 %j.0
  %ab53 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter52, align 8
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab53, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %l.1
  %ab57 = load i128, i128* %array_getter56, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab57, i128 %b48, i1* @constraint.77)
  %ptr_getter58 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter58, i128 0, i128 %i.0, i128 %j.0
  %ab62 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter61, align 8
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab62, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %ab66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter64, i128 0, i128 %l.1
  store i128 %b48, i128* %ab66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body44
  %add69 = add i128 %l.1, 1
  %slt72 = icmp slt i128 %add69, %signedfp2multiplynocarryunequal.kb.read_arg_inner
  br i1 %slt72, label %loop.body44, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.exit73
  %add76 = add i128 %j.0, 1
  %slt78 = icmp slt i128 %add76, 2
  br i1 %slt78, label %loop.body12, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch74
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.exit79
  %add82 = add i128 %i.0, 1
  %slt84 = icmp slt i128 %add82, 2
  br i1 %slt84, label %loop.body, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch80
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch134, %loop.exit85
  %j.1 = phi i128 [ 0, %loop.exit85 ], [ %add136, %loop.latch134 ]
  %ab87 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter88 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab87, i128 0, i128 0, i128 0
  %ab89 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter88, align 8
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab89, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter90, align 8
  %array_getter92 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %j.1
  %ab93 = load i128, i128* %array_getter92, align 4
  %ab94 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab94, i128 0, i128 1, i128 1
  %ab96 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter95, align 8
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab96, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter98 = load [256 x i128]*, [256 x i128]** %struct_getter97, align 8
  %array_getter100 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter98, i128 0, i128 %j.1
  %ab101 = load i128, i128* %array_getter100, align 4
  %sub102 = sub i128 %ab93, %ab101
  %out103 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output, align 8
  %array_getter105 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out103, i128 0, i128 0, i128 %j.1
  %out106 = load i128, i128* %array_getter105, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out106, i128 %sub102, i1* @constraint.78)
  %ptr_getter107 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output, align 8
  %out109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter107, i128 0, i128 0, i128 %j.1
  store i128 %sub102, i128* %out109, align 4
  %ab110 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter111 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab110, i128 0, i128 0, i128 1
  %ab112 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter111, align 8
  %struct_getter113 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab112, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter114 = load [256 x i128]*, [256 x i128]** %struct_getter113, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter114, i128 0, i128 %j.1
  %ab117 = load i128, i128* %array_getter116, align 4
  %ab118 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter119 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab118, i128 0, i128 1, i128 0
  %ab120 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter119, align 8
  %struct_getter121 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab120, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter122 = load [256 x i128]*, [256 x i128]** %struct_getter121, align 8
  %array_getter124 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter122, i128 0, i128 %j.1
  %ab125 = load i128, i128* %array_getter124, align 4
  %add126 = add i128 %ab117, %ab125
  %out127 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output, align 8
  %array_getter129 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out127, i128 0, i128 1, i128 %j.1
  %out130 = load i128, i128* %array_getter129, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out130, i128 %add126, i1* @constraint.79)
  %ptr_getter131 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output, align 8
  %out133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter131, i128 0, i128 1, i128 %j.1
  store i128 %add126, i128* %out133, align 4
  br label %loop.latch134

loop.latch134:                                    ; preds = %loop.body86
  %add136 = add i128 %j.1, 1
  %add140 = add i128 %signedfp2multiplynocarryunequal.ka.read_arg_inner, %signedfp2multiplynocarryunequal.kb.read_arg_inner
  %sub141 = sub i128 %add140, 1
  %slt142 = icmp slt i128 %add136, %sub141
  br i1 %slt142, label %loop.body86, label %loop.exit143

loop.exit143:                                     ; preds = %loop.latch134
  br label %arraydim

arraydim:                                         ; preds = %loop.exit143
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 2)
  %ptr_cast144 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast144, i128 2, i128 %sub)
  %ptr_cast145 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast145, i128 2, i128 %signedfp2multiplynocarryunequal.kb.read_arg_inner)
  %ptr_cast146 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast146, i128 2, i128 %signedfp2multiplynocarryunequal.ka.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out147 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.declare_output, align 8
  %signedfp2multiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out147, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp2multiplynocarryunequal = alloca %struct_template_circuit_signedfp2multiplynocarryunequal, align 8
  %signedfp2multiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp2multiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp2multiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp2multiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp2multiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp2multiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal
}

define i128 @get_fp2_sgn0(i128 %0, [256 x [256 x i128]]* %1) {
entry:
  %sgn11 = call i128 @fn_intrinsic_utils_init()
  %z2 = call i128 @fn_intrinsic_utils_init()
  %sgn03 = call i128 @fn_intrinsic_utils_init()
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0, i128 0
  %a4 = load i128, i128* %array_getter, align 4
  %mod = srem i128 %a4, 2
  %array_getter6 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 1, i128 0
  %a7 = load i128, i128* %array_getter6, align 4
  %mod8 = srem i128 %a7, 2
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0
  %a11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a11, [256 x i128]* %spice_inline_array, align 4
  %call = call i128 @long_is_zero(i128 %0, [256 x i128]* %spice_inline_array)
  %and = and i128 %call, %mod8
  %or = or i128 %mod, %and
  ret i128 %or
}

define void @fn_template_init_lesseqthan(%struct_template_circuit_lesseqthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 0
  %lesseqthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 1
  %lesseqthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %lesseqthan.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %lesseqthan.in.read_input_inner, [256 x i128]** %lesseqthan.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %lesseqthan.n.read_arg_inner)
  %in = load [256 x i128]*, [256 x i128]** %lesseqthan.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 0
  %in2 = load i128, i128* %array_getter, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter5, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt6, i128 %in2, i1* @constraint.80)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %in2, i128* %lt9, align 4
  %in10 = load [256 x i128]*, [256 x i128]** %lesseqthan.in.declare_input, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %in10, i128 0, i128 1
  %in12 = load i128, i128* %array_getter11, align 4
  %add = add i128 %in12, 1
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter15, i128 0, i128 1
  %lt17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt17, i128 %add, i1* @constraint.81)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %lt21 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter20, i128 0, i128 1
  store i128 %add, i128* %lt21, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %lessthan.out.read_output_outter, i1* @constraint.82)
  %lesseqthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_outter, i128* %lesseqthan.out.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 2
  %lesseqthan.out.read_output_inner = load i128, i128* %struct_getter27, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  %ptr_cast = bitcast [256 x i128]** %lesseqthan.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %lesseqthan.out.write_output_inner29 = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 2
  store i128 %lesseqthan.out.read_output_inner, i128* %lesseqthan.out.write_output_inner29, align 4
  ret void
}

define %struct_template_circuit_lesseqthan* @fn_template_build_lesseqthan(i128 %0) {
entry:
  %struct_template_circuit_lesseqthan = alloca %struct_template_circuit_lesseqthan, align 8
  %lesseqthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %struct_template_circuit_lesseqthan, i32 0, i32 0
  store i128 %0, i128* %lesseqthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_lesseqthan* %struct_template_circuit_lesseqthan
}

define void @fn_template_init_checkcarrytozero(%struct_template_circuit_checkcarrytozero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 0
  %checkcarrytozero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 1
  %checkcarrytozero.m.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 2
  %checkcarrytozero.k.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 3
  %checkcarrytozero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %checkcarrytozero.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %checkcarrytozero.in.read_input_inner, [256 x i128]** %checkcarrytozero.in.declare_input, align 8
  %carryRangeChecks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %carryRangeChecks4 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %carryRangeChecks4, [256 x %struct_template_circuit_num2bits*]** %carryRangeChecks, align 8
  %EPSILON5 = call i128 @fn_intrinsic_utils_init()
  %checkcarrytozero.carry.declare_inter = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %carry = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %carry, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %sge = icmp sge i128 %checkcarrytozero.k.read_arg_inner, 2
  call void @fn_intrinsic_utils_assert(i1 %sge)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add85, %loop.latch ]
  %add = add i128 %checkcarrytozero.m.read_arg_inner, 1
  %sub = sub i128 %add, %checkcarrytozero.n.read_arg_inner
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %sub)
  %ptr_getter = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %carryRangeChecks, align 8
  %carryRangeChecks12 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_num2bits* %call, %struct_template_circuit_num2bits** %carryRangeChecks12, align 8
  %eq = icmp eq i128 %i.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %in = load [256 x i128]*, [256 x i128]** %checkcarrytozero.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in15 = load i128, i128* %array_getter, align 4
  %lshift = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %sdiv = sdiv i128 %in15, %lshift
  %ptr_getter17 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %carry19 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter17, i128 0, i128 %i.0
  store i128 %sdiv, i128* %carry19, align 4
  %in20 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.in.declare_input, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %in20, i128 0, i128 %i.0
  %in23 = load i128, i128* %array_getter22, align 4
  %carry24 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %array_getter26 = getelementptr inbounds [256 x i128], [256 x i128]* %carry24, i128 0, i128 %i.0
  %carry27 = load i128, i128* %array_getter26, align 4
  %lshift29 = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %mul = mul i128 %carry27, %lshift29
  call void @fn_intrinsic_utils_constraint(i128 %in23, i128 %mul, i1* @constraint.83)
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %in30 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.in.declare_input, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %in30, i128 0, i128 %i.0
  %in33 = load i128, i128* %array_getter32, align 4
  %carry34 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %sub36 = sub i128 %i.0, 1
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %carry34, i128 0, i128 %sub36
  %carry38 = load i128, i128* %array_getter37, align 4
  %add39 = add i128 %in33, %carry38
  %lshift41 = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %sdiv42 = sdiv i128 %add39, %lshift41
  %ptr_getter43 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %carry45 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter43, i128 0, i128 %i.0
  store i128 %sdiv42, i128* %carry45, align 4
  %in46 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.in.declare_input, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %in46, i128 0, i128 %i.0
  %in49 = load i128, i128* %array_getter48, align 4
  %carry50 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %sub52 = sub i128 %i.0, 1
  %array_getter53 = getelementptr inbounds [256 x i128], [256 x i128]* %carry50, i128 0, i128 %sub52
  %carry54 = load i128, i128* %array_getter53, align 4
  %add55 = add i128 %in49, %carry54
  %carry56 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %carry56, i128 0, i128 %i.0
  %carry59 = load i128, i128* %array_getter58, align 4
  %lshift61 = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %mul62 = mul i128 %carry59, %lshift61
  call void @fn_intrinsic_utils_constraint(i128 %add55, i128 %mul62, i1* @constraint.84)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %carry63 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %array_getter65 = getelementptr inbounds [256 x i128], [256 x i128]* %carry63, i128 0, i128 %i.0
  %carry66 = load i128, i128* %array_getter65, align 4
  %add69 = add i128 %checkcarrytozero.m.read_arg_inner, 1
  %sub71 = sub i128 %add69, %checkcarrytozero.n.read_arg_inner
  %sub72 = sub i128 %sub71, 1
  %lshift73 = shl i128 1, %sub72
  %add74 = add i128 %carry66, %lshift73
  %carryRangeChecks75 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %carryRangeChecks, align 8
  %array_getter77 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %carryRangeChecks75, i128 0, i128 %i.0
  %carryRangeChecks78 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter77, align 8
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %carryRangeChecks78, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter79, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %add74, i1* @constraint.85)
  %ptr_getter80 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %carryRangeChecks, align 8
  %array_getter82 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter80, i128 0, i128 %i.0
  %carryRangeChecks83 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter82, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %carryRangeChecks83, i32 0, i32 1
  store i128 %add74, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add85 = add i128 %i.0, 1
  %sub88 = sub i128 %checkcarrytozero.k.read_arg_inner, 1
  %slt = icmp slt i128 %add85, %sub88
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %in89 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.in.declare_input, align 8
  %sub91 = sub i128 %checkcarrytozero.k.read_arg_inner, 1
  %array_getter92 = getelementptr inbounds [256 x i128], [256 x i128]* %in89, i128 0, i128 %sub91
  %in93 = load i128, i128* %array_getter92, align 4
  %carry94 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %sub96 = sub i128 %checkcarrytozero.k.read_arg_inner, 2
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %carry94, i128 0, i128 %sub96
  %carry98 = load i128, i128* %array_getter97, align 4
  %add99 = add i128 %in93, %carry98
  call void @fn_intrinsic_utils_constraint(i128 %add99, i128 0, i1* @constraint.86)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %checkcarrytozero.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %checkcarrytozero.k.read_arg_inner)
  %ptr_cast100 = bitcast [256 x i128]** %checkcarrytozero.carry.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast100, i128 %checkcarrytozero.k.read_arg_inner)
  %ptr_cast101 = bitcast [256 x %struct_template_circuit_num2bits*]** %carryRangeChecks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast101, i128 %checkcarrytozero.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %carry102 = load [256 x i128]*, [256 x i128]** %checkcarrytozero.carry.declare_inter, align 8
  %checkcarrytozero.carry.write_inter_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 4
  store [256 x i128]* %carry102, [256 x i128]** %checkcarrytozero.carry.write_inter_inner, align 8
  ret void
}

define %struct_template_circuit_checkcarrytozero* @fn_template_build_checkcarrytozero(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_checkcarrytozero = alloca %struct_template_circuit_checkcarrytozero, align 8
  %checkcarrytozero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero, i32 0, i32 0
  store i128 %0, i128* %checkcarrytozero.n.write_arg_inner, align 4
  %checkcarrytozero.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero, i32 0, i32 1
  store i128 %1, i128* %checkcarrytozero.m.write_arg_inner, align 4
  %checkcarrytozero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero, i32 0, i32 2
  store i128 %2, i128* %checkcarrytozero.k.write_arg_inner, align 4
  ret %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero
}

define void @fn_template_init_modsumthree(%struct_template_circuit_modsumthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 0
  %modsumthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 1
  %modsumthree.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 2
  %modsumthree.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 3
  %modsumthree.c.read_input_inner = load i128, i128* %struct_getter3, align 4
  %carry = call i128 @fn_intrinsic_utils_init()
  %sum = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %modsumthree.n.read_arg_inner, 2
  %sle = icmp sle i128 %add, 253
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add5 = add i128 %modsumthree.n.read_arg_inner, 2
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add5)
  %add6 = add i128 %modsumthree.a.read_input_inner, %modsumthree.b.read_input_inner
  %add7 = add i128 %add6, %modsumthree.c.read_input_inner
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter9, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %add7, i1* @constraint.87)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %add7, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter11, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %modsumthree.n.read_arg_inner
  %n2b13 = load i128, i128* %array_getter, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter16 = load [256 x i128]*, [256 x i128]** %struct_getter15, align 8
  %add18 = add i128 %modsumthree.n.read_arg_inner, 1
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter16, i128 0, i128 %add18
  %n2b20 = load i128, i128* %array_getter19, align 4
  %mul = mul i128 2, %n2b20
  %add21 = add i128 %n2b13, %mul
  call void @fn_intrinsic_utils_constraint(i128 %carry, i128 %add21, i1* @constraint.88)
  %modsumthree.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 5
  store i128 %add21, i128* %modsumthree.carry.write_output_inner, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 5
  %modsumthree.carry.read_output_inner = load i128, i128* %struct_getter25, align 4
  %add28 = add i128 %modsumthree.a.read_input_inner, %modsumthree.b.read_input_inner
  %add30 = add i128 %add28, %modsumthree.c.read_input_inner
  %lshift = shl i128 1, %modsumthree.n.read_arg_inner
  %mul33 = mul i128 %modsumthree.carry.read_output_inner, %lshift
  %sub = sub i128 %add30, %mul33
  call void @fn_intrinsic_utils_constraint(i128 %sum, i128 %sub, i1* @constraint.89)
  %modsumthree.sum.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 4
  store i128 %sub, i128* %modsumthree.sum.write_output_inner, align 4
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 4
  %modsumthree.sum.read_output_inner = load i128, i128* %struct_getter37, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %modsumthree.sum.write_output_inner39 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 4
  store i128 %modsumthree.sum.read_output_inner, i128* %modsumthree.sum.write_output_inner39, align 4
  %modsumthree.carry.write_output_inner41 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 5
  store i128 %modsumthree.carry.read_output_inner, i128* %modsumthree.carry.write_output_inner41, align 4
  ret void
}

define %struct_template_circuit_modsumthree* @fn_template_build_modsumthree(i128 %0) {
entry:
  %struct_template_circuit_modsumthree = alloca %struct_template_circuit_modsumthree, align 8
  %modsumthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %struct_template_circuit_modsumthree, i32 0, i32 0
  store i128 %0, i128* %modsumthree.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsumthree* %struct_template_circuit_modsumthree
}

define [256 x [256 x [256 x i128]]]* @get_etas(i128 %0, i128 %1) {
entry:
  %eq = icmp eq i128 %0, 55
  %eq3 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq3
  call void @fn_intrinsic_utils_assert(i1 %and)
  %call = call [256 x i128]* @get_BLS12_381_prime(i128 %0, i128 %1)
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %eq7 = icmp eq i128 %0, 55
  %eq9 = icmp eq i128 %1, 7
  %and10 = and i1 %eq7, %eq9
  br i1 %and10, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 15111404105178256, i128 12179658998385743, i128 23072200951145993, i128 9032482684664404, i128 23305776986956055, i128 5290624451499435, i128 464473045539356, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %etas11 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0
  %2 = bitcast [256 x i128]* %etas11 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] [i128 12283190417025461, i128 20834464198811383, i128 18619727854230373, i128 19507968258096915, i128 5803508121078619, i128 11236708505185735, i128 568856440213905, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array12, align 4
  %etas14 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1
  %4 = bitcast [256 x i128]* %etas14 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array15 = alloca [256 x i128], align 8
  store [256 x i128] [i128 25832285470060055, i128 4957529455978525, i128 11309477484109628, i128 34786223745332771, i128 32011200050324214, i128 11140434959259260, i128 752550210394889, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array15, align 4
  %etas17 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 0
  %6 = bitcast [256 x i128]* %etas17 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array18 = alloca [256 x i128], align 8
  store [256 x i128] [i128 17831328741298113, i128 28196239014888719, i128 105869995940733, i128 9669258860454335, i128 12680438922771573, i128 19435555960961745, i128 748772277207452, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array18, align 4
  %etas20 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 1
  %8 = bitcast [256 x i128]* %etas20 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1
  %etas25 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %etas25, [256 x i128]* %spice_inline_array, align 4
  %call26 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %spice_inline_array)
  %etas28 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 0
  %10 = bitcast [256 x i128]* %etas28 to i8*
  %11 = bitcast [256 x i128]* %call26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter30 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0
  %etas31 = load [256 x i128], [256 x i128]* %array_getter30, align 4
  %spice_inline_array32 = alloca [256 x i128], align 8
  store [256 x i128] %etas31, [256 x i128]* %spice_inline_array32, align 4
  %etas34 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1
  %12 = bitcast [256 x i128]* %etas34 to i8*
  %13 = bitcast [256 x i128]* %spice_inline_array32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 1
  %etas40 = load [256 x i128], [256 x i128]* %array_getter39, align 4
  %spice_inline_array41 = alloca [256 x i128], align 8
  store [256 x i128] %etas40, [256 x i128]* %spice_inline_array41, align 4
  %call42 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %spice_inline_array41)
  %etas44 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 0
  %14 = bitcast [256 x i128]* %etas44 to i8*
  %15 = bitcast [256 x i128]* %call42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter46 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 0
  %etas47 = load [256 x i128], [256 x i128]* %array_getter46, align 4
  %spice_inline_array48 = alloca [256 x i128], align 8
  store [256 x i128] %etas47, [256 x i128]* %spice_inline_array48, align 4
  %etas50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 1
  %16 = bitcast [256 x i128]* %etas50 to i8*
  %17 = bitcast [256 x i128]* %spice_inline_array48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %a_idx1 = call i128 @fn_intrinsic_utils_init()
  %i2 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch60, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add62, %loop.latch60 ]
  %prod_val9 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %prod_val9, align 4
  %slt = icmp slt i128 %i.0, %1
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %loop.body11

if.false:                                         ; preds = %loop.body
  %sub31 = sub i128 %i.0, %1
  %add32 = add i128 %sub31, 1
  br label %loop.body33

loop.body11:                                      ; preds = %loop.latch, %if.true
  %a_idx.0 = phi i128 [ 0, %if.true ], [ %add26, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val14 = load i128, i128* %array_getter, align 4
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %a_idx.0
  %a17 = load i128, i128* %array_getter16, align 4
  %sub = sub i128 %i.0, %a_idx.0
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub
  %b21 = load i128, i128* %array_getter20, align 4
  %mul = mul i128 %a17, %b21
  %add = add i128 %prod_val14, %mul
  %prod_val24 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add, i128* %prod_val24, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add26 = add i128 %a_idx.0, 1
  %sle = icmp sle i128 %add26, %i.0
  br i1 %sle, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %if.exit

loop.body33:                                      ; preds = %loop.latch53, %if.false
  %a_idx.1 = phi i128 [ %add32, %if.false ], [ %add55, %loop.latch53 ]
  %array_getter36 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val37 = load i128, i128* %array_getter36, align 4
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %a_idx.1
  %a41 = load i128, i128* %array_getter40, align 4
  %sub45 = sub i128 %i.0, %a_idx.1
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub45
  %b47 = load i128, i128* %array_getter46, align 4
  %mul48 = mul i128 %a41, %b47
  %add49 = add i128 %prod_val37, %mul48
  %prod_val52 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add49, i128* %prod_val52, align 4
  br label %loop.latch53

loop.latch53:                                     ; preds = %loop.body33
  %add55 = add i128 %a_idx.1, 1
  %slt58 = icmp slt i128 %add55, %1
  br i1 %slt58, label %loop.body33, label %loop.exit59

loop.exit59:                                      ; preds = %loop.latch53
  br label %if.exit

if.exit:                                          ; preds = %loop.exit59, %loop.exit
  br label %loop.latch60

loop.latch60:                                     ; preds = %if.exit
  %add62 = add i128 %i.0, 1
  %mul65 = mul i128 2, %1
  %sub66 = sub i128 %mul65, 1
  %slt67 = icmp slt i128 %add62, %sub66
  br i1 %slt67, label %loop.body, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch60
  %uniform_array69 = alloca [256 x i128], align 8
  %uniform_array70 = alloca [256 x [256 x i128]], align 8
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch81, %loop.exit68
  %i.1 = phi i128 [ 0, %loop.exit68 ], [ %add83, %loop.latch81 ]
  %array_getter74 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %prod_val75 = load i128, i128* %array_getter74, align 4
  %call = call [256 x i128]* @SplitThreeFn(i128 %prod_val75, i128 %0, i128 %0, i128 %0)
  %split80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %i.1
  %4 = bitcast [256 x i128]* %split80 to i8*
  %5 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.body71
  %add83 = add i128 %i.1, 1
  %mul86 = mul i128 2, %1
  %sub87 = sub i128 %mul86, 1
  %slt88 = icmp slt i128 %add83, %sub87
  br i1 %slt88, label %loop.body71, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch81
  %uniform_array90 = alloca [256 x i128], align 8
  %carry92 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 0
  store i128 0, i128* %carry92, align 4
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 0, i128 0
  %split95 = load i128, i128* %array_getter94, align 4
  %out97 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 0
  store i128 %split95, i128* %out97, align 4
  %mul101 = mul i128 2, %1
  %sub102 = sub i128 %mul101, 1
  %sgt = icmp sgt i128 %sub102, 1
  br i1 %sgt, label %if.true98, label %if.false99

if.true98:                                        ; preds = %loop.exit89
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 0, i128 1
  %split105 = load i128, i128* %array_getter104, align 4
  %array_getter107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 1, i128 0
  %split108 = load i128, i128* %array_getter107, align 4
  %add109 = add i128 %split105, %split108
  %call112 = call [256 x i128]* @SplitFn(i128 %add109, i128 %0, i128 %0)
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %call112, i128 0, i128 0
  %sumAndCarry115 = load i128, i128* %array_getter114, align 4
  %out117 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 1
  store i128 %sumAndCarry115, i128* %out117, align 4
  %array_getter119 = getelementptr inbounds [256 x i128], [256 x i128]* %call112, i128 0, i128 1
  %sumAndCarry120 = load i128, i128* %array_getter119, align 4
  %carry122 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 1
  store i128 %sumAndCarry120, i128* %carry122, align 4
  br label %if.exit123

if.false99:                                       ; preds = %loop.exit89
  br label %if.exit123

if.exit123:                                       ; preds = %if.false99, %if.true98
  %mul127 = mul i128 2, %1
  %sub128 = sub i128 %mul127, 1
  %sgt129 = icmp sgt i128 %sub128, 2
  br i1 %sgt129, label %if.true124, label %if.false125

if.true124:                                       ; preds = %if.exit123
  br label %loop.body130

if.false125:                                      ; preds = %if.exit123
  br label %if.exit202

loop.body130:                                     ; preds = %loop.latch168, %if.true124
  %i.2 = phi i128 [ 2, %if.true124 ], [ %add170, %loop.latch168 ]
  %array_getter133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %i.2, i128 0
  %split134 = load i128, i128* %array_getter133, align 4
  %sub137 = sub i128 %i.2, 1
  %array_getter138 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub137, i128 1
  %split139 = load i128, i128* %array_getter138, align 4
  %add140 = add i128 %split134, %split139
  %sub143 = sub i128 %i.2, 2
  %array_getter144 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub143, i128 2
  %split145 = load i128, i128* %array_getter144, align 4
  %add146 = add i128 %add140, %split145
  %sub149 = sub i128 %i.2, 1
  %array_getter150 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 %sub149
  %carry151 = load i128, i128* %array_getter150, align 4
  %add152 = add i128 %add146, %carry151
  %call155 = call [256 x i128]* @SplitFn(i128 %add152, i128 %0, i128 %0)
  %array_getter157 = getelementptr inbounds [256 x i128], [256 x i128]* %call155, i128 0, i128 0
  %sumAndCarry158 = load i128, i128* %array_getter157, align 4
  %out161 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 %i.2
  store i128 %sumAndCarry158, i128* %out161, align 4
  %array_getter163 = getelementptr inbounds [256 x i128], [256 x i128]* %call155, i128 0, i128 1
  %sumAndCarry164 = load i128, i128* %array_getter163, align 4
  %carry167 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 %i.2
  store i128 %sumAndCarry164, i128* %carry167, align 4
  br label %loop.latch168

loop.latch168:                                    ; preds = %loop.body130
  %add170 = add i128 %i.2, 1
  %mul173 = mul i128 2, %1
  %sub174 = sub i128 %mul173, 1
  %slt175 = icmp slt i128 %add170, %sub174
  br i1 %slt175, label %loop.body130, label %loop.exit176

loop.exit176:                                     ; preds = %loop.latch168
  %mul179 = mul i128 2, %1
  %sub180 = sub i128 %mul179, 2
  %array_getter181 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub180, i128 1
  %split182 = load i128, i128* %array_getter181, align 4
  %mul185 = mul i128 2, %1
  %sub186 = sub i128 %mul185, 3
  %array_getter187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub186, i128 2
  %split188 = load i128, i128* %array_getter187, align 4
  %add189 = add i128 %split182, %split188
  %mul192 = mul i128 2, %1
  %sub193 = sub i128 %mul192, 2
  %array_getter194 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 %sub193
  %carry195 = load i128, i128* %array_getter194, align 4
  %add196 = add i128 %add189, %carry195
  %mul199 = mul i128 2, %1
  %sub200 = sub i128 %mul199, 1
  %out201 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 %sub200
  store i128 %add196, i128* %out201, align 4
  br label %if.exit202

if.exit202:                                       ; preds = %loop.exit176, %if.false125
  ret [256 x i128]* %uniform_array69
}

define void @fn_template_init_bigiszero(%struct_template_circuit_bigiszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 0
  %bigiszero.k.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 1
  %bigiszero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %bigiszero.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigiszero.in.read_input_inner, [256 x i128]** %bigiszero.in.declare_input, align 8
  %isZeros = alloca [256 x %struct_template_circuit_iszero*]*, align 8
  %isZeros2 = alloca [256 x %struct_template_circuit_iszero*], align 8
  store [256 x %struct_template_circuit_iszero*]* %isZeros2, [256 x %struct_template_circuit_iszero*]** %isZeros, align 8
  %total3 = call i128 @fn_intrinsic_utils_init()
  %i4 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %total.0 = phi i128 [ %bigiszero.k.read_arg_inner, %entry ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %ptr_getter = load [256 x %struct_template_circuit_iszero*]*, [256 x %struct_template_circuit_iszero*]** %isZeros, align 8
  %isZeros8 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_iszero* %call, %struct_template_circuit_iszero** %isZeros8, align 8
  %in = load [256 x i128]*, [256 x i128]** %bigiszero.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in10 = load i128, i128* %array_getter, align 4
  %isZeros11 = load [256 x %struct_template_circuit_iszero*]*, [256 x %struct_template_circuit_iszero*]** %isZeros, align 8
  %array_getter13 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %isZeros11, i128 0, i128 %i.0
  %isZeros14 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter13, align 8
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros14, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter15, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %in10, i1* @constraint.90)
  %ptr_getter16 = load [256 x %struct_template_circuit_iszero*]*, [256 x %struct_template_circuit_iszero*]** %isZeros, align 8
  %array_getter18 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %ptr_getter16, i128 0, i128 %i.0
  %isZeros19 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter18, align 8
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros19, i32 0, i32 0
  store i128 %in10, i128* %iszero.in.write_input_outter, align 4
  %isZeros21 = load [256 x %struct_template_circuit_iszero*]*, [256 x %struct_template_circuit_iszero*]** %isZeros, align 8
  %array_getter23 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %isZeros21, i128 0, i128 %i.0
  %isZeros24 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter23, align 8
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros24, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter25, align 4
  %sub = sub i128 %total.0, %iszero.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigiszero.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call29 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call29, i32 0, i32 0
  %iszero.in.read_input_outter33 = load i128, i128* %struct_getter32, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter33, i128 %sub, i1* @constraint.91)
  %iszero.in.write_input_outter35 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call29, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter35, align 4
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call29, i32 0, i32 2
  %iszero.out.read_output_outter38 = load i128, i128* %struct_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %iszero.out.read_output_outter38, i1* @constraint.92)
  %bigiszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 2
  store i128 %iszero.out.read_output_outter38, i128* %bigiszero.out.write_output_inner, align 4
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 2
  %bigiszero.out.read_output_inner = load i128, i128* %struct_getter42, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x %struct_template_circuit_iszero*]** %isZeros to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigiszero.k.read_arg_inner)
  %ptr_cast43 = bitcast [256 x i128]** %bigiszero.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast43, i128 %bigiszero.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %bigiszero.out.write_output_inner45 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 2
  store i128 %bigiszero.out.read_output_inner, i128* %bigiszero.out.write_output_inner45, align 4
  ret void
}

define %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %0) {
entry:
  %struct_template_circuit_bigiszero = alloca %struct_template_circuit_bigiszero, align 8
  %bigiszero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %struct_template_circuit_bigiszero, i32 0, i32 0
  store i128 %0, i128* %bigiszero.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigiszero* %struct_template_circuit_bigiszero
}

define void @fn_template_init_compconstant(%struct_template_circuit_compconstant* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 0
  %compconstant.ct.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 1
  %compconstant.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %compconstant.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %compconstant.in.read_input_inner, [256 x i128]** %compconstant.in.declare_input, align 8
  %b2 = call i128 @fn_intrinsic_utils_init()
  %a3 = call i128 @fn_intrinsic_utils_init()
  %e4 = call i128 @fn_intrinsic_utils_init()
  %smsb5 = call i128 @fn_intrinsic_utils_init()
  %sout = call i128 @fn_intrinsic_utils_init()
  %sum6 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  %compconstant.parts.declare_inter = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %parts = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %parts, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %slsb8 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %clsb9 = call i128 @fn_intrinsic_utils_init()
  %cmsb10 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add138, %loop.latch ]
  %sum.0 = phi i128 [ 0, %entry ], [ %add128, %loop.latch ]
  %e.0 = phi i128 [ 1, %entry ], [ %mul136, %loop.latch ]
  %a.0 = phi i128 [ 1, %entry ], [ %add134, %loop.latch ]
  %b.0 = phi i128 [ -1, %entry ], [ %sub131, %loop.latch ]
  %mul = mul i128 %i.0, 2
  %rshift = lshr i128 %compconstant.ct.read_arg_inner, %mul
  %and = and i128 %rshift, 1
  %mul14 = mul i128 %i.0, 2
  %add = add i128 %mul14, 1
  %rshift15 = lshr i128 %compconstant.ct.read_arg_inner, %add
  %and16 = and i128 %rshift15, 1
  %in = load [256 x i128]*, [256 x i128]** %compconstant.in.declare_input, align 8
  %mul18 = mul i128 %i.0, 2
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %mul18
  %in19 = load i128, i128* %array_getter, align 4
  %in20 = load [256 x i128]*, [256 x i128]** %compconstant.in.declare_input, align 8
  %mul22 = mul i128 %i.0, 2
  %add23 = add i128 %mul22, 1
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %in20, i128 0, i128 %add23
  %in25 = load i128, i128* %array_getter24, align 4
  %eq = icmp eq i128 %and16, 0
  %eq28 = icmp eq i128 %and, 0
  %and29 = and i1 %eq, %eq28
  br i1 %and29, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %neg = sub i128 0, %b.0
  %mul32 = mul i128 %neg, %in25
  %mul34 = mul i128 %mul32, %in19
  %mul37 = mul i128 %b.0, %in25
  %add38 = add i128 %mul34, %mul37
  %mul41 = mul i128 %b.0, %in19
  %add42 = add i128 %add38, %mul41
  %parts43 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %parts43, i128 0, i128 %i.0
  %parts46 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_utils_constraint(i128 %parts46, i128 %add42, i1* @constraint.93)
  %ptr_getter = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %parts48 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %add42, i128* %parts48, align 4
  br label %if.exit122

if.false:                                         ; preds = %loop.body
  %eq52 = icmp eq i128 %and16, 0
  %eq54 = icmp eq i128 %and, 1
  %and55 = and i1 %eq52, %eq54
  br i1 %and55, label %if.true49, label %if.false50

if.true49:                                        ; preds = %if.false
  %mul58 = mul i128 %a.0, %in25
  %mul60 = mul i128 %mul58, %in19
  %mul63 = mul i128 %a.0, %in19
  %sub = sub i128 %mul60, %mul63
  %mul66 = mul i128 %b.0, %in25
  %add67 = add i128 %sub, %mul66
  %mul70 = mul i128 %a.0, %in25
  %sub71 = sub i128 %add67, %mul70
  %add73 = add i128 %sub71, %a.0
  %parts74 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %parts74, i128 0, i128 %i.0
  %parts77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_utils_constraint(i128 %parts77, i128 %add73, i1* @constraint.94)
  %ptr_getter78 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %parts80 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter78, i128 0, i128 %i.0
  store i128 %add73, i128* %parts80, align 4
  br label %if.exit121

if.false50:                                       ; preds = %if.false
  %eq84 = icmp eq i128 %and16, 1
  %eq86 = icmp eq i128 %and, 0
  %and87 = and i1 %eq84, %eq86
  br i1 %and87, label %if.true81, label %if.false82

if.true81:                                        ; preds = %if.false50
  %mul90 = mul i128 %b.0, %in25
  %mul92 = mul i128 %mul90, %in19
  %mul95 = mul i128 %a.0, %in25
  %sub96 = sub i128 %mul92, %mul95
  %add98 = add i128 %sub96, %a.0
  %parts99 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %array_getter101 = getelementptr inbounds [256 x i128], [256 x i128]* %parts99, i128 0, i128 %i.0
  %parts102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_utils_constraint(i128 %parts102, i128 %add98, i1* @constraint.95)
  %ptr_getter103 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %parts105 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter103, i128 0, i128 %i.0
  store i128 %add98, i128* %parts105, align 4
  br label %if.exit

if.false82:                                       ; preds = %if.false50
  %neg107 = sub i128 0, %a.0
  %mul109 = mul i128 %neg107, %in25
  %mul111 = mul i128 %mul109, %in19
  %add113 = add i128 %mul111, %a.0
  %parts114 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %parts114, i128 0, i128 %i.0
  %parts117 = load i128, i128* %array_getter116, align 4
  call void @fn_intrinsic_utils_constraint(i128 %parts117, i128 %add113, i1* @constraint.96)
  %ptr_getter118 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %parts120 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter118, i128 0, i128 %i.0
  store i128 %add113, i128* %parts120, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false82, %if.true81
  br label %if.exit121

if.exit121:                                       ; preds = %if.exit, %if.true49
  br label %if.exit122

if.exit122:                                       ; preds = %if.exit121, %if.true
  %parts124 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %array_getter126 = getelementptr inbounds [256 x i128], [256 x i128]* %parts124, i128 0, i128 %i.0
  %parts127 = load i128, i128* %array_getter126, align 4
  %add128 = add i128 %sum.0, %parts127
  %sub131 = sub i128 %b.0, %e.0
  %add134 = add i128 %a.0, %e.0
  %mul136 = mul i128 %e.0, 2
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit122
  %add138 = add i128 %i.0, 1
  %slt = icmp slt i128 %add138, 127
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  call void @fn_intrinsic_utils_constraint(i128 %sout, i128 %add128, i1* @constraint.97)
  %compconstant.sout.write_inter_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 3
  store i128 %add128, i128* %compconstant.sout.write_inter_inner, align 4
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 3
  %compconstant.sout.read_inter_inner = load i128, i128* %struct_getter144, align 4
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 135)
  %struct_getter147 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter147, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %compconstant.sout.read_inter_inner, i1* @constraint.98)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %compconstant.sout.read_inter_inner, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter150 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter150, align 8
  %array_getter151 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 127
  %num2bits152 = load i128, i128* %array_getter151, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %num2bits152, i1* @constraint.99)
  %compconstant.out.write_output_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 4
  store i128 %num2bits152, i128* %compconstant.out.write_output_inner, align 4
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 4
  %compconstant.out.read_output_inner = load i128, i128* %struct_getter156, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %compconstant.parts.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 127)
  %ptr_cast157 = bitcast [256 x i128]** %compconstant.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast157, i128 254)
  br label %exit

exit:                                             ; preds = %arraydim
  %parts158 = load [256 x i128]*, [256 x i128]** %compconstant.parts.declare_inter, align 8
  %compconstant.parts.write_inter_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 2
  store [256 x i128]* %parts158, [256 x i128]** %compconstant.parts.write_inter_inner, align 8
  %compconstant.sout.write_inter_inner160 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 3
  store i128 %compconstant.sout.read_inter_inner, i128* %compconstant.sout.write_inter_inner160, align 4
  %compconstant.out.write_output_inner162 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 4
  store i128 %compconstant.out.read_output_inner, i128* %compconstant.out.write_output_inner162, align 4
  ret void
}

define %struct_template_circuit_compconstant* @fn_template_build_compconstant(i128 %0) {
entry:
  %struct_template_circuit_compconstant = alloca %struct_template_circuit_compconstant, align 8
  %compconstant.ct.write_arg_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %struct_template_circuit_compconstant, i32 0, i32 0
  store i128 %0, i128* %compconstant.ct.write_arg_inner, align 4
  ret %struct_template_circuit_compconstant* %struct_template_circuit_compconstant
}

define void @fn_template_init_bigsub(%struct_template_circuit_bigsub* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 0
  %bigsub.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 1
  %bigsub.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 2
  %bigsub.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigsub.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigsub.a.read_input_inner, [256 x i128]** %bigsub.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 3
  %bigsub.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigsub.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigsub.b.read_input_inner, [256 x i128]** %bigsub.b.declare_input, align 8
  %unit = alloca [256 x %struct_template_circuit_modsubthree*]*, align 8
  %unit4 = alloca [256 x %struct_template_circuit_modsubthree*], align 8
  store [256 x %struct_template_circuit_modsubthree*]* %unit4, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %bigsub.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigsub.out.declare_output, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %underflow = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %bigsub.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_modsub* @fn_template_build_modsub(i128 %bigsub.n.read_arg_inner)
  %a = load [256 x i128]*, [256 x i128]** %bigsub.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 0
  %a9 = load i128, i128* %array_getter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 1
  %modsub.a.read_input_outter = load i128, i128* %struct_getter11, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsub.a.read_input_outter, i128 %a9, i1* @constraint.100)
  %modsub.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 1
  store i128 %a9, i128* %modsub.a.write_input_outter, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigsub.b.declare_input, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 0
  %b13 = load i128, i128* %array_getter12, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 2
  %modsub.b.read_input_outter = load i128, i128* %struct_getter15, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsub.b.read_input_outter, i128 %b13, i1* @constraint.101)
  %modsub.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 2
  store i128 %b13, i128* %modsub.b.write_input_outter, align 4
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 3
  %modsub.out.read_output_outter = load i128, i128* %struct_getter18, align 4
  %out19 = load [256 x i128]*, [256 x i128]** %bigsub.out.declare_output, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %out19, i128 0, i128 0
  %out21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out21, i128 %modsub.out.read_output_outter, i1* @constraint.102)
  %ptr_getter22 = load [256 x i128]*, [256 x i128]** %bigsub.out.declare_output, align 8
  %out23 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter22, i128 0, i128 0
  store i128 %modsub.out.read_output_outter, i128* %out23, align 4
  %sub = sub i128 %bigsub.k.read_arg_inner, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %call26 = call %struct_template_circuit_modsubthree* @fn_template_build_modsubthree(i128 %bigsub.n.read_arg_inner)
  %ptr_getter27 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub29 = sub i128 %i.0, 1
  %unit30 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %ptr_getter27, i128 0, i128 %sub29
  store %struct_template_circuit_modsubthree* %call26, %struct_template_circuit_modsubthree** %unit30, align 8
  %a31 = load [256 x i128]*, [256 x i128]** %bigsub.a.declare_input, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %a31, i128 0, i128 %i.0
  %a34 = load i128, i128* %array_getter33, align 4
  %unit35 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub37 = sub i128 %i.0, 1
  %array_getter38 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit35, i128 0, i128 %sub37
  %unit39 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter38, align 8
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit39, i32 0, i32 1
  %modsubthree.a.read_input_outter = load i128, i128* %struct_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsubthree.a.read_input_outter, i128 %a34, i1* @constraint.103)
  %ptr_getter41 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub43 = sub i128 %i.0, 1
  %array_getter44 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %ptr_getter41, i128 0, i128 %sub43
  %unit45 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter44, align 8
  %modsubthree.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit45, i32 0, i32 1
  store i128 %a34, i128* %modsubthree.a.write_input_outter, align 4
  %b46 = load [256 x i128]*, [256 x i128]** %bigsub.b.declare_input, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %b46, i128 0, i128 %i.0
  %b49 = load i128, i128* %array_getter48, align 4
  %unit50 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub52 = sub i128 %i.0, 1
  %array_getter53 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit50, i128 0, i128 %sub52
  %unit54 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter53, align 8
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit54, i32 0, i32 2
  %modsubthree.b.read_input_outter = load i128, i128* %struct_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsubthree.b.read_input_outter, i128 %b49, i1* @constraint.104)
  %ptr_getter56 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub58 = sub i128 %i.0, 1
  %array_getter59 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %ptr_getter56, i128 0, i128 %sub58
  %unit60 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter59, align 8
  %modsubthree.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit60, i32 0, i32 2
  store i128 %b49, i128* %modsubthree.b.write_input_outter, align 4
  %eq = icmp eq i128 %i.0, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 4
  %modsub.borrow.read_output_outter = load i128, i128* %struct_getter63, align 4
  %unit64 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub66 = sub i128 %i.0, 1
  %array_getter67 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit64, i128 0, i128 %sub66
  %unit68 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter67, align 8
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit68, i32 0, i32 3
  %modsubthree.c.read_input_outter = load i128, i128* %struct_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsubthree.c.read_input_outter, i128 %modsub.borrow.read_output_outter, i1* @constraint.105)
  %ptr_getter70 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub72 = sub i128 %i.0, 1
  %array_getter73 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %ptr_getter70, i128 0, i128 %sub72
  %unit74 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter73, align 8
  %modsubthree.c.write_input_outter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit74, i32 0, i32 3
  store i128 %modsub.borrow.read_output_outter, i128* %modsubthree.c.write_input_outter, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %unit75 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub77 = sub i128 %i.0, 2
  %array_getter78 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit75, i128 0, i128 %sub77
  %unit79 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter78, align 8
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit79, i32 0, i32 6
  %modsubthree.borrow.read_output_outter = load i128, i128* %struct_getter80, align 4
  %unit81 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub83 = sub i128 %i.0, 1
  %array_getter84 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit81, i128 0, i128 %sub83
  %unit85 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter84, align 8
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit85, i32 0, i32 3
  %modsubthree.c.read_input_outter87 = load i128, i128* %struct_getter86, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsubthree.c.read_input_outter87, i128 %modsubthree.borrow.read_output_outter, i1* @constraint.106)
  %ptr_getter88 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub90 = sub i128 %i.0, 1
  %array_getter91 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %ptr_getter88, i128 0, i128 %sub90
  %unit92 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter91, align 8
  %modsubthree.c.write_input_outter93 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit92, i32 0, i32 3
  store i128 %modsubthree.borrow.read_output_outter, i128* %modsubthree.c.write_input_outter93, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %unit94 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub96 = sub i128 %i.0, 1
  %array_getter97 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit94, i128 0, i128 %sub96
  %unit98 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter97, align 8
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit98, i32 0, i32 5
  %modsubthree.out.read_output_outter = load i128, i128* %struct_getter99, align 4
  %out100 = load [256 x i128]*, [256 x i128]** %bigsub.out.declare_output, align 8
  %array_getter102 = getelementptr inbounds [256 x i128], [256 x i128]* %out100, i128 0, i128 %i.0
  %out103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out103, i128 %modsubthree.out.read_output_outter, i1* @constraint.107)
  %ptr_getter104 = load [256 x i128]*, [256 x i128]** %bigsub.out.declare_output, align 8
  %out106 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter104, i128 0, i128 %i.0
  store i128 %modsubthree.out.read_output_outter, i128* %out106, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigsub.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %unit110 = load [256 x %struct_template_circuit_modsubthree*]*, [256 x %struct_template_circuit_modsubthree*]** %unit, align 8
  %sub112 = sub i128 %bigsub.k.read_arg_inner, 2
  %array_getter113 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit110, i128 0, i128 %sub112
  %unit114 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter113, align 8
  %struct_getter115 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit114, i32 0, i32 6
  %modsubthree.borrow.read_output_outter116 = load i128, i128* %struct_getter115, align 4
  call void @fn_intrinsic_utils_constraint(i128 %underflow, i128 %modsubthree.borrow.read_output_outter116, i1* @constraint.108)
  %bigsub.underflow.write_output_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 5
  store i128 %modsubthree.borrow.read_output_outter116, i128* %bigsub.underflow.write_output_inner, align 4
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 5
  %bigsub.underflow.read_output_inner = load i128, i128* %struct_getter120, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x %struct_template_circuit_modsubthree*]** %unit to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %sub)
  %ptr_cast121 = bitcast [256 x i128]** %bigsub.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast121, i128 %bigsub.k.read_arg_inner)
  %ptr_cast122 = bitcast [256 x i128]** %bigsub.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast122, i128 %bigsub.k.read_arg_inner)
  %ptr_cast123 = bitcast [256 x i128]** %bigsub.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast123, i128 %bigsub.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out124 = load [256 x i128]*, [256 x i128]** %bigsub.out.declare_output, align 8
  %bigsub.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 4
  store [256 x i128]* %out124, [256 x i128]** %bigsub.out.write_output_inner, align 8
  %bigsub.underflow.write_output_inner126 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 5
  store i128 %bigsub.underflow.read_output_inner, i128* %bigsub.underflow.write_output_inner126, align 4
  ret void
}

define %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigsub = alloca %struct_template_circuit_bigsub, align 8
  %bigsub.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %struct_template_circuit_bigsub, i32 0, i32 0
  store i128 %0, i128* %bigsub.n.write_arg_inner, align 4
  %bigsub.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %struct_template_circuit_bigsub, i32 0, i32 1
  store i128 %1, i128* %bigsub.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigsub* %struct_template_circuit_bigsub
}

define [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 %2, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %4) {
entry:
  %j14 = call i128 @fn_intrinsic_utils_init()
  %i25 = call i128 @fn_intrinsic_utils_init()
  %j26 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  %i19 = call i128 @fn_intrinsic_utils_init()
  %j10 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch18, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add21, %loop.latch18 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %prod_val15 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %j.0, i128 %i.0
  store i128 0, i128* %prod_val15, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add = add i128 %j.0, 1
  %mul = mul i128 2, %2
  %sub = sub i128 %mul, 1
  %slt = icmp slt i128 %add, %sub
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch18

loop.latch18:                                     ; preds = %loop.exit
  %add21 = add i128 %i.0, 1
  %mul23 = mul i128 2, %1
  %sub24 = sub i128 %mul23, 1
  %slt25 = icmp slt i128 %add21, %sub24
  br i1 %slt25, label %loop.body, label %loop.exit26

loop.exit26:                                      ; preds = %loop.latch18
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch78, %loop.exit26
  %i1.0 = phi i128 [ 0, %loop.exit26 ], [ %add80, %loop.latch78 ]
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch71, %loop.body27
  %i2.0 = phi i128 [ 0, %loop.body27 ], [ %add73, %loop.latch71 ]
  br label %loop.body29

loop.body29:                                      ; preds = %loop.latch64, %loop.body28
  %j1.0 = phi i128 [ 0, %loop.body28 ], [ %add66, %loop.latch64 ]
  br label %loop.body30

loop.body30:                                      ; preds = %loop.latch57, %loop.body29
  %j2.0 = phi i128 [ 0, %loop.body29 ], [ %add59, %loop.latch57 ]
  %add34 = add i128 %j1.0, %j2.0
  %add37 = add i128 %i1.0, %i2.0
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add34, i128 %add37
  %prod_val38 = load i128, i128* %array_getter, align 4
  %array_getter41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %j1.0, i128 %i1.0
  %a42 = load i128, i128* %array_getter41, align 4
  %array_getter45 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %4, i128 0, i128 %j2.0, i128 %i2.0
  %b46 = load i128, i128* %array_getter45, align 4
  %mul47 = mul i128 %a42, %b46
  %add48 = add i128 %prod_val38, %mul47
  %add52 = add i128 %j1.0, %j2.0
  %add55 = add i128 %i1.0, %i2.0
  %prod_val56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add52, i128 %add55
  store i128 %add48, i128* %prod_val56, align 4
  br label %loop.latch57

loop.latch57:                                     ; preds = %loop.body30
  %add59 = add i128 %j2.0, 1
  %slt62 = icmp slt i128 %add59, %2
  br i1 %slt62, label %loop.body30, label %loop.exit63

loop.exit63:                                      ; preds = %loop.latch57
  br label %loop.latch64

loop.latch64:                                     ; preds = %loop.exit63
  %add66 = add i128 %j1.0, 1
  %slt69 = icmp slt i128 %add66, %2
  br i1 %slt69, label %loop.body29, label %loop.exit70

loop.exit70:                                      ; preds = %loop.latch64
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.exit70
  %add73 = add i128 %i2.0, 1
  %slt76 = icmp slt i128 %add73, %1
  br i1 %slt76, label %loop.body28, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch71
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.exit77
  %add80 = add i128 %i1.0, 1
  %slt83 = icmp slt i128 %add80, %1
  br i1 %slt83, label %loop.body27, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  %uniform_array85 = alloca [256 x [256 x i128]], align 8
  %uniform_array86 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch109, %loop.exit84
  %j.1 = phi i128 [ 0, %loop.exit84 ], [ %add111, %loop.latch109 ]
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch100, %loop.body87
  %i.1 = phi i128 [ 0, %loop.body87 ], [ %add102, %loop.latch100 ]
  %array_getter92 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %j.1, i128 %i.1
  %prod_val93 = load i128, i128* %array_getter92, align 4
  %call = call [256 x i128]* @SplitThreeFn(i128 %prod_val93, i128 %0, i128 %0, i128 %0)
  %split99 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.1, i128 %i.1
  %5 = bitcast [256 x i128]* %split99 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch100

loop.latch100:                                    ; preds = %loop.body88
  %add102 = add i128 %i.1, 1
  %mul105 = mul i128 2, %1
  %sub106 = sub i128 %mul105, 1
  %slt107 = icmp slt i128 %add102, %sub106
  br i1 %slt107, label %loop.body88, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch100
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.exit108
  %add111 = add i128 %j.1, 1
  %mul114 = mul i128 2, %2
  %sub115 = sub i128 %mul114, 1
  %slt116 = icmp slt i128 %add111, %sub115
  br i1 %slt116, label %loop.body87, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch109
  %uniform_array118 = alloca [256 x [256 x i128]], align 8
  %uniform_array119 = alloca [256 x [256 x i128]], align 8
  br label %loop.body120

loop.body120:                                     ; preds = %loop.latch258, %loop.exit117
  %j.2 = phi i128 [ 0, %loop.exit117 ], [ %add260, %loop.latch258 ]
  %carry123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 0
  store i128 0, i128* %carry123, align 4
  %array_getter126 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 0, i128 0
  %split127 = load i128, i128* %array_getter126, align 4
  %out130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %j.2, i128 0
  store i128 %split127, i128* %out130, align 4
  %mul132 = mul i128 2, %1
  %sub133 = sub i128 %mul132, 1
  %sgt = icmp sgt i128 %sub133, 1
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body120
  %array_getter136 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 0, i128 1
  %split137 = load i128, i128* %array_getter136, align 4
  %array_getter141 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 1, i128 0
  %split142 = load i128, i128* %array_getter141, align 4
  %add143 = add i128 %split137, %split142
  %call146 = call [256 x i128]* @SplitFn(i128 %add143, i128 %0, i128 %0)
  %sumAndCarry149 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array119, i128 0, i128 %j.2
  %7 = bitcast [256 x i128]* %sumAndCarry149 to i8*
  %8 = bitcast [256 x i128]* %call146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array119, i128 0, i128 %j.2, i128 0
  %sumAndCarry153 = load i128, i128* %array_getter152, align 4
  %out156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %j.2, i128 1
  store i128 %sumAndCarry153, i128* %out156, align 4
  %array_getter159 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array119, i128 0, i128 %j.2, i128 1
  %sumAndCarry160 = load i128, i128* %array_getter159, align 4
  %carry163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 1
  store i128 %sumAndCarry160, i128* %carry163, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body120
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %mul167 = mul i128 2, %1
  %sub168 = sub i128 %mul167, 1
  %sgt169 = icmp sgt i128 %sub168, 2
  br i1 %sgt169, label %if.true164, label %if.false165

if.true164:                                       ; preds = %if.exit
  br label %loop.body170

if.false165:                                      ; preds = %if.exit
  br label %if.exit257

loop.body170:                                     ; preds = %loop.latch219, %if.true164
  %i.2 = phi i128 [ 2, %if.true164 ], [ %add221, %loop.latch219 ]
  %array_getter174 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 %i.2, i128 0
  %split175 = load i128, i128* %array_getter174, align 4
  %sub179 = sub i128 %i.2, 1
  %array_getter180 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 %sub179, i128 1
  %split181 = load i128, i128* %array_getter180, align 4
  %add182 = add i128 %split175, %split181
  %sub186 = sub i128 %i.2, 2
  %array_getter187 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 %sub186, i128 2
  %split188 = load i128, i128* %array_getter187, align 4
  %add189 = add i128 %add182, %split188
  %sub193 = sub i128 %i.2, 1
  %array_getter194 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 %sub193
  %carry195 = load i128, i128* %array_getter194, align 4
  %add196 = add i128 %add189, %carry195
  %call199 = call [256 x i128]* @SplitFn(i128 %add196, i128 %0, i128 %0)
  %sumAndCarry202 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array119, i128 0, i128 %j.2
  %9 = bitcast [256 x i128]* %sumAndCarry202 to i8*
  %10 = bitcast [256 x i128]* %call199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter205 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array119, i128 0, i128 %j.2, i128 0
  %sumAndCarry206 = load i128, i128* %array_getter205, align 4
  %out210 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %j.2, i128 %i.2
  store i128 %sumAndCarry206, i128* %out210, align 4
  %array_getter213 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array119, i128 0, i128 %j.2, i128 1
  %sumAndCarry214 = load i128, i128* %array_getter213, align 4
  %carry218 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 %i.2
  store i128 %sumAndCarry214, i128* %carry218, align 4
  br label %loop.latch219

loop.latch219:                                    ; preds = %loop.body170
  %add221 = add i128 %i.2, 1
  %mul224 = mul i128 2, %1
  %sub225 = sub i128 %mul224, 1
  %slt226 = icmp slt i128 %add221, %sub225
  br i1 %slt226, label %loop.body170, label %loop.exit227

loop.exit227:                                     ; preds = %loop.latch219
  %mul231 = mul i128 2, %1
  %sub232 = sub i128 %mul231, 2
  %array_getter233 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 %sub232, i128 1
  %split234 = load i128, i128* %array_getter233, align 4
  %mul238 = mul i128 2, %1
  %sub239 = sub i128 %mul238, 3
  %array_getter240 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array86, i128 0, i128 %j.2, i128 %sub239, i128 2
  %split241 = load i128, i128* %array_getter240, align 4
  %add242 = add i128 %split234, %split241
  %mul246 = mul i128 2, %1
  %sub247 = sub i128 %mul246, 2
  %array_getter248 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 %sub247
  %carry249 = load i128, i128* %array_getter248, align 4
  %add250 = add i128 %add242, %carry249
  %mul254 = mul i128 2, %1
  %sub255 = sub i128 %mul254, 1
  %out256 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %j.2, i128 %sub255
  store i128 %add250, i128* %out256, align 4
  br label %if.exit257

if.exit257:                                       ; preds = %loop.exit227, %if.false165
  br label %loop.latch258

loop.latch258:                                    ; preds = %if.exit257
  %add260 = add i128 %j.2, 1
  %mul263 = mul i128 2, %2
  %sub264 = sub i128 %mul263, 1
  %slt265 = icmp slt i128 %add260, %sub264
  br i1 %slt265, label %loop.body120, label %loop.exit266

loop.exit266:                                     ; preds = %loop.latch258
  ret [256 x [256 x i128]]* %uniform_array85
}

define void @fn_template_init_checkcarrymodp(%struct_template_circuit_checkcarrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 0
  %checkcarrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 1
  %checkcarrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 2
  %checkcarrymodp.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 3
  %checkcarrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 4
  %checkcarrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 5
  %checkcarrymodp.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %checkcarrymodp.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %checkcarrymodp.in.read_input_inner, [256 x i128]** %checkcarrymodp.in.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 6
  %checkcarrymodp.x.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %checkcarrymodp.x.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %checkcarrymodp.x.read_input_inner, [256 x i128]** %checkcarrymodp.x.declare_input, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 7
  %checkcarrymodp.y.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %checkcarrymodp.y.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %checkcarrymodp.y.read_input_inner, [256 x i128]** %checkcarrymodp.y.declare_input, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %slt = icmp slt i128 %checkcarrymodp.overflow.read_arg_inner, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %sub = sub i128 %checkcarrymodp.overflow.read_arg_inner, 1
  %sle = icmp sle i128 %checkcarrymodp.n.read_arg_inner, %sub
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %checkcarrymodp.n.read_arg_inner, i128 %checkcarrymodp.k.read_arg_inner, i128 %checkcarrymodp.m.read_arg_inner, i128 %checkcarrymodp.overflow.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.p.read_arg_inner, i128 0, i128 %i.0
  %p16 = load i128, i128* %array_getter, align 4
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.0
  %pX21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pX21, i128 %p16, i1* @constraint.109)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter23 = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %pX25 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter23, i128 0, i128 %i.0
  store i128 %p16, i128* %pX25, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt29 = icmp slt i128 %add, %checkcarrymodp.k.read_arg_inner
  br i1 %slt29, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body30

loop.body30:                                      ; preds = %loop.latch44, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add46, %loop.latch44 ]
  %X = load [256 x i128]*, [256 x i128]** %checkcarrymodp.x.declare_input, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.1
  %X33 = load i128, i128* %array_getter32, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.1
  %pX38 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pX38, i128 %X33, i1* @constraint.110)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter41 = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %pX43 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter41, i128 0, i128 %i.1
  store i128 %X33, i128* %pX43, align 4
  br label %loop.latch44

loop.latch44:                                     ; preds = %loop.body30
  %add46 = add i128 %i.1, 1
  %slt49 = icmp slt i128 %add46, %checkcarrymodp.m.read_arg_inner
  br i1 %slt49, label %loop.body30, label %loop.exit50

loop.exit50:                                      ; preds = %loop.latch44
  %add53 = add i128 %checkcarrymodp.overflow.read_arg_inner, 1
  %add56 = add i128 %checkcarrymodp.k.read_arg_inner, %checkcarrymodp.m.read_arg_inner
  %sub57 = sub i128 %add56, 1
  %call58 = call %struct_template_circuit_checkcarrytozero* @fn_template_build_checkcarrytozero(i128 %checkcarrymodp.n.read_arg_inner, i128 %add53, i128 %sub57)
  br label %loop.body59

loop.body59:                                      ; preds = %loop.latch83, %loop.exit50
  %i.2 = phi i128 [ 0, %loop.exit50 ], [ %add85, %loop.latch83 ]
  %in = load [256 x i128]*, [256 x i128]** %checkcarrymodp.in.declare_input, align 8
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.2
  %in62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.2
  %pX67 = load i128, i128* %array_getter66, align 4
  %sub68 = sub i128 %in62, %pX67
  %Y = load [256 x i128]*, [256 x i128]** %checkcarrymodp.y.declare_input, align 8
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %Y, i128 0, i128 %i.2
  %Y71 = load i128, i128* %array_getter70, align 4
  %sub72 = sub i128 %sub68, %Y71
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call58, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter74, align 8
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter, i128 0, i128 %i.2
  %carry_check77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_check77, i128 %sub72, i1* @constraint.111)
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call58, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %carry_check82 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter80, i128 0, i128 %i.2
  store i128 %sub72, i128* %carry_check82, align 4
  br label %loop.latch83

loop.latch83:                                     ; preds = %loop.body59
  %add85 = add i128 %i.2, 1
  %slt88 = icmp slt i128 %add85, %checkcarrymodp.k.read_arg_inner
  br i1 %slt88, label %loop.body59, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch83
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch109, %loop.exit89
  %i.3 = phi i128 [ %checkcarrymodp.k.read_arg_inner, %loop.exit89 ], [ %add111, %loop.latch109 ]
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter94 = load [256 x i128]*, [256 x i128]** %struct_getter93, align 8
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter94, i128 0, i128 %i.3
  %pX97 = load i128, i128* %array_getter96, align 4
  %neg = sub i128 0, %pX97
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call58, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter100 = load [256 x i128]*, [256 x i128]** %struct_getter99, align 8
  %array_getter102 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter100, i128 0, i128 %i.3
  %carry_check103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_check103, i128 %neg, i1* @constraint.112)
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call58, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter106 = load [256 x i128]*, [256 x i128]** %struct_getter105, align 8
  %carry_check108 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter106, i128 0, i128 %i.3
  store i128 %neg, i128* %carry_check108, align 4
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.body91
  %add111 = add i128 %i.3, 1
  %add115 = add i128 %checkcarrymodp.k.read_arg_inner, %checkcarrymodp.m.read_arg_inner
  %sub116 = sub i128 %add115, 1
  %slt117 = icmp slt i128 %add111, %sub116
  br i1 %slt117, label %loop.body91, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch109
  br label %arraydim

arraydim:                                         ; preds = %loop.exit118
  %ptr_cast = bitcast [256 x i128]** %checkcarrymodp.x.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %checkcarrymodp.m.read_arg_inner)
  %ptr_cast119 = bitcast [256 x i128]** %checkcarrymodp.y.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast119, i128 %checkcarrymodp.k.read_arg_inner)
  %ptr_cast120 = bitcast [256 x i128]** %checkcarrymodp.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast120, i128 %checkcarrymodp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_checkcarrymodp = alloca %struct_template_circuit_checkcarrymodp, align 8
  %checkcarrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 0
  store i128 %0, i128* %checkcarrymodp.n.write_arg_inner, align 4
  %checkcarrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 1
  store i128 %1, i128* %checkcarrymodp.k.write_arg_inner, align 4
  %checkcarrymodp.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 2
  store i128 %2, i128* %checkcarrymodp.m.write_arg_inner, align 4
  %checkcarrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 3
  store i128 %3, i128* %checkcarrymodp.overflow.write_arg_inner, align 4
  %checkcarrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %checkcarrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp
}

define void @fn_template_init_greatereqthan(%struct_template_circuit_greatereqthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 0
  %greatereqthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 1
  %greatereqthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %greatereqthan.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %greatereqthan.in.read_input_inner, [256 x i128]** %greatereqthan.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %greatereqthan.n.read_arg_inner)
  %in = load [256 x i128]*, [256 x i128]** %greatereqthan.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 1
  %in2 = load i128, i128* %array_getter, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter5, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt6, i128 %in2, i1* @constraint.113)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %in2, i128* %lt9, align 4
  %in10 = load [256 x i128]*, [256 x i128]** %greatereqthan.in.declare_input, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %in10, i128 0, i128 0
  %in12 = load i128, i128* %array_getter11, align 4
  %add = add i128 %in12, 1
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter15, i128 0, i128 1
  %lt17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt17, i128 %add, i1* @constraint.114)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %lt21 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter20, i128 0, i128 1
  store i128 %add, i128* %lt21, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %lessthan.out.read_output_outter, i1* @constraint.115)
  %greatereqthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_outter, i128* %greatereqthan.out.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 2
  %greatereqthan.out.read_output_inner = load i128, i128* %struct_getter27, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  %ptr_cast = bitcast [256 x i128]** %greatereqthan.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %greatereqthan.out.write_output_inner29 = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 2
  store i128 %greatereqthan.out.read_output_inner, i128* %greatereqthan.out.write_output_inner29, align 4
  ret void
}

define %struct_template_circuit_greatereqthan* @fn_template_build_greatereqthan(i128 %0) {
entry:
  %struct_template_circuit_greatereqthan = alloca %struct_template_circuit_greatereqthan, align 8
  %greatereqthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %struct_template_circuit_greatereqthan, i32 0, i32 0
  store i128 %0, i128* %greatereqthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_greatereqthan* %struct_template_circuit_greatereqthan
}

define [256 x i128]* @long_add_unequal(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %i2 = call i128 @fn_intrinsic_utils_init()
  %carry4 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add41, %loop.latch ]
  %carry.0 = phi i128 [ 0, %entry ], [ %carry.1, %loop.latch ]
  %slt = icmp slt i128 %i.0, %2
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %a7 = load i128, i128* %array_getter, align 4
  %array_getter9 = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %b10 = load i128, i128* %array_getter9, align 4
  %add = add i128 %a7, %b10
  %add12 = add i128 %add, %carry.0
  %call = call [256 x i128]* @SplitFn(i128 %add12, i128 %0, i128 %0)
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 0
  %sumAndCarry16 = load i128, i128* %array_getter15, align 4
  %sum18 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry16, i128* %sum18, align 4
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 1
  %sumAndCarry21 = load i128, i128* %array_getter20, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %a25 = load i128, i128* %array_getter24, align 4
  %add27 = add i128 %a25, %carry.0
  %call30 = call [256 x i128]* @SplitFn(i128 %add27, i128 %0, i128 %0)
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %call30, i128 0, i128 0
  %sumAndCarry33 = load i128, i128* %array_getter32, align 4
  %sum36 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry33, i128* %sum36, align 4
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %call30, i128 0, i128 1
  %sumAndCarry39 = load i128, i128* %array_getter38, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %carry.1 = phi i128 [ %sumAndCarry21, %if.true ], [ %sumAndCarry39, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add41 = add i128 %i.0, 1
  %slt43 = icmp slt i128 %add41, %1
  br i1 %slt43, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sum47 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %1
  store i128 %carry.1, i128* %sum47, align 4
  ret [256 x i128]* %uniform_array
}

define void @fn_template_init_signedfp12scalarmultiplynocarryunequal(%struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 0
  %signedfp12scalarmultiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 1
  %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 2
  %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 3
  %signedfp12scalarmultiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 4
  %signedfp12scalarmultiplynocarryunequal.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %signedfp12scalarmultiplynocarryunequal.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %signedfp12scalarmultiplynocarryunequal.a.read_input_inner, [256 x i128]** %signedfp12scalarmultiplynocarryunequal.a.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 5
  %signedfp12scalarmultiplynocarryunequal.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %signedfp12scalarmultiplynocarryunequal.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.b.declare_input, align 8
  %signedfp12scalarmultiplynocarryunequal.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.declare_output, align 8
  %idx6 = call i128 @fn_intrinsic_utils_init()
  %ab = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, align 8
  %ab7 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %j9 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner, %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner
  %sub = sub i128 %add, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch80, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add82, %loop.latch80 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch74, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add76, %loop.latch74 ]
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp12scalarmultiplynocarryunequal.n.read_arg_inner, i128 %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner, i128 %signedfp12scalarmultiplynocarryunequal.m_out.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %ab17 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call, %struct_template_circuit_bigmultshortlongunequal** %ab17, align 8
  br label %loop.body18

loop.body18:                                      ; preds = %loop.latch, %loop.body12
  %idx.0 = phi i128 [ 0, %loop.body12 ], [ %add40, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %signedfp12scalarmultiplynocarryunequal.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %idx.0
  %a20 = load i128, i128* %array_getter, align 4
  %ab21 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab21, i128 0, i128 %i.0, i128 %j.0
  %ab25 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter24, align 8
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab25, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %idx.0
  %ab29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab29, i128 %a20, i1* @constraint.116)
  %ptr_getter30 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter30, i128 0, i128 %i.0, i128 %j.0
  %ab34 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter33, align 8
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab34, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter36 = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %ab38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter36, i128 0, i128 %idx.0
  store i128 %a20, i128* %ab38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body18
  %add40 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add40, %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body18, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body43

loop.body43:                                      ; preds = %loop.latch67, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add69, %loop.latch67 ]
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.b.declare_input, align 8
  %array_getter47 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b48 = load i128, i128* %array_getter47, align 4
  %ab49 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab49, i128 0, i128 %i.0, i128 %j.0
  %ab53 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter52, align 8
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab53, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %idx.1
  %ab57 = load i128, i128* %array_getter56, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab57, i128 %b48, i1* @constraint.117)
  %ptr_getter58 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter58, i128 0, i128 %i.0, i128 %j.0
  %ab62 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter61, align 8
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab62, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %ab66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter64, i128 0, i128 %idx.1
  store i128 %b48, i128* %ab66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body43
  %add69 = add i128 %idx.1, 1
  %slt72 = icmp slt i128 %add69, %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner
  br i1 %slt72, label %loop.body43, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.exit73
  %add76 = add i128 %j.0, 1
  %slt78 = icmp slt i128 %add76, 2
  br i1 %slt78, label %loop.body12, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch74
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.exit79
  %add82 = add i128 %i.0, 1
  %slt84 = icmp slt i128 %add82, 6
  br i1 %slt84, label %loop.body, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch80
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch125, %loop.exit85
  %i.1 = phi i128 [ 0, %loop.exit85 ], [ %add127, %loop.latch125 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch119, %loop.body86
  %j.1 = phi i128 [ 0, %loop.body86 ], [ %add121, %loop.latch119 ]
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch109, %loop.body87
  %idx.2 = phi i128 [ 0, %loop.body87 ], [ %add111, %loop.latch109 ]
  %ab89 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter92 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab89, i128 0, i128 %i.1, i128 %j.1
  %ab93 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter92, align 8
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab93, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter94, align 8
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %idx.2
  %ab97 = load i128, i128* %array_getter96, align 4
  %out98 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.declare_output, align 8
  %array_getter102 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out98, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  %out103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out103, i128 %ab97, i1* @constraint.118)
  %ptr_getter104 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.declare_output, align 8
  %out108 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter104, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  store i128 %ab97, i128* %out108, align 4
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.body88
  %add111 = add i128 %idx.2, 1
  %add115 = add i128 %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner, %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner
  %sub116 = sub i128 %add115, 1
  %slt117 = icmp slt i128 %add111, %sub116
  br i1 %slt117, label %loop.body88, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch109
  br label %loop.latch119

loop.latch119:                                    ; preds = %loop.exit118
  %add121 = add i128 %j.1, 1
  %slt123 = icmp slt i128 %add121, 2
  br i1 %slt123, label %loop.body87, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch119
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.exit124
  %add127 = add i128 %i.1, 1
  %slt129 = icmp slt i128 %add127, 6
  br i1 %slt129, label %loop.body86, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  br label %arraydim

arraydim:                                         ; preds = %loop.exit130
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2)
  %ptr_cast131 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast131, i128 6, i128 2, i128 %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner)
  %ptr_cast132 = bitcast [256 x i128]** %signedfp12scalarmultiplynocarryunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast132, i128 %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner)
  %ptr_cast133 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast133, i128 6, i128 2, i128 %sub)
  br label %exit

exit:                                             ; preds = %arraydim
  %out134 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.declare_output, align 8
  %signedfp12scalarmultiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out134, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* @fn_template_build_signedfp12scalarmultiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp12scalarmultiplynocarryunequal = alloca %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, align 8
  %signedfp12scalarmultiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp12scalarmultiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp12scalarmultiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp12scalarmultiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp12scalarmultiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal
}

define void @fn_template_init_num2bitsneg(%struct_template_circuit_num2bitsneg* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %0, i32 0, i32 0
  %num2bitsneg.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %0, i32 0, i32 1
  %num2bitsneg.in.read_input_inner = load i128, i128* %struct_getter1, align 4
  %lc12 = call i128 @fn_intrinsic_utils_init()
  %neg3 = call i128 @fn_intrinsic_utils_init()
  %num2bitsneg.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %num2bitsneg.out.declare_output, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %eq = icmp eq i128 %num2bitsneg.n.read_arg_inner, 0
  %pow = call i128 @fn_intrinsic_utils_powi(i128 2, i128 %num2bitsneg.n.read_arg_inner)
  %sub = sub i128 %pow, %num2bitsneg.in.read_input_inner
  %utils_switch = call i128 @fn_intrinsic_utils_switch(i1 %eq, i128 0, i128 %sub)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %lc1.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add28, %loop.latch ]
  %rshift = lshr i128 %utils_switch, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %num2bitsneg.out.declare_output, align 8
  %out10 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %out10, align 4
  %out11 = load [256 x i128]*, [256 x i128]** %num2bitsneg.out.declare_output, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %out11, i128 0, i128 %i.0
  %out13 = load i128, i128* %array_getter, align 4
  %out14 = load [256 x i128]*, [256 x i128]** %num2bitsneg.out.declare_output, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %out14, i128 0, i128 %i.0
  %out17 = load i128, i128* %array_getter16, align 4
  %sub18 = sub i128 %out17, 1
  %mul = mul i128 %out13, %sub18
  call void @fn_intrinsic_utils_constraint(i128 %mul, i128 0, i1* @constraint.119)
  %out20 = load [256 x i128]*, [256 x i128]** %num2bitsneg.out.declare_output, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %out20, i128 0, i128 %i.0
  %out23 = load i128, i128* %array_getter22, align 4
  %pow25 = call i128 @fn_intrinsic_utils_powi(i128 2, i128 %i.0)
  %mul26 = mul i128 %out23, %pow25
  %add = add i128 %lc1.0, %mul26
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add28 = add i128 %i.0, 1
  %slt = icmp slt i128 %add28, %num2bitsneg.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter33, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %num2bitsneg.in.read_input_inner, i1* @constraint.120)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  store i128 %num2bitsneg.in.read_input_inner, i128* %iszero.in.write_input_outter, align 4
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter37, align 4
  %pow39 = call i128 @fn_intrinsic_utils_powi(i128 2, i128 %num2bitsneg.n.read_arg_inner)
  %mul40 = mul i128 %iszero.out.read_output_outter, %pow39
  %add41 = add i128 %add, %mul40
  %pow43 = call i128 @fn_intrinsic_utils_powi(i128 2, i128 %num2bitsneg.n.read_arg_inner)
  %sub45 = sub i128 %pow43, %num2bitsneg.in.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %add41, i128 %sub45, i1* @constraint.121)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %num2bitsneg.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %num2bitsneg.n.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out46 = load [256 x i128]*, [256 x i128]** %num2bitsneg.out.declare_output, align 8
  %num2bitsneg.out.write_output_inner = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %0, i32 0, i32 2
  store [256 x i128]* %out46, [256 x i128]** %num2bitsneg.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_num2bitsneg* @fn_template_build_num2bitsneg(i128 %0) {
entry:
  %struct_template_circuit_num2bitsneg = alloca %struct_template_circuit_num2bitsneg, align 8
  %num2bitsneg.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %struct_template_circuit_num2bitsneg, i32 0, i32 0
  store i128 %0, i128* %num2bitsneg.n.write_arg_inner, align 4
  ret %struct_template_circuit_num2bitsneg* %struct_template_circuit_num2bitsneg
}

define i128 @short_div_norm(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %qhat2 = call i128 @fn_intrinsic_utils_init()
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %1
  %a3 = load i128, i128* %array_getter, align 4
  %lshift = shl i128 1, %0
  %mul = mul i128 %a3, %lshift
  %sub = sub i128 %1, 1
  %array_getter6 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %sub
  %a7 = load i128, i128* %array_getter6, align 4
  %add = add i128 %mul, %a7
  %sub9 = sub i128 %1, 1
  %array_getter10 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub9
  %b11 = load i128, i128* %array_getter10, align 4
  %sdiv = sdiv i128 %add, %b11
  %lshift14 = shl i128 1, %0
  %sub15 = sub i128 %lshift14, 1
  %sgt = icmp sgt i128 %sdiv, %sub15
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %lshift17 = shl i128 1, %0
  %sub18 = sub i128 %lshift17, 1
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %qhat.0 = phi i128 [ %sub18, %if.true ], [ %sdiv, %if.false ]
  %call = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %qhat.0, [256 x i128]* %3)
  %add27 = add i128 %1, 1
  %call30 = call i128 @long_gt(i128 %0, i128 %add27, [256 x i128]* %call, [256 x i128]* %2)
  %eq = icmp eq i128 %call30, 1
  br i1 %eq, label %if.true23, label %if.false24

if.true23:                                        ; preds = %if.exit
  %add33 = add i128 %1, 1
  %call36 = call [256 x i128]* @long_sub(i128 %0, i128 %add33, [256 x i128]* %call, [256 x i128]* %3)
  %add41 = add i128 %1, 1
  %call44 = call i128 @long_gt(i128 %0, i128 %add41, [256 x i128]* %call36, [256 x i128]* %2)
  %eq45 = icmp eq i128 %call44, 1
  br i1 %eq45, label %if.true37, label %if.false38

if.false24:                                       ; preds = %if.exit
  ret i128 %qhat.0

if.true37:                                        ; preds = %if.true23
  %sub47 = sub i128 %qhat.0, 2
  ret i128 %sub47

if.false38:                                       ; preds = %if.true23
  %sub49 = sub i128 %qhat.0, 1
  ret i128 %sub49
}

define void @fn_template_init_rangecheck2d(%struct_template_circuit_rangecheck2d* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %0, i32 0, i32 0
  %rangecheck2d.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %0, i32 0, i32 1
  %rangecheck2d.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %0, i32 0, i32 2
  %rangecheck2d.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter2, align 8
  %rangecheck2d.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %rangecheck2d.in.read_input_inner, [256 x [256 x i128]]** %rangecheck2d.in.declare_input, align 8
  %range_checks = alloca [256 x [256 x %struct_template_circuit_num2bits*]]*, align 8
  %range_checks3 = alloca [256 x [256 x %struct_template_circuit_num2bits*]], align 8
  store [256 x [256 x %struct_template_circuit_num2bits*]]* %range_checks3, [256 x [256 x %struct_template_circuit_num2bits*]]** %range_checks, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %eps5 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch28, %entry
  %eps.0 = phi i128 [ 0, %entry ], [ %add30, %loop.latch28 ]
  br label %loop.body7

loop.body7:                                       ; preds = %loop.latch, %loop.body
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %rangecheck2d.n.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %range_checks, align 8
  %range_checks10 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %ptr_getter, i128 0, i128 %eps.0, i128 %i.0
  store %struct_template_circuit_num2bits* %call, %struct_template_circuit_num2bits** %range_checks10, align 8
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %rangecheck2d.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %eps.0, i128 %i.0
  %in13 = load i128, i128* %array_getter, align 4
  %range_checks14 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %range_checks, align 8
  %array_getter17 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %range_checks14, i128 0, i128 %eps.0, i128 %i.0
  %range_checks18 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter17, align 8
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks18, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter19, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %in13, i1* @constraint.122)
  %ptr_getter20 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %range_checks, align 8
  %array_getter23 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %ptr_getter20, i128 0, i128 %eps.0, i128 %i.0
  %range_checks24 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter23, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks24, i32 0, i32 1
  store i128 %in13, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body7
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %rangecheck2d.k.read_arg_inner
  br i1 %slt, label %loop.body7, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch28

loop.latch28:                                     ; preds = %loop.exit
  %add30 = add i128 %eps.0, 1
  %slt32 = icmp slt i128 %add30, 2
  br i1 %slt32, label %loop.body, label %loop.exit33

loop.exit33:                                      ; preds = %loop.latch28
  br label %arraydim

arraydim:                                         ; preds = %loop.exit33
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_num2bits*]]** %range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %rangecheck2d.k.read_arg_inner)
  %ptr_cast34 = bitcast [256 x [256 x i128]]** %rangecheck2d.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast34, i128 2, i128 %rangecheck2d.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_rangecheck2d = alloca %struct_template_circuit_rangecheck2d, align 8
  %rangecheck2d.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %struct_template_circuit_rangecheck2d, i32 0, i32 0
  store i128 %0, i128* %rangecheck2d.n.write_arg_inner, align 4
  %rangecheck2d.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %struct_template_circuit_rangecheck2d, i32 0, i32 1
  store i128 %1, i128* %rangecheck2d.k.write_arg_inner, align 4
  ret %struct_template_circuit_rangecheck2d* %struct_template_circuit_rangecheck2d
}

define void @fn_template_init_signedlinefunctionequalnocarryfp2(%struct_template_circuit_signedlinefunctionequalnocarryfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %0, i32 0, i32 0
  %signedlinefunctionequalnocarryfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %0, i32 0, i32 1
  %signedlinefunctionequalnocarryfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %0, i32 0, i32 2
  %signedlinefunctionequalnocarryfp2.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %0, i32 0, i32 3
  %signedlinefunctionequalnocarryfp2.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %signedlinefunctionequalnocarryfp2.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedlinefunctionequalnocarryfp2.p.read_input_inner, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %0, i32 0, i32 4
  %signedlinefunctionequalnocarryfp2.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %signedlinefunctionequalnocarryfp2.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedlinefunctionequalnocarryfp2.q.read_input_inner, [256 x [256 x i128]]** %signedlinefunctionequalnocarryfp2.q.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %signedlinefunctionequalnocarryfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %LOGK6 = call i128 @fn_intrinsic_utils_init()
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 3, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub = sub i128 %mul, 2
  %call = call i128 @log_ceil(i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner)
  %call13 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %signedlinefunctionequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner, i128 2)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch50, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add52, %loop.latch50 ]
  br label %loop.body14

loop.body14:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 0, i128 %i.0, i128 %j.0
  %P17 = load i128, i128* %array_getter, align 4
  %mul18 = mul i128 3, %P17
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter20, align 8
  %array_getter23 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq324 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq324, i128 %mul18, i1* @constraint.123)
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter26 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter25, align 8
  %x_sq329 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter26, i128 0, i128 %i.0, i128 %j.0
  store i128 %mul18, i128* %x_sq329, align 4
  %P30 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P30, i128 0, i128 0, i128 %i.0, i128 %j.0
  %P34 = load i128, i128* %array_getter33, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq340 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq340, i128 %P34, i1* @constraint.124)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter43 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter42, align 8
  %x_sq346 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter43, i128 0, i128 %i.0, i128 %j.0
  store i128 %P34, i128* %x_sq346, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body14
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  br i1 %slt, label %loop.body14, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch50

loop.latch50:                                     ; preds = %loop.exit
  %add52 = add i128 %i.0, 1
  %slt54 = icmp slt i128 %add52, 2
  br i1 %slt54, label %loop.body, label %loop.exit55

loop.exit55:                                      ; preds = %loop.latch50
  %mul58 = mul i128 2, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub59 = sub i128 %mul58, 1
  %call61 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedlinefunctionequalnocarryfp2.n.read_arg_inner, i128 %sub59, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner, i128 2, i128 2)
  br label %loop.body62

loop.body62:                                      ; preds = %loop.latch134, %loop.exit55
  %i.1 = phi i128 [ 0, %loop.exit55 ], [ %add136, %loop.latch134 ]
  %slt65 = icmp slt i128 %i.1, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  br i1 %slt65, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body62
  %P66 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter68 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P66, i128 0, i128 0, i128 0, i128 %i.1
  %P69 = load i128, i128* %array_getter68, align 4
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter71, align 8
  %array_getter73 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter, i128 0, i128 0, i128 %i.1
  %x_cu374 = load i128, i128* %array_getter73, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu374, i128 %P69, i1* @constraint.125)
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter77 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter76, align 8
  %x_cu379 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter77, i128 0, i128 0, i128 %i.1
  store i128 %P69, i128* %x_cu379, align 4
  %P80 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter82 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P80, i128 0, i128 0, i128 1, i128 %i.1
  %P83 = load i128, i128* %array_getter82, align 4
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter86 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter85, align 8
  %array_getter88 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter86, i128 0, i128 1, i128 %i.1
  %x_cu389 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu389, i128 %P83, i1* @constraint.126)
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter92 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter91, align 8
  %x_cu394 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter92, i128 0, i128 1, i128 %i.1
  store i128 %P83, i128* %x_cu394, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body62
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter96, align 8
  %array_getter98 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter, i128 0, i128 0, i128 %i.1
  %x_sq399 = load i128, i128* %array_getter98, align 4
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter102 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter101, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter102, i128 0, i128 2, i128 %i.1
  %x_sq3105 = load i128, i128* %array_getter104, align 4
  %sub106 = sub i128 %x_sq399, %x_sq3105
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter108, align 8
  %array_getter110 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter, i128 0, i128 0, i128 %i.1
  %x_cu3111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu3111, i128 %sub106, i1* @constraint.127)
  %struct_getter113 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter114 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter113, align 8
  %x_cu3116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter114, i128 0, i128 0, i128 %i.1
  store i128 %sub106, i128* %x_cu3116, align 4
  %struct_getter118 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter119 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter118, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter119, i128 0, i128 1, i128 %i.1
  %x_sq3122 = load i128, i128* %array_getter121, align 4
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter125 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter124, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter125, i128 0, i128 1, i128 %i.1
  %x_cu3128 = load i128, i128* %array_getter127, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu3128, i128 %x_sq3122, i1* @constraint.128)
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter131 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter130, align 8
  %x_cu3133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter131, i128 0, i128 1, i128 %i.1
  store i128 %x_sq3122, i128* %x_cu3133, align 4
  br label %loop.latch134

loop.latch134:                                    ; preds = %if.exit
  %add136 = add i128 %i.1, 1
  %mul139 = mul i128 2, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub140 = sub i128 %mul139, 1
  %slt141 = icmp slt i128 %add136, %sub140
  br i1 %slt141, label %loop.body62, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch134
  %call145 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %signedlinefunctionequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner, i128 2)
  br label %loop.body146

loop.body146:                                     ; preds = %loop.latch192, %loop.exit142
  %i.2 = phi i128 [ 0, %loop.exit142 ], [ %add194, %loop.latch192 ]
  br label %loop.body147

loop.body147:                                     ; preds = %loop.latch185, %loop.body146
  %j.1 = phi i128 [ 0, %loop.body146 ], [ %add187, %loop.latch185 ]
  %P148 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter151 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P148, i128 0, i128 1, i128 %i.2, i128 %j.1
  %P152 = load i128, i128* %array_getter151, align 4
  %mul153 = mul i128 2, %P152
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter156 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter155, align 8
  %array_getter159 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter156, i128 0, i128 %i.2, i128 %j.1
  %y_sq2160 = load i128, i128* %array_getter159, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq2160, i128 %mul153, i1* @constraint.129)
  %struct_getter162 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter163 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter162, align 8
  %y_sq2166 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter163, i128 0, i128 %i.2, i128 %j.1
  store i128 %mul153, i128* %y_sq2166, align 4
  %P167 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter170 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P167, i128 0, i128 1, i128 %i.2, i128 %j.1
  %P171 = load i128, i128* %array_getter170, align 4
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter174 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter173, align 8
  %array_getter177 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter174, i128 0, i128 %i.2, i128 %j.1
  %y_sq2178 = load i128, i128* %array_getter177, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq2178, i128 %P171, i1* @constraint.130)
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter181 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter180, align 8
  %y_sq2184 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter181, i128 0, i128 %i.2, i128 %j.1
  store i128 %P171, i128* %y_sq2184, align 4
  br label %loop.latch185

loop.latch185:                                    ; preds = %loop.body147
  %add187 = add i128 %j.1, 1
  %slt190 = icmp slt i128 %add187, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  br i1 %slt190, label %loop.body147, label %loop.exit191

loop.exit191:                                     ; preds = %loop.latch185
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.exit191
  %add194 = add i128 %i.2, 1
  %slt196 = icmp slt i128 %add194, 2
  br i1 %slt196, label %loop.body146, label %loop.exit197

loop.exit197:                                     ; preds = %loop.latch192
  %mul200 = mul i128 2, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub201 = sub i128 %mul200, 1
  %mul204 = mul i128 3, %signedlinefunctionequalnocarryfp2.n.read_arg_inner
  %mul206 = mul i128 2, %call
  %add207 = add i128 %mul204, %mul206
  %add208 = add i128 %add207, 3
  %call209 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %signedlinefunctionequalnocarryfp2.n.read_arg_inner, i128 %sub201, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner, i128 %add208)
  br label %loop.body210

loop.body210:                                     ; preds = %loop.latch251, %loop.exit197
  %idx.0 = phi i128 [ 0, %loop.exit197 ], [ %add253, %loop.latch251 ]
  %struct_getter212 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter212, align 8
  %array_getter215 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter213, i128 0, i128 0, i128 %idx.0
  %x_sq3216 = load i128, i128* %array_getter215, align 4
  %struct_getter218 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter219 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter218, align 8
  %array_getter221 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter219, i128 0, i128 2, i128 %idx.0
  %x_sq3222 = load i128, i128* %array_getter221, align 4
  %sub223 = sub i128 %x_sq3216, %x_sq3222
  %struct_getter225 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter225, align 8
  %array_getter227 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 0, i128 %idx.0
  %Xmult228 = load i128, i128* %array_getter227, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult228, i128 %sub223, i1* @constraint.131)
  %struct_getter230 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter231 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter230, align 8
  %Xmult233 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter231, i128 0, i128 0, i128 %idx.0
  store i128 %sub223, i128* %Xmult233, align 4
  %struct_getter235 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call13, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter236 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter235, align 8
  %array_getter238 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter236, i128 0, i128 1, i128 %idx.0
  %x_sq3239 = load i128, i128* %array_getter238, align 4
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter242 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter241, align 8
  %array_getter244 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter242, i128 0, i128 1, i128 %idx.0
  %Xmult245 = load i128, i128* %array_getter244, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult245, i128 %x_sq3239, i1* @constraint.132)
  %struct_getter247 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter248 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter247, align 8
  %Xmult250 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter248, i128 0, i128 1, i128 %idx.0
  store i128 %x_sq3239, i128* %Xmult250, align 4
  br label %loop.latch251

loop.latch251:                                    ; preds = %loop.body210
  %add253 = add i128 %idx.0, 1
  %mul256 = mul i128 2, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub257 = sub i128 %mul256, 1
  %slt258 = icmp slt i128 %add253, %sub257
  br i1 %slt258, label %loop.body210, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch251
  br label %loop.body260

loop.body260:                                     ; preds = %loop.latch285, %loop.exit259
  %idx.1 = phi i128 [ 0, %loop.exit259 ], [ %add287, %loop.latch285 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarryfp2.q.declare_input, align 8
  %array_getter262 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 0, i128 %idx.1
  %Q263 = load i128, i128* %array_getter262, align 4
  %neg = sub i128 0, %Q263
  %struct_getter265 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter265, align 8
  %array_getter267 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 0, i128 %idx.1
  %Xmult268 = load i128, i128* %array_getter267, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult268, i128 %neg, i1* @constraint.133)
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter271 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter270, align 8
  %Xmult273 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter271, i128 0, i128 0, i128 %idx.1
  store i128 %neg, i128* %Xmult273, align 4
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter276 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter275, align 8
  %array_getter278 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter276, i128 0, i128 1, i128 %idx.1
  %Xmult279 = load i128, i128* %array_getter278, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult279, i128 0, i1* @constraint.134)
  %struct_getter281 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter282 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter281, align 8
  %Xmult284 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter282, i128 0, i128 1, i128 %idx.1
  store i128 0, i128* %Xmult284, align 4
  br label %loop.latch285

loop.latch285:                                    ; preds = %loop.body260
  %add287 = add i128 %idx.1, 1
  %slt290 = icmp slt i128 %add287, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  br i1 %slt290, label %loop.body260, label %loop.exit291

loop.exit291:                                     ; preds = %loop.latch285
  %mul296 = mul i128 2, %signedlinefunctionequalnocarryfp2.n.read_arg_inner
  %add298 = add i128 %mul296, %call
  %add299 = add i128 %add298, 2
  %call300 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %signedlinefunctionequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner, i128 %add299)
  br label %loop.body301

loop.body301:                                     ; preds = %loop.latch334, %loop.exit291
  %idx.2 = phi i128 [ 0, %loop.exit291 ], [ %add336, %loop.latch334 ]
  %P302 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter304 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P302, i128 0, i128 1, i128 0, i128 %idx.2
  %P305 = load i128, i128* %array_getter304, align 4
  %mul306 = mul i128 2, %P305
  %struct_getter308 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter309 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter308, align 8
  %array_getter311 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter309, i128 0, i128 0, i128 %idx.2
  %Ymult312 = load i128, i128* %array_getter311, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult312, i128 %mul306, i1* @constraint.135)
  %struct_getter314 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter315 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter314, align 8
  %Ymult317 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter315, i128 0, i128 0, i128 %idx.2
  store i128 %mul306, i128* %Ymult317, align 4
  %P318 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input, align 8
  %array_getter320 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P318, i128 0, i128 1, i128 1, i128 %idx.2
  %P321 = load i128, i128* %array_getter320, align 4
  %mul322 = mul i128 2, %P321
  %struct_getter324 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter325 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter324, align 8
  %array_getter327 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter325, i128 0, i128 1, i128 %idx.2
  %Ymult328 = load i128, i128* %array_getter327, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult328, i128 %mul322, i1* @constraint.136)
  %struct_getter330 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter331 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter330, align 8
  %Ymult333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter331, i128 0, i128 1, i128 %idx.2
  store i128 %mul322, i128* %Ymult333, align 4
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.body301
  %add336 = add i128 %idx.2, 1
  %slt339 = icmp slt i128 %add336, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  br i1 %slt339, label %loop.body301, label %loop.exit340

loop.exit340:                                     ; preds = %loop.latch334
  br label %loop.body341

loop.body341:                                     ; preds = %loop.latch368, %loop.exit340
  %idx.3 = phi i128 [ 0, %loop.exit340 ], [ %add370, %loop.latch368 ]
  %Q342 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarryfp2.q.declare_input, align 8
  %array_getter344 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q342, i128 0, i128 1, i128 %idx.3
  %Q345 = load i128, i128* %array_getter344, align 4
  %struct_getter347 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter348 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter347, align 8
  %array_getter350 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter348, i128 0, i128 0, i128 %idx.3
  %Ymult351 = load i128, i128* %array_getter350, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult351, i128 %Q345, i1* @constraint.137)
  %struct_getter353 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter354 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter353, align 8
  %Ymult356 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter354, i128 0, i128 0, i128 %idx.3
  store i128 %Q345, i128* %Ymult356, align 4
  %struct_getter358 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter359 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter358, align 8
  %array_getter361 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter359, i128 0, i128 1, i128 %idx.3
  %Ymult362 = load i128, i128* %array_getter361, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult362, i128 0, i1* @constraint.138)
  %struct_getter364 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter365 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter364, align 8
  %Ymult367 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter365, i128 0, i128 1, i128 %idx.3
  store i128 0, i128* %Ymult367, align 4
  br label %loop.latch368

loop.latch368:                                    ; preds = %loop.body341
  %add370 = add i128 %idx.3, 1
  %slt373 = icmp slt i128 %add370, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  br i1 %slt373, label %loop.body341, label %loop.exit374

loop.exit374:                                     ; preds = %loop.latch368
  br label %loop.body375

loop.body375:                                     ; preds = %loop.latch577, %loop.exit374
  %idx.4 = phi i128 [ 0, %loop.exit374 ], [ %add579, %loop.latch577 ]
  %out376 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter378 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out376, i128 0, i128 1, i128 0, i128 %idx.4
  %out379 = load i128, i128* %array_getter378, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out379, i128 0, i1* @constraint.139)
  %ptr_getter380 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out382 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter380, i128 0, i128 1, i128 0, i128 %idx.4
  store i128 0, i128* %out382, align 4
  %out383 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter385 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out383, i128 0, i128 1, i128 1, i128 %idx.4
  %out386 = load i128, i128* %array_getter385, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out386, i128 0, i1* @constraint.140)
  %ptr_getter387 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out389 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter387, i128 0, i128 1, i128 1, i128 %idx.4
  store i128 0, i128* %out389, align 4
  %out390 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter392 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out390, i128 0, i128 4, i128 0, i128 %idx.4
  %out393 = load i128, i128* %array_getter392, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out393, i128 0, i1* @constraint.141)
  %ptr_getter394 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out396 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter394, i128 0, i128 4, i128 0, i128 %idx.4
  store i128 0, i128* %out396, align 4
  %out397 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter399 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out397, i128 0, i128 4, i128 1, i128 %idx.4
  %out400 = load i128, i128* %array_getter399, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out400, i128 0, i1* @constraint.142)
  %ptr_getter401 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out403 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter401, i128 0, i128 4, i128 1, i128 %idx.4
  store i128 0, i128* %out403, align 4
  %out404 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter406 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out404, i128 0, i128 5, i128 0, i128 %idx.4
  %out407 = load i128, i128* %array_getter406, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out407, i128 0, i1* @constraint.143)
  %ptr_getter408 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out410 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter408, i128 0, i128 5, i128 0, i128 %idx.4
  store i128 0, i128* %out410, align 4
  %out411 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter413 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out411, i128 0, i128 5, i128 1, i128 %idx.4
  %out414 = load i128, i128* %array_getter413, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out414, i128 0, i1* @constraint.144)
  %ptr_getter415 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out417 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter415, i128 0, i128 5, i128 1, i128 %idx.4
  store i128 0, i128* %out417, align 4
  %mul422 = mul i128 2, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub423 = sub i128 %mul422, 1
  %slt424 = icmp slt i128 %idx.4, %sub423
  br i1 %slt424, label %if.true418, label %if.false419

if.true418:                                       ; preds = %loop.body375
  %struct_getter426 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter426, align 8
  %array_getter428 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter, i128 0, i128 0, i128 %idx.4
  %x_cu3429 = load i128, i128* %array_getter428, align 4
  %struct_getter431 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter432 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter431, align 8
  %array_getter434 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter432, i128 0, i128 2, i128 %idx.4
  %x_cu3435 = load i128, i128* %array_getter434, align 4
  %sub436 = sub i128 %x_cu3429, %x_cu3435
  %struct_getter438 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter439 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter438, align 8
  %array_getter441 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter439, i128 0, i128 0, i128 %idx.4
  %y_sq2442 = load i128, i128* %array_getter441, align 4
  %sub443 = sub i128 %sub436, %y_sq2442
  %struct_getter445 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter446 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter445, align 8
  %array_getter448 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter446, i128 0, i128 2, i128 %idx.4
  %y_sq2449 = load i128, i128* %array_getter448, align 4
  %add450 = add i128 %sub443, %y_sq2449
  %out451 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter453 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out451, i128 0, i128 0, i128 0, i128 %idx.4
  %out454 = load i128, i128* %array_getter453, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out454, i128 %add450, i1* @constraint.145)
  %ptr_getter455 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out457 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter455, i128 0, i128 0, i128 0, i128 %idx.4
  store i128 %add450, i128* %out457, align 4
  %struct_getter459 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter460 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter459, align 8
  %array_getter462 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter460, i128 0, i128 1, i128 %idx.4
  %x_cu3463 = load i128, i128* %array_getter462, align 4
  %struct_getter465 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call145, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter466 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter465, align 8
  %array_getter468 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter466, i128 0, i128 1, i128 %idx.4
  %y_sq2469 = load i128, i128* %array_getter468, align 4
  %sub470 = sub i128 %x_cu3463, %y_sq2469
  %out471 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter473 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out471, i128 0, i128 0, i128 1, i128 %idx.4
  %out474 = load i128, i128* %array_getter473, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out474, i128 %sub470, i1* @constraint.146)
  %ptr_getter475 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out477 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter475, i128 0, i128 0, i128 1, i128 %idx.4
  store i128 %sub470, i128* %out477, align 4
  %struct_getter479 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter479, align 8
  %array_getter481 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 0, i128 %idx.4
  %Ymult482 = load i128, i128* %array_getter481, align 4
  %out483 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter485 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out483, i128 0, i128 3, i128 0, i128 %idx.4
  %out486 = load i128, i128* %array_getter485, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out486, i128 %Ymult482, i1* @constraint.147)
  %ptr_getter487 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out489 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter487, i128 0, i128 3, i128 0, i128 %idx.4
  store i128 %Ymult482, i128* %out489, align 4
  %struct_getter491 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call300, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter492 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter491, align 8
  %array_getter494 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter492, i128 0, i128 1, i128 %idx.4
  %Ymult495 = load i128, i128* %array_getter494, align 4
  %out496 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter498 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out496, i128 0, i128 3, i128 1, i128 %idx.4
  %out499 = load i128, i128* %array_getter498, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out499, i128 %Ymult495, i1* @constraint.148)
  %ptr_getter500 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out502 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter500, i128 0, i128 3, i128 1, i128 %idx.4
  store i128 %Ymult495, i128* %out502, align 4
  br label %if.exit550

if.false419:                                      ; preds = %loop.body375
  %struct_getter504 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter505 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter504, align 8
  %array_getter507 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter505, i128 0, i128 0, i128 %idx.4
  %x_cu3508 = load i128, i128* %array_getter507, align 4
  %struct_getter510 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter511 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter510, align 8
  %array_getter513 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter511, i128 0, i128 2, i128 %idx.4
  %x_cu3514 = load i128, i128* %array_getter513, align 4
  %sub515 = sub i128 %x_cu3508, %x_cu3514
  %out516 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter518 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out516, i128 0, i128 0, i128 0, i128 %idx.4
  %out519 = load i128, i128* %array_getter518, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out519, i128 %sub515, i1* @constraint.149)
  %ptr_getter520 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out522 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter520, i128 0, i128 0, i128 0, i128 %idx.4
  store i128 %sub515, i128* %out522, align 4
  %struct_getter524 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call61, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter525 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter524, align 8
  %array_getter527 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter525, i128 0, i128 1, i128 %idx.4
  %x_cu3528 = load i128, i128* %array_getter527, align 4
  %out529 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter531 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out529, i128 0, i128 0, i128 1, i128 %idx.4
  %out532 = load i128, i128* %array_getter531, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out532, i128 %x_cu3528, i1* @constraint.150)
  %ptr_getter533 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out535 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter533, i128 0, i128 0, i128 1, i128 %idx.4
  store i128 %x_cu3528, i128* %out535, align 4
  %out536 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter538 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out536, i128 0, i128 3, i128 0, i128 %idx.4
  %out539 = load i128, i128* %array_getter538, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out539, i128 0, i1* @constraint.151)
  %ptr_getter540 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out542 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter540, i128 0, i128 3, i128 0, i128 %idx.4
  store i128 0, i128* %out542, align 4
  %out543 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter545 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out543, i128 0, i128 3, i128 1, i128 %idx.4
  %out546 = load i128, i128* %array_getter545, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out546, i128 0, i1* @constraint.152)
  %ptr_getter547 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out549 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter547, i128 0, i128 3, i128 1, i128 %idx.4
  store i128 0, i128* %out549, align 4
  br label %if.exit550

if.exit550:                                       ; preds = %if.false419, %if.true418
  %struct_getter552 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter553 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter552, align 8
  %array_getter555 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter553, i128 0, i128 0, i128 %idx.4
  %Xmult556 = load i128, i128* %array_getter555, align 4
  %out557 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter559 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out557, i128 0, i128 2, i128 0, i128 %idx.4
  %out560 = load i128, i128* %array_getter559, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out560, i128 %Xmult556, i1* @constraint.153)
  %ptr_getter561 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out563 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter561, i128 0, i128 2, i128 0, i128 %idx.4
  store i128 %Xmult556, i128* %out563, align 4
  %struct_getter565 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call209, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter566 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter565, align 8
  %array_getter568 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter566, i128 0, i128 1, i128 %idx.4
  %Xmult569 = load i128, i128* %array_getter568, align 4
  %out570 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %array_getter572 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out570, i128 0, i128 2, i128 1, i128 %idx.4
  %out573 = load i128, i128* %array_getter572, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out573, i128 %Xmult569, i1* @constraint.154)
  %ptr_getter574 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %out576 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter574, i128 0, i128 2, i128 1, i128 %idx.4
  store i128 %Xmult569, i128* %out576, align 4
  br label %loop.latch577

loop.latch577:                                    ; preds = %if.exit550
  %add579 = add i128 %idx.4, 1
  %mul582 = mul i128 3, %signedlinefunctionequalnocarryfp2.k.read_arg_inner
  %sub583 = sub i128 %mul582, 2
  %slt584 = icmp slt i128 %add579, %sub583
  br i1 %slt584, label %loop.body375, label %loop.exit585

loop.exit585:                                     ; preds = %loop.latch577
  br label %arraydim

arraydim:                                         ; preds = %loop.exit585
  %ptr_cast = bitcast [256 x [256 x i128]]** %signedlinefunctionequalnocarryfp2.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner)
  %ptr_cast586 = bitcast [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast586, i128 6, i128 2, i128 %sub)
  %ptr_cast587 = bitcast [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast587, i128 2, i128 2, i128 %signedlinefunctionequalnocarryfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out588 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.declare_output, align 8
  %signedlinefunctionequalnocarryfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out588, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarryfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedlinefunctionequalnocarryfp2* @fn_template_build_signedlinefunctionequalnocarryfp2(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedlinefunctionequalnocarryfp2 = alloca %struct_template_circuit_signedlinefunctionequalnocarryfp2, align 8
  %signedlinefunctionequalnocarryfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %struct_template_circuit_signedlinefunctionequalnocarryfp2, i32 0, i32 0
  store i128 %0, i128* %signedlinefunctionequalnocarryfp2.n.write_arg_inner, align 4
  %signedlinefunctionequalnocarryfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %struct_template_circuit_signedlinefunctionequalnocarryfp2, i32 0, i32 1
  store i128 %1, i128* %signedlinefunctionequalnocarryfp2.k.write_arg_inner, align 4
  %signedlinefunctionequalnocarryfp2.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %struct_template_circuit_signedlinefunctionequalnocarryfp2, i32 0, i32 2
  store i128 %2, i128* %signedlinefunctionequalnocarryfp2.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedlinefunctionequalnocarryfp2* %struct_template_circuit_signedlinefunctionequalnocarryfp2
}

define void @fn_template_init_modsum(%struct_template_circuit_modsum* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 0
  %modsum.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 1
  %modsum.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 2
  %modsum.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %sum = call i128 @fn_intrinsic_utils_init()
  %carry = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %modsum.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add = add i128 %modsum.n.read_arg_inner, 1
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add)
  %add4 = add i128 %modsum.a.read_input_inner, %modsum.b.read_input_inner
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter6, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %add4, i1* @constraint.155)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %add4, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter8, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %modsum.n.read_arg_inner
  %n2b10 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry, i128 %n2b10, i1* @constraint.156)
  %modsum.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 4
  store i128 %n2b10, i128* %modsum.carry.write_output_inner, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 4
  %modsum.carry.read_output_inner = load i128, i128* %struct_getter14, align 4
  %add17 = add i128 %modsum.a.read_input_inner, %modsum.b.read_input_inner
  %lshift = shl i128 1, %modsum.n.read_arg_inner
  %mul = mul i128 %modsum.carry.read_output_inner, %lshift
  %sub = sub i128 %add17, %mul
  call void @fn_intrinsic_utils_constraint(i128 %sum, i128 %sub, i1* @constraint.157)
  %modsum.sum.write_output_inner = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 3
  store i128 %sub, i128* %modsum.sum.write_output_inner, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 3
  %modsum.sum.read_output_inner = load i128, i128* %struct_getter23, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  br label %exit

exit:                                             ; preds = %arraydim
  %modsum.sum.write_output_inner25 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 3
  store i128 %modsum.sum.read_output_inner, i128* %modsum.sum.write_output_inner25, align 4
  %modsum.carry.write_output_inner27 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 4
  store i128 %modsum.carry.read_output_inner, i128* %modsum.carry.write_output_inner27, align 4
  ret void
}

define %struct_template_circuit_modsum* @fn_template_build_modsum(i128 %0) {
entry:
  %struct_template_circuit_modsum = alloca %struct_template_circuit_modsum, align 8
  %modsum.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %struct_template_circuit_modsum, i32 0, i32 0
  store i128 %0, i128* %modsum.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsum* %struct_template_circuit_modsum
}

define void @fn_template_init_signedfp12fp2multiplynocarryunequal(%struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 0
  %signedfp12fp2multiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 1
  %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 2
  %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 3
  %signedfp12fp2multiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 4
  %signedfp12fp2multiplynocarryunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %signedfp12fp2multiplynocarryunequal.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp12fp2multiplynocarryunequal.a.read_input_inner, [256 x [256 x i128]]** %signedfp12fp2multiplynocarryunequal.a.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 5
  %signedfp12fp2multiplynocarryunequal.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %signedfp12fp2multiplynocarryunequal.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12fp2multiplynocarryunequal.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.b.declare_input, align 8
  %j6 = call i128 @fn_intrinsic_utils_init()
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %ab = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, align 8
  %ab8 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %abi = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, align 8
  %abi9 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi9, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %i10 = call i128 @fn_intrinsic_utils_init()
  %signedfp12fp2multiplynocarryunequal.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output, align 8
  %add = add i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner
  %sub = sub i128 %add, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch138, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add140, %loop.latch138 ]
  br label %loop.body13

loop.body13:                                      ; preds = %loop.latch132, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add134, %loop.latch132 ]
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp12fp2multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.m_out.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %ab18 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call, %struct_template_circuit_bigmultshortlongunequal** %ab18, align 8
  %call23 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp12fp2multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.m_out.read_arg_inner)
  %ptr_getter24 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %abi27 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter24, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call23, %struct_template_circuit_bigmultshortlongunequal** %abi27, align 8
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch, %loop.body13
  %idx.0 = phi i128 [ 0, %loop.body13 ], [ %add73, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp12fp2multiplynocarryunequal.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 0, i128 %idx.0
  %a30 = load i128, i128* %array_getter, align 4
  %ab31 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab31, i128 0, i128 %i.0, i128 %j.0
  %ab35 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter34, align 8
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab35, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %idx.0
  %ab39 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab39, i128 %a30, i1* @constraint.158)
  %ptr_getter40 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter43 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter40, i128 0, i128 %i.0, i128 %j.0
  %ab44 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter43, align 8
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab44, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter46 = load [256 x i128]*, [256 x i128]** %struct_getter45, align 8
  %ab48 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter46, i128 0, i128 %idx.0
  store i128 %a30, i128* %ab48, align 4
  %a49 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp12fp2multiplynocarryunequal.a.declare_input, align 8
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a49, i128 0, i128 1, i128 %idx.0
  %a52 = load i128, i128* %array_getter51, align 4
  %abi53 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi53, i128 0, i128 %i.0, i128 %j.0
  %abi57 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi57, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter59, i128 0, i128 %idx.0
  %abi62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_utils_constraint(i128 %abi62, i128 %a52, i1* @constraint.159)
  %ptr_getter63 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %array_getter66 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter63, i128 0, i128 %i.0, i128 %j.0
  %abi67 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter66, align 8
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi67, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter69 = load [256 x i128]*, [256 x i128]** %struct_getter68, align 8
  %abi71 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter69, i128 0, i128 %idx.0
  store i128 %a52, i128* %abi71, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body28
  %add73 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add73, %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body28, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body76

loop.body76:                                      ; preds = %loop.latch125, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add127, %loop.latch125 ]
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.b.declare_input, align 8
  %array_getter80 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b81 = load i128, i128* %array_getter80, align 4
  %ab82 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter85 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab82, i128 0, i128 %i.0, i128 %j.0
  %ab86 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter85, align 8
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab86, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %array_getter89 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %idx.1
  %ab90 = load i128, i128* %array_getter89, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab90, i128 %b81, i1* @constraint.160)
  %ptr_getter91 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter91, i128 0, i128 %i.0, i128 %j.0
  %ab95 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter94, align 8
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab95, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter97 = load [256 x i128]*, [256 x i128]** %struct_getter96, align 8
  %ab99 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter97, i128 0, i128 %idx.1
  store i128 %b81, i128* %ab99, align 4
  %b100 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.b.declare_input, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b100, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b105 = load i128, i128* %array_getter104, align 4
  %abi106 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %array_getter109 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi106, i128 0, i128 %i.0, i128 %j.0
  %abi110 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter109, align 8
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi110, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter112 = load [256 x i128]*, [256 x i128]** %struct_getter111, align 8
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter112, i128 0, i128 %idx.1
  %abi115 = load i128, i128* %array_getter114, align 4
  call void @fn_intrinsic_utils_constraint(i128 %abi115, i128 %b105, i1* @constraint.161)
  %ptr_getter116 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %array_getter119 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ptr_getter116, i128 0, i128 %i.0, i128 %j.0
  %abi120 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter119, align 8
  %struct_getter121 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi120, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter122 = load [256 x i128]*, [256 x i128]** %struct_getter121, align 8
  %abi124 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter122, i128 0, i128 %idx.1
  store i128 %b105, i128* %abi124, align 4
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.body76
  %add127 = add i128 %idx.1, 1
  %slt130 = icmp slt i128 %add127, %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner
  br i1 %slt130, label %loop.body76, label %loop.exit131

loop.exit131:                                     ; preds = %loop.latch125
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.exit131
  %add134 = add i128 %j.0, 1
  %slt136 = icmp slt i128 %add134, 2
  br i1 %slt136, label %loop.body13, label %loop.exit137

loop.exit137:                                     ; preds = %loop.latch132
  br label %loop.latch138

loop.latch138:                                    ; preds = %loop.exit137
  %add140 = add i128 %i.0, 1
  %slt142 = icmp slt i128 %add140, 6
  br i1 %slt142, label %loop.body, label %loop.exit143

loop.exit143:                                     ; preds = %loop.latch138
  br label %loop.body144

loop.body144:                                     ; preds = %loop.latch211, %loop.exit143
  %i.1 = phi i128 [ 0, %loop.exit143 ], [ %add213, %loop.latch211 ]
  br label %loop.body145

loop.body145:                                     ; preds = %loop.latch201, %loop.body144
  %idx.2 = phi i128 [ 0, %loop.body144 ], [ %add203, %loop.latch201 ]
  %ab146 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter148 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab146, i128 0, i128 %i.1, i128 0
  %ab149 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter148, align 8
  %struct_getter150 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab149, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter150, align 8
  %array_getter152 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %idx.2
  %ab153 = load i128, i128* %array_getter152, align 4
  %abi154 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi154, i128 0, i128 %i.1, i128 1
  %abi157 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter156, align 8
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi157, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter159 = load [256 x i128]*, [256 x i128]** %struct_getter158, align 8
  %array_getter161 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter159, i128 0, i128 %idx.2
  %abi162 = load i128, i128* %array_getter161, align 4
  %sub163 = sub i128 %ab153, %abi162
  %out164 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out164, i128 0, i128 %i.1, i128 0, i128 %idx.2
  %out168 = load i128, i128* %array_getter167, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out168, i128 %sub163, i1* @constraint.162)
  %ptr_getter169 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output, align 8
  %out172 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter169, i128 0, i128 %i.1, i128 0, i128 %idx.2
  store i128 %sub163, i128* %out172, align 4
  %abi173 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi, align 8
  %array_getter175 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi173, i128 0, i128 %i.1, i128 0
  %abi176 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter175, align 8
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi176, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter178 = load [256 x i128]*, [256 x i128]** %struct_getter177, align 8
  %array_getter180 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter178, i128 0, i128 %idx.2
  %abi181 = load i128, i128* %array_getter180, align 4
  %ab182 = load [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab, align 8
  %array_getter184 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab182, i128 0, i128 %i.1, i128 1
  %ab185 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter184, align 8
  %struct_getter186 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab185, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter187 = load [256 x i128]*, [256 x i128]** %struct_getter186, align 8
  %array_getter189 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter187, i128 0, i128 %idx.2
  %ab190 = load i128, i128* %array_getter189, align 4
  %add191 = add i128 %abi181, %ab190
  %out192 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output, align 8
  %array_getter195 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out192, i128 0, i128 %i.1, i128 1, i128 %idx.2
  %out196 = load i128, i128* %array_getter195, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out196, i128 %add191, i1* @constraint.163)
  %ptr_getter197 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output, align 8
  %out200 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter197, i128 0, i128 %i.1, i128 1, i128 %idx.2
  store i128 %add191, i128* %out200, align 4
  br label %loop.latch201

loop.latch201:                                    ; preds = %loop.body145
  %add203 = add i128 %idx.2, 1
  %add207 = add i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner
  %sub208 = sub i128 %add207, 1
  %slt209 = icmp slt i128 %add203, %sub208
  br i1 %slt209, label %loop.body145, label %loop.exit210

loop.exit210:                                     ; preds = %loop.latch201
  br label %loop.latch211

loop.latch211:                                    ; preds = %loop.exit210
  %add213 = add i128 %i.1, 1
  %slt215 = icmp slt i128 %add213, 6
  br i1 %slt215, label %loop.body144, label %loop.exit216

loop.exit216:                                     ; preds = %loop.latch211
  br label %arraydim

arraydim:                                         ; preds = %loop.exit216
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %ab to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2)
  %ptr_cast217 = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]** %abi to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast217, i128 6, i128 2)
  %ptr_cast218 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast218, i128 6, i128 2, i128 %sub)
  %ptr_cast219 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast219, i128 6, i128 2, i128 %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner)
  %ptr_cast220 = bitcast [256 x [256 x i128]]** %signedfp12fp2multiplynocarryunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast220, i128 2, i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out221 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.declare_output, align 8
  %signedfp12fp2multiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out221, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12fp2multiplynocarryunequal* @fn_template_build_signedfp12fp2multiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp12fp2multiplynocarryunequal = alloca %struct_template_circuit_signedfp12fp2multiplynocarryunequal, align 8
  %signedfp12fp2multiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp12fp2multiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp12fp2multiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp12fp2multiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp12fp2multiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp12fp2multiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp12fp2multiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp12fp2multiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal
}

define [256 x i128]* @long_add4(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4, [256 x i128]* %5) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %carry4 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add30, %loop.latch ]
  %carry.0 = phi i128 [ 0, %entry ], [ %sumAndCarry28, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a6 = load i128, i128* %array_getter, align 4
  %array_getter8 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b9 = load i128, i128* %array_getter8, align 4
  %add = add i128 %a6, %b9
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %c12 = load i128, i128* %array_getter11, align 4
  %add13 = add i128 %add, %c12
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %5, i128 0, i128 %i.0
  %d16 = load i128, i128* %array_getter15, align 4
  %add17 = add i128 %add13, %d16
  %add19 = add i128 %add17, %carry.0
  %call = call [256 x i128]* @SplitFn(i128 %add19, i128 %0, i128 %0)
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 0
  %sumAndCarry23 = load i128, i128* %array_getter22, align 4
  %sum25 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry23, i128* %sum25, align 4
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 1
  %sumAndCarry28 = load i128, i128* %array_getter27, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add30 = add i128 %i.0, 1
  %slt = icmp slt i128 %add30, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sum35 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %1
  store i128 %sumAndCarry28, i128* %sum35, align 4
  ret [256 x i128]* %uniform_array
}

define void @fn_template_init_signedfp12fp2multiplynocarry(%struct_template_circuit_signedfp12fp2multiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 0
  %signedfp12fp2multiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 1
  %signedfp12fp2multiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 2
  %signedfp12fp2multiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 3
  %signedfp12fp2multiplynocarry.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %signedfp12fp2multiplynocarry.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp12fp2multiplynocarry.a.read_input_inner, [256 x [256 x i128]]** %signedfp12fp2multiplynocarry.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 4
  %signedfp12fp2multiplynocarry.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %signedfp12fp2multiplynocarry.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12fp2multiplynocarry.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.b.declare_input, align 8
  %signedfp12fp2multiplynocarry.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output, align 8
  %abi = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, align 8
  %abi5 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi5, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %j6 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  %ab = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, align 8
  %ab8 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab8, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %idx9 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %signedfp12fp2multiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch134, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add136, %loop.latch134 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch128, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add130, %loop.latch128 ]
  %call = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedfp12fp2multiplynocarry.n.read_arg_inner, i128 %signedfp12fp2multiplynocarry.k.read_arg_inner, i128 %signedfp12fp2multiplynocarry.m_out.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %ab16 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlong* %call, %struct_template_circuit_bigmultshortlong** %ab16, align 8
  %call20 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedfp12fp2multiplynocarry.n.read_arg_inner, i128 %signedfp12fp2multiplynocarry.k.read_arg_inner, i128 %signedfp12fp2multiplynocarry.m_out.read_arg_inner)
  %ptr_getter21 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %abi24 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter21, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlong* %call20, %struct_template_circuit_bigmultshortlong** %abi24, align 8
  br label %loop.body25

loop.body25:                                      ; preds = %loop.latch, %loop.body12
  %idx.0 = phi i128 [ 0, %loop.body12 ], [ %add, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp12fp2multiplynocarry.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 0, i128 %idx.0
  %a27 = load i128, i128* %array_getter, align 4
  %ab28 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab28, i128 0, i128 %i.0, i128 %j.0
  %ab32 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter31, align 8
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab32, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter33, align 8
  %array_getter35 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %idx.0
  %ab36 = load i128, i128* %array_getter35, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab36, i128 %a27, i1* @constraint.164)
  %ptr_getter37 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter37, i128 0, i128 %i.0, i128 %j.0
  %ab41 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter40, align 8
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab41, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter43 = load [256 x i128]*, [256 x i128]** %struct_getter42, align 8
  %ab45 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter43, i128 0, i128 %idx.0
  store i128 %a27, i128* %ab45, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.b.declare_input, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b50 = load i128, i128* %array_getter49, align 4
  %ab51 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab51, i128 0, i128 %i.0, i128 %j.0
  %ab55 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter54, align 8
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab55, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %idx.0
  %ab59 = load i128, i128* %array_getter58, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab59, i128 %b50, i1* @constraint.165)
  %ptr_getter60 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter63 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter60, i128 0, i128 %i.0, i128 %j.0
  %ab64 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter63, align 8
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab64, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter66 = load [256 x i128]*, [256 x i128]** %struct_getter65, align 8
  %ab68 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter66, i128 0, i128 %idx.0
  store i128 %b50, i128* %ab68, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body25
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12fp2multiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body25, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch121, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add123, %loop.latch121 ]
  %a73 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp12fp2multiplynocarry.a.declare_input, align 8
  %array_getter75 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a73, i128 0, i128 1, i128 %idx.1
  %a76 = load i128, i128* %array_getter75, align 4
  %abi77 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %array_getter80 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi77, i128 0, i128 %i.0, i128 %j.0
  %abi81 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter80, align 8
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi81, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter83 = load [256 x i128]*, [256 x i128]** %struct_getter82, align 8
  %array_getter85 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter83, i128 0, i128 %idx.1
  %abi86 = load i128, i128* %array_getter85, align 4
  call void @fn_intrinsic_utils_constraint(i128 %abi86, i128 %a76, i1* @constraint.166)
  %ptr_getter87 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %array_getter90 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter87, i128 0, i128 %i.0, i128 %j.0
  %abi91 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter90, align 8
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi91, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter93 = load [256 x i128]*, [256 x i128]** %struct_getter92, align 8
  %abi95 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter93, i128 0, i128 %idx.1
  store i128 %a76, i128* %abi95, align 4
  %b96 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.b.declare_input, align 8
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b96, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b101 = load i128, i128* %array_getter100, align 4
  %abi102 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %array_getter105 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi102, i128 0, i128 %i.0, i128 %j.0
  %abi106 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter105, align 8
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi106, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter108 = load [256 x i128]*, [256 x i128]** %struct_getter107, align 8
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter108, i128 0, i128 %idx.1
  %abi111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_utils_constraint(i128 %abi111, i128 %b101, i1* @constraint.167)
  %ptr_getter112 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %array_getter115 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter112, i128 0, i128 %i.0, i128 %j.0
  %abi116 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter115, align 8
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi116, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter118 = load [256 x i128]*, [256 x i128]** %struct_getter117, align 8
  %abi120 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter118, i128 0, i128 %idx.1
  store i128 %b101, i128* %abi120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body72
  %add123 = add i128 %idx.1, 1
  %slt126 = icmp slt i128 %add123, %signedfp12fp2multiplynocarry.k.read_arg_inner
  br i1 %slt126, label %loop.body72, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %j.0, 1
  %slt132 = icmp slt i128 %add130, 2
  br i1 %slt132, label %loop.body12, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch128
  br label %loop.latch134

loop.latch134:                                    ; preds = %loop.exit133
  %add136 = add i128 %i.0, 1
  %slt138 = icmp slt i128 %add136, 6
  br i1 %slt138, label %loop.body, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch134
  br label %loop.body140

loop.body140:                                     ; preds = %loop.latch206, %loop.exit139
  %i.1 = phi i128 [ 0, %loop.exit139 ], [ %add208, %loop.latch206 ]
  br label %loop.body141

loop.body141:                                     ; preds = %loop.latch197, %loop.body140
  %idx.2 = phi i128 [ 0, %loop.body140 ], [ %add199, %loop.latch197 ]
  %ab142 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter144 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab142, i128 0, i128 %i.1, i128 0
  %ab145 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter144, align 8
  %struct_getter146 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab145, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter146, align 8
  %array_getter148 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %idx.2
  %ab149 = load i128, i128* %array_getter148, align 4
  %abi150 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi150, i128 0, i128 %i.1, i128 1
  %abi153 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter152, align 8
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi153, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %array_getter157 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter155, i128 0, i128 %idx.2
  %abi158 = load i128, i128* %array_getter157, align 4
  %sub159 = sub i128 %ab149, %abi158
  %out160 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output, align 8
  %array_getter163 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out160, i128 0, i128 %i.1, i128 0, i128 %idx.2
  %out164 = load i128, i128* %array_getter163, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out164, i128 %sub159, i1* @constraint.168)
  %ptr_getter165 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output, align 8
  %out168 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter165, i128 0, i128 %i.1, i128 0, i128 %idx.2
  store i128 %sub159, i128* %out168, align 4
  %abi169 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi169, i128 0, i128 %i.1, i128 0
  %abi172 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter171, align 8
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi172, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter174 = load [256 x i128]*, [256 x i128]** %struct_getter173, align 8
  %array_getter176 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter174, i128 0, i128 %idx.2
  %abi177 = load i128, i128* %array_getter176, align 4
  %ab178 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter180 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab178, i128 0, i128 %i.1, i128 1
  %ab181 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter180, align 8
  %struct_getter182 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab181, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter183 = load [256 x i128]*, [256 x i128]** %struct_getter182, align 8
  %array_getter185 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter183, i128 0, i128 %idx.2
  %ab186 = load i128, i128* %array_getter185, align 4
  %add187 = add i128 %abi177, %ab186
  %out188 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output, align 8
  %array_getter191 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out188, i128 0, i128 %i.1, i128 1, i128 %idx.2
  %out192 = load i128, i128* %array_getter191, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out192, i128 %add187, i1* @constraint.169)
  %ptr_getter193 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output, align 8
  %out196 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter193, i128 0, i128 %i.1, i128 1, i128 %idx.2
  store i128 %add187, i128* %out196, align 4
  br label %loop.latch197

loop.latch197:                                    ; preds = %loop.body141
  %add199 = add i128 %idx.2, 1
  %mul202 = mul i128 2, %signedfp12fp2multiplynocarry.k.read_arg_inner
  %sub203 = sub i128 %mul202, 1
  %slt204 = icmp slt i128 %add199, %sub203
  br i1 %slt204, label %loop.body141, label %loop.exit205

loop.exit205:                                     ; preds = %loop.latch197
  br label %loop.latch206

loop.latch206:                                    ; preds = %loop.exit205
  %add208 = add i128 %i.1, 1
  %slt210 = icmp slt i128 %add208, 6
  br i1 %slt210, label %loop.body140, label %loop.exit211

loop.exit211:                                     ; preds = %loop.latch206
  br label %arraydim

arraydim:                                         ; preds = %loop.exit211
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %abi to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2)
  %ptr_cast212 = bitcast [256 x [256 x i128]]** %signedfp12fp2multiplynocarry.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast212, i128 2, i128 %signedfp12fp2multiplynocarry.k.read_arg_inner)
  %ptr_cast213 = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast213, i128 6, i128 2)
  %ptr_cast214 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast214, i128 6, i128 2, i128 %signedfp12fp2multiplynocarry.k.read_arg_inner)
  %ptr_cast215 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast215, i128 6, i128 2, i128 %sub)
  br label %exit

exit:                                             ; preds = %arraydim
  %out216 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.declare_output, align 8
  %signedfp12fp2multiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out216, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12fp2multiplynocarry* @fn_template_build_signedfp12fp2multiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp12fp2multiplynocarry = alloca %struct_template_circuit_signedfp12fp2multiplynocarry, align 8
  %signedfp12fp2multiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12fp2multiplynocarry.n.write_arg_inner, align 4
  %signedfp12fp2multiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12fp2multiplynocarry.k.write_arg_inner, align 4
  %signedfp12fp2multiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp12fp2multiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry
}

define void @fn_template_init_signedfp12multiplynocarry(%struct_template_circuit_signedfp12multiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 0
  %signedfp12multiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 1
  %signedfp12multiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 2
  %signedfp12multiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %signedfp12multiplynocarry.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %signedfp12multiplynocarry.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.b.declare_input, align 8
  %l5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %j7 = call i128 @fn_intrinsic_utils_init()
  %idx8 = call i128 @fn_intrinsic_utils_init()
  %signedfp12multiplynocarry.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.declare_output, align 8
  %mul = mul i128 2, %signedfp12multiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %call = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %signedfp12multiplynocarry.n.read_arg_inner, i128 %signedfp12multiplynocarry.k.read_arg_inner, i128 %signedfp12multiplynocarry.k.read_arg_inner, i128 %signedfp12multiplynocarry.m_out.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch63, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add65, %loop.latch63 ]
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch57, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add59, %loop.latch57 ]
  br label %loop.body17

loop.body17:                                      ; preds = %loop.latch, %loop.body16
  %idx.0 = phi i128 [ 0, %loop.body16 ], [ %add, %loop.latch ]
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %a21 = load i128, i128* %array_getter, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter23, align 8
  %array_getter27 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %mult28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult28, i128 %a21, i1* @constraint.170)
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter30 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter29, align 8
  %mult34 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter30, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %a21, i128* %mult34, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.b.declare_input, align 8
  %array_getter38 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b39 = load i128, i128* %array_getter38, align 4
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter41, align 8
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %mult46 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult46, i128 %b39, i1* @constraint.171)
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter49 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter48, align 8
  %mult53 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter49, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %b39, i128* %mult53, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body17
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12multiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body17, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch57

loop.latch57:                                     ; preds = %loop.exit
  %add59 = add i128 %j.0, 1
  %slt61 = icmp slt i128 %add59, 2
  br i1 %slt61, label %loop.body16, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch57
  br label %loop.latch63

loop.latch63:                                     ; preds = %loop.exit62
  %add65 = add i128 %i.0, 1
  %slt68 = icmp slt i128 %add65, 6
  br i1 %slt68, label %loop.body, label %loop.exit69

loop.exit69:                                      ; preds = %loop.latch63
  br label %loop.body70

loop.body70:                                      ; preds = %loop.latch106, %loop.exit69
  %i.1 = phi i128 [ 0, %loop.exit69 ], [ %add108, %loop.latch106 ]
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch100, %loop.body70
  %j.1 = phi i128 [ 0, %loop.body70 ], [ %add102, %loop.latch100 ]
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch91, %loop.body71
  %idx.1 = phi i128 [ 0, %loop.body71 ], [ %add93, %loop.latch91 ]
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter74, align 8
  %array_getter78 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %mult79 = load i128, i128* %array_getter78, align 4
  %out80 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.declare_output, align 8
  %array_getter84 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out80, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %out85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out85, i128 %mult79, i1* @constraint.172)
  %ptr_getter86 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.declare_output, align 8
  %out90 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter86, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %mult79, i128* %out90, align 4
  br label %loop.latch91

loop.latch91:                                     ; preds = %loop.body72
  %add93 = add i128 %idx.1, 1
  %mul96 = mul i128 2, %signedfp12multiplynocarry.k.read_arg_inner
  %sub97 = sub i128 %mul96, 1
  %slt98 = icmp slt i128 %add93, %sub97
  br i1 %slt98, label %loop.body72, label %loop.exit99

loop.exit99:                                      ; preds = %loop.latch91
  br label %loop.latch100

loop.latch100:                                    ; preds = %loop.exit99
  %add102 = add i128 %j.1, 1
  %slt104 = icmp slt i128 %add102, 2
  br i1 %slt104, label %loop.body71, label %loop.exit105

loop.exit105:                                     ; preds = %loop.latch100
  br label %loop.latch106

loop.latch106:                                    ; preds = %loop.exit105
  %add108 = add i128 %i.1, 1
  %slt111 = icmp slt i128 %add108, 6
  br i1 %slt111, label %loop.body70, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch106
  br label %arraydim

arraydim:                                         ; preds = %loop.exit112
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %sub)
  %ptr_cast113 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast113, i128 6, i128 2, i128 %signedfp12multiplynocarry.k.read_arg_inner)
  %ptr_cast114 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast114, i128 6, i128 2, i128 %signedfp12multiplynocarry.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out115 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.declare_output, align 8
  %signedfp12multiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out115, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp12multiplynocarry = alloca %struct_template_circuit_signedfp12multiplynocarry, align 8
  %signedfp12multiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12multiplynocarry.n.write_arg_inner, align 4
  %signedfp12multiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12multiplynocarry.k.write_arg_inner, align 4
  %signedfp12multiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp12multiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry
}

define void @fn_template_init_greaterthan(%struct_template_circuit_greaterthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 0
  %greaterthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 1
  %greaterthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %greaterthan.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %greaterthan.in.read_input_inner, [256 x i128]** %greaterthan.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %greaterthan.n.read_arg_inner)
  %in = load [256 x i128]*, [256 x i128]** %greaterthan.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 1
  %in2 = load i128, i128* %array_getter, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter5, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt6, i128 %in2, i1* @constraint.173)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %in2, i128* %lt9, align 4
  %in10 = load [256 x i128]*, [256 x i128]** %greaterthan.in.declare_input, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %in10, i128 0, i128 0
  %in12 = load i128, i128* %array_getter11, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter15, i128 0, i128 1
  %lt17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt17, i128 %in12, i1* @constraint.174)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %lt21 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter20, i128 0, i128 1
  store i128 %in12, i128* %lt21, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %lessthan.out.read_output_outter, i1* @constraint.175)
  %greaterthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_outter, i128* %greaterthan.out.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 2
  %greaterthan.out.read_output_inner = load i128, i128* %struct_getter27, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  %ptr_cast = bitcast [256 x i128]** %greaterthan.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %greaterthan.out.write_output_inner29 = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 2
  store i128 %greaterthan.out.read_output_inner, i128* %greaterthan.out.write_output_inner29, align 4
  ret void
}

define %struct_template_circuit_greaterthan* @fn_template_build_greaterthan(i128 %0) {
entry:
  %struct_template_circuit_greaterthan = alloca %struct_template_circuit_greaterthan, align 8
  %greaterthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %struct_template_circuit_greaterthan, i32 0, i32 0
  store i128 %0, i128* %greaterthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_greaterthan* %struct_template_circuit_greaterthan
}

define [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %call = call i128 @long_gt(i128 %0, i128 %1, [256 x i128]* %3, [256 x i128]* %2)
  %eq = icmp eq i128 %call, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %call7 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %3)
  %call8 = call [256 x i128]* @long_add(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %call7)
  ret [256 x i128]* %call8

if.false:                                         ; preds = %entry
  %call13 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  ret [256 x i128]* %call13
}

define i128 @short_div(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %ret1 = call i128 @fn_intrinsic_utils_init()
  %scale2 = call i128 @fn_intrinsic_utils_init()
  %lshift = shl i128 1, %0
  %sub = sub i128 %1, 1
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub
  %b5 = load i128, i128* %array_getter, align 4
  %add = add i128 1, %b5
  %sdiv = sdiv i128 %lshift, %add
  %add8 = add i128 %1, 1
  %call = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %add8, i128 %sdiv, [256 x i128]* %2)
  %call14 = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %sdiv, [256 x i128]* %3)
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %call14, i128 0, i128 %1
  %norm_b18 = load i128, i128* %array_getter17, align 4
  %ne = icmp ne i128 %norm_b18, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %add21 = add i128 %1, 1
  %call24 = call i128 @short_div_norm(i128 %0, i128 %add21, [256 x i128]* %call, [256 x i128]* %call14)
  br label %if.exit

if.false:                                         ; preds = %entry
  %call29 = call i128 @short_div_norm(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %call14)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %ret.0 = phi i128 [ %call24, %if.true ], [ %call29, %if.false ]
  ret i128 %ret.0
}

define void @fn_template_init_bigmult(%struct_template_circuit_bigmult* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 0
  %bigmult.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 1
  %bigmult.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 2
  %bigmult.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigmult.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmult.a.read_input_inner, [256 x i128]** %bigmult.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 3
  %bigmult.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigmult.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmult.b.read_input_inner, [256 x i128]** %bigmult.b.declare_input, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %LOGK5 = call i128 @fn_intrinsic_utils_init()
  %bigmult.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigmult.out.declare_output, align 8
  %mul = mul i128 2, %bigmult.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %bigmult.k.read_arg_inner)
  %mul11 = mul i128 2, %bigmult.n.read_arg_inner
  %add = add i128 %mul11, %call
  %call13 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %bigmult.n.read_arg_inner, i128 %bigmult.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add39, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %bigmult.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a15 = load i128, i128* %array_getter, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call13, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %mult20 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult20, i128 %a15, i1* @constraint.176)
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call13, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter22 = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %mult24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter22, i128 0, i128 %i.0
  store i128 %a15, i128* %mult24, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigmult.b.declare_input, align 8
  %array_getter26 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b27 = load i128, i128* %array_getter26, align 4
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call13, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter29, align 8
  %array_getter31 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %mult32 = load i128, i128* %array_getter31, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult32, i128 %b27, i1* @constraint.177)
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call13, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter35 = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %mult37 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter35, i128 0, i128 %i.0
  store i128 %b27, i128* %mult37, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add39 = add i128 %i.0, 1
  %slt = icmp slt i128 %add39, %bigmult.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul44 = mul i128 2, %bigmult.k.read_arg_inner
  %sub = sub i128 %mul44, 1
  %call45 = call %struct_template_circuit_longtoshortnoendcarry* @fn_template_build_longtoshortnoendcarry(i128 %bigmult.n.read_arg_inner, i128 %sub)
  br label %loop.body46

loop.body46:                                      ; preds = %loop.latch62, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add64, %loop.latch62 ]
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call13, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter48, align 8
  %array_getter50 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %mult51 = load i128, i128* %array_getter50, align 4
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %call45, i32 0, i32 2
  %longtoshortnoendcarry.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter53, align 8
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_outter, i128 0, i128 %i.1
  %longshort56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %longshort56, i128 %mult51, i1* @constraint.178)
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %call45, i32 0, i32 2
  %longtoshortnoendcarry.in.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %longshort61 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_outter59, i128 0, i128 %i.1
  store i128 %mult51, i128* %longshort61, align 4
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.body46
  %add64 = add i128 %i.1, 1
  %mul67 = mul i128 2, %bigmult.k.read_arg_inner
  %sub68 = sub i128 %mul67, 1
  %slt69 = icmp slt i128 %add64, %sub68
  br i1 %slt69, label %loop.body46, label %loop.exit70

loop.exit70:                                      ; preds = %loop.latch62
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch84, %loop.exit70
  %i.2 = phi i128 [ 0, %loop.exit70 ], [ %add86, %loop.latch84 ]
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %call45, i32 0, i32 4
  %longtoshortnoendcarry.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter73, align 8
  %array_getter75 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.out.read_output_outter, i128 0, i128 %i.2
  %longshort76 = load i128, i128* %array_getter75, align 4
  %out77 = load [256 x i128]*, [256 x i128]** %bigmult.out.declare_output, align 8
  %array_getter79 = getelementptr inbounds [256 x i128], [256 x i128]* %out77, i128 0, i128 %i.2
  %out80 = load i128, i128* %array_getter79, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out80, i128 %longshort76, i1* @constraint.179)
  %ptr_getter81 = load [256 x i128]*, [256 x i128]** %bigmult.out.declare_output, align 8
  %out83 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter81, i128 0, i128 %i.2
  store i128 %longshort76, i128* %out83, align 4
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.body71
  %add86 = add i128 %i.2, 1
  %mul89 = mul i128 2, %bigmult.k.read_arg_inner
  %slt90 = icmp slt i128 %add86, %mul89
  br i1 %slt90, label %loop.body71, label %loop.exit91

loop.exit91:                                      ; preds = %loop.latch84
  br label %arraydim

arraydim:                                         ; preds = %loop.exit91
  %ptr_cast = bitcast [256 x i128]** %bigmult.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigmult.k.read_arg_inner)
  %ptr_cast92 = bitcast [256 x i128]** %bigmult.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast92, i128 %bigmult.k.read_arg_inner)
  %ptr_cast93 = bitcast [256 x i128]** %bigmult.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast93, i128 %mul)
  br label %exit

exit:                                             ; preds = %arraydim
  %out94 = load [256 x i128]*, [256 x i128]** %bigmult.out.declare_output, align 8
  %bigmult.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 4
  store [256 x i128]* %out94, [256 x i128]** %bigmult.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmult = alloca %struct_template_circuit_bigmult, align 8
  %bigmult.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %struct_template_circuit_bigmult, i32 0, i32 0
  store i128 %0, i128* %bigmult.n.write_arg_inner, align 4
  %bigmult.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %struct_template_circuit_bigmult, i32 0, i32 1
  store i128 %1, i128* %bigmult.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmult* %struct_template_circuit_bigmult
}

define void @fn_template_init_signedfp2multiplynocarry(%struct_template_circuit_signedfp2multiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 0
  %signedfp2multiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 1
  %signedfp2multiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 2
  %signedfp2multiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %signedfp2multiplynocarry.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarry.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %signedfp2multiplynocarry.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarry.b.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %signedfp2multiplynocarry.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarry.out.declare_output, align 8
  %j6 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %signedfp2multiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %call = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %signedfp2multiplynocarry.n.read_arg_inner, i128 %signedfp2multiplynocarry.k.read_arg_inner, i128 %signedfp2multiplynocarry.k.read_arg_inner, i128 %signedfp2multiplynocarry.m_out.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch45, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add47, %loop.latch45 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarry.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i.0, i128 %j.0
  %a14 = load i128, i128* %array_getter, align 4
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter16, align 8
  %array_getter19 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %mult20 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult20, i128 %a14, i1* @constraint.180)
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter22 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter21, align 8
  %mult25 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter22, i128 0, i128 %i.0, i128 %j.0
  store i128 %a14, i128* %mult25, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarry.b.declare_input, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i.0, i128 %j.0
  %b29 = load i128, i128* %array_getter28, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %mult35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult35, i128 %b29, i1* @constraint.181)
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter38 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter37, align 8
  %mult41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter38, i128 0, i128 %i.0, i128 %j.0
  store i128 %b29, i128* %mult41, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %signedfp2multiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch45

loop.latch45:                                     ; preds = %loop.exit
  %add47 = add i128 %i.0, 1
  %slt49 = icmp slt i128 %add47, 2
  br i1 %slt49, label %loop.body, label %loop.exit50

loop.exit50:                                      ; preds = %loop.latch45
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch77, %loop.exit50
  %i.1 = phi i128 [ 0, %loop.exit50 ], [ %add79, %loop.latch77 ]
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch68, %loop.body51
  %j.1 = phi i128 [ 0, %loop.body51 ], [ %add70, %loop.latch68 ]
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter54, align 8
  %array_getter57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1
  %mult58 = load i128, i128* %array_getter57, align 4
  %out59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarry.out.declare_output, align 8
  %array_getter62 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out59, i128 0, i128 %i.1, i128 %j.1
  %out63 = load i128, i128* %array_getter62, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out63, i128 %mult58, i1* @constraint.182)
  %ptr_getter64 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarry.out.declare_output, align 8
  %out67 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter64, i128 0, i128 %i.1, i128 %j.1
  store i128 %mult58, i128* %out67, align 4
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.body52
  %add70 = add i128 %j.1, 1
  %mul73 = mul i128 2, %signedfp2multiplynocarry.k.read_arg_inner
  %sub74 = sub i128 %mul73, 1
  %slt75 = icmp slt i128 %add70, %sub74
  br i1 %slt75, label %loop.body52, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch68
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.exit76
  %add79 = add i128 %i.1, 1
  %slt81 = icmp slt i128 %add79, 2
  br i1 %slt81, label %loop.body51, label %loop.exit82

loop.exit82:                                      ; preds = %loop.latch77
  br label %arraydim

arraydim:                                         ; preds = %loop.exit82
  %ptr_cast = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarry.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %signedfp2multiplynocarry.k.read_arg_inner)
  %ptr_cast83 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast83, i128 2, i128 %sub)
  %ptr_cast84 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarry.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast84, i128 2, i128 %signedfp2multiplynocarry.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out85 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarry.out.declare_output, align 8
  %signedfp2multiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out85, [256 x [256 x i128]]** %signedfp2multiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp2multiplynocarry = alloca %struct_template_circuit_signedfp2multiplynocarry, align 8
  %signedfp2multiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarry.n.write_arg_inner, align 4
  %signedfp2multiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarry.k.write_arg_inner, align 4
  %signedfp2multiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp2multiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry
}

define void @fn_template_init_isequal(%struct_template_circuit_isequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 0
  %isequal.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter, align 8
  %isequal.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %isequal.in.read_input_inner, [256 x i128]** %isequal.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %in = load [256 x i128]*, [256 x i128]** %isequal.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 1
  %in1 = load i128, i128* %array_getter, align 4
  %in2 = load [256 x i128]*, [256 x i128]** %isequal.in.declare_input, align 8
  %array_getter3 = getelementptr inbounds [256 x i128], [256 x i128]* %in2, i128 0, i128 0
  %in4 = load i128, i128* %array_getter3, align 4
  %sub = sub i128 %in1, %in4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter6, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.183)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter8, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %iszero.out.read_output_outter, i1* @constraint.184)
  %isequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 1
  store i128 %iszero.out.read_output_outter, i128* %isequal.out.write_output_inner, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 1
  %isequal.out.read_output_inner = load i128, i128* %struct_getter12, align 4
  br label %arraydim

arraydim:                                         ; preds = %entry
  %ptr_cast = bitcast [256 x i128]** %isequal.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %isequal.out.write_output_inner14 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 1
  store i128 %isequal.out.read_output_inner, i128* %isequal.out.write_output_inner14, align 4
  ret void
}

define %struct_template_circuit_isequal* @fn_template_build_isequal() {
entry:
  %struct_template_circuit_isequal = alloca %struct_template_circuit_isequal, align 8
  ret %struct_template_circuit_isequal* %struct_template_circuit_isequal
}

define void @fn_template_init_signedfp12scalarmultiplynocarry(%struct_template_circuit_signedfp12scalarmultiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 0
  %signedfp12scalarmultiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 1
  %signedfp12scalarmultiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 2
  %signedfp12scalarmultiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %signedfp12scalarmultiplynocarry.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_inner, [256 x i128]** %signedfp12scalarmultiplynocarry.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %signedfp12scalarmultiplynocarry.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.b.declare_input, align 8
  %idx5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %ab = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, align 8
  %ab7 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]], align 8
  store [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab7, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %signedfp12scalarmultiplynocarry.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.declare_output, align 8
  %mul = mul i128 2, %signedfp12scalarmultiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch69, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add71, %loop.latch69 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch63, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add65, %loop.latch63 ]
  %call = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedfp12scalarmultiplynocarry.n.read_arg_inner, i128 %signedfp12scalarmultiplynocarry.k.read_arg_inner, i128 %signedfp12scalarmultiplynocarry.m_out.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %ab15 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlong* %call, %struct_template_circuit_bigmultshortlong** %ab15, align 8
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch, %loop.body11
  %idx.0 = phi i128 [ 0, %loop.body11 ], [ %add, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %signedfp12scalarmultiplynocarry.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %idx.0
  %a18 = load i128, i128* %array_getter, align 4
  %ab19 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter22 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab19, i128 0, i128 %i.0, i128 %j.0
  %ab23 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter22, align 8
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab23, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter24, align 8
  %array_getter26 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %idx.0
  %ab27 = load i128, i128* %array_getter26, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab27, i128 %a18, i1* @constraint.185)
  %ptr_getter28 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter28, i128 0, i128 %i.0, i128 %j.0
  %ab32 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter31, align 8
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab32, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter34 = load [256 x i128]*, [256 x i128]** %struct_getter33, align 8
  %ab36 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter34, i128 0, i128 %idx.0
  store i128 %a18, i128* %ab36, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.b.declare_input, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b41 = load i128, i128* %array_getter40, align 4
  %ab42 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter45 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab42, i128 0, i128 %i.0, i128 %j.0
  %ab46 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter45, align 8
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab46, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %idx.0
  %ab50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab50, i128 %b41, i1* @constraint.186)
  %ptr_getter51 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ptr_getter51, i128 0, i128 %i.0, i128 %j.0
  %ab55 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter54, align 8
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab55, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter57 = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %ab59 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter57, i128 0, i128 %idx.0
  store i128 %b41, i128* %ab59, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body16
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12scalarmultiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body16, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch63

loop.latch63:                                     ; preds = %loop.exit
  %add65 = add i128 %j.0, 1
  %slt67 = icmp slt i128 %add65, 2
  br i1 %slt67, label %loop.body11, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch63
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.exit68
  %add71 = add i128 %i.0, 1
  %slt73 = icmp slt i128 %add71, 6
  br i1 %slt73, label %loop.body, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch69
  br label %loop.body75

loop.body75:                                      ; preds = %loop.latch113, %loop.exit74
  %i.1 = phi i128 [ 0, %loop.exit74 ], [ %add115, %loop.latch113 ]
  br label %loop.body76

loop.body76:                                      ; preds = %loop.latch107, %loop.body75
  %j.1 = phi i128 [ 0, %loop.body75 ], [ %add109, %loop.latch107 ]
  br label %loop.body77

loop.body77:                                      ; preds = %loop.latch98, %loop.body76
  %idx.1 = phi i128 [ 0, %loop.body76 ], [ %add100, %loop.latch98 ]
  %ab78 = load [256 x [256 x %struct_template_circuit_bigmultshortlong*]]*, [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab, align 8
  %array_getter81 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab78, i128 0, i128 %i.1, i128 %j.1
  %ab82 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter81, align 8
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab82, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter83, align 8
  %array_getter85 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %idx.1
  %ab86 = load i128, i128* %array_getter85, align 4
  %out87 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.declare_output, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out87, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %out92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out92, i128 %ab86, i1* @constraint.187)
  %ptr_getter93 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.declare_output, align 8
  %out97 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter93, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %ab86, i128* %out97, align 4
  br label %loop.latch98

loop.latch98:                                     ; preds = %loop.body77
  %add100 = add i128 %idx.1, 1
  %mul103 = mul i128 2, %signedfp12scalarmultiplynocarry.k.read_arg_inner
  %sub104 = sub i128 %mul103, 1
  %slt105 = icmp slt i128 %add100, %sub104
  br i1 %slt105, label %loop.body77, label %loop.exit106

loop.exit106:                                     ; preds = %loop.latch98
  br label %loop.latch107

loop.latch107:                                    ; preds = %loop.exit106
  %add109 = add i128 %j.1, 1
  %slt111 = icmp slt i128 %add109, 2
  br i1 %slt111, label %loop.body76, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch107
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.exit112
  %add115 = add i128 %i.1, 1
  %slt117 = icmp slt i128 %add115, 6
  br i1 %slt117, label %loop.body75, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch113
  br label %arraydim

arraydim:                                         ; preds = %loop.exit118
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %signedfp12scalarmultiplynocarry.k.read_arg_inner)
  %ptr_cast119 = bitcast [256 x i128]** %signedfp12scalarmultiplynocarry.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast119, i128 %signedfp12scalarmultiplynocarry.k.read_arg_inner)
  %ptr_cast120 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast120, i128 6, i128 2, i128 %sub)
  %ptr_cast121 = bitcast [256 x [256 x %struct_template_circuit_bigmultshortlong*]]** %ab to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast121, i128 6, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %out122 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.declare_output, align 8
  %signedfp12scalarmultiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out122, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12scalarmultiplynocarry* @fn_template_build_signedfp12scalarmultiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp12scalarmultiplynocarry = alloca %struct_template_circuit_signedfp12scalarmultiplynocarry, align 8
  %signedfp12scalarmultiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12scalarmultiplynocarry.n.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12scalarmultiplynocarry.k.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp12scalarmultiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry
}

define void @fn_template_init_forceequalifenabled(%struct_template_circuit_forceequalifenabled* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_forceequalifenabled, %struct_template_circuit_forceequalifenabled* %0, i32 0, i32 0
  %forceequalifenabled.enabled.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_forceequalifenabled, %struct_template_circuit_forceequalifenabled* %0, i32 0, i32 1
  %forceequalifenabled.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %forceequalifenabled.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %forceequalifenabled.in.read_input_inner, [256 x i128]** %forceequalifenabled.in.declare_input, align 8
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %in = load [256 x i128]*, [256 x i128]** %forceequalifenabled.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 1
  %in2 = load i128, i128* %array_getter, align 4
  %in3 = load [256 x i128]*, [256 x i128]** %forceequalifenabled.in.declare_input, align 8
  %array_getter4 = getelementptr inbounds [256 x i128], [256 x i128]* %in3, i128 0, i128 0
  %in5 = load i128, i128* %array_getter4, align 4
  %sub = sub i128 %in2, %in5
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter7, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.188)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter9, align 4
  %sub10 = sub i128 1, %iszero.out.read_output_outter
  %mul = mul i128 %sub10, %forceequalifenabled.enabled.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %mul, i128 0, i1* @constraint.189)
  br label %arraydim

arraydim:                                         ; preds = %entry
  %ptr_cast = bitcast [256 x i128]** %forceequalifenabled.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_forceequalifenabled* @fn_template_build_forceequalifenabled() {
entry:
  %struct_template_circuit_forceequalifenabled = alloca %struct_template_circuit_forceequalifenabled, align 8
  ret %struct_template_circuit_forceequalifenabled* %struct_template_circuit_forceequalifenabled
}

define void @fn_template_init_bigadd(%struct_template_circuit_bigadd* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 0
  %bigadd.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 1
  %bigadd.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 2
  %bigadd.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigadd.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigadd.a.read_input_inner, [256 x i128]** %bigadd.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 3
  %bigadd.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigadd.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigadd.b.read_input_inner, [256 x i128]** %bigadd.b.declare_input, align 8
  %bigadd.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigadd.out.declare_output, align 8
  %unit = alloca [256 x %struct_template_circuit_modsumthree*]*, align 8
  %unit4 = alloca [256 x %struct_template_circuit_modsumthree*], align 8
  store [256 x %struct_template_circuit_modsumthree*]* %unit4, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %bigadd.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %add = add i128 %bigadd.k.read_arg_inner, 1
  %call = call %struct_template_circuit_modsum* @fn_template_build_modsum(i128 %bigadd.n.read_arg_inner)
  %a = load [256 x i128]*, [256 x i128]** %bigadd.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 0
  %a9 = load i128, i128* %array_getter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 1
  %modsum.a.read_input_outter = load i128, i128* %struct_getter11, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsum.a.read_input_outter, i128 %a9, i1* @constraint.190)
  %modsum.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 1
  store i128 %a9, i128* %modsum.a.write_input_outter, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigadd.b.declare_input, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 0
  %b13 = load i128, i128* %array_getter12, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 2
  %modsum.b.read_input_outter = load i128, i128* %struct_getter15, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsum.b.read_input_outter, i128 %b13, i1* @constraint.191)
  %modsum.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 2
  store i128 %b13, i128* %modsum.b.write_input_outter, align 4
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 3
  %modsum.sum.read_output_outter = load i128, i128* %struct_getter18, align 4
  %out19 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %out19, i128 0, i128 0
  %out21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out21, i128 %modsum.sum.read_output_outter, i1* @constraint.192)
  %ptr_getter22 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %out23 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter22, i128 0, i128 0
  store i128 %modsum.sum.read_output_outter, i128* %out23, align 4
  %sub = sub i128 %bigadd.k.read_arg_inner, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add108, %loop.latch ]
  %call26 = call %struct_template_circuit_modsumthree* @fn_template_build_modsumthree(i128 %bigadd.n.read_arg_inner)
  %ptr_getter27 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub29 = sub i128 %i.0, 1
  %unit30 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %ptr_getter27, i128 0, i128 %sub29
  store %struct_template_circuit_modsumthree* %call26, %struct_template_circuit_modsumthree** %unit30, align 8
  %a31 = load [256 x i128]*, [256 x i128]** %bigadd.a.declare_input, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %a31, i128 0, i128 %i.0
  %a34 = load i128, i128* %array_getter33, align 4
  %unit35 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub37 = sub i128 %i.0, 1
  %array_getter38 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit35, i128 0, i128 %sub37
  %unit39 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter38, align 8
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit39, i32 0, i32 1
  %modsumthree.a.read_input_outter = load i128, i128* %struct_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsumthree.a.read_input_outter, i128 %a34, i1* @constraint.193)
  %ptr_getter41 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub43 = sub i128 %i.0, 1
  %array_getter44 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %ptr_getter41, i128 0, i128 %sub43
  %unit45 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter44, align 8
  %modsumthree.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit45, i32 0, i32 1
  store i128 %a34, i128* %modsumthree.a.write_input_outter, align 4
  %b46 = load [256 x i128]*, [256 x i128]** %bigadd.b.declare_input, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %b46, i128 0, i128 %i.0
  %b49 = load i128, i128* %array_getter48, align 4
  %unit50 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub52 = sub i128 %i.0, 1
  %array_getter53 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit50, i128 0, i128 %sub52
  %unit54 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter53, align 8
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit54, i32 0, i32 2
  %modsumthree.b.read_input_outter = load i128, i128* %struct_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsumthree.b.read_input_outter, i128 %b49, i1* @constraint.194)
  %ptr_getter56 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub58 = sub i128 %i.0, 1
  %array_getter59 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %ptr_getter56, i128 0, i128 %sub58
  %unit60 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter59, align 8
  %modsumthree.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit60, i32 0, i32 2
  store i128 %b49, i128* %modsumthree.b.write_input_outter, align 4
  %eq = icmp eq i128 %i.0, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 4
  %modsum.carry.read_output_outter = load i128, i128* %struct_getter63, align 4
  %unit64 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub66 = sub i128 %i.0, 1
  %array_getter67 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit64, i128 0, i128 %sub66
  %unit68 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter67, align 8
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit68, i32 0, i32 3
  %modsumthree.c.read_input_outter = load i128, i128* %struct_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsumthree.c.read_input_outter, i128 %modsum.carry.read_output_outter, i1* @constraint.195)
  %ptr_getter70 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub72 = sub i128 %i.0, 1
  %array_getter73 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %ptr_getter70, i128 0, i128 %sub72
  %unit74 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter73, align 8
  %modsumthree.c.write_input_outter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit74, i32 0, i32 3
  store i128 %modsum.carry.read_output_outter, i128* %modsumthree.c.write_input_outter, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %unit75 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub77 = sub i128 %i.0, 2
  %array_getter78 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit75, i128 0, i128 %sub77
  %unit79 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter78, align 8
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit79, i32 0, i32 5
  %modsumthree.carry.read_output_outter = load i128, i128* %struct_getter80, align 4
  %unit81 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub83 = sub i128 %i.0, 1
  %array_getter84 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit81, i128 0, i128 %sub83
  %unit85 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter84, align 8
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit85, i32 0, i32 3
  %modsumthree.c.read_input_outter87 = load i128, i128* %struct_getter86, align 4
  call void @fn_intrinsic_utils_constraint(i128 %modsumthree.c.read_input_outter87, i128 %modsumthree.carry.read_output_outter, i1* @constraint.196)
  %ptr_getter88 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub90 = sub i128 %i.0, 1
  %array_getter91 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %ptr_getter88, i128 0, i128 %sub90
  %unit92 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter91, align 8
  %modsumthree.c.write_input_outter93 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit92, i32 0, i32 3
  store i128 %modsumthree.carry.read_output_outter, i128* %modsumthree.c.write_input_outter93, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %unit94 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub96 = sub i128 %i.0, 1
  %array_getter97 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit94, i128 0, i128 %sub96
  %unit98 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter97, align 8
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit98, i32 0, i32 4
  %modsumthree.sum.read_output_outter = load i128, i128* %struct_getter99, align 4
  %out100 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %array_getter102 = getelementptr inbounds [256 x i128], [256 x i128]* %out100, i128 0, i128 %i.0
  %out103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out103, i128 %modsumthree.sum.read_output_outter, i1* @constraint.197)
  %ptr_getter104 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %out106 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter104, i128 0, i128 %i.0
  store i128 %modsumthree.sum.read_output_outter, i128* %out106, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add108 = add i128 %i.0, 1
  %slt = icmp slt i128 %add108, %bigadd.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %unit111 = load [256 x %struct_template_circuit_modsumthree*]*, [256 x %struct_template_circuit_modsumthree*]** %unit, align 8
  %sub113 = sub i128 %bigadd.k.read_arg_inner, 2
  %array_getter114 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit111, i128 0, i128 %sub113
  %unit115 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter114, align 8
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit115, i32 0, i32 5
  %modsumthree.carry.read_output_outter117 = load i128, i128* %struct_getter116, align 4
  %out118 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %array_getter120 = getelementptr inbounds [256 x i128], [256 x i128]* %out118, i128 0, i128 %bigadd.k.read_arg_inner
  %out121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out121, i128 %modsumthree.carry.read_output_outter117, i1* @constraint.198)
  %ptr_getter122 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %out124 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter122, i128 0, i128 %bigadd.k.read_arg_inner
  store i128 %modsumthree.carry.read_output_outter117, i128* %out124, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %bigadd.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigadd.k.read_arg_inner)
  %ptr_cast125 = bitcast [256 x i128]** %bigadd.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast125, i128 %add)
  %ptr_cast126 = bitcast [256 x %struct_template_circuit_modsumthree*]** %unit to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast126, i128 %sub)
  %ptr_cast127 = bitcast [256 x i128]** %bigadd.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast127, i128 %bigadd.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out128 = load [256 x i128]*, [256 x i128]** %bigadd.out.declare_output, align 8
  %bigadd.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 4
  store [256 x i128]* %out128, [256 x i128]** %bigadd.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigadd = alloca %struct_template_circuit_bigadd, align 8
  %bigadd.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %struct_template_circuit_bigadd, i32 0, i32 0
  store i128 %0, i128* %bigadd.n.write_arg_inner, align 4
  %bigadd.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %struct_template_circuit_bigadd, i32 0, i32 1
  store i128 %1, i128* %bigadd.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigadd* %struct_template_circuit_bigadd
}

define void @fn_template_init_signedlinefunctionunequalnocarryfp2(%struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0, i32 0, i32 0
  %signedlinefunctionunequalnocarryfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0, i32 0, i32 1
  %signedlinefunctionunequalnocarryfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0, i32 0, i32 2
  %signedlinefunctionunequalnocarryfp2.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter3, align 8
  %signedlinefunctionunequalnocarryfp2.p.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0, i32 0, i32 4
  %signedlinefunctionunequalnocarryfp2.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %signedlinefunctionunequalnocarryfp2.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedlinefunctionunequalnocarryfp2.q.read_input_inner, [256 x [256 x i128]]** %signedlinefunctionunequalnocarryfp2.q.declare_input, align 8
  %signedlinefunctionunequalnocarryfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %idx5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %LOGK7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %signedlinefunctionunequalnocarryfp2.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %call = call i128 @log_ceil(i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner)
  %mul14 = mul i128 2, %signedlinefunctionunequalnocarryfp2.n.read_arg_inner
  %add = add i128 %mul14, %call
  %add16 = add i128 %add, 1
  %call17 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedlinefunctionunequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner, i128 %add16)
  %mul21 = mul i128 2, %signedlinefunctionunequalnocarryfp2.n.read_arg_inner
  %add23 = add i128 %mul21, %call
  %add24 = add i128 %add23, 1
  %call25 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedlinefunctionunequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner, i128 %add24)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch75, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add77, %loop.latch75 ]
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add72, %loop.latch ]
  %P = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P, i128 0, i128 0, i128 1, i128 %i.0, i128 %j.0
  %P29 = load i128, i128* %array_getter, align 4
  %P30 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P30, i128 0, i128 1, i128 1, i128 %i.0, i128 %j.0
  %P34 = load i128, i128* %array_getter33, align 4
  %sub35 = sub i128 %P29, %P34
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter37, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %Xmult41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult41, i128 %sub35, i1* @constraint.199)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter43 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter42, align 8
  %Xmult46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter43, i128 0, i128 %i.0, i128 %j.0
  store i128 %sub35, i128* %Xmult46, align 4
  %P47 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P47, i128 0, i128 1, i128 0, i128 %i.0, i128 %j.0
  %P51 = load i128, i128* %array_getter50, align 4
  %P52 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P52, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %P56 = load i128, i128* %array_getter55, align 4
  %sub57 = sub i128 %P51, %P56
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter60 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter59, align 8
  %array_getter63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter60, i128 0, i128 %i.0, i128 %j.0
  %Ymult64 = load i128, i128* %array_getter63, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult64, i128 %sub57, i1* @constraint.200)
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter66, align 8
  %Ymult70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter67, i128 0, i128 %i.0, i128 %j.0
  store i128 %sub57, i128* %Ymult70, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body26
  %add72 = add i128 %j.0, 1
  %slt = icmp slt i128 %add72, %signedlinefunctionunequalnocarryfp2.k.read_arg_inner
  br i1 %slt, label %loop.body26, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.exit
  %add77 = add i128 %i.0, 1
  %slt79 = icmp slt i128 %add77, 2
  br i1 %slt79, label %loop.body, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch75
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch132, %loop.exit80
  %idx.0 = phi i128 [ 0, %loop.exit80 ], [ %add134, %loop.latch132 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionunequalnocarryfp2.q.declare_input, align 8
  %array_getter83 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 0, i128 %idx.0
  %Q84 = load i128, i128* %array_getter83, align 4
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter86, align 8
  %array_getter88 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 0, i128 %idx.0
  %Xmult89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult89, i128 %Q84, i1* @constraint.201)
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter92 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter91, align 8
  %Xmult94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter92, i128 0, i128 0, i128 %idx.0
  store i128 %Q84, i128* %Xmult94, align 4
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter97 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter96, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter97, i128 0, i128 1, i128 %idx.0
  %Xmult100 = load i128, i128* %array_getter99, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult100, i128 0, i1* @constraint.202)
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter103 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter102, align 8
  %Xmult105 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter103, i128 0, i128 1, i128 %idx.0
  store i128 0, i128* %Xmult105, align 4
  %Q106 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionunequalnocarryfp2.q.declare_input, align 8
  %array_getter108 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q106, i128 0, i128 1, i128 %idx.0
  %Q109 = load i128, i128* %array_getter108, align 4
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter112 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter111, align 8
  %array_getter114 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter112, i128 0, i128 0, i128 %idx.0
  %Ymult115 = load i128, i128* %array_getter114, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult115, i128 %Q109, i1* @constraint.203)
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter117, align 8
  %Ymult120 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter118, i128 0, i128 0, i128 %idx.0
  store i128 %Q109, i128* %Ymult120, align 4
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter123 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter122, align 8
  %array_getter125 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter123, i128 0, i128 1, i128 %idx.0
  %Ymult126 = load i128, i128* %array_getter125, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult126, i128 0, i1* @constraint.204)
  %struct_getter128 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter129 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter128, align 8
  %Ymult131 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter129, i128 0, i128 1, i128 %idx.0
  store i128 0, i128* %Ymult131, align 4
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.body81
  %add134 = add i128 %idx.0, 1
  %slt137 = icmp slt i128 %add134, %signedlinefunctionunequalnocarryfp2.k.read_arg_inner
  br i1 %slt137, label %loop.body81, label %loop.exit138

loop.exit138:                                     ; preds = %loop.latch132
  %call141 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %signedlinefunctionunequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner, i128 2)
  %call144 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %signedlinefunctionunequalnocarryfp2.n.read_arg_inner, i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner, i128 2)
  br label %loop.body145

loop.body145:                                     ; preds = %loop.latch224, %loop.exit138
  %i.1 = phi i128 [ 0, %loop.exit138 ], [ %add226, %loop.latch224 ]
  br label %loop.body146

loop.body146:                                     ; preds = %loop.latch217, %loop.body145
  %j.1 = phi i128 [ 0, %loop.body145 ], [ %add219, %loop.latch217 ]
  %P147 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P147, i128 0, i128 0, i128 0, i128 %i.1, i128 %j.1
  %P151 = load i128, i128* %array_getter150, align 4
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter153, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter, i128 0, i128 %i.1, i128 %j.1
  %x1y2157 = load i128, i128* %array_getter156, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x1y2157, i128 %P151, i1* @constraint.205)
  %struct_getter159 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter160 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter159, align 8
  %x1y2163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter160, i128 0, i128 %i.1, i128 %j.1
  store i128 %P151, i128* %x1y2163, align 4
  %P164 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P164, i128 0, i128 1, i128 1, i128 %i.1, i128 %j.1
  %P168 = load i128, i128* %array_getter167, align 4
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter170, align 8
  %array_getter173 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter, i128 0, i128 %i.1, i128 %j.1
  %x1y2174 = load i128, i128* %array_getter173, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x1y2174, i128 %P168, i1* @constraint.206)
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter177 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter176, align 8
  %x1y2180 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter177, i128 0, i128 %i.1, i128 %j.1
  store i128 %P168, i128* %x1y2180, align 4
  %P181 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P181, i128 0, i128 1, i128 0, i128 %i.1, i128 %j.1
  %P185 = load i128, i128* %array_getter184, align 4
  %struct_getter187 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter188 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter187, align 8
  %array_getter191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter188, i128 0, i128 %i.1, i128 %j.1
  %x2y1192 = load i128, i128* %array_getter191, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x2y1192, i128 %P185, i1* @constraint.207)
  %struct_getter194 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter195 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter194, align 8
  %x2y1198 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter195, i128 0, i128 %i.1, i128 %j.1
  store i128 %P185, i128* %x2y1198, align 4
  %P199 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input, align 8
  %array_getter202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P199, i128 0, i128 0, i128 1, i128 %i.1, i128 %j.1
  %P203 = load i128, i128* %array_getter202, align 4
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter206 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter205, align 8
  %array_getter209 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter206, i128 0, i128 %i.1, i128 %j.1
  %x2y1210 = load i128, i128* %array_getter209, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x2y1210, i128 %P203, i1* @constraint.208)
  %struct_getter212 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter212, align 8
  %x2y1216 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter213, i128 0, i128 %i.1, i128 %j.1
  store i128 %P203, i128* %x2y1216, align 4
  br label %loop.latch217

loop.latch217:                                    ; preds = %loop.body146
  %add219 = add i128 %j.1, 1
  %slt222 = icmp slt i128 %add219, %signedlinefunctionunequalnocarryfp2.k.read_arg_inner
  br i1 %slt222, label %loop.body146, label %loop.exit223

loop.exit223:                                     ; preds = %loop.latch217
  br label %loop.latch224

loop.latch224:                                    ; preds = %loop.exit223
  %add226 = add i128 %i.1, 1
  %slt228 = icmp slt i128 %add226, 2
  br i1 %slt228, label %loop.body145, label %loop.exit229

loop.exit229:                                     ; preds = %loop.latch224
  br label %loop.body230

loop.body230:                                     ; preds = %loop.latch377, %loop.exit229
  %idx.1 = phi i128 [ 0, %loop.exit229 ], [ %add379, %loop.latch377 ]
  %out231 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter233 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out231, i128 0, i128 0, i128 0, i128 %idx.1
  %out234 = load i128, i128* %array_getter233, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out234, i128 0, i1* @constraint.209)
  %ptr_getter235 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out237 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter235, i128 0, i128 0, i128 0, i128 %idx.1
  store i128 0, i128* %out237, align 4
  %out238 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter240 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out238, i128 0, i128 0, i128 1, i128 %idx.1
  %out241 = load i128, i128* %array_getter240, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out241, i128 0, i1* @constraint.210)
  %ptr_getter242 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out244 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter242, i128 0, i128 0, i128 1, i128 %idx.1
  store i128 0, i128* %out244, align 4
  %out245 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter247 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out245, i128 0, i128 2, i128 0, i128 %idx.1
  %out248 = load i128, i128* %array_getter247, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out248, i128 0, i1* @constraint.211)
  %ptr_getter249 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out251 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter249, i128 0, i128 2, i128 0, i128 %idx.1
  store i128 0, i128* %out251, align 4
  %out252 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter254 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out252, i128 0, i128 2, i128 1, i128 %idx.1
  %out255 = load i128, i128* %array_getter254, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out255, i128 0, i1* @constraint.212)
  %ptr_getter256 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out258 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter256, i128 0, i128 2, i128 1, i128 %idx.1
  store i128 0, i128* %out258, align 4
  %out259 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter261 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out259, i128 0, i128 5, i128 0, i128 %idx.1
  %out262 = load i128, i128* %array_getter261, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out262, i128 0, i1* @constraint.213)
  %ptr_getter263 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out265 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter263, i128 0, i128 5, i128 0, i128 %idx.1
  store i128 0, i128* %out265, align 4
  %out266 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter268 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out266, i128 0, i128 5, i128 1, i128 %idx.1
  %out269 = load i128, i128* %array_getter268, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out269, i128 0, i1* @constraint.214)
  %ptr_getter270 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out272 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter270, i128 0, i128 5, i128 1, i128 %idx.1
  store i128 0, i128* %out272, align 4
  %struct_getter274 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter274, align 8
  %array_getter276 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter, i128 0, i128 0, i128 %idx.1
  %x1y2277 = load i128, i128* %array_getter276, align 4
  %struct_getter279 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter280 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter279, align 8
  %array_getter282 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter280, i128 0, i128 0, i128 %idx.1
  %x2y1283 = load i128, i128* %array_getter282, align 4
  %sub284 = sub i128 %x1y2277, %x2y1283
  %struct_getter286 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter287 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter286, align 8
  %array_getter289 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter287, i128 0, i128 2, i128 %idx.1
  %x1y2290 = load i128, i128* %array_getter289, align 4
  %sub291 = sub i128 %sub284, %x1y2290
  %struct_getter293 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter294 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter293, align 8
  %array_getter296 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter294, i128 0, i128 2, i128 %idx.1
  %x2y1297 = load i128, i128* %array_getter296, align 4
  %add298 = add i128 %sub291, %x2y1297
  %out299 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter301 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out299, i128 0, i128 1, i128 0, i128 %idx.1
  %out302 = load i128, i128* %array_getter301, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out302, i128 %add298, i1* @constraint.215)
  %ptr_getter303 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out305 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter303, i128 0, i128 1, i128 0, i128 %idx.1
  store i128 %add298, i128* %out305, align 4
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call141, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter308 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter307, align 8
  %array_getter310 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter308, i128 0, i128 1, i128 %idx.1
  %x1y2311 = load i128, i128* %array_getter310, align 4
  %struct_getter313 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call144, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter314 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter313, align 8
  %array_getter316 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter314, i128 0, i128 1, i128 %idx.1
  %x2y1317 = load i128, i128* %array_getter316, align 4
  %sub318 = sub i128 %x1y2311, %x2y1317
  %out319 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter321 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out319, i128 0, i128 1, i128 1, i128 %idx.1
  %out322 = load i128, i128* %array_getter321, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out322, i128 %sub318, i1* @constraint.216)
  %ptr_getter323 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out325 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter323, i128 0, i128 1, i128 1, i128 %idx.1
  store i128 %sub318, i128* %out325, align 4
  %struct_getter327 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter327, align 8
  %array_getter329 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 0, i128 0, i128 %idx.1
  %Xmult330 = load i128, i128* %array_getter329, align 4
  %out331 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter333 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out331, i128 0, i128 3, i128 0, i128 %idx.1
  %out334 = load i128, i128* %array_getter333, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out334, i128 %Xmult330, i1* @constraint.217)
  %ptr_getter335 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out337 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter335, i128 0, i128 3, i128 0, i128 %idx.1
  store i128 %Xmult330, i128* %out337, align 4
  %struct_getter339 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call17, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter340 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter339, align 8
  %array_getter342 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter340, i128 0, i128 1, i128 %idx.1
  %Xmult343 = load i128, i128* %array_getter342, align 4
  %out344 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter346 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out344, i128 0, i128 3, i128 1, i128 %idx.1
  %out347 = load i128, i128* %array_getter346, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out347, i128 %Xmult343, i1* @constraint.218)
  %ptr_getter348 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out350 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter348, i128 0, i128 3, i128 1, i128 %idx.1
  store i128 %Xmult343, i128* %out350, align 4
  %struct_getter352 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter353 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter352, align 8
  %array_getter355 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter353, i128 0, i128 0, i128 %idx.1
  %Ymult356 = load i128, i128* %array_getter355, align 4
  %out357 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter359 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out357, i128 0, i128 4, i128 0, i128 %idx.1
  %out360 = load i128, i128* %array_getter359, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out360, i128 %Ymult356, i1* @constraint.219)
  %ptr_getter361 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out363 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter361, i128 0, i128 4, i128 0, i128 %idx.1
  store i128 %Ymult356, i128* %out363, align 4
  %struct_getter365 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call25, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter366 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter365, align 8
  %array_getter368 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter366, i128 0, i128 1, i128 %idx.1
  %Ymult369 = load i128, i128* %array_getter368, align 4
  %out370 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %array_getter372 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out370, i128 0, i128 4, i128 1, i128 %idx.1
  %out373 = load i128, i128* %array_getter372, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out373, i128 %Ymult369, i1* @constraint.220)
  %ptr_getter374 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %out376 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter374, i128 0, i128 4, i128 1, i128 %idx.1
  store i128 %Ymult369, i128* %out376, align 4
  br label %loop.latch377

loop.latch377:                                    ; preds = %loop.body230
  %add379 = add i128 %idx.1, 1
  %mul382 = mul i128 2, %signedlinefunctionunequalnocarryfp2.k.read_arg_inner
  %sub383 = sub i128 %mul382, 1
  %slt384 = icmp slt i128 %add379, %sub383
  br i1 %slt384, label %loop.body230, label %loop.exit385

loop.exit385:                                     ; preds = %loop.latch377
  br label %arraydim

arraydim:                                         ; preds = %loop.exit385
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %sub)
  %ptr_cast386 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarryfp2.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast386, i128 2, i128 2, i128 2, i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner)
  %ptr_cast387 = bitcast [256 x [256 x i128]]** %signedlinefunctionunequalnocarryfp2.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast387, i128 2, i128 %signedlinefunctionunequalnocarryfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out388 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.declare_output, align 8
  %signedlinefunctionunequalnocarryfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out388, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarryfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedlinefunctionunequalnocarryfp2* @fn_template_build_signedlinefunctionunequalnocarryfp2(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedlinefunctionunequalnocarryfp2 = alloca %struct_template_circuit_signedlinefunctionunequalnocarryfp2, align 8
  %signedlinefunctionunequalnocarryfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %struct_template_circuit_signedlinefunctionunequalnocarryfp2, i32 0, i32 0
  store i128 %0, i128* %signedlinefunctionunequalnocarryfp2.n.write_arg_inner, align 4
  %signedlinefunctionunequalnocarryfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %struct_template_circuit_signedlinefunctionunequalnocarryfp2, i32 0, i32 1
  store i128 %1, i128* %signedlinefunctionunequalnocarryfp2.k.write_arg_inner, align 4
  %signedlinefunctionunequalnocarryfp2.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %struct_template_circuit_signedlinefunctionunequalnocarryfp2, i32 0, i32 2
  store i128 %2, i128* %signedlinefunctionunequalnocarryfp2.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %struct_template_circuit_signedlinefunctionunequalnocarryfp2
}

define void @fn_template_init_aliascheck(%struct_template_circuit_aliascheck* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %0, i32 0, i32 0
  %aliascheck.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter, align 8
  %aliascheck.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %aliascheck.in.read_input_inner, [256 x i128]** %aliascheck.in.declare_input, align 8
  %i1 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_compconstant* @fn_template_build_compconstant(i128 -1)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %in = load [256 x i128]*, [256 x i128]** %aliascheck.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in3 = load i128, i128* %array_getter, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %call, i32 0, i32 1
  %compconstant.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %array_getter7 = getelementptr inbounds [256 x i128], [256 x i128]* %compconstant.in.read_input_outter, i128 0, i128 %i.0
  %compConstant8 = load i128, i128* %array_getter7, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compConstant8, i128 %in3, i1* @constraint.221)
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %call, i32 0, i32 1
  %compconstant.in.read_input_outter10 = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %compConstant12 = getelementptr inbounds [256 x i128], [256 x i128]* %compconstant.in.read_input_outter10, i128 0, i128 %i.0
  store i128 %in3, i128* %compConstant12, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %call, i32 0, i32 4
  %compconstant.out.read_output_outter = load i128, i128* %struct_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compconstant.out.read_output_outter, i128 0, i1* @constraint.222)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %aliascheck.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 254)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_aliascheck* @fn_template_build_aliascheck() {
entry:
  %struct_template_circuit_aliascheck = alloca %struct_template_circuit_aliascheck, align 8
  ret %struct_template_circuit_aliascheck* %struct_template_circuit_aliascheck
}

define void @fn_template_init_bigsubmodp(%struct_template_circuit_bigsubmodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 0
  %bigsubmodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 1
  %bigsubmodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 2
  %bigsubmodp.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigsubmodp.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigsubmodp.a.read_input_inner, [256 x i128]** %bigsubmodp.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 3
  %bigsubmodp.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigsubmodp.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigsubmodp.b.read_input_inner, [256 x i128]** %bigsubmodp.b.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 4
  %bigsubmodp.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %bigsubmodp.p.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigsubmodp.p.read_input_inner, [256 x i128]** %bigsubmodp.p.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %bigsubmodp.tmp.declare_inter = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %tmp, [256 x i128]** %bigsubmodp.tmp.declare_inter, align 8
  %bigsubmodp.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall6 to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigsubmodp.out.declare_output, align 8
  %flag = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %bigsubmodp.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %bigsubmodp.n.read_arg_inner, i128 %bigsubmodp.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add37, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %bigsubmodp.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a13 = load i128, i128* %array_getter, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter15, align 8
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.0
  %sub18 = load i128, i128* %array_getter17, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub18, i128 %a13, i1* @constraint.223)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %sub22 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter20, i128 0, i128 %i.0
  store i128 %a13, i128* %sub22, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigsubmodp.b.declare_input, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b25 = load i128, i128* %array_getter24, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.0
  %sub30 = load i128, i128* %array_getter29, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub30, i128 %b25, i1* @constraint.224)
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter33 = load [256 x i128]*, [256 x i128]** %struct_getter32, align 8
  %sub35 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter33, i128 0, i128 %i.0
  store i128 %b25, i128* %sub35, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add37 = add i128 %i.0, 1
  %slt = icmp slt i128 %add37, %bigsubmodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 5
  %bigsub.underflow.read_output_outter = load i128, i128* %struct_getter41, align 4
  call void @fn_intrinsic_utils_constraint(i128 %flag, i128 %bigsub.underflow.read_output_outter, i1* @constraint.225)
  %bigsubmodp.flag.write_inter_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 5
  store i128 %bigsub.underflow.read_output_outter, i128* %bigsubmodp.flag.write_inter_inner, align 4
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 5
  %bigsubmodp.flag.read_inter_inner = load i128, i128* %struct_getter45, align 4
  %call48 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigsubmodp.n.read_arg_inner, i128 %bigsubmodp.k.read_arg_inner)
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch78, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add80, %loop.latch78 ]
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter51, align 8
  %array_getter53 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %i.1
  %sub54 = load i128, i128* %array_getter53, align 4
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call48, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.1
  %add59 = load i128, i128* %array_getter58, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add59, i128 %sub54, i1* @constraint.226)
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call48, i32 0, i32 2
  %bigadd.a.read_input_outter62 = load [256 x i128]*, [256 x i128]** %struct_getter61, align 8
  %add64 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter62, i128 0, i128 %i.1
  store i128 %sub54, i128* %add64, align 4
  %p = load [256 x i128]*, [256 x i128]** %bigsubmodp.p.declare_input, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %p, i128 0, i128 %i.1
  %p67 = load i128, i128* %array_getter66, align 4
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call48, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.1
  %add72 = load i128, i128* %array_getter71, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add72, i128 %p67, i1* @constraint.227)
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call48, i32 0, i32 3
  %bigadd.b.read_input_outter75 = load [256 x i128]*, [256 x i128]** %struct_getter74, align 8
  %add77 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter75, i128 0, i128 %i.1
  store i128 %p67, i128* %add77, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body49
  %add80 = add i128 %i.1, 1
  %slt83 = icmp slt i128 %add80, %bigsubmodp.k.read_arg_inner
  br i1 %slt83, label %loop.body49, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch121, %loop.exit84
  %i.2 = phi i128 [ 0, %loop.exit84 ], [ %add123, %loop.latch121 ]
  %sub88 = sub i128 1, %bigsubmodp.flag.read_inter_inner
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter91 = load [256 x i128]*, [256 x i128]** %struct_getter90, align 8
  %array_getter93 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter91, i128 0, i128 %i.2
  %sub94 = load i128, i128* %array_getter93, align 4
  %mul = mul i128 %sub88, %sub94
  %tmp95 = load [256 x i128]*, [256 x i128]** %bigsubmodp.tmp.declare_inter, align 8
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp95, i128 0, i128 %i.2
  %tmp98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp98, i128 %mul, i1* @constraint.228)
  %ptr_getter99 = load [256 x i128]*, [256 x i128]** %bigsubmodp.tmp.declare_inter, align 8
  %tmp101 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter99, i128 0, i128 %i.2
  store i128 %mul, i128* %tmp101, align 4
  %tmp102 = load [256 x i128]*, [256 x i128]** %bigsubmodp.tmp.declare_inter, align 8
  %array_getter104 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp102, i128 0, i128 %i.2
  %tmp105 = load i128, i128* %array_getter104, align 4
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call48, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter108, align 8
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.2
  %add111 = load i128, i128* %array_getter110, align 4
  %mul112 = mul i128 %bigsubmodp.flag.read_inter_inner, %add111
  %add113 = add i128 %tmp105, %mul112
  %out114 = load [256 x i128]*, [256 x i128]** %bigsubmodp.out.declare_output, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %out114, i128 0, i128 %i.2
  %out117 = load i128, i128* %array_getter116, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out117, i128 %add113, i1* @constraint.229)
  %ptr_getter118 = load [256 x i128]*, [256 x i128]** %bigsubmodp.out.declare_output, align 8
  %out120 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter118, i128 0, i128 %i.2
  store i128 %add113, i128* %out120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body86
  %add123 = add i128 %i.2, 1
  %slt126 = icmp slt i128 %add123, %bigsubmodp.k.read_arg_inner
  br i1 %slt126, label %loop.body86, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %arraydim

arraydim:                                         ; preds = %loop.exit127
  %ptr_cast = bitcast [256 x i128]** %bigsubmodp.tmp.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigsubmodp.k.read_arg_inner)
  %ptr_cast128 = bitcast [256 x i128]** %bigsubmodp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast128, i128 %bigsubmodp.k.read_arg_inner)
  %ptr_cast129 = bitcast [256 x i128]** %bigsubmodp.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast129, i128 %bigsubmodp.k.read_arg_inner)
  %ptr_cast130 = bitcast [256 x i128]** %bigsubmodp.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast130, i128 %bigsubmodp.k.read_arg_inner)
  %ptr_cast131 = bitcast [256 x i128]** %bigsubmodp.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast131, i128 %bigsubmodp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %bigsubmodp.flag.write_inter_inner133 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 5
  store i128 %bigsubmodp.flag.read_inter_inner, i128* %bigsubmodp.flag.write_inter_inner133, align 4
  %tmp134 = load [256 x i128]*, [256 x i128]** %bigsubmodp.tmp.declare_inter, align 8
  %bigsubmodp.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 6
  store [256 x i128]* %tmp134, [256 x i128]** %bigsubmodp.tmp.write_inter_inner, align 8
  %out135 = load [256 x i128]*, [256 x i128]** %bigsubmodp.out.declare_output, align 8
  %bigsubmodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 7
  store [256 x i128]* %out135, [256 x i128]** %bigsubmodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigsubmodp* @fn_template_build_bigsubmodp(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigsubmodp = alloca %struct_template_circuit_bigsubmodp, align 8
  %bigsubmodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %struct_template_circuit_bigsubmodp, i32 0, i32 0
  store i128 %0, i128* %bigsubmodp.n.write_arg_inner, align 4
  %bigsubmodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %struct_template_circuit_bigsubmodp, i32 0, i32 1
  store i128 %1, i128* %bigsubmodp.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigsubmodp* %struct_template_circuit_bigsubmodp
}

define [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %j2 = call i128 @fn_intrinsic_utils_init()
  %i4 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array8 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %a10 = load i128, i128* %array_getter, align 4
  %remainder12 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.0
  store i128 %a10, i128* %remainder12, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %add15 = add i128 %2, %1
  %slt = icmp slt i128 %add, %add15
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %uniform_array16 = alloca [256 x i128], align 8
  br label %loop.body18

loop.body18:                                      ; preds = %loop.latch117, %loop.exit
  %i.1 = phi i128 [ %2, %loop.exit ], [ %sub119, %loop.latch117 ]
  %remainder.0 = phi [256 x i128]* [ %uniform_array8, %loop.exit ], [ %call116, %loop.latch117 ]
  %eq = icmp eq i128 %i.1, %2
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body18
  %dividend23 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %1
  store i128 0, i128* %dividend23, align 4
  %sub = sub i128 %1, 1
  br label %loop.body25

if.false:                                         ; preds = %loop.body18
  br label %loop.body41

loop.body25:                                      ; preds = %loop.latch35, %if.true
  %j.0 = phi i128 [ %sub, %if.true ], [ %sub37, %loop.latch35 ]
  %add29 = add i128 %j.0, %2
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %remainder.0, i128 0, i128 %add29
  %remainder31 = load i128, i128* %array_getter30, align 4
  %dividend34 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %j.0
  store i128 %remainder31, i128* %dividend34, align 4
  br label %loop.latch35

loop.latch35:                                     ; preds = %loop.body25
  %sub37 = sub i128 %j.0, 1
  %sge = icmp sge i128 %sub37, 0
  br i1 %sge, label %loop.body25, label %loop.exit39

loop.exit39:                                      ; preds = %loop.latch35
  br label %if.exit

loop.body41:                                      ; preds = %loop.latch51, %if.false
  %j.1 = phi i128 [ %1, %if.false ], [ %sub53, %loop.latch51 ]
  %add45 = add i128 %j.1, %i.1
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %remainder.0, i128 0, i128 %add45
  %remainder47 = load i128, i128* %array_getter46, align 4
  %dividend50 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %j.1
  store i128 %remainder47, i128* %dividend50, align 4
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.body41
  %sub53 = sub i128 %j.1, 1
  %sge55 = icmp sge i128 %sub53, 0
  br i1 %sge55, label %loop.body41, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  br label %if.exit

if.exit:                                          ; preds = %loop.exit56, %loop.exit39
  %call = call i128 @short_div(i128 %0, i128 %1, [256 x i128]* %uniform_array16, [256 x i128]* %4)
  %out61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.1
  store i128 %call, i128* %out61, align 4
  %array_getter66 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.1
  %out67 = load i128, i128* %array_getter66, align 4
  %call69 = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %out67, [256 x i128]* %4)
  %uniform_array70 = alloca [256 x i128], align 8
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch75, %if.exit
  %j.2 = phi i128 [ 0, %if.exit ], [ %add77, %loop.latch75 ]
  %subtrahend74 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array70, i128 0, i128 %j.2
  store i128 0, i128* %subtrahend74, align 4
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.body71
  %add77 = add i128 %j.2, 1
  %add81 = add i128 %2, %1
  %slt82 = icmp slt i128 %add77, %add81
  br i1 %slt82, label %loop.body71, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch75
  br label %loop.body84

loop.body84:                                      ; preds = %loop.latch104, %loop.exit83
  %j.3 = phi i128 [ 0, %loop.exit83 ], [ %add106, %loop.latch104 ]
  %add89 = add i128 %i.1, %j.3
  %add92 = add i128 %2, %1
  %slt93 = icmp slt i128 %add89, %add92
  br i1 %slt93, label %if.true85, label %if.false86

if.true85:                                        ; preds = %loop.body84
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %call69, i128 0, i128 %j.3
  %mult_shift97 = load i128, i128* %array_getter96, align 4
  %add101 = add i128 %i.1, %j.3
  %subtrahend102 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array70, i128 0, i128 %add101
  store i128 %mult_shift97, i128* %subtrahend102, align 4
  br label %if.exit103

if.false86:                                       ; preds = %loop.body84
  br label %if.exit103

if.exit103:                                       ; preds = %if.false86, %if.true85
  br label %loop.latch104

loop.latch104:                                    ; preds = %if.exit103
  %add106 = add i128 %j.3, 1
  %sle = icmp sle i128 %add106, %1
  br i1 %sle, label %loop.body84, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch104
  %add113 = add i128 %2, %1
  %call116 = call [256 x i128]* @long_sub(i128 %0, i128 %add113, [256 x i128]* %remainder.0, [256 x i128]* %uniform_array70)
  br label %loop.latch117

loop.latch117:                                    ; preds = %loop.exit109
  %sub119 = sub i128 %i.1, 1
  %sge121 = icmp sge i128 %sub119, 0
  br i1 %sge121, label %loop.body18, label %loop.exit122

loop.exit122:                                     ; preds = %loop.latch117
  br label %loop.body123

loop.body123:                                     ; preds = %loop.latch131, %loop.exit122
  %i.2 = phi i128 [ 0, %loop.exit122 ], [ %add133, %loop.latch131 ]
  %array_getter126 = getelementptr inbounds [256 x i128], [256 x i128]* %call116, i128 0, i128 %i.2
  %remainder127 = load i128, i128* %array_getter126, align 4
  %out130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %i.2
  store i128 %remainder127, i128* %out130, align 4
  br label %loop.latch131

loop.latch131:                                    ; preds = %loop.body123
  %add133 = add i128 %i.2, 1
  %slt136 = icmp slt i128 %add133, %1
  br i1 %slt136, label %loop.body123, label %loop.exit137

loop.exit137:                                     ; preds = %loop.latch131
  %out140 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %1
  store i128 0, i128* %out140, align 4
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_fpnegate(%struct_template_circuit_fpnegate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 0
  %fpnegate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 1
  %fpnegate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 2
  %fpnegate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 3
  %fpnegate.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %fpnegate.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpnegate.in.read_input_inner, [256 x i128]** %fpnegate.in.declare_input, align 8
  %idx4 = call i128 @fn_intrinsic_utils_init()
  %fpnegate.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %fpnegate.out.declare_output, align 8
  %call = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %fpnegate.n.read_arg_inner, i128 %fpnegate.k.read_arg_inner)
  %call8 = call %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %fpnegate.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.p.read_arg_inner, i128 0, i128 %idx.0
  %p10 = load i128, i128* %array_getter, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter12, align 8
  %array_getter14 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %idx.0
  %neg15 = load i128, i128* %array_getter14, align 4
  call void @fn_intrinsic_utils_constraint(i128 %neg15, i128 %p10, i1* @constraint.230)
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter17 = load [256 x i128]*, [256 x i128]** %struct_getter16, align 8
  %neg19 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter17, i128 0, i128 %idx.0
  store i128 %p10, i128* %neg19, align 4
  %in = load [256 x i128]*, [256 x i128]** %fpnegate.in.declare_input, align 8
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %idx.0
  %in22 = load i128, i128* %array_getter21, align 4
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter24, align 8
  %array_getter26 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %idx.0
  %neg27 = load i128, i128* %array_getter26, align 4
  call void @fn_intrinsic_utils_constraint(i128 %neg27, i128 %in22, i1* @constraint.231)
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter30 = load [256 x i128]*, [256 x i128]** %struct_getter29, align 8
  %neg32 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter30, i128 0, i128 %idx.0
  store i128 %in22, i128* %neg32, align 4
  %in33 = load [256 x i128]*, [256 x i128]** %fpnegate.in.declare_input, align 8
  %array_getter35 = getelementptr inbounds [256 x i128], [256 x i128]* %in33, i128 0, i128 %idx.0
  %in36 = load i128, i128* %array_getter35, align 4
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call8, i32 0, i32 1
  %bigiszero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter, i128 0, i128 %idx.0
  %is_zero41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %is_zero41, i128 %in36, i1* @constraint.232)
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call8, i32 0, i32 1
  %bigiszero.in.read_input_outter44 = load [256 x i128]*, [256 x i128]** %struct_getter43, align 8
  %is_zero46 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter44, i128 0, i128 %idx.0
  store i128 %in36, i128* %is_zero46, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fpnegate.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 5
  %bigsub.underflow.read_output_outter = load i128, i128* %struct_getter51, align 4
  call void @fn_intrinsic_utils_constraint(i128 %bigsub.underflow.read_output_outter, i128 0, i1* @constraint.233)
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch67, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add69, %loop.latch67 ]
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call8, i32 0, i32 2
  %bigiszero.out.read_output_outter = load i128, i128* %struct_getter54, align 4
  %sub = sub i128 1, %bigiszero.out.read_output_outter
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %idx.1
  %neg59 = load i128, i128* %array_getter58, align 4
  %mul = mul i128 %sub, %neg59
  %out60 = load [256 x i128]*, [256 x i128]** %fpnegate.out.declare_output, align 8
  %array_getter62 = getelementptr inbounds [256 x i128], [256 x i128]* %out60, i128 0, i128 %idx.1
  %out63 = load i128, i128* %array_getter62, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out63, i128 %mul, i1* @constraint.234)
  %ptr_getter64 = load [256 x i128]*, [256 x i128]** %fpnegate.out.declare_output, align 8
  %out66 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter64, i128 0, i128 %idx.1
  store i128 %mul, i128* %out66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body52
  %add69 = add i128 %idx.1, 1
  %slt72 = icmp slt i128 %add69, %fpnegate.k.read_arg_inner
  br i1 %slt72, label %loop.body52, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  br label %arraydim

arraydim:                                         ; preds = %loop.exit73
  %ptr_cast = bitcast [256 x i128]** %fpnegate.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %fpnegate.k.read_arg_inner)
  %ptr_cast74 = bitcast [256 x i128]** %fpnegate.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast74, i128 %fpnegate.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out75 = load [256 x i128]*, [256 x i128]** %fpnegate.out.declare_output, align 8
  %fpnegate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 4
  store [256 x i128]* %out75, [256 x i128]** %fpnegate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpnegate = alloca %struct_template_circuit_fpnegate, align 8
  %fpnegate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate, i32 0, i32 0
  store i128 %0, i128* %fpnegate.n.write_arg_inner, align 4
  %fpnegate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate, i32 0, i32 1
  store i128 %1, i128* %fpnegate.k.write_arg_inner, align 4
  %fpnegate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpnegate.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate
}

define void @fn_template_init_biglessthan(%struct_template_circuit_biglessthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 0
  %biglessthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 1
  %biglessthan.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 2
  %biglessthan.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %biglessthan.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %biglessthan.a.read_input_inner, [256 x i128]** %biglessthan.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 3
  %biglessthan.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %biglessthan.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %biglessthan.b.read_input_inner, [256 x i128]** %biglessthan.b.declare_input, align 8
  %lt = alloca [256 x %struct_template_circuit_lessthan*]*, align 8
  %lt4 = alloca [256 x %struct_template_circuit_lessthan*], align 8
  store [256 x %struct_template_circuit_lessthan*]* %lt4, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %eq = alloca [256 x %struct_template_circuit_isequal*]*, align 8
  %eq5 = alloca [256 x %struct_template_circuit_isequal*], align 8
  store [256 x %struct_template_circuit_isequal*]* %eq5, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %ors = alloca [256 x %struct_template_circuit_or*]*, align 8
  %ors6 = alloca [256 x %struct_template_circuit_or*], align 8
  store [256 x %struct_template_circuit_or*]* %ors6, [256 x %struct_template_circuit_or*]** %ors, align 8
  %ands = alloca [256 x %struct_template_circuit_and*]*, align 8
  %ands7 = alloca [256 x %struct_template_circuit_and*], align 8
  store [256 x %struct_template_circuit_and*]* %ands7, [256 x %struct_template_circuit_and*]** %ands, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %eq_ands = alloca [256 x %struct_template_circuit_and*]*, align 8
  %eq_ands8 = alloca [256 x %struct_template_circuit_and*], align 8
  store [256 x %struct_template_circuit_and*]* %eq_ands8, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %i9 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %biglessthan.n.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %lt14 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_lessthan* %call, %struct_template_circuit_lessthan** %lt14, align 8
  %a = load [256 x i128]*, [256 x i128]** %biglessthan.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a16 = load i128, i128* %array_getter, align 4
  %lt17 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %array_getter19 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt17, i128 0, i128 %i.0
  %lt20 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter19, align 8
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt20, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt23 = load i128, i128* %array_getter22, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt23, i128 %a16, i1* @constraint.235)
  %ptr_getter24 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %array_getter26 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %ptr_getter24, i128 0, i128 %i.0
  %lt27 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter26, align 8
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt27, i32 0, i32 1
  %lessthan.in.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %lt30 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter29, i128 0, i128 0
  store i128 %a16, i128* %lt30, align 4
  %b = load [256 x i128]*, [256 x i128]** %biglessthan.b.declare_input, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b33 = load i128, i128* %array_getter32, align 4
  %lt34 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %array_getter36 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt34, i128 0, i128 %i.0
  %lt37 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter36, align 8
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt37, i32 0, i32 1
  %lessthan.in.read_input_outter39 = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter39, i128 0, i128 1
  %lt41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt41, i128 %b33, i1* @constraint.236)
  %ptr_getter42 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %array_getter44 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %ptr_getter42, i128 0, i128 %i.0
  %lt45 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt45, i32 0, i32 1
  %lessthan.in.read_input_outter47 = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %lt48 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter47, i128 0, i128 1
  store i128 %b33, i128* %lt48, align 4
  %call49 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %ptr_getter50 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %eq52 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter50, i128 0, i128 %i.0
  store %struct_template_circuit_isequal* %call49, %struct_template_circuit_isequal** %eq52, align 8
  %a53 = load [256 x i128]*, [256 x i128]** %biglessthan.a.declare_input, align 8
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %a53, i128 0, i128 %i.0
  %a56 = load i128, i128* %array_getter55, align 4
  %eq57 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %array_getter59 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq57, i128 0, i128 %i.0
  %eq60 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter59, align 8
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq60, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter61, align 8
  %array_getter62 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %eq63 = load i128, i128* %array_getter62, align 4
  call void @fn_intrinsic_utils_constraint(i128 %eq63, i128 %a56, i1* @constraint.237)
  %ptr_getter64 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %array_getter66 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter64, i128 0, i128 %i.0
  %eq67 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter66, align 8
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq67, i32 0, i32 0
  %isequal.in.read_input_outter69 = load [256 x i128]*, [256 x i128]** %struct_getter68, align 8
  %eq70 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter69, i128 0, i128 0
  store i128 %a56, i128* %eq70, align 4
  %b71 = load [256 x i128]*, [256 x i128]** %biglessthan.b.declare_input, align 8
  %array_getter73 = getelementptr inbounds [256 x i128], [256 x i128]* %b71, i128 0, i128 %i.0
  %b74 = load i128, i128* %array_getter73, align 4
  %eq75 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %array_getter77 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq75, i128 0, i128 %i.0
  %eq78 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter77, align 8
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq78, i32 0, i32 0
  %isequal.in.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %array_getter81 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter80, i128 0, i128 1
  %eq82 = load i128, i128* %array_getter81, align 4
  call void @fn_intrinsic_utils_constraint(i128 %eq82, i128 %b74, i1* @constraint.238)
  %ptr_getter83 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %array_getter85 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter83, i128 0, i128 %i.0
  %eq86 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter85, align 8
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq86, i32 0, i32 0
  %isequal.in.read_input_outter88 = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %eq89 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter88, i128 0, i128 1
  store i128 %b74, i128* %eq89, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %biglessthan.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %biglessthan.k.read_arg_inner, 1
  %sub95 = sub i128 %biglessthan.k.read_arg_inner, 1
  %sub97 = sub i128 %biglessthan.k.read_arg_inner, 1
  %sub99 = sub i128 %biglessthan.k.read_arg_inner, 2
  br label %loop.body100

loop.body100:                                     ; preds = %loop.latch317, %loop.exit
  %i.1 = phi i128 [ %sub99, %loop.exit ], [ %sub319, %loop.latch317 ]
  %call101 = call %struct_template_circuit_and* @fn_template_build_and()
  %ptr_getter102 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %ands104 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter102, i128 0, i128 %i.1
  store %struct_template_circuit_and* %call101, %struct_template_circuit_and** %ands104, align 8
  %call105 = call %struct_template_circuit_and* @fn_template_build_and()
  %ptr_getter106 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %eq_ands108 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter106, i128 0, i128 %i.1
  store %struct_template_circuit_and* %call105, %struct_template_circuit_and** %eq_ands108, align 8
  %call109 = call %struct_template_circuit_or* @fn_template_build_or()
  %ptr_getter110 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %ors112 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ptr_getter110, i128 0, i128 %i.1
  store %struct_template_circuit_or* %call109, %struct_template_circuit_or** %ors112, align 8
  %sub115 = sub i128 %biglessthan.k.read_arg_inner, 2
  %eq116 = icmp eq i128 %i.1, %sub115
  br i1 %eq116, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body100
  %eq117 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %sub119 = sub i128 %biglessthan.k.read_arg_inner, 1
  %array_getter120 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq117, i128 0, i128 %sub119
  %eq121 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter120, align 8
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq121, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter122, align 4
  %ands123 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter125 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands123, i128 0, i128 %i.1
  %ands126 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter125, align 8
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands126, i32 0, i32 0
  %and.a.read_input_outter = load i128, i128* %struct_getter127, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.a.read_input_outter, i128 %isequal.out.read_output_outter, i1* @constraint.239)
  %ptr_getter128 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter130 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter128, i128 0, i128 %i.1
  %ands131 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter130, align 8
  %and.a.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands131, i32 0, i32 0
  store i128 %isequal.out.read_output_outter, i128* %and.a.write_input_outter, align 4
  %lt132 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %sub134 = sub i128 %biglessthan.k.read_arg_inner, 2
  %array_getter135 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt132, i128 0, i128 %sub134
  %lt136 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter135, align 8
  %struct_getter137 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt136, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter137, align 4
  %ands138 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter140 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands138, i128 0, i128 %i.1
  %ands141 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter140, align 8
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands141, i32 0, i32 1
  %and.b.read_input_outter = load i128, i128* %struct_getter142, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.b.read_input_outter, i128 %lessthan.out.read_output_outter, i1* @constraint.240)
  %ptr_getter143 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter145 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter143, i128 0, i128 %i.1
  %ands146 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter145, align 8
  %and.b.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands146, i32 0, i32 1
  store i128 %lessthan.out.read_output_outter, i128* %and.b.write_input_outter, align 4
  %eq147 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %sub149 = sub i128 %biglessthan.k.read_arg_inner, 1
  %array_getter150 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq147, i128 0, i128 %sub149
  %eq151 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter150, align 8
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq151, i32 0, i32 1
  %isequal.out.read_output_outter153 = load i128, i128* %struct_getter152, align 4
  %eq_ands154 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter156 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands154, i128 0, i128 %i.1
  %eq_ands157 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter156, align 8
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands157, i32 0, i32 0
  %and.a.read_input_outter159 = load i128, i128* %struct_getter158, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.a.read_input_outter159, i128 %isequal.out.read_output_outter153, i1* @constraint.241)
  %ptr_getter160 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter162 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter160, i128 0, i128 %i.1
  %eq_ands163 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter162, align 8
  %and.a.write_input_outter164 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands163, i32 0, i32 0
  store i128 %isequal.out.read_output_outter153, i128* %and.a.write_input_outter164, align 4
  %eq165 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %sub167 = sub i128 %biglessthan.k.read_arg_inner, 2
  %array_getter168 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq165, i128 0, i128 %sub167
  %eq169 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter168, align 8
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq169, i32 0, i32 1
  %isequal.out.read_output_outter171 = load i128, i128* %struct_getter170, align 4
  %eq_ands172 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter174 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands172, i128 0, i128 %i.1
  %eq_ands175 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter174, align 8
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands175, i32 0, i32 1
  %and.b.read_input_outter177 = load i128, i128* %struct_getter176, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.b.read_input_outter177, i128 %isequal.out.read_output_outter171, i1* @constraint.242)
  %ptr_getter178 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter180 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter178, i128 0, i128 %i.1
  %eq_ands181 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter180, align 8
  %and.b.write_input_outter182 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands181, i32 0, i32 1
  store i128 %isequal.out.read_output_outter171, i128* %and.b.write_input_outter182, align 4
  %lt183 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %sub185 = sub i128 %biglessthan.k.read_arg_inner, 1
  %array_getter186 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt183, i128 0, i128 %sub185
  %lt187 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter186, align 8
  %struct_getter188 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt187, i32 0, i32 2
  %lessthan.out.read_output_outter189 = load i128, i128* %struct_getter188, align 4
  %ors190 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter192 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors190, i128 0, i128 %i.1
  %ors193 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter192, align 8
  %struct_getter194 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors193, i32 0, i32 0
  %or.a.read_input_outter = load i128, i128* %struct_getter194, align 4
  call void @fn_intrinsic_utils_constraint(i128 %or.a.read_input_outter, i128 %lessthan.out.read_output_outter189, i1* @constraint.243)
  %ptr_getter195 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter197 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ptr_getter195, i128 0, i128 %i.1
  %ors198 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter197, align 8
  %or.a.write_input_outter = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors198, i32 0, i32 0
  store i128 %lessthan.out.read_output_outter189, i128* %or.a.write_input_outter, align 4
  %ands199 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter201 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands199, i128 0, i128 %i.1
  %ands202 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter201, align 8
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands202, i32 0, i32 2
  %and.out.read_output_outter = load i128, i128* %struct_getter203, align 4
  %ors204 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter206 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors204, i128 0, i128 %i.1
  %ors207 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter206, align 8
  %struct_getter208 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors207, i32 0, i32 1
  %or.b.read_input_outter = load i128, i128* %struct_getter208, align 4
  call void @fn_intrinsic_utils_constraint(i128 %or.b.read_input_outter, i128 %and.out.read_output_outter, i1* @constraint.244)
  %ptr_getter209 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter211 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ptr_getter209, i128 0, i128 %i.1
  %ors212 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter211, align 8
  %or.b.write_input_outter = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors212, i32 0, i32 1
  store i128 %and.out.read_output_outter, i128* %or.b.write_input_outter, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body100
  %eq_ands213 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %add215 = add i128 %i.1, 1
  %array_getter216 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands213, i128 0, i128 %add215
  %eq_ands217 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter216, align 8
  %struct_getter218 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands217, i32 0, i32 2
  %and.out.read_output_outter219 = load i128, i128* %struct_getter218, align 4
  %ands220 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter222 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands220, i128 0, i128 %i.1
  %ands223 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter222, align 8
  %struct_getter224 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands223, i32 0, i32 0
  %and.a.read_input_outter225 = load i128, i128* %struct_getter224, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.a.read_input_outter225, i128 %and.out.read_output_outter219, i1* @constraint.245)
  %ptr_getter226 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter228 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter226, i128 0, i128 %i.1
  %ands229 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter228, align 8
  %and.a.write_input_outter230 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands229, i32 0, i32 0
  store i128 %and.out.read_output_outter219, i128* %and.a.write_input_outter230, align 4
  %lt231 = load [256 x %struct_template_circuit_lessthan*]*, [256 x %struct_template_circuit_lessthan*]** %lt, align 8
  %array_getter233 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt231, i128 0, i128 %i.1
  %lt234 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter233, align 8
  %struct_getter235 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt234, i32 0, i32 2
  %lessthan.out.read_output_outter236 = load i128, i128* %struct_getter235, align 4
  %ands237 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter239 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands237, i128 0, i128 %i.1
  %ands240 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter239, align 8
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands240, i32 0, i32 1
  %and.b.read_input_outter242 = load i128, i128* %struct_getter241, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.b.read_input_outter242, i128 %lessthan.out.read_output_outter236, i1* @constraint.246)
  %ptr_getter243 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter245 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter243, i128 0, i128 %i.1
  %ands246 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter245, align 8
  %and.b.write_input_outter247 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands246, i32 0, i32 1
  store i128 %lessthan.out.read_output_outter236, i128* %and.b.write_input_outter247, align 4
  %eq_ands248 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %add250 = add i128 %i.1, 1
  %array_getter251 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands248, i128 0, i128 %add250
  %eq_ands252 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter251, align 8
  %struct_getter253 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands252, i32 0, i32 2
  %and.out.read_output_outter254 = load i128, i128* %struct_getter253, align 4
  %eq_ands255 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter257 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands255, i128 0, i128 %i.1
  %eq_ands258 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter257, align 8
  %struct_getter259 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands258, i32 0, i32 0
  %and.a.read_input_outter260 = load i128, i128* %struct_getter259, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.a.read_input_outter260, i128 %and.out.read_output_outter254, i1* @constraint.247)
  %ptr_getter261 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter263 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter261, i128 0, i128 %i.1
  %eq_ands264 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter263, align 8
  %and.a.write_input_outter265 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands264, i32 0, i32 0
  store i128 %and.out.read_output_outter254, i128* %and.a.write_input_outter265, align 4
  %eq266 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %eq, align 8
  %array_getter268 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq266, i128 0, i128 %i.1
  %eq269 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter268, align 8
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq269, i32 0, i32 1
  %isequal.out.read_output_outter271 = load i128, i128* %struct_getter270, align 4
  %eq_ands272 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter274 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands272, i128 0, i128 %i.1
  %eq_ands275 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter274, align 8
  %struct_getter276 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands275, i32 0, i32 1
  %and.b.read_input_outter277 = load i128, i128* %struct_getter276, align 4
  call void @fn_intrinsic_utils_constraint(i128 %and.b.read_input_outter277, i128 %isequal.out.read_output_outter271, i1* @constraint.248)
  %ptr_getter278 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %eq_ands, align 8
  %array_getter280 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ptr_getter278, i128 0, i128 %i.1
  %eq_ands281 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter280, align 8
  %and.b.write_input_outter282 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands281, i32 0, i32 1
  store i128 %isequal.out.read_output_outter271, i128* %and.b.write_input_outter282, align 4
  %ors283 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %add285 = add i128 %i.1, 1
  %array_getter286 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors283, i128 0, i128 %add285
  %ors287 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter286, align 8
  %struct_getter288 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors287, i32 0, i32 2
  %or.out.read_output_outter = load i128, i128* %struct_getter288, align 4
  %ors289 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter291 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors289, i128 0, i128 %i.1
  %ors292 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter291, align 8
  %struct_getter293 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors292, i32 0, i32 0
  %or.a.read_input_outter294 = load i128, i128* %struct_getter293, align 4
  call void @fn_intrinsic_utils_constraint(i128 %or.a.read_input_outter294, i128 %or.out.read_output_outter, i1* @constraint.249)
  %ptr_getter295 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter297 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ptr_getter295, i128 0, i128 %i.1
  %ors298 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter297, align 8
  %or.a.write_input_outter299 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors298, i32 0, i32 0
  store i128 %or.out.read_output_outter, i128* %or.a.write_input_outter299, align 4
  %ands300 = load [256 x %struct_template_circuit_and*]*, [256 x %struct_template_circuit_and*]** %ands, align 8
  %array_getter302 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands300, i128 0, i128 %i.1
  %ands303 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter302, align 8
  %struct_getter304 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands303, i32 0, i32 2
  %and.out.read_output_outter305 = load i128, i128* %struct_getter304, align 4
  %ors306 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter308 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors306, i128 0, i128 %i.1
  %ors309 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter308, align 8
  %struct_getter310 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors309, i32 0, i32 1
  %or.b.read_input_outter311 = load i128, i128* %struct_getter310, align 4
  call void @fn_intrinsic_utils_constraint(i128 %or.b.read_input_outter311, i128 %and.out.read_output_outter305, i1* @constraint.250)
  %ptr_getter312 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter314 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ptr_getter312, i128 0, i128 %i.1
  %ors315 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter314, align 8
  %or.b.write_input_outter316 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors315, i32 0, i32 1
  store i128 %and.out.read_output_outter305, i128* %or.b.write_input_outter316, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch317

loop.latch317:                                    ; preds = %if.exit
  %sub319 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub319, 0
  br i1 %sge, label %loop.body100, label %loop.exit321

loop.exit321:                                     ; preds = %loop.latch317
  %ors322 = load [256 x %struct_template_circuit_or*]*, [256 x %struct_template_circuit_or*]** %ors, align 8
  %array_getter323 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors322, i128 0, i128 0
  %ors324 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter323, align 8
  %struct_getter325 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors324, i32 0, i32 2
  %or.out.read_output_outter326 = load i128, i128* %struct_getter325, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %or.out.read_output_outter326, i1* @constraint.251)
  %biglessthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 4
  store i128 %or.out.read_output_outter326, i128* %biglessthan.out.write_output_inner, align 4
  %struct_getter330 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 4
  %biglessthan.out.read_output_inner = load i128, i128* %struct_getter330, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit321
  %ptr_cast = bitcast [256 x %struct_template_circuit_and*]** %ands to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %sub95)
  %ptr_cast331 = bitcast [256 x %struct_template_circuit_and*]** %eq_ands to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast331, i128 %sub97)
  %ptr_cast332 = bitcast [256 x i128]** %biglessthan.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast332, i128 %biglessthan.k.read_arg_inner)
  %ptr_cast333 = bitcast [256 x %struct_template_circuit_isequal*]** %eq to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast333, i128 %biglessthan.k.read_arg_inner)
  %ptr_cast334 = bitcast [256 x i128]** %biglessthan.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast334, i128 %biglessthan.k.read_arg_inner)
  %ptr_cast335 = bitcast [256 x %struct_template_circuit_or*]** %ors to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast335, i128 %sub)
  %ptr_cast336 = bitcast [256 x %struct_template_circuit_lessthan*]** %lt to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast336, i128 %biglessthan.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %biglessthan.out.write_output_inner338 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 4
  store i128 %biglessthan.out.read_output_inner, i128* %biglessthan.out.write_output_inner338, align 4
  ret void
}

define %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_biglessthan = alloca %struct_template_circuit_biglessthan, align 8
  %biglessthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %struct_template_circuit_biglessthan, i32 0, i32 0
  store i128 %0, i128* %biglessthan.n.write_arg_inner, align 4
  %biglessthan.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %struct_template_circuit_biglessthan, i32 0, i32 1
  store i128 %1, i128* %biglessthan.k.write_arg_inner, align 4
  ret %struct_template_circuit_biglessthan* %struct_template_circuit_biglessthan
}

define void @fn_template_init_num2bits_strict(%struct_template_circuit_num2bits_strict* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_num2bits_strict, %struct_template_circuit_num2bits_strict* %0, i32 0, i32 0
  %num2bits_strict.in.read_input_inner = load i128, i128* %struct_getter, align 4
  %num2bits_strict.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %num2bits_strict.out.declare_output, align 8
  %i1 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_aliascheck* @fn_template_build_aliascheck()
  %call2 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 254)
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter4, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %num2bits_strict.in.read_input_inner, i1* @constraint.252)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 1
  store i128 %num2bits_strict.in.read_input_inner, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %i.0
  %n2b8 = load i128, i128* %array_getter, align 4
  %out9 = load [256 x i128]*, [256 x i128]** %num2bits_strict.out.declare_output, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %out9, i128 0, i128 %i.0
  %out12 = load i128, i128* %array_getter11, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out12, i128 %n2b8, i1* @constraint.253)
  %ptr_getter13 = load [256 x i128]*, [256 x i128]** %num2bits_strict.out.declare_output, align 8
  %out15 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter13, i128 0, i128 %i.0
  store i128 %n2b8, i128* %out15, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 2
  %num2bits.out.read_output_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter18, i128 0, i128 %i.0
  %n2b21 = load i128, i128* %array_getter20, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter, i128 0, i128 %i.0
  %aliasCheck26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_utils_constraint(i128 %aliasCheck26, i128 %n2b21, i1* @constraint.254)
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %aliasCheck31 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter29, i128 0, i128 %i.0
  store i128 %n2b21, i128* %aliasCheck31, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %num2bits_strict.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 254)
  br label %exit

exit:                                             ; preds = %arraydim
  %out34 = load [256 x i128]*, [256 x i128]** %num2bits_strict.out.declare_output, align 8
  %num2bits_strict.out.write_output_inner = getelementptr inbounds %struct_template_circuit_num2bits_strict, %struct_template_circuit_num2bits_strict* %0, i32 0, i32 1
  store [256 x i128]* %out34, [256 x i128]** %num2bits_strict.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_num2bits_strict* @fn_template_build_num2bits_strict() {
entry:
  %struct_template_circuit_num2bits_strict = alloca %struct_template_circuit_num2bits_strict, align 8
  ret %struct_template_circuit_num2bits_strict* %struct_template_circuit_num2bits_strict
}

define void @fn_template_init_bigmod2(%struct_template_circuit_bigmod2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 0
  %bigmod2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 1
  %bigmod2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 2
  %bigmod2.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 3
  %bigmod2.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigmod2.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmod2.a.read_input_inner, [256 x i128]** %bigmod2.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 4
  %bigmod2.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %bigmod2.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmod2.b.read_input_inner, [256 x i128]** %bigmod2.b.declare_input, align 8
  %mod_range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %mod_range_checks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %mod_range_checks5, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %bigmod2.div.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %div = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %div, [256 x i128]** %bigmod2.div.declare_output, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %bigmod2.mod.declare_output = alloca [256 x i128]*, align 8
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %mod = bitcast i8* %malloccall7 to [256 x i128]*
  store [256 x i128]* %mod, [256 x i128]** %bigmod2.mod.declare_output, align 8
  %div_range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %div_range_checks8 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %div_range_checks8, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %longdiv = alloca [256 x [256 x i128]]*, align 8
  %longdiv9 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %longdiv9, [256 x [256 x i128]]** %longdiv, align 8
  %sle = icmp sle i128 %bigmod2.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %sub = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %add12 = add i128 %sub, 1
  %sub18 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %a = load [256 x i128]*, [256 x i128]** %bigmod2.a.declare_input, align 8
  %b = load [256 x i128]*, [256 x i128]** %bigmod2.b.declare_input, align 8
  %call = call [256 x [256 x i128]]* @long_div2(i128 %bigmod2.n.read_arg_inner, i128 %bigmod2.k.read_arg_inner, i128 %sub18, [256 x i128]* %a, [256 x i128]* %b)
  store [256 x [256 x i128]]* %call, [256 x [256 x i128]]** %longdiv, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add25, %loop.latch ]
  %longdiv19 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %longdiv, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %longdiv19, i128 0, i128 1, i128 %i.0
  %longdiv21 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x i128]*, [256 x i128]** %bigmod2.mod.declare_output, align 8
  %mod23 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %longdiv21, i128* %mod23, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add25 = add i128 %i.0, 1
  %slt = icmp slt i128 %add25, %bigmod2.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch36, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add38, %loop.latch36 ]
  %longdiv29 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %longdiv, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %longdiv29, i128 0, i128 0, i128 %i.1
  %longdiv32 = load i128, i128* %array_getter31, align 4
  %ptr_getter33 = load [256 x i128]*, [256 x i128]** %bigmod2.div.declare_output, align 8
  %div35 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter33, i128 0, i128 %i.1
  store i128 %longdiv32, i128* %div35, align 4
  br label %loop.latch36

loop.latch36:                                     ; preds = %loop.body28
  %add38 = add i128 %i.1, 1
  %sub42 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %sle43 = icmp sle i128 %add38, %sub42
  br i1 %sle43, label %loop.body28, label %loop.exit44

loop.exit44:                                      ; preds = %loop.latch36
  %sub47 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %add48 = add i128 %sub47, 1
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch68, %loop.exit44
  %i.2 = phi i128 [ 0, %loop.exit44 ], [ %add70, %loop.latch68 ]
  %call51 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod2.n.read_arg_inner)
  %ptr_getter52 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %div_range_checks54 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter52, i128 0, i128 %i.2
  store %struct_template_circuit_num2bits* %call51, %struct_template_circuit_num2bits** %div_range_checks54, align 8
  %div55 = load [256 x i128]*, [256 x i128]** %bigmod2.div.declare_output, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %div55, i128 0, i128 %i.2
  %div58 = load i128, i128* %array_getter57, align 4
  %div_range_checks59 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %array_getter61 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks59, i128 0, i128 %i.2
  %div_range_checks62 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter61, align 8
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks62, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter63, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %div58, i1* @constraint.255)
  %ptr_getter64 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %array_getter66 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter64, i128 0, i128 %i.2
  %div_range_checks67 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter66, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks67, i32 0, i32 1
  store i128 %div58, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.body49
  %add70 = add i128 %i.2, 1
  %sub74 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %sle75 = icmp sle i128 %add70, %sub74
  br i1 %sle75, label %loop.body49, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch68
  br label %loop.body78

loop.body78:                                      ; preds = %loop.latch99, %loop.exit76
  %i.3 = phi i128 [ 0, %loop.exit76 ], [ %add101, %loop.latch99 ]
  %call80 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod2.n.read_arg_inner)
  %ptr_getter81 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %mod_range_checks83 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter81, i128 0, i128 %i.3
  store %struct_template_circuit_num2bits* %call80, %struct_template_circuit_num2bits** %mod_range_checks83, align 8
  %mod84 = load [256 x i128]*, [256 x i128]** %bigmod2.mod.declare_output, align 8
  %array_getter86 = getelementptr inbounds [256 x i128], [256 x i128]* %mod84, i128 0, i128 %i.3
  %mod87 = load i128, i128* %array_getter86, align 4
  %mod_range_checks88 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %array_getter90 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks88, i128 0, i128 %i.3
  %mod_range_checks91 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter90, align 8
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks91, i32 0, i32 1
  %num2bits.in.read_input_outter93 = load i128, i128* %struct_getter92, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter93, i128 %mod87, i1* @constraint.256)
  %ptr_getter94 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %array_getter96 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter94, i128 0, i128 %i.3
  %mod_range_checks97 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter96, align 8
  %num2bits.in.write_input_outter98 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks97, i32 0, i32 1
  store i128 %mod87, i128* %num2bits.in.write_input_outter98, align 4
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.body78
  %add101 = add i128 %i.3, 1
  %slt104 = icmp slt i128 %add101, %bigmod2.k.read_arg_inner
  br i1 %slt104, label %loop.body78, label %loop.exit105

loop.exit105:                                     ; preds = %loop.latch99
  %sub109 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %add110 = add i128 %sub109, 1
  %call111 = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmod2.n.read_arg_inner, i128 %add110)
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch141, %loop.exit105
  %i.4 = phi i128 [ 0, %loop.exit105 ], [ %add143, %loop.latch141 ]
  %div113 = load [256 x i128]*, [256 x i128]** %bigmod2.div.declare_output, align 8
  %array_getter115 = getelementptr inbounds [256 x i128], [256 x i128]* %div113, i128 0, i128 %i.4
  %div116 = load i128, i128* %array_getter115, align 4
  %struct_getter118 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter118, align 8
  %array_getter120 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.4
  %mul121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul121, i128 %div116, i1* @constraint.257)
  %struct_getter123 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 2
  %bigmult.a.read_input_outter124 = load [256 x i128]*, [256 x i128]** %struct_getter123, align 8
  %mul126 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter124, i128 0, i128 %i.4
  store i128 %div116, i128* %mul126, align 4
  %b127 = load [256 x i128]*, [256 x i128]** %bigmod2.b.declare_input, align 8
  %array_getter129 = getelementptr inbounds [256 x i128], [256 x i128]* %b127, i128 0, i128 %i.4
  %b130 = load i128, i128* %array_getter129, align 4
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter132, align 8
  %array_getter134 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.4
  %mul135 = load i128, i128* %array_getter134, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul135, i128 %b130, i1* @constraint.258)
  %struct_getter137 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 3
  %bigmult.b.read_input_outter138 = load [256 x i128]*, [256 x i128]** %struct_getter137, align 8
  %mul140 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter138, i128 0, i128 %i.4
  store i128 %b130, i128* %mul140, align 4
  br label %loop.latch141

loop.latch141:                                    ; preds = %loop.body112
  %add143 = add i128 %i.4, 1
  %slt146 = icmp slt i128 %add143, %bigmod2.k.read_arg_inner
  br i1 %slt146, label %loop.body112, label %loop.exit147

loop.exit147:                                     ; preds = %loop.latch141
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch176, %loop.exit147
  %i.5 = phi i128 [ %bigmod2.k.read_arg_inner, %loop.exit147 ], [ %add178, %loop.latch176 ]
  %div150 = load [256 x i128]*, [256 x i128]** %bigmod2.div.declare_output, align 8
  %array_getter152 = getelementptr inbounds [256 x i128], [256 x i128]* %div150, i128 0, i128 %i.5
  %div153 = load i128, i128* %array_getter152, align 4
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 2
  %bigmult.a.read_input_outter156 = load [256 x i128]*, [256 x i128]** %struct_getter155, align 8
  %array_getter158 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter156, i128 0, i128 %i.5
  %mul159 = load i128, i128* %array_getter158, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul159, i128 %div153, i1* @constraint.259)
  %struct_getter161 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 2
  %bigmult.a.read_input_outter162 = load [256 x i128]*, [256 x i128]** %struct_getter161, align 8
  %mul164 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter162, i128 0, i128 %i.5
  store i128 %div153, i128* %mul164, align 4
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 3
  %bigmult.b.read_input_outter167 = load [256 x i128]*, [256 x i128]** %struct_getter166, align 8
  %array_getter169 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter167, i128 0, i128 %i.5
  %mul170 = load i128, i128* %array_getter169, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul170, i128 0, i1* @constraint.260)
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 3
  %bigmult.b.read_input_outter173 = load [256 x i128]*, [256 x i128]** %struct_getter172, align 8
  %mul175 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter173, i128 0, i128 %i.5
  store i128 0, i128* %mul175, align 4
  br label %loop.latch176

loop.latch176:                                    ; preds = %loop.body149
  %add178 = add i128 %i.5, 1
  %sub182 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %sle183 = icmp sle i128 %add178, %sub182
  br i1 %sle183, label %loop.body149, label %loop.exit184

loop.exit184:                                     ; preds = %loop.latch176
  br label %loop.body186

loop.body186:                                     ; preds = %loop.latch192, %loop.exit184
  %i.6 = phi i128 [ %bigmod2.m.read_arg_inner, %loop.exit184 ], [ %add194, %loop.latch192 ]
  %struct_getter188 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter188, align 8
  %array_getter190 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.6
  %mul191 = load i128, i128* %array_getter190, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul191, i128 0, i1* @constraint.261)
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.body186
  %add194 = add i128 %i.6, 1
  %sub198 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %mul199 = mul i128 2, %sub198
  %add200 = add i128 %mul199, 2
  %slt201 = icmp slt i128 %add194, %add200
  br i1 %slt201, label %loop.body186, label %loop.exit202

loop.exit202:                                     ; preds = %loop.latch192
  %call205 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigmod2.n.read_arg_inner, i128 %bigmod2.m.read_arg_inner)
  br label %loop.body206

loop.body206:                                     ; preds = %loop.latch251, %loop.exit202
  %i.7 = phi i128 [ 0, %loop.exit202 ], [ %add253, %loop.latch251 ]
  %struct_getter208 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call111, i32 0, i32 4
  %bigmult.out.read_output_outter209 = load [256 x i128]*, [256 x i128]** %struct_getter208, align 8
  %array_getter211 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter209, i128 0, i128 %i.7
  %mul212 = load i128, i128* %array_getter211, align 4
  %struct_getter214 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter214, align 8
  %array_getter216 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.7
  %add217 = load i128, i128* %array_getter216, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add217, i128 %mul212, i1* @constraint.262)
  %struct_getter219 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 2
  %bigadd.a.read_input_outter220 = load [256 x i128]*, [256 x i128]** %struct_getter219, align 8
  %add222 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter220, i128 0, i128 %i.7
  store i128 %mul212, i128* %add222, align 4
  %slt225 = icmp slt i128 %i.7, %bigmod2.k.read_arg_inner
  br i1 %slt225, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body206
  %mod226 = load [256 x i128]*, [256 x i128]** %bigmod2.mod.declare_output, align 8
  %array_getter228 = getelementptr inbounds [256 x i128], [256 x i128]* %mod226, i128 0, i128 %i.7
  %mod229 = load i128, i128* %array_getter228, align 4
  %struct_getter231 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter231, align 8
  %array_getter233 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.7
  %add234 = load i128, i128* %array_getter233, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add234, i128 %mod229, i1* @constraint.263)
  %struct_getter236 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 3
  %bigadd.b.read_input_outter237 = load [256 x i128]*, [256 x i128]** %struct_getter236, align 8
  %add239 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter237, i128 0, i128 %i.7
  store i128 %mod229, i128* %add239, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body206
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 3
  %bigadd.b.read_input_outter242 = load [256 x i128]*, [256 x i128]** %struct_getter241, align 8
  %array_getter244 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter242, i128 0, i128 %i.7
  %add245 = load i128, i128* %array_getter244, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add245, i128 0, i1* @constraint.264)
  %struct_getter247 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 3
  %bigadd.b.read_input_outter248 = load [256 x i128]*, [256 x i128]** %struct_getter247, align 8
  %add250 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter248, i128 0, i128 %i.7
  store i128 0, i128* %add250, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch251

loop.latch251:                                    ; preds = %if.exit
  %add253 = add i128 %i.7, 1
  %slt256 = icmp slt i128 %add253, %bigmod2.m.read_arg_inner
  br i1 %slt256, label %loop.body206, label %loop.exit257

loop.exit257:                                     ; preds = %loop.latch251
  br label %loop.body258

loop.body258:                                     ; preds = %loop.latch268, %loop.exit257
  %i.8 = phi i128 [ 0, %loop.exit257 ], [ %add270, %loop.latch268 ]
  %struct_getter260 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter260, align 8
  %array_getter262 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.8
  %add263 = load i128, i128* %array_getter262, align 4
  %a264 = load [256 x i128]*, [256 x i128]** %bigmod2.a.declare_input, align 8
  %array_getter266 = getelementptr inbounds [256 x i128], [256 x i128]* %a264, i128 0, i128 %i.8
  %a267 = load i128, i128* %array_getter266, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add263, i128 %a267, i1* @constraint.265)
  br label %loop.latch268

loop.latch268:                                    ; preds = %loop.body258
  %add270 = add i128 %i.8, 1
  %slt273 = icmp slt i128 %add270, %bigmod2.m.read_arg_inner
  br i1 %slt273, label %loop.body258, label %loop.exit274

loop.exit274:                                     ; preds = %loop.latch268
  %struct_getter276 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call205, i32 0, i32 4
  %bigadd.out.read_output_outter277 = load [256 x i128]*, [256 x i128]** %struct_getter276, align 8
  %array_getter279 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter277, i128 0, i128 %bigmod2.m.read_arg_inner
  %add280 = load i128, i128* %array_getter279, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add280, i128 0, i1* @constraint.266)
  %call283 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %bigmod2.n.read_arg_inner, i128 %bigmod2.k.read_arg_inner)
  br label %loop.body284

loop.body284:                                     ; preds = %loop.latch313, %loop.exit274
  %i.9 = phi i128 [ 0, %loop.exit274 ], [ %add315, %loop.latch313 ]
  %mod285 = load [256 x i128]*, [256 x i128]** %bigmod2.mod.declare_output, align 8
  %array_getter287 = getelementptr inbounds [256 x i128], [256 x i128]* %mod285, i128 0, i128 %i.9
  %mod288 = load i128, i128* %array_getter287, align 4
  %struct_getter290 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call283, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter290, align 8
  %array_getter292 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.9
  %lt293 = load i128, i128* %array_getter292, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt293, i128 %mod288, i1* @constraint.267)
  %struct_getter295 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call283, i32 0, i32 2
  %biglessthan.a.read_input_outter296 = load [256 x i128]*, [256 x i128]** %struct_getter295, align 8
  %lt298 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter296, i128 0, i128 %i.9
  store i128 %mod288, i128* %lt298, align 4
  %b299 = load [256 x i128]*, [256 x i128]** %bigmod2.b.declare_input, align 8
  %array_getter301 = getelementptr inbounds [256 x i128], [256 x i128]* %b299, i128 0, i128 %i.9
  %b302 = load i128, i128* %array_getter301, align 4
  %struct_getter304 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call283, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter304, align 8
  %array_getter306 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.9
  %lt307 = load i128, i128* %array_getter306, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt307, i128 %b302, i1* @constraint.268)
  %struct_getter309 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call283, i32 0, i32 3
  %biglessthan.b.read_input_outter310 = load [256 x i128]*, [256 x i128]** %struct_getter309, align 8
  %lt312 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter310, i128 0, i128 %i.9
  store i128 %b302, i128* %lt312, align 4
  br label %loop.latch313

loop.latch313:                                    ; preds = %loop.body284
  %add315 = add i128 %i.9, 1
  %slt318 = icmp slt i128 %add315, %bigmod2.k.read_arg_inner
  br i1 %slt318, label %loop.body284, label %loop.exit319

loop.exit319:                                     ; preds = %loop.latch313
  %struct_getter321 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call283, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter321, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.269)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit319
  %ptr_cast = bitcast [256 x i128]** %bigmod2.div.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %add12)
  %ptr_cast322 = bitcast [256 x [256 x i128]]** %longdiv to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast322, i128 2, i128 50)
  %ptr_cast323 = bitcast [256 x i128]** %bigmod2.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast323, i128 %bigmod2.m.read_arg_inner)
  %ptr_cast324 = bitcast [256 x i128]** %bigmod2.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast324, i128 %bigmod2.k.read_arg_inner)
  %ptr_cast325 = bitcast [256 x i128]** %bigmod2.mod.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast325, i128 %bigmod2.k.read_arg_inner)
  %ptr_cast326 = bitcast [256 x %struct_template_circuit_num2bits*]** %mod_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast326, i128 %bigmod2.k.read_arg_inner)
  %ptr_cast327 = bitcast [256 x %struct_template_circuit_num2bits*]** %div_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast327, i128 %add48)
  br label %exit

exit:                                             ; preds = %arraydim
  %div328 = load [256 x i128]*, [256 x i128]** %bigmod2.div.declare_output, align 8
  %bigmod2.div.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 5
  store [256 x i128]* %div328, [256 x i128]** %bigmod2.div.write_output_inner, align 8
  %mod329 = load [256 x i128]*, [256 x i128]** %bigmod2.mod.declare_output, align 8
  %bigmod2.mod.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 6
  store [256 x i128]* %mod329, [256 x i128]** %bigmod2.mod.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmod2* @fn_template_build_bigmod2(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_bigmod2 = alloca %struct_template_circuit_bigmod2, align 8
  %bigmod2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2, i32 0, i32 0
  store i128 %0, i128* %bigmod2.n.write_arg_inner, align 4
  %bigmod2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2, i32 0, i32 1
  store i128 %1, i128* %bigmod2.k.write_arg_inner, align 4
  %bigmod2.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2, i32 0, i32 2
  store i128 %2, i128* %bigmod2.m.write_arg_inner, align 4
  ret %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2
}

define void @fn_template_init_fp2negate(%struct_template_circuit_fp2negate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 0
  %fp2negate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 1
  %fp2negate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 2
  %fp2negate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 3
  %fp2negate.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2negate.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2negate.in.read_input_inner, [256 x [256 x i128]]** %fp2negate.in.declare_input, align 8
  %j4 = call i128 @fn_intrinsic_utils_init()
  %neg = alloca [256 x %struct_template_circuit_fpnegate*]*, align 8
  %neg5 = alloca [256 x %struct_template_circuit_fpnegate*], align 8
  store [256 x %struct_template_circuit_fpnegate*]* %neg5, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %fp2negate.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2negate.out.declare_output, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch59, %entry
  %j.0 = phi i128 [ 0, %entry ], [ %add61, %loop.latch59 ]
  %call = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %fp2negate.n.read_arg_inner, i128 %fp2negate.k.read_arg_inner, [256 x i128]* %fp2negate.p.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %neg10 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %ptr_getter, i128 0, i128 %j.0
  store %struct_template_circuit_fpnegate* %call, %struct_template_circuit_fpnegate** %neg10, align 8
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch, %loop.body
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2negate.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %j.0, i128 %i.0
  %in14 = load i128, i128* %array_getter, align 4
  %neg15 = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %array_getter17 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg15, i128 0, i128 %j.0
  %neg18 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter17, align 8
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg18, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %i.0
  %neg22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_utils_constraint(i128 %neg22, i128 %in14, i1* @constraint.270)
  %ptr_getter23 = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %array_getter25 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %ptr_getter23, i128 0, i128 %j.0
  %neg26 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter25, align 8
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg26, i32 0, i32 3
  %fpnegate.in.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %neg30 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter28, i128 0, i128 %i.0
  store i128 %in14, i128* %neg30, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2negate.k.read_arg_inner
  br i1 %slt, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body34

loop.body34:                                      ; preds = %loop.latch52, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add54, %loop.latch52 ]
  %neg35 = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %array_getter37 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg35, i128 0, i128 %j.0
  %neg38 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter37, align 8
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg38, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %array_getter41 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %i.1
  %neg42 = load i128, i128* %array_getter41, align 4
  %out43 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2negate.out.declare_output, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out43, i128 0, i128 %j.0, i128 %i.1
  %out47 = load i128, i128* %array_getter46, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out47, i128 %neg42, i1* @constraint.271)
  %ptr_getter48 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2negate.out.declare_output, align 8
  %out51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter48, i128 0, i128 %j.0, i128 %i.1
  store i128 %neg42, i128* %out51, align 4
  br label %loop.latch52

loop.latch52:                                     ; preds = %loop.body34
  %add54 = add i128 %i.1, 1
  %slt57 = icmp slt i128 %add54, %fp2negate.k.read_arg_inner
  br i1 %slt57, label %loop.body34, label %loop.exit58

loop.exit58:                                      ; preds = %loop.latch52
  br label %loop.latch59

loop.latch59:                                     ; preds = %loop.exit58
  %add61 = add i128 %j.0, 1
  %slt63 = icmp slt i128 %add61, 2
  br i1 %slt63, label %loop.body, label %loop.exit64

loop.exit64:                                      ; preds = %loop.latch59
  br label %arraydim

arraydim:                                         ; preds = %loop.exit64
  %ptr_cast = bitcast [256 x %struct_template_circuit_fpnegate*]** %neg to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast65 = bitcast [256 x [256 x i128]]** %fp2negate.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast65, i128 2, i128 %fp2negate.k.read_arg_inner)
  %ptr_cast66 = bitcast [256 x [256 x i128]]** %fp2negate.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast66, i128 2, i128 %fp2negate.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2negate.out.declare_output, align 8
  %fp2negate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %out67, [256 x [256 x i128]]** %fp2negate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2negate* @fn_template_build_fp2negate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2negate = alloca %struct_template_circuit_fp2negate, align 8
  %fp2negate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate, i32 0, i32 0
  store i128 %0, i128* %fp2negate.n.write_arg_inner, align 4
  %fp2negate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate, i32 0, i32 1
  store i128 %1, i128* %fp2negate.k.write_arg_inner, align 4
  %fp2negate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2negate.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate
}

define void @fn_template_init_bits2num_strict(%struct_template_circuit_bits2num_strict* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 0
  %bits2num_strict.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter, align 8
  %bits2num_strict.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bits2num_strict.in.read_input_inner, [256 x i128]** %bits2num_strict.in.declare_input, align 8
  %i1 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_aliascheck* @fn_template_build_aliascheck()
  %call2 = call %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 254)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %in = load [256 x i128]*, [256 x i128]** %bits2num_strict.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in4 = load i128, i128* %array_getter, align 4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call2, i32 0, i32 1
  %bits2num.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %array_getter8 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter, i128 0, i128 %i.0
  %b2n9 = load i128, i128* %array_getter8, align 4
  call void @fn_intrinsic_utils_constraint(i128 %b2n9, i128 %in4, i1* @constraint.272)
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call2, i32 0, i32 1
  %bits2num.in.read_input_outter11 = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %b2n13 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter11, i128 0, i128 %i.0
  store i128 %in4, i128* %b2n13, align 4
  %in14 = load [256 x i128]*, [256 x i128]** %bits2num_strict.in.declare_input, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %in14, i128 0, i128 %i.0
  %in17 = load i128, i128* %array_getter16, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter, i128 0, i128 %i.0
  %aliasCheck22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_utils_constraint(i128 %aliasCheck22, i128 %in17, i1* @constraint.273)
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter25 = load [256 x i128]*, [256 x i128]** %struct_getter24, align 8
  %aliasCheck27 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter25, i128 0, i128 %i.0
  store i128 %in17, i128* %aliasCheck27, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call2, i32 0, i32 2
  %bits2num.out.read_output_outter = load i128, i128* %struct_getter31, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %bits2num.out.read_output_outter, i1* @constraint.274)
  %bits2num_strict.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 1
  store i128 %bits2num.out.read_output_outter, i128* %bits2num_strict.out.write_output_inner, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 1
  %bits2num_strict.out.read_output_inner = load i128, i128* %struct_getter35, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %bits2num_strict.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 254)
  br label %exit

exit:                                             ; preds = %arraydim
  %bits2num_strict.out.write_output_inner37 = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 1
  store i128 %bits2num_strict.out.read_output_inner, i128* %bits2num_strict.out.write_output_inner37, align 4
  ret void
}

define %struct_template_circuit_bits2num_strict* @fn_template_build_bits2num_strict() {
entry:
  %struct_template_circuit_bits2num_strict = alloca %struct_template_circuit_bits2num_strict, align 8
  ret %struct_template_circuit_bits2num_strict* %struct_template_circuit_bits2num_strict
}

define [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %Y_is_zero1 = call i128 @fn_intrinsic_utils_init()
  %i3 = call i128 @fn_intrinsic_utils_init()
  %carry7 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %call = call [256 x i128]* @signed_long_to_short(i128 %0, i128 %1, [256 x i128]* %3)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 50
  %a_short9 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %a_short9, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %call13 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %2, [256 x i128]* %call, [256 x i128]* %4)
  br label %if.exit139

if.false:                                         ; preds = %entry
  %uniform_array14 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %if.false
  %i.0 = phi i128 [ 0, %if.false ], [ %add, %loop.latch ]
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 %i.0
  %a_short18 = load i128, i128* %array_getter17, align 4
  %neg = sub i128 0, %a_short18
  %a_pos20 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array14, i128 0, i128 %i.0
  store i128 %neg, i128* %a_pos20, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %add25 = add i128 %1, %2
  %slt = icmp slt i128 %add, %add25
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call31 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %2, [256 x i128]* %uniform_array14, [256 x i128]* %4)
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch39, %loop.exit
  %Y_is_zero.0 = phi i128 [ 1, %loop.exit ], [ %Y_is_zero.1, %loop.latch39 ]
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add41, %loop.latch39 ]
  %array_getter37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 1, i128 %i.1
  %X38 = load i128, i128* %array_getter37, align 4
  %ne = icmp ne i128 %X38, 0
  br i1 %ne, label %if.true33, label %if.false34

if.true33:                                        ; preds = %loop.body32
  br label %if.exit

if.false34:                                       ; preds = %loop.body32
  br label %if.exit

if.exit:                                          ; preds = %if.false34, %if.true33
  %Y_is_zero.1 = phi i128 [ 0, %if.true33 ], [ %Y_is_zero.0, %if.false34 ]
  br label %loop.latch39

loop.latch39:                                     ; preds = %if.exit
  %add41 = add i128 %i.1, 1
  %slt44 = icmp slt i128 %add41, %1
  br i1 %slt44, label %loop.body32, label %loop.exit45

loop.exit45:                                      ; preds = %loop.latch39
  %eq49 = icmp eq i128 %Y_is_zero.1, 1
  br i1 %eq49, label %if.true46, label %if.false47

if.true46:                                        ; preds = %loop.exit45
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 1
  %X52 = load [256 x i128], [256 x i128]* %array_getter51, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %X52, [256 x i128]* %spice_inline_array, align 4
  %out54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %5 = bitcast [256 x i128]* %out54 to i8*
  %6 = bitcast [256 x i128]* %spice_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit122

if.false47:                                       ; preds = %loop.exit45
  %array_getter59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 1
  %X60 = load [256 x i128], [256 x i128]* %array_getter59, align 4
  %spice_inline_array61 = alloca [256 x i128], align 8
  store [256 x i128] %X60, [256 x i128]* %spice_inline_array61, align 4
  %call62 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %spice_inline_array61)
  %out64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %7 = bitcast [256 x i128]* %out64 to i8*
  %8 = bitcast [256 x i128]* %call62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter66 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 0
  %X67 = load i128, i128* %array_getter66, align 4
  %add68 = add i128 %X67, 1
  %X70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 0
  store i128 %add68, i128* %X70, align 4
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 0
  %X75 = load i128, i128* %array_getter74, align 4
  %lshift = shl i128 1, %0
  %sge = icmp sge i128 %X75, %lshift
  br i1 %sge, label %if.true71, label %if.false72

if.true71:                                        ; preds = %if.false47
  br label %loop.body77

if.false72:                                       ; preds = %if.false47
  br label %if.exit121

loop.body77:                                      ; preds = %loop.latch105, %if.true71
  %i.2 = phi i128 [ 0, %if.true71 ], [ %add107, %loop.latch105 ]
  %array_getter80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.2
  %X81 = load i128, i128* %array_getter80, align 4
  %lshift83 = shl i128 1, %0
  %sdiv = sdiv i128 %X81, %lshift83
  %add86 = add i128 %i.2, 1
  %array_getter87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %add86
  %X88 = load i128, i128* %array_getter87, align 4
  %add90 = add i128 %X88, %sdiv
  %add93 = add i128 %i.2, 1
  %X94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %add93
  store i128 %add90, i128* %X94, align 4
  %array_getter97 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.2
  %X98 = load i128, i128* %array_getter97, align 4
  %lshift101 = shl i128 1, %0
  %mul = mul i128 %sdiv, %lshift101
  %sub = sub i128 %X98, %mul
  %X104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.2
  store i128 %sub, i128* %X104, align 4
  br label %loop.latch105

loop.latch105:                                    ; preds = %loop.body77
  %add107 = add i128 %i.2, 1
  %sub110 = sub i128 %2, 1
  %slt111 = icmp slt i128 %add107, %sub110
  br i1 %slt111, label %loop.body77, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch105
  %sub115 = sub i128 %2, 1
  %array_getter116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %sub115
  %X117 = load i128, i128* %array_getter116, align 4
  %lshift119 = shl i128 1, %0
  %slt120 = icmp slt i128 %X117, %lshift119
  call void @fn_intrinsic_utils_assert(i1 %slt120)
  br label %if.exit121

if.exit121:                                       ; preds = %loop.exit112, %if.false72
  br label %if.exit122

if.exit122:                                       ; preds = %if.exit121, %if.true46
  br label %loop.body123

loop.body123:                                     ; preds = %loop.latch132, %if.exit122
  %i.3 = phi i128 [ 0, %if.exit122 ], [ %add134, %loop.latch132 ]
  %array_getter126 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.3
  %X127 = load i128, i128* %array_getter126, align 4
  %neg128 = sub i128 0, %X127
  %out131 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.3
  store i128 %neg128, i128* %out131, align 4
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.body123
  %add134 = add i128 %i.3, 1
  %slt137 = icmp slt i128 %add134, %2
  br i1 %slt137, label %loop.body123, label %loop.exit138

loop.exit138:                                     ; preds = %loop.latch132
  br label %if.exit139

if.exit139:                                       ; preds = %loop.exit138, %if.true
  %out.0 = phi [256 x [256 x i128]]* [ %call13, %if.true ], [ %uniform_array, %loop.exit138 ]
  ret [256 x [256 x i128]]* %out.0
}

define [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a2 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a2, [256 x i128]* %spice_inline_array, align 4
  %array_getter3 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 0
  %b4 = load [256 x i128], [256 x i128]* %array_getter3, align 4
  %spice_inline_array5 = alloca [256 x i128], align 8
  store [256 x i128] %b4, [256 x i128]* %spice_inline_array5, align 4
  %call = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array5, [256 x i128]* %4)
  %out6 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %5 = bitcast [256 x i128]* %out6 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] %a11, [256 x i128]* %spice_inline_array12, align 4
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 1
  %b15 = load [256 x i128], [256 x i128]* %array_getter14, align 4
  %spice_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] %b15, [256 x i128]* %spice_inline_array16, align 4
  %call18 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array12, [256 x i128]* %spice_inline_array16, [256 x i128]* %4)
  %out20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %7 = bitcast [256 x i128]* %out20 to i8*
  %8 = bitcast [256 x i128]* %call18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_fpiszero(%struct_template_circuit_fpiszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 0
  %fpiszero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 1
  %fpiszero.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 2
  %fpiszero.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 3
  %fpiszero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %fpiszero.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpiszero.in.read_input_inner, [256 x i128]** %fpiszero.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %i4 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpiszero.n.read_arg_inner, i128 %fpiszero.k.read_arg_inner)
  %call7 = call %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %fpiszero.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %in = load [256 x i128]*, [256 x i128]** %fpiszero.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in9 = load i128, i128* %array_getter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter11, align 8
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lt14 = load i128, i128* %array_getter13, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt14, i128 %in9, i1* @constraint.275)
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter16 = load [256 x i128]*, [256 x i128]** %struct_getter15, align 8
  %lt18 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter16, i128 0, i128 %i.0
  store i128 %in9, i128* %lt18, align 4
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %fpiszero.p.read_arg_inner, i128 0, i128 %i.0
  %p21 = load i128, i128* %array_getter20, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lt26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt26, i128 %p21, i1* @constraint.276)
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %lt31 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter29, i128 0, i128 %i.0
  store i128 %p21, i128* %lt31, align 4
  %in32 = load [256 x i128]*, [256 x i128]** %fpiszero.in.declare_input, align 8
  %array_getter34 = getelementptr inbounds [256 x i128], [256 x i128]* %in32, i128 0, i128 %i.0
  %in35 = load i128, i128* %array_getter34, align 4
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call7, i32 0, i32 1
  %bigiszero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter37, align 8
  %array_getter39 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter, i128 0, i128 %i.0
  %isZero40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isZero40, i128 %in35, i1* @constraint.277)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call7, i32 0, i32 1
  %bigiszero.in.read_input_outter43 = load [256 x i128]*, [256 x i128]** %struct_getter42, align 8
  %isZero45 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter43, i128 0, i128 %i.0
  store i128 %in35, i128* %isZero45, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fpiszero.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter50, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.278)
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call7, i32 0, i32 2
  %bigiszero.out.read_output_outter = load i128, i128* %struct_getter52, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %bigiszero.out.read_output_outter, i1* @constraint.279)
  %fpiszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 4
  store i128 %bigiszero.out.read_output_outter, i128* %fpiszero.out.write_output_inner, align 4
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 4
  %fpiszero.out.read_output_inner = load i128, i128* %struct_getter56, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %fpiszero.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %fpiszero.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %fpiszero.out.write_output_inner58 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 4
  store i128 %fpiszero.out.read_output_inner, i128* %fpiszero.out.write_output_inner58, align 4
  ret void
}

define %struct_template_circuit_fpiszero* @fn_template_build_fpiszero(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpiszero = alloca %struct_template_circuit_fpiszero, align 8
  %fpiszero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero, i32 0, i32 0
  store i128 %0, i128* %fpiszero.n.write_arg_inner, align 4
  %fpiszero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero, i32 0, i32 1
  store i128 %1, i128* %fpiszero.k.write_arg_inner, align 4
  %fpiszero.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpiszero.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero
}

define void @fn_template_init_fp2iszero(%struct_template_circuit_fp2iszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 0
  %fp2iszero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 1
  %fp2iszero.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 2
  %fp2iszero.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 3
  %fp2iszero.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2iszero.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2iszero.in.read_input_inner, [256 x [256 x i128]]** %fp2iszero.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %lt = alloca [256 x %struct_template_circuit_biglessthan*]*, align 8
  %lt4 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  store [256 x %struct_template_circuit_biglessthan*]* %lt4, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %total5 = call i128 @fn_intrinsic_utils_init()
  %isZeros = alloca [256 x [256 x %struct_template_circuit_iszero*]]*, align 8
  %isZeros6 = alloca [256 x [256 x %struct_template_circuit_iszero*]], align 8
  store [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros6, [256 x [256 x %struct_template_circuit_iszero*]]** %isZeros, align 8
  %i7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %fp2iszero.k.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch89, %entry
  %total.0 = phi i128 [ %mul, %entry ], [ %sub, %loop.latch89 ]
  %j.0 = phi i128 [ 0, %entry ], [ %add91, %loop.latch89 ]
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fp2iszero.n.read_arg_inner, i128 %fp2iszero.k.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %lt13 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter, i128 0, i128 %j.0
  store %struct_template_circuit_biglessthan* %call, %struct_template_circuit_biglessthan** %lt13, align 8
  br label %loop.body14

loop.body14:                                      ; preds = %loop.latch, %loop.body
  %total.1 = phi i128 [ %total.0, %loop.body ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2iszero.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %j.0, i128 %i.0
  %in17 = load i128, i128* %array_getter, align 4
  %lt18 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter20 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt18, i128 0, i128 %j.0
  %lt21 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter20, align 8
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt21, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lt25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt25, i128 %in17, i1* @constraint.280)
  %ptr_getter26 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter28 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter26, i128 0, i128 %j.0
  %lt29 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter28, align 8
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt29, i32 0, i32 2
  %biglessthan.a.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %lt33 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter31, i128 0, i128 %i.0
  store i128 %in17, i128* %lt33, align 4
  %array_getter35 = getelementptr inbounds [256 x i128], [256 x i128]* %fp2iszero.p.read_arg_inner, i128 0, i128 %i.0
  %p36 = load i128, i128* %array_getter35, align 4
  %lt37 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter39 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt37, i128 0, i128 %j.0
  %lt40 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter39, align 8
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt40, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter41, align 8
  %array_getter43 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lt44 = load i128, i128* %array_getter43, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt44, i128 %p36, i1* @constraint.281)
  %ptr_getter45 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter47 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter45, i128 0, i128 %j.0
  %lt48 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt48, i32 0, i32 3
  %biglessthan.b.read_input_outter50 = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %lt52 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter50, i128 0, i128 %i.0
  store i128 %p36, i128* %lt52, align 4
  %call53 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %ptr_getter54 = load [256 x [256 x %struct_template_circuit_iszero*]]*, [256 x [256 x %struct_template_circuit_iszero*]]** %isZeros, align 8
  %isZeros57 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %ptr_getter54, i128 0, i128 %j.0, i128 %i.0
  store %struct_template_circuit_iszero* %call53, %struct_template_circuit_iszero** %isZeros57, align 8
  %in58 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2iszero.in.declare_input, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in58, i128 0, i128 %j.0, i128 %i.0
  %in62 = load i128, i128* %array_getter61, align 4
  %isZeros63 = load [256 x [256 x %struct_template_circuit_iszero*]]*, [256 x [256 x %struct_template_circuit_iszero*]]** %isZeros, align 8
  %array_getter66 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros63, i128 0, i128 %j.0, i128 %i.0
  %isZeros67 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter66, align 8
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros67, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter68, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %in62, i1* @constraint.282)
  %ptr_getter69 = load [256 x [256 x %struct_template_circuit_iszero*]]*, [256 x [256 x %struct_template_circuit_iszero*]]** %isZeros, align 8
  %array_getter72 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %ptr_getter69, i128 0, i128 %j.0, i128 %i.0
  %isZeros73 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter72, align 8
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros73, i32 0, i32 0
  store i128 %in62, i128* %iszero.in.write_input_outter, align 4
  %isZeros75 = load [256 x [256 x %struct_template_circuit_iszero*]]*, [256 x [256 x %struct_template_circuit_iszero*]]** %isZeros, align 8
  %array_getter78 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros75, i128 0, i128 %j.0, i128 %i.0
  %isZeros79 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter78, align 8
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros79, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter80, align 4
  %sub = sub i128 %total.1, %iszero.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body14
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2iszero.k.read_arg_inner
  br i1 %slt, label %loop.body14, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %lt84 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter86 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt84, i128 0, i128 %j.0
  %lt87 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter86, align 8
  %struct_getter88 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt87, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter88, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.283)
  br label %loop.latch89

loop.latch89:                                     ; preds = %loop.exit
  %add91 = add i128 %j.0, 1
  %slt93 = icmp slt i128 %add91, 2
  br i1 %slt93, label %loop.body, label %loop.exit94

loop.exit94:                                      ; preds = %loop.latch89
  %call95 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call95, i32 0, i32 0
  %iszero.in.read_input_outter99 = load i128, i128* %struct_getter98, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter99, i128 %sub, i1* @constraint.284)
  %iszero.in.write_input_outter101 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call95, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter101, align 4
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call95, i32 0, i32 2
  %iszero.out.read_output_outter104 = load i128, i128* %struct_getter103, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %iszero.out.read_output_outter104, i1* @constraint.285)
  %fp2iszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 4
  store i128 %iszero.out.read_output_outter104, i128* %fp2iszero.out.write_output_inner, align 4
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 4
  %fp2iszero.out.read_output_inner = load i128, i128* %struct_getter108, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit94
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2iszero.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2iszero.k.read_arg_inner)
  %ptr_cast109 = bitcast [256 x %struct_template_circuit_biglessthan*]** %lt to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast109, i128 2)
  %ptr_cast110 = bitcast [256 x [256 x %struct_template_circuit_iszero*]]** %isZeros to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast110, i128 2, i128 %fp2iszero.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %fp2iszero.out.write_output_inner112 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 4
  store i128 %fp2iszero.out.read_output_inner, i128* %fp2iszero.out.write_output_inner112, align 4
  ret void
}

define %struct_template_circuit_fp2iszero* @fn_template_build_fp2iszero(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2iszero = alloca %struct_template_circuit_fp2iszero, align 8
  %fp2iszero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero, i32 0, i32 0
  store i128 %0, i128* %fp2iszero.n.write_arg_inner, align 4
  %fp2iszero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero, i32 0, i32 1
  store i128 %1, i128* %fp2iszero.k.write_arg_inner, align 4
  %fp2iszero.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2iszero.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero
}

define [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %call = call [256 x i128]* @long_add(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  %call6 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 1, [256 x i128]* %call, [256 x i128]* %4)
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call6, i128 0, i128 1
  %temp8 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %temp8, [256 x i128]* %spice_inline_array, align 4
  ret [256 x i128]* %spice_inline_array
}

define void @fn_template_init_bigisequal(%struct_template_circuit_bigisequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 0
  %bigisequal.k.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 1
  %bigisequal.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %bigisequal.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigisequal.a.read_input_inner, [256 x i128]** %bigisequal.a.declare_input, align 8
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 2
  %bigisequal.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigisequal.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigisequal.b.read_input_inner, [256 x i128]** %bigisequal.b.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %isEquals = alloca [256 x %struct_template_circuit_isequal*]*, align 8
  %isEquals3 = alloca [256 x %struct_template_circuit_isequal*], align 8
  store [256 x %struct_template_circuit_isequal*]* %isEquals3, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %total4 = call i128 @fn_intrinsic_utils_init()
  %i5 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %total.0 = phi i128 [ %bigisequal.k.read_arg_inner, %entry ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %ptr_getter = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %isEquals10 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_isequal* %call, %struct_template_circuit_isequal** %isEquals10, align 8
  %a = load [256 x i128]*, [256 x i128]** %bigisequal.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter, align 4
  %isEquals13 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %array_getter15 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals13, i128 0, i128 %i.0
  %isEquals16 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter15, align 8
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals16, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %isEquals19 = load i128, i128* %array_getter18, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEquals19, i128 %a12, i1* @constraint.286)
  %ptr_getter20 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %array_getter22 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter20, i128 0, i128 %i.0
  %isEquals23 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter22, align 8
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals23, i32 0, i32 0
  %isequal.in.read_input_outter25 = load [256 x i128]*, [256 x i128]** %struct_getter24, align 8
  %isEquals26 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter25, i128 0, i128 0
  store i128 %a12, i128* %isEquals26, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigisequal.b.declare_input, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b29 = load i128, i128* %array_getter28, align 4
  %isEquals30 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %array_getter32 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals30, i128 0, i128 %i.0
  %isEquals33 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter32, align 8
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals33, i32 0, i32 0
  %isequal.in.read_input_outter35 = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %array_getter36 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter35, i128 0, i128 1
  %isEquals37 = load i128, i128* %array_getter36, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEquals37, i128 %b29, i1* @constraint.287)
  %ptr_getter38 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %array_getter40 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter38, i128 0, i128 %i.0
  %isEquals41 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter40, align 8
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals41, i32 0, i32 0
  %isequal.in.read_input_outter43 = load [256 x i128]*, [256 x i128]** %struct_getter42, align 8
  %isEquals44 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter43, i128 0, i128 1
  store i128 %b29, i128* %isEquals44, align 4
  %isEquals46 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEquals, align 8
  %array_getter48 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals46, i128 0, i128 %i.0
  %isEquals49 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter48, align 8
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals49, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter50, align 4
  %sub = sub i128 %total.0, %isequal.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigisequal.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call54 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call54, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter57, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.288)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call54, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call54, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter60, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %iszero.out.read_output_outter, i1* @constraint.289)
  %bigisequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 3
  store i128 %iszero.out.read_output_outter, i128* %bigisequal.out.write_output_inner, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 3
  %bigisequal.out.read_output_inner = load i128, i128* %struct_getter64, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %bigisequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigisequal.k.read_arg_inner)
  %ptr_cast65 = bitcast [256 x i128]** %bigisequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast65, i128 %bigisequal.k.read_arg_inner)
  %ptr_cast66 = bitcast [256 x %struct_template_circuit_isequal*]** %isEquals to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast66, i128 %bigisequal.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %bigisequal.out.write_output_inner68 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 3
  store i128 %bigisequal.out.read_output_inner, i128* %bigisequal.out.write_output_inner68, align 4
  ret void
}

define %struct_template_circuit_bigisequal* @fn_template_build_bigisequal(i128 %0) {
entry:
  %struct_template_circuit_bigisequal = alloca %struct_template_circuit_bigisequal, align 8
  %bigisequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %struct_template_circuit_bigisequal, i32 0, i32 0
  store i128 %0, i128* %bigisequal.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigisequal* %struct_template_circuit_bigisequal
}

define void @fn_template_init_bigaddmodp(%struct_template_circuit_bigaddmodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 0
  %bigaddmodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 1
  %bigaddmodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 2
  %bigaddmodp.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigaddmodp.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigaddmodp.a.read_input_inner, [256 x i128]** %bigaddmodp.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 3
  %bigaddmodp.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigaddmodp.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigaddmodp.b.read_input_inner, [256 x i128]** %bigaddmodp.b.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 4
  %bigaddmodp.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %bigaddmodp.p.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigaddmodp.p.read_input_inner, [256 x i128]** %bigaddmodp.p.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %bigaddmodp.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigaddmodp.out.declare_output, align 8
  %sle = icmp sle i128 %bigaddmodp.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigaddmodp.n.read_arg_inner, i128 %bigaddmodp.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add36, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %bigaddmodp.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.0
  %add17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add17, i128 %a12, i1* @constraint.290)
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter19 = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %add21 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter19, i128 0, i128 %i.0
  store i128 %a12, i128* %add21, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigaddmodp.b.declare_input, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b24 = load i128, i128* %array_getter23, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.0
  %add29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add29, i128 %b24, i1* @constraint.291)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %add34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter32, i128 0, i128 %i.0
  store i128 %b24, i128* %add34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add36 = add i128 %i.0, 1
  %slt = icmp slt i128 %add36, %bigaddmodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add41 = add i128 %bigaddmodp.k.read_arg_inner, 1
  %call42 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %bigaddmodp.n.read_arg_inner, i128 %add41)
  br label %loop.body43

loop.body43:                                      ; preds = %loop.latch72, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add74, %loop.latch72 ]
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter45, align 8
  %array_getter47 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.1
  %add48 = load i128, i128* %array_getter47, align 4
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.1
  %lt53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt53, i128 %add48, i1* @constraint.292)
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 2
  %biglessthan.a.read_input_outter56 = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %lt58 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter56, i128 0, i128 %i.1
  store i128 %add48, i128* %lt58, align 4
  %p = load [256 x i128]*, [256 x i128]** %bigaddmodp.p.declare_input, align 8
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %p, i128 0, i128 %i.1
  %p61 = load i128, i128* %array_getter60, align 4
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %array_getter65 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.1
  %lt66 = load i128, i128* %array_getter65, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt66, i128 %p61, i1* @constraint.293)
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 3
  %biglessthan.b.read_input_outter69 = load [256 x i128]*, [256 x i128]** %struct_getter68, align 8
  %lt71 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter69, i128 0, i128 %i.1
  store i128 %p61, i128* %lt71, align 4
  br label %loop.latch72

loop.latch72:                                     ; preds = %loop.body43
  %add74 = add i128 %i.1, 1
  %slt77 = icmp slt i128 %add74, %bigaddmodp.k.read_arg_inner
  br i1 %slt77, label %loop.body43, label %loop.exit78

loop.exit78:                                      ; preds = %loop.latch72
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter81 = load [256 x i128]*, [256 x i128]** %struct_getter80, align 8
  %array_getter83 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter81, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %add84 = load i128, i128* %array_getter83, align 4
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 2
  %biglessthan.a.read_input_outter87 = load [256 x i128]*, [256 x i128]** %struct_getter86, align 8
  %array_getter89 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter87, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %lt90 = load i128, i128* %array_getter89, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt90, i128 %add84, i1* @constraint.294)
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 2
  %biglessthan.a.read_input_outter93 = load [256 x i128]*, [256 x i128]** %struct_getter92, align 8
  %lt95 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter93, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 %add84, i128* %lt95, align 4
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 3
  %biglessthan.b.read_input_outter98 = load [256 x i128]*, [256 x i128]** %struct_getter97, align 8
  %array_getter100 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter98, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %lt101 = load i128, i128* %array_getter100, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt101, i128 0, i1* @constraint.295)
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 3
  %biglessthan.b.read_input_outter104 = load [256 x i128]*, [256 x i128]** %struct_getter103, align 8
  %lt106 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter104, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 0, i128* %lt106, align 4
  %add109 = add i128 %bigaddmodp.k.read_arg_inner, 1
  %call110 = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %bigaddmodp.n.read_arg_inner, i128 %add109)
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch145, %loop.exit78
  %i.2 = phi i128 [ 0, %loop.exit78 ], [ %add147, %loop.latch145 ]
  %struct_getter113 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter114 = load [256 x i128]*, [256 x i128]** %struct_getter113, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter114, i128 0, i128 %i.2
  %add117 = load i128, i128* %array_getter116, align 4
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter119, align 8
  %array_getter121 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.2
  %sub122 = load i128, i128* %array_getter121, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub122, i128 %add117, i1* @constraint.296)
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 2
  %bigsub.a.read_input_outter125 = load [256 x i128]*, [256 x i128]** %struct_getter124, align 8
  %sub127 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter125, i128 0, i128 %i.2
  store i128 %add117, i128* %sub127, align 4
  %struct_getter129 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call42, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter129, align 4
  %sub130 = sub i128 1, %biglessthan.out.read_output_outter
  %p131 = load [256 x i128]*, [256 x i128]** %bigaddmodp.p.declare_input, align 8
  %array_getter133 = getelementptr inbounds [256 x i128], [256 x i128]* %p131, i128 0, i128 %i.2
  %p134 = load i128, i128* %array_getter133, align 4
  %mul = mul i128 %sub130, %p134
  %struct_getter136 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter136, align 8
  %array_getter138 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.2
  %sub139 = load i128, i128* %array_getter138, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub139, i128 %mul, i1* @constraint.297)
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 3
  %bigsub.b.read_input_outter142 = load [256 x i128]*, [256 x i128]** %struct_getter141, align 8
  %sub144 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter142, i128 0, i128 %i.2
  store i128 %mul, i128* %sub144, align 4
  br label %loop.latch145

loop.latch145:                                    ; preds = %loop.body111
  %add147 = add i128 %i.2, 1
  %slt150 = icmp slt i128 %add147, %bigaddmodp.k.read_arg_inner
  br i1 %slt150, label %loop.body111, label %loop.exit151

loop.exit151:                                     ; preds = %loop.latch145
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter154 = load [256 x i128]*, [256 x i128]** %struct_getter153, align 8
  %array_getter156 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter154, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %add157 = load i128, i128* %array_getter156, align 4
  %struct_getter159 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 2
  %bigsub.a.read_input_outter160 = load [256 x i128]*, [256 x i128]** %struct_getter159, align 8
  %array_getter162 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter160, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %sub163 = load i128, i128* %array_getter162, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub163, i128 %add157, i1* @constraint.298)
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 2
  %bigsub.a.read_input_outter166 = load [256 x i128]*, [256 x i128]** %struct_getter165, align 8
  %sub168 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter166, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 %add157, i128* %sub168, align 4
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 3
  %bigsub.b.read_input_outter171 = load [256 x i128]*, [256 x i128]** %struct_getter170, align 8
  %array_getter173 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter171, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %sub174 = load i128, i128* %array_getter173, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub174, i128 0, i1* @constraint.299)
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 3
  %bigsub.b.read_input_outter177 = load [256 x i128]*, [256 x i128]** %struct_getter176, align 8
  %sub179 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter177, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 0, i128* %sub179, align 4
  %struct_getter181 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter181, align 8
  %array_getter183 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %sub184 = load i128, i128* %array_getter183, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub184, i128 0, i1* @constraint.300)
  br label %loop.body185

loop.body185:                                     ; preds = %loop.latch199, %loop.exit151
  %i.3 = phi i128 [ 0, %loop.exit151 ], [ %add201, %loop.latch199 ]
  %struct_getter187 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call110, i32 0, i32 4
  %bigsub.out.read_output_outter188 = load [256 x i128]*, [256 x i128]** %struct_getter187, align 8
  %array_getter190 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter188, i128 0, i128 %i.3
  %sub191 = load i128, i128* %array_getter190, align 4
  %out192 = load [256 x i128]*, [256 x i128]** %bigaddmodp.out.declare_output, align 8
  %array_getter194 = getelementptr inbounds [256 x i128], [256 x i128]* %out192, i128 0, i128 %i.3
  %out195 = load i128, i128* %array_getter194, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out195, i128 %sub191, i1* @constraint.301)
  %ptr_getter196 = load [256 x i128]*, [256 x i128]** %bigaddmodp.out.declare_output, align 8
  %out198 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter196, i128 0, i128 %i.3
  store i128 %sub191, i128* %out198, align 4
  br label %loop.latch199

loop.latch199:                                    ; preds = %loop.body185
  %add201 = add i128 %i.3, 1
  %slt204 = icmp slt i128 %add201, %bigaddmodp.k.read_arg_inner
  br i1 %slt204, label %loop.body185, label %loop.exit205

loop.exit205:                                     ; preds = %loop.latch199
  br label %arraydim

arraydim:                                         ; preds = %loop.exit205
  %ptr_cast = bitcast [256 x i128]** %bigaddmodp.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigaddmodp.k.read_arg_inner)
  %ptr_cast206 = bitcast [256 x i128]** %bigaddmodp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast206, i128 %bigaddmodp.k.read_arg_inner)
  %ptr_cast207 = bitcast [256 x i128]** %bigaddmodp.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast207, i128 %bigaddmodp.k.read_arg_inner)
  %ptr_cast208 = bitcast [256 x i128]** %bigaddmodp.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast208, i128 %bigaddmodp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out209 = load [256 x i128]*, [256 x i128]** %bigaddmodp.out.declare_output, align 8
  %bigaddmodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 5
  store [256 x i128]* %out209, [256 x i128]** %bigaddmodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigaddmodp* @fn_template_build_bigaddmodp(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigaddmodp = alloca %struct_template_circuit_bigaddmodp, align 8
  %bigaddmodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %struct_template_circuit_bigaddmodp, i32 0, i32 0
  store i128 %0, i128* %bigaddmodp.n.write_arg_inner, align 4
  %bigaddmodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %struct_template_circuit_bigaddmodp, i32 0, i32 1
  store i128 %1, i128* %bigaddmodp.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigaddmodp* %struct_template_circuit_bigaddmodp
}

define void @fn_template_init_signedcheckcarrymodtozero(%struct_template_circuit_signedcheckcarrymodtozero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 0
  %signedcheckcarrymodtozero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 1
  %signedcheckcarrymodtozero.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 2
  %signedcheckcarrymodtozero.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 3
  %signedcheckcarrymodtozero.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %signedcheckcarrymodtozero.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %signedcheckcarrymodtozero.in.read_input_inner, [256 x i128]** %signedcheckcarrymodtozero.in.declare_input, align 8
  %X_range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %X_range_checks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %X_range_checks5, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %m6 = call i128 @fn_intrinsic_utils_init()
  %signedcheckcarrymodtozero.x.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %X, [256 x i128]** %signedcheckcarrymodtozero.x.declare_output, align 8
  %Xvar = alloca [256 x [256 x i128]]*, align 8
  %Xvar7 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %Xvar7, [256 x [256 x i128]]** %Xvar, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %signedcheckcarrymodtozero.overflow.read_arg_inner, %signedcheckcarrymodtozero.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedcheckcarrymodtozero.n.read_arg_inner
  %slt = icmp slt i128 %signedcheckcarrymodtozero.overflow.read_arg_inner, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %in = load [256 x i128]*, [256 x i128]** %signedcheckcarrymodtozero.in.declare_input, align 8
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedcheckcarrymodtozero.n.read_arg_inner, i128 %signedcheckcarrymodtozero.k.read_arg_inner, i128 %sdiv, [256 x i128]* %in, [256 x i128]* %signedcheckcarrymodtozero.p.read_arg_inner)
  store [256 x [256 x i128]]* %call, [256 x [256 x i128]]** %Xvar, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add43, %loop.latch ]
  %Xvar16 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %Xvar, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Xvar16, i128 0, i128 0, i128 %i.0
  %Xvar18 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x i128]*, [256 x i128]** %signedcheckcarrymodtozero.x.declare_output, align 8
  %X20 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %Xvar18, i128* %X20, align 4
  %add22 = add i128 %signedcheckcarrymodtozero.n.read_arg_inner, 1
  %call23 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add22)
  %ptr_getter24 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %X_range_checks26 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter24, i128 0, i128 %i.0
  store %struct_template_circuit_num2bits* %call23, %struct_template_circuit_num2bits** %X_range_checks26, align 8
  %X27 = load [256 x i128]*, [256 x i128]** %signedcheckcarrymodtozero.x.declare_output, align 8
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %X27, i128 0, i128 %i.0
  %X30 = load i128, i128* %array_getter29, align 4
  %lshift = shl i128 1, %signedcheckcarrymodtozero.n.read_arg_inner
  %add32 = add i128 %X30, %lshift
  %X_range_checks33 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %array_getter35 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks33, i128 0, i128 %i.0
  %X_range_checks36 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter35, align 8
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks36, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %add32, i1* @constraint.302)
  %ptr_getter38 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %array_getter40 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter38, i128 0, i128 %i.0
  %X_range_checks41 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter40, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks41, i32 0, i32 1
  store i128 %add32, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add43 = add i128 %i.0, 1
  %slt46 = icmp slt i128 %add43, %sdiv
  br i1 %slt46, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call52 = call %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %signedcheckcarrymodtozero.n.read_arg_inner, i128 %signedcheckcarrymodtozero.k.read_arg_inner, i128 %sdiv, i128 %signedcheckcarrymodtozero.overflow.read_arg_inner, [256 x i128]* %signedcheckcarrymodtozero.p.read_arg_inner)
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch78, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add80, %loop.latch78 ]
  %in54 = load [256 x i128]*, [256 x i128]** %signedcheckcarrymodtozero.in.declare_input, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %in54, i128 0, i128 %i.1
  %in57 = load i128, i128* %array_getter56, align 4
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call52, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter59, align 8
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter, i128 0, i128 %i.1
  %mod_check62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check62, i128 %in57, i1* @constraint.303)
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call52, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter65 = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %mod_check67 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter65, i128 0, i128 %i.1
  store i128 %in57, i128* %mod_check67, align 4
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call52, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter, i128 0, i128 %i.1
  %mod_check72 = load i128, i128* %array_getter71, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check72, i128 0, i1* @constraint.304)
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call52, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter75 = load [256 x i128]*, [256 x i128]** %struct_getter74, align 8
  %mod_check77 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter75, i128 0, i128 %i.1
  store i128 0, i128* %mod_check77, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body53
  %add80 = add i128 %i.1, 1
  %slt83 = icmp slt i128 %add80, %signedcheckcarrymodtozero.k.read_arg_inner
  br i1 %slt83, label %loop.body53, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch100, %loop.exit84
  %i.2 = phi i128 [ 0, %loop.exit84 ], [ %add102, %loop.latch100 ]
  %X86 = load [256 x i128]*, [256 x i128]** %signedcheckcarrymodtozero.x.declare_output, align 8
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %X86, i128 0, i128 %i.2
  %X89 = load i128, i128* %array_getter88, align 4
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call52, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %array_getter93 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter, i128 0, i128 %i.2
  %mod_check94 = load i128, i128* %array_getter93, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check94, i128 %X89, i1* @constraint.305)
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call52, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter97 = load [256 x i128]*, [256 x i128]** %struct_getter96, align 8
  %mod_check99 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter97, i128 0, i128 %i.2
  store i128 %X89, i128* %mod_check99, align 4
  br label %loop.latch100

loop.latch100:                                    ; preds = %loop.body85
  %add102 = add i128 %i.2, 1
  %slt105 = icmp slt i128 %add102, %sdiv
  br i1 %slt105, label %loop.body85, label %loop.exit106

loop.exit106:                                     ; preds = %loop.latch100
  br label %arraydim

arraydim:                                         ; preds = %loop.exit106
  %ptr_cast = bitcast [256 x i128]** %signedcheckcarrymodtozero.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %signedcheckcarrymodtozero.k.read_arg_inner)
  %ptr_cast107 = bitcast [256 x i128]** %signedcheckcarrymodtozero.x.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast107, i128 %sdiv)
  %ptr_cast108 = bitcast [256 x [256 x i128]]** %Xvar to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast108, i128 2, i128 50)
  %ptr_cast109 = bitcast [256 x %struct_template_circuit_num2bits*]** %X_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast109, i128 %sdiv)
  br label %exit

exit:                                             ; preds = %arraydim
  %X110 = load [256 x i128]*, [256 x i128]** %signedcheckcarrymodtozero.x.declare_output, align 8
  %signedcheckcarrymodtozero.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 5
  store [256 x i128]* %X110, [256 x i128]** %signedcheckcarrymodtozero.x.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedcheckcarrymodtozero = alloca %struct_template_circuit_signedcheckcarrymodtozero, align 8
  %signedcheckcarrymodtozero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 0
  store i128 %0, i128* %signedcheckcarrymodtozero.n.write_arg_inner, align 4
  %signedcheckcarrymodtozero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 1
  store i128 %1, i128* %signedcheckcarrymodtozero.k.write_arg_inner, align 4
  %signedcheckcarrymodtozero.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 2
  store i128 %2, i128* %signedcheckcarrymodtozero.overflow.write_arg_inner, align 4
  %signedcheckcarrymodtozero.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedcheckcarrymodtozero.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero
}

define void @fn_template_init_fpisequal(%struct_template_circuit_fpisequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 0
  %fpisequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 1
  %fpisequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 2
  %fpisequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 3
  %fpisequal.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fpisequal.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fpisequal.in.read_input_inner, [256 x [256 x i128]]** %fpisequal.in.declare_input, align 8
  %isEqual = alloca [256 x %struct_template_circuit_isequal*]*, align 8
  %isEqual4 = alloca [256 x %struct_template_circuit_isequal*], align 8
  store [256 x %struct_template_circuit_isequal*]* %isEqual4, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %idx6 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %sum7 = call i128 @fn_intrinsic_utils_init()
  %lt = alloca [256 x %struct_template_circuit_biglessthan*]*, align 8
  %lt8 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  store [256 x %struct_template_circuit_biglessthan*]* %lt8, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch59, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add61, %loop.latch59 ]
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpisequal.n.read_arg_inner, i128 %fpisequal.k.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %lt11 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_biglessthan* %call, %struct_template_circuit_biglessthan** %lt11, align 8
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fpisequal.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %i.0, i128 %idx.0
  %in15 = load i128, i128* %array_getter, align 4
  %lt16 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter18 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt16, i128 0, i128 %i.0
  %lt19 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter18, align 8
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt19, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter20, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %idx.0
  %lt23 = load i128, i128* %array_getter22, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt23, i128 %in15, i1* @constraint.306)
  %ptr_getter24 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter26 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter24, i128 0, i128 %i.0
  %lt27 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter26, align 8
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt27, i32 0, i32 2
  %biglessthan.a.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %lt31 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter29, i128 0, i128 %idx.0
  store i128 %in15, i128* %lt31, align 4
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %fpisequal.p.read_arg_inner, i128 0, i128 %idx.0
  %p34 = load i128, i128* %array_getter33, align 4
  %lt35 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter37 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt35, i128 0, i128 %i.0
  %lt38 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter37, align 8
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt38, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %array_getter41 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %idx.0
  %lt42 = load i128, i128* %array_getter41, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt42, i128 %p34, i1* @constraint.307)
  %ptr_getter43 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter45 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter43, i128 0, i128 %i.0
  %lt46 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter45, align 8
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt46, i32 0, i32 3
  %biglessthan.b.read_input_outter48 = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %lt50 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter48, i128 0, i128 %idx.0
  store i128 %p34, i128* %lt50, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fpisequal.k.read_arg_inner
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %lt54 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lt, align 8
  %array_getter56 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt54, i128 0, i128 %i.0
  %lt57 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt57, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter58, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.308)
  br label %loop.latch59

loop.latch59:                                     ; preds = %loop.exit
  %add61 = add i128 %i.0, 1
  %slt63 = icmp slt i128 %add61, 2
  br i1 %slt63, label %loop.body, label %loop.exit64

loop.exit64:                                      ; preds = %loop.latch59
  %add66 = add i128 %fpisequal.k.read_arg_inner, 1
  br label %loop.body67

loop.body67:                                      ; preds = %loop.latch116, %loop.exit64
  %i.1 = phi i128 [ 0, %loop.exit64 ], [ %add118, %loop.latch116 ]
  %sum.0 = phi i128 [ 0, %loop.exit64 ], [ %add115, %loop.latch116 ]
  %call68 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %ptr_getter69 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %isEqual71 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter69, i128 0, i128 %i.1
  store %struct_template_circuit_isequal* %call68, %struct_template_circuit_isequal** %isEqual71, align 8
  %in72 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fpisequal.in.declare_input, align 8
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in72, i128 0, i128 0, i128 %i.1
  %in75 = load i128, i128* %array_getter74, align 4
  %isEqual76 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter78 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual76, i128 0, i128 %i.1
  %isEqual79 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter78, align 8
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual79, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter80, align 8
  %array_getter81 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %isEqual82 = load i128, i128* %array_getter81, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEqual82, i128 %in75, i1* @constraint.309)
  %ptr_getter83 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter85 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter83, i128 0, i128 %i.1
  %isEqual86 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter85, align 8
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual86, i32 0, i32 0
  %isequal.in.read_input_outter88 = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %isEqual89 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter88, i128 0, i128 0
  store i128 %in75, i128* %isEqual89, align 4
  %in90 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fpisequal.in.declare_input, align 8
  %array_getter92 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in90, i128 0, i128 1, i128 %i.1
  %in93 = load i128, i128* %array_getter92, align 4
  %isEqual94 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter96 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual94, i128 0, i128 %i.1
  %isEqual97 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter96, align 8
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual97, i32 0, i32 0
  %isequal.in.read_input_outter99 = load [256 x i128]*, [256 x i128]** %struct_getter98, align 8
  %array_getter100 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter99, i128 0, i128 1
  %isEqual101 = load i128, i128* %array_getter100, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEqual101, i128 %in93, i1* @constraint.310)
  %ptr_getter102 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter104 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter102, i128 0, i128 %i.1
  %isEqual105 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter104, align 8
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual105, i32 0, i32 0
  %isequal.in.read_input_outter107 = load [256 x i128]*, [256 x i128]** %struct_getter106, align 8
  %isEqual108 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter107, i128 0, i128 1
  store i128 %in93, i128* %isEqual108, align 4
  %isEqual110 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter112 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual110, i128 0, i128 %i.1
  %isEqual113 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter112, align 8
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual113, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter114, align 4
  %add115 = add i128 %sum.0, %isequal.out.read_output_outter
  br label %loop.latch116

loop.latch116:                                    ; preds = %loop.body67
  %add118 = add i128 %i.1, 1
  %slt121 = icmp slt i128 %add118, %fpisequal.k.read_arg_inner
  br i1 %slt121, label %loop.body67, label %loop.exit122

loop.exit122:                                     ; preds = %loop.latch116
  %call123 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %ptr_getter124 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %isEqual126 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter124, i128 0, i128 %fpisequal.k.read_arg_inner
  store %struct_template_circuit_isequal* %call123, %struct_template_circuit_isequal** %isEqual126, align 8
  %isEqual128 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter130 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual128, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual131 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter130, align 8
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual131, i32 0, i32 0
  %isequal.in.read_input_outter133 = load [256 x i128]*, [256 x i128]** %struct_getter132, align 8
  %array_getter134 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter133, i128 0, i128 0
  %isEqual135 = load i128, i128* %array_getter134, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEqual135, i128 %add115, i1* @constraint.311)
  %ptr_getter136 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter138 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter136, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual139 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter138, align 8
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual139, i32 0, i32 0
  %isequal.in.read_input_outter141 = load [256 x i128]*, [256 x i128]** %struct_getter140, align 8
  %isEqual142 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter141, i128 0, i128 0
  store i128 %add115, i128* %isEqual142, align 4
  %isEqual144 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter146 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual144, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual147 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter146, align 8
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual147, i32 0, i32 0
  %isequal.in.read_input_outter149 = load [256 x i128]*, [256 x i128]** %struct_getter148, align 8
  %array_getter150 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter149, i128 0, i128 1
  %isEqual151 = load i128, i128* %array_getter150, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEqual151, i128 %fpisequal.k.read_arg_inner, i1* @constraint.312)
  %ptr_getter152 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter154 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %ptr_getter152, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual155 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter154, align 8
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual155, i32 0, i32 0
  %isequal.in.read_input_outter157 = load [256 x i128]*, [256 x i128]** %struct_getter156, align 8
  %isEqual158 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter157, i128 0, i128 1
  store i128 %fpisequal.k.read_arg_inner, i128* %isEqual158, align 4
  %isEqual159 = load [256 x %struct_template_circuit_isequal*]*, [256 x %struct_template_circuit_isequal*]** %isEqual, align 8
  %array_getter161 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual159, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual162 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter161, align 8
  %struct_getter163 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual162, i32 0, i32 1
  %isequal.out.read_output_outter164 = load i128, i128* %struct_getter163, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %isequal.out.read_output_outter164, i1* @constraint.313)
  %fpisequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 4
  store i128 %isequal.out.read_output_outter164, i128* %fpisequal.out.write_output_inner, align 4
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 4
  %fpisequal.out.read_output_inner = load i128, i128* %struct_getter168, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit122
  %ptr_cast = bitcast [256 x %struct_template_circuit_biglessthan*]** %lt to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast169 = bitcast [256 x %struct_template_circuit_isequal*]** %isEqual to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast169, i128 %add66)
  %ptr_cast170 = bitcast [256 x [256 x i128]]** %fpisequal.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast170, i128 2, i128 %fpisequal.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %fpisequal.out.write_output_inner172 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 4
  store i128 %fpisequal.out.read_output_inner, i128* %fpisequal.out.write_output_inner172, align 4
  ret void
}

define %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpisequal = alloca %struct_template_circuit_fpisequal, align 8
  %fpisequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal, i32 0, i32 0
  store i128 %0, i128* %fpisequal.n.write_arg_inner, align 4
  %fpisequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal, i32 0, i32 1
  store i128 %1, i128* %fpisequal.k.write_arg_inner, align 4
  %fpisequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpisequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal
}

define [256 x [256 x [256 x i128]]]* @get_signed_Fp2_carry_witness(i128 %0, i128 %1, i128 %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %i2 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %i.0
  %a4 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a4, [256 x i128]* %spice_inline_array, align 4
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %0, i128 %1, i128 %2, [256 x i128]* %spice_inline_array, [256 x i128]* %4)
  %out6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.0
  %5 = bitcast [256 x [256 x i128]]* %out6 to i8*
  %6 = bitcast [256 x [256 x i128]]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 2
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_fpsubtract(%struct_template_circuit_fpsubtract* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 0
  %fpsubtract.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 1
  %fpsubtract.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 2
  %fpsubtract.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 3
  %fpsubtract.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %fpsubtract.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpsubtract.a.read_input_inner, [256 x i128]** %fpsubtract.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 4
  %fpsubtract.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %fpsubtract.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpsubtract.b.read_input_inner, [256 x i128]** %fpsubtract.b.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %fpsubtract.tmp.declare_inter = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %tmp, [256 x i128]** %fpsubtract.tmp.declare_inter, align 8
  %fpsubtract.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall6 to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %fpsubtract.out.declare_output, align 8
  %flag = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %fpsubtract.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %fpsubtract.n.read_arg_inner, i128 %fpsubtract.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add36, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %fpsubtract.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.0
  %sub17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub17, i128 %a12, i1* @constraint.314)
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter19 = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %sub21 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter19, i128 0, i128 %i.0
  store i128 %a12, i128* %sub21, align 4
  %b = load [256 x i128]*, [256 x i128]** %fpsubtract.b.declare_input, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b24 = load i128, i128* %array_getter23, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.0
  %sub29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub29, i128 %b24, i1* @constraint.315)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %sub34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter32, i128 0, i128 %i.0
  store i128 %b24, i128* %sub34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add36 = add i128 %i.0, 1
  %slt = icmp slt i128 %add36, %fpsubtract.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 5
  %bigsub.underflow.read_output_outter = load i128, i128* %struct_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %flag, i128 %bigsub.underflow.read_output_outter, i1* @constraint.316)
  %fpsubtract.flag.write_inter_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 5
  store i128 %bigsub.underflow.read_output_outter, i128* %fpsubtract.flag.write_inter_inner, align 4
  %struct_getter44 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 5
  %fpsubtract.flag.read_inter_inner = load i128, i128* %struct_getter44, align 4
  %call47 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %fpsubtract.n.read_arg_inner, i128 %fpsubtract.k.read_arg_inner)
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch77, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add79, %loop.latch77 ]
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %i.1
  %sub53 = load i128, i128* %array_getter52, align 4
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call47, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.1
  %add58 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add58, i128 %sub53, i1* @constraint.317)
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call47, i32 0, i32 2
  %bigadd.a.read_input_outter61 = load [256 x i128]*, [256 x i128]** %struct_getter60, align 8
  %add63 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter61, i128 0, i128 %i.1
  store i128 %sub53, i128* %add63, align 4
  %array_getter65 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.p.read_arg_inner, i128 0, i128 %i.1
  %p66 = load i128, i128* %array_getter65, align 4
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call47, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter68, align 8
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.1
  %add71 = load i128, i128* %array_getter70, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add71, i128 %p66, i1* @constraint.318)
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call47, i32 0, i32 3
  %bigadd.b.read_input_outter74 = load [256 x i128]*, [256 x i128]** %struct_getter73, align 8
  %add76 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter74, i128 0, i128 %i.1
  store i128 %p66, i128* %add76, align 4
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.body48
  %add79 = add i128 %i.1, 1
  %slt82 = icmp slt i128 %add79, %fpsubtract.k.read_arg_inner
  br i1 %slt82, label %loop.body48, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch77
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch120, %loop.exit83
  %i.2 = phi i128 [ 0, %loop.exit83 ], [ %add122, %loop.latch120 ]
  %sub87 = sub i128 1, %fpsubtract.flag.read_inter_inner
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter90 = load [256 x i128]*, [256 x i128]** %struct_getter89, align 8
  %array_getter92 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter90, i128 0, i128 %i.2
  %sub93 = load i128, i128* %array_getter92, align 4
  %mul = mul i128 %sub87, %sub93
  %tmp94 = load [256 x i128]*, [256 x i128]** %fpsubtract.tmp.declare_inter, align 8
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp94, i128 0, i128 %i.2
  %tmp97 = load i128, i128* %array_getter96, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp97, i128 %mul, i1* @constraint.319)
  %ptr_getter98 = load [256 x i128]*, [256 x i128]** %fpsubtract.tmp.declare_inter, align 8
  %tmp100 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter98, i128 0, i128 %i.2
  store i128 %mul, i128* %tmp100, align 4
  %tmp101 = load [256 x i128]*, [256 x i128]** %fpsubtract.tmp.declare_inter, align 8
  %array_getter103 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp101, i128 0, i128 %i.2
  %tmp104 = load i128, i128* %array_getter103, align 4
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call47, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter107, align 8
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.2
  %add110 = load i128, i128* %array_getter109, align 4
  %mul111 = mul i128 %fpsubtract.flag.read_inter_inner, %add110
  %add112 = add i128 %tmp104, %mul111
  %out113 = load [256 x i128]*, [256 x i128]** %fpsubtract.out.declare_output, align 8
  %array_getter115 = getelementptr inbounds [256 x i128], [256 x i128]* %out113, i128 0, i128 %i.2
  %out116 = load i128, i128* %array_getter115, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out116, i128 %add112, i1* @constraint.320)
  %ptr_getter117 = load [256 x i128]*, [256 x i128]** %fpsubtract.out.declare_output, align 8
  %out119 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter117, i128 0, i128 %i.2
  store i128 %add112, i128* %out119, align 4
  br label %loop.latch120

loop.latch120:                                    ; preds = %loop.body85
  %add122 = add i128 %i.2, 1
  %slt125 = icmp slt i128 %add122, %fpsubtract.k.read_arg_inner
  br i1 %slt125, label %loop.body85, label %loop.exit126

loop.exit126:                                     ; preds = %loop.latch120
  br label %arraydim

arraydim:                                         ; preds = %loop.exit126
  %ptr_cast = bitcast [256 x i128]** %fpsubtract.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %fpsubtract.k.read_arg_inner)
  %ptr_cast127 = bitcast [256 x i128]** %fpsubtract.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast127, i128 %fpsubtract.k.read_arg_inner)
  %ptr_cast128 = bitcast [256 x i128]** %fpsubtract.tmp.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast128, i128 %fpsubtract.k.read_arg_inner)
  %ptr_cast129 = bitcast [256 x i128]** %fpsubtract.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast129, i128 %fpsubtract.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %fpsubtract.flag.write_inter_inner131 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 5
  store i128 %fpsubtract.flag.read_inter_inner, i128* %fpsubtract.flag.write_inter_inner131, align 4
  %tmp132 = load [256 x i128]*, [256 x i128]** %fpsubtract.tmp.declare_inter, align 8
  %fpsubtract.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 6
  store [256 x i128]* %tmp132, [256 x i128]** %fpsubtract.tmp.write_inter_inner, align 8
  %out133 = load [256 x i128]*, [256 x i128]** %fpsubtract.out.declare_output, align 8
  %fpsubtract.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 7
  store [256 x i128]* %out133, [256 x i128]** %fpsubtract.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpsubtract* @fn_template_build_fpsubtract(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpsubtract = alloca %struct_template_circuit_fpsubtract, align 8
  %fpsubtract.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract, i32 0, i32 0
  store i128 %0, i128* %fpsubtract.n.write_arg_inner, align 4
  %fpsubtract.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract, i32 0, i32 1
  store i128 %1, i128* %fpsubtract.k.write_arg_inner, align 4
  %fpsubtract.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpsubtract.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract
}

define void @fn_template_init_signedlinefunctionequalnocarry(%struct_template_circuit_signedlinefunctionequalnocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %0, i32 0, i32 0
  %signedlinefunctionequalnocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %0, i32 0, i32 1
  %signedlinefunctionequalnocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %0, i32 0, i32 2
  %signedlinefunctionequalnocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %0, i32 0, i32 3
  %signedlinefunctionequalnocarry.p.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %signedlinefunctionequalnocarry.p.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedlinefunctionequalnocarry.p.read_input_inner, [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %0, i32 0, i32 4
  %signedlinefunctionequalnocarry.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %signedlinefunctionequalnocarry.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionequalnocarry.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionequalnocarry.q.declare_input, align 8
  %j5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %LOGK8 = call i128 @fn_intrinsic_utils_init()
  %signedlinefunctionequalnocarry.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output, align 8
  %mul = mul i128 3, %signedlinefunctionequalnocarry.k.read_arg_inner
  %sub = sub i128 %mul, 2
  %call = call i128 @log_ceil(i128 %signedlinefunctionequalnocarry.k.read_arg_inner)
  %mul14 = mul i128 2, %signedlinefunctionequalnocarry.n.read_arg_inner
  %add = add i128 %mul14, 2
  %add16 = add i128 %add, %call
  %call17 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedlinefunctionequalnocarry.n.read_arg_inner, i128 %signedlinefunctionequalnocarry.k.read_arg_inner, i128 %add16)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add45, %loop.latch ]
  %P = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 0, i128 %i.0
  %P19 = load i128, i128* %array_getter, align 4
  %mul20 = mul i128 3, %P19
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call17, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %x_sq325 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq325, i128 %mul20, i1* @constraint.321)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call17, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %x_sq329 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter27, i128 0, i128 %i.0
  store i128 %mul20, i128* %x_sq329, align 4
  %P30 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input, align 8
  %array_getter32 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P30, i128 0, i128 0, i128 %i.0
  %P33 = load i128, i128* %array_getter32, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call17, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %x_sq338 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq338, i128 %P33, i1* @constraint.322)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call17, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter41 = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %x_sq343 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter41, i128 0, i128 %i.0
  store i128 %P33, i128* %x_sq343, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add45 = add i128 %i.0, 1
  %slt = icmp slt i128 %add45, %signedlinefunctionequalnocarry.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul50 = mul i128 2, %signedlinefunctionequalnocarry.k.read_arg_inner
  %sub51 = sub i128 %mul50, 1
  %mul54 = mul i128 3, %signedlinefunctionequalnocarry.n.read_arg_inner
  %mul56 = mul i128 2, %call
  %add57 = add i128 %mul54, %mul56
  %add58 = add i128 %add57, 2
  %call59 = call %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* @fn_template_build_signedfp12scalarmultiplynocarryunequal(i128 %signedlinefunctionequalnocarry.n.read_arg_inner, i128 %sub51, i128 %signedlinefunctionequalnocarry.k.read_arg_inner, i128 %add58)
  br label %loop.body60

loop.body60:                                      ; preds = %loop.latch76, %loop.exit
  %idx.0 = phi i128 [ 0, %loop.exit ], [ %add78, %loop.latch76 ]
  %struct_getter62 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call17, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter62, align 8
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %idx.0
  %x_sq365 = load i128, i128* %array_getter64, align 4
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 4
  %signedfp12scalarmultiplynocarryunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter67, align 8
  %array_getter69 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarryunequal.a.read_input_outter, i128 0, i128 %idx.0
  %Xmult70 = load i128, i128* %array_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult70, i128 %x_sq365, i1* @constraint.323)
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 4
  %signedfp12scalarmultiplynocarryunequal.a.read_input_outter73 = load [256 x i128]*, [256 x i128]** %struct_getter72, align 8
  %Xmult75 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarryunequal.a.read_input_outter73, i128 0, i128 %idx.0
  store i128 %x_sq365, i128* %Xmult75, align 4
  br label %loop.latch76

loop.latch76:                                     ; preds = %loop.body60
  %add78 = add i128 %idx.0, 1
  %mul81 = mul i128 2, %signedlinefunctionequalnocarry.k.read_arg_inner
  %sub82 = sub i128 %mul81, 1
  %slt83 = icmp slt i128 %add78, %sub82
  br i1 %slt83, label %loop.body60, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch76
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch149, %loop.exit84
  %i.1 = phi i128 [ 0, %loop.exit84 ], [ %add151, %loop.latch149 ]
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch143, %loop.body85
  %j.0 = phi i128 [ 0, %loop.body85 ], [ %add145, %loop.latch143 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch136, %loop.body86
  %idx.1 = phi i128 [ 0, %loop.body86 ], [ %add138, %loop.latch136 ]
  %eq = icmp eq i128 %i.1, 0
  %eq90 = icmp eq i128 %j.0, 0
  %and = and i1 %eq, %eq90
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body87
  %P91 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input, align 8
  %array_getter93 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P91, i128 0, i128 0, i128 %idx.1
  %P94 = load i128, i128* %array_getter93, align 4
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionequalnocarry.q.declare_input, align 8
  %array_getter98 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %Q99 = load i128, i128* %array_getter98, align 4
  %sub100 = sub i128 %P94, %Q99
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 5
  %signedfp12scalarmultiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter102, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %Xmult107 = load i128, i128* %array_getter106, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult107, i128 %sub100, i1* @constraint.324)
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 5
  %signedfp12scalarmultiplynocarryunequal.b.read_input_outter110 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter109, align 8
  %Xmult114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.b.read_input_outter110, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %sub100, i128* %Xmult114, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body87
  %Q115 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionequalnocarry.q.declare_input, align 8
  %array_getter119 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q115, i128 0, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %Q120 = load i128, i128* %array_getter119, align 4
  %neg = sub i128 0, %Q120
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 5
  %signedfp12scalarmultiplynocarryunequal.b.read_input_outter123 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter122, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.b.read_input_outter123, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %Xmult128 = load i128, i128* %array_getter127, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult128, i128 %neg, i1* @constraint.325)
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 5
  %signedfp12scalarmultiplynocarryunequal.b.read_input_outter131 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter130, align 8
  %Xmult135 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.b.read_input_outter131, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %neg, i128* %Xmult135, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch136

loop.latch136:                                    ; preds = %if.exit
  %add138 = add i128 %idx.1, 1
  %slt141 = icmp slt i128 %add138, %signedlinefunctionequalnocarry.k.read_arg_inner
  br i1 %slt141, label %loop.body87, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %j.0, 1
  %slt147 = icmp slt i128 %add145, 2
  br i1 %slt147, label %loop.body86, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %loop.latch149

loop.latch149:                                    ; preds = %loop.exit148
  %add151 = add i128 %i.1, 1
  %slt153 = icmp slt i128 %add151, 6
  br i1 %slt153, label %loop.body85, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch149
  %mul158 = mul i128 2, %signedlinefunctionequalnocarry.n.read_arg_inner
  %add160 = add i128 %mul158, %call
  %add161 = add i128 %add160, 1
  %call162 = call %struct_template_circuit_signedfp12scalarmultiplynocarry* @fn_template_build_signedfp12scalarmultiplynocarry(i128 %signedlinefunctionequalnocarry.n.read_arg_inner, i128 %signedlinefunctionequalnocarry.k.read_arg_inner, i128 %add161)
  br label %loop.body163

loop.body163:                                     ; preds = %loop.latch179, %loop.exit154
  %idx.2 = phi i128 [ 0, %loop.exit154 ], [ %add181, %loop.latch179 ]
  %P164 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input, align 8
  %array_getter166 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P164, i128 0, i128 1, i128 %idx.2
  %P167 = load i128, i128* %array_getter166, align 4
  %mul168 = mul i128 2, %P167
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter170, align 8
  %array_getter172 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_outter, i128 0, i128 %idx.2
  %Ymult173 = load i128, i128* %array_getter172, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult173, i128 %mul168, i1* @constraint.326)
  %struct_getter175 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_outter176 = load [256 x i128]*, [256 x i128]** %struct_getter175, align 8
  %Ymult178 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_outter176, i128 0, i128 %idx.2
  store i128 %mul168, i128* %Ymult178, align 4
  br label %loop.latch179

loop.latch179:                                    ; preds = %loop.body163
  %add181 = add i128 %idx.2, 1
  %slt184 = icmp slt i128 %add181, %signedlinefunctionequalnocarry.k.read_arg_inner
  br i1 %slt184, label %loop.body163, label %loop.exit185

loop.exit185:                                     ; preds = %loop.latch179
  br label %loop.body186

loop.body186:                                     ; preds = %loop.latch256, %loop.exit185
  %i.2 = phi i128 [ 0, %loop.exit185 ], [ %add258, %loop.latch256 ]
  br label %loop.body187

loop.body187:                                     ; preds = %loop.latch250, %loop.body186
  %j.1 = phi i128 [ 0, %loop.body186 ], [ %add252, %loop.latch250 ]
  br label %loop.body188

loop.body188:                                     ; preds = %loop.latch243, %loop.body187
  %idx.3 = phi i128 [ 0, %loop.body187 ], [ %add245, %loop.latch243 ]
  %eq192 = icmp eq i128 %i.2, 0
  %eq194 = icmp eq i128 %j.1, 0
  %and195 = and i1 %eq192, %eq194
  br i1 %and195, label %if.true189, label %if.false190

if.true189:                                       ; preds = %loop.body188
  %Q196 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionequalnocarry.q.declare_input, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q196, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.3
  %Q201 = load i128, i128* %array_getter200, align 4
  %P202 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input, align 8
  %array_getter204 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P202, i128 0, i128 1, i128 %idx.3
  %P205 = load i128, i128* %array_getter204, align 4
  %sub206 = sub i128 %Q201, %P205
  %struct_getter208 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter208, align 8
  %array_getter212 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.3
  %Ymult213 = load i128, i128* %array_getter212, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult213, i128 %sub206, i1* @constraint.327)
  %struct_getter215 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter216 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter215, align 8
  %Ymult220 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter216, i128 0, i128 %i.2, i128 %j.1, i128 %idx.3
  store i128 %sub206, i128* %Ymult220, align 4
  br label %if.exit242

if.false190:                                      ; preds = %loop.body188
  %Q221 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionequalnocarry.q.declare_input, align 8
  %array_getter225 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q221, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.3
  %Q226 = load i128, i128* %array_getter225, align 4
  %struct_getter228 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter229 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter228, align 8
  %array_getter233 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter229, i128 0, i128 %i.2, i128 %j.1, i128 %idx.3
  %Ymult234 = load i128, i128* %array_getter233, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult234, i128 %Q226, i1* @constraint.328)
  %struct_getter236 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter237 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter236, align 8
  %Ymult241 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter237, i128 0, i128 %i.2, i128 %j.1, i128 %idx.3
  store i128 %Q226, i128* %Ymult241, align 4
  br label %if.exit242

if.exit242:                                       ; preds = %if.false190, %if.true189
  br label %loop.latch243

loop.latch243:                                    ; preds = %if.exit242
  %add245 = add i128 %idx.3, 1
  %slt248 = icmp slt i128 %add245, %signedlinefunctionequalnocarry.k.read_arg_inner
  br i1 %slt248, label %loop.body188, label %loop.exit249

loop.exit249:                                     ; preds = %loop.latch243
  br label %loop.latch250

loop.latch250:                                    ; preds = %loop.exit249
  %add252 = add i128 %j.1, 1
  %slt254 = icmp slt i128 %add252, 2
  br i1 %slt254, label %loop.body187, label %loop.exit255

loop.exit255:                                     ; preds = %loop.latch250
  br label %loop.latch256

loop.latch256:                                    ; preds = %loop.exit255
  %add258 = add i128 %i.2, 1
  %slt260 = icmp slt i128 %add258, 6
  br i1 %slt260, label %loop.body186, label %loop.exit261

loop.exit261:                                     ; preds = %loop.latch256
  br label %loop.body262

loop.body262:                                     ; preds = %loop.latch333, %loop.exit261
  %i.3 = phi i128 [ 0, %loop.exit261 ], [ %add335, %loop.latch333 ]
  br label %loop.body263

loop.body263:                                     ; preds = %loop.latch327, %loop.body262
  %j.2 = phi i128 [ 0, %loop.body262 ], [ %add329, %loop.latch327 ]
  br label %loop.body264

loop.body264:                                     ; preds = %loop.latch318, %loop.body263
  %idx.4 = phi i128 [ 0, %loop.body263 ], [ %add320, %loop.latch318 ]
  %mul269 = mul i128 2, %signedlinefunctionequalnocarry.k.read_arg_inner
  %sub270 = sub i128 %mul269, 1
  %slt271 = icmp slt i128 %idx.4, %sub270
  br i1 %slt271, label %if.true265, label %if.false266

if.true265:                                       ; preds = %loop.body264
  %struct_getter273 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 6
  %signedfp12scalarmultiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter273, align 8
  %array_getter277 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  %Xmult278 = load i128, i128* %array_getter277, align 4
  %struct_getter280 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call162, i32 0, i32 5
  %signedfp12scalarmultiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter280, align 8
  %array_getter284 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.out.read_output_outter, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  %Ymult285 = load i128, i128* %array_getter284, align 4
  %add286 = add i128 %Xmult278, %Ymult285
  %out287 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output, align 8
  %array_getter291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out287, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  %out292 = load i128, i128* %array_getter291, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out292, i128 %add286, i1* @constraint.329)
  %ptr_getter293 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output, align 8
  %out297 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter293, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  store i128 %add286, i128* %out297, align 4
  br label %if.exit317

if.false266:                                      ; preds = %loop.body264
  %struct_getter299 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %call59, i32 0, i32 6
  %signedfp12scalarmultiplynocarryunequal.out.read_output_outter300 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter299, align 8
  %array_getter304 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.out.read_output_outter300, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  %Xmult305 = load i128, i128* %array_getter304, align 4
  %out306 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output, align 8
  %array_getter310 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out306, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  %out311 = load i128, i128* %array_getter310, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out311, i128 %Xmult305, i1* @constraint.330)
  %ptr_getter312 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output, align 8
  %out316 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter312, i128 0, i128 %i.3, i128 %j.2, i128 %idx.4
  store i128 %Xmult305, i128* %out316, align 4
  br label %if.exit317

if.exit317:                                       ; preds = %if.false266, %if.true265
  br label %loop.latch318

loop.latch318:                                    ; preds = %if.exit317
  %add320 = add i128 %idx.4, 1
  %mul323 = mul i128 3, %signedlinefunctionequalnocarry.k.read_arg_inner
  %sub324 = sub i128 %mul323, 2
  %slt325 = icmp slt i128 %add320, %sub324
  br i1 %slt325, label %loop.body264, label %loop.exit326

loop.exit326:                                     ; preds = %loop.latch318
  br label %loop.latch327

loop.latch327:                                    ; preds = %loop.exit326
  %add329 = add i128 %j.2, 1
  %slt331 = icmp slt i128 %add329, 2
  br i1 %slt331, label %loop.body263, label %loop.exit332

loop.exit332:                                     ; preds = %loop.latch327
  br label %loop.latch333

loop.latch333:                                    ; preds = %loop.exit332
  %add335 = add i128 %i.3, 1
  %slt337 = icmp slt i128 %add335, 6
  br i1 %slt337, label %loop.body262, label %loop.exit338

loop.exit338:                                     ; preds = %loop.latch333
  br label %arraydim

arraydim:                                         ; preds = %loop.exit338
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %sub)
  %ptr_cast339 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionequalnocarry.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast339, i128 2, i128 6, i128 2, i128 %signedlinefunctionequalnocarry.k.read_arg_inner)
  %ptr_cast340 = bitcast [256 x [256 x i128]]** %signedlinefunctionequalnocarry.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast340, i128 2, i128 %signedlinefunctionequalnocarry.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out341 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.declare_output, align 8
  %signedlinefunctionequalnocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out341, [256 x [256 x [256 x i128]]]** %signedlinefunctionequalnocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedlinefunctionequalnocarry* @fn_template_build_signedlinefunctionequalnocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedlinefunctionequalnocarry = alloca %struct_template_circuit_signedlinefunctionequalnocarry, align 8
  %signedlinefunctionequalnocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %struct_template_circuit_signedlinefunctionequalnocarry, i32 0, i32 0
  store i128 %0, i128* %signedlinefunctionequalnocarry.n.write_arg_inner, align 4
  %signedlinefunctionequalnocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %struct_template_circuit_signedlinefunctionequalnocarry, i32 0, i32 1
  store i128 %1, i128* %signedlinefunctionequalnocarry.k.write_arg_inner, align 4
  %signedlinefunctionequalnocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %struct_template_circuit_signedlinefunctionequalnocarry, i32 0, i32 2
  store i128 %2, i128* %signedlinefunctionequalnocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedlinefunctionequalnocarry* %struct_template_circuit_signedlinefunctionequalnocarry
}

define [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %call = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  ret [256 x [256 x i128]]* %call
}

define void @fn_template_init_signedlinefunctionunequalnocarry(%struct_template_circuit_signedlinefunctionunequalnocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %0, i32 0, i32 0
  %signedlinefunctionunequalnocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %0, i32 0, i32 1
  %signedlinefunctionunequalnocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %0, i32 0, i32 2
  %signedlinefunctionunequalnocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %0, i32 0, i32 3
  %signedlinefunctionunequalnocarry.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %signedlinefunctionunequalnocarry.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.p.read_input_inner, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %0, i32 0, i32 4
  %signedlinefunctionunequalnocarry.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %signedlinefunctionunequalnocarry.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarry.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarry.q.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %signedlinefunctionunequalnocarry.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output, align 8
  %LOGK7 = call i128 @fn_intrinsic_utils_init()
  %idx8 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %signedlinefunctionunequalnocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %call = call i128 @log_ceil(i128 %signedlinefunctionunequalnocarry.k.read_arg_inner)
  %mul14 = mul i128 2, %signedlinefunctionunequalnocarry.n.read_arg_inner
  %add = add i128 %mul14, %call
  %call16 = call %struct_template_circuit_signedfp12scalarmultiplynocarry* @fn_template_build_signedfp12scalarmultiplynocarry(i128 %signedlinefunctionunequalnocarry.n.read_arg_inner, i128 %signedlinefunctionunequalnocarry.k.read_arg_inner, i128 %add)
  %mul20 = mul i128 2, %signedlinefunctionunequalnocarry.n.read_arg_inner
  %add22 = add i128 %mul20, %call
  %call23 = call %struct_template_circuit_signedfp12scalarmultiplynocarry* @fn_template_build_signedfp12scalarmultiplynocarry(i128 %signedlinefunctionunequalnocarry.n.read_arg_inner, i128 %signedlinefunctionunequalnocarry.k.read_arg_inner, i128 %add22)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add61, %loop.latch ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 0, i128 1, i128 %i.0
  %P25 = load i128, i128* %array_getter, align 4
  %P26 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P26, i128 0, i128 1, i128 1, i128 %i.0
  %P29 = load i128, i128* %array_getter28, align 4
  %sub30 = sub i128 %P25, %P29
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call16, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter32, align 8
  %array_getter34 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_outter, i128 0, i128 %i.0
  %Xmult35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult35, i128 %sub30, i1* @constraint.331)
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call16, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_outter37 = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %Xmult39 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_outter37, i128 0, i128 %i.0
  store i128 %sub30, i128* %Xmult39, align 4
  %P40 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P40, i128 0, i128 1, i128 0, i128 %i.0
  %P43 = load i128, i128* %array_getter42, align 4
  %P44 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P44, i128 0, i128 0, i128 0, i128 %i.0
  %P47 = load i128, i128* %array_getter46, align 4
  %sub48 = sub i128 %P43, %P47
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call23, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_outter51 = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %array_getter53 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_outter51, i128 0, i128 %i.0
  %Ymult54 = load i128, i128* %array_getter53, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult54, i128 %sub48, i1* @constraint.332)
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call23, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_outter57 = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %Ymult59 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_outter57, i128 0, i128 %i.0
  store i128 %sub48, i128* %Ymult59, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add61 = add i128 %i.0, 1
  %slt = icmp slt i128 %add61, %signedlinefunctionunequalnocarry.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch120, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add122, %loop.latch120 ]
  br label %loop.body65

loop.body65:                                      ; preds = %loop.latch114, %loop.body64
  %j.0 = phi i128 [ 0, %loop.body64 ], [ %add116, %loop.latch114 ]
  br label %loop.body66

loop.body66:                                      ; preds = %loop.latch107, %loop.body65
  %idx.0 = phi i128 [ 0, %loop.body65 ], [ %add109, %loop.latch107 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarry.q.declare_input, align 8
  %array_getter70 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  %Q71 = load i128, i128* %array_getter70, align 4
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call16, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter73, align 8
  %array_getter77 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  %Xmult78 = load i128, i128* %array_getter77, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Xmult78, i128 %Q71, i1* @constraint.333)
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call16, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter81 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter80, align 8
  %Xmult85 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter81, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  store i128 %Q71, i128* %Xmult85, align 4
  %Q86 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarry.q.declare_input, align 8
  %array_getter90 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q86, i128 0, i128 1, i128 %i.1, i128 %j.0, i128 %idx.0
  %Q91 = load i128, i128* %array_getter90, align 4
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call23, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter94 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter93, align 8
  %array_getter98 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter94, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  %Ymult99 = load i128, i128* %array_getter98, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Ymult99, i128 %Q91, i1* @constraint.334)
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call23, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_outter102 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter101, align 8
  %Ymult106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_outter102, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  store i128 %Q91, i128* %Ymult106, align 4
  br label %loop.latch107

loop.latch107:                                    ; preds = %loop.body66
  %add109 = add i128 %idx.0, 1
  %slt112 = icmp slt i128 %add109, %signedlinefunctionunequalnocarry.k.read_arg_inner
  br i1 %slt112, label %loop.body66, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch107
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.exit113
  %add116 = add i128 %j.0, 1
  %slt118 = icmp slt i128 %add116, 2
  br i1 %slt118, label %loop.body65, label %loop.exit119

loop.exit119:                                     ; preds = %loop.latch114
  br label %loop.latch120

loop.latch120:                                    ; preds = %loop.exit119
  %add122 = add i128 %i.1, 1
  %slt124 = icmp slt i128 %add122, 6
  br i1 %slt124, label %loop.body64, label %loop.exit125

loop.exit125:                                     ; preds = %loop.latch120
  %mul129 = mul i128 2, %signedlinefunctionunequalnocarry.n.read_arg_inner
  %add131 = add i128 %mul129, %call
  %call132 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedlinefunctionunequalnocarry.n.read_arg_inner, i128 %signedlinefunctionunequalnocarry.k.read_arg_inner, i128 %add131)
  %mul136 = mul i128 2, %signedlinefunctionunequalnocarry.n.read_arg_inner
  %add138 = add i128 %mul136, %call
  %call139 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedlinefunctionunequalnocarry.n.read_arg_inner, i128 %signedlinefunctionunequalnocarry.k.read_arg_inner, i128 %add138)
  br label %loop.body140

loop.body140:                                     ; preds = %loop.latch199, %loop.exit125
  %i.2 = phi i128 [ 0, %loop.exit125 ], [ %add201, %loop.latch199 ]
  %P141 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P141, i128 0, i128 0, i128 0, i128 %i.2
  %P144 = load i128, i128* %array_getter143, align 4
  %struct_getter146 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call132, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter146, align 8
  %array_getter148 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.2
  %x1y2149 = load i128, i128* %array_getter148, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x1y2149, i128 %P144, i1* @constraint.335)
  %struct_getter151 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call132, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter152 = load [256 x i128]*, [256 x i128]** %struct_getter151, align 8
  %x1y2154 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter152, i128 0, i128 %i.2
  store i128 %P144, i128* %x1y2154, align 4
  %P155 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter157 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P155, i128 0, i128 1, i128 1, i128 %i.2
  %P158 = load i128, i128* %array_getter157, align 4
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call132, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter160, align 8
  %array_getter162 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.2
  %x1y2163 = load i128, i128* %array_getter162, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x1y2163, i128 %P158, i1* @constraint.336)
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call132, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter166 = load [256 x i128]*, [256 x i128]** %struct_getter165, align 8
  %x1y2168 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter166, i128 0, i128 %i.2
  store i128 %P158, i128* %x1y2168, align 4
  %P169 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P169, i128 0, i128 1, i128 0, i128 %i.2
  %P172 = load i128, i128* %array_getter171, align 4
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call139, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter175 = load [256 x i128]*, [256 x i128]** %struct_getter174, align 8
  %array_getter177 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter175, i128 0, i128 %i.2
  %x2y1178 = load i128, i128* %array_getter177, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x2y1178, i128 %P172, i1* @constraint.337)
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call139, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter181 = load [256 x i128]*, [256 x i128]** %struct_getter180, align 8
  %x2y1183 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter181, i128 0, i128 %i.2
  store i128 %P172, i128* %x2y1183, align 4
  %P184 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input, align 8
  %array_getter186 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P184, i128 0, i128 0, i128 1, i128 %i.2
  %P187 = load i128, i128* %array_getter186, align 4
  %struct_getter189 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call139, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter190 = load [256 x i128]*, [256 x i128]** %struct_getter189, align 8
  %array_getter192 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter190, i128 0, i128 %i.2
  %x2y1193 = load i128, i128* %array_getter192, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x2y1193, i128 %P187, i1* @constraint.338)
  %struct_getter195 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call139, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter196 = load [256 x i128]*, [256 x i128]** %struct_getter195, align 8
  %x2y1198 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter196, i128 0, i128 %i.2
  store i128 %P187, i128* %x2y1198, align 4
  br label %loop.latch199

loop.latch199:                                    ; preds = %loop.body140
  %add201 = add i128 %i.2, 1
  %slt204 = icmp slt i128 %add201, %signedlinefunctionunequalnocarry.k.read_arg_inner
  br i1 %slt204, label %loop.body140, label %loop.exit205

loop.exit205:                                     ; preds = %loop.latch199
  br label %loop.body206

loop.body206:                                     ; preds = %loop.latch295, %loop.exit205
  %i.3 = phi i128 [ 0, %loop.exit205 ], [ %add297, %loop.latch295 ]
  br label %loop.body207

loop.body207:                                     ; preds = %loop.latch289, %loop.body206
  %j.1 = phi i128 [ 0, %loop.body206 ], [ %add291, %loop.latch289 ]
  br label %loop.body208

loop.body208:                                     ; preds = %loop.latch280, %loop.body207
  %idx.1 = phi i128 [ 0, %loop.body207 ], [ %add282, %loop.latch280 ]
  %eq = icmp eq i128 %i.3, 0
  %eq211 = icmp eq i128 %j.1, 0
  %and = and i1 %eq, %eq211
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body208
  %struct_getter213 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call16, i32 0, i32 5
  %signedfp12scalarmultiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter213, align 8
  %array_getter217 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.out.read_output_outter, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  %Xmult218 = load i128, i128* %array_getter217, align 4
  %struct_getter220 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call23, i32 0, i32 5
  %signedfp12scalarmultiplynocarry.out.read_output_outter221 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter220, align 8
  %array_getter225 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.out.read_output_outter221, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  %Ymult226 = load i128, i128* %array_getter225, align 4
  %add227 = add i128 %Xmult218, %Ymult226
  %struct_getter229 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call132, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter229, align 8
  %array_getter231 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %idx.1
  %x1y2232 = load i128, i128* %array_getter231, align 4
  %add233 = add i128 %add227, %x1y2232
  %struct_getter235 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call139, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter236 = load [256 x i128]*, [256 x i128]** %struct_getter235, align 8
  %array_getter238 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter236, i128 0, i128 %idx.1
  %x2y1239 = load i128, i128* %array_getter238, align 4
  %sub240 = sub i128 %add233, %x2y1239
  %out241 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out241, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  %out246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out246, i128 %sub240, i1* @constraint.339)
  %ptr_getter247 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output, align 8
  %out251 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter247, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  store i128 %sub240, i128* %out251, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body208
  %struct_getter253 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call16, i32 0, i32 5
  %signedfp12scalarmultiplynocarry.out.read_output_outter254 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter253, align 8
  %array_getter258 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.out.read_output_outter254, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  %Xmult259 = load i128, i128* %array_getter258, align 4
  %struct_getter261 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %call23, i32 0, i32 5
  %signedfp12scalarmultiplynocarry.out.read_output_outter262 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter261, align 8
  %array_getter266 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.out.read_output_outter262, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  %Ymult267 = load i128, i128* %array_getter266, align 4
  %add268 = add i128 %Xmult259, %Ymult267
  %out269 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output, align 8
  %array_getter273 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out269, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  %out274 = load i128, i128* %array_getter273, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out274, i128 %add268, i1* @constraint.340)
  %ptr_getter275 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output, align 8
  %out279 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter275, i128 0, i128 %i.3, i128 %j.1, i128 %idx.1
  store i128 %add268, i128* %out279, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch280

loop.latch280:                                    ; preds = %if.exit
  %add282 = add i128 %idx.1, 1
  %mul285 = mul i128 2, %signedlinefunctionunequalnocarry.k.read_arg_inner
  %sub286 = sub i128 %mul285, 1
  %slt287 = icmp slt i128 %add282, %sub286
  br i1 %slt287, label %loop.body208, label %loop.exit288

loop.exit288:                                     ; preds = %loop.latch280
  br label %loop.latch289

loop.latch289:                                    ; preds = %loop.exit288
  %add291 = add i128 %j.1, 1
  %slt293 = icmp slt i128 %add291, 2
  br i1 %slt293, label %loop.body207, label %loop.exit294

loop.exit294:                                     ; preds = %loop.latch289
  br label %loop.latch295

loop.latch295:                                    ; preds = %loop.exit294
  %add297 = add i128 %i.3, 1
  %slt299 = icmp slt i128 %add297, 6
  br i1 %slt299, label %loop.body206, label %loop.exit300

loop.exit300:                                     ; preds = %loop.latch295
  br label %arraydim

arraydim:                                         ; preds = %loop.exit300
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %sub)
  %ptr_cast301 = bitcast [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast301, i128 2, i128 2, i128 %signedlinefunctionunequalnocarry.k.read_arg_inner)
  %ptr_cast302 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %signedlinefunctionunequalnocarry.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast302, i128 2, i128 6, i128 2, i128 %signedlinefunctionunequalnocarry.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out303 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.declare_output, align 8
  %signedlinefunctionunequalnocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out303, [256 x [256 x [256 x i128]]]** %signedlinefunctionunequalnocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedlinefunctionunequalnocarry* @fn_template_build_signedlinefunctionunequalnocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedlinefunctionunequalnocarry = alloca %struct_template_circuit_signedlinefunctionunequalnocarry, align 8
  %signedlinefunctionunequalnocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %struct_template_circuit_signedlinefunctionunequalnocarry, i32 0, i32 0
  store i128 %0, i128* %signedlinefunctionunequalnocarry.n.write_arg_inner, align 4
  %signedlinefunctionunequalnocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %struct_template_circuit_signedlinefunctionunequalnocarry, i32 0, i32 1
  store i128 %1, i128* %signedlinefunctionunequalnocarry.k.write_arg_inner, align 4
  %signedlinefunctionunequalnocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %struct_template_circuit_signedlinefunctionunequalnocarry, i32 0, i32 2
  store i128 %2, i128* %signedlinefunctionunequalnocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedlinefunctionunequalnocarry* %struct_template_circuit_signedlinefunctionunequalnocarry
}

define void @fn_template_init_fp2conjugate(%struct_template_circuit_fp2conjugate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 0
  %fp2conjugate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 1
  %fp2conjugate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 2
  %fp2conjugate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 3
  %fp2conjugate.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2conjugate.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2conjugate.in.read_input_inner, [256 x [256 x i128]]** %fp2conjugate.in.declare_input, align 8
  %fp2conjugate.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2conjugate.out.declare_output, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %fp2conjugate.n.read_arg_inner, i128 %fp2conjugate.k.read_arg_inner, [256 x i128]* %fp2conjugate.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 1, i128 %i.0
  %in8 = load i128, i128* %array_getter, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %i.0
  %neg113 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_utils_constraint(i128 %neg113, i128 %in8, i1* @constraint.341)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %neg117 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter15, i128 0, i128 %i.0
  store i128 %in8, i128* %neg117, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2conjugate.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch45, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add47, %loop.latch45 ]
  %in22 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.in.declare_input, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in22, i128 0, i128 0, i128 %i.1
  %in25 = load i128, i128* %array_getter24, align 4
  %out26 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.out.declare_output, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out26, i128 0, i128 0, i128 %i.1
  %out29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out29, i128 %in25, i1* @constraint.342)
  %ptr_getter30 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.out.declare_output, align 8
  %out32 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter30, i128 0, i128 0, i128 %i.1
  store i128 %in25, i128* %out32, align 4
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %array_getter36 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %i.1
  %neg137 = load i128, i128* %array_getter36, align 4
  %out38 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.out.declare_output, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out38, i128 0, i128 1, i128 %i.1
  %out41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out41, i128 %neg137, i1* @constraint.343)
  %ptr_getter42 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.out.declare_output, align 8
  %out44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter42, i128 0, i128 1, i128 %i.1
  store i128 %neg137, i128* %out44, align 4
  br label %loop.latch45

loop.latch45:                                     ; preds = %loop.body21
  %add47 = add i128 %i.1, 1
  %slt50 = icmp slt i128 %add47, %fp2conjugate.k.read_arg_inner
  br i1 %slt50, label %loop.body21, label %loop.exit51

loop.exit51:                                      ; preds = %loop.latch45
  br label %arraydim

arraydim:                                         ; preds = %loop.exit51
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2conjugate.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2conjugate.k.read_arg_inner)
  %ptr_cast52 = bitcast [256 x [256 x i128]]** %fp2conjugate.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast52, i128 2, i128 %fp2conjugate.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2conjugate.out.declare_output, align 8
  %fp2conjugate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %out53, [256 x [256 x i128]]** %fp2conjugate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2conjugate* @fn_template_build_fp2conjugate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2conjugate = alloca %struct_template_circuit_fp2conjugate, align 8
  %fp2conjugate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate, i32 0, i32 0
  store i128 %0, i128* %fp2conjugate.n.write_arg_inner, align 4
  %fp2conjugate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate, i32 0, i32 1
  store i128 %1, i128* %fp2conjugate.k.write_arg_inner, align 4
  %fp2conjugate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2conjugate.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %2, [256 x [256 x [256 x i128]]]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %j19 = call i128 @fn_intrinsic_utils_init()
  %l21 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array29 = alloca [256 x [256 x i128]], align 8
  %uniform_array31 = alloca [256 x [256 x i128]], align 8
  %uniform_array33 = alloca [256 x [256 x i128]], align 8
  %uniform_array35 = alloca [256 x [256 x i128]], align 8
  %uniform_array37 = alloca [256 x [256 x i128]], align 8
  %uniform_array39 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch75, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add77, %loop.latch75 ]
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0, i128 0, i128 %j.0
  %a43 = load i128, i128* %array_getter, align 4
  %a046 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.0, i128 %j.0
  store i128 %a43, i128* %a046, align 4
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0, i128 1, i128 %j.0
  %a51 = load i128, i128* %array_getter50, align 4
  %a155 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array29, i128 0, i128 %i.0, i128 %j.0
  store i128 %a51, i128* %a155, align 4
  %array_getter58 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0, i128 0, i128 %j.0
  %b59 = load i128, i128* %array_getter58, align 4
  %b063 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array31, i128 0, i128 %i.0, i128 %j.0
  store i128 %b59, i128* %b063, align 4
  %array_getter67 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0, i128 1, i128 %j.0
  %b68 = load i128, i128* %array_getter67, align 4
  %b172 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array33, i128 0, i128 %i.0, i128 %j.0
  store i128 %b68, i128* %b172, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body40
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body40, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.exit
  %add77 = add i128 %i.0, 1
  %slt80 = icmp slt i128 %add77, 6
  br i1 %slt80, label %loop.body, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch75
  br label %loop.body82

loop.body82:                                      ; preds = %loop.latch103, %loop.exit81
  %i.1 = phi i128 [ 0, %loop.exit81 ], [ %add105, %loop.latch103 ]
  %array_getter86 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array31, i128 0, i128 %i.1
  %b087 = load [256 x i128], [256 x i128]* %array_getter86, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %b087, [256 x i128]* %spice_inline_array, align 4
  %call = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %spice_inline_array)
  %neg_b090 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array35, i128 0, i128 %i.1
  %5 = bitcast [256 x i128]* %neg_b090 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter96 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array33, i128 0, i128 %i.1
  %b197 = load [256 x i128], [256 x i128]* %array_getter96, align 4
  %spice_inline_array98 = alloca [256 x i128], align 8
  store [256 x i128] %b197, [256 x i128]* %spice_inline_array98, align 4
  %call99 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %spice_inline_array98)
  %neg_b1102 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array37, i128 0, i128 %i.1
  %7 = bitcast [256 x i128]* %neg_b1102 to i8*
  %8 = bitcast [256 x i128]* %call99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch103

loop.latch103:                                    ; preds = %loop.body82
  %add105 = add i128 %i.1, 1
  %slt108 = icmp slt i128 %add105, 6
  br i1 %slt108, label %loop.body82, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch103
  %uniform_array110 = alloca [256 x [256 x i128]], align 8
  %uniform_array111 = alloca [256 x [256 x i128]], align 8
  %uniform_array112 = alloca [256 x [256 x i128]], align 8
  %call118 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %uniform_array31)
  %call124 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array29, [256 x [256 x i128]]* %uniform_array37)
  %call130 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %uniform_array33)
  %call136 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array29, [256 x [256 x i128]]* %uniform_array31)
  %call142 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %uniform_array37)
  %call148 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array29, [256 x [256 x i128]]* %uniform_array35)
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch200, %loop.exit109
  %i.2 = phi i128 [ 0, %loop.exit109 ], [ %add202, %loop.latch200 ]
  %mul = mul i128 2, %1
  %array_getter154 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call118, i128 0, i128 %i.2
  %a0b0_var155 = load [256 x i128], [256 x i128]* %array_getter154, align 4
  %spice_inline_array156 = alloca [256 x i128], align 8
  store [256 x i128] %a0b0_var155, [256 x i128]* %spice_inline_array156, align 4
  %array_getter159 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call124, i128 0, i128 %i.2
  %a1b1_neg160 = load [256 x i128], [256 x i128]* %array_getter159, align 4
  %spice_inline_array161 = alloca [256 x i128], align 8
  store [256 x i128] %a1b1_neg160, [256 x i128]* %spice_inline_array161, align 4
  %call162 = call [256 x i128]* @long_add(i128 %0, i128 %mul, [256 x i128]* %spice_inline_array156, [256 x i128]* %spice_inline_array161)
  %real_init165 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array110, i128 0, i128 %i.2
  %9 = bitcast [256 x i128]* %real_init165 to i8*
  %10 = bitcast [256 x i128]* %call162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul168 = mul i128 2, %1
  %array_getter171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call130, i128 0, i128 %i.2
  %a0b1_var172 = load [256 x i128], [256 x i128]* %array_getter171, align 4
  %spice_inline_array173 = alloca [256 x i128], align 8
  store [256 x i128] %a0b1_var172, [256 x i128]* %spice_inline_array173, align 4
  %array_getter176 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call136, i128 0, i128 %i.2
  %a1b0_var177 = load [256 x i128], [256 x i128]* %array_getter176, align 4
  %spice_inline_array178 = alloca [256 x i128], align 8
  store [256 x i128] %a1b0_var177, [256 x i128]* %spice_inline_array178, align 4
  %call179 = call [256 x i128]* @long_add(i128 %0, i128 %mul168, [256 x i128]* %spice_inline_array173, [256 x i128]* %spice_inline_array178)
  %imag_init182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array111, i128 0, i128 %i.2
  %11 = bitcast [256 x i128]* %imag_init182 to i8*
  %12 = bitcast [256 x i128]* %call179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul185 = mul i128 2, %1
  %array_getter188 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call142, i128 0, i128 %i.2
  %a0b1_neg189 = load [256 x i128], [256 x i128]* %array_getter188, align 4
  %spice_inline_array190 = alloca [256 x i128], align 8
  store [256 x i128] %a0b1_neg189, [256 x i128]* %spice_inline_array190, align 4
  %array_getter193 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call148, i128 0, i128 %i.2
  %a1b0_neg194 = load [256 x i128], [256 x i128]* %array_getter193, align 4
  %spice_inline_array195 = alloca [256 x i128], align 8
  store [256 x i128] %a1b0_neg194, [256 x i128]* %spice_inline_array195, align 4
  %call196 = call [256 x i128]* @long_add(i128 %0, i128 %mul185, [256 x i128]* %spice_inline_array190, [256 x i128]* %spice_inline_array195)
  %imag_init_neg199 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array112, i128 0, i128 %i.2
  %13 = bitcast [256 x i128]* %imag_init_neg199 to i8*
  %14 = bitcast [256 x i128]* %call196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch200

loop.latch200:                                    ; preds = %loop.body149
  %add202 = add i128 %i.2, 1
  %mul205 = mul i128 2, 6
  %sub = sub i128 %mul205, 1
  %slt206 = icmp slt i128 %add202, %sub
  br i1 %slt206, label %loop.body149, label %loop.exit207

loop.exit207:                                     ; preds = %loop.latch200
  %uniform_array209 = alloca [256 x [256 x i128]], align 8
  %uniform_array211 = alloca [256 x [256 x i128]], align 8
  %uniform_array213 = alloca [256 x [256 x i128]], align 8
  %uniform_array215 = alloca [256 x [256 x i128]], align 8
  %uniform_array216 = alloca [256 x i128], align 8
  br label %loop.body217

loop.body217:                                     ; preds = %loop.latch221, %loop.exit207
  %i.3 = phi i128 [ 0, %loop.exit207 ], [ %add223, %loop.latch221 ]
  %zeros220 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array216, i128 0, i128 %i.3
  store i128 0, i128* %zeros220, align 4
  br label %loop.latch221

loop.latch221:                                    ; preds = %loop.body217
  %add223 = add i128 %i.3, 1
  %slt225 = icmp slt i128 %add223, 50
  br i1 %slt225, label %loop.body217, label %loop.exit226

loop.exit226:                                     ; preds = %loop.latch221
  br label %loop.body227

loop.body227:                                     ; preds = %loop.latch295, %loop.exit226
  %i.4 = phi i128 [ 0, %loop.exit226 ], [ %add297, %loop.latch295 ]
  %sub230 = sub i128 6, 1
  %eq = icmp eq i128 %i.4, %sub230
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body227
  %mul233 = mul i128 2, %1
  %add234 = add i128 %mul233, 1
  %call237 = call [256 x i128]* @long_add(i128 %0, i128 %add234, [256 x i128]* %uniform_array216, [256 x i128]* %uniform_array216)
  %real_carry240 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array209, i128 0, i128 %i.4
  %15 = bitcast [256 x i128]* %real_carry240 to i8*
  %16 = bitcast [256 x i128]* %call237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul243 = mul i128 2, %1
  %add244 = add i128 %mul243, 1
  %call247 = call [256 x i128]* @long_add(i128 %0, i128 %add244, [256 x i128]* %uniform_array216, [256 x i128]* %uniform_array216)
  %imag_carry250 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array211, i128 0, i128 %i.4
  %17 = bitcast [256 x i128]* %imag_carry250 to i8*
  %18 = bitcast [256 x i128]* %call247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %loop.body227
  %mul253 = mul i128 2, %1
  %add254 = add i128 %mul253, 1
  %add258 = add i128 %i.4, 6
  %array_getter259 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array110, i128 0, i128 %add258
  %real_init260 = load [256 x i128], [256 x i128]* %array_getter259, align 4
  %spice_inline_array261 = alloca [256 x i128], align 8
  store [256 x i128] %real_init260, [256 x i128]* %spice_inline_array261, align 4
  %add265 = add i128 %i.4, 6
  %array_getter266 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array112, i128 0, i128 %add265
  %imag_init_neg267 = load [256 x i128], [256 x i128]* %array_getter266, align 4
  %spice_inline_array268 = alloca [256 x i128], align 8
  store [256 x i128] %imag_init_neg267, [256 x i128]* %spice_inline_array268, align 4
  %call269 = call [256 x i128]* @long_add(i128 %0, i128 %add254, [256 x i128]* %spice_inline_array261, [256 x i128]* %spice_inline_array268)
  %real_carry272 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array209, i128 0, i128 %i.4
  %19 = bitcast [256 x i128]* %real_carry272 to i8*
  %20 = bitcast [256 x i128]* %call269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul275 = mul i128 2, %1
  %add276 = add i128 %mul275, 1
  %add280 = add i128 %i.4, 6
  %array_getter281 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array111, i128 0, i128 %add280
  %imag_init282 = load [256 x i128], [256 x i128]* %array_getter281, align 4
  %spice_inline_array283 = alloca [256 x i128], align 8
  store [256 x i128] %imag_init282, [256 x i128]* %spice_inline_array283, align 4
  %add287 = add i128 %i.4, 6
  %array_getter288 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array110, i128 0, i128 %add287
  %real_init289 = load [256 x i128], [256 x i128]* %array_getter288, align 4
  %spice_inline_array290 = alloca [256 x i128], align 8
  store [256 x i128] %real_init289, [256 x i128]* %spice_inline_array290, align 4
  %call291 = call [256 x i128]* @long_add(i128 %0, i128 %add276, [256 x i128]* %spice_inline_array283, [256 x i128]* %spice_inline_array290)
  %imag_carry294 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array211, i128 0, i128 %i.4
  %21 = bitcast [256 x i128]* %imag_carry294 to i8*
  %22 = bitcast [256 x i128]* %call291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch295

loop.latch295:                                    ; preds = %if.exit
  %add297 = add i128 %i.4, 1
  %slt300 = icmp slt i128 %add297, 6
  br i1 %slt300, label %loop.body227, label %loop.exit301

loop.exit301:                                     ; preds = %loop.latch295
  br label %loop.body302

loop.body302:                                     ; preds = %loop.latch345, %loop.exit301
  %i.5 = phi i128 [ 0, %loop.exit301 ], [ %add347, %loop.latch345 ]
  %mul305 = mul i128 2, %1
  %add306 = add i128 %mul305, 2
  %mul308 = mul i128 2, %1
  %add309 = add i128 %mul308, 1
  %array_getter312 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array209, i128 0, i128 %i.5
  %real_carry313 = load [256 x i128], [256 x i128]* %array_getter312, align 4
  %spice_inline_array314 = alloca [256 x i128], align 8
  store [256 x i128] %real_carry313, [256 x i128]* %spice_inline_array314, align 4
  %array_getter317 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array110, i128 0, i128 %i.5
  %real_init318 = load [256 x i128], [256 x i128]* %array_getter317, align 4
  %spice_inline_array319 = alloca [256 x i128], align 8
  store [256 x i128] %real_init318, [256 x i128]* %spice_inline_array319, align 4
  %call320 = call [256 x i128]* @long_add_unequal(i128 %0, i128 %add306, i128 %add309, [256 x i128]* %spice_inline_array314, [256 x i128]* %spice_inline_array319)
  %real_final323 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array213, i128 0, i128 %i.5
  %23 = bitcast [256 x i128]* %real_final323 to i8*
  %24 = bitcast [256 x i128]* %call320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul326 = mul i128 2, %1
  %add327 = add i128 %mul326, 2
  %mul329 = mul i128 2, %1
  %add330 = add i128 %mul329, 1
  %array_getter333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array211, i128 0, i128 %i.5
  %imag_carry334 = load [256 x i128], [256 x i128]* %array_getter333, align 4
  %spice_inline_array335 = alloca [256 x i128], align 8
  store [256 x i128] %imag_carry334, [256 x i128]* %spice_inline_array335, align 4
  %array_getter338 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array111, i128 0, i128 %i.5
  %imag_init339 = load [256 x i128], [256 x i128]* %array_getter338, align 4
  %spice_inline_array340 = alloca [256 x i128], align 8
  store [256 x i128] %imag_init339, [256 x i128]* %spice_inline_array340, align 4
  %call341 = call [256 x i128]* @long_add_unequal(i128 %0, i128 %add327, i128 %add330, [256 x i128]* %spice_inline_array335, [256 x i128]* %spice_inline_array340)
  %imag_final344 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array215, i128 0, i128 %i.5
  %25 = bitcast [256 x i128]* %imag_final344 to i8*
  %26 = bitcast [256 x i128]* %call341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch345

loop.latch345:                                    ; preds = %loop.body302
  %add347 = add i128 %i.5, 1
  %slt350 = icmp slt i128 %add347, 6
  br i1 %slt350, label %loop.body302, label %loop.exit351

loop.exit351:                                     ; preds = %loop.latch345
  %uniform_array353 = alloca [256 x [256 x [256 x i128]]], align 8
  %uniform_array355 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body356

loop.body356:                                     ; preds = %loop.latch385, %loop.exit351
  %i.6 = phi i128 [ 0, %loop.exit351 ], [ %add387, %loop.latch385 ]
  %add360 = add i128 %1, 3
  %array_getter363 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array213, i128 0, i128 %i.6
  %real_final364 = load [256 x i128], [256 x i128]* %array_getter363, align 4
  %spice_inline_array365 = alloca [256 x i128], align 8
  store [256 x i128] %real_final364, [256 x i128]* %spice_inline_array365, align 4
  %call367 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %add360, [256 x i128]* %spice_inline_array365, [256 x i128]* %4)
  %XYreal_temp370 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array353, i128 0, i128 %i.6
  %27 = bitcast [256 x [256 x i128]]* %XYreal_temp370 to i8*
  %28 = bitcast [256 x [256 x i128]]* %call367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  %add374 = add i128 %1, 3
  %array_getter377 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array215, i128 0, i128 %i.6
  %imag_final378 = load [256 x i128], [256 x i128]* %array_getter377, align 4
  %spice_inline_array379 = alloca [256 x i128], align 8
  store [256 x i128] %imag_final378, [256 x i128]* %spice_inline_array379, align 4
  %call381 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %add374, [256 x i128]* %spice_inline_array379, [256 x i128]* %4)
  %XYimag_temp384 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array355, i128 0, i128 %i.6
  %29 = bitcast [256 x [256 x i128]]* %XYimag_temp384 to i8*
  %30 = bitcast [256 x [256 x i128]]* %call381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch385

loop.latch385:                                    ; preds = %loop.body356
  %add387 = add i128 %i.6, 1
  %slt390 = icmp slt i128 %add387, 6
  br i1 %slt390, label %loop.body356, label %loop.exit391

loop.exit391:                                     ; preds = %loop.latch385
  br label %loop.body392

loop.body392:                                     ; preds = %loop.latch419, %loop.exit391
  %i.7 = phi i128 [ 0, %loop.exit391 ], [ %add421, %loop.latch419 ]
  br label %loop.body393

loop.body393:                                     ; preds = %loop.latch412, %loop.body392
  %j.1 = phi i128 [ 0, %loop.body392 ], [ %add414, %loop.latch412 ]
  %array_getter397 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array353, i128 0, i128 %i.7, i128 1, i128 %j.1
  %XYreal_temp398 = load i128, i128* %array_getter397, align 4
  %out402 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array39, i128 0, i128 %i.7, i128 0, i128 %j.1
  store i128 %XYreal_temp398, i128* %out402, align 4
  %array_getter406 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array355, i128 0, i128 %i.7, i128 1, i128 %j.1
  %XYimag_temp407 = load i128, i128* %array_getter406, align 4
  %out411 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array39, i128 0, i128 %i.7, i128 1, i128 %j.1
  store i128 %XYimag_temp407, i128* %out411, align 4
  br label %loop.latch412

loop.latch412:                                    ; preds = %loop.body393
  %add414 = add i128 %j.1, 1
  %slt417 = icmp slt i128 %add414, %1
  br i1 %slt417, label %loop.body393, label %loop.exit418

loop.exit418:                                     ; preds = %loop.latch412
  br label %loop.latch419

loop.latch419:                                    ; preds = %loop.exit418
  %add421 = add i128 %i.7, 1
  %slt424 = icmp slt i128 %add421, 6
  br i1 %slt424, label %loop.body392, label %loop.exit425

loop.exit425:                                     ; preds = %loop.latch419
  ret [256 x [256 x [256 x i128]]]* %uniform_array39
}

define void @fn_template_init_signedfp12cyclotomicsquarenocarry(%struct_template_circuit_signedfp12cyclotomicsquarenocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %0, i32 0, i32 0
  %signedfp12cyclotomicsquarenocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %0, i32 0, i32 1
  %signedfp12cyclotomicsquarenocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %0, i32 0, i32 2
  %signedfp12cyclotomicsquarenocarry.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter2, align 8
  %signedfp12cyclotomicsquarenocarry.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12cyclotomicsquarenocarry.in.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %cB23 = alloca [256 x [256 x i128]]*, align 8
  %cB233 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %cB233, [256 x [256 x i128]]** %cB23, align 8
  %j4 = call i128 @fn_intrinsic_utils_init()
  %cg5 = alloca [256 x [256 x i128]]*, align 8
  %cg55 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %cg55, [256 x [256 x i128]]** %cg5, align 8
  %signedfp12cyclotomicsquarenocarry.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %cB45 = alloca [256 x [256 x i128]]*, align 8
  %cB456 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %cB456, [256 x [256 x i128]]** %cB45, align 8
  %cg3 = alloca [256 x [256 x i128]]*, align 8
  %cg37 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %cg37, [256 x [256 x i128]]** %cg3, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %LOGK9 = call i128 @fn_intrinsic_utils_init()
  %XI010 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %call = call i128 @log_ceil(i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner)
  %mul15 = mul i128 2, %signedfp12cyclotomicsquarenocarry.n.read_arg_inner
  %add = add i128 %mul15, 1
  %add17 = add i128 %add, %call
  %call18 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp12cyclotomicsquarenocarry.n.read_arg_inner, i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner, i128 %add17)
  %mul22 = mul i128 2, %signedfp12cyclotomicsquarenocarry.n.read_arg_inner
  %add23 = add i128 %mul22, 1
  %add25 = add i128 %add23, %call
  %call26 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp12cyclotomicsquarenocarry.n.read_arg_inner, i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner, i128 %add25)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch99, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add101, %loop.latch99 ]
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add96, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in30 = load i128, i128* %array_getter, align 4
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter32, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %B2336 = load i128, i128* %array_getter35, align 4
  call void @fn_intrinsic_utils_constraint(i128 %B2336, i128 %in30, i1* @constraint.344)
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter38 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter37, align 8
  %B2341 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter38, i128 0, i128 %i.0, i128 %j.0
  store i128 %in30, i128* %B2341, align 4
  %in42 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in42, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in46 = load i128, i128* %array_getter45, align 4
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter48, align 8
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %B2352 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_utils_constraint(i128 %B2352, i128 %in46, i1* @constraint.345)
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter55 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter54, align 8
  %B2358 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter55, i128 0, i128 %i.0, i128 %j.0
  store i128 %in46, i128* %B2358, align 4
  %in59 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter62 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in59, i128 0, i128 2, i128 %i.0, i128 %j.0
  %in63 = load i128, i128* %array_getter62, align 4
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter66 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter65, align 8
  %array_getter69 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter66, i128 0, i128 %i.0, i128 %j.0
  %B4570 = load i128, i128* %array_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %B4570, i128 %in63, i1* @constraint.346)
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter73 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter72, align 8
  %B4576 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter73, i128 0, i128 %i.0, i128 %j.0
  store i128 %in63, i128* %B4576, align 4
  %in77 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter80 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in77, i128 0, i128 3, i128 %i.0, i128 %j.0
  %in81 = load i128, i128* %array_getter80, align 4
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter84 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter83, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter84, i128 0, i128 %i.0, i128 %j.0
  %B4588 = load i128, i128* %array_getter87, align 4
  call void @fn_intrinsic_utils_constraint(i128 %B4588, i128 %in81, i1* @constraint.347)
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter91 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter90, align 8
  %B4594 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter91, i128 0, i128 %i.0, i128 %j.0
  store i128 %in81, i128* %B4594, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body27
  %add96 = add i128 %j.0, 1
  %slt = icmp slt i128 %add96, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  br i1 %slt, label %loop.body27, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.exit
  %add101 = add i128 %i.0, 1
  %slt103 = icmp slt i128 %add101, 2
  br i1 %slt103, label %loop.body, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch99
  %mul108 = mul i128 2, %signedfp12cyclotomicsquarenocarry.n.read_arg_inner
  %add109 = add i128 %mul108, 5
  %add111 = add i128 %add109, %call
  %call112 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp12cyclotomicsquarenocarry.n.read_arg_inner, i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner, i128 %add111)
  %mul116 = mul i128 2, %signedfp12cyclotomicsquarenocarry.n.read_arg_inner
  %add117 = add i128 %mul116, 5
  %add119 = add i128 %add117, %call
  %call120 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp12cyclotomicsquarenocarry.n.read_arg_inner, i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner, i128 %add119)
  %in122 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter123 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in122, i128 0, i128 1
  %in124 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter123, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in124, [256 x [256 x i128]]* %spice_inline_array, align 4
  %call126 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array, i128 1)
  store [256 x [256 x i128]]* %call126, [256 x [256 x i128]]** %cg3, align 8
  %in128 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter129 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in128, i128 0, i128 3
  %in130 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter129, align 4
  %spice_inline_array131 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in130, [256 x [256 x i128]]* %spice_inline_array131, align 4
  %call133 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array131, i128 1)
  store [256 x [256 x i128]]* %call133, [256 x [256 x i128]]** %cg5, align 8
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch239, %loop.exit104
  %i.1 = phi i128 [ 0, %loop.exit104 ], [ %add241, %loop.latch239 ]
  br label %loop.body135

loop.body135:                                     ; preds = %loop.latch232, %loop.body134
  %j.1 = phi i128 [ 0, %loop.body134 ], [ %add234, %loop.latch232 ]
  %in136 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter139 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in136, i128 0, i128 0, i128 %i.1, i128 %j.1
  %in140 = load i128, i128* %array_getter139, align 4
  %in141 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter144 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in141, i128 0, i128 1, i128 %i.1, i128 %j.1
  %in145 = load i128, i128* %array_getter144, align 4
  %add146 = add i128 %in140, %in145
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call112, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter149 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter148, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter149, i128 0, i128 %i.1, i128 %j.1
  %A23153 = load i128, i128* %array_getter152, align 4
  call void @fn_intrinsic_utils_constraint(i128 %A23153, i128 %add146, i1* @constraint.348)
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call112, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter156 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter155, align 8
  %A23159 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter156, i128 0, i128 %i.1, i128 %j.1
  store i128 %add146, i128* %A23159, align 4
  %in160 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter163 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in160, i128 0, i128 0, i128 %i.1, i128 %j.1
  %in164 = load i128, i128* %array_getter163, align 4
  %cg3165 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cg3, align 8
  %array_getter168 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cg3165, i128 0, i128 %i.1, i128 %j.1
  %cg3169 = load i128, i128* %array_getter168, align 4
  %add170 = add i128 %in164, %cg3169
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call112, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter173 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter172, align 8
  %array_getter176 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter173, i128 0, i128 %i.1, i128 %j.1
  %A23177 = load i128, i128* %array_getter176, align 4
  call void @fn_intrinsic_utils_constraint(i128 %A23177, i128 %add170, i1* @constraint.349)
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call112, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter180 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter179, align 8
  %A23183 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter180, i128 0, i128 %i.1, i128 %j.1
  store i128 %add170, i128* %A23183, align 4
  %in184 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter187 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in184, i128 0, i128 2, i128 %i.1, i128 %j.1
  %in188 = load i128, i128* %array_getter187, align 4
  %in189 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter192 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in189, i128 0, i128 3, i128 %i.1, i128 %j.1
  %in193 = load i128, i128* %array_getter192, align 4
  %add194 = add i128 %in188, %in193
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call120, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter197 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter196, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter197, i128 0, i128 %i.1, i128 %j.1
  %A45201 = load i128, i128* %array_getter200, align 4
  call void @fn_intrinsic_utils_constraint(i128 %A45201, i128 %add194, i1* @constraint.350)
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call120, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter204 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter203, align 8
  %A45207 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter204, i128 0, i128 %i.1, i128 %j.1
  store i128 %add194, i128* %A45207, align 4
  %in208 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter211 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in208, i128 0, i128 2, i128 %i.1, i128 %j.1
  %in212 = load i128, i128* %array_getter211, align 4
  %cg5213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cg5, align 8
  %array_getter216 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cg5213, i128 0, i128 %i.1, i128 %j.1
  %cg5217 = load i128, i128* %array_getter216, align 4
  %add218 = add i128 %in212, %cg5217
  %struct_getter220 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call120, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter221 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter220, align 8
  %array_getter224 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter221, i128 0, i128 %i.1, i128 %j.1
  %A45225 = load i128, i128* %array_getter224, align 4
  call void @fn_intrinsic_utils_constraint(i128 %A45225, i128 %add218, i1* @constraint.351)
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call120, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter228 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter227, align 8
  %A45231 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter228, i128 0, i128 %i.1, i128 %j.1
  store i128 %add218, i128* %A45231, align 4
  br label %loop.latch232

loop.latch232:                                    ; preds = %loop.body135
  %add234 = add i128 %j.1, 1
  %slt237 = icmp slt i128 %add234, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  br i1 %slt237, label %loop.body135, label %loop.exit238

loop.exit238:                                     ; preds = %loop.latch232
  br label %loop.latch239

loop.latch239:                                    ; preds = %loop.exit238
  %add241 = add i128 %i.1, 1
  %slt243 = icmp slt i128 %add241, 2
  br i1 %slt243, label %loop.body134, label %loop.exit244

loop.exit244:                                     ; preds = %loop.latch239
  %mul246 = mul i128 2, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  %sub247 = sub i128 %mul246, 1
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter249, align 8
  %call251 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %sub247, [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 1)
  store [256 x [256 x i128]]* %call251, [256 x [256 x i128]]** %cB45, align 8
  %mul253 = mul i128 2, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  %sub254 = sub i128 %mul253, 1
  %struct_getter256 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter257 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter256, align 8
  %call259 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %sub254, [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter257, i128 1)
  store [256 x [256 x i128]]* %call259, [256 x [256 x i128]]** %cB23, align 8
  br label %loop.body260

loop.body260:                                     ; preds = %loop.latch492, %loop.exit244
  %i.2 = phi i128 [ 0, %loop.exit244 ], [ %add494, %loop.latch492 ]
  br label %loop.body261

loop.body261:                                     ; preds = %loop.latch483, %loop.body260
  %j.2 = phi i128 [ 0, %loop.body260 ], [ %add485, %loop.latch483 ]
  %slt264 = icmp slt i128 %j.2, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  br i1 %slt264, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body261
  %in265 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter268 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in265, i128 0, i128 0, i128 %i.2, i128 %j.2
  %in269 = load i128, i128* %array_getter268, align 4
  %cB45270 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cB45, align 8
  %array_getter273 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cB45270, i128 0, i128 %i.2, i128 %j.2
  %cB45274 = load i128, i128* %array_getter273, align 4
  %mul275 = mul i128 3, %cB45274
  %add276 = add i128 %in269, %mul275
  %mul277 = mul i128 2, %add276
  %out278 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter281 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out278, i128 0, i128 0, i128 %i.2, i128 %j.2
  %out282 = load i128, i128* %array_getter281, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out282, i128 %mul277, i1* @constraint.352)
  %ptr_getter283 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out286 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter283, i128 0, i128 0, i128 %i.2, i128 %j.2
  store i128 %mul277, i128* %out286, align 4
  %in287 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter290 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in287, i128 0, i128 3, i128 %i.2, i128 %j.2
  %in291 = load i128, i128* %array_getter290, align 4
  %struct_getter293 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter294 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter293, align 8
  %array_getter297 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter294, i128 0, i128 %i.2, i128 %j.2
  %B23298 = load i128, i128* %array_getter297, align 4
  %mul299 = mul i128 3, %B23298
  %add300 = add i128 %in291, %mul299
  %mul301 = mul i128 2, %add300
  %out302 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter305 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out302, i128 0, i128 3, i128 %i.2, i128 %j.2
  %out306 = load i128, i128* %array_getter305, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out306, i128 %mul301, i1* @constraint.353)
  %ptr_getter307 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out310 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter307, i128 0, i128 3, i128 %i.2, i128 %j.2
  store i128 %mul301, i128* %out310, align 4
  %struct_getter312 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call120, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter313 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter312, align 8
  %array_getter316 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter313, i128 0, i128 %i.2, i128 %j.2
  %A45317 = load i128, i128* %array_getter316, align 4
  %cB45318 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cB45, align 8
  %array_getter321 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cB45318, i128 0, i128 %i.2, i128 %j.2
  %cB45322 = load i128, i128* %array_getter321, align 4
  %sub323 = sub i128 %A45317, %cB45322
  %struct_getter325 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter326 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter325, align 8
  %array_getter329 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter326, i128 0, i128 %i.2, i128 %j.2
  %B45330 = load i128, i128* %array_getter329, align 4
  %sub331 = sub i128 %sub323, %B45330
  %mul332 = mul i128 3, %sub331
  %in333 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter336 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in333, i128 0, i128 1, i128 %i.2, i128 %j.2
  %in337 = load i128, i128* %array_getter336, align 4
  %mul338 = mul i128 2, %in337
  %sub339 = sub i128 %mul332, %mul338
  %out340 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter343 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out340, i128 0, i128 1, i128 %i.2, i128 %j.2
  %out344 = load i128, i128* %array_getter343, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out344, i128 %sub339, i1* @constraint.354)
  %ptr_getter345 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out348 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter345, i128 0, i128 1, i128 %i.2, i128 %j.2
  store i128 %sub339, i128* %out348, align 4
  %struct_getter350 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call112, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter351 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter350, align 8
  %array_getter354 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter351, i128 0, i128 %i.2, i128 %j.2
  %A23355 = load i128, i128* %array_getter354, align 4
  %cB23356 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cB23, align 8
  %array_getter359 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cB23356, i128 0, i128 %i.2, i128 %j.2
  %cB23360 = load i128, i128* %array_getter359, align 4
  %sub361 = sub i128 %A23355, %cB23360
  %struct_getter363 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter364 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter363, align 8
  %array_getter367 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter364, i128 0, i128 %i.2, i128 %j.2
  %B23368 = load i128, i128* %array_getter367, align 4
  %sub369 = sub i128 %sub361, %B23368
  %mul370 = mul i128 3, %sub369
  %in371 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input, align 8
  %array_getter374 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in371, i128 0, i128 2, i128 %i.2, i128 %j.2
  %in375 = load i128, i128* %array_getter374, align 4
  %mul376 = mul i128 2, %in375
  %sub377 = sub i128 %mul370, %mul376
  %out378 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter381 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out378, i128 0, i128 2, i128 %i.2, i128 %j.2
  %out382 = load i128, i128* %array_getter381, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out382, i128 %sub377, i1* @constraint.355)
  %ptr_getter383 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out386 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter383, i128 0, i128 2, i128 %i.2, i128 %j.2
  store i128 %sub377, i128* %out386, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body261
  %cB45387 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cB45, align 8
  %array_getter390 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cB45387, i128 0, i128 %i.2, i128 %j.2
  %cB45391 = load i128, i128* %array_getter390, align 4
  %mul392 = mul i128 3, %cB45391
  %mul393 = mul i128 2, %mul392
  %out394 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter397 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out394, i128 0, i128 0, i128 %i.2, i128 %j.2
  %out398 = load i128, i128* %array_getter397, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out398, i128 %mul393, i1* @constraint.356)
  %ptr_getter399 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out402 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter399, i128 0, i128 0, i128 %i.2, i128 %j.2
  store i128 %mul393, i128* %out402, align 4
  %struct_getter404 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter405 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter404, align 8
  %array_getter408 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter405, i128 0, i128 %i.2, i128 %j.2
  %B23409 = load i128, i128* %array_getter408, align 4
  %mul410 = mul i128 3, %B23409
  %mul411 = mul i128 2, %mul410
  %out412 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter415 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out412, i128 0, i128 3, i128 %i.2, i128 %j.2
  %out416 = load i128, i128* %array_getter415, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out416, i128 %mul411, i1* @constraint.357)
  %ptr_getter417 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out420 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter417, i128 0, i128 3, i128 %i.2, i128 %j.2
  store i128 %mul411, i128* %out420, align 4
  %struct_getter422 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call120, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter423 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter422, align 8
  %array_getter426 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter423, i128 0, i128 %i.2, i128 %j.2
  %A45427 = load i128, i128* %array_getter426, align 4
  %cB45428 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cB45, align 8
  %array_getter431 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cB45428, i128 0, i128 %i.2, i128 %j.2
  %cB45432 = load i128, i128* %array_getter431, align 4
  %sub433 = sub i128 %A45427, %cB45432
  %struct_getter435 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call26, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter436 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter435, align 8
  %array_getter439 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter436, i128 0, i128 %i.2, i128 %j.2
  %B45440 = load i128, i128* %array_getter439, align 4
  %sub441 = sub i128 %sub433, %B45440
  %mul442 = mul i128 3, %sub441
  %out443 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter446 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out443, i128 0, i128 1, i128 %i.2, i128 %j.2
  %out447 = load i128, i128* %array_getter446, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out447, i128 %mul442, i1* @constraint.358)
  %ptr_getter448 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out451 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter448, i128 0, i128 1, i128 %i.2, i128 %j.2
  store i128 %mul442, i128* %out451, align 4
  %struct_getter453 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call112, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter454 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter453, align 8
  %array_getter457 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter454, i128 0, i128 %i.2, i128 %j.2
  %A23458 = load i128, i128* %array_getter457, align 4
  %cB23459 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %cB23, align 8
  %array_getter462 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %cB23459, i128 0, i128 %i.2, i128 %j.2
  %cB23463 = load i128, i128* %array_getter462, align 4
  %sub464 = sub i128 %A23458, %cB23463
  %struct_getter466 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter467 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter466, align 8
  %array_getter470 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter467, i128 0, i128 %i.2, i128 %j.2
  %B23471 = load i128, i128* %array_getter470, align 4
  %sub472 = sub i128 %sub464, %B23471
  %mul473 = mul i128 3, %sub472
  %out474 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %array_getter477 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out474, i128 0, i128 2, i128 %i.2, i128 %j.2
  %out478 = load i128, i128* %array_getter477, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out478, i128 %mul473, i1* @constraint.359)
  %ptr_getter479 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %out482 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter479, i128 0, i128 2, i128 %i.2, i128 %j.2
  store i128 %mul473, i128* %out482, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch483

loop.latch483:                                    ; preds = %if.exit
  %add485 = add i128 %j.2, 1
  %mul488 = mul i128 2, %signedfp12cyclotomicsquarenocarry.k.read_arg_inner
  %sub489 = sub i128 %mul488, 1
  %slt490 = icmp slt i128 %add485, %sub489
  br i1 %slt490, label %loop.body261, label %loop.exit491

loop.exit491:                                     ; preds = %loop.latch483
  br label %loop.latch492

loop.latch492:                                    ; preds = %loop.exit491
  %add494 = add i128 %i.2, 1
  %slt496 = icmp slt i128 %add494, 2
  br i1 %slt496, label %loop.body260, label %loop.exit497

loop.exit497:                                     ; preds = %loop.latch492
  br label %arraydim

arraydim:                                         ; preds = %loop.exit497
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 4, i128 2, i128 %sub)
  %ptr_cast498 = bitcast [256 x [256 x i128]]** %cB45 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast498, i128 2, i128 50)
  %ptr_cast499 = bitcast [256 x [256 x i128]]** %cg3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast499, i128 2, i128 50)
  %ptr_cast500 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast500, i128 4, i128 2, i128 %signedfp12cyclotomicsquarenocarry.k.read_arg_inner)
  %ptr_cast501 = bitcast [256 x [256 x i128]]** %cg5 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast501, i128 2, i128 50)
  %ptr_cast502 = bitcast [256 x [256 x i128]]** %cB23 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast502, i128 2, i128 50)
  br label %exit

exit:                                             ; preds = %arraydim
  %out503 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.declare_output, align 8
  %signedfp12cyclotomicsquarenocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %0, i32 0, i32 3
  store [256 x [256 x [256 x i128]]]* %out503, [256 x [256 x [256 x i128]]]** %signedfp12cyclotomicsquarenocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12cyclotomicsquarenocarry* @fn_template_build_signedfp12cyclotomicsquarenocarry(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_signedfp12cyclotomicsquarenocarry = alloca %struct_template_circuit_signedfp12cyclotomicsquarenocarry, align 8
  %signedfp12cyclotomicsquarenocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %struct_template_circuit_signedfp12cyclotomicsquarenocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12cyclotomicsquarenocarry.n.write_arg_inner, align 4
  %signedfp12cyclotomicsquarenocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %struct_template_circuit_signedfp12cyclotomicsquarenocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12cyclotomicsquarenocarry.k.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %struct_template_circuit_signedfp12cyclotomicsquarenocarry
}

define void @fn_template_init_signedfpcarrymodp(%struct_template_circuit_signedfpcarrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 0
  %signedfpcarrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 1
  %signedfpcarrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 2
  %signedfpcarrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 3
  %signedfpcarrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %signedfpcarrymodp.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %signedfpcarrymodp.in.read_input_inner, [256 x i128]** %signedfpcarrymodp.in.declare_input, align 8
  %Xvar = alloca [256 x [256 x i128]]*, align 8
  %Xvar5 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %Xvar5, [256 x [256 x i128]]** %Xvar, align 8
  %X_range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %X_range_checks6 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %X_range_checks6, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %range_checks7 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %range_checks7, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %signedfpcarrymodp.x.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %X, [256 x i128]** %signedfpcarrymodp.x.declare_output, align 8
  %m8 = call i128 @fn_intrinsic_utils_init()
  %signedfpcarrymodp.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall9 to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %signedfpcarrymodp.out.declare_output, align 8
  %i10 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %signedfpcarrymodp.overflow.read_arg_inner, %signedfpcarrymodp.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedfpcarrymodp.n.read_arg_inner
  %slt = icmp slt i128 %signedfpcarrymodp.overflow.read_arg_inner, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %in = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.in.declare_input, align 8
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedfpcarrymodp.n.read_arg_inner, i128 %signedfpcarrymodp.k.read_arg_inner, i128 %sdiv, [256 x i128]* %in, [256 x i128]* %signedfpcarrymodp.p.read_arg_inner)
  store [256 x [256 x i128]]* %call, [256 x [256 x i128]]** %Xvar, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add44, %loop.latch ]
  %Xvar20 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %Xvar, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Xvar20, i128 0, i128 1, i128 %i.0
  %Xvar22 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.out.declare_output, align 8
  %out24 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %Xvar22, i128* %out24, align 4
  %call26 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %signedfpcarrymodp.n.read_arg_inner)
  %ptr_getter27 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %range_checks29 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter27, i128 0, i128 %i.0
  store %struct_template_circuit_num2bits* %call26, %struct_template_circuit_num2bits** %range_checks29, align 8
  %out30 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.out.declare_output, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %out30, i128 0, i128 %i.0
  %out33 = load i128, i128* %array_getter32, align 4
  %range_checks34 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %array_getter36 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks34, i128 0, i128 %i.0
  %range_checks37 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter36, align 8
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks37, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter38, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %out33, i1* @constraint.360)
  %ptr_getter39 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %array_getter41 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter39, i128 0, i128 %i.0
  %range_checks42 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter41, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks42, i32 0, i32 1
  store i128 %out33, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add44 = add i128 %i.0, 1
  %slt47 = icmp slt i128 %add44, %signedfpcarrymodp.k.read_arg_inner
  br i1 %slt47, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch79, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add81, %loop.latch79 ]
  %Xvar49 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %Xvar, align 8
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Xvar49, i128 0, i128 0, i128 %i.1
  %Xvar52 = load i128, i128* %array_getter51, align 4
  %ptr_getter53 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.x.declare_output, align 8
  %X55 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter53, i128 0, i128 %i.1
  store i128 %Xvar52, i128* %X55, align 4
  %add57 = add i128 %signedfpcarrymodp.n.read_arg_inner, 1
  %call58 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add57)
  %ptr_getter59 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %X_range_checks61 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter59, i128 0, i128 %i.1
  store %struct_template_circuit_num2bits* %call58, %struct_template_circuit_num2bits** %X_range_checks61, align 8
  %X62 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.x.declare_output, align 8
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %X62, i128 0, i128 %i.1
  %X65 = load i128, i128* %array_getter64, align 4
  %lshift = shl i128 1, %signedfpcarrymodp.n.read_arg_inner
  %add67 = add i128 %X65, %lshift
  %X_range_checks68 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %array_getter70 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks68, i128 0, i128 %i.1
  %X_range_checks71 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter70, align 8
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks71, i32 0, i32 1
  %num2bits.in.read_input_outter73 = load i128, i128* %struct_getter72, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter73, i128 %add67, i1* @constraint.361)
  %ptr_getter74 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %X_range_checks, align 8
  %array_getter76 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter74, i128 0, i128 %i.1
  %X_range_checks77 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter76, align 8
  %num2bits.in.write_input_outter78 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks77, i32 0, i32 1
  store i128 %add67, i128* %num2bits.in.write_input_outter78, align 4
  br label %loop.latch79

loop.latch79:                                     ; preds = %loop.body48
  %add81 = add i128 %i.1, 1
  %slt84 = icmp slt i128 %add81, %sdiv
  br i1 %slt84, label %loop.body48, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch79
  %call91 = call %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %signedfpcarrymodp.n.read_arg_inner, i128 %signedfpcarrymodp.k.read_arg_inner, i128 %sdiv, i128 %signedfpcarrymodp.overflow.read_arg_inner, [256 x i128]* %signedfpcarrymodp.p.read_arg_inner)
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch121, %loop.exit85
  %i.2 = phi i128 [ 0, %loop.exit85 ], [ %add123, %loop.latch121 ]
  %in93 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.in.declare_input, align 8
  %array_getter95 = getelementptr inbounds [256 x i128], [256 x i128]* %in93, i128 0, i128 %i.2
  %in96 = load i128, i128* %array_getter95, align 4
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call91, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter98, align 8
  %array_getter100 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter, i128 0, i128 %i.2
  %mod_check101 = load i128, i128* %array_getter100, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check101, i128 %in96, i1* @constraint.362)
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call91, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter104 = load [256 x i128]*, [256 x i128]** %struct_getter103, align 8
  %mod_check106 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter104, i128 0, i128 %i.2
  store i128 %in96, i128* %mod_check106, align 4
  %out107 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.out.declare_output, align 8
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %out107, i128 0, i128 %i.2
  %out110 = load i128, i128* %array_getter109, align 4
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call91, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter112, align 8
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter, i128 0, i128 %i.2
  %mod_check115 = load i128, i128* %array_getter114, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check115, i128 %out110, i1* @constraint.363)
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call91, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter118 = load [256 x i128]*, [256 x i128]** %struct_getter117, align 8
  %mod_check120 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter118, i128 0, i128 %i.2
  store i128 %out110, i128* %mod_check120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body92
  %add123 = add i128 %i.2, 1
  %slt126 = icmp slt i128 %add123, %signedfpcarrymodp.k.read_arg_inner
  br i1 %slt126, label %loop.body92, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %loop.body128

loop.body128:                                     ; preds = %loop.latch143, %loop.exit127
  %i.3 = phi i128 [ 0, %loop.exit127 ], [ %add145, %loop.latch143 ]
  %X129 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.x.declare_output, align 8
  %array_getter131 = getelementptr inbounds [256 x i128], [256 x i128]* %X129, i128 0, i128 %i.3
  %X132 = load i128, i128* %array_getter131, align 4
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call91, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter134, align 8
  %array_getter136 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter, i128 0, i128 %i.3
  %mod_check137 = load i128, i128* %array_getter136, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check137, i128 %X132, i1* @constraint.364)
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call91, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter140 = load [256 x i128]*, [256 x i128]** %struct_getter139, align 8
  %mod_check142 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter140, i128 0, i128 %i.3
  store i128 %X132, i128* %mod_check142, align 4
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.body128
  %add145 = add i128 %i.3, 1
  %slt148 = icmp slt i128 %add145, %sdiv
  br i1 %slt148, label %loop.body128, label %loop.exit149

loop.exit149:                                     ; preds = %loop.latch143
  br label %arraydim

arraydim:                                         ; preds = %loop.exit149
  %ptr_cast = bitcast [256 x %struct_template_circuit_num2bits*]** %range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %signedfpcarrymodp.k.read_arg_inner)
  %ptr_cast150 = bitcast [256 x i128]** %signedfpcarrymodp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast150, i128 %signedfpcarrymodp.k.read_arg_inner)
  %ptr_cast151 = bitcast [256 x i128]** %signedfpcarrymodp.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast151, i128 %signedfpcarrymodp.k.read_arg_inner)
  %ptr_cast152 = bitcast [256 x [256 x i128]]** %Xvar to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast152, i128 2, i128 50)
  %ptr_cast153 = bitcast [256 x %struct_template_circuit_num2bits*]** %X_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast153, i128 %sdiv)
  %ptr_cast154 = bitcast [256 x i128]** %signedfpcarrymodp.x.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast154, i128 %sdiv)
  br label %exit

exit:                                             ; preds = %arraydim
  %X155 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.x.declare_output, align 8
  %signedfpcarrymodp.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 5
  store [256 x i128]* %X155, [256 x i128]** %signedfpcarrymodp.x.write_output_inner, align 8
  %out156 = load [256 x i128]*, [256 x i128]** %signedfpcarrymodp.out.declare_output, align 8
  %signedfpcarrymodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 6
  store [256 x i128]* %out156, [256 x i128]** %signedfpcarrymodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedfpcarrymodp = alloca %struct_template_circuit_signedfpcarrymodp, align 8
  %signedfpcarrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 0
  store i128 %0, i128* %signedfpcarrymodp.n.write_arg_inner, align 4
  %signedfpcarrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 1
  store i128 %1, i128* %signedfpcarrymodp.k.write_arg_inner, align 4
  %signedfpcarrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 2
  store i128 %2, i128* %signedfpcarrymodp.overflow.write_arg_inner, align 4
  %signedfpcarrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedfpcarrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp
}

define void @fn_template_init_fp2isequal(%struct_template_circuit_fp2isequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 0
  %fp2isequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 1
  %fp2isequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 2
  %fp2isequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 3
  %fp2isequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2isequal.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2isequal.a.read_input_inner, [256 x [256 x i128]]** %fp2isequal.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 4
  %fp2isequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp2isequal.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2isequal.b.read_input_inner, [256 x [256 x i128]]** %fp2isequal.b.declare_input, align 8
  %lta = alloca [256 x %struct_template_circuit_biglessthan*]*, align 8
  %lta5 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  store [256 x %struct_template_circuit_biglessthan*]* %lta5, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %ltb = alloca [256 x %struct_template_circuit_biglessthan*]*, align 8
  %ltb6 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  store [256 x %struct_template_circuit_biglessthan*]* %ltb6, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %i7 = call i128 @fn_intrinsic_utils_init()
  %isEquals = alloca [256 x [256 x %struct_template_circuit_isequal*]]*, align 8
  %isEquals8 = alloca [256 x [256 x %struct_template_circuit_isequal*]], align 8
  store [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals8, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %j9 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %total10 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %fp2isequal.k.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch173, %entry
  %j.0 = phi i128 [ 0, %entry ], [ %add175, %loop.latch173 ]
  %total.0 = phi i128 [ %mul, %entry ], [ %sub, %loop.latch173 ]
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fp2isequal.n.read_arg_inner, i128 %fp2isequal.k.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %lta16 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter, i128 0, i128 %j.0
  store %struct_template_circuit_biglessthan* %call, %struct_template_circuit_biglessthan** %lta16, align 8
  %call19 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fp2isequal.n.read_arg_inner, i128 %fp2isequal.k.read_arg_inner)
  %ptr_getter20 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %ltb22 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter20, i128 0, i128 %j.0
  store %struct_template_circuit_biglessthan* %call19, %struct_template_circuit_biglessthan** %ltb22, align 8
  br label %loop.body23

loop.body23:                                      ; preds = %loop.latch, %loop.body
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %total.1 = phi i128 [ %total.0, %loop.body ], [ %sub, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2isequal.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %j.0, i128 %i.0
  %a26 = load i128, i128* %array_getter, align 4
  %lta27 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %array_getter29 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta27, i128 0, i128 %j.0
  %lta30 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter29, align 8
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta30, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lta34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lta34, i128 %a26, i1* @constraint.365)
  %ptr_getter35 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %array_getter37 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter35, i128 0, i128 %j.0
  %lta38 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter37, align 8
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta38, i32 0, i32 2
  %biglessthan.a.read_input_outter40 = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %lta42 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter40, i128 0, i128 %i.0
  store i128 %a26, i128* %lta42, align 4
  %array_getter44 = getelementptr inbounds [256 x i128], [256 x i128]* %fp2isequal.p.read_arg_inner, i128 0, i128 %i.0
  %p45 = load i128, i128* %array_getter44, align 4
  %lta46 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %array_getter48 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta46, i128 0, i128 %j.0
  %lta49 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter48, align 8
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta49, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lta53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lta53, i128 %p45, i1* @constraint.366)
  %ptr_getter54 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %array_getter56 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter54, i128 0, i128 %j.0
  %lta57 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta57, i32 0, i32 3
  %biglessthan.b.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %lta61 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter59, i128 0, i128 %i.0
  store i128 %p45, i128* %lta61, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2isequal.b.declare_input, align 8
  %array_getter64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %j.0, i128 %i.0
  %b65 = load i128, i128* %array_getter64, align 4
  %ltb66 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %array_getter68 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb66, i128 0, i128 %j.0
  %ltb69 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter68, align 8
  %struct_getter70 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb69, i32 0, i32 2
  %biglessthan.a.read_input_outter71 = load [256 x i128]*, [256 x i128]** %struct_getter70, align 8
  %array_getter73 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter71, i128 0, i128 %i.0
  %ltb74 = load i128, i128* %array_getter73, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ltb74, i128 %b65, i1* @constraint.367)
  %ptr_getter75 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %array_getter77 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter75, i128 0, i128 %j.0
  %ltb78 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter77, align 8
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb78, i32 0, i32 2
  %biglessthan.a.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %ltb82 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter80, i128 0, i128 %i.0
  store i128 %b65, i128* %ltb82, align 4
  %array_getter85 = getelementptr inbounds [256 x i128], [256 x i128]* %fp2isequal.p.read_arg_inner, i128 0, i128 %i.0
  %p86 = load i128, i128* %array_getter85, align 4
  %ltb87 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %array_getter89 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb87, i128 0, i128 %j.0
  %ltb90 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter89, align 8
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb90, i32 0, i32 3
  %biglessthan.b.read_input_outter92 = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter92, i128 0, i128 %i.0
  %ltb95 = load i128, i128* %array_getter94, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ltb95, i128 %p86, i1* @constraint.368)
  %ptr_getter96 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %array_getter98 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ptr_getter96, i128 0, i128 %j.0
  %ltb99 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter98, align 8
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb99, i32 0, i32 3
  %biglessthan.b.read_input_outter101 = load [256 x i128]*, [256 x i128]** %struct_getter100, align 8
  %ltb103 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter101, i128 0, i128 %i.0
  store i128 %p86, i128* %ltb103, align 4
  %call104 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %ptr_getter105 = load [256 x [256 x %struct_template_circuit_isequal*]]*, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %isEquals108 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %ptr_getter105, i128 0, i128 %j.0, i128 %i.0
  store %struct_template_circuit_isequal* %call104, %struct_template_circuit_isequal** %isEquals108, align 8
  %a109 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2isequal.a.declare_input, align 8
  %array_getter112 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a109, i128 0, i128 %j.0, i128 %i.0
  %a113 = load i128, i128* %array_getter112, align 4
  %isEquals114 = load [256 x [256 x %struct_template_circuit_isequal*]]*, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %array_getter117 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals114, i128 0, i128 %j.0, i128 %i.0
  %isEquals118 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter117, align 8
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals118, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter119, align 8
  %array_getter120 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %isEquals121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEquals121, i128 %a113, i1* @constraint.369)
  %ptr_getter122 = load [256 x [256 x %struct_template_circuit_isequal*]]*, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %array_getter125 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %ptr_getter122, i128 0, i128 %j.0, i128 %i.0
  %isEquals126 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter125, align 8
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals126, i32 0, i32 0
  %isequal.in.read_input_outter128 = load [256 x i128]*, [256 x i128]** %struct_getter127, align 8
  %isEquals129 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter128, i128 0, i128 0
  store i128 %a113, i128* %isEquals129, align 4
  %b130 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2isequal.b.declare_input, align 8
  %array_getter133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b130, i128 0, i128 %j.0, i128 %i.0
  %b134 = load i128, i128* %array_getter133, align 4
  %isEquals135 = load [256 x [256 x %struct_template_circuit_isequal*]]*, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %array_getter138 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals135, i128 0, i128 %j.0, i128 %i.0
  %isEquals139 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter138, align 8
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals139, i32 0, i32 0
  %isequal.in.read_input_outter141 = load [256 x i128]*, [256 x i128]** %struct_getter140, align 8
  %array_getter142 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter141, i128 0, i128 1
  %isEquals143 = load i128, i128* %array_getter142, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isEquals143, i128 %b134, i1* @constraint.370)
  %ptr_getter144 = load [256 x [256 x %struct_template_circuit_isequal*]]*, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %array_getter147 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %ptr_getter144, i128 0, i128 %j.0, i128 %i.0
  %isEquals148 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter147, align 8
  %struct_getter149 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals148, i32 0, i32 0
  %isequal.in.read_input_outter150 = load [256 x i128]*, [256 x i128]** %struct_getter149, align 8
  %isEquals151 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter150, i128 0, i128 1
  store i128 %b134, i128* %isEquals151, align 4
  %isEquals153 = load [256 x [256 x %struct_template_circuit_isequal*]]*, [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals153, i128 0, i128 %j.0, i128 %i.0
  %isEquals157 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter156, align 8
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals157, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter158, align 4
  %sub = sub i128 %total.1, %isequal.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body23
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2isequal.k.read_arg_inner
  br i1 %slt, label %loop.body23, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %lta162 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %lta, align 8
  %array_getter164 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta162, i128 0, i128 %j.0
  %lta165 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter164, align 8
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta165, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter166, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.371)
  %ltb167 = load [256 x %struct_template_circuit_biglessthan*]*, [256 x %struct_template_circuit_biglessthan*]** %ltb, align 8
  %array_getter169 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb167, i128 0, i128 %j.0
  %ltb170 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter169, align 8
  %struct_getter171 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb170, i32 0, i32 4
  %biglessthan.out.read_output_outter172 = load i128, i128* %struct_getter171, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter172, i128 1, i1* @constraint.372)
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.exit
  %add175 = add i128 %j.0, 1
  %slt177 = icmp slt i128 %add175, 2
  br i1 %slt177, label %loop.body, label %loop.exit178

loop.exit178:                                     ; preds = %loop.latch173
  %call179 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter182 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call179, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter182, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.373)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call179, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter185 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call179, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter185, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %iszero.out.read_output_outter, i1* @constraint.374)
  %fp2isequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 5
  store i128 %iszero.out.read_output_outter, i128* %fp2isequal.out.write_output_inner, align 4
  %struct_getter189 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 5
  %fp2isequal.out.read_output_inner = load i128, i128* %struct_getter189, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit178
  %ptr_cast = bitcast [256 x %struct_template_circuit_biglessthan*]** %lta to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast190 = bitcast [256 x [256 x i128]]** %fp2isequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast190, i128 2, i128 %fp2isequal.k.read_arg_inner)
  %ptr_cast191 = bitcast [256 x [256 x %struct_template_circuit_isequal*]]** %isEquals to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast191, i128 2, i128 %fp2isequal.k.read_arg_inner)
  %ptr_cast192 = bitcast [256 x [256 x i128]]** %fp2isequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast192, i128 2, i128 %fp2isequal.k.read_arg_inner)
  %ptr_cast193 = bitcast [256 x %struct_template_circuit_biglessthan*]** %ltb to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast193, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %fp2isequal.out.write_output_inner195 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 5
  store i128 %fp2isequal.out.read_output_inner, i128* %fp2isequal.out.write_output_inner195, align 4
  ret void
}

define %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2isequal = alloca %struct_template_circuit_fp2isequal, align 8
  %fp2isequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal, i32 0, i32 0
  store i128 %0, i128* %fp2isequal.n.write_arg_inner, align 4
  %fp2isequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal, i32 0, i32 1
  store i128 %1, i128* %fp2isequal.k.write_arg_inner, align 4
  %fp2isequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2isequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal
}

define void @fn_template_init_bigmod(%struct_template_circuit_bigmod* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 0
  %bigmod.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 1
  %bigmod.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 2
  %bigmod.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigmod.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmod.a.read_input_inner, [256 x i128]** %bigmod.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 3
  %bigmod.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigmod.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmod.b.read_input_inner, [256 x i128]** %bigmod.b.declare_input, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %longdiv = alloca [256 x [256 x i128]]*, align 8
  %longdiv5 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %longdiv5, [256 x [256 x i128]]** %longdiv, align 8
  %bigmod.mod.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %mod = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %mod, [256 x i128]** %bigmod.mod.declare_output, align 8
  %mod_range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %mod_range_checks6 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %mod_range_checks6, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %bigmod.div.declare_output = alloca [256 x i128]*, align 8
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %div = bitcast i8* %malloccall7 to [256 x i128]*
  store [256 x i128]* %div, [256 x i128]** %bigmod.div.declare_output, align 8
  %div_range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %div_range_checks8 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %div_range_checks8, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %sle = icmp sle i128 %bigmod.n.read_arg_inner, 126
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %mul9 = mul i128 2, %bigmod.k.read_arg_inner
  %add12 = add i128 %bigmod.k.read_arg_inner, 1
  %a = load [256 x i128]*, [256 x i128]** %bigmod.a.declare_input, align 8
  %b = load [256 x i128]*, [256 x i128]** %bigmod.b.declare_input, align 8
  %call = call [256 x [256 x i128]]* @long_div(i128 %bigmod.n.read_arg_inner, i128 %bigmod.k.read_arg_inner, [256 x i128]* %a, [256 x i128]* %b)
  store [256 x [256 x i128]]* %call, [256 x [256 x i128]]** %longdiv, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add29, %loop.latch ]
  %longdiv16 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %longdiv, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %longdiv16, i128 0, i128 0, i128 %i.0
  %longdiv18 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x i128]*, [256 x i128]** %bigmod.div.declare_output, align 8
  %div20 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %longdiv18, i128* %div20, align 4
  %longdiv21 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %longdiv, align 8
  %array_getter23 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %longdiv21, i128 0, i128 1, i128 %i.0
  %longdiv24 = load i128, i128* %array_getter23, align 4
  %ptr_getter25 = load [256 x i128]*, [256 x i128]** %bigmod.mod.declare_output, align 8
  %mod27 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter25, i128 0, i128 %i.0
  store i128 %longdiv24, i128* %mod27, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add29 = add i128 %i.0, 1
  %slt = icmp slt i128 %add29, %bigmod.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %longdiv32 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %longdiv, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %longdiv32, i128 0, i128 0, i128 %bigmod.k.read_arg_inner
  %longdiv35 = load i128, i128* %array_getter34, align 4
  %ptr_getter36 = load [256 x i128]*, [256 x i128]** %bigmod.div.declare_output, align 8
  %div38 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter36, i128 0, i128 %bigmod.k.read_arg_inner
  store i128 %longdiv35, i128* %div38, align 4
  %add40 = add i128 %bigmod.k.read_arg_inner, 1
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch60, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add62, %loop.latch60 ]
  %call43 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod.n.read_arg_inner)
  %ptr_getter44 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %div_range_checks46 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter44, i128 0, i128 %i.1
  store %struct_template_circuit_num2bits* %call43, %struct_template_circuit_num2bits** %div_range_checks46, align 8
  %div47 = load [256 x i128]*, [256 x i128]** %bigmod.div.declare_output, align 8
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %div47, i128 0, i128 %i.1
  %div50 = load i128, i128* %array_getter49, align 4
  %div_range_checks51 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %array_getter53 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks51, i128 0, i128 %i.1
  %div_range_checks54 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter53, align 8
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks54, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %div50, i1* @constraint.375)
  %ptr_getter56 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %div_range_checks, align 8
  %array_getter58 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter56, i128 0, i128 %i.1
  %div_range_checks59 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter58, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks59, i32 0, i32 1
  store i128 %div50, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch60

loop.latch60:                                     ; preds = %loop.body41
  %add62 = add i128 %i.1, 1
  %sle65 = icmp sle i128 %add62, %bigmod.k.read_arg_inner
  br i1 %sle65, label %loop.body41, label %loop.exit66

loop.exit66:                                      ; preds = %loop.latch60
  br label %loop.body68

loop.body68:                                      ; preds = %loop.latch89, %loop.exit66
  %i.2 = phi i128 [ 0, %loop.exit66 ], [ %add91, %loop.latch89 ]
  %call70 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod.n.read_arg_inner)
  %ptr_getter71 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %mod_range_checks73 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter71, i128 0, i128 %i.2
  store %struct_template_circuit_num2bits* %call70, %struct_template_circuit_num2bits** %mod_range_checks73, align 8
  %mod74 = load [256 x i128]*, [256 x i128]** %bigmod.mod.declare_output, align 8
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %mod74, i128 0, i128 %i.2
  %mod77 = load i128, i128* %array_getter76, align 4
  %mod_range_checks78 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %array_getter80 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks78, i128 0, i128 %i.2
  %mod_range_checks81 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter80, align 8
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks81, i32 0, i32 1
  %num2bits.in.read_input_outter83 = load i128, i128* %struct_getter82, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter83, i128 %mod77, i1* @constraint.376)
  %ptr_getter84 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %mod_range_checks, align 8
  %array_getter86 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter84, i128 0, i128 %i.2
  %mod_range_checks87 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter86, align 8
  %num2bits.in.write_input_outter88 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks87, i32 0, i32 1
  store i128 %mod77, i128* %num2bits.in.write_input_outter88, align 4
  br label %loop.latch89

loop.latch89:                                     ; preds = %loop.body68
  %add91 = add i128 %i.2, 1
  %slt94 = icmp slt i128 %add91, %bigmod.k.read_arg_inner
  br i1 %slt94, label %loop.body68, label %loop.exit95

loop.exit95:                                      ; preds = %loop.latch89
  %add98 = add i128 %bigmod.k.read_arg_inner, 1
  %call99 = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmod.n.read_arg_inner, i128 %add98)
  br label %loop.body100

loop.body100:                                     ; preds = %loop.latch129, %loop.exit95
  %i.3 = phi i128 [ 0, %loop.exit95 ], [ %add131, %loop.latch129 ]
  %div101 = load [256 x i128]*, [256 x i128]** %bigmod.div.declare_output, align 8
  %array_getter103 = getelementptr inbounds [256 x i128], [256 x i128]* %div101, i128 0, i128 %i.3
  %div104 = load i128, i128* %array_getter103, align 4
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter106, align 8
  %array_getter108 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.3
  %mul109 = load i128, i128* %array_getter108, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul109, i128 %div104, i1* @constraint.377)
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 2
  %bigmult.a.read_input_outter112 = load [256 x i128]*, [256 x i128]** %struct_getter111, align 8
  %mul114 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter112, i128 0, i128 %i.3
  store i128 %div104, i128* %mul114, align 4
  %b115 = load [256 x i128]*, [256 x i128]** %bigmod.b.declare_input, align 8
  %array_getter117 = getelementptr inbounds [256 x i128], [256 x i128]* %b115, i128 0, i128 %i.3
  %b118 = load i128, i128* %array_getter117, align 4
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter120, align 8
  %array_getter122 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.3
  %mul123 = load i128, i128* %array_getter122, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul123, i128 %b118, i1* @constraint.378)
  %struct_getter125 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 3
  %bigmult.b.read_input_outter126 = load [256 x i128]*, [256 x i128]** %struct_getter125, align 8
  %mul128 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter126, i128 0, i128 %i.3
  store i128 %b118, i128* %mul128, align 4
  br label %loop.latch129

loop.latch129:                                    ; preds = %loop.body100
  %add131 = add i128 %i.3, 1
  %slt134 = icmp slt i128 %add131, %bigmod.k.read_arg_inner
  br i1 %slt134, label %loop.body100, label %loop.exit135

loop.exit135:                                     ; preds = %loop.latch129
  %div136 = load [256 x i128]*, [256 x i128]** %bigmod.div.declare_output, align 8
  %array_getter138 = getelementptr inbounds [256 x i128], [256 x i128]* %div136, i128 0, i128 %bigmod.k.read_arg_inner
  %div139 = load i128, i128* %array_getter138, align 4
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 2
  %bigmult.a.read_input_outter142 = load [256 x i128]*, [256 x i128]** %struct_getter141, align 8
  %array_getter144 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter142, i128 0, i128 %bigmod.k.read_arg_inner
  %mul145 = load i128, i128* %array_getter144, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul145, i128 %div139, i1* @constraint.379)
  %struct_getter147 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 2
  %bigmult.a.read_input_outter148 = load [256 x i128]*, [256 x i128]** %struct_getter147, align 8
  %mul150 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter148, i128 0, i128 %bigmod.k.read_arg_inner
  store i128 %div139, i128* %mul150, align 4
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 3
  %bigmult.b.read_input_outter153 = load [256 x i128]*, [256 x i128]** %struct_getter152, align 8
  %array_getter155 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter153, i128 0, i128 %bigmod.k.read_arg_inner
  %mul156 = load i128, i128* %array_getter155, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mul156, i128 0, i1* @constraint.380)
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 3
  %bigmult.b.read_input_outter159 = load [256 x i128]*, [256 x i128]** %struct_getter158, align 8
  %mul161 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter159, i128 0, i128 %bigmod.k.read_arg_inner
  store i128 0, i128* %mul161, align 4
  br label %loop.body162

loop.body162:                                     ; preds = %loop.latch163, %loop.exit135
  %i.4 = phi i128 [ 0, %loop.exit135 ], [ %add165, %loop.latch163 ]
  br label %loop.latch163

loop.latch163:                                    ; preds = %loop.body162
  %add165 = add i128 %i.4, 1
  %mul168 = mul i128 2, %bigmod.k.read_arg_inner
  %add169 = add i128 %mul168, 2
  %slt170 = icmp slt i128 %add165, %add169
  br i1 %slt170, label %loop.body162, label %loop.exit171

loop.exit171:                                     ; preds = %loop.latch163
  %mul174 = mul i128 2, %bigmod.k.read_arg_inner
  %add175 = add i128 %mul174, 2
  %call176 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigmod.n.read_arg_inner, i128 %add175)
  br label %loop.body177

loop.body177:                                     ; preds = %loop.latch221, %loop.exit171
  %i.5 = phi i128 [ 0, %loop.exit171 ], [ %add223, %loop.latch221 ]
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter179, align 8
  %array_getter181 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.5
  %mul182 = load i128, i128* %array_getter181, align 4
  %struct_getter184 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter184, align 8
  %array_getter186 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.5
  %add187 = load i128, i128* %array_getter186, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add187, i128 %mul182, i1* @constraint.381)
  %struct_getter189 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 2
  %bigadd.a.read_input_outter190 = load [256 x i128]*, [256 x i128]** %struct_getter189, align 8
  %add192 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter190, i128 0, i128 %i.5
  store i128 %mul182, i128* %add192, align 4
  %slt195 = icmp slt i128 %i.5, %bigmod.k.read_arg_inner
  br i1 %slt195, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body177
  %mod196 = load [256 x i128]*, [256 x i128]** %bigmod.mod.declare_output, align 8
  %array_getter198 = getelementptr inbounds [256 x i128], [256 x i128]* %mod196, i128 0, i128 %i.5
  %mod199 = load i128, i128* %array_getter198, align 4
  %struct_getter201 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter201, align 8
  %array_getter203 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.5
  %add204 = load i128, i128* %array_getter203, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add204, i128 %mod199, i1* @constraint.382)
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter207 = load [256 x i128]*, [256 x i128]** %struct_getter206, align 8
  %add209 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter207, i128 0, i128 %i.5
  store i128 %mod199, i128* %add209, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body177
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter212 = load [256 x i128]*, [256 x i128]** %struct_getter211, align 8
  %array_getter214 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter212, i128 0, i128 %i.5
  %add215 = load i128, i128* %array_getter214, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add215, i128 0, i1* @constraint.383)
  %struct_getter217 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter218 = load [256 x i128]*, [256 x i128]** %struct_getter217, align 8
  %add220 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter218, i128 0, i128 %i.5
  store i128 0, i128* %add220, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch221

loop.latch221:                                    ; preds = %if.exit
  %add223 = add i128 %i.5, 1
  %mul226 = mul i128 2, %bigmod.k.read_arg_inner
  %slt227 = icmp slt i128 %add223, %mul226
  br i1 %slt227, label %loop.body177, label %loop.exit228

loop.exit228:                                     ; preds = %loop.latch221
  %struct_getter230 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 4
  %bigmult.out.read_output_outter231 = load [256 x i128]*, [256 x i128]** %struct_getter230, align 8
  %mul233 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter234 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter231, i128 0, i128 %mul233
  %mul235 = load i128, i128* %array_getter234, align 4
  %struct_getter237 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 2
  %bigadd.a.read_input_outter238 = load [256 x i128]*, [256 x i128]** %struct_getter237, align 8
  %mul240 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter241 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter238, i128 0, i128 %mul240
  %add242 = load i128, i128* %array_getter241, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add242, i128 %mul235, i1* @constraint.384)
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 2
  %bigadd.a.read_input_outter245 = load [256 x i128]*, [256 x i128]** %struct_getter244, align 8
  %mul247 = mul i128 2, %bigmod.k.read_arg_inner
  %add248 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter245, i128 0, i128 %mul247
  store i128 %mul235, i128* %add248, align 4
  %struct_getter250 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call99, i32 0, i32 4
  %bigmult.out.read_output_outter251 = load [256 x i128]*, [256 x i128]** %struct_getter250, align 8
  %mul253 = mul i128 2, %bigmod.k.read_arg_inner
  %add254 = add i128 %mul253, 1
  %array_getter255 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter251, i128 0, i128 %add254
  %mul256 = load i128, i128* %array_getter255, align 4
  %struct_getter258 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 2
  %bigadd.a.read_input_outter259 = load [256 x i128]*, [256 x i128]** %struct_getter258, align 8
  %mul261 = mul i128 2, %bigmod.k.read_arg_inner
  %add262 = add i128 %mul261, 1
  %array_getter263 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter259, i128 0, i128 %add262
  %add264 = load i128, i128* %array_getter263, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add264, i128 %mul256, i1* @constraint.385)
  %struct_getter266 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 2
  %bigadd.a.read_input_outter267 = load [256 x i128]*, [256 x i128]** %struct_getter266, align 8
  %mul269 = mul i128 2, %bigmod.k.read_arg_inner
  %add270 = add i128 %mul269, 1
  %add271 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter267, i128 0, i128 %add270
  store i128 %mul256, i128* %add271, align 4
  %struct_getter273 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter274 = load [256 x i128]*, [256 x i128]** %struct_getter273, align 8
  %mul276 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter277 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter274, i128 0, i128 %mul276
  %add278 = load i128, i128* %array_getter277, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add278, i128 0, i1* @constraint.386)
  %struct_getter280 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter281 = load [256 x i128]*, [256 x i128]** %struct_getter280, align 8
  %mul283 = mul i128 2, %bigmod.k.read_arg_inner
  %add284 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter281, i128 0, i128 %mul283
  store i128 0, i128* %add284, align 4
  %struct_getter286 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter287 = load [256 x i128]*, [256 x i128]** %struct_getter286, align 8
  %mul289 = mul i128 2, %bigmod.k.read_arg_inner
  %add290 = add i128 %mul289, 1
  %array_getter291 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter287, i128 0, i128 %add290
  %add292 = load i128, i128* %array_getter291, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add292, i128 0, i1* @constraint.387)
  %struct_getter294 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 3
  %bigadd.b.read_input_outter295 = load [256 x i128]*, [256 x i128]** %struct_getter294, align 8
  %mul297 = mul i128 2, %bigmod.k.read_arg_inner
  %add298 = add i128 %mul297, 1
  %add299 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter295, i128 0, i128 %add298
  store i128 0, i128* %add299, align 4
  br label %loop.body300

loop.body300:                                     ; preds = %loop.latch301, %loop.exit228
  %i.6 = phi i128 [ 0, %loop.exit228 ], [ %add303, %loop.latch301 ]
  br label %loop.latch301

loop.latch301:                                    ; preds = %loop.body300
  %add303 = add i128 %i.6, 1
  %mul306 = mul i128 2, %bigmod.k.read_arg_inner
  %add307 = add i128 %mul306, 2
  %slt308 = icmp slt i128 %add303, %add307
  br i1 %slt308, label %loop.body300, label %loop.exit309

loop.exit309:                                     ; preds = %loop.latch301
  br label %loop.body310

loop.body310:                                     ; preds = %loop.latch320, %loop.exit309
  %i.7 = phi i128 [ 0, %loop.exit309 ], [ %add322, %loop.latch320 ]
  %struct_getter312 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter312, align 8
  %array_getter314 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.7
  %add315 = load i128, i128* %array_getter314, align 4
  %a316 = load [256 x i128]*, [256 x i128]** %bigmod.a.declare_input, align 8
  %array_getter318 = getelementptr inbounds [256 x i128], [256 x i128]* %a316, i128 0, i128 %i.7
  %a319 = load i128, i128* %array_getter318, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add315, i128 %a319, i1* @constraint.388)
  br label %loop.latch320

loop.latch320:                                    ; preds = %loop.body310
  %add322 = add i128 %i.7, 1
  %mul325 = mul i128 2, %bigmod.k.read_arg_inner
  %slt326 = icmp slt i128 %add322, %mul325
  br i1 %slt326, label %loop.body310, label %loop.exit327

loop.exit327:                                     ; preds = %loop.latch320
  %struct_getter329 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 4
  %bigadd.out.read_output_outter330 = load [256 x i128]*, [256 x i128]** %struct_getter329, align 8
  %mul332 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter333 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter330, i128 0, i128 %mul332
  %add334 = load i128, i128* %array_getter333, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add334, i128 0, i1* @constraint.389)
  %struct_getter336 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call176, i32 0, i32 4
  %bigadd.out.read_output_outter337 = load [256 x i128]*, [256 x i128]** %struct_getter336, align 8
  %mul339 = mul i128 2, %bigmod.k.read_arg_inner
  %add340 = add i128 %mul339, 1
  %array_getter341 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter337, i128 0, i128 %add340
  %add342 = load i128, i128* %array_getter341, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add342, i128 0, i1* @constraint.390)
  %call345 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %bigmod.n.read_arg_inner, i128 %bigmod.k.read_arg_inner)
  br label %loop.body346

loop.body346:                                     ; preds = %loop.latch375, %loop.exit327
  %i.8 = phi i128 [ 0, %loop.exit327 ], [ %add377, %loop.latch375 ]
  %mod347 = load [256 x i128]*, [256 x i128]** %bigmod.mod.declare_output, align 8
  %array_getter349 = getelementptr inbounds [256 x i128], [256 x i128]* %mod347, i128 0, i128 %i.8
  %mod350 = load i128, i128* %array_getter349, align 4
  %struct_getter352 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call345, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter352, align 8
  %array_getter354 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.8
  %lt355 = load i128, i128* %array_getter354, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt355, i128 %mod350, i1* @constraint.391)
  %struct_getter357 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call345, i32 0, i32 2
  %biglessthan.a.read_input_outter358 = load [256 x i128]*, [256 x i128]** %struct_getter357, align 8
  %lt360 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter358, i128 0, i128 %i.8
  store i128 %mod350, i128* %lt360, align 4
  %b361 = load [256 x i128]*, [256 x i128]** %bigmod.b.declare_input, align 8
  %array_getter363 = getelementptr inbounds [256 x i128], [256 x i128]* %b361, i128 0, i128 %i.8
  %b364 = load i128, i128* %array_getter363, align 4
  %struct_getter366 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call345, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter366, align 8
  %array_getter368 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.8
  %lt369 = load i128, i128* %array_getter368, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt369, i128 %b364, i1* @constraint.392)
  %struct_getter371 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call345, i32 0, i32 3
  %biglessthan.b.read_input_outter372 = load [256 x i128]*, [256 x i128]** %struct_getter371, align 8
  %lt374 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter372, i128 0, i128 %i.8
  store i128 %b364, i128* %lt374, align 4
  br label %loop.latch375

loop.latch375:                                    ; preds = %loop.body346
  %add377 = add i128 %i.8, 1
  %slt380 = icmp slt i128 %add377, %bigmod.k.read_arg_inner
  br i1 %slt380, label %loop.body346, label %loop.exit381

loop.exit381:                                     ; preds = %loop.latch375
  %struct_getter383 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call345, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter383, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.393)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit381
  %ptr_cast = bitcast [256 x i128]** %bigmod.div.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %add12)
  %ptr_cast384 = bitcast [256 x i128]** %bigmod.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast384, i128 %mul9)
  %ptr_cast385 = bitcast [256 x i128]** %bigmod.mod.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast385, i128 %bigmod.k.read_arg_inner)
  %ptr_cast386 = bitcast [256 x %struct_template_circuit_num2bits*]** %mod_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast386, i128 %bigmod.k.read_arg_inner)
  %ptr_cast387 = bitcast [256 x %struct_template_circuit_num2bits*]** %div_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast387, i128 %add40)
  %ptr_cast388 = bitcast [256 x [256 x i128]]** %longdiv to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast388, i128 2, i128 50)
  %ptr_cast389 = bitcast [256 x i128]** %bigmod.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast389, i128 %bigmod.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %div390 = load [256 x i128]*, [256 x i128]** %bigmod.div.declare_output, align 8
  %bigmod.div.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 4
  store [256 x i128]* %div390, [256 x i128]** %bigmod.div.write_output_inner, align 8
  %mod391 = load [256 x i128]*, [256 x i128]** %bigmod.mod.declare_output, align 8
  %bigmod.mod.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 5
  store [256 x i128]* %mod391, [256 x i128]** %bigmod.mod.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmod* @fn_template_build_bigmod(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmod = alloca %struct_template_circuit_bigmod, align 8
  %bigmod.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %struct_template_circuit_bigmod, i32 0, i32 0
  store i128 %0, i128* %bigmod.n.write_arg_inner, align 4
  %bigmod.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %struct_template_circuit_bigmod, i32 0, i32 1
  store i128 %1, i128* %bigmod.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmod* %struct_template_circuit_bigmod
}

define void @fn_template_init_fpsgn0(%struct_template_circuit_fpsgn0* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 0
  %fpsgn0.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 1
  %fpsgn0.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 2
  %fpsgn0.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 3
  %fpsgn0.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %fpsgn0.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpsgn0.in.read_input_inner, [256 x i128]** %fpsgn0.in.declare_input, align 8
  %out = call i128 @fn_intrinsic_utils_init()
  %r4 = call i128 @fn_intrinsic_utils_init()
  %q5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %div = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpsgn0.n.read_arg_inner, i128 %fpsgn0.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %in = load [256 x i128]*, [256 x i128]** %fpsgn0.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.0
  %in9 = load i128, i128* %array_getter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter11, align 8
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lt14 = load i128, i128* %array_getter13, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt14, i128 %in9, i1* @constraint.394)
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter16 = load [256 x i128]*, [256 x i128]** %struct_getter15, align 8
  %lt18 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter16, i128 0, i128 %i.0
  store i128 %in9, i128* %lt18, align 4
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.p.read_arg_inner, i128 0, i128 %i.0
  %p21 = load i128, i128* %array_getter20, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lt26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt26, i128 %p21, i1* @constraint.395)
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %lt31 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter29, i128 0, i128 %i.0
  store i128 %p21, i128* %lt31, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fpsgn0.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter36, align 4
  call void @fn_intrinsic_utils_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.396)
  %in37 = load [256 x i128]*, [256 x i128]** %fpsgn0.in.declare_input, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %in37, i128 0, i128 0
  %in39 = load i128, i128* %array_getter38, align 4
  %mod = srem i128 %in39, 2
  %in40 = load [256 x i128]*, [256 x i128]** %fpsgn0.in.declare_input, align 8
  %array_getter41 = getelementptr inbounds [256 x i128], [256 x i128]* %in40, i128 0, i128 0
  %in42 = load i128, i128* %array_getter41, align 4
  %sub = sub i128 %in42, %mod
  %sdiv = sdiv i128 %sub, 2
  %fpsgn0.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 5
  store i128 %mod, i128* %fpsgn0.out.write_output_inner, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 5
  %fpsgn0.out.read_output_inner = load i128, i128* %struct_getter47, align 4
  %fpsgn0.div.write_inter_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 4
  store i128 %sdiv, i128* %fpsgn0.div.write_inter_inner, align 4
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 4
  %fpsgn0.div.read_inter_inner = load i128, i128* %struct_getter51, align 4
  %sub54 = sub i128 1, %fpsgn0.out.read_output_inner
  %mul = mul i128 %fpsgn0.out.read_output_inner, %sub54
  call void @fn_intrinsic_utils_constraint(i128 %mul, i128 0, i1* @constraint.397)
  %in55 = load [256 x i128]*, [256 x i128]** %fpsgn0.in.declare_input, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %in55, i128 0, i128 0
  %in57 = load i128, i128* %array_getter56, align 4
  %mul59 = mul i128 2, %fpsgn0.div.read_inter_inner
  %add61 = add i128 %mul59, %fpsgn0.out.read_output_inner
  call void @fn_intrinsic_utils_constraint(i128 %in57, i128 %add61, i1* @constraint.398)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit
  %ptr_cast = bitcast [256 x i128]** %fpsgn0.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %fpsgn0.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %fpsgn0.div.write_inter_inner63 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 4
  store i128 %fpsgn0.div.read_inter_inner, i128* %fpsgn0.div.write_inter_inner63, align 4
  %fpsgn0.out.write_output_inner65 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 5
  store i128 %fpsgn0.out.read_output_inner, i128* %fpsgn0.out.write_output_inner65, align 4
  ret void
}

define %struct_template_circuit_fpsgn0* @fn_template_build_fpsgn0(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpsgn0 = alloca %struct_template_circuit_fpsgn0, align 8
  %fpsgn0.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0, i32 0, i32 0
  store i128 %0, i128* %fpsgn0.n.write_arg_inner, align 4
  %fpsgn0.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0, i32 0, i32 1
  store i128 %1, i128* %fpsgn0.k.write_arg_inner, align 4
  %fpsgn0.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpsgn0.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0
}

define [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a2 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a2, [256 x i128]* %spice_inline_array, align 4
  %array_getter3 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 0
  %b4 = load [256 x i128], [256 x i128]* %array_getter3, align 4
  %spice_inline_array5 = alloca [256 x i128], align 8
  store [256 x i128] %b4, [256 x i128]* %spice_inline_array5, align 4
  %call = call [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array5, [256 x i128]* %4)
  %out6 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %5 = bitcast [256 x i128]* %out6 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] %a11, [256 x i128]* %spice_inline_array12, align 4
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 1
  %b15 = load [256 x i128], [256 x i128]* %array_getter14, align 4
  %spice_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] %b15, [256 x i128]* %spice_inline_array16, align 4
  %call18 = call [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array12, [256 x i128]* %spice_inline_array16, [256 x i128]* %4)
  %out20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %7 = bitcast [256 x i128]* %out20 to i8*
  %8 = bitcast [256 x i128]* %call18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_bigmultmodp(%struct_template_circuit_bigmultmodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 0
  %bigmultmodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 1
  %bigmultmodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 2
  %bigmultmodp.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigmultmodp.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultmodp.a.read_input_inner, [256 x i128]** %bigmultmodp.a.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 3
  %bigmultmodp.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigmultmodp.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultmodp.b.read_input_inner, [256 x i128]** %bigmultmodp.b.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 4
  %bigmultmodp.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %bigmultmodp.p.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmultmodp.p.read_input_inner, [256 x i128]** %bigmultmodp.p.declare_input, align 8
  %bigmultmodp.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigmultmodp.out.declare_output, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %bigmultmodp.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmultmodp.n.read_arg_inner, i128 %bigmultmodp.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %bigmultmodp.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.0
  %big_mult17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %big_mult17, i128 %a12, i1* @constraint.399)
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 2
  %bigmult.a.read_input_outter19 = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %big_mult21 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter19, i128 0, i128 %i.0
  store i128 %a12, i128* %big_mult21, align 4
  %b = load [256 x i128]*, [256 x i128]** %bigmultmodp.b.declare_input, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b24 = load i128, i128* %array_getter23, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.0
  %big_mult29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %big_mult29, i128 %b24, i1* @constraint.400)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 3
  %bigmult.b.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %big_mult34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter32, i128 0, i128 %i.0
  store i128 %b24, i128* %big_mult34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigmultmodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call40 = call %struct_template_circuit_bigmod* @fn_template_build_bigmod(i128 %bigmultmodp.n.read_arg_inner, i128 %bigmultmodp.k.read_arg_inner)
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch57, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add59, %loop.latch57 ]
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter43, align 8
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.1
  %big_mult46 = load i128, i128* %array_getter45, align 4
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call40, i32 0, i32 2
  %bigmod.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter48, align 8
  %array_getter50 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter, i128 0, i128 %i.1
  %big_mod51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_utils_constraint(i128 %big_mod51, i128 %big_mult46, i1* @constraint.401)
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call40, i32 0, i32 2
  %bigmod.a.read_input_outter54 = load [256 x i128]*, [256 x i128]** %struct_getter53, align 8
  %big_mod56 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter54, i128 0, i128 %i.1
  store i128 %big_mult46, i128* %big_mod56, align 4
  br label %loop.latch57

loop.latch57:                                     ; preds = %loop.body41
  %add59 = add i128 %i.1, 1
  %mul = mul i128 2, %bigmultmodp.k.read_arg_inner
  %slt62 = icmp slt i128 %add59, %mul
  br i1 %slt62, label %loop.body41, label %loop.exit63

loop.exit63:                                      ; preds = %loop.latch57
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch78, %loop.exit63
  %i.2 = phi i128 [ 0, %loop.exit63 ], [ %add80, %loop.latch78 ]
  %p = load [256 x i128]*, [256 x i128]** %bigmultmodp.p.declare_input, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %p, i128 0, i128 %i.2
  %p67 = load i128, i128* %array_getter66, align 4
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call40, i32 0, i32 3
  %bigmod.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter, i128 0, i128 %i.2
  %big_mod72 = load i128, i128* %array_getter71, align 4
  call void @fn_intrinsic_utils_constraint(i128 %big_mod72, i128 %p67, i1* @constraint.402)
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call40, i32 0, i32 3
  %bigmod.b.read_input_outter75 = load [256 x i128]*, [256 x i128]** %struct_getter74, align 8
  %big_mod77 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter75, i128 0, i128 %i.2
  store i128 %p67, i128* %big_mod77, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body64
  %add80 = add i128 %i.2, 1
  %slt83 = icmp slt i128 %add80, %bigmultmodp.k.read_arg_inner
  br i1 %slt83, label %loop.body64, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch98, %loop.exit84
  %i.3 = phi i128 [ 0, %loop.exit84 ], [ %add100, %loop.latch98 ]
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call40, i32 0, i32 5
  %bigmod.mod.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %array_getter89 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.mod.read_output_outter, i128 0, i128 %i.3
  %big_mod90 = load i128, i128* %array_getter89, align 4
  %out91 = load [256 x i128]*, [256 x i128]** %bigmultmodp.out.declare_output, align 8
  %array_getter93 = getelementptr inbounds [256 x i128], [256 x i128]* %out91, i128 0, i128 %i.3
  %out94 = load i128, i128* %array_getter93, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out94, i128 %big_mod90, i1* @constraint.403)
  %ptr_getter95 = load [256 x i128]*, [256 x i128]** %bigmultmodp.out.declare_output, align 8
  %out97 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter95, i128 0, i128 %i.3
  store i128 %big_mod90, i128* %out97, align 4
  br label %loop.latch98

loop.latch98:                                     ; preds = %loop.body85
  %add100 = add i128 %i.3, 1
  %slt103 = icmp slt i128 %add100, %bigmultmodp.k.read_arg_inner
  br i1 %slt103, label %loop.body85, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch98
  br label %arraydim

arraydim:                                         ; preds = %loop.exit104
  %ptr_cast = bitcast [256 x i128]** %bigmultmodp.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigmultmodp.k.read_arg_inner)
  %ptr_cast105 = bitcast [256 x i128]** %bigmultmodp.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast105, i128 %bigmultmodp.k.read_arg_inner)
  %ptr_cast106 = bitcast [256 x i128]** %bigmultmodp.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast106, i128 %bigmultmodp.k.read_arg_inner)
  %ptr_cast107 = bitcast [256 x i128]** %bigmultmodp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast107, i128 %bigmultmodp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out108 = load [256 x i128]*, [256 x i128]** %bigmultmodp.out.declare_output, align 8
  %bigmultmodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 5
  store [256 x i128]* %out108, [256 x i128]** %bigmultmodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultmodp* @fn_template_build_bigmultmodp(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmultmodp = alloca %struct_template_circuit_bigmultmodp, align 8
  %bigmultmodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %struct_template_circuit_bigmultmodp, i32 0, i32 0
  store i128 %0, i128* %bigmultmodp.n.write_arg_inner, align 4
  %bigmultmodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %struct_template_circuit_bigmultmodp, i32 0, i32 1
  store i128 %1, i128* %bigmultmodp.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultmodp* %struct_template_circuit_bigmultmodp
}

define void @fn_template_init_signedfp2carrymodp(%struct_template_circuit_signedfp2carrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 0
  %signedfp2carrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 1
  %signedfp2carrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 2
  %signedfp2carrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 3
  %signedfp2carrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %signedfp2carrymodp.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_inner, [256 x [256 x i128]]** %signedfp2carrymodp.in.declare_input, align 8
  %idx5 = call i128 @fn_intrinsic_utils_init()
  %m6 = call i128 @fn_intrinsic_utils_init()
  %carry = alloca [256 x %struct_template_circuit_signedfpcarrymodp*]*, align 8
  %carry7 = alloca [256 x %struct_template_circuit_signedfpcarrymodp*], align 8
  store [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry7, [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %signedfp2carrymodp.x.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %X, [256 x [256 x i128]]** %signedfp2carrymodp.x.declare_output, align 8
  %signedfp2carrymodp.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall9 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2carrymodp.out.declare_output, align 8
  %add = add i128 %signedfp2carrymodp.overflow.read_arg_inner, %signedfp2carrymodp.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedfp2carrymodp.n.read_arg_inner
  %slt = icmp slt i128 %signedfp2carrymodp.overflow.read_arg_inner, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch94, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add96, %loop.latch94 ]
  %call = call %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %signedfp2carrymodp.n.read_arg_inner, i128 %signedfp2carrymodp.k.read_arg_inner, i128 %signedfp2carrymodp.overflow.read_arg_inner, [256 x i128]* %signedfp2carrymodp.p.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_signedfpcarrymodp*]*, [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry, align 8
  %carry18 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_signedfpcarrymodp* %call, %struct_template_circuit_signedfpcarrymodp** %carry18, align 8
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add40, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %i.0, i128 %idx.0
  %in22 = load i128, i128* %array_getter, align 4
  %carry23 = load [256 x %struct_template_circuit_signedfpcarrymodp*]*, [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry, align 8
  %array_getter25 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry23, i128 0, i128 %i.0
  %carry26 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter25, align 8
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry26, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter, i128 0, i128 %idx.0
  %carry30 = load i128, i128* %array_getter29, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry30, i128 %in22, i1* @constraint.404)
  %ptr_getter31 = load [256 x %struct_template_circuit_signedfpcarrymodp*]*, [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry, align 8
  %array_getter33 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %ptr_getter31, i128 0, i128 %i.0
  %carry34 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter33, align 8
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry34, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter36 = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %carry38 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter36, i128 0, i128 %idx.0
  store i128 %in22, i128* %carry38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body19
  %add40 = add i128 %idx.0, 1
  %slt43 = icmp slt i128 %add40, %signedfp2carrymodp.k.read_arg_inner
  br i1 %slt43, label %loop.body19, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body44

loop.body44:                                      ; preds = %loop.latch62, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add64, %loop.latch62 ]
  %carry45 = load [256 x %struct_template_circuit_signedfpcarrymodp*]*, [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry, align 8
  %array_getter47 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry45, i128 0, i128 %i.0
  %carry48 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry48, i32 0, i32 5
  %signedfpcarrymodp.x.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.x.read_output_outter, i128 0, i128 %idx.1
  %carry52 = load i128, i128* %array_getter51, align 4
  %X53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.x.declare_output, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X53, i128 0, i128 %i.0, i128 %idx.1
  %X57 = load i128, i128* %array_getter56, align 4
  call void @fn_intrinsic_utils_constraint(i128 %X57, i128 %carry52, i1* @constraint.405)
  %ptr_getter58 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.x.declare_output, align 8
  %X61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter58, i128 0, i128 %i.0, i128 %idx.1
  store i128 %carry52, i128* %X61, align 4
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.body44
  %add64 = add i128 %idx.1, 1
  %slt67 = icmp slt i128 %add64, %sdiv
  br i1 %slt67, label %loop.body44, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch62
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch87, %loop.exit68
  %idx.2 = phi i128 [ 0, %loop.exit68 ], [ %add89, %loop.latch87 ]
  %carry70 = load [256 x %struct_template_circuit_signedfpcarrymodp*]*, [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry, align 8
  %array_getter72 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry70, i128 0, i128 %i.0
  %carry73 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter72, align 8
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry73, i32 0, i32 6
  %signedfpcarrymodp.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter74, align 8
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.out.read_output_outter, i128 0, i128 %idx.2
  %carry77 = load i128, i128* %array_getter76, align 4
  %out78 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.out.declare_output, align 8
  %array_getter81 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out78, i128 0, i128 %i.0, i128 %idx.2
  %out82 = load i128, i128* %array_getter81, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out82, i128 %carry77, i1* @constraint.406)
  %ptr_getter83 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.out.declare_output, align 8
  %out86 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter83, i128 0, i128 %i.0, i128 %idx.2
  store i128 %carry77, i128* %out86, align 4
  br label %loop.latch87

loop.latch87:                                     ; preds = %loop.body69
  %add89 = add i128 %idx.2, 1
  %slt92 = icmp slt i128 %add89, %signedfp2carrymodp.k.read_arg_inner
  br i1 %slt92, label %loop.body69, label %loop.exit93

loop.exit93:                                      ; preds = %loop.latch87
  br label %loop.latch94

loop.latch94:                                     ; preds = %loop.exit93
  %add96 = add i128 %i.0, 1
  %slt98 = icmp slt i128 %add96, 2
  br i1 %slt98, label %loop.body, label %loop.exit99

loop.exit99:                                      ; preds = %loop.latch94
  br label %arraydim

arraydim:                                         ; preds = %loop.exit99
  %ptr_cast = bitcast [256 x %struct_template_circuit_signedfpcarrymodp*]** %carry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast100 = bitcast [256 x [256 x i128]]** %signedfp2carrymodp.x.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast100, i128 2, i128 %sdiv)
  %ptr_cast101 = bitcast [256 x [256 x i128]]** %signedfp2carrymodp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast101, i128 2, i128 %signedfp2carrymodp.k.read_arg_inner)
  %ptr_cast102 = bitcast [256 x [256 x i128]]** %signedfp2carrymodp.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast102, i128 2, i128 %signedfp2carrymodp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %X103 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.x.declare_output, align 8
  %signedfp2carrymodp.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %X103, [256 x [256 x i128]]** %signedfp2carrymodp.x.write_output_inner, align 8
  %out104 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2carrymodp.out.declare_output, align 8
  %signedfp2carrymodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out104, [256 x [256 x i128]]** %signedfp2carrymodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedfp2carrymodp = alloca %struct_template_circuit_signedfp2carrymodp, align 8
  %signedfp2carrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 0
  store i128 %0, i128* %signedfp2carrymodp.n.write_arg_inner, align 4
  %signedfp2carrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 1
  store i128 %1, i128* %signedfp2carrymodp.k.write_arg_inner, align 4
  %signedfp2carrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 2
  store i128 %2, i128* %signedfp2carrymodp.overflow.write_arg_inner, align 4
  %signedfp2carrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedfp2carrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp
}

define void @fn_template_init_fp2frobeniusmap(%struct_template_circuit_fp2frobeniusmap* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 0
  %fp2frobeniusmap.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 1
  %fp2frobeniusmap.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 2
  %fp2frobeniusmap.power.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 3
  %fp2frobeniusmap.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp2frobeniusmap.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_inner, [256 x [256 x i128]]** %fp2frobeniusmap.in.declare_input, align 8
  %pow5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %fp2frobeniusmap.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %mod = srem i128 %fp2frobeniusmap.power.read_arg_inner, 2
  %call = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %fp2frobeniusmap.n.read_arg_inner, i128 %fp2frobeniusmap.k.read_arg_inner, [256 x i128]* %fp2frobeniusmap.p.read_arg_inner)
  %eq = icmp eq i128 %mod, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  br label %loop.body

if.false:                                         ; preds = %entry
  br label %loop.body32

loop.body:                                        ; preds = %loop.latch, %if.true
  %i.0 = phi i128 [ 0, %if.true ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 0, i128 %i.0
  %in11 = load i128, i128* %array_getter, align 4
  %out12 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out12, i128 0, i128 0, i128 %i.0
  %out15 = load i128, i128* %array_getter14, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out15, i128 %in11, i1* @constraint.407)
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %out17 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 0, i128 %i.0
  store i128 %in11, i128* %out17, align 4
  %in18 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.in.declare_input, align 8
  %array_getter20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in18, i128 0, i128 1, i128 %i.0
  %in21 = load i128, i128* %array_getter20, align 4
  %out22 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out22, i128 0, i128 1, i128 %i.0
  %out25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out25, i128 %in21, i1* @constraint.408)
  %ptr_getter26 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %out28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter26, i128 0, i128 1, i128 %i.0
  store i128 %in21, i128* %out28, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2frobeniusmap.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %if.exit

loop.body32:                                      ; preds = %loop.latch47, %if.false
  %i.1 = phi i128 [ 0, %if.false ], [ %add49, %loop.latch47 ]
  %in33 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.in.declare_input, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in33, i128 0, i128 1, i128 %i.1
  %in36 = load i128, i128* %array_getter35, align 4
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %i.1
  %neg141 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %neg141, i128 %in36, i1* @constraint.409)
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter44 = load [256 x i128]*, [256 x i128]** %struct_getter43, align 8
  %neg146 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter44, i128 0, i128 %i.1
  store i128 %in36, i128* %neg146, align 4
  br label %loop.latch47

loop.latch47:                                     ; preds = %loop.body32
  %add49 = add i128 %i.1, 1
  %slt52 = icmp slt i128 %add49, %fp2frobeniusmap.k.read_arg_inner
  br i1 %slt52, label %loop.body32, label %loop.exit53

loop.exit53:                                      ; preds = %loop.latch47
  br label %loop.body54

loop.body54:                                      ; preds = %loop.latch78, %loop.exit53
  %i.2 = phi i128 [ 0, %loop.exit53 ], [ %add80, %loop.latch78 ]
  %in55 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.in.declare_input, align 8
  %array_getter57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in55, i128 0, i128 0, i128 %i.2
  %in58 = load i128, i128* %array_getter57, align 4
  %out59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out59, i128 0, i128 0, i128 %i.2
  %out62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out62, i128 %in58, i1* @constraint.410)
  %ptr_getter63 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %out65 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter63, i128 0, i128 0, i128 %i.2
  store i128 %in58, i128* %out65, align 4
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter67, align 8
  %array_getter69 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %i.2
  %neg170 = load i128, i128* %array_getter69, align 4
  %out71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %array_getter73 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out71, i128 0, i128 1, i128 %i.2
  %out74 = load i128, i128* %array_getter73, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out74, i128 %neg170, i1* @constraint.411)
  %ptr_getter75 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %out77 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter75, i128 0, i128 1, i128 %i.2
  store i128 %neg170, i128* %out77, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body54
  %add80 = add i128 %i.2, 1
  %slt83 = icmp slt i128 %add80, %fp2frobeniusmap.k.read_arg_inner
  br i1 %slt83, label %loop.body54, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  br label %if.exit

if.exit:                                          ; preds = %loop.exit84, %loop.exit
  br label %arraydim

arraydim:                                         ; preds = %if.exit
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2frobeniusmap.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2frobeniusmap.k.read_arg_inner)
  %ptr_cast85 = bitcast [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast85, i128 2, i128 %fp2frobeniusmap.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out86 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2frobeniusmap.out.declare_output, align 8
  %fp2frobeniusmap.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out86, [256 x [256 x i128]]** %fp2frobeniusmap.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2frobeniusmap* @fn_template_build_fp2frobeniusmap(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_fp2frobeniusmap = alloca %struct_template_circuit_fp2frobeniusmap, align 8
  %fp2frobeniusmap.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 0
  store i128 %0, i128* %fp2frobeniusmap.n.write_arg_inner, align 4
  %fp2frobeniusmap.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 1
  store i128 %1, i128* %fp2frobeniusmap.k.write_arg_inner, align 4
  %fp2frobeniusmap.power.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 2
  store i128 %2, i128* %fp2frobeniusmap.power.write_arg_inner, align 4
  %fp2frobeniusmap.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp2frobeniusmap.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap
}

define void @fn_template_init_fpadd(%struct_template_circuit_fpadd* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 0
  %fpadd.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 1
  %fpadd.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 2
  %fpadd.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 3
  %fpadd.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %fpadd.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpadd.a.read_input_inner, [256 x i128]** %fpadd.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 4
  %fpadd.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %fpadd.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpadd.b.read_input_inner, [256 x i128]** %fpadd.b.declare_input, align 8
  %fpadd.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %fpadd.out.declare_output, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %fpadd.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %fpadd.n.read_arg_inner, i128 %fpadd.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add35, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %fpadd.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a11 = load i128, i128* %array_getter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.0
  %add16 = load i128, i128* %array_getter15, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add16, i128 %a11, i1* @constraint.412)
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %add20 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter18, i128 0, i128 %i.0
  store i128 %a11, i128* %add20, align 4
  %b = load [256 x i128]*, [256 x i128]** %fpadd.b.declare_input, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b23 = load i128, i128* %array_getter22, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.0
  %add28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add28, i128 %b23, i1* @constraint.413)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %add33 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter31, i128 0, i128 %i.0
  store i128 %b23, i128* %add33, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add35 = add i128 %i.0, 1
  %slt = icmp slt i128 %add35, %fpadd.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add40 = add i128 %fpadd.k.read_arg_inner, 1
  %call41 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpadd.n.read_arg_inner, i128 %add40)
  br label %loop.body42

loop.body42:                                      ; preds = %loop.latch71, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add73, %loop.latch71 ]
  %struct_getter44 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter44, align 8
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.1
  %add47 = load i128, i128* %array_getter46, align 4
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.1
  %lt52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt52, i128 %add47, i1* @constraint.414)
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 2
  %biglessthan.a.read_input_outter55 = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %lt57 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter55, i128 0, i128 %i.1
  store i128 %add47, i128* %lt57, align 4
  %array_getter59 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.p.read_arg_inner, i128 0, i128 %i.1
  %p60 = load i128, i128* %array_getter59, align 4
  %struct_getter62 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter62, align 8
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.1
  %lt65 = load i128, i128* %array_getter64, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt65, i128 %p60, i1* @constraint.415)
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 3
  %biglessthan.b.read_input_outter68 = load [256 x i128]*, [256 x i128]** %struct_getter67, align 8
  %lt70 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter68, i128 0, i128 %i.1
  store i128 %p60, i128* %lt70, align 4
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.body42
  %add73 = add i128 %i.1, 1
  %slt76 = icmp slt i128 %add73, %fpadd.k.read_arg_inner
  br i1 %slt76, label %loop.body42, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch71
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter80, i128 0, i128 %fpadd.k.read_arg_inner
  %add83 = load i128, i128* %array_getter82, align 4
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 2
  %biglessthan.a.read_input_outter86 = load [256 x i128]*, [256 x i128]** %struct_getter85, align 8
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter86, i128 0, i128 %fpadd.k.read_arg_inner
  %lt89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt89, i128 %add83, i1* @constraint.416)
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 2
  %biglessthan.a.read_input_outter92 = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %lt94 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter92, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 %add83, i128* %lt94, align 4
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 3
  %biglessthan.b.read_input_outter97 = load [256 x i128]*, [256 x i128]** %struct_getter96, align 8
  %array_getter99 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter97, i128 0, i128 %fpadd.k.read_arg_inner
  %lt100 = load i128, i128* %array_getter99, align 4
  call void @fn_intrinsic_utils_constraint(i128 %lt100, i128 0, i1* @constraint.417)
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 3
  %biglessthan.b.read_input_outter103 = load [256 x i128]*, [256 x i128]** %struct_getter102, align 8
  %lt105 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter103, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 0, i128* %lt105, align 4
  %add108 = add i128 %fpadd.k.read_arg_inner, 1
  %call109 = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %fpadd.n.read_arg_inner, i128 %add108)
  br label %loop.body110

loop.body110:                                     ; preds = %loop.latch148, %loop.exit77
  %i.2 = phi i128 [ 0, %loop.exit77 ], [ %add150, %loop.latch148 ]
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter113 = load [256 x i128]*, [256 x i128]** %struct_getter112, align 8
  %array_getter115 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter113, i128 0, i128 %i.2
  %add116 = load i128, i128* %array_getter115, align 4
  %struct_getter118 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter118, align 8
  %array_getter120 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.2
  %sub121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub121, i128 %add116, i1* @constraint.418)
  %struct_getter123 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 2
  %bigsub.a.read_input_outter124 = load [256 x i128]*, [256 x i128]** %struct_getter123, align 8
  %sub126 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter124, i128 0, i128 %i.2
  store i128 %add116, i128* %sub126, align 4
  %array_getter129 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.p.read_arg_inner, i128 0, i128 %i.2
  %p130 = load i128, i128* %array_getter129, align 4
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call41, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter132, align 4
  %array_getter135 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.p.read_arg_inner, i128 0, i128 %i.2
  %p136 = load i128, i128* %array_getter135, align 4
  %mul = mul i128 %biglessthan.out.read_output_outter, %p136
  %sub137 = sub i128 %p130, %mul
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter139, align 8
  %array_getter141 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.2
  %sub142 = load i128, i128* %array_getter141, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub142, i128 %sub137, i1* @constraint.419)
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 3
  %bigsub.b.read_input_outter145 = load [256 x i128]*, [256 x i128]** %struct_getter144, align 8
  %sub147 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter145, i128 0, i128 %i.2
  store i128 %sub137, i128* %sub147, align 4
  br label %loop.latch148

loop.latch148:                                    ; preds = %loop.body110
  %add150 = add i128 %i.2, 1
  %slt153 = icmp slt i128 %add150, %fpadd.k.read_arg_inner
  br i1 %slt153, label %loop.body110, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch148
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter157 = load [256 x i128]*, [256 x i128]** %struct_getter156, align 8
  %array_getter159 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter157, i128 0, i128 %fpadd.k.read_arg_inner
  %add160 = load i128, i128* %array_getter159, align 4
  %struct_getter162 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 2
  %bigsub.a.read_input_outter163 = load [256 x i128]*, [256 x i128]** %struct_getter162, align 8
  %array_getter165 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter163, i128 0, i128 %fpadd.k.read_arg_inner
  %sub166 = load i128, i128* %array_getter165, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub166, i128 %add160, i1* @constraint.420)
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 2
  %bigsub.a.read_input_outter169 = load [256 x i128]*, [256 x i128]** %struct_getter168, align 8
  %sub171 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter169, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 %add160, i128* %sub171, align 4
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 3
  %bigsub.b.read_input_outter174 = load [256 x i128]*, [256 x i128]** %struct_getter173, align 8
  %array_getter176 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter174, i128 0, i128 %fpadd.k.read_arg_inner
  %sub177 = load i128, i128* %array_getter176, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub177, i128 0, i1* @constraint.421)
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 3
  %bigsub.b.read_input_outter180 = load [256 x i128]*, [256 x i128]** %struct_getter179, align 8
  %sub182 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter180, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 0, i128* %sub182, align 4
  %struct_getter184 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter184, align 8
  %array_getter186 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %fpadd.k.read_arg_inner
  %sub187 = load i128, i128* %array_getter186, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub187, i128 0, i1* @constraint.422)
  br label %loop.body188

loop.body188:                                     ; preds = %loop.latch202, %loop.exit154
  %i.3 = phi i128 [ 0, %loop.exit154 ], [ %add204, %loop.latch202 ]
  %struct_getter190 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call109, i32 0, i32 4
  %bigsub.out.read_output_outter191 = load [256 x i128]*, [256 x i128]** %struct_getter190, align 8
  %array_getter193 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter191, i128 0, i128 %i.3
  %sub194 = load i128, i128* %array_getter193, align 4
  %out195 = load [256 x i128]*, [256 x i128]** %fpadd.out.declare_output, align 8
  %array_getter197 = getelementptr inbounds [256 x i128], [256 x i128]* %out195, i128 0, i128 %i.3
  %out198 = load i128, i128* %array_getter197, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out198, i128 %sub194, i1* @constraint.423)
  %ptr_getter199 = load [256 x i128]*, [256 x i128]** %fpadd.out.declare_output, align 8
  %out201 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter199, i128 0, i128 %i.3
  store i128 %sub194, i128* %out201, align 4
  br label %loop.latch202

loop.latch202:                                    ; preds = %loop.body188
  %add204 = add i128 %i.3, 1
  %slt207 = icmp slt i128 %add204, %fpadd.k.read_arg_inner
  br i1 %slt207, label %loop.body188, label %loop.exit208

loop.exit208:                                     ; preds = %loop.latch202
  br label %arraydim

arraydim:                                         ; preds = %loop.exit208
  %ptr_cast = bitcast [256 x i128]** %fpadd.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %fpadd.k.read_arg_inner)
  %ptr_cast209 = bitcast [256 x i128]** %fpadd.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast209, i128 %fpadd.k.read_arg_inner)
  %ptr_cast210 = bitcast [256 x i128]** %fpadd.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast210, i128 %fpadd.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out211 = load [256 x i128]*, [256 x i128]** %fpadd.out.declare_output, align 8
  %fpadd.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 5
  store [256 x i128]* %out211, [256 x i128]** %fpadd.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpadd* @fn_template_build_fpadd(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpadd = alloca %struct_template_circuit_fpadd, align 8
  %fpadd.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %struct_template_circuit_fpadd, i32 0, i32 0
  store i128 %0, i128* %fpadd.n.write_arg_inner, align 4
  %fpadd.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %struct_template_circuit_fpadd, i32 0, i32 1
  store i128 %1, i128* %fpadd.k.write_arg_inner, align 4
  %fpadd.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %struct_template_circuit_fpadd, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpadd.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpadd* %struct_template_circuit_fpadd
}

define void @fn_template_init_fp2sgn0(%struct_template_circuit_fp2sgn0* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 0
  %fp2sgn0.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 1
  %fp2sgn0.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 2
  %fp2sgn0.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 3
  %fp2sgn0.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2sgn0.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2sgn0.in.read_input_inner, [256 x [256 x i128]]** %fp2sgn0.in.declare_input, align 8
  %sgn1 = call i128 @fn_intrinsic_utils_init()
  %out = call i128 @fn_intrinsic_utils_init()
  %sgn = alloca [256 x %struct_template_circuit_fpsgn0*]*, align 8
  %sgn4 = alloca [256 x %struct_template_circuit_fpsgn0*], align 8
  store [256 x %struct_template_circuit_fpsgn0*]* %sgn4, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %idx6 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch33, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add35, %loop.latch33 ]
  %call = call %struct_template_circuit_fpsgn0* @fn_template_build_fpsgn0(i128 %fp2sgn0.n.read_arg_inner, i128 %fp2sgn0.k.read_arg_inner, [256 x i128]* %fp2sgn0.p.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_fpsgn0*]*, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %sgn9 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_fpsgn0* %call, %struct_template_circuit_fpsgn0** %sgn9, align 8
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2sgn0.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %i.0, i128 %idx.0
  %in13 = load i128, i128* %array_getter, align 4
  %sgn14 = load [256 x %struct_template_circuit_fpsgn0*]*, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %array_getter16 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn14, i128 0, i128 %i.0
  %sgn17 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter16, align 8
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn17, i32 0, i32 3
  %fpsgn0.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_outter, i128 0, i128 %idx.0
  %sgn21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sgn21, i128 %in13, i1* @constraint.424)
  %ptr_getter22 = load [256 x %struct_template_circuit_fpsgn0*]*, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %array_getter24 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %ptr_getter22, i128 0, i128 %i.0
  %sgn25 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter24, align 8
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn25, i32 0, i32 3
  %fpsgn0.in.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %sgn29 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_outter27, i128 0, i128 %idx.0
  store i128 %in13, i128* %sgn29, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body10
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fp2sgn0.k.read_arg_inner
  br i1 %slt, label %loop.body10, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch33

loop.latch33:                                     ; preds = %loop.exit
  %add35 = add i128 %i.0, 1
  %slt37 = icmp slt i128 %add35, 2
  br i1 %slt37, label %loop.body, label %loop.exit38

loop.exit38:                                      ; preds = %loop.latch33
  %call40 = call %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %fp2sgn0.k.read_arg_inner)
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch56, %loop.exit38
  %idx.1 = phi i128 [ 0, %loop.exit38 ], [ %add58, %loop.latch56 ]
  %in42 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2sgn0.in.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in42, i128 0, i128 0, i128 %idx.1
  %in45 = load i128, i128* %array_getter44, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call40, i32 0, i32 1
  %bigiszero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter, i128 0, i128 %idx.1
  %isZero50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_utils_constraint(i128 %isZero50, i128 %in45, i1* @constraint.425)
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call40, i32 0, i32 1
  %bigiszero.in.read_input_outter53 = load [256 x i128]*, [256 x i128]** %struct_getter52, align 8
  %isZero55 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter53, i128 0, i128 %idx.1
  store i128 %in45, i128* %isZero55, align 4
  br label %loop.latch56

loop.latch56:                                     ; preds = %loop.body41
  %add58 = add i128 %idx.1, 1
  %slt61 = icmp slt i128 %add58, %fp2sgn0.k.read_arg_inner
  br i1 %slt61, label %loop.body41, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch56
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call40, i32 0, i32 2
  %bigiszero.out.read_output_outter = load i128, i128* %struct_getter64, align 4
  %sgn65 = load [256 x %struct_template_circuit_fpsgn0*]*, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %array_getter66 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn65, i128 0, i128 1
  %sgn67 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter66, align 8
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn67, i32 0, i32 5
  %fpsgn0.out.read_output_outter = load i128, i128* %struct_getter68, align 4
  %mul = mul i128 %bigiszero.out.read_output_outter, %fpsgn0.out.read_output_outter
  call void @fn_intrinsic_utils_constraint(i128 %sgn1, i128 %mul, i1* @constraint.426)
  %fp2sgn0.sgn1.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 4
  store i128 %mul, i128* %fp2sgn0.sgn1.write_inter_inner, align 4
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 4
  %fp2sgn0.sgn1.read_inter_inner = load i128, i128* %struct_getter72, align 4
  %sgn73 = load [256 x %struct_template_circuit_fpsgn0*]*, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %array_getter74 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn73, i128 0, i128 0
  %sgn75 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter74, align 8
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn75, i32 0, i32 5
  %fpsgn0.out.read_output_outter77 = load i128, i128* %struct_getter76, align 4
  %add79 = add i128 %fpsgn0.out.read_output_outter77, %fp2sgn0.sgn1.read_inter_inner
  %sgn80 = load [256 x %struct_template_circuit_fpsgn0*]*, [256 x %struct_template_circuit_fpsgn0*]** %sgn, align 8
  %array_getter81 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn80, i128 0, i128 0
  %sgn82 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter81, align 8
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn82, i32 0, i32 5
  %fpsgn0.out.read_output_outter84 = load i128, i128* %struct_getter83, align 4
  %mul86 = mul i128 %fpsgn0.out.read_output_outter84, %fp2sgn0.sgn1.read_inter_inner
  %sub = sub i128 %add79, %mul86
  call void @fn_intrinsic_utils_constraint(i128 %out, i128 %sub, i1* @constraint.427)
  %fp2sgn0.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 5
  store i128 %sub, i128* %fp2sgn0.out.write_output_inner, align 4
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 5
  %fp2sgn0.out.read_output_inner = load i128, i128* %struct_getter90, align 4
  br label %arraydim

arraydim:                                         ; preds = %loop.exit62
  %ptr_cast = bitcast [256 x %struct_template_circuit_fpsgn0*]** %sgn to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast91 = bitcast [256 x [256 x i128]]** %fp2sgn0.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast91, i128 2, i128 %fp2sgn0.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %fp2sgn0.sgn1.write_inter_inner93 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 4
  store i128 %fp2sgn0.sgn1.read_inter_inner, i128* %fp2sgn0.sgn1.write_inter_inner93, align 4
  %fp2sgn0.out.write_output_inner95 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 5
  store i128 %fp2sgn0.out.read_output_inner, i128* %fp2sgn0.out.write_output_inner95, align 4
  ret void
}

define %struct_template_circuit_fp2sgn0* @fn_template_build_fp2sgn0(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2sgn0 = alloca %struct_template_circuit_fp2sgn0, align 8
  %fp2sgn0.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0, i32 0, i32 0
  store i128 %0, i128* %fp2sgn0.n.write_arg_inner, align 4
  %fp2sgn0.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0, i32 0, i32 1
  store i128 %1, i128* %fp2sgn0.k.write_arg_inner, align 4
  %fp2sgn0.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2sgn0.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_diff(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %2, [256 x [256 x [256 x i128]]]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0
  %a4 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a4, [256 x [256 x i128]]* %spice_inline_array, align 4
  %array_getter6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0
  %b7 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter6, align 4
  %spice_inline_array8 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b7, [256 x [256 x i128]]* %spice_inline_array8, align 4
  %call = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array8, [256 x i128]* %4)
  %out10 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.0
  %5 = bitcast [256 x [256 x i128]]* %out10 to i8*
  %6 = bitcast [256 x [256 x i128]]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 6
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_sum(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %2, [256 x [256 x [256 x i128]]]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0
  %a4 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a4, [256 x [256 x i128]]* %spice_inline_array, align 4
  %array_getter6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0
  %b7 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter6, align 4
  %spice_inline_array8 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b7, [256 x [256 x i128]]* %spice_inline_array8, align 4
  %call = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array8, [256 x i128]* %4)
  %out10 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.0
  %5 = bitcast [256 x [256 x i128]]* %out10 to i8*
  %6 = bitcast [256 x [256 x i128]]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 6
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_signedfp12carrymodp(%struct_template_circuit_signedfp12carrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 0
  %signedfp12carrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 1
  %signedfp12carrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 2
  %signedfp12carrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 3
  %signedfp12carrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %signedfp12carrymodp.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.in.declare_input, align 8
  %l5 = call i128 @fn_intrinsic_utils_init()
  %m6 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %carry = alloca [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]*, align 8
  %carry9 = alloca [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], align 8
  store [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry9, [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry, align 8
  %signedfp12carrymodp.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.declare_output, align 8
  %idx10 = call i128 @fn_intrinsic_utils_init()
  %signedfp12carrymodp.x.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall11 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %X, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.declare_output, align 8
  %add = add i128 %signedfp12carrymodp.overflow.read_arg_inner, %signedfp12carrymodp.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedfp12carrymodp.n.read_arg_inner
  %slt = icmp slt i128 %signedfp12carrymodp.overflow.read_arg_inner, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch117, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add119, %loop.latch117 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch111, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add113, %loop.latch111 ]
  %call = call %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %signedfp12carrymodp.n.read_arg_inner, i128 %signedfp12carrymodp.k.read_arg_inner, i128 %signedfp12carrymodp.overflow.read_arg_inner, [256 x i128]* %signedfp12carrymodp.p.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]*, [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry, align 8
  %carry26 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_signedfpcarrymodp* %call, %struct_template_circuit_signedfpcarrymodp** %carry26, align 8
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch, %loop.body20
  %idx.0 = phi i128 [ 0, %loop.body20 ], [ %add51, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %in31 = load i128, i128* %array_getter, align 4
  %carry32 = load [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]*, [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry32, i128 0, i128 %i.0, i128 %j.0
  %carry36 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter35, align 8
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry36, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter37, align 8
  %array_getter39 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter, i128 0, i128 %idx.0
  %carry40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry40, i128 %in31, i1* @constraint.428)
  %ptr_getter41 = load [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]*, [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %ptr_getter41, i128 0, i128 %i.0, i128 %j.0
  %carry45 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry45, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter47 = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %carry49 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter47, i128 0, i128 %idx.0
  store i128 %in31, i128* %carry49, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body27
  %add51 = add i128 %idx.0, 1
  %slt54 = icmp slt i128 %add51, %signedfp12carrymodp.k.read_arg_inner
  br i1 %slt54, label %loop.body27, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body55

loop.body55:                                      ; preds = %loop.latch76, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add78, %loop.latch76 ]
  %carry56 = load [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]*, [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry, align 8
  %array_getter59 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry56, i128 0, i128 %i.0, i128 %j.0
  %carry60 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter59, align 8
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry60, i32 0, i32 5
  %signedfpcarrymodp.x.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter61, align 8
  %array_getter63 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.x.read_output_outter, i128 0, i128 %idx.1
  %carry64 = load i128, i128* %array_getter63, align 4
  %X65 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.declare_output, align 8
  %array_getter69 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X65, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %X70 = load i128, i128* %array_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %X70, i128 %carry64, i1* @constraint.429)
  %ptr_getter71 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.declare_output, align 8
  %X75 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter71, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  store i128 %carry64, i128* %X75, align 4
  br label %loop.latch76

loop.latch76:                                     ; preds = %loop.body55
  %add78 = add i128 %idx.1, 1
  %slt81 = icmp slt i128 %add78, %sdiv
  br i1 %slt81, label %loop.body55, label %loop.exit82

loop.exit82:                                      ; preds = %loop.latch76
  br label %loop.body83

loop.body83:                                      ; preds = %loop.latch104, %loop.exit82
  %idx.2 = phi i128 [ 0, %loop.exit82 ], [ %add106, %loop.latch104 ]
  %carry84 = load [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]*, [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry84, i128 0, i128 %i.0, i128 %j.0
  %carry88 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter87, align 8
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry88, i32 0, i32 6
  %signedfpcarrymodp.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter89, align 8
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.out.read_output_outter, i128 0, i128 %idx.2
  %carry92 = load i128, i128* %array_getter91, align 4
  %out93 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.declare_output, align 8
  %array_getter97 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out93, i128 0, i128 %i.0, i128 %j.0, i128 %idx.2
  %out98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out98, i128 %carry92, i1* @constraint.430)
  %ptr_getter99 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.declare_output, align 8
  %out103 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter99, i128 0, i128 %i.0, i128 %j.0, i128 %idx.2
  store i128 %carry92, i128* %out103, align 4
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.body83
  %add106 = add i128 %idx.2, 1
  %slt109 = icmp slt i128 %add106, %signedfp12carrymodp.k.read_arg_inner
  br i1 %slt109, label %loop.body83, label %loop.exit110

loop.exit110:                                     ; preds = %loop.latch104
  br label %loop.latch111

loop.latch111:                                    ; preds = %loop.exit110
  %add113 = add i128 %j.0, 1
  %slt115 = icmp slt i128 %add113, 2
  br i1 %slt115, label %loop.body20, label %loop.exit116

loop.exit116:                                     ; preds = %loop.latch111
  br label %loop.latch117

loop.latch117:                                    ; preds = %loop.exit116
  %add119 = add i128 %i.0, 1
  %slt122 = icmp slt i128 %add119, 6
  br i1 %slt122, label %loop.body, label %loop.exit123

loop.exit123:                                     ; preds = %loop.latch117
  br label %arraydim

arraydim:                                         ; preds = %loop.exit123
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %signedfp12carrymodp.k.read_arg_inner)
  %ptr_cast124 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast124, i128 6, i128 2, i128 %sdiv)
  %ptr_cast125 = bitcast [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]** %carry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast125, i128 6, i128 2)
  %ptr_cast126 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast126, i128 6, i128 2, i128 %signedfp12carrymodp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %X127 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.declare_output, align 8
  %signedfp12carrymodp.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %X127, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.write_output_inner, align 8
  %out128 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.declare_output, align 8
  %signedfp12carrymodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out128, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedfp12carrymodp = alloca %struct_template_circuit_signedfp12carrymodp, align 8
  %signedfp12carrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 0
  store i128 %0, i128* %signedfp12carrymodp.n.write_arg_inner, align 4
  %signedfp12carrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 1
  store i128 %1, i128* %signedfp12carrymodp.k.write_arg_inner, align 4
  %signedfp12carrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 2
  store i128 %2, i128* %signedfp12carrymodp.overflow.write_arg_inner, align 4
  %signedfp12carrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedfp12carrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp
}

define [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %call = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  %call6 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %4)
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call6, i128 0, i128 1
  %temp8 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %temp8, [256 x i128]* %spice_inline_array, align 4
  ret [256 x i128]* %spice_inline_array
}

define [256 x i128]* @mod_exp(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %bitlength1 = call i128 @fn_intrinsic_utils_init()
  %i3 = call i128 @fn_intrinsic_utils_init()
  %j4 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch33, %entry
  %bitlength.0 = phi i128 [ 0, %entry ], [ %bitlength.2, %loop.latch33 ]
  %i.0 = phi i128 [ 0, %entry ], [ %add35, %loop.latch33 ]
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch, %loop.body
  %bitlength.1 = phi i128 [ %bitlength.0, %loop.body ], [ %bitlength.2, %loop.latch ]
  %j.0 = phi i128 [ 0, %loop.body ], [ %add30, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %e10 = load i128, i128* %array_getter, align 4
  %rshift = lshr i128 %e10, %j.0
  %and = and i128 %rshift, 1
  %mul = mul i128 %0, %i.0
  %add = add i128 %j.0, %mul
  %eBits14 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add
  store i128 %and, i128* %eBits14, align 4
  %mul19 = mul i128 %0, %i.0
  %add20 = add i128 %j.0, %mul19
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add20
  %eBits22 = load i128, i128* %array_getter21, align 4
  %eq = icmp eq i128 %eBits22, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body8
  %mul26 = mul i128 %0, %i.0
  %add27 = add i128 %j.0, %mul26
  %add28 = add i128 %add27, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body8
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %bitlength.2 = phi i128 [ %add28, %if.true ], [ %bitlength.1, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add30 = add i128 %j.0, 1
  %slt = icmp slt i128 %add30, %0
  br i1 %slt, label %loop.body8, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch33

loop.latch33:                                     ; preds = %loop.exit
  %add35 = add i128 %i.0, 1
  %slt37 = icmp slt i128 %add35, %1
  br i1 %slt37, label %loop.body, label %loop.exit38

loop.exit38:                                      ; preds = %loop.latch33
  %uniform_array39 = alloca [256 x i128], align 8
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch44, %loop.exit38
  %i.1 = phi i128 [ 0, %loop.exit38 ], [ %add46, %loop.latch44 ]
  %out43 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array39, i128 0, i128 %i.1
  store i128 0, i128* %out43, align 4
  br label %loop.latch44

loop.latch44:                                     ; preds = %loop.body40
  %add46 = add i128 %i.1, 1
  %slt48 = icmp slt i128 %add46, 50
  br i1 %slt48, label %loop.body40, label %loop.exit49

loop.exit49:                                      ; preds = %loop.latch44
  %out51 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array39, i128 0, i128 0
  store i128 1, i128* %out51, align 4
  %sub = sub i128 %bitlength.2, 1
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch94, %loop.exit49
  %i.2 = phi i128 [ %sub, %loop.exit49 ], [ %sub96, %loop.latch94 ]
  %out.0 = phi [256 x i128]* [ %uniform_array39, %loop.exit49 ], [ %out.2, %loop.latch94 ]
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  %eBits59 = load i128, i128* %array_getter58, align 4
  %eq60 = icmp eq i128 %eBits59, 1
  br i1 %eq60, label %if.true54, label %if.false55

if.true54:                                        ; preds = %loop.body53
  %uniform_array61 = alloca [256 x i128], align 8
  %call = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %out.0, [256 x i128]* %2)
  %uniform_array65 = alloca [256 x [256 x i128]], align 8
  %call69 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %3)
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call69, i128 0, i128 1
  %temp272 = load [256 x i128], [256 x i128]* %array_getter71, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %temp272, [256 x i128]* %spice_inline_array, align 4
  br label %if.exit73

if.false55:                                       ; preds = %loop.body53
  br label %if.exit73

if.exit73:                                        ; preds = %if.false55, %if.true54
  %out.1 = phi [256 x i128]* [ %spice_inline_array, %if.true54 ], [ %out.0, %if.false55 ]
  %sgt = icmp sgt i128 %i.2, 0
  br i1 %sgt, label %if.true74, label %if.false75

if.true74:                                        ; preds = %if.exit73
  %uniform_array77 = alloca [256 x i128], align 8
  %call82 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %out.1, [256 x i128]* %out.1)
  %uniform_array83 = alloca [256 x [256 x i128]], align 8
  %call88 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call82, [256 x i128]* %3)
  %array_getter90 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call88, i128 0, i128 1
  %temp291 = load [256 x i128], [256 x i128]* %array_getter90, align 4
  %spice_inline_array92 = alloca [256 x i128], align 8
  store [256 x i128] %temp291, [256 x i128]* %spice_inline_array92, align 4
  br label %if.exit93

if.false75:                                       ; preds = %if.exit73
  br label %if.exit93

if.exit93:                                        ; preds = %if.false75, %if.true74
  %out.2 = phi [256 x i128]* [ %spice_inline_array92, %if.true74 ], [ %out.1, %if.false75 ]
  br label %loop.latch94

loop.latch94:                                     ; preds = %if.exit93
  %sub96 = sub i128 %i.2, 1
  %sge = icmp sge i128 %sub96, 0
  br i1 %sge, label %loop.body53, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch94
  ret [256 x i128]* %out.2
}

define void @fn_template_init_fp2subtract(%struct_template_circuit_fp2subtract* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 0
  %fp2subtract.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 1
  %fp2subtract.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 2
  %fp2subtract.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 3
  %fp2subtract.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2subtract.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2subtract.a.read_input_inner, [256 x [256 x i128]]** %fp2subtract.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 4
  %fp2subtract.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp2subtract.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2subtract.b.read_input_inner, [256 x [256 x i128]]** %fp2subtract.b.declare_input, align 8
  %fp2subtract.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2subtract.out.declare_output, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_fpsubtract* @fn_template_build_fpsubtract(i128 %fp2subtract.n.read_arg_inner, i128 %fp2subtract.k.read_arg_inner, [256 x i128]* %fp2subtract.p.read_arg_inner)
  %call12 = call %struct_template_circuit_fpsubtract* @fn_template_build_fpsubtract(i128 %fp2subtract.n.read_arg_inner, i128 %fp2subtract.k.read_arg_inner, [256 x i128]* %fp2subtract.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 0, i128 %i.0
  %a14 = load i128, i128* %array_getter, align 4
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 3
  %fpsubtract.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter16, align 8
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter, i128 0, i128 %i.0
  %sub019 = load i128, i128* %array_getter18, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub019, i128 %a14, i1* @constraint.431)
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 3
  %fpsubtract.a.read_input_outter21 = load [256 x i128]*, [256 x i128]** %struct_getter20, align 8
  %sub023 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter21, i128 0, i128 %i.0
  store i128 %a14, i128* %sub023, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.b.declare_input, align 8
  %array_getter25 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 0, i128 %i.0
  %b26 = load i128, i128* %array_getter25, align 4
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 4
  %fpsubtract.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter, i128 0, i128 %i.0
  %sub031 = load i128, i128* %array_getter30, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub031, i128 %b26, i1* @constraint.432)
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 4
  %fpsubtract.b.read_input_outter34 = load [256 x i128]*, [256 x i128]** %struct_getter33, align 8
  %sub036 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter34, i128 0, i128 %i.0
  store i128 %b26, i128* %sub036, align 4
  %a37 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.a.declare_input, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a37, i128 0, i128 1, i128 %i.0
  %a40 = load i128, i128* %array_getter39, align 4
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call12, i32 0, i32 3
  %fpsubtract.a.read_input_outter43 = load [256 x i128]*, [256 x i128]** %struct_getter42, align 8
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter43, i128 0, i128 %i.0
  %sub146 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub146, i128 %a40, i1* @constraint.433)
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call12, i32 0, i32 3
  %fpsubtract.a.read_input_outter49 = load [256 x i128]*, [256 x i128]** %struct_getter48, align 8
  %sub151 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter49, i128 0, i128 %i.0
  store i128 %a40, i128* %sub151, align 4
  %b52 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.b.declare_input, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b52, i128 0, i128 1, i128 %i.0
  %b55 = load i128, i128* %array_getter54, align 4
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call12, i32 0, i32 4
  %fpsubtract.b.read_input_outter58 = load [256 x i128]*, [256 x i128]** %struct_getter57, align 8
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter58, i128 0, i128 %i.0
  %sub161 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sub161, i128 %b55, i1* @constraint.434)
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call12, i32 0, i32 4
  %fpsubtract.b.read_input_outter64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %sub166 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter64, i128 0, i128 %i.0
  store i128 %b55, i128* %sub166, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2subtract.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body70

loop.body70:                                      ; preds = %loop.latch96, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add98, %loop.latch96 ]
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 7
  %fpsubtract.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter72, align 8
  %array_getter74 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.out.read_output_outter, i128 0, i128 %i.1
  %sub075 = load i128, i128* %array_getter74, align 4
  %out76 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.out.declare_output, align 8
  %array_getter78 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out76, i128 0, i128 0, i128 %i.1
  %out79 = load i128, i128* %array_getter78, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out79, i128 %sub075, i1* @constraint.435)
  %ptr_getter80 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.out.declare_output, align 8
  %out82 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter80, i128 0, i128 0, i128 %i.1
  store i128 %sub075, i128* %out82, align 4
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call12, i32 0, i32 7
  %fpsubtract.out.read_output_outter85 = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %array_getter87 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.out.read_output_outter85, i128 0, i128 %i.1
  %sub188 = load i128, i128* %array_getter87, align 4
  %out89 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.out.declare_output, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out89, i128 0, i128 1, i128 %i.1
  %out92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out92, i128 %sub188, i1* @constraint.436)
  %ptr_getter93 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.out.declare_output, align 8
  %out95 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter93, i128 0, i128 1, i128 %i.1
  store i128 %sub188, i128* %out95, align 4
  br label %loop.latch96

loop.latch96:                                     ; preds = %loop.body70
  %add98 = add i128 %i.1, 1
  %slt101 = icmp slt i128 %add98, %fp2subtract.k.read_arg_inner
  br i1 %slt101, label %loop.body70, label %loop.exit102

loop.exit102:                                     ; preds = %loop.latch96
  br label %arraydim

arraydim:                                         ; preds = %loop.exit102
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2subtract.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2subtract.k.read_arg_inner)
  %ptr_cast103 = bitcast [256 x [256 x i128]]** %fp2subtract.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast103, i128 2, i128 %fp2subtract.k.read_arg_inner)
  %ptr_cast104 = bitcast [256 x [256 x i128]]** %fp2subtract.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast104, i128 2, i128 %fp2subtract.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out105 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2subtract.out.declare_output, align 8
  %fp2subtract.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out105, [256 x [256 x i128]]** %fp2subtract.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2subtract* @fn_template_build_fp2subtract(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2subtract = alloca %struct_template_circuit_fp2subtract, align 8
  %fp2subtract.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract, i32 0, i32 0
  store i128 %0, i128* %fp2subtract.n.write_arg_inner, align 4
  %fp2subtract.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract, i32 0, i32 1
  store i128 %1, i128* %fp2subtract.k.write_arg_inner, align 4
  %fp2subtract.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2subtract.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract
}

define void @fn_template_init_primereduce(%struct_template_circuit_primereduce* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 0
  %primereduce.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 1
  %primereduce.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 2
  %primereduce.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 3
  %primereduce.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 4
  %primereduce.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 5
  %primereduce.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %primereduce.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %primereduce.in.read_input_inner, [256 x i128]** %primereduce.in.declare_input, align 8
  %two = alloca [256 x i128]*, align 8
  %two6 = alloca [256 x i128], align 8
  store [256 x i128]* %two6, [256 x i128]** %two, align 8
  %j7 = call i128 @fn_intrinsic_utils_init()
  %primereduce.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %primereduce.out.declare_output, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %e = alloca [256 x i128]*, align 8
  %e9 = alloca [256 x i128], align 8
  store [256 x i128]* %e9, [256 x i128]** %e, align 8
  %out_sum = alloca [256 x i128]*, align 8
  %out_sum10 = alloca [256 x i128], align 8
  store [256 x i128]* %out_sum10, [256 x i128]** %out_sum, align 8
  %pow2n = alloca [256 x i128]*, align 8
  %pow2n11 = alloca [256 x i128], align 8
  store [256 x i128]* %pow2n11, [256 x i128]** %pow2n, align 8
  %r = alloca [256 x [256 x i128]]*, align 8
  %r12 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %r12, [256 x [256 x i128]]** %r, align 8
  %pow2nk = alloca [256 x i128]*, align 8
  %pow2nk13 = alloca [256 x i128], align 8
  store [256 x i128]* %pow2nk13, [256 x i128]** %pow2nk, align 8
  %add = add i128 %primereduce.m.read_arg_inner, %primereduce.k.read_arg_inner
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %two, align 8
  %uniform_array17 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array17, [256 x i128]** %e, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add24, %loop.latch ]
  %ptr_getter = load [256 x i128]*, [256 x i128]** %two, align 8
  %two19 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 0, i128* %two19, align 4
  %ptr_getter20 = load [256 x i128]*, [256 x i128]** %e, align 8
  %e22 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter20, i128 0, i128 %i.0
  store i128 0, i128* %e22, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add24 = add i128 %i.0, 1
  %slt = icmp slt i128 %add24, %primereduce.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %ptr_getter27 = load [256 x i128]*, [256 x i128]** %two, align 8
  %two28 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter27, i128 0, i128 0
  store i128 2, i128* %two28, align 4
  %ptr_getter29 = load [256 x i128]*, [256 x i128]** %e, align 8
  %e30 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter29, i128 0, i128 0
  store i128 %primereduce.n.read_arg_inner, i128* %e30, align 4
  %two33 = load [256 x i128]*, [256 x i128]** %two, align 8
  %e34 = load [256 x i128]*, [256 x i128]** %e, align 8
  %call = call [256 x i128]* @mod_exp(i128 %primereduce.n.read_arg_inner, i128 %primereduce.k.read_arg_inner, [256 x i128]* %two33, [256 x i128]* %primereduce.p.read_arg_inner, [256 x i128]* %e34)
  store [256 x i128]* %call, [256 x i128]** %pow2n, align 8
  %ptr_getter36 = load [256 x i128]*, [256 x i128]** %e, align 8
  %e37 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter36, i128 0, i128 0
  store i128 %primereduce.k.read_arg_inner, i128* %e37, align 4
  %lshift = shl i128 1, %primereduce.n.read_arg_inner
  %slt40 = icmp slt i128 %primereduce.k.read_arg_inner, %lshift
  call void @fn_intrinsic_utils_assert(i1 %slt40)
  %pow2n43 = load [256 x i128]*, [256 x i128]** %pow2n, align 8
  %e45 = load [256 x i128]*, [256 x i128]** %e, align 8
  %call46 = call [256 x i128]* @mod_exp(i128 %primereduce.n.read_arg_inner, i128 %primereduce.k.read_arg_inner, [256 x i128]* %pow2n43, [256 x i128]* %primereduce.p.read_arg_inner, [256 x i128]* %e45)
  store [256 x i128]* %call46, [256 x i128]** %pow2nk, align 8
  %uniform_array48 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array48, [256 x [256 x i128]]** %r, align 8
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch66, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add68, %loop.latch66 ]
  %eq = icmp eq i128 %i.1, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body49
  %pow2nk51 = load [256 x i128]*, [256 x i128]** %pow2nk, align 8
  %ptr_getter52 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %r, align 8
  %r54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter52, i128 0, i128 %i.1
  %1 = bitcast [256 x i128]* %r54 to i8*
  %2 = bitcast [256 x i128]* %pow2nk51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %loop.body49
  %r57 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %r, align 8
  %sub = sub i128 %i.1, 1
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %r57, i128 0, i128 %sub
  %r59 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %r59, [256 x i128]* %spice_inline_array, align 4
  %pow2n60 = load [256 x i128]*, [256 x i128]** %pow2n, align 8
  %call62 = call [256 x i128]* @prod_mod(i128 %primereduce.n.read_arg_inner, i128 %primereduce.k.read_arg_inner, [256 x i128]* %spice_inline_array, [256 x i128]* %pow2n60, [256 x i128]* %primereduce.p.read_arg_inner)
  %ptr_getter63 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %r, align 8
  %r65 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter63, i128 0, i128 %i.1
  %3 = bitcast [256 x i128]* %r65 to i8*
  %4 = bitcast [256 x i128]* %call62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch66

loop.latch66:                                     ; preds = %if.exit
  %add68 = add i128 %i.1, 1
  %slt71 = icmp slt i128 %add68, %primereduce.m.read_arg_inner
  br i1 %slt71, label %loop.body49, label %loop.exit72

loop.exit72:                                      ; preds = %loop.latch66
  %uniform_array74 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array74, [256 x i128]** %out_sum, align 8
  br label %loop.body75

loop.body75:                                      ; preds = %loop.latch82, %loop.exit72
  %i.2 = phi i128 [ 0, %loop.exit72 ], [ %add84, %loop.latch82 ]
  %in = load [256 x i128]*, [256 x i128]** %primereduce.in.declare_input, align 8
  %array_getter77 = getelementptr inbounds [256 x i128], [256 x i128]* %in, i128 0, i128 %i.2
  %in78 = load i128, i128* %array_getter77, align 4
  %ptr_getter79 = load [256 x i128]*, [256 x i128]** %out_sum, align 8
  %out_sum81 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter79, i128 0, i128 %i.2
  store i128 %in78, i128* %out_sum81, align 4
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.body75
  %add84 = add i128 %i.2, 1
  %slt87 = icmp slt i128 %add84, %primereduce.k.read_arg_inner
  br i1 %slt87, label %loop.body75, label %loop.exit88

loop.exit88:                                      ; preds = %loop.latch82
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch117, %loop.exit88
  %i.3 = phi i128 [ 0, %loop.exit88 ], [ %add119, %loop.latch117 ]
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch110, %loop.body89
  %j.0 = phi i128 [ 0, %loop.body89 ], [ %add112, %loop.latch110 ]
  %out_sum91 = load [256 x i128]*, [256 x i128]** %out_sum, align 8
  %array_getter93 = getelementptr inbounds [256 x i128], [256 x i128]* %out_sum91, i128 0, i128 %j.0
  %out_sum94 = load i128, i128* %array_getter93, align 4
  %in95 = load [256 x i128]*, [256 x i128]** %primereduce.in.declare_input, align 8
  %add98 = add i128 %i.3, %primereduce.k.read_arg_inner
  %array_getter99 = getelementptr inbounds [256 x i128], [256 x i128]* %in95, i128 0, i128 %add98
  %in100 = load i128, i128* %array_getter99, align 4
  %r101 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %r, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %r101, i128 0, i128 %i.3, i128 %j.0
  %r105 = load i128, i128* %array_getter104, align 4
  %mul = mul i128 %in100, %r105
  %add106 = add i128 %out_sum94, %mul
  %ptr_getter107 = load [256 x i128]*, [256 x i128]** %out_sum, align 8
  %out_sum109 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter107, i128 0, i128 %j.0
  store i128 %add106, i128* %out_sum109, align 4
  br label %loop.latch110

loop.latch110:                                    ; preds = %loop.body90
  %add112 = add i128 %j.0, 1
  %slt115 = icmp slt i128 %add112, %primereduce.k.read_arg_inner
  br i1 %slt115, label %loop.body90, label %loop.exit116

loop.exit116:                                     ; preds = %loop.latch110
  br label %loop.latch117

loop.latch117:                                    ; preds = %loop.exit116
  %add119 = add i128 %i.3, 1
  %slt122 = icmp slt i128 %add119, %primereduce.m.read_arg_inner
  br i1 %slt122, label %loop.body89, label %loop.exit123

loop.exit123:                                     ; preds = %loop.latch117
  br label %loop.body124

loop.body124:                                     ; preds = %loop.latch136, %loop.exit123
  %i.4 = phi i128 [ 0, %loop.exit123 ], [ %add138, %loop.latch136 ]
  %out_sum125 = load [256 x i128]*, [256 x i128]** %out_sum, align 8
  %array_getter127 = getelementptr inbounds [256 x i128], [256 x i128]* %out_sum125, i128 0, i128 %i.4
  %out_sum128 = load i128, i128* %array_getter127, align 4
  %out129 = load [256 x i128]*, [256 x i128]** %primereduce.out.declare_output, align 8
  %array_getter131 = getelementptr inbounds [256 x i128], [256 x i128]* %out129, i128 0, i128 %i.4
  %out132 = load i128, i128* %array_getter131, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out132, i128 %out_sum128, i1* @constraint.437)
  %ptr_getter133 = load [256 x i128]*, [256 x i128]** %primereduce.out.declare_output, align 8
  %out135 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter133, i128 0, i128 %i.4
  store i128 %out_sum128, i128* %out135, align 4
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.body124
  %add138 = add i128 %i.4, 1
  %slt141 = icmp slt i128 %add138, %primereduce.k.read_arg_inner
  br i1 %slt141, label %loop.body124, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %arraydim

arraydim:                                         ; preds = %loop.exit142
  %ptr_cast = bitcast [256 x i128]** %pow2nk to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 50)
  %ptr_cast143 = bitcast [256 x i128]** %primereduce.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast143, i128 %primereduce.k.read_arg_inner)
  %ptr_cast144 = bitcast [256 x i128]** %pow2n to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast144, i128 50)
  %ptr_cast145 = bitcast [256 x i128]** %two to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast145, i128 %primereduce.k.read_arg_inner)
  %ptr_cast146 = bitcast [256 x [256 x i128]]** %r to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast146, i128 %primereduce.m.read_arg_inner, i128 50)
  %ptr_cast147 = bitcast [256 x i128]** %e to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast147, i128 %primereduce.k.read_arg_inner)
  %ptr_cast148 = bitcast [256 x i128]** %out_sum to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast148, i128 %primereduce.k.read_arg_inner)
  %ptr_cast149 = bitcast [256 x i128]** %primereduce.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast149, i128 %add)
  br label %exit

exit:                                             ; preds = %arraydim
  %out150 = load [256 x i128]*, [256 x i128]** %primereduce.out.declare_output, align 8
  %primereduce.out.write_output_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 6
  store [256 x i128]* %out150, [256 x i128]** %primereduce.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, i128 %4) {
entry:
  %struct_template_circuit_primereduce = alloca %struct_template_circuit_primereduce, align 8
  %primereduce.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 0
  store i128 %0, i128* %primereduce.n.write_arg_inner, align 4
  %primereduce.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 1
  store i128 %1, i128* %primereduce.k.write_arg_inner, align 4
  %primereduce.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 2
  store i128 %2, i128* %primereduce.m.write_arg_inner, align 4
  %primereduce.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %primereduce.p.write_arg_inner, align 8
  %primereduce.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 4
  store i128 %4, i128* %primereduce.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_primereduce* %struct_template_circuit_primereduce
}

define void @fn_template_init_fp12add(%struct_template_circuit_fp12add* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 0
  %fp12add.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 1
  %fp12add.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 2
  %fp12add.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 3
  %fp12add.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12add.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12add.a.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12add.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 4
  %fp12add.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %fp12add.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12add.b.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12add.b.declare_input, align 8
  %fp12add.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12add.out.declare_output, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %m6 = call i128 @fn_intrinsic_utils_init()
  %j7 = call i128 @fn_intrinsic_utils_init()
  %adders = alloca [256 x [256 x %struct_template_circuit_fpadd*]]*, align 8
  %adders8 = alloca [256 x [256 x %struct_template_circuit_fpadd*]], align 8
  store [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch99, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add101, %loop.latch99 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch93, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add95, %loop.latch93 ]
  %call = call %struct_template_circuit_fpadd* @fn_template_build_fpadd(i128 %fp12add.n.read_arg_inner, i128 %fp12add.k.read_arg_inner, [256 x i128]* %fp12add.p.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_fpadd*]]*, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  %adders15 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_fpadd* %call, %struct_template_circuit_fpadd** %adders15, align 8
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch, %loop.body11
  %m.0 = phi i128 [ 0, %loop.body11 ], [ %add, %loop.latch ]
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12add.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  %a20 = load i128, i128* %array_getter, align 4
  %adders21 = load [256 x [256 x %struct_template_circuit_fpadd*]]*, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders21, i128 0, i128 %i.0, i128 %j.0
  %adders25 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter24, align 8
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders25, i32 0, i32 3
  %fpadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter, i128 0, i128 %m.0
  %adders29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %adders29, i128 %a20, i1* @constraint.438)
  %ptr_getter30 = load [256 x [256 x %struct_template_circuit_fpadd*]]*, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %ptr_getter30, i128 0, i128 %i.0, i128 %j.0
  %adders34 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter33, align 8
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders34, i32 0, i32 3
  %fpadd.a.read_input_outter36 = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %adders38 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter36, i128 0, i128 %m.0
  store i128 %a20, i128* %adders38, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12add.b.declare_input, align 8
  %array_getter42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  %b43 = load i128, i128* %array_getter42, align 4
  %adders44 = load [256 x [256 x %struct_template_circuit_fpadd*]]*, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  %array_getter47 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders44, i128 0, i128 %i.0, i128 %j.0
  %adders48 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders48, i32 0, i32 4
  %fpadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter, i128 0, i128 %m.0
  %adders52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_utils_constraint(i128 %adders52, i128 %b43, i1* @constraint.439)
  %ptr_getter53 = load [256 x [256 x %struct_template_circuit_fpadd*]]*, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %ptr_getter53, i128 0, i128 %i.0, i128 %j.0
  %adders57 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders57, i32 0, i32 4
  %fpadd.b.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %adders61 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter59, i128 0, i128 %m.0
  store i128 %b43, i128* %adders61, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body16
  %add = add i128 %m.0, 1
  %slt = icmp slt i128 %add, %fp12add.k.read_arg_inner
  br i1 %slt, label %loop.body16, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body65

loop.body65:                                      ; preds = %loop.latch86, %loop.exit
  %m.1 = phi i128 [ 0, %loop.exit ], [ %add88, %loop.latch86 ]
  %adders66 = load [256 x [256 x %struct_template_circuit_fpadd*]]*, [256 x [256 x %struct_template_circuit_fpadd*]]** %adders, align 8
  %array_getter69 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders66, i128 0, i128 %i.0, i128 %j.0
  %adders70 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter69, align 8
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders70, i32 0, i32 5
  %fpadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter71, align 8
  %array_getter73 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.out.read_output_outter, i128 0, i128 %m.1
  %adders74 = load i128, i128* %array_getter73, align 4
  %out75 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12add.out.declare_output, align 8
  %array_getter79 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out75, i128 0, i128 %i.0, i128 %j.0, i128 %m.1
  %out80 = load i128, i128* %array_getter79, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out80, i128 %adders74, i1* @constraint.440)
  %ptr_getter81 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12add.out.declare_output, align 8
  %out85 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter81, i128 0, i128 %i.0, i128 %j.0, i128 %m.1
  store i128 %adders74, i128* %out85, align 4
  br label %loop.latch86

loop.latch86:                                     ; preds = %loop.body65
  %add88 = add i128 %m.1, 1
  %slt91 = icmp slt i128 %add88, %fp12add.k.read_arg_inner
  br i1 %slt91, label %loop.body65, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch86
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.exit92
  %add95 = add i128 %j.0, 1
  %slt97 = icmp slt i128 %add95, 2
  br i1 %slt97, label %loop.body11, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch93
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.exit98
  %add101 = add i128 %i.0, 1
  %slt103 = icmp slt i128 %add101, 6
  br i1 %slt103, label %loop.body, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch99
  br label %arraydim

arraydim:                                         ; preds = %loop.exit104
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12add.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %fp12add.k.read_arg_inner)
  %ptr_cast105 = bitcast [256 x [256 x [256 x i128]]]** %fp12add.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast105, i128 6, i128 2, i128 %fp12add.k.read_arg_inner)
  %ptr_cast106 = bitcast [256 x [256 x %struct_template_circuit_fpadd*]]** %adders to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast106, i128 6, i128 2)
  %ptr_cast107 = bitcast [256 x [256 x [256 x i128]]]** %fp12add.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast107, i128 6, i128 2, i128 %fp12add.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out108 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12add.out.declare_output, align 8
  %fp12add.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out108, [256 x [256 x [256 x i128]]]** %fp12add.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12add* @fn_template_build_fp12add(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12add = alloca %struct_template_circuit_fp12add, align 8
  %fp12add.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %struct_template_circuit_fp12add, i32 0, i32 0
  store i128 %0, i128* %fp12add.n.write_arg_inner, align 4
  %fp12add.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %struct_template_circuit_fp12add, i32 0, i32 1
  store i128 %1, i128* %fp12add.k.write_arg_inner, align 4
  %fp12add.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %struct_template_circuit_fp12add, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12add.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12add* %struct_template_circuit_fp12add
}

define void @fn_template_init_pointontangent(%struct_template_circuit_pointontangent* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 0
  %pointontangent.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 1
  %pointontangent.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 2
  %pointontangent.a.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 3
  %pointontangent.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 4
  %pointontangent.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %pointontangent.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %LOGK5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %LOGK37 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %pointontangent.k.read_arg_inner)
  %mul = mul i128 3, %pointontangent.k.read_arg_inner
  %mul11 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub = sub i128 %mul11, 1
  %mul12 = mul i128 %mul, %sub
  %add = add i128 %mul12, 1
  %call13 = call i128 @log_ceil(i128 %add)
  %mul14 = mul i128 4, %pointontangent.n.read_arg_inner
  %add16 = add i128 %mul14, %call13
  %slt = icmp slt i128 %add16, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul20 = mul i128 2, %pointontangent.n.read_arg_inner
  %add22 = add i128 %mul20, %call
  %call23 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %add22)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add50, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0, i128 0, i128 %i.0
  %in25 = load i128, i128* %array_getter, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call23, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %x_sq30 = load i128, i128* %array_getter29, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq30, i128 %in25, i1* @constraint.441)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call23, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %x_sq34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter32, i128 0, i128 %i.0
  store i128 %in25, i128* %x_sq34, align 4
  %in35 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in35, i128 0, i128 0, i128 0, i128 %i.0
  %in38 = load i128, i128* %array_getter37, align 4
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call23, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %x_sq43 = load i128, i128* %array_getter42, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq43, i128 %in38, i1* @constraint.442)
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call23, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter46 = load [256 x i128]*, [256 x i128]** %struct_getter45, align 8
  %x_sq48 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter46, i128 0, i128 %i.0
  store i128 %in38, i128* %x_sq48, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add50 = add i128 %i.0, 1
  %slt53 = icmp slt i128 %add50, %pointontangent.k.read_arg_inner
  br i1 %slt53, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul56 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub57 = sub i128 %mul56, 1
  %mul60 = mul i128 3, %pointontangent.n.read_arg_inner
  %mul62 = mul i128 2, %call
  %add63 = add i128 %mul60, %mul62
  %add64 = add i128 %add63, 3
  %call65 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %pointontangent.n.read_arg_inner, i128 %sub57, i128 %pointontangent.k.read_arg_inner, i128 %add64)
  br label %loop.body66

loop.body66:                                      ; preds = %loop.latch103, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add105, %loop.latch103 ]
  %eq = icmp eq i128 %i.1, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body66
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call23, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %x_sq72 = load i128, i128* %array_getter71, align 4
  %mul73 = mul i128 3, %x_sq72
  %add74 = add i128 %mul73, %pointontangent.a.read_arg_inner
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter76, align 8
  %array_getter78 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.1
  %right79 = load i128, i128* %array_getter78, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right79, i128 %add74, i1* @constraint.443)
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter82 = load [256 x i128]*, [256 x i128]** %struct_getter81, align 8
  %right84 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter82, i128 0, i128 %i.1
  store i128 %add74, i128* %right84, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body66
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call23, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter87 = load [256 x i128]*, [256 x i128]** %struct_getter86, align 8
  %array_getter89 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter87, i128 0, i128 %i.1
  %x_sq90 = load i128, i128* %array_getter89, align 4
  %mul91 = mul i128 3, %x_sq90
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter94 = load [256 x i128]*, [256 x i128]** %struct_getter93, align 8
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter94, i128 0, i128 %i.1
  %right97 = load i128, i128* %array_getter96, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right97, i128 %mul91, i1* @constraint.444)
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter100 = load [256 x i128]*, [256 x i128]** %struct_getter99, align 8
  %right102 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter100, i128 0, i128 %i.1
  store i128 %mul91, i128* %right102, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch103

loop.latch103:                                    ; preds = %if.exit
  %add105 = add i128 %i.1, 1
  %mul108 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub109 = sub i128 %mul108, 1
  %slt110 = icmp slt i128 %add105, %sub109
  br i1 %slt110, label %loop.body66, label %loop.exit111

loop.exit111:                                     ; preds = %loop.latch103
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch132, %loop.exit111
  %i.2 = phi i128 [ 0, %loop.exit111 ], [ %add134, %loop.latch132 ]
  %in113 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter115 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in113, i128 0, i128 0, i128 0, i128 %i.2
  %in116 = load i128, i128* %array_getter115, align 4
  %in117 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter119 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in117, i128 0, i128 1, i128 0, i128 %i.2
  %in120 = load i128, i128* %array_getter119, align 4
  %sub121 = sub i128 %in116, %in120
  %struct_getter123 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter123, align 8
  %array_getter125 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.2
  %right126 = load i128, i128* %array_getter125, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right126, i128 %sub121, i1* @constraint.445)
  %struct_getter128 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter129 = load [256 x i128]*, [256 x i128]** %struct_getter128, align 8
  %right131 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter129, i128 0, i128 %i.2
  store i128 %sub121, i128* %right131, align 4
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.body112
  %add134 = add i128 %i.2, 1
  %slt137 = icmp slt i128 %add134, %pointontangent.k.read_arg_inner
  br i1 %slt137, label %loop.body112, label %loop.exit138

loop.exit138:                                     ; preds = %loop.latch132
  %mul142 = mul i128 2, %pointontangent.n.read_arg_inner
  %add143 = add i128 %mul142, 2
  %add145 = add i128 %add143, %call
  %call146 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %add145)
  br label %loop.body147

loop.body147:                                     ; preds = %loop.latch184, %loop.exit138
  %i.3 = phi i128 [ 0, %loop.exit138 ], [ %add186, %loop.latch184 ]
  %in148 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter150 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in148, i128 0, i128 0, i128 1, i128 %i.3
  %in151 = load i128, i128* %array_getter150, align 4
  %mul152 = mul i128 2, %in151
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call146, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %array_getter157 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter155, i128 0, i128 %i.3
  %left158 = load i128, i128* %array_getter157, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left158, i128 %mul152, i1* @constraint.446)
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call146, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter161 = load [256 x i128]*, [256 x i128]** %struct_getter160, align 8
  %left163 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter161, i128 0, i128 %i.3
  store i128 %mul152, i128* %left163, align 4
  %in164 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter166 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in164, i128 0, i128 0, i128 1, i128 %i.3
  %in167 = load i128, i128* %array_getter166, align 4
  %in168 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input, align 8
  %array_getter170 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in168, i128 0, i128 1, i128 1, i128 %i.3
  %in171 = load i128, i128* %array_getter170, align 4
  %add172 = add i128 %in167, %in171
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call146, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter175 = load [256 x i128]*, [256 x i128]** %struct_getter174, align 8
  %array_getter177 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter175, i128 0, i128 %i.3
  %left178 = load i128, i128* %array_getter177, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left178, i128 %add172, i1* @constraint.447)
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call146, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter181 = load [256 x i128]*, [256 x i128]** %struct_getter180, align 8
  %left183 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter181, i128 0, i128 %i.3
  store i128 %add172, i128* %left183, align 4
  br label %loop.latch184

loop.latch184:                                    ; preds = %loop.body147
  %add186 = add i128 %i.3, 1
  %slt189 = icmp slt i128 %add186, %pointontangent.k.read_arg_inner
  br i1 %slt189, label %loop.body147, label %loop.exit190

loop.exit190:                                     ; preds = %loop.latch184
  %mul194 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub195 = sub i128 %mul194, 2
  %mul197 = mul i128 4, %pointontangent.n.read_arg_inner
  %add199 = add i128 %mul197, %call13
  %call200 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %sub195, [256 x i128]* %pointontangent.p.read_arg_inner, i128 %add199)
  br label %loop.body201

loop.body201:                                     ; preds = %loop.latch249, %loop.exit190
  %i.4 = phi i128 [ 0, %loop.exit190 ], [ %add251, %loop.latch249 ]
  %mul206 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub207 = sub i128 %mul206, 1
  %slt208 = icmp slt i128 %i.4, %sub207
  br i1 %slt208, label %if.true202, label %if.false203

if.true202:                                       ; preds = %loop.body201
  %struct_getter210 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter210, align 8
  %array_getter212 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.4
  %right213 = load i128, i128* %array_getter212, align 4
  %struct_getter215 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call146, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter216 = load [256 x i128]*, [256 x i128]** %struct_getter215, align 8
  %array_getter218 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter216, i128 0, i128 %i.4
  %left219 = load i128, i128* %array_getter218, align 4
  %sub220 = sub i128 %right213, %left219
  %struct_getter222 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call200, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter222, align 8
  %array_getter224 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.4
  %diff_red225 = load i128, i128* %array_getter224, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red225, i128 %sub220, i1* @constraint.448)
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call200, i32 0, i32 5
  %primereduce.in.read_input_outter228 = load [256 x i128]*, [256 x i128]** %struct_getter227, align 8
  %diff_red230 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter228, i128 0, i128 %i.4
  store i128 %sub220, i128* %diff_red230, align 4
  br label %if.exit248

if.false203:                                      ; preds = %loop.body201
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call65, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter233 = load [256 x i128]*, [256 x i128]** %struct_getter232, align 8
  %array_getter235 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter233, i128 0, i128 %i.4
  %right236 = load i128, i128* %array_getter235, align 4
  %struct_getter238 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call200, i32 0, i32 5
  %primereduce.in.read_input_outter239 = load [256 x i128]*, [256 x i128]** %struct_getter238, align 8
  %array_getter241 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter239, i128 0, i128 %i.4
  %diff_red242 = load i128, i128* %array_getter241, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red242, i128 %right236, i1* @constraint.449)
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call200, i32 0, i32 5
  %primereduce.in.read_input_outter245 = load [256 x i128]*, [256 x i128]** %struct_getter244, align 8
  %diff_red247 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter245, i128 0, i128 %i.4
  store i128 %right236, i128* %diff_red247, align 4
  br label %if.exit248

if.exit248:                                       ; preds = %if.false203, %if.true202
  br label %loop.latch249

loop.latch249:                                    ; preds = %if.exit248
  %add251 = add i128 %i.4, 1
  %mul254 = mul i128 3, %pointontangent.k.read_arg_inner
  %sub255 = sub i128 %mul254, 2
  %slt256 = icmp slt i128 %add251, %sub255
  br i1 %slt256, label %loop.body201, label %loop.exit257

loop.exit257:                                     ; preds = %loop.latch249
  %mul261 = mul i128 4, %pointontangent.n.read_arg_inner
  %add263 = add i128 %mul261, %call13
  %call265 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %add263, [256 x i128]* %pointontangent.p.read_arg_inner)
  br label %loop.body266

loop.body266:                                     ; preds = %loop.latch282, %loop.exit257
  %i.5 = phi i128 [ 0, %loop.exit257 ], [ %add284, %loop.latch282 ]
  %struct_getter268 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call200, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter268, align 8
  %array_getter270 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.5
  %diff_red271 = load i128, i128* %array_getter270, align 4
  %struct_getter273 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call265, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter273, align 8
  %array_getter275 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.5
  %constraint276 = load i128, i128* %array_getter275, align 4
  call void @fn_intrinsic_utils_constraint(i128 %constraint276, i128 %diff_red271, i1* @constraint.450)
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call265, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter279 = load [256 x i128]*, [256 x i128]** %struct_getter278, align 8
  %constraint281 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter279, i128 0, i128 %i.5
  store i128 %diff_red271, i128* %constraint281, align 4
  br label %loop.latch282

loop.latch282:                                    ; preds = %loop.body266
  %add284 = add i128 %i.5, 1
  %slt287 = icmp slt i128 %add284, %pointontangent.k.read_arg_inner
  br i1 %slt287, label %loop.body266, label %loop.exit288

loop.exit288:                                     ; preds = %loop.latch282
  br label %arraydim

arraydim:                                         ; preds = %loop.exit288
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %pointontangent.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 2, i128 %pointontangent.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_pointontangent* @fn_template_build_pointontangent(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_pointontangent = alloca %struct_template_circuit_pointontangent, align 8
  %pointontangent.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 0
  store i128 %0, i128* %pointontangent.n.write_arg_inner, align 4
  %pointontangent.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 1
  store i128 %1, i128* %pointontangent.k.write_arg_inner, align 4
  %pointontangent.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 2
  store i128 %2, i128* %pointontangent.a.write_arg_inner, align 4
  %pointontangent.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %pointontangent.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent
}

define void @fn_template_init_fpmultiply(%struct_template_circuit_fpmultiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 0
  %fpmultiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 1
  %fpmultiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 2
  %fpmultiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 3
  %fpmultiply.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %fpmultiply.a.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpmultiply.a.read_input_inner, [256 x i128]** %fpmultiply.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 4
  %fpmultiply.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %fpmultiply.b.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %fpmultiply.b.read_input_inner, [256 x i128]** %fpmultiply.b.declare_input, align 8
  %fpmultiply.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %fpmultiply.out.declare_output, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %LOGK6 = call i128 @fn_intrinsic_utils_init()
  %sle = icmp sle i128 %fpmultiply.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %call = call i128 @log_ceil(i128 %fpmultiply.k.read_arg_inner)
  %mul = mul i128 2, %fpmultiply.n.read_arg_inner
  %add = add i128 %mul, %call
  %call14 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %fpmultiply.n.read_arg_inner, i128 %fpmultiply.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add40, %loop.latch ]
  %a = load [256 x i128]*, [256 x i128]** %fpmultiply.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %a, i128 0, i128 %i.0
  %a16 = load i128, i128* %array_getter, align 4
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call14, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %nocarry21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry21, i128 %a16, i1* @constraint.451)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call14, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter23 = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %nocarry25 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter23, i128 0, i128 %i.0
  store i128 %a16, i128* %nocarry25, align 4
  %b = load [256 x i128]*, [256 x i128]** %fpmultiply.b.declare_input, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %b, i128 0, i128 %i.0
  %b28 = load i128, i128* %array_getter27, align 4
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call14, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %nocarry33 = load i128, i128* %array_getter32, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry33, i128 %b28, i1* @constraint.452)
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call14, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter36 = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %nocarry38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter36, i128 0, i128 %i.0
  store i128 %b28, i128* %nocarry38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add40 = add i128 %i.0, 1
  %slt = icmp slt i128 %add40, %fpmultiply.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %fpmultiply.k.read_arg_inner, 1
  %mul47 = mul i128 3, %fpmultiply.n.read_arg_inner
  %mul49 = mul i128 2, %call
  %add50 = add i128 %mul47, %mul49
  %call51 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %fpmultiply.n.read_arg_inner, i128 %fpmultiply.k.read_arg_inner, i128 %sub, [256 x i128]* %fpmultiply.p.read_arg_inner, i128 %add50)
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch68, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add70, %loop.latch68 ]
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call14, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %nocarry57 = load i128, i128* %array_getter56, align 4
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call51, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter59, align 8
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.1
  %red62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_utils_constraint(i128 %red62, i128 %nocarry57, i1* @constraint.453)
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call51, i32 0, i32 5
  %primereduce.in.read_input_outter65 = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %red67 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter65, i128 0, i128 %i.1
  store i128 %nocarry57, i128* %red67, align 4
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.body52
  %add70 = add i128 %i.1, 1
  %mul73 = mul i128 2, %fpmultiply.k.read_arg_inner
  %sub74 = sub i128 %mul73, 1
  %slt75 = icmp slt i128 %add70, %sub74
  br i1 %slt75, label %loop.body52, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch68
  %mul80 = mul i128 3, %fpmultiply.n.read_arg_inner
  %mul82 = mul i128 2, %call
  %add83 = add i128 %mul80, %mul82
  %call85 = call %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %fpmultiply.n.read_arg_inner, i128 %fpmultiply.k.read_arg_inner, i128 %add83, [256 x i128]* %fpmultiply.p.read_arg_inner)
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch102, %loop.exit76
  %i.2 = phi i128 [ 0, %loop.exit76 ], [ %add104, %loop.latch102 ]
  %struct_getter88 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call51, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter88, align 8
  %array_getter90 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.2
  %red91 = load i128, i128* %array_getter90, align 4
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %call85, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter93, align 8
  %array_getter95 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter, i128 0, i128 %i.2
  %big_mod96 = load i128, i128* %array_getter95, align 4
  call void @fn_intrinsic_utils_constraint(i128 %big_mod96, i128 %red91, i1* @constraint.454)
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %call85, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter99 = load [256 x i128]*, [256 x i128]** %struct_getter98, align 8
  %big_mod101 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter99, i128 0, i128 %i.2
  store i128 %red91, i128* %big_mod101, align 4
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.body86
  %add104 = add i128 %i.2, 1
  %slt107 = icmp slt i128 %add104, %fpmultiply.k.read_arg_inner
  br i1 %slt107, label %loop.body86, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch102
  br label %loop.body109

loop.body109:                                     ; preds = %loop.latch122, %loop.exit108
  %i.3 = phi i128 [ 0, %loop.exit108 ], [ %add124, %loop.latch122 ]
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %call85, i32 0, i32 6
  %signedfpcarrymodp.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter111, align 8
  %array_getter113 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.out.read_output_outter, i128 0, i128 %i.3
  %big_mod114 = load i128, i128* %array_getter113, align 4
  %out115 = load [256 x i128]*, [256 x i128]** %fpmultiply.out.declare_output, align 8
  %array_getter117 = getelementptr inbounds [256 x i128], [256 x i128]* %out115, i128 0, i128 %i.3
  %out118 = load i128, i128* %array_getter117, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out118, i128 %big_mod114, i1* @constraint.455)
  %ptr_getter119 = load [256 x i128]*, [256 x i128]** %fpmultiply.out.declare_output, align 8
  %out121 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter119, i128 0, i128 %i.3
  store i128 %big_mod114, i128* %out121, align 4
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.body109
  %add124 = add i128 %i.3, 1
  %slt127 = icmp slt i128 %add124, %fpmultiply.k.read_arg_inner
  br i1 %slt127, label %loop.body109, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch122
  br label %arraydim

arraydim:                                         ; preds = %loop.exit128
  %ptr_cast = bitcast [256 x i128]** %fpmultiply.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %fpmultiply.k.read_arg_inner)
  %ptr_cast129 = bitcast [256 x i128]** %fpmultiply.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast129, i128 %fpmultiply.k.read_arg_inner)
  %ptr_cast130 = bitcast [256 x i128]** %fpmultiply.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast130, i128 %fpmultiply.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out131 = load [256 x i128]*, [256 x i128]** %fpmultiply.out.declare_output, align 8
  %fpmultiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 5
  store [256 x i128]* %out131, [256 x i128]** %fpmultiply.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpmultiply* @fn_template_build_fpmultiply(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpmultiply = alloca %struct_template_circuit_fpmultiply, align 8
  %fpmultiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply, i32 0, i32 0
  store i128 %0, i128* %fpmultiply.n.write_arg_inner, align 4
  %fpmultiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply, i32 0, i32 1
  store i128 %1, i128* %fpmultiply.k.write_arg_inner, align 4
  %fpmultiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpmultiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply
}

define void @fn_template_init_ellipticcurvefunction(%struct_template_circuit_ellipticcurvefunction* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 0
  %ellipticcurvefunction.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 1
  %ellipticcurvefunction.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 2
  %ellipticcurvefunction.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 3
  %ellipticcurvefunction.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 4
  %ellipticcurvefunction.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 5
  %ellipticcurvefunction.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %ellipticcurvefunction.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %LOGK6 = call i128 @fn_intrinsic_utils_init()
  %LOGK37 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %i9 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvefunction.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvefunction.out.declare_output, align 8
  %cu_red = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %cu_red10 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %cu_red10, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %call = call i128 @log_ceil(i128 %ellipticcurvefunction.k.read_arg_inner)
  %mul = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul15 = mul i128 4, %ellipticcurvefunction.k.read_arg_inner
  %mul17 = mul i128 %mul15, %ellipticcurvefunction.k.read_arg_inner
  %mul18 = mul i128 %sub, %mul17
  %add = add i128 %mul18, 1
  %call19 = call i128 @log_ceil(i128 %add)
  %mul20 = mul i128 4, %ellipticcurvefunction.n.read_arg_inner
  %add22 = add i128 %mul20, %call19
  %slt = icmp slt i128 %add22, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul27 = mul i128 2, %ellipticcurvefunction.n.read_arg_inner
  %add28 = add i128 %mul27, 1
  %add30 = add i128 %add28, %call
  %call31 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %add30)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch69, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add71, %loop.latch69 ]
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add65, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %i.0, i128 %j.0
  %in35 = load i128, i128* %array_getter, align 4
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call31, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter37, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq41, i128 %in35, i1* @constraint.456)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call31, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter43 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter42, align 8
  %x_sq46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter43, i128 0, i128 %i.0, i128 %j.0
  store i128 %in35, i128* %x_sq46, align 4
  %in47 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in47, i128 0, i128 %i.0, i128 %j.0
  %in51 = load i128, i128* %array_getter50, align 4
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call31, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter53, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq57 = load i128, i128* %array_getter56, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq57, i128 %in51, i1* @constraint.457)
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call31, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter60 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter59, align 8
  %x_sq63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter60, i128 0, i128 %i.0, i128 %j.0
  store i128 %in51, i128* %x_sq63, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body32
  %add65 = add i128 %j.0, 1
  %slt68 = icmp slt i128 %add65, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt68, label %loop.body32, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.exit
  %add71 = add i128 %i.0, 1
  %slt73 = icmp slt i128 %add71, 2
  br i1 %slt73, label %loop.body, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch69
  %mul77 = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub78 = sub i128 %mul77, 1
  %mul81 = mul i128 3, %ellipticcurvefunction.n.read_arg_inner
  %mul83 = mul i128 2, %call
  %add84 = add i128 %mul81, %mul83
  %add85 = add i128 %add84, 2
  %call86 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %sub78, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %add85)
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch143, %loop.exit74
  %i.1 = phi i128 [ 0, %loop.exit74 ], [ %add145, %loop.latch143 ]
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch108, %loop.body87
  %j.1 = phi i128 [ 0, %loop.body87 ], [ %add110, %loop.latch108 ]
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call31, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter90, align 8
  %array_getter93 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1
  %x_sq94 = load i128, i128* %array_getter93, align 4
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter97 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter96, align 8
  %array_getter100 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter97, i128 0, i128 %i.1, i128 %j.1
  %x_cu101 = load i128, i128* %array_getter100, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu101, i128 %x_sq94, i1* @constraint.458)
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter104 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter103, align 8
  %x_cu107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter104, i128 0, i128 %i.1, i128 %j.1
  store i128 %x_sq94, i128* %x_cu107, align 4
  br label %loop.latch108

loop.latch108:                                    ; preds = %loop.body88
  %add110 = add i128 %j.1, 1
  %mul113 = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub114 = sub i128 %mul113, 1
  %slt115 = icmp slt i128 %add110, %sub114
  br i1 %slt115, label %loop.body88, label %loop.exit116

loop.exit116:                                     ; preds = %loop.latch108
  br label %loop.body117

loop.body117:                                     ; preds = %loop.latch136, %loop.exit116
  %j.2 = phi i128 [ 0, %loop.exit116 ], [ %add138, %loop.latch136 ]
  %in118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in118, i128 0, i128 %i.1, i128 %j.2
  %in122 = load i128, i128* %array_getter121, align 4
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter125 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter124, align 8
  %array_getter128 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter125, i128 0, i128 %i.1, i128 %j.2
  %x_cu129 = load i128, i128* %array_getter128, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu129, i128 %in122, i1* @constraint.459)
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter132 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter131, align 8
  %x_cu135 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter132, i128 0, i128 %i.1, i128 %j.2
  store i128 %in122, i128* %x_cu135, align 4
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.body117
  %add138 = add i128 %j.2, 1
  %slt141 = icmp slt i128 %add138, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt141, label %loop.body117, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %i.1, 1
  %slt147 = icmp slt i128 %add145, 2
  br i1 %slt147, label %loop.body87, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch391, %loop.exit148
  %j.3 = phi i128 [ 0, %loop.exit148 ], [ %add393, %loop.latch391 ]
  %mul153 = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub154 = sub i128 %mul153, 2
  %mul156 = mul i128 4, %ellipticcurvefunction.n.read_arg_inner
  %mul158 = mul i128 3, %call
  %add159 = add i128 %mul156, %mul158
  %add160 = add i128 %add159, 4
  %call161 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %sub154, [256 x i128]* %ellipticcurvefunction.p.read_arg_inner, i128 %add160)
  %ptr_getter162 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %cu_red164 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter162, i128 0, i128 %j.3
  store %struct_template_circuit_primereduce* %call161, %struct_template_circuit_primereduce** %cu_red164, align 8
  br label %loop.body165

loop.body165:                                     ; preds = %loop.latch382, %loop.body149
  %i.2 = phi i128 [ 0, %loop.body149 ], [ %add384, %loop.latch382 ]
  %eq = icmp eq i128 %i.2, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body165
  %eq170 = icmp eq i128 %j.3, 0
  br i1 %eq170, label %if.true167, label %if.false168

if.false:                                         ; preds = %loop.body165
  %slt266 = icmp slt i128 %i.2, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt266, label %if.true262, label %if.false263

if.true167:                                       ; preds = %if.true
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter173 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter172, align 8
  %array_getter176 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter173, i128 0, i128 %j.3, i128 %i.2
  %x_cu177 = load i128, i128* %array_getter176, align 4
  %array_getter178 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a179 = load i128, i128* %array_getter178, align 4
  %in180 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in180, i128 0, i128 0, i128 %i.2
  %in183 = load i128, i128* %array_getter182, align 4
  %mul184 = mul i128 %a179, %in183
  %add185 = add i128 %x_cu177, %mul184
  %array_getter187 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a188 = load i128, i128* %array_getter187, align 4
  %in189 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in189, i128 0, i128 1, i128 %i.2
  %in192 = load i128, i128* %array_getter191, align 4
  %mul193 = mul i128 %a188, %in192
  %sub194 = sub i128 %add185, %mul193
  %array_getter196 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.b.read_arg_inner, i128 0, i128 %j.3
  %b197 = load i128, i128* %array_getter196, align 4
  %add198 = add i128 %sub194, %b197
  %cu_red199 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter201 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red199, i128 0, i128 %j.3
  %cu_red202 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter201, align 8
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red202, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter203, align 8
  %array_getter205 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %cu_red206 = load i128, i128* %array_getter205, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red206, i128 %add198, i1* @constraint.460)
  %ptr_getter207 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter209 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter207, i128 0, i128 %j.3
  %cu_red210 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter209, align 8
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red210, i32 0, i32 5
  %primereduce.in.read_input_outter212 = load [256 x i128]*, [256 x i128]** %struct_getter211, align 8
  %cu_red214 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter212, i128 0, i128 %i.2
  store i128 %add198, i128* %cu_red214, align 4
  br label %if.exit

if.false168:                                      ; preds = %if.true
  %struct_getter216 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter217 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter216, align 8
  %array_getter220 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter217, i128 0, i128 %j.3, i128 %i.2
  %x_cu221 = load i128, i128* %array_getter220, align 4
  %array_getter223 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a224 = load i128, i128* %array_getter223, align 4
  %in225 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter227 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in225, i128 0, i128 1, i128 %i.2
  %in228 = load i128, i128* %array_getter227, align 4
  %mul229 = mul i128 %a224, %in228
  %add230 = add i128 %x_cu221, %mul229
  %array_getter232 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a233 = load i128, i128* %array_getter232, align 4
  %in234 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter236 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in234, i128 0, i128 0, i128 %i.2
  %in237 = load i128, i128* %array_getter236, align 4
  %mul238 = mul i128 %a233, %in237
  %add239 = add i128 %add230, %mul238
  %array_getter242 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.b.read_arg_inner, i128 0, i128 %j.3
  %b243 = load i128, i128* %array_getter242, align 4
  %add244 = add i128 %add239, %b243
  %cu_red245 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter247 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red245, i128 0, i128 %j.3
  %cu_red248 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter247, align 8
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red248, i32 0, i32 5
  %primereduce.in.read_input_outter250 = load [256 x i128]*, [256 x i128]** %struct_getter249, align 8
  %array_getter252 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter250, i128 0, i128 %i.2
  %cu_red253 = load i128, i128* %array_getter252, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red253, i128 %add244, i1* @constraint.461)
  %ptr_getter254 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter256 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter254, i128 0, i128 %j.3
  %cu_red257 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter256, align 8
  %struct_getter258 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red257, i32 0, i32 5
  %primereduce.in.read_input_outter259 = load [256 x i128]*, [256 x i128]** %struct_getter258, align 8
  %cu_red261 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter259, i128 0, i128 %i.2
  store i128 %add244, i128* %cu_red261, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false168, %if.true167
  br label %if.exit381

if.true262:                                       ; preds = %if.false
  %eq270 = icmp eq i128 %j.3, 0
  br i1 %eq270, label %if.true267, label %if.false268

if.false263:                                      ; preds = %if.false
  %struct_getter357 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter358 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter357, align 8
  %array_getter361 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter358, i128 0, i128 %j.3, i128 %i.2
  %x_cu362 = load i128, i128* %array_getter361, align 4
  %cu_red363 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter365 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red363, i128 0, i128 %j.3
  %cu_red366 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter365, align 8
  %struct_getter367 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red366, i32 0, i32 5
  %primereduce.in.read_input_outter368 = load [256 x i128]*, [256 x i128]** %struct_getter367, align 8
  %array_getter370 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter368, i128 0, i128 %i.2
  %cu_red371 = load i128, i128* %array_getter370, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red371, i128 %x_cu362, i1* @constraint.464)
  %ptr_getter372 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter374 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter372, i128 0, i128 %j.3
  %cu_red375 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter374, align 8
  %struct_getter376 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red375, i32 0, i32 5
  %primereduce.in.read_input_outter377 = load [256 x i128]*, [256 x i128]** %struct_getter376, align 8
  %cu_red379 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter377, i128 0, i128 %i.2
  store i128 %x_cu362, i128* %cu_red379, align 4
  br label %if.exit380

if.true267:                                       ; preds = %if.true262
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter273 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter272, align 8
  %array_getter276 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter273, i128 0, i128 %j.3, i128 %i.2
  %x_cu277 = load i128, i128* %array_getter276, align 4
  %array_getter279 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a280 = load i128, i128* %array_getter279, align 4
  %in281 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter283 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in281, i128 0, i128 0, i128 %i.2
  %in284 = load i128, i128* %array_getter283, align 4
  %mul285 = mul i128 %a280, %in284
  %add286 = add i128 %x_cu277, %mul285
  %array_getter288 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a289 = load i128, i128* %array_getter288, align 4
  %in290 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter292 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in290, i128 0, i128 1, i128 %i.2
  %in293 = load i128, i128* %array_getter292, align 4
  %mul294 = mul i128 %a289, %in293
  %sub295 = sub i128 %add286, %mul294
  %cu_red296 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter298 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red296, i128 0, i128 %j.3
  %cu_red299 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter298, align 8
  %struct_getter300 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red299, i32 0, i32 5
  %primereduce.in.read_input_outter301 = load [256 x i128]*, [256 x i128]** %struct_getter300, align 8
  %array_getter303 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter301, i128 0, i128 %i.2
  %cu_red304 = load i128, i128* %array_getter303, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red304, i128 %sub295, i1* @constraint.462)
  %ptr_getter305 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter307 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter305, i128 0, i128 %j.3
  %cu_red308 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter307, align 8
  %struct_getter309 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red308, i32 0, i32 5
  %primereduce.in.read_input_outter310 = load [256 x i128]*, [256 x i128]** %struct_getter309, align 8
  %cu_red312 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter310, i128 0, i128 %i.2
  store i128 %sub295, i128* %cu_red312, align 4
  br label %if.exit355

if.false268:                                      ; preds = %if.true262
  %struct_getter314 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call86, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter315 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter314, align 8
  %array_getter318 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter315, i128 0, i128 %j.3, i128 %i.2
  %x_cu319 = load i128, i128* %array_getter318, align 4
  %array_getter321 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a322 = load i128, i128* %array_getter321, align 4
  %in323 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter325 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in323, i128 0, i128 1, i128 %i.2
  %in326 = load i128, i128* %array_getter325, align 4
  %mul327 = mul i128 %a322, %in326
  %add328 = add i128 %x_cu319, %mul327
  %array_getter330 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a331 = load i128, i128* %array_getter330, align 4
  %in332 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input, align 8
  %array_getter334 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in332, i128 0, i128 0, i128 %i.2
  %in335 = load i128, i128* %array_getter334, align 4
  %mul336 = mul i128 %a331, %in335
  %add337 = add i128 %add328, %mul336
  %cu_red338 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter340 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red338, i128 0, i128 %j.3
  %cu_red341 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter340, align 8
  %struct_getter342 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red341, i32 0, i32 5
  %primereduce.in.read_input_outter343 = load [256 x i128]*, [256 x i128]** %struct_getter342, align 8
  %array_getter345 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter343, i128 0, i128 %i.2
  %cu_red346 = load i128, i128* %array_getter345, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red346, i128 %add337, i1* @constraint.463)
  %ptr_getter347 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter349 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter347, i128 0, i128 %j.3
  %cu_red350 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter349, align 8
  %struct_getter351 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red350, i32 0, i32 5
  %primereduce.in.read_input_outter352 = load [256 x i128]*, [256 x i128]** %struct_getter351, align 8
  %cu_red354 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter352, i128 0, i128 %i.2
  store i128 %add337, i128* %cu_red354, align 4
  br label %if.exit355

if.exit355:                                       ; preds = %if.false268, %if.true267
  br label %if.exit380

if.exit380:                                       ; preds = %if.exit355, %if.false263
  br label %if.exit381

if.exit381:                                       ; preds = %if.exit380, %if.exit
  br label %loop.latch382

loop.latch382:                                    ; preds = %if.exit381
  %add384 = add i128 %i.2, 1
  %mul387 = mul i128 3, %ellipticcurvefunction.k.read_arg_inner
  %sub388 = sub i128 %mul387, 2
  %slt389 = icmp slt i128 %add384, %sub388
  br i1 %slt389, label %loop.body165, label %loop.exit390

loop.exit390:                                     ; preds = %loop.latch382
  br label %loop.latch391

loop.latch391:                                    ; preds = %loop.exit390
  %add393 = add i128 %j.3, 1
  %slt395 = icmp slt i128 %add393, 2
  br i1 %slt395, label %loop.body149, label %loop.exit396

loop.exit396:                                     ; preds = %loop.latch391
  %mul400 = mul i128 4, %ellipticcurvefunction.n.read_arg_inner
  %add402 = add i128 %mul400, %call19
  %call404 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %add402, [256 x i128]* %ellipticcurvefunction.p.read_arg_inner)
  br label %loop.body405

loop.body405:                                     ; preds = %loop.latch434, %loop.exit396
  %j.4 = phi i128 [ 0, %loop.exit396 ], [ %add436, %loop.latch434 ]
  br label %loop.body406

loop.body406:                                     ; preds = %loop.latch427, %loop.body405
  %i.3 = phi i128 [ 0, %loop.body405 ], [ %add429, %loop.latch427 ]
  %cu_red407 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter409 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red407, i128 0, i128 %j.4
  %cu_red410 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter409, align 8
  %struct_getter411 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red410, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter411, align 8
  %array_getter413 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.3
  %cu_red414 = load i128, i128* %array_getter413, align 4
  %struct_getter416 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call404, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter416, align 8
  %array_getter419 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %j.4, i128 %i.3
  %carry420 = load i128, i128* %array_getter419, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry420, i128 %cu_red414, i1* @constraint.465)
  %struct_getter422 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call404, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter423 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter422, align 8
  %carry426 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter423, i128 0, i128 %j.4, i128 %i.3
  store i128 %cu_red414, i128* %carry426, align 4
  br label %loop.latch427

loop.latch427:                                    ; preds = %loop.body406
  %add429 = add i128 %i.3, 1
  %slt432 = icmp slt i128 %add429, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt432, label %loop.body406, label %loop.exit433

loop.exit433:                                     ; preds = %loop.latch427
  br label %loop.latch434

loop.latch434:                                    ; preds = %loop.exit433
  %add436 = add i128 %j.4, 1
  %slt438 = icmp slt i128 %add436, 2
  br i1 %slt438, label %loop.body405, label %loop.exit439

loop.exit439:                                     ; preds = %loop.latch434
  br label %loop.body440

loop.body440:                                     ; preds = %loop.latch464, %loop.exit439
  %j.5 = phi i128 [ 0, %loop.exit439 ], [ %add466, %loop.latch464 ]
  br label %loop.body441

loop.body441:                                     ; preds = %loop.latch457, %loop.body440
  %i.4 = phi i128 [ 0, %loop.body440 ], [ %add459, %loop.latch457 ]
  %struct_getter443 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call404, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter443, align 8
  %array_getter446 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %j.5, i128 %i.4
  %carry447 = load i128, i128* %array_getter446, align 4
  %out448 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.out.declare_output, align 8
  %array_getter451 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out448, i128 0, i128 %j.5, i128 %i.4
  %out452 = load i128, i128* %array_getter451, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out452, i128 %carry447, i1* @constraint.466)
  %ptr_getter453 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.out.declare_output, align 8
  %out456 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter453, i128 0, i128 %j.5, i128 %i.4
  store i128 %carry447, i128* %out456, align 4
  br label %loop.latch457

loop.latch457:                                    ; preds = %loop.body441
  %add459 = add i128 %i.4, 1
  %slt462 = icmp slt i128 %add459, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt462, label %loop.body441, label %loop.exit463

loop.exit463:                                     ; preds = %loop.latch457
  br label %loop.latch464

loop.latch464:                                    ; preds = %loop.exit463
  %add466 = add i128 %j.5, 1
  %slt468 = icmp slt i128 %add466, 2
  br i1 %slt468, label %loop.body440, label %loop.exit469

loop.exit469:                                     ; preds = %loop.latch464
  br label %arraydim

arraydim:                                         ; preds = %loop.exit469
  %ptr_cast = bitcast [256 x %struct_template_circuit_primereduce*]** %cu_red to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast470 = bitcast [256 x [256 x i128]]** %ellipticcurvefunction.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast470, i128 2, i128 %ellipticcurvefunction.k.read_arg_inner)
  %ptr_cast471 = bitcast [256 x [256 x i128]]** %ellipticcurvefunction.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast471, i128 2, i128 %ellipticcurvefunction.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out472 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvefunction.out.declare_output, align 8
  %ellipticcurvefunction.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out472, [256 x [256 x i128]]** %ellipticcurvefunction.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvefunction* @fn_template_build_ellipticcurvefunction(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvefunction = alloca %struct_template_circuit_ellipticcurvefunction, align 8
  %ellipticcurvefunction.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvefunction.n.write_arg_inner, align 4
  %ellipticcurvefunction.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvefunction.k.write_arg_inner, align 4
  %ellipticcurvefunction.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvefunction.a.write_arg_inner, align 8
  %ellipticcurvefunction.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %ellipticcurvefunction.b.write_arg_inner, align 8
  %ellipticcurvefunction.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvefunction.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction
}

define void @fn_template_init_linefunctionunequalfp2(%struct_template_circuit_linefunctionunequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %0, i32 0, i32 0
  %linefunctionunequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %0, i32 0, i32 1
  %linefunctionunequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %0, i32 0, i32 2
  %linefunctionunequalfp2.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %0, i32 0, i32 3
  %linefunctionunequalfp2.p.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter3, align 8
  %linefunctionunequalfp2.p.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %linefunctionunequalfp2.p.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequalfp2.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %0, i32 0, i32 4
  %linefunctionunequalfp2.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %linefunctionunequalfp2.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %linefunctionunequalfp2.q.read_input_inner, [256 x [256 x i128]]** %linefunctionunequalfp2.q.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %reduce = alloca [256 x [256 x %struct_template_circuit_primereduce*]]*, align 8
  %reduce6 = alloca [256 x [256 x %struct_template_circuit_primereduce*]], align 8
  store [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce6, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %LOGK18 = call i128 @fn_intrinsic_utils_init()
  %j9 = call i128 @fn_intrinsic_utils_init()
  %LOGK210 = call i128 @fn_intrinsic_utils_init()
  %linefunctionunequalfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %linefunctionunequalfp2.out.declare_output, align 8
  %mul = mul i128 2, %linefunctionunequalfp2.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul)
  %mul15 = mul i128 2, %linefunctionunequalfp2.k.read_arg_inner
  %mul17 = mul i128 %mul15, %linefunctionunequalfp2.k.read_arg_inner
  %call18 = call i128 @log_ceil(i128 %mul17)
  %mul21 = mul i128 2, %linefunctionunequalfp2.n.read_arg_inner
  %add = add i128 %mul21, %call
  %call23 = call %struct_template_circuit_signedlinefunctionunequalnocarryfp2* @fn_template_build_signedlinefunctionunequalnocarryfp2(i128 %linefunctionunequalfp2.n.read_arg_inner, i128 %linefunctionunequalfp2.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch74, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add76, %loop.latch74 ]
  br label %loop.body24

loop.body24:                                      ; preds = %loop.latch68, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add70, %loop.latch68 ]
  br label %loop.body25

loop.body25:                                      ; preds = %loop.latch, %loop.body24
  %idx.0 = phi i128 [ 0, %loop.body24 ], [ %add65, %loop.latch ]
  %P = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequalfp2.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P, i128 0, i128 %i.0, i128 %j.0, i128 0, i128 %idx.0
  %P29 = load i128, i128* %array_getter, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter31, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 0, i128 %idx.0
  %nocarry36 = load i128, i128* %array_getter35, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry36, i128 %P29, i1* @constraint.467)
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_outter38 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter37, align 8
  %nocarry42 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_outter38, i128 0, i128 %i.0, i128 %j.0, i128 0, i128 %idx.0
  store i128 %P29, i128* %nocarry42, align 4
  %P43 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequalfp2.p.declare_input, align 8
  %array_getter47 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P43, i128 0, i128 %i.0, i128 %j.0, i128 1, i128 %idx.0
  %P48 = load i128, i128* %array_getter47, align 4
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_outter51 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter50, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_outter51, i128 0, i128 %i.0, i128 %j.0, i128 1, i128 %idx.0
  %nocarry56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry56, i128 %P48, i1* @constraint.468)
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_outter59 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter58, align 8
  %nocarry63 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_outter59, i128 0, i128 %i.0, i128 %j.0, i128 1, i128 %idx.0
  store i128 %P48, i128* %nocarry63, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body25
  %add65 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add65, %linefunctionunequalfp2.k.read_arg_inner
  br i1 %slt, label %loop.body25, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit
  %add70 = add i128 %j.0, 1
  %slt72 = icmp slt i128 %add70, 2
  br i1 %slt72, label %loop.body24, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch68
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.exit73
  %add76 = add i128 %i.0, 1
  %slt78 = icmp slt i128 %add76, 2
  br i1 %slt78, label %loop.body, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch74
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch105, %loop.exit79
  %i.1 = phi i128 [ 0, %loop.exit79 ], [ %add107, %loop.latch105 ]
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch98, %loop.body80
  %idx.1 = phi i128 [ 0, %loop.body80 ], [ %add100, %loop.latch98 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %linefunctionunequalfp2.q.declare_input, align 8
  %array_getter84 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 %i.1, i128 %idx.1
  %Q85 = load i128, i128* %array_getter84, align 4
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 4
  %signedlinefunctionunequalnocarryfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter87, align 8
  %array_getter90 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionunequalnocarryfp2.q.read_input_outter, i128 0, i128 %i.1, i128 %idx.1
  %nocarry91 = load i128, i128* %array_getter90, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry91, i128 %Q85, i1* @constraint.469)
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 4
  %signedlinefunctionunequalnocarryfp2.q.read_input_outter94 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter93, align 8
  %nocarry97 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionunequalnocarryfp2.q.read_input_outter94, i128 0, i128 %i.1, i128 %idx.1
  store i128 %Q85, i128* %nocarry97, align 4
  br label %loop.latch98

loop.latch98:                                     ; preds = %loop.body81
  %add100 = add i128 %idx.1, 1
  %slt103 = icmp slt i128 %add100, %linefunctionunequalfp2.k.read_arg_inner
  br i1 %slt103, label %loop.body81, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch98
  br label %loop.latch105

loop.latch105:                                    ; preds = %loop.exit104
  %add107 = add i128 %i.1, 1
  %slt109 = icmp slt i128 %add107, 2
  br i1 %slt109, label %loop.body80, label %loop.exit110

loop.exit110:                                     ; preds = %loop.latch105
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch173, %loop.exit110
  %i.2 = phi i128 [ 0, %loop.exit110 ], [ %add175, %loop.latch173 ]
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch125, %loop.body111
  %j.1 = phi i128 [ 0, %loop.body111 ], [ %add127, %loop.latch125 ]
  %sub = sub i128 %linefunctionunequalfp2.k.read_arg_inner, 1
  %mul117 = mul i128 3, %linefunctionunequalfp2.n.read_arg_inner
  %add119 = add i128 %mul117, %call18
  %call120 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %linefunctionunequalfp2.n.read_arg_inner, i128 %linefunctionunequalfp2.k.read_arg_inner, i128 %sub, [256 x i128]* %linefunctionunequalfp2.q.read_arg_inner, i128 %add119)
  %ptr_getter121 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %reduce124 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter121, i128 0, i128 %i.2, i128 %j.1
  store %struct_template_circuit_primereduce* %call120, %struct_template_circuit_primereduce** %reduce124, align 8
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.body112
  %add127 = add i128 %j.1, 1
  %slt129 = icmp slt i128 %add127, 2
  br i1 %slt129, label %loop.body112, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  br label %loop.body131

loop.body131:                                     ; preds = %loop.latch167, %loop.exit130
  %j.2 = phi i128 [ 0, %loop.exit130 ], [ %add169, %loop.latch167 ]
  br label %loop.body132

loop.body132:                                     ; preds = %loop.latch158, %loop.body131
  %idx.2 = phi i128 [ 0, %loop.body131 ], [ %add160, %loop.latch158 ]
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call23, i32 0, i32 5
  %signedlinefunctionunequalnocarryfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter134, align 8
  %array_getter138 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarryfp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %nocarry139 = load i128, i128* %array_getter138, align 4
  %reduce140 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce140, i128 0, i128 %i.2, i128 %j.2
  %reduce144 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter143, align 8
  %struct_getter145 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce144, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter145, align 8
  %array_getter147 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %idx.2
  %reduce148 = load i128, i128* %array_getter147, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce148, i128 %nocarry139, i1* @constraint.470)
  %ptr_getter149 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter149, i128 0, i128 %i.2, i128 %j.2
  %reduce153 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter152, align 8
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce153, i32 0, i32 5
  %primereduce.in.read_input_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %reduce157 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter155, i128 0, i128 %idx.2
  store i128 %nocarry139, i128* %reduce157, align 4
  br label %loop.latch158

loop.latch158:                                    ; preds = %loop.body132
  %add160 = add i128 %idx.2, 1
  %mul163 = mul i128 2, %linefunctionunequalfp2.k.read_arg_inner
  %sub164 = sub i128 %mul163, 1
  %slt165 = icmp slt i128 %add160, %sub164
  br i1 %slt165, label %loop.body132, label %loop.exit166

loop.exit166:                                     ; preds = %loop.latch158
  br label %loop.latch167

loop.latch167:                                    ; preds = %loop.exit166
  %add169 = add i128 %j.2, 1
  %slt171 = icmp slt i128 %add169, 2
  br i1 %slt171, label %loop.body131, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch167
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.exit172
  %add175 = add i128 %i.2, 1
  %slt177 = icmp slt i128 %add175, 6
  br i1 %slt177, label %loop.body111, label %loop.exit178

loop.exit178:                                     ; preds = %loop.latch173
  %mul182 = mul i128 3, %linefunctionunequalfp2.n.read_arg_inner
  %add184 = add i128 %mul182, %call18
  %call186 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %linefunctionunequalfp2.n.read_arg_inner, i128 %linefunctionunequalfp2.k.read_arg_inner, i128 %add184, [256 x i128]* %linefunctionunequalfp2.q.read_arg_inner)
  br label %loop.body187

loop.body187:                                     ; preds = %loop.latch226, %loop.exit178
  %i.3 = phi i128 [ 0, %loop.exit178 ], [ %add228, %loop.latch226 ]
  br label %loop.body188

loop.body188:                                     ; preds = %loop.latch220, %loop.body187
  %j.3 = phi i128 [ 0, %loop.body187 ], [ %add222, %loop.latch220 ]
  br label %loop.body189

loop.body189:                                     ; preds = %loop.latch213, %loop.body188
  %idx.3 = phi i128 [ 0, %loop.body188 ], [ %add215, %loop.latch213 ]
  %reduce190 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter193 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce190, i128 0, i128 %i.3, i128 %j.3
  %reduce194 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter193, align 8
  %struct_getter195 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce194, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter195, align 8
  %array_getter197 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %idx.3
  %reduce198 = load i128, i128* %array_getter197, align 4
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call186, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter200, align 8
  %array_getter204 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.3, i128 %j.3, i128 %idx.3
  %carry205 = load i128, i128* %array_getter204, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry205, i128 %reduce198, i1* @constraint.471)
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call186, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter208 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter207, align 8
  %carry212 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter208, i128 0, i128 %i.3, i128 %j.3, i128 %idx.3
  store i128 %reduce198, i128* %carry212, align 4
  br label %loop.latch213

loop.latch213:                                    ; preds = %loop.body189
  %add215 = add i128 %idx.3, 1
  %slt218 = icmp slt i128 %add215, %linefunctionunequalfp2.k.read_arg_inner
  br i1 %slt218, label %loop.body189, label %loop.exit219

loop.exit219:                                     ; preds = %loop.latch213
  br label %loop.latch220

loop.latch220:                                    ; preds = %loop.exit219
  %add222 = add i128 %j.3, 1
  %slt224 = icmp slt i128 %add222, 2
  br i1 %slt224, label %loop.body188, label %loop.exit225

loop.exit225:                                     ; preds = %loop.latch220
  br label %loop.latch226

loop.latch226:                                    ; preds = %loop.exit225
  %add228 = add i128 %i.3, 1
  %slt230 = icmp slt i128 %add228, 6
  br i1 %slt230, label %loop.body187, label %loop.exit231

loop.exit231:                                     ; preds = %loop.latch226
  br label %loop.body232

loop.body232:                                     ; preds = %loop.latch266, %loop.exit231
  %i.4 = phi i128 [ 0, %loop.exit231 ], [ %add268, %loop.latch266 ]
  br label %loop.body233

loop.body233:                                     ; preds = %loop.latch260, %loop.body232
  %j.4 = phi i128 [ 0, %loop.body232 ], [ %add262, %loop.latch260 ]
  br label %loop.body234

loop.body234:                                     ; preds = %loop.latch253, %loop.body233
  %idx.4 = phi i128 [ 0, %loop.body233 ], [ %add255, %loop.latch253 ]
  %struct_getter236 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call186, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter236, align 8
  %array_getter240 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  %carry241 = load i128, i128* %array_getter240, align 4
  %out242 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequalfp2.out.declare_output, align 8
  %array_getter246 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out242, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  %out247 = load i128, i128* %array_getter246, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out247, i128 %carry241, i1* @constraint.472)
  %ptr_getter248 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequalfp2.out.declare_output, align 8
  %out252 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter248, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  store i128 %carry241, i128* %out252, align 4
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.body234
  %add255 = add i128 %idx.4, 1
  %slt258 = icmp slt i128 %add255, %linefunctionunequalfp2.k.read_arg_inner
  br i1 %slt258, label %loop.body234, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch253
  br label %loop.latch260

loop.latch260:                                    ; preds = %loop.exit259
  %add262 = add i128 %j.4, 1
  %slt264 = icmp slt i128 %add262, 2
  br i1 %slt264, label %loop.body233, label %loop.exit265

loop.exit265:                                     ; preds = %loop.latch260
  br label %loop.latch266

loop.latch266:                                    ; preds = %loop.exit265
  %add268 = add i128 %i.4, 1
  %slt270 = icmp slt i128 %add268, 6
  br i1 %slt270, label %loop.body232, label %loop.exit271

loop.exit271:                                     ; preds = %loop.latch266
  br label %arraydim

arraydim:                                         ; preds = %loop.exit271
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2)
  %ptr_cast272 = bitcast [256 x [256 x [256 x i128]]]** %linefunctionunequalfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast272, i128 6, i128 2, i128 %linefunctionunequalfp2.k.read_arg_inner)
  %ptr_cast273 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequalfp2.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast273, i128 2, i128 2, i128 2, i128 %linefunctionunequalfp2.k.read_arg_inner)
  %ptr_cast274 = bitcast [256 x [256 x i128]]** %linefunctionunequalfp2.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast274, i128 2, i128 %linefunctionunequalfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out275 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequalfp2.out.declare_output, align 8
  %linefunctionunequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out275, [256 x [256 x [256 x i128]]]** %linefunctionunequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_linefunctionunequalfp2* @fn_template_build_linefunctionunequalfp2(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_linefunctionunequalfp2 = alloca %struct_template_circuit_linefunctionunequalfp2, align 8
  %linefunctionunequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %struct_template_circuit_linefunctionunequalfp2, i32 0, i32 0
  store i128 %0, i128* %linefunctionunequalfp2.n.write_arg_inner, align 4
  %linefunctionunequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %struct_template_circuit_linefunctionunequalfp2, i32 0, i32 1
  store i128 %1, i128* %linefunctionunequalfp2.k.write_arg_inner, align 4
  %linefunctionunequalfp2.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequalfp2, %struct_template_circuit_linefunctionunequalfp2* %struct_template_circuit_linefunctionunequalfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %linefunctionunequalfp2.q.write_arg_inner, align 8
  ret %struct_template_circuit_linefunctionunequalfp2* %struct_template_circuit_linefunctionunequalfp2
}

define void @fn_template_init_fp2compress(%struct_template_circuit_fp2compress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 0
  %fp2compress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 1
  %fp2compress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 2
  %fp2compress.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 3
  %fp2compress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 4
  %fp2compress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 5
  %fp2compress.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %fp2compress.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2compress.in.read_input_inner, [256 x [256 x i128]]** %fp2compress.in.declare_input, align 8
  %c = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %c6 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %c6, [256 x %struct_template_circuit_primereduce*]** %c, align 8
  %j7 = call i128 @fn_intrinsic_utils_init()
  %fp2compress.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2compress.out.declare_output, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %fp2compress.k.read_arg_inner, %fp2compress.m.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch40, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add42, %loop.latch40 ]
  %call = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %fp2compress.n.read_arg_inner, i128 %fp2compress.k.read_arg_inner, i128 %fp2compress.m.read_arg_inner, [256 x i128]* %fp2compress.p.read_arg_inner, i128 %fp2compress.m_out.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %c, align 8
  %c13 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_primereduce* %call, %struct_template_circuit_primereduce** %c13, align 8
  br label %loop.body14

loop.body14:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add35, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2compress.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %i.0, i128 %j.0
  %in17 = load i128, i128* %array_getter, align 4
  %c18 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %c, align 8
  %array_getter20 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %c18, i128 0, i128 %i.0
  %c21 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter20, align 8
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %c21, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %j.0
  %c25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_utils_constraint(i128 %c25, i128 %in17, i1* @constraint.473)
  %ptr_getter26 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %c, align 8
  %array_getter28 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter26, i128 0, i128 %i.0
  %c29 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter28, align 8
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %c29, i32 0, i32 5
  %primereduce.in.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %c33 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter31, i128 0, i128 %j.0
  store i128 %in17, i128* %c33, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body14
  %add35 = add i128 %j.0, 1
  %add39 = add i128 %fp2compress.k.read_arg_inner, %fp2compress.m.read_arg_inner
  %slt = icmp slt i128 %add35, %add39
  br i1 %slt, label %loop.body14, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch40

loop.latch40:                                     ; preds = %loop.exit
  %add42 = add i128 %i.0, 1
  %slt44 = icmp slt i128 %add42, 2
  br i1 %slt44, label %loop.body, label %loop.exit45

loop.exit45:                                      ; preds = %loop.latch40
  br label %loop.body46

loop.body46:                                      ; preds = %loop.latch72, %loop.exit45
  %i.1 = phi i128 [ 0, %loop.exit45 ], [ %add74, %loop.latch72 ]
  br label %loop.body47

loop.body47:                                      ; preds = %loop.latch65, %loop.body46
  %j.1 = phi i128 [ 0, %loop.body46 ], [ %add67, %loop.latch65 ]
  %c48 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %c, align 8
  %array_getter50 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %c48, i128 0, i128 %i.1
  %c51 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter50, align 8
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %c51, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter52, align 8
  %array_getter54 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %j.1
  %c55 = load i128, i128* %array_getter54, align 4
  %out56 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2compress.out.declare_output, align 8
  %array_getter59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out56, i128 0, i128 %i.1, i128 %j.1
  %out60 = load i128, i128* %array_getter59, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out60, i128 %c55, i1* @constraint.474)
  %ptr_getter61 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2compress.out.declare_output, align 8
  %out64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter61, i128 0, i128 %i.1, i128 %j.1
  store i128 %c55, i128* %out64, align 4
  br label %loop.latch65

loop.latch65:                                     ; preds = %loop.body47
  %add67 = add i128 %j.1, 1
  %slt70 = icmp slt i128 %add67, %fp2compress.k.read_arg_inner
  br i1 %slt70, label %loop.body47, label %loop.exit71

loop.exit71:                                      ; preds = %loop.latch65
  br label %loop.latch72

loop.latch72:                                     ; preds = %loop.exit71
  %add74 = add i128 %i.1, 1
  %slt76 = icmp slt i128 %add74, 2
  br i1 %slt76, label %loop.body46, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch72
  br label %arraydim

arraydim:                                         ; preds = %loop.exit77
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2compress.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %add)
  %ptr_cast78 = bitcast [256 x %struct_template_circuit_primereduce*]** %c to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast78, i128 2)
  %ptr_cast79 = bitcast [256 x [256 x i128]]** %fp2compress.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast79, i128 2, i128 %fp2compress.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out80 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2compress.out.declare_output, align 8
  %fp2compress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out80, [256 x [256 x i128]]** %fp2compress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, i128 %4) {
entry:
  %struct_template_circuit_fp2compress = alloca %struct_template_circuit_fp2compress, align 8
  %fp2compress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 0
  store i128 %0, i128* %fp2compress.n.write_arg_inner, align 4
  %fp2compress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 1
  store i128 %1, i128* %fp2compress.k.write_arg_inner, align 4
  %fp2compress.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 2
  store i128 %2, i128* %fp2compress.m.write_arg_inner, align 4
  %fp2compress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp2compress.p.write_arg_inner, align 8
  %fp2compress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 4
  store i128 %4, i128* %fp2compress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress
}

define void @fn_template_init_fp2add(%struct_template_circuit_fp2add* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 0
  %fp2add.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 1
  %fp2add.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 2
  %fp2add.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 3
  %fp2add.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2add.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2add.a.read_input_inner, [256 x [256 x i128]]** %fp2add.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 4
  %fp2add.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp2add.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2add.b.read_input_inner, [256 x [256 x i128]]** %fp2add.b.declare_input, align 8
  %adders = alloca [256 x %struct_template_circuit_fpadd*]*, align 8
  %adders5 = alloca [256 x %struct_template_circuit_fpadd*], align 8
  store [256 x %struct_template_circuit_fpadd*]* %adders5, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %fp2add.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2add.out.declare_output, align 8
  %j6 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch81, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add83, %loop.latch81 ]
  %call = call %struct_template_circuit_fpadd* @fn_template_build_fpadd(i128 %fp2add.n.read_arg_inner, i128 %fp2add.k.read_arg_inner, [256 x i128]* %fp2add.p.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_fpadd*]*, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %adders12 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %ptr_getter, i128 0, i128 %i.0
  store %struct_template_circuit_fpadd* %call, %struct_template_circuit_fpadd** %adders12, align 8
  br label %loop.body13

loop.body13:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2add.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i.0, i128 %j.0
  %a16 = load i128, i128* %array_getter, align 4
  %adders17 = load [256 x %struct_template_circuit_fpadd*]*, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %array_getter19 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders17, i128 0, i128 %i.0
  %adders20 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter19, align 8
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders20, i32 0, i32 3
  %fpadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter, i128 0, i128 %j.0
  %adders24 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_utils_constraint(i128 %adders24, i128 %a16, i1* @constraint.475)
  %ptr_getter25 = load [256 x %struct_template_circuit_fpadd*]*, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %array_getter27 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %ptr_getter25, i128 0, i128 %i.0
  %adders28 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter27, align 8
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders28, i32 0, i32 3
  %fpadd.a.read_input_outter30 = load [256 x i128]*, [256 x i128]** %struct_getter29, align 8
  %adders32 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter30, i128 0, i128 %j.0
  store i128 %a16, i128* %adders32, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2add.b.declare_input, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i.0, i128 %j.0
  %b36 = load i128, i128* %array_getter35, align 4
  %adders37 = load [256 x %struct_template_circuit_fpadd*]*, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %array_getter39 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders37, i128 0, i128 %i.0
  %adders40 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter39, align 8
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders40, i32 0, i32 4
  %fpadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter41, align 8
  %array_getter43 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter, i128 0, i128 %j.0
  %adders44 = load i128, i128* %array_getter43, align 4
  call void @fn_intrinsic_utils_constraint(i128 %adders44, i128 %b36, i1* @constraint.476)
  %ptr_getter45 = load [256 x %struct_template_circuit_fpadd*]*, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %array_getter47 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %ptr_getter45, i128 0, i128 %i.0
  %adders48 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders48, i32 0, i32 4
  %fpadd.b.read_input_outter50 = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %adders52 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter50, i128 0, i128 %j.0
  store i128 %b36, i128* %adders52, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body13
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp2add.k.read_arg_inner
  br i1 %slt, label %loop.body13, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body56

loop.body56:                                      ; preds = %loop.latch74, %loop.exit
  %j.1 = phi i128 [ 0, %loop.exit ], [ %add76, %loop.latch74 ]
  %adders57 = load [256 x %struct_template_circuit_fpadd*]*, [256 x %struct_template_circuit_fpadd*]** %adders, align 8
  %array_getter59 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders57, i128 0, i128 %i.0
  %adders60 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter59, align 8
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders60, i32 0, i32 5
  %fpadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter61, align 8
  %array_getter63 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.out.read_output_outter, i128 0, i128 %j.1
  %adders64 = load i128, i128* %array_getter63, align 4
  %out65 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2add.out.declare_output, align 8
  %array_getter68 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out65, i128 0, i128 %i.0, i128 %j.1
  %out69 = load i128, i128* %array_getter68, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out69, i128 %adders64, i1* @constraint.477)
  %ptr_getter70 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2add.out.declare_output, align 8
  %out73 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter70, i128 0, i128 %i.0, i128 %j.1
  store i128 %adders64, i128* %out73, align 4
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.body56
  %add76 = add i128 %j.1, 1
  %slt79 = icmp slt i128 %add76, %fp2add.k.read_arg_inner
  br i1 %slt79, label %loop.body56, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch74
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.exit80
  %add83 = add i128 %i.0, 1
  %slt85 = icmp slt i128 %add83, 2
  br i1 %slt85, label %loop.body, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch81
  br label %arraydim

arraydim:                                         ; preds = %loop.exit86
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2add.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2add.k.read_arg_inner)
  %ptr_cast87 = bitcast [256 x [256 x i128]]** %fp2add.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast87, i128 2, i128 %fp2add.k.read_arg_inner)
  %ptr_cast88 = bitcast [256 x %struct_template_circuit_fpadd*]** %adders to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast88, i128 2)
  %ptr_cast89 = bitcast [256 x [256 x i128]]** %fp2add.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast89, i128 2, i128 %fp2add.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out90 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2add.out.declare_output, align 8
  %fp2add.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out90, [256 x [256 x i128]]** %fp2add.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2add* @fn_template_build_fp2add(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2add = alloca %struct_template_circuit_fp2add, align 8
  %fp2add.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %struct_template_circuit_fp2add, i32 0, i32 0
  store i128 %0, i128* %fp2add.n.write_arg_inner, align 4
  %fp2add.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %struct_template_circuit_fp2add, i32 0, i32 1
  store i128 %1, i128* %fp2add.k.write_arg_inner, align 4
  %fp2add.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %struct_template_circuit_fp2add, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2add.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2add* %struct_template_circuit_fp2add
}

define [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %j2 = call i128 @fn_intrinsic_utils_init()
  %i4 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array5 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch18, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add20, %loop.latch18 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 %i.0
  %a8 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a8, [256 x i128]* %spice_inline_array, align 4
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %j.0
  %b11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] %b11, [256 x i128]* %spice_inline_array12, align 4
  %call = call [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array12, [256 x i128]* %4)
  %ab15 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 %i.0, i128 %j.0
  %5 = bitcast [256 x i128]* %ab15 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body6
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, 2
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch18

loop.latch18:                                     ; preds = %loop.exit
  %add20 = add i128 %i.0, 1
  %slt22 = icmp slt i128 %add20, 2
  br i1 %slt22, label %loop.body, label %loop.exit23

loop.exit23:                                      ; preds = %loop.latch18
  %array_getter27 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 0, i128 0
  %ab28 = load [256 x i128], [256 x i128]* %array_getter27, align 4
  %spice_inline_array29 = alloca [256 x i128], align 8
  store [256 x i128] %ab28, [256 x i128]* %spice_inline_array29, align 4
  %array_getter31 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 1, i128 1
  %ab32 = load [256 x i128], [256 x i128]* %array_getter31, align 4
  %spice_inline_array33 = alloca [256 x i128], align 8
  store [256 x i128] %ab32, [256 x i128]* %spice_inline_array33, align 4
  %call35 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array29, [256 x i128]* %spice_inline_array33, [256 x i128]* %4)
  %out37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %7 = bitcast [256 x i128]* %out37 to i8*
  %8 = bitcast [256 x i128]* %call35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter41 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 0, i128 1
  %ab42 = load [256 x i128], [256 x i128]* %array_getter41, align 4
  %spice_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] %ab42, [256 x i128]* %spice_inline_array43, align 4
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 1, i128 0
  %ab46 = load [256 x i128], [256 x i128]* %array_getter45, align 4
  %spice_inline_array47 = alloca [256 x i128], align 8
  store [256 x i128] %ab46, [256 x i128]* %spice_inline_array47, align 4
  %call49 = call [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array43, [256 x i128]* %spice_inline_array47, [256 x i128]* %4)
  %out51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %9 = bitcast [256 x i128]* %out51 to i8*
  %10 = bitcast [256 x i128]* %call49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_pointoncurvefp2(%struct_template_circuit_pointoncurvefp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 0
  %pointoncurvefp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 1
  %pointoncurvefp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 2
  %pointoncurvefp2.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 3
  %pointoncurvefp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 4
  %pointoncurvefp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 5
  %pointoncurvefp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %pointoncurvefp2.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %LOGK36 = call i128 @fn_intrinsic_utils_init()
  %constraint = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, align 8
  %constraint7 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  store [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint7, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %cu_red = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %cu_red8 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %cu_red8, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %i9 = call i128 @fn_intrinsic_utils_init()
  %y_sq_red = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %y_sq_red10 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %y_sq_red10, [256 x %struct_template_circuit_primereduce*]** %y_sq_red, align 8
  %j11 = call i128 @fn_intrinsic_utils_init()
  %LOGK12 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %pointoncurvefp2.k.read_arg_inner)
  %mul = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul16 = mul i128 4, %pointoncurvefp2.k.read_arg_inner
  %mul18 = mul i128 %mul16, %pointoncurvefp2.k.read_arg_inner
  %mul19 = mul i128 %sub, %mul18
  %add = add i128 %mul19, 1
  %call20 = call i128 @log_ceil(i128 %add)
  %mul21 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %add23 = add i128 %mul21, %call20
  %slt = icmp slt i128 %add23, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul28 = mul i128 2, %pointoncurvefp2.n.read_arg_inner
  %add29 = add i128 %mul28, 1
  %add31 = add i128 %add29, %call
  %call32 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add31)
  %mul37 = mul i128 2, %pointoncurvefp2.n.read_arg_inner
  %add38 = add i128 %mul37, 1
  %add40 = add i128 %add38, %call
  %call41 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add40)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch115, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add117, %loop.latch115 ]
  br label %loop.body42

loop.body42:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add111, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in45 = load i128, i128* %array_getter, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call32, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter47, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq51, i128 %in45, i1* @constraint.478)
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call32, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter52, align 8
  %x_sq56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter53, i128 0, i128 %i.0, i128 %j.0
  store i128 %in45, i128* %x_sq56, align 4
  %in57 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in57, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in61 = load i128, i128* %array_getter60, align 4
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call32, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter63, align 8
  %array_getter66 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq67, i128 %in61, i1* @constraint.479)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call32, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter70 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter69, align 8
  %x_sq73 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter70, i128 0, i128 %i.0, i128 %j.0
  store i128 %in61, i128* %x_sq73, align 4
  %in74 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter77 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in74, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in78 = load i128, i128* %array_getter77, align 4
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call41, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter81 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter80, align 8
  %array_getter84 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter81, i128 0, i128 %i.0, i128 %j.0
  %y_sq85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq85, i128 %in78, i1* @constraint.480)
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call41, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter88 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter87, align 8
  %y_sq91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter88, i128 0, i128 %i.0, i128 %j.0
  store i128 %in78, i128* %y_sq91, align 4
  %in92 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in92, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in96 = load i128, i128* %array_getter95, align 4
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call41, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter99 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter98, align 8
  %array_getter102 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter99, i128 0, i128 %i.0, i128 %j.0
  %y_sq103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq103, i128 %in96, i1* @constraint.481)
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call41, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter106 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter105, align 8
  %y_sq109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter106, i128 0, i128 %i.0, i128 %j.0
  store i128 %in96, i128* %y_sq109, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body42
  %add111 = add i128 %j.0, 1
  %slt114 = icmp slt i128 %add111, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt114, label %loop.body42, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.exit
  %add117 = add i128 %i.0, 1
  %slt119 = icmp slt i128 %add117, 2
  br i1 %slt119, label %loop.body, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch115
  %mul123 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub124 = sub i128 %mul123, 1
  %mul127 = mul i128 3, %pointoncurvefp2.n.read_arg_inner
  %mul129 = mul i128 2, %call
  %add130 = add i128 %mul127, %mul129
  %add131 = add i128 %add130, 2
  %call132 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointoncurvefp2.n.read_arg_inner, i128 %sub124, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add131)
  br label %loop.body133

loop.body133:                                     ; preds = %loop.latch189, %loop.exit120
  %i.1 = phi i128 [ 0, %loop.exit120 ], [ %add191, %loop.latch189 ]
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch154, %loop.body133
  %j.1 = phi i128 [ 0, %loop.body133 ], [ %add156, %loop.latch154 ]
  %struct_getter136 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call32, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter136, align 8
  %array_getter139 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1
  %x_sq140 = load i128, i128* %array_getter139, align 4
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter143 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter142, align 8
  %array_getter146 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter143, i128 0, i128 %i.1, i128 %j.1
  %x_cu147 = load i128, i128* %array_getter146, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu147, i128 %x_sq140, i1* @constraint.482)
  %struct_getter149 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter150 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter149, align 8
  %x_cu153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter150, i128 0, i128 %i.1, i128 %j.1
  store i128 %x_sq140, i128* %x_cu153, align 4
  br label %loop.latch154

loop.latch154:                                    ; preds = %loop.body134
  %add156 = add i128 %j.1, 1
  %mul159 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub160 = sub i128 %mul159, 1
  %slt161 = icmp slt i128 %add156, %sub160
  br i1 %slt161, label %loop.body134, label %loop.exit162

loop.exit162:                                     ; preds = %loop.latch154
  br label %loop.body163

loop.body163:                                     ; preds = %loop.latch182, %loop.exit162
  %j.2 = phi i128 [ 0, %loop.exit162 ], [ %add184, %loop.latch182 ]
  %in164 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in164, i128 0, i128 0, i128 %i.1, i128 %j.2
  %in168 = load i128, i128* %array_getter167, align 4
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter171 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter170, align 8
  %array_getter174 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter171, i128 0, i128 %i.1, i128 %j.2
  %x_cu175 = load i128, i128* %array_getter174, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu175, i128 %in168, i1* @constraint.483)
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter178 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter177, align 8
  %x_cu181 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter178, i128 0, i128 %i.1, i128 %j.2
  store i128 %in168, i128* %x_cu181, align 4
  br label %loop.latch182

loop.latch182:                                    ; preds = %loop.body163
  %add184 = add i128 %j.2, 1
  %slt187 = icmp slt i128 %add184, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt187, label %loop.body163, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch182
  br label %loop.latch189

loop.latch189:                                    ; preds = %loop.exit188
  %add191 = add i128 %i.1, 1
  %slt193 = icmp slt i128 %add191, 2
  br i1 %slt193, label %loop.body133, label %loop.exit194

loop.exit194:                                     ; preds = %loop.latch189
  br label %loop.body195

loop.body195:                                     ; preds = %loop.latch437, %loop.exit194
  %j.3 = phi i128 [ 0, %loop.exit194 ], [ %add439, %loop.latch437 ]
  %mul199 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub200 = sub i128 %mul199, 2
  %mul202 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %mul204 = mul i128 3, %call
  %add205 = add i128 %mul202, %mul204
  %add206 = add i128 %add205, 4
  %call207 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %sub200, [256 x i128]* %pointoncurvefp2.p.read_arg_inner, i128 %add206)
  %ptr_getter208 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %cu_red210 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter208, i128 0, i128 %j.3
  store %struct_template_circuit_primereduce* %call207, %struct_template_circuit_primereduce** %cu_red210, align 8
  br label %loop.body211

loop.body211:                                     ; preds = %loop.latch428, %loop.body195
  %i.2 = phi i128 [ 0, %loop.body195 ], [ %add430, %loop.latch428 ]
  %eq = icmp eq i128 %i.2, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body211
  %eq216 = icmp eq i128 %j.3, 0
  br i1 %eq216, label %if.true213, label %if.false214

if.false:                                         ; preds = %loop.body211
  %slt312 = icmp slt i128 %i.2, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt312, label %if.true308, label %if.false309

if.true213:                                       ; preds = %if.true
  %struct_getter218 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter219 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter218, align 8
  %array_getter222 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter219, i128 0, i128 %j.3, i128 %i.2
  %x_cu223 = load i128, i128* %array_getter222, align 4
  %array_getter224 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a225 = load i128, i128* %array_getter224, align 4
  %in226 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter228 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in226, i128 0, i128 0, i128 0, i128 %i.2
  %in229 = load i128, i128* %array_getter228, align 4
  %mul230 = mul i128 %a225, %in229
  %add231 = add i128 %x_cu223, %mul230
  %array_getter233 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a234 = load i128, i128* %array_getter233, align 4
  %in235 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter237 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in235, i128 0, i128 0, i128 1, i128 %i.2
  %in238 = load i128, i128* %array_getter237, align 4
  %mul239 = mul i128 %a234, %in238
  %sub240 = sub i128 %add231, %mul239
  %array_getter242 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.b.read_arg_inner, i128 0, i128 %j.3
  %b243 = load i128, i128* %array_getter242, align 4
  %add244 = add i128 %sub240, %b243
  %cu_red245 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter247 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red245, i128 0, i128 %j.3
  %cu_red248 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter247, align 8
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red248, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter249, align 8
  %array_getter251 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %cu_red252 = load i128, i128* %array_getter251, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red252, i128 %add244, i1* @constraint.484)
  %ptr_getter253 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter255 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter253, i128 0, i128 %j.3
  %cu_red256 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter255, align 8
  %struct_getter257 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red256, i32 0, i32 5
  %primereduce.in.read_input_outter258 = load [256 x i128]*, [256 x i128]** %struct_getter257, align 8
  %cu_red260 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter258, i128 0, i128 %i.2
  store i128 %add244, i128* %cu_red260, align 4
  br label %if.exit

if.false214:                                      ; preds = %if.true
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter263 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter262, align 8
  %array_getter266 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter263, i128 0, i128 %j.3, i128 %i.2
  %x_cu267 = load i128, i128* %array_getter266, align 4
  %array_getter269 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a270 = load i128, i128* %array_getter269, align 4
  %in271 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter273 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in271, i128 0, i128 0, i128 1, i128 %i.2
  %in274 = load i128, i128* %array_getter273, align 4
  %mul275 = mul i128 %a270, %in274
  %add276 = add i128 %x_cu267, %mul275
  %array_getter278 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a279 = load i128, i128* %array_getter278, align 4
  %in280 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter282 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in280, i128 0, i128 0, i128 0, i128 %i.2
  %in283 = load i128, i128* %array_getter282, align 4
  %mul284 = mul i128 %a279, %in283
  %add285 = add i128 %add276, %mul284
  %array_getter288 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.b.read_arg_inner, i128 0, i128 %j.3
  %b289 = load i128, i128* %array_getter288, align 4
  %add290 = add i128 %add285, %b289
  %cu_red291 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter293 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red291, i128 0, i128 %j.3
  %cu_red294 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter293, align 8
  %struct_getter295 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red294, i32 0, i32 5
  %primereduce.in.read_input_outter296 = load [256 x i128]*, [256 x i128]** %struct_getter295, align 8
  %array_getter298 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter296, i128 0, i128 %i.2
  %cu_red299 = load i128, i128* %array_getter298, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red299, i128 %add290, i1* @constraint.485)
  %ptr_getter300 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter302 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter300, i128 0, i128 %j.3
  %cu_red303 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter302, align 8
  %struct_getter304 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red303, i32 0, i32 5
  %primereduce.in.read_input_outter305 = load [256 x i128]*, [256 x i128]** %struct_getter304, align 8
  %cu_red307 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter305, i128 0, i128 %i.2
  store i128 %add290, i128* %cu_red307, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false214, %if.true213
  br label %if.exit427

if.true308:                                       ; preds = %if.false
  %eq316 = icmp eq i128 %j.3, 0
  br i1 %eq316, label %if.true313, label %if.false314

if.false309:                                      ; preds = %if.false
  %struct_getter403 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter404 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter403, align 8
  %array_getter407 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter404, i128 0, i128 %j.3, i128 %i.2
  %x_cu408 = load i128, i128* %array_getter407, align 4
  %cu_red409 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter411 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red409, i128 0, i128 %j.3
  %cu_red412 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter411, align 8
  %struct_getter413 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red412, i32 0, i32 5
  %primereduce.in.read_input_outter414 = load [256 x i128]*, [256 x i128]** %struct_getter413, align 8
  %array_getter416 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter414, i128 0, i128 %i.2
  %cu_red417 = load i128, i128* %array_getter416, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red417, i128 %x_cu408, i1* @constraint.488)
  %ptr_getter418 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter420 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter418, i128 0, i128 %j.3
  %cu_red421 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter420, align 8
  %struct_getter422 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red421, i32 0, i32 5
  %primereduce.in.read_input_outter423 = load [256 x i128]*, [256 x i128]** %struct_getter422, align 8
  %cu_red425 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter423, i128 0, i128 %i.2
  store i128 %x_cu408, i128* %cu_red425, align 4
  br label %if.exit426

if.true313:                                       ; preds = %if.true308
  %struct_getter318 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter319 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter318, align 8
  %array_getter322 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter319, i128 0, i128 %j.3, i128 %i.2
  %x_cu323 = load i128, i128* %array_getter322, align 4
  %array_getter325 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a326 = load i128, i128* %array_getter325, align 4
  %in327 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter329 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in327, i128 0, i128 0, i128 0, i128 %i.2
  %in330 = load i128, i128* %array_getter329, align 4
  %mul331 = mul i128 %a326, %in330
  %add332 = add i128 %x_cu323, %mul331
  %array_getter334 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a335 = load i128, i128* %array_getter334, align 4
  %in336 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter338 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in336, i128 0, i128 0, i128 1, i128 %i.2
  %in339 = load i128, i128* %array_getter338, align 4
  %mul340 = mul i128 %a335, %in339
  %sub341 = sub i128 %add332, %mul340
  %cu_red342 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter344 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red342, i128 0, i128 %j.3
  %cu_red345 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter344, align 8
  %struct_getter346 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red345, i32 0, i32 5
  %primereduce.in.read_input_outter347 = load [256 x i128]*, [256 x i128]** %struct_getter346, align 8
  %array_getter349 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter347, i128 0, i128 %i.2
  %cu_red350 = load i128, i128* %array_getter349, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red350, i128 %sub341, i1* @constraint.486)
  %ptr_getter351 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter353 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter351, i128 0, i128 %j.3
  %cu_red354 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter353, align 8
  %struct_getter355 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red354, i32 0, i32 5
  %primereduce.in.read_input_outter356 = load [256 x i128]*, [256 x i128]** %struct_getter355, align 8
  %cu_red358 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter356, i128 0, i128 %i.2
  store i128 %sub341, i128* %cu_red358, align 4
  br label %if.exit401

if.false314:                                      ; preds = %if.true308
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call132, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter361 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter360, align 8
  %array_getter364 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter361, i128 0, i128 %j.3, i128 %i.2
  %x_cu365 = load i128, i128* %array_getter364, align 4
  %array_getter367 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a368 = load i128, i128* %array_getter367, align 4
  %in369 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter371 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in369, i128 0, i128 0, i128 1, i128 %i.2
  %in372 = load i128, i128* %array_getter371, align 4
  %mul373 = mul i128 %a368, %in372
  %add374 = add i128 %x_cu365, %mul373
  %array_getter376 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a377 = load i128, i128* %array_getter376, align 4
  %in378 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input, align 8
  %array_getter380 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in378, i128 0, i128 0, i128 0, i128 %i.2
  %in381 = load i128, i128* %array_getter380, align 4
  %mul382 = mul i128 %a377, %in381
  %add383 = add i128 %add374, %mul382
  %cu_red384 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter386 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red384, i128 0, i128 %j.3
  %cu_red387 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter386, align 8
  %struct_getter388 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red387, i32 0, i32 5
  %primereduce.in.read_input_outter389 = load [256 x i128]*, [256 x i128]** %struct_getter388, align 8
  %array_getter391 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter389, i128 0, i128 %i.2
  %cu_red392 = load i128, i128* %array_getter391, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red392, i128 %add383, i1* @constraint.487)
  %ptr_getter393 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter395 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter393, i128 0, i128 %j.3
  %cu_red396 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter395, align 8
  %struct_getter397 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red396, i32 0, i32 5
  %primereduce.in.read_input_outter398 = load [256 x i128]*, [256 x i128]** %struct_getter397, align 8
  %cu_red400 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter398, i128 0, i128 %i.2
  store i128 %add383, i128* %cu_red400, align 4
  br label %if.exit401

if.exit401:                                       ; preds = %if.false314, %if.true313
  br label %if.exit426

if.exit426:                                       ; preds = %if.exit401, %if.false309
  br label %if.exit427

if.exit427:                                       ; preds = %if.exit426, %if.exit
  br label %loop.latch428

loop.latch428:                                    ; preds = %if.exit427
  %add430 = add i128 %i.2, 1
  %mul433 = mul i128 3, %pointoncurvefp2.k.read_arg_inner
  %sub434 = sub i128 %mul433, 2
  %slt435 = icmp slt i128 %add430, %sub434
  br i1 %slt435, label %loop.body211, label %loop.exit436

loop.exit436:                                     ; preds = %loop.latch428
  br label %loop.latch437

loop.latch437:                                    ; preds = %loop.exit436
  %add439 = add i128 %j.3, 1
  %slt441 = icmp slt i128 %add439, 2
  br i1 %slt441, label %loop.body195, label %loop.exit442

loop.exit442:                                     ; preds = %loop.latch437
  br label %loop.body443

loop.body443:                                     ; preds = %loop.latch493, %loop.exit442
  %i.3 = phi i128 [ 0, %loop.exit442 ], [ %add495, %loop.latch493 ]
  %sub447 = sub i128 %pointoncurvefp2.k.read_arg_inner, 1
  %mul450 = mul i128 3, %pointoncurvefp2.n.read_arg_inner
  %mul452 = mul i128 2, %call
  %add453 = add i128 %mul450, %mul452
  %add454 = add i128 %add453, 1
  %call455 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %sub447, [256 x i128]* %pointoncurvefp2.p.read_arg_inner, i128 %add454)
  %ptr_getter456 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %y_sq_red, align 8
  %y_sq_red458 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter456, i128 0, i128 %i.3
  store %struct_template_circuit_primereduce* %call455, %struct_template_circuit_primereduce** %y_sq_red458, align 8
  br label %loop.body459

loop.body459:                                     ; preds = %loop.latch484, %loop.body443
  %j.4 = phi i128 [ 0, %loop.body443 ], [ %add486, %loop.latch484 ]
  %struct_getter461 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call41, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter462 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter461, align 8
  %array_getter465 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter462, i128 0, i128 %i.3, i128 %j.4
  %y_sq466 = load i128, i128* %array_getter465, align 4
  %y_sq_red467 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %y_sq_red, align 8
  %array_getter469 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red467, i128 0, i128 %i.3
  %y_sq_red470 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter469, align 8
  %struct_getter471 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red470, i32 0, i32 5
  %primereduce.in.read_input_outter472 = load [256 x i128]*, [256 x i128]** %struct_getter471, align 8
  %array_getter474 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter472, i128 0, i128 %j.4
  %y_sq_red475 = load i128, i128* %array_getter474, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq_red475, i128 %y_sq466, i1* @constraint.489)
  %ptr_getter476 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %y_sq_red, align 8
  %array_getter478 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter476, i128 0, i128 %i.3
  %y_sq_red479 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter478, align 8
  %struct_getter480 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red479, i32 0, i32 5
  %primereduce.in.read_input_outter481 = load [256 x i128]*, [256 x i128]** %struct_getter480, align 8
  %y_sq_red483 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter481, i128 0, i128 %j.4
  store i128 %y_sq466, i128* %y_sq_red483, align 4
  br label %loop.latch484

loop.latch484:                                    ; preds = %loop.body459
  %add486 = add i128 %j.4, 1
  %mul489 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub490 = sub i128 %mul489, 1
  %slt491 = icmp slt i128 %add486, %sub490
  br i1 %slt491, label %loop.body459, label %loop.exit492

loop.exit492:                                     ; preds = %loop.latch484
  br label %loop.latch493

loop.latch493:                                    ; preds = %loop.exit492
  %add495 = add i128 %i.3, 1
  %slt497 = icmp slt i128 %add495, 2
  br i1 %slt497, label %loop.body443, label %loop.exit498

loop.exit498:                                     ; preds = %loop.latch493
  %mul502 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %add504 = add i128 %mul502, %call20
  %call506 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add504, [256 x i128]* %pointoncurvefp2.p.read_arg_inner)
  %ptr_getter507 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %constraint508 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter507, i128 0, i128 0
  store %struct_template_circuit_signedcheckcarrymodtozero* %call506, %struct_template_circuit_signedcheckcarrymodtozero** %constraint508, align 8
  %mul512 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %add514 = add i128 %mul512, %call20
  %call516 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add514, [256 x i128]* %pointoncurvefp2.p.read_arg_inner)
  %ptr_getter517 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %constraint518 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter517, i128 0, i128 1
  store %struct_template_circuit_signedcheckcarrymodtozero* %call516, %struct_template_circuit_signedcheckcarrymodtozero** %constraint518, align 8
  br label %loop.body519

loop.body519:                                     ; preds = %loop.latch582, %loop.exit498
  %i.4 = phi i128 [ 0, %loop.exit498 ], [ %add584, %loop.latch582 ]
  %cu_red520 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter521 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red520, i128 0, i128 0
  %cu_red522 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter521, align 8
  %struct_getter523 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red522, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter523, align 8
  %array_getter525 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.4
  %cu_red526 = load i128, i128* %array_getter525, align 4
  %y_sq_red527 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %y_sq_red, align 8
  %array_getter528 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red527, i128 0, i128 0
  %y_sq_red529 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter528, align 8
  %struct_getter530 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red529, i32 0, i32 6
  %primereduce.out.read_output_outter531 = load [256 x i128]*, [256 x i128]** %struct_getter530, align 8
  %array_getter533 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter531, i128 0, i128 %i.4
  %y_sq_red534 = load i128, i128* %array_getter533, align 4
  %sub535 = sub i128 %cu_red526, %y_sq_red534
  %constraint536 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %array_getter537 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint536, i128 0, i128 0
  %constraint538 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter537, align 8
  %struct_getter539 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint538, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter539, align 8
  %array_getter541 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.4
  %constraint542 = load i128, i128* %array_getter541, align 4
  call void @fn_intrinsic_utils_constraint(i128 %constraint542, i128 %sub535, i1* @constraint.490)
  %ptr_getter543 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %array_getter544 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter543, i128 0, i128 0
  %constraint545 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter544, align 8
  %struct_getter546 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint545, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter547 = load [256 x i128]*, [256 x i128]** %struct_getter546, align 8
  %constraint549 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter547, i128 0, i128 %i.4
  store i128 %sub535, i128* %constraint549, align 4
  %cu_red550 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cu_red, align 8
  %array_getter551 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red550, i128 0, i128 1
  %cu_red552 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter551, align 8
  %struct_getter553 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red552, i32 0, i32 6
  %primereduce.out.read_output_outter554 = load [256 x i128]*, [256 x i128]** %struct_getter553, align 8
  %array_getter556 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter554, i128 0, i128 %i.4
  %cu_red557 = load i128, i128* %array_getter556, align 4
  %y_sq_red558 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %y_sq_red, align 8
  %array_getter559 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red558, i128 0, i128 1
  %y_sq_red560 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter559, align 8
  %struct_getter561 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red560, i32 0, i32 6
  %primereduce.out.read_output_outter562 = load [256 x i128]*, [256 x i128]** %struct_getter561, align 8
  %array_getter564 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter562, i128 0, i128 %i.4
  %y_sq_red565 = load i128, i128* %array_getter564, align 4
  %sub566 = sub i128 %cu_red557, %y_sq_red565
  %constraint567 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %array_getter568 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint567, i128 0, i128 1
  %constraint569 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter568, align 8
  %struct_getter570 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint569, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter571 = load [256 x i128]*, [256 x i128]** %struct_getter570, align 8
  %array_getter573 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter571, i128 0, i128 %i.4
  %constraint574 = load i128, i128* %array_getter573, align 4
  call void @fn_intrinsic_utils_constraint(i128 %constraint574, i128 %sub566, i1* @constraint.491)
  %ptr_getter575 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %array_getter576 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter575, i128 0, i128 1
  %constraint577 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter576, align 8
  %struct_getter578 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint577, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter579 = load [256 x i128]*, [256 x i128]** %struct_getter578, align 8
  %constraint581 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter579, i128 0, i128 %i.4
  store i128 %sub566, i128* %constraint581, align 4
  br label %loop.latch582

loop.latch582:                                    ; preds = %loop.body519
  %add584 = add i128 %i.4, 1
  %slt587 = icmp slt i128 %add584, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt587, label %loop.body519, label %loop.exit588

loop.exit588:                                     ; preds = %loop.latch582
  br label %arraydim

arraydim:                                         ; preds = %loop.exit588
  %ptr_cast = bitcast [256 x %struct_template_circuit_primereduce*]** %cu_red to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2)
  %ptr_cast589 = bitcast [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast589, i128 2)
  %ptr_cast590 = bitcast [256 x [256 x [256 x i128]]]** %pointoncurvefp2.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast590, i128 2, i128 2, i128 %pointoncurvefp2.k.read_arg_inner)
  %ptr_cast591 = bitcast [256 x %struct_template_circuit_primereduce*]** %y_sq_red to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast591, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_pointoncurvefp2* @fn_template_build_pointoncurvefp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_pointoncurvefp2 = alloca %struct_template_circuit_pointoncurvefp2, align 8
  %pointoncurvefp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 0
  store i128 %0, i128* %pointoncurvefp2.n.write_arg_inner, align 4
  %pointoncurvefp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 1
  store i128 %1, i128* %pointoncurvefp2.k.write_arg_inner, align 4
  %pointoncurvefp2.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointoncurvefp2.a.write_arg_inner, align 8
  %pointoncurvefp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %pointoncurvefp2.b.write_arg_inner, align 8
  %pointoncurvefp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %pointoncurvefp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2
}

define [256 x [256 x i128]]* @find_Fp2_exp(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_utils_init()
  %bitLength3 = call i128 @fn_intrinsic_utils_init()
  %j4 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch31, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add33, %loop.latch31 ]
  %bitLength.0 = phi i128 [ 0, %entry ], [ %bitLength.2, %loop.latch31 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %bitLength.1 = phi i128 [ %bitLength.0, %loop.body ], [ %bitLength.2, %loop.latch ]
  %j.0 = phi i128 [ 0, %loop.body ], [ %add28, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %e8 = load i128, i128* %array_getter, align 4
  %rshift = lshr i128 %e8, %j.0
  %and = and i128 %rshift, 1
  %mul = mul i128 %0, %i.0
  %add = add i128 %j.0, %mul
  %eBits12 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add
  store i128 %and, i128* %eBits12, align 4
  %mul17 = mul i128 %0, %i.0
  %add18 = add i128 %j.0, %mul17
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add18
  %eBits20 = load i128, i128* %array_getter19, align 4
  %eq = icmp eq i128 %eBits20, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body6
  %mul24 = mul i128 %0, %i.0
  %add25 = add i128 %j.0, %mul24
  %add26 = add i128 %add25, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body6
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %bitLength.2 = phi i128 [ %add26, %if.true ], [ %bitLength.1, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add28 = add i128 %j.0, 1
  %slt = icmp slt i128 %add28, %0
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch31

loop.latch31:                                     ; preds = %loop.exit
  %add33 = add i128 %i.0, 1
  %mul35 = mul i128 2, %1
  %slt36 = icmp slt i128 %add33, %mul35
  br i1 %slt36, label %loop.body, label %loop.exit37

loop.exit37:                                      ; preds = %loop.latch31
  %uniform_array38 = alloca [256 x [256 x i128]], align 8
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch46, %loop.exit37
  %i.1 = phi i128 [ 0, %loop.exit37 ], [ %add48, %loop.latch46 ]
  %out42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array38, i128 0, i128 0, i128 %i.1
  store i128 0, i128* %out42, align 4
  %out45 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array38, i128 0, i128 1, i128 %i.1
  store i128 0, i128* %out45, align 4
  br label %loop.latch46

loop.latch46:                                     ; preds = %loop.body39
  %add48 = add i128 %i.1, 1
  %slt50 = icmp slt i128 %add48, 50
  br i1 %slt50, label %loop.body39, label %loop.exit51

loop.exit51:                                      ; preds = %loop.latch46
  %out53 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array38, i128 0, i128 0, i128 0
  store i128 1, i128* %out53, align 4
  %sub = sub i128 %bitLength.2, 1
  br label %loop.body55

loop.body55:                                      ; preds = %loop.latch77, %loop.exit51
  %i.2 = phi i128 [ %sub, %loop.exit51 ], [ %sub79, %loop.latch77 ]
  %out.0 = phi [256 x [256 x i128]]* [ %uniform_array38, %loop.exit51 ], [ %out.2, %loop.latch77 ]
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  %eBits61 = load i128, i128* %array_getter60, align 4
  %eq62 = icmp eq i128 %eBits61, 1
  br i1 %eq62, label %if.true56, label %if.false57

if.true56:                                        ; preds = %loop.body55
  %call = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %out.0, [256 x [256 x i128]]* %2, [256 x i128]* %3)
  br label %if.exit66

if.false57:                                       ; preds = %loop.body55
  br label %if.exit66

if.exit66:                                        ; preds = %if.false57, %if.true56
  %out.1 = phi [256 x [256 x i128]]* [ %call, %if.true56 ], [ %out.0, %if.false57 ]
  %sgt = icmp sgt i128 %i.2, 0
  br i1 %sgt, label %if.true67, label %if.false68

if.true67:                                        ; preds = %if.exit66
  %call75 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %out.1, [256 x [256 x i128]]* %out.1, [256 x i128]* %3)
  br label %if.exit76

if.false68:                                       ; preds = %if.exit66
  br label %if.exit76

if.exit76:                                        ; preds = %if.false68, %if.true67
  %out.2 = phi [256 x [256 x i128]]* [ %call75, %if.true67 ], [ %out.1, %if.false68 ]
  br label %loop.latch77

loop.latch77:                                     ; preds = %if.exit76
  %sub79 = sub i128 %i.2, 1
  %sge = icmp sge i128 %sub79, 0
  br i1 %sge, label %loop.body55, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch77
  ret [256 x [256 x i128]]* %out.2
}

define [256 x i128]* @mod_inv(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i3 = call i128 @fn_intrinsic_utils_init()
  %isZero5 = call i128 @fn_intrinsic_utils_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %isZero.0 = phi i128 [ 1, %entry ], [ %isZero.1, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a9 = load i128, i128* %array_getter, align 4
  %ne = icmp ne i128 %a9, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %isZero.1 = phi i128 [ 0, %if.true ], [ %isZero.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %eq = icmp eq i128 %isZero.1, 1
  br i1 %eq, label %if.true12, label %if.false13

if.true12:                                        ; preds = %loop.exit
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body15

if.false13:                                       ; preds = %loop.exit
  br label %if.exit26

loop.body15:                                      ; preds = %loop.latch18, %if.true12
  %i.1 = phi i128 [ 0, %if.true12 ], [ %add20, %loop.latch18 ]
  %ret17 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  store i128 0, i128* %ret17, align 4
  br label %loop.latch18

loop.latch18:                                     ; preds = %loop.body15
  %add20 = add i128 %i.1, 1
  %slt23 = icmp slt i128 %add20, %1
  br i1 %slt23, label %loop.body15, label %loop.exit24

loop.exit24:                                      ; preds = %loop.latch18
  ret [256 x i128]* %uniform_array

if.exit26:                                        ; preds = %if.false13
  %uniform_array27 = alloca [256 x i128], align 8
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch44, %if.exit26
  %i.2 = phi i128 [ 0, %if.exit26 ], [ %add46, %loop.latch44 ]
  %slt33 = icmp slt i128 %i.2, %1
  br i1 %slt33, label %if.true29, label %if.false30

if.true29:                                        ; preds = %loop.body28
  %array_getter35 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.2
  %p36 = load i128, i128* %array_getter35, align 4
  %pCopy39 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array27, i128 0, i128 %i.2
  store i128 %p36, i128* %pCopy39, align 4
  br label %if.exit43

if.false30:                                       ; preds = %loop.body28
  %pCopy42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array27, i128 0, i128 %i.2
  store i128 0, i128* %pCopy42, align 4
  br label %if.exit43

if.exit43:                                        ; preds = %if.false30, %if.true29
  br label %loop.latch44

loop.latch44:                                     ; preds = %if.exit43
  %add46 = add i128 %i.2, 1
  %slt48 = icmp slt i128 %add46, 50
  br i1 %slt48, label %loop.body28, label %loop.exit49

loop.exit49:                                      ; preds = %loop.latch44
  %uniform_array50 = alloca [256 x i128], align 8
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch55, %loop.exit49
  %i.3 = phi i128 [ 0, %loop.exit49 ], [ %add57, %loop.latch55 ]
  %two54 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array50, i128 0, i128 %i.3
  store i128 0, i128* %two54, align 4
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.body51
  %add57 = add i128 %i.3, 1
  %slt59 = icmp slt i128 %add57, 50
  br i1 %slt59, label %loop.body51, label %loop.exit60

loop.exit60:                                      ; preds = %loop.latch55
  %two62 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array50, i128 0, i128 0
  store i128 2, i128* %two62, align 4
  %uniform_array63 = alloca [256 x i128], align 8
  %call = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %uniform_array27, [256 x i128]* %uniform_array50)
  %uniform_array67 = alloca [256 x i128], align 8
  %call73 = call [256 x i128]* @mod_exp(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %uniform_array27, [256 x i128]* %call)
  ret [256 x i128]* %call73
}

define void @fn_template_init_pointontangentfp2(%struct_template_circuit_pointontangentfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 0
  %pointontangentfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 1
  %pointontangentfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 2
  %pointontangentfp2.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 3
  %pointontangentfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 4
  %pointontangentfp2.in.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %pointontangentfp2.in.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %diff_red = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %diff_red5 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %diff_red5, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %LOGK36 = call i128 @fn_intrinsic_utils_init()
  %LOGK7 = call i128 @fn_intrinsic_utils_init()
  %i8 = call i128 @fn_intrinsic_utils_init()
  %constraint = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, align 8
  %constraint9 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  store [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %j10 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %pointontangentfp2.k.read_arg_inner)
  %mul = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul14 = mul i128 12, %pointontangentfp2.k.read_arg_inner
  %mul16 = mul i128 %mul14, %pointontangentfp2.k.read_arg_inner
  %mul17 = mul i128 %sub, %mul16
  %add = add i128 %mul17, 1
  %call18 = call i128 @log_ceil(i128 %add)
  %mul19 = mul i128 4, %pointontangentfp2.n.read_arg_inner
  %add21 = add i128 %mul19, %call18
  %slt = icmp slt i128 %add21, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul26 = mul i128 2, %pointontangentfp2.n.read_arg_inner
  %add27 = add i128 %mul26, 1
  %add29 = add i128 %add27, %call
  %call30 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %add29)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch68, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add70, %loop.latch68 ]
  br label %loop.body31

loop.body31:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add64, %loop.latch ]
  %in = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in34 = load i128, i128* %array_getter, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq40, i128 %in34, i1* @constraint.492)
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter42 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter41, align 8
  %x_sq45 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter42, i128 0, i128 %i.0, i128 %j.0
  store i128 %in34, i128* %x_sq45, align 4
  %in46 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in46, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in50 = load i128, i128* %array_getter49, align 4
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter52, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq56, i128 %in50, i1* @constraint.493)
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter58, align 8
  %x_sq62 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter59, i128 0, i128 %i.0, i128 %j.0
  store i128 %in50, i128* %x_sq62, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body31
  %add64 = add i128 %j.0, 1
  %slt67 = icmp slt i128 %add64, %pointontangentfp2.k.read_arg_inner
  br i1 %slt67, label %loop.body31, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit
  %add70 = add i128 %i.0, 1
  %slt72 = icmp slt i128 %add70, 2
  br i1 %slt72, label %loop.body, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch68
  %mul76 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub77 = sub i128 %mul76, 1
  %mul80 = mul i128 3, %pointontangentfp2.n.read_arg_inner
  %mul82 = mul i128 2, %call
  %add83 = add i128 %mul80, %mul82
  %add84 = add i128 %add83, 3
  %call85 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointontangentfp2.n.read_arg_inner, i128 %sub77, i128 %pointontangentfp2.k.read_arg_inner, i128 %add84)
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch166, %loop.exit73
  %i.1 = phi i128 [ 0, %loop.exit73 ], [ %add168, %loop.latch166 ]
  %eq = icmp eq i128 %i.1, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body86
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter89, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 0, i128 %i.1
  %x_sq92 = load i128, i128* %array_getter91, align 4
  %mul93 = mul i128 3, %x_sq92
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %pointontangentfp2.a.read_arg_inner, i128 0, i128 0
  %a95 = load i128, i128* %array_getter94, align 4
  %add96 = add i128 %mul93, %a95
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter99 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter98, align 8
  %array_getter101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter99, i128 0, i128 0, i128 %i.1
  %right102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right102, i128 %add96, i1* @constraint.494)
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter105 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter104, align 8
  %right107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter105, i128 0, i128 0, i128 %i.1
  store i128 %add96, i128* %right107, align 4
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter110 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter109, align 8
  %array_getter112 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter110, i128 0, i128 1, i128 %i.1
  %x_sq113 = load i128, i128* %array_getter112, align 4
  %mul114 = mul i128 3, %x_sq113
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %pointontangentfp2.a.read_arg_inner, i128 0, i128 1
  %a117 = load i128, i128* %array_getter116, align 4
  %add118 = add i128 %mul114, %a117
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter121 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter120, align 8
  %array_getter123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter121, i128 0, i128 1, i128 %i.1
  %right124 = load i128, i128* %array_getter123, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right124, i128 %add118, i1* @constraint.495)
  %struct_getter126 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter127 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter126, align 8
  %right129 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter127, i128 0, i128 1, i128 %i.1
  store i128 %add118, i128* %right129, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body86
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter132 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter131, align 8
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter132, i128 0, i128 0, i128 %i.1
  %x_sq135 = load i128, i128* %array_getter134, align 4
  %mul136 = mul i128 3, %x_sq135
  %struct_getter138 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter139 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter138, align 8
  %array_getter141 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter139, i128 0, i128 0, i128 %i.1
  %right142 = load i128, i128* %array_getter141, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right142, i128 %mul136, i1* @constraint.496)
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter145 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter144, align 8
  %right147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter145, i128 0, i128 0, i128 %i.1
  store i128 %mul136, i128* %right147, align 4
  %struct_getter149 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call30, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter150 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter149, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter150, i128 0, i128 1, i128 %i.1
  %x_sq153 = load i128, i128* %array_getter152, align 4
  %mul154 = mul i128 3, %x_sq153
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter157 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter156, align 8
  %array_getter159 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter157, i128 0, i128 1, i128 %i.1
  %right160 = load i128, i128* %array_getter159, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right160, i128 %mul154, i1* @constraint.497)
  %struct_getter162 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter163 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter162, align 8
  %right165 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter163, i128 0, i128 1, i128 %i.1
  store i128 %mul154, i128* %right165, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch166

loop.latch166:                                    ; preds = %if.exit
  %add168 = add i128 %i.1, 1
  %mul171 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub172 = sub i128 %mul171, 1
  %slt173 = icmp slt i128 %add168, %sub172
  br i1 %slt173, label %loop.body86, label %loop.exit174

loop.exit174:                                     ; preds = %loop.latch166
  br label %loop.body175

loop.body175:                                     ; preds = %loop.latch216, %loop.exit174
  %i.2 = phi i128 [ 0, %loop.exit174 ], [ %add218, %loop.latch216 ]
  %in176 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in176, i128 0, i128 0, i128 0, i128 0, i128 %i.2
  %in179 = load i128, i128* %array_getter178, align 4
  %in180 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in180, i128 0, i128 1, i128 0, i128 0, i128 %i.2
  %in183 = load i128, i128* %array_getter182, align 4
  %sub184 = sub i128 %in179, %in183
  %struct_getter186 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter187 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter186, align 8
  %array_getter189 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter187, i128 0, i128 0, i128 %i.2
  %right190 = load i128, i128* %array_getter189, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right190, i128 %sub184, i1* @constraint.498)
  %struct_getter192 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter193 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter192, align 8
  %right195 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter193, i128 0, i128 0, i128 %i.2
  store i128 %sub184, i128* %right195, align 4
  %in196 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in196, i128 0, i128 0, i128 0, i128 1, i128 %i.2
  %in199 = load i128, i128* %array_getter198, align 4
  %in200 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in200, i128 0, i128 1, i128 0, i128 1, i128 %i.2
  %in203 = load i128, i128* %array_getter202, align 4
  %sub204 = sub i128 %in199, %in203
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter207 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter206, align 8
  %array_getter209 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter207, i128 0, i128 1, i128 %i.2
  %right210 = load i128, i128* %array_getter209, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right210, i128 %sub204, i1* @constraint.499)
  %struct_getter212 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter212, align 8
  %right215 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter213, i128 0, i128 1, i128 %i.2
  store i128 %sub204, i128* %right215, align 4
  br label %loop.latch216

loop.latch216:                                    ; preds = %loop.body175
  %add218 = add i128 %i.2, 1
  %slt221 = icmp slt i128 %add218, %pointontangentfp2.k.read_arg_inner
  br i1 %slt221, label %loop.body175, label %loop.exit222

loop.exit222:                                     ; preds = %loop.latch216
  %mul227 = mul i128 2, %pointontangentfp2.n.read_arg_inner
  %add228 = add i128 %mul227, 3
  %add230 = add i128 %add228, %call
  %call231 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %add230)
  br label %loop.body232

loop.body232:                                     ; preds = %loop.latch305, %loop.exit222
  %i.3 = phi i128 [ 0, %loop.exit222 ], [ %add307, %loop.latch305 ]
  %in233 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in233, i128 0, i128 0, i128 1, i128 0, i128 %i.3
  %in236 = load i128, i128* %array_getter235, align 4
  %mul237 = mul i128 2, %in236
  %struct_getter239 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter240 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter239, align 8
  %array_getter242 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter240, i128 0, i128 0, i128 %i.3
  %left243 = load i128, i128* %array_getter242, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left243, i128 %mul237, i1* @constraint.500)
  %struct_getter245 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter246 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter245, align 8
  %left248 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter246, i128 0, i128 0, i128 %i.3
  store i128 %mul237, i128* %left248, align 4
  %in249 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter251 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in249, i128 0, i128 0, i128 1, i128 1, i128 %i.3
  %in252 = load i128, i128* %array_getter251, align 4
  %mul253 = mul i128 2, %in252
  %struct_getter255 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter256 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter255, align 8
  %array_getter258 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter256, i128 0, i128 1, i128 %i.3
  %left259 = load i128, i128* %array_getter258, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left259, i128 %mul253, i1* @constraint.501)
  %struct_getter261 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter262 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter261, align 8
  %left264 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter262, i128 0, i128 1, i128 %i.3
  store i128 %mul253, i128* %left264, align 4
  %in265 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter267 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in265, i128 0, i128 0, i128 1, i128 0, i128 %i.3
  %in268 = load i128, i128* %array_getter267, align 4
  %in269 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter271 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in269, i128 0, i128 1, i128 1, i128 0, i128 %i.3
  %in272 = load i128, i128* %array_getter271, align 4
  %add273 = add i128 %in268, %in272
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter276 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter275, align 8
  %array_getter278 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter276, i128 0, i128 0, i128 %i.3
  %left279 = load i128, i128* %array_getter278, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left279, i128 %add273, i1* @constraint.502)
  %struct_getter281 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter282 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter281, align 8
  %left284 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter282, i128 0, i128 0, i128 %i.3
  store i128 %add273, i128* %left284, align 4
  %in285 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter287 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in285, i128 0, i128 0, i128 1, i128 1, i128 %i.3
  %in288 = load i128, i128* %array_getter287, align 4
  %in289 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input, align 8
  %array_getter291 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in289, i128 0, i128 1, i128 1, i128 1, i128 %i.3
  %in292 = load i128, i128* %array_getter291, align 4
  %add293 = add i128 %in288, %in292
  %struct_getter295 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter296 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter295, align 8
  %array_getter298 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter296, i128 0, i128 1, i128 %i.3
  %left299 = load i128, i128* %array_getter298, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left299, i128 %add293, i1* @constraint.503)
  %struct_getter301 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter302 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter301, align 8
  %left304 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter302, i128 0, i128 1, i128 %i.3
  store i128 %add293, i128* %left304, align 4
  br label %loop.latch305

loop.latch305:                                    ; preds = %loop.body232
  %add307 = add i128 %i.3, 1
  %slt310 = icmp slt i128 %add307, %pointontangentfp2.k.read_arg_inner
  br i1 %slt310, label %loop.body232, label %loop.exit311

loop.exit311:                                     ; preds = %loop.latch305
  br label %loop.body312

loop.body312:                                     ; preds = %loop.latch399, %loop.exit311
  %i.4 = phi i128 [ 0, %loop.exit311 ], [ %add401, %loop.latch399 ]
  %mul316 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub317 = sub i128 %mul316, 2
  %mul319 = mul i128 4, %pointontangentfp2.n.read_arg_inner
  %add321 = add i128 %mul319, %call18
  %call322 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %sub317, [256 x i128]* %pointontangentfp2.p.read_arg_inner, i128 %add321)
  %ptr_getter323 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %diff_red325 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter323, i128 0, i128 %i.4
  store %struct_template_circuit_primereduce* %call322, %struct_template_circuit_primereduce** %diff_red325, align 8
  br label %loop.body326

loop.body326:                                     ; preds = %loop.latch390, %loop.body312
  %j.1 = phi i128 [ 0, %loop.body312 ], [ %add392, %loop.latch390 ]
  %mul331 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub332 = sub i128 %mul331, 1
  %slt333 = icmp slt i128 %j.1, %sub332
  br i1 %slt333, label %if.true327, label %if.false328

if.true327:                                       ; preds = %loop.body326
  %struct_getter335 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter336 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter335, align 8
  %array_getter339 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter336, i128 0, i128 %i.4, i128 %j.1
  %right340 = load i128, i128* %array_getter339, align 4
  %struct_getter342 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call231, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter343 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter342, align 8
  %array_getter346 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter343, i128 0, i128 %i.4, i128 %j.1
  %left347 = load i128, i128* %array_getter346, align 4
  %sub348 = sub i128 %right340, %left347
  %diff_red349 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter351 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red349, i128 0, i128 %i.4
  %diff_red352 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter351, align 8
  %struct_getter353 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red352, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter353, align 8
  %array_getter355 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %j.1
  %diff_red356 = load i128, i128* %array_getter355, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red356, i128 %sub348, i1* @constraint.504)
  %ptr_getter357 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter359 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter357, i128 0, i128 %i.4
  %diff_red360 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter359, align 8
  %struct_getter361 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red360, i32 0, i32 5
  %primereduce.in.read_input_outter362 = load [256 x i128]*, [256 x i128]** %struct_getter361, align 8
  %diff_red364 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter362, i128 0, i128 %j.1
  store i128 %sub348, i128* %diff_red364, align 4
  br label %if.exit389

if.false328:                                      ; preds = %loop.body326
  %struct_getter366 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call85, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter367 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter366, align 8
  %array_getter370 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter367, i128 0, i128 %i.4, i128 %j.1
  %right371 = load i128, i128* %array_getter370, align 4
  %diff_red372 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter374 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red372, i128 0, i128 %i.4
  %diff_red375 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter374, align 8
  %struct_getter376 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red375, i32 0, i32 5
  %primereduce.in.read_input_outter377 = load [256 x i128]*, [256 x i128]** %struct_getter376, align 8
  %array_getter379 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter377, i128 0, i128 %j.1
  %diff_red380 = load i128, i128* %array_getter379, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red380, i128 %right371, i1* @constraint.505)
  %ptr_getter381 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter383 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter381, i128 0, i128 %i.4
  %diff_red384 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter383, align 8
  %struct_getter385 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red384, i32 0, i32 5
  %primereduce.in.read_input_outter386 = load [256 x i128]*, [256 x i128]** %struct_getter385, align 8
  %diff_red388 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter386, i128 0, i128 %j.1
  store i128 %right371, i128* %diff_red388, align 4
  br label %if.exit389

if.exit389:                                       ; preds = %if.false328, %if.true327
  br label %loop.latch390

loop.latch390:                                    ; preds = %if.exit389
  %add392 = add i128 %j.1, 1
  %mul395 = mul i128 3, %pointontangentfp2.k.read_arg_inner
  %sub396 = sub i128 %mul395, 2
  %slt397 = icmp slt i128 %add392, %sub396
  br i1 %slt397, label %loop.body326, label %loop.exit398

loop.exit398:                                     ; preds = %loop.latch390
  br label %loop.latch399

loop.latch399:                                    ; preds = %loop.exit398
  %add401 = add i128 %i.4, 1
  %slt403 = icmp slt i128 %add401, 2
  br i1 %slt403, label %loop.body312, label %loop.exit404

loop.exit404:                                     ; preds = %loop.latch399
  br label %loop.body405

loop.body405:                                     ; preds = %loop.latch449, %loop.exit404
  %i.5 = phi i128 [ 0, %loop.exit404 ], [ %add451, %loop.latch449 ]
  %mul409 = mul i128 4, %pointontangentfp2.n.read_arg_inner
  %add411 = add i128 %mul409, %call18
  %call413 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %add411, [256 x i128]* %pointontangentfp2.p.read_arg_inner)
  %ptr_getter414 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %constraint416 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter414, i128 0, i128 %i.5
  store %struct_template_circuit_signedcheckcarrymodtozero* %call413, %struct_template_circuit_signedcheckcarrymodtozero** %constraint416, align 8
  br label %loop.body417

loop.body417:                                     ; preds = %loop.latch442, %loop.body405
  %j.2 = phi i128 [ 0, %loop.body405 ], [ %add444, %loop.latch442 ]
  %diff_red418 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter420 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red418, i128 0, i128 %i.5
  %diff_red421 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter420, align 8
  %struct_getter422 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red421, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter422, align 8
  %array_getter424 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %j.2
  %diff_red425 = load i128, i128* %array_getter424, align 4
  %constraint426 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %array_getter428 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint426, i128 0, i128 %i.5
  %constraint429 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter428, align 8
  %struct_getter430 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint429, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter430, align 8
  %array_getter432 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %j.2
  %constraint433 = load i128, i128* %array_getter432, align 4
  call void @fn_intrinsic_utils_constraint(i128 %constraint433, i128 %diff_red425, i1* @constraint.506)
  %ptr_getter434 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint, align 8
  %array_getter436 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter434, i128 0, i128 %i.5
  %constraint437 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter436, align 8
  %struct_getter438 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint437, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter439 = load [256 x i128]*, [256 x i128]** %struct_getter438, align 8
  %constraint441 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter439, i128 0, i128 %j.2
  store i128 %diff_red425, i128* %constraint441, align 4
  br label %loop.latch442

loop.latch442:                                    ; preds = %loop.body417
  %add444 = add i128 %j.2, 1
  %slt447 = icmp slt i128 %add444, %pointontangentfp2.k.read_arg_inner
  br i1 %slt447, label %loop.body417, label %loop.exit448

loop.exit448:                                     ; preds = %loop.latch442
  br label %loop.latch449

loop.latch449:                                    ; preds = %loop.exit448
  %add451 = add i128 %i.5, 1
  %slt453 = icmp slt i128 %add451, 2
  br i1 %slt453, label %loop.body405, label %loop.exit454

loop.exit454:                                     ; preds = %loop.latch449
  br label %arraydim

arraydim:                                         ; preds = %loop.exit454
  %ptr_cast = bitcast [256 x [256 x [256 x [256 x i128]]]]** %pointontangentfp2.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 2, i128 2, i128 %pointontangentfp2.k.read_arg_inner)
  %ptr_cast455 = bitcast [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %constraint to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast455, i128 2)
  %ptr_cast456 = bitcast [256 x %struct_template_circuit_primereduce*]** %diff_red to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast456, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_pointontangentfp2* @fn_template_build_pointontangentfp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_pointontangentfp2 = alloca %struct_template_circuit_pointontangentfp2, align 8
  %pointontangentfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 0
  store i128 %0, i128* %pointontangentfp2.n.write_arg_inner, align 4
  %pointontangentfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 1
  store i128 %1, i128* %pointontangentfp2.k.write_arg_inner, align 4
  %pointontangentfp2.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointontangentfp2.a.write_arg_inner, align 8
  %pointontangentfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %pointontangentfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2
}

define void @fn_template_init_linefunctionunequal(%struct_template_circuit_linefunctionunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %0, i32 0, i32 0
  %linefunctionunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %0, i32 0, i32 1
  %linefunctionunequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %0, i32 0, i32 2
  %linefunctionunequal.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %0, i32 0, i32 3
  %linefunctionunequal.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %linefunctionunequal.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %linefunctionunequal.p.read_input_inner, [256 x [256 x [256 x i128]]]** %linefunctionunequal.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %0, i32 0, i32 4
  %linefunctionunequal.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %linefunctionunequal.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %linefunctionunequal.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequal.q.declare_input, align 8
  %idx5 = call i128 @fn_intrinsic_utils_init()
  %linefunctionunequal.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %linefunctionunequal.out.declare_output, align 8
  %reduce = alloca [256 x [256 x %struct_template_circuit_primereduce*]]*, align 8
  %reduce6 = alloca [256 x [256 x %struct_template_circuit_primereduce*]], align 8
  store [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce6, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %LOGK17 = call i128 @fn_intrinsic_utils_init()
  %LOGK28 = call i128 @fn_intrinsic_utils_init()
  %i9 = call i128 @fn_intrinsic_utils_init()
  %l10 = call i128 @fn_intrinsic_utils_init()
  %j11 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 3, %linefunctionunequal.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul)
  %mul16 = mul i128 3, %linefunctionunequal.k.read_arg_inner
  %mul18 = mul i128 %mul16, %linefunctionunequal.k.read_arg_inner
  %call19 = call i128 @log_ceil(i128 %mul18)
  %mul22 = mul i128 2, %linefunctionunequal.n.read_arg_inner
  %add = add i128 %mul22, %call
  %call24 = call %struct_template_circuit_signedlinefunctionunequalnocarry* @fn_template_build_signedlinefunctionunequalnocarry(i128 %linefunctionunequal.n.read_arg_inner, i128 %linefunctionunequal.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch54, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add56, %loop.latch54 ]
  br label %loop.body25

loop.body25:                                      ; preds = %loop.latch48, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add50, %loop.latch48 ]
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch, %loop.body25
  %idx.0 = phi i128 [ 0, %loop.body25 ], [ %add45, %loop.latch ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequal.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %P30 = load i128, i128* %array_getter, align 4
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call24, i32 0, i32 3
  %signedlinefunctionunequalnocarry.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter32, align 8
  %array_getter36 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.p.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %nocarry37 = load i128, i128* %array_getter36, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry37, i128 %P30, i1* @constraint.507)
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call24, i32 0, i32 3
  %signedlinefunctionunequalnocarry.p.read_input_outter39 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter38, align 8
  %nocarry43 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.p.read_input_outter39, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %P30, i128* %nocarry43, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body26
  %add45 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add45, %linefunctionunequal.k.read_arg_inner
  br i1 %slt, label %loop.body26, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch48

loop.latch48:                                     ; preds = %loop.exit
  %add50 = add i128 %j.0, 1
  %slt52 = icmp slt i128 %add50, 2
  br i1 %slt52, label %loop.body25, label %loop.exit53

loop.exit53:                                      ; preds = %loop.latch48
  br label %loop.latch54

loop.latch54:                                     ; preds = %loop.exit53
  %add56 = add i128 %i.0, 1
  %slt58 = icmp slt i128 %add56, 2
  br i1 %slt58, label %loop.body, label %loop.exit59

loop.exit59:                                      ; preds = %loop.latch54
  br label %loop.body60

loop.body60:                                      ; preds = %loop.latch105, %loop.exit59
  %i.1 = phi i128 [ 0, %loop.exit59 ], [ %add107, %loop.latch105 ]
  br label %loop.body61

loop.body61:                                      ; preds = %loop.latch99, %loop.body60
  %j.1 = phi i128 [ 0, %loop.body60 ], [ %add101, %loop.latch99 ]
  br label %loop.body62

loop.body62:                                      ; preds = %loop.latch93, %loop.body61
  %l.0 = phi i128 [ 0, %loop.body61 ], [ %add95, %loop.latch93 ]
  br label %loop.body63

loop.body63:                                      ; preds = %loop.latch86, %loop.body62
  %idx.1 = phi i128 [ 0, %loop.body62 ], [ %add88, %loop.latch86 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequal.q.declare_input, align 8
  %array_getter68 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 %i.1, i128 %j.1, i128 %l.0, i128 %idx.1
  %Q69 = load i128, i128* %array_getter68, align 4
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call24, i32 0, i32 4
  %signedlinefunctionunequalnocarry.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter71, align 8
  %array_getter76 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarry.q.read_input_outter, i128 0, i128 %i.1, i128 %j.1, i128 %l.0, i128 %idx.1
  %nocarry77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry77, i128 %Q69, i1* @constraint.508)
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call24, i32 0, i32 4
  %signedlinefunctionunequalnocarry.q.read_input_outter80 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter79, align 8
  %nocarry85 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarry.q.read_input_outter80, i128 0, i128 %i.1, i128 %j.1, i128 %l.0, i128 %idx.1
  store i128 %Q69, i128* %nocarry85, align 4
  br label %loop.latch86

loop.latch86:                                     ; preds = %loop.body63
  %add88 = add i128 %idx.1, 1
  %slt91 = icmp slt i128 %add88, %linefunctionunequal.k.read_arg_inner
  br i1 %slt91, label %loop.body63, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch86
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.exit92
  %add95 = add i128 %l.0, 1
  %slt97 = icmp slt i128 %add95, 2
  br i1 %slt97, label %loop.body62, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch93
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.exit98
  %add101 = add i128 %j.1, 1
  %slt103 = icmp slt i128 %add101, 6
  br i1 %slt103, label %loop.body61, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch99
  br label %loop.latch105

loop.latch105:                                    ; preds = %loop.exit104
  %add107 = add i128 %i.1, 1
  %slt109 = icmp slt i128 %add107, 2
  br i1 %slt109, label %loop.body60, label %loop.exit110

loop.exit110:                                     ; preds = %loop.latch105
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch173, %loop.exit110
  %i.2 = phi i128 [ 0, %loop.exit110 ], [ %add175, %loop.latch173 ]
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch125, %loop.body111
  %j.2 = phi i128 [ 0, %loop.body111 ], [ %add127, %loop.latch125 ]
  %sub = sub i128 %linefunctionunequal.k.read_arg_inner, 1
  %mul117 = mul i128 3, %linefunctionunequal.n.read_arg_inner
  %add119 = add i128 %mul117, %call19
  %call120 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %linefunctionunequal.n.read_arg_inner, i128 %linefunctionunequal.k.read_arg_inner, i128 %sub, [256 x i128]* %linefunctionunequal.q.read_arg_inner, i128 %add119)
  %ptr_getter121 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %reduce124 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter121, i128 0, i128 %i.2, i128 %j.2
  store %struct_template_circuit_primereduce* %call120, %struct_template_circuit_primereduce** %reduce124, align 8
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.body112
  %add127 = add i128 %j.2, 1
  %slt129 = icmp slt i128 %add127, 2
  br i1 %slt129, label %loop.body112, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  br label %loop.body131

loop.body131:                                     ; preds = %loop.latch167, %loop.exit130
  %j.3 = phi i128 [ 0, %loop.exit130 ], [ %add169, %loop.latch167 ]
  br label %loop.body132

loop.body132:                                     ; preds = %loop.latch158, %loop.body131
  %idx.2 = phi i128 [ 0, %loop.body131 ], [ %add160, %loop.latch158 ]
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call24, i32 0, i32 5
  %signedlinefunctionunequalnocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter134, align 8
  %array_getter138 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.out.read_output_outter, i128 0, i128 %i.2, i128 %j.3, i128 %idx.2
  %nocarry139 = load i128, i128* %array_getter138, align 4
  %reduce140 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce140, i128 0, i128 %i.2, i128 %j.3
  %reduce144 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter143, align 8
  %struct_getter145 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce144, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter145, align 8
  %array_getter147 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %idx.2
  %reduce148 = load i128, i128* %array_getter147, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce148, i128 %nocarry139, i1* @constraint.509)
  %ptr_getter149 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter149, i128 0, i128 %i.2, i128 %j.3
  %reduce153 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter152, align 8
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce153, i32 0, i32 5
  %primereduce.in.read_input_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %reduce157 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter155, i128 0, i128 %idx.2
  store i128 %nocarry139, i128* %reduce157, align 4
  br label %loop.latch158

loop.latch158:                                    ; preds = %loop.body132
  %add160 = add i128 %idx.2, 1
  %mul163 = mul i128 2, %linefunctionunequal.k.read_arg_inner
  %sub164 = sub i128 %mul163, 1
  %slt165 = icmp slt i128 %add160, %sub164
  br i1 %slt165, label %loop.body132, label %loop.exit166

loop.exit166:                                     ; preds = %loop.latch158
  br label %loop.latch167

loop.latch167:                                    ; preds = %loop.exit166
  %add169 = add i128 %j.3, 1
  %slt171 = icmp slt i128 %add169, 2
  br i1 %slt171, label %loop.body131, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch167
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.exit172
  %add175 = add i128 %i.2, 1
  %slt177 = icmp slt i128 %add175, 6
  br i1 %slt177, label %loop.body111, label %loop.exit178

loop.exit178:                                     ; preds = %loop.latch173
  %mul182 = mul i128 3, %linefunctionunequal.n.read_arg_inner
  %add184 = add i128 %mul182, %call19
  %call186 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %linefunctionunequal.n.read_arg_inner, i128 %linefunctionunequal.k.read_arg_inner, i128 %add184, [256 x i128]* %linefunctionunequal.q.read_arg_inner)
  br label %loop.body187

loop.body187:                                     ; preds = %loop.latch226, %loop.exit178
  %i.3 = phi i128 [ 0, %loop.exit178 ], [ %add228, %loop.latch226 ]
  br label %loop.body188

loop.body188:                                     ; preds = %loop.latch220, %loop.body187
  %j.4 = phi i128 [ 0, %loop.body187 ], [ %add222, %loop.latch220 ]
  br label %loop.body189

loop.body189:                                     ; preds = %loop.latch213, %loop.body188
  %idx.3 = phi i128 [ 0, %loop.body188 ], [ %add215, %loop.latch213 ]
  %reduce190 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter193 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce190, i128 0, i128 %i.3, i128 %j.4
  %reduce194 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter193, align 8
  %struct_getter195 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce194, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter195, align 8
  %array_getter197 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %idx.3
  %reduce198 = load i128, i128* %array_getter197, align 4
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call186, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter200, align 8
  %array_getter204 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.3, i128 %j.4, i128 %idx.3
  %carry205 = load i128, i128* %array_getter204, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry205, i128 %reduce198, i1* @constraint.510)
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call186, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter208 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter207, align 8
  %carry212 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter208, i128 0, i128 %i.3, i128 %j.4, i128 %idx.3
  store i128 %reduce198, i128* %carry212, align 4
  br label %loop.latch213

loop.latch213:                                    ; preds = %loop.body189
  %add215 = add i128 %idx.3, 1
  %slt218 = icmp slt i128 %add215, %linefunctionunequal.k.read_arg_inner
  br i1 %slt218, label %loop.body189, label %loop.exit219

loop.exit219:                                     ; preds = %loop.latch213
  br label %loop.latch220

loop.latch220:                                    ; preds = %loop.exit219
  %add222 = add i128 %j.4, 1
  %slt224 = icmp slt i128 %add222, 2
  br i1 %slt224, label %loop.body188, label %loop.exit225

loop.exit225:                                     ; preds = %loop.latch220
  br label %loop.latch226

loop.latch226:                                    ; preds = %loop.exit225
  %add228 = add i128 %i.3, 1
  %slt230 = icmp slt i128 %add228, 6
  br i1 %slt230, label %loop.body187, label %loop.exit231

loop.exit231:                                     ; preds = %loop.latch226
  br label %loop.body232

loop.body232:                                     ; preds = %loop.latch266, %loop.exit231
  %i.4 = phi i128 [ 0, %loop.exit231 ], [ %add268, %loop.latch266 ]
  br label %loop.body233

loop.body233:                                     ; preds = %loop.latch260, %loop.body232
  %j.5 = phi i128 [ 0, %loop.body232 ], [ %add262, %loop.latch260 ]
  br label %loop.body234

loop.body234:                                     ; preds = %loop.latch253, %loop.body233
  %idx.4 = phi i128 [ 0, %loop.body233 ], [ %add255, %loop.latch253 ]
  %struct_getter236 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call186, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter236, align 8
  %array_getter240 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.4, i128 %j.5, i128 %idx.4
  %carry241 = load i128, i128* %array_getter240, align 4
  %out242 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequal.out.declare_output, align 8
  %array_getter246 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out242, i128 0, i128 %i.4, i128 %j.5, i128 %idx.4
  %out247 = load i128, i128* %array_getter246, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out247, i128 %carry241, i1* @constraint.511)
  %ptr_getter248 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequal.out.declare_output, align 8
  %out252 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter248, i128 0, i128 %i.4, i128 %j.5, i128 %idx.4
  store i128 %carry241, i128* %out252, align 4
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.body234
  %add255 = add i128 %idx.4, 1
  %slt258 = icmp slt i128 %add255, %linefunctionunequal.k.read_arg_inner
  br i1 %slt258, label %loop.body234, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch253
  br label %loop.latch260

loop.latch260:                                    ; preds = %loop.exit259
  %add262 = add i128 %j.5, 1
  %slt264 = icmp slt i128 %add262, 2
  br i1 %slt264, label %loop.body233, label %loop.exit265

loop.exit265:                                     ; preds = %loop.latch260
  br label %loop.latch266

loop.latch266:                                    ; preds = %loop.exit265
  %add268 = add i128 %i.4, 1
  %slt270 = icmp slt i128 %add268, 6
  br i1 %slt270, label %loop.body232, label %loop.exit271

loop.exit271:                                     ; preds = %loop.latch266
  br label %arraydim

arraydim:                                         ; preds = %loop.exit271
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %linefunctionunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %linefunctionunequal.k.read_arg_inner)
  %ptr_cast272 = bitcast [256 x [256 x [256 x i128]]]** %linefunctionunequal.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast272, i128 2, i128 2, i128 %linefunctionunequal.k.read_arg_inner)
  %ptr_cast273 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %linefunctionunequal.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast273, i128 2, i128 6, i128 2, i128 %linefunctionunequal.k.read_arg_inner)
  %ptr_cast274 = bitcast [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast274, i128 6, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %out275 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionunequal.out.declare_output, align 8
  %linefunctionunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out275, [256 x [256 x [256 x i128]]]** %linefunctionunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_linefunctionunequal* @fn_template_build_linefunctionunequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_linefunctionunequal = alloca %struct_template_circuit_linefunctionunequal, align 8
  %linefunctionunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %struct_template_circuit_linefunctionunequal, i32 0, i32 0
  store i128 %0, i128* %linefunctionunequal.n.write_arg_inner, align 4
  %linefunctionunequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %struct_template_circuit_linefunctionunequal, i32 0, i32 1
  store i128 %1, i128* %linefunctionunequal.k.write_arg_inner, align 4
  %linefunctionunequal.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionunequal, %struct_template_circuit_linefunctionunequal* %struct_template_circuit_linefunctionunequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %linefunctionunequal.q.write_arg_inner, align 8
  ret %struct_template_circuit_linefunctionunequal* %struct_template_circuit_linefunctionunequal
}

define void @fn_template_init_pointonline(%struct_template_circuit_pointonline* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 0
  %pointonline.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 1
  %pointonline.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 2
  %pointonline.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 3
  %pointonline.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %pointonline.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %LOGK4 = call i128 @fn_intrinsic_utils_init()
  %i5 = call i128 @fn_intrinsic_utils_init()
  %LOGK26 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %pointonline.k.read_arg_inner)
  %mul = mul i128 3, %pointonline.k.read_arg_inner
  %mul10 = mul i128 %mul, %pointonline.k.read_arg_inner
  %call11 = call i128 @log_ceil(i128 %mul10)
  %mul12 = mul i128 3, %pointonline.n.read_arg_inner
  %add = add i128 %mul12, %call11
  %slt = icmp slt i128 %add, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul17 = mul i128 2, %pointonline.n.read_arg_inner
  %add19 = add i128 %mul17, %call
  %add20 = add i128 %add19, 1
  %call21 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %add20)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add57, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0, i128 1, i128 %i.0
  %in23 = load i128, i128* %array_getter, align 4
  %in24 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter26 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in24, i128 0, i128 2, i128 1, i128 %i.0
  %in27 = load i128, i128* %array_getter26, align 4
  %add28 = add i128 %in23, %in27
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call21, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %left33 = load i128, i128* %array_getter32, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left33, i128 %add28, i1* @constraint.512)
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call21, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter35 = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %left37 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter35, i128 0, i128 %i.0
  store i128 %add28, i128* %left37, align 4
  %in38 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in38, i128 0, i128 1, i128 0, i128 %i.0
  %in41 = load i128, i128* %array_getter40, align 4
  %in42 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in42, i128 0, i128 0, i128 0, i128 %i.0
  %in45 = load i128, i128* %array_getter44, align 4
  %sub = sub i128 %in41, %in45
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call21, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %left50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left50, i128 %sub, i1* @constraint.513)
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call21, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter53 = load [256 x i128]*, [256 x i128]** %struct_getter52, align 8
  %left55 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter53, i128 0, i128 %i.0
  store i128 %sub, i128* %left55, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add57 = add i128 %i.0, 1
  %slt60 = icmp slt i128 %add57, %pointonline.k.read_arg_inner
  br i1 %slt60, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul64 = mul i128 2, %pointonline.n.read_arg_inner
  %add66 = add i128 %mul64, %call
  %call67 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %add66)
  br label %loop.body68

loop.body68:                                      ; preds = %loop.latch109, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add111, %loop.latch109 ]
  %in69 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter71 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in69, i128 0, i128 1, i128 1, i128 %i.1
  %in72 = load i128, i128* %array_getter71, align 4
  %in73 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter75 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in73, i128 0, i128 0, i128 1, i128 %i.1
  %in76 = load i128, i128* %array_getter75, align 4
  %sub77 = sub i128 %in72, %in76
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call67, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter80, i128 0, i128 %i.1
  %right83 = load i128, i128* %array_getter82, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right83, i128 %sub77, i1* @constraint.514)
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call67, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter86 = load [256 x i128]*, [256 x i128]** %struct_getter85, align 8
  %right88 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter86, i128 0, i128 %i.1
  store i128 %sub77, i128* %right88, align 4
  %in89 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in89, i128 0, i128 0, i128 0, i128 %i.1
  %in92 = load i128, i128* %array_getter91, align 4
  %in93 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in93, i128 0, i128 2, i128 0, i128 %i.1
  %in96 = load i128, i128* %array_getter95, align 4
  %sub97 = sub i128 %in92, %in96
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call67, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter100 = load [256 x i128]*, [256 x i128]** %struct_getter99, align 8
  %array_getter102 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter100, i128 0, i128 %i.1
  %right103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right103, i128 %sub97, i1* @constraint.515)
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call67, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter106 = load [256 x i128]*, [256 x i128]** %struct_getter105, align 8
  %right108 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter106, i128 0, i128 %i.1
  store i128 %sub97, i128* %right108, align 4
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.body68
  %add111 = add i128 %i.1, 1
  %slt114 = icmp slt i128 %add111, %pointonline.k.read_arg_inner
  br i1 %slt114, label %loop.body68, label %loop.exit115

loop.exit115:                                     ; preds = %loop.latch109
  %sub119 = sub i128 %pointonline.k.read_arg_inner, 1
  %mul121 = mul i128 3, %pointonline.n.read_arg_inner
  %add123 = add i128 %mul121, %call11
  %call124 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %sub119, [256 x i128]* %pointonline.p.read_arg_inner, i128 %add123)
  br label %loop.body125

loop.body125:                                     ; preds = %loop.latch148, %loop.exit115
  %i.2 = phi i128 [ 0, %loop.exit115 ], [ %add150, %loop.latch148 ]
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call21, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter127, align 8
  %array_getter129 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.2
  %left130 = load i128, i128* %array_getter129, align 4
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call67, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter133 = load [256 x i128]*, [256 x i128]** %struct_getter132, align 8
  %array_getter135 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter133, i128 0, i128 %i.2
  %right136 = load i128, i128* %array_getter135, align 4
  %sub137 = sub i128 %left130, %right136
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call124, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter139, align 8
  %array_getter141 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %diff_red142 = load i128, i128* %array_getter141, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red142, i128 %sub137, i1* @constraint.516)
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call124, i32 0, i32 5
  %primereduce.in.read_input_outter145 = load [256 x i128]*, [256 x i128]** %struct_getter144, align 8
  %diff_red147 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter145, i128 0, i128 %i.2
  store i128 %sub137, i128* %diff_red147, align 4
  br label %loop.latch148

loop.latch148:                                    ; preds = %loop.body125
  %add150 = add i128 %i.2, 1
  %mul153 = mul i128 2, %pointonline.k.read_arg_inner
  %sub154 = sub i128 %mul153, 1
  %slt155 = icmp slt i128 %add150, %sub154
  br i1 %slt155, label %loop.body125, label %loop.exit156

loop.exit156:                                     ; preds = %loop.latch148
  %mul160 = mul i128 3, %pointonline.n.read_arg_inner
  %add162 = add i128 %mul160, %call11
  %call164 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %add162, [256 x i128]* %pointonline.p.read_arg_inner)
  br label %loop.body165

loop.body165:                                     ; preds = %loop.latch181, %loop.exit156
  %i.3 = phi i128 [ 0, %loop.exit156 ], [ %add183, %loop.latch181 ]
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call124, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter167, align 8
  %array_getter169 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.3
  %diff_red170 = load i128, i128* %array_getter169, align 4
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call164, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter172, align 8
  %array_getter174 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.3
  %diff_mod175 = load i128, i128* %array_getter174, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_mod175, i128 %diff_red170, i1* @constraint.517)
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call164, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter178 = load [256 x i128]*, [256 x i128]** %struct_getter177, align 8
  %diff_mod180 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter178, i128 0, i128 %i.3
  store i128 %diff_red170, i128* %diff_mod180, align 4
  br label %loop.latch181

loop.latch181:                                    ; preds = %loop.body165
  %add183 = add i128 %i.3, 1
  %slt186 = icmp slt i128 %add183, %pointonline.k.read_arg_inner
  br i1 %slt186, label %loop.body165, label %loop.exit187

loop.exit187:                                     ; preds = %loop.latch181
  br label %arraydim

arraydim:                                         ; preds = %loop.exit187
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %pointonline.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 3, i128 2, i128 %pointonline.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_pointonline* @fn_template_build_pointonline(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_pointonline = alloca %struct_template_circuit_pointonline, align 8
  %pointonline.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %struct_template_circuit_pointonline, i32 0, i32 0
  store i128 %0, i128* %pointonline.n.write_arg_inner, align 4
  %pointonline.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %struct_template_circuit_pointonline, i32 0, i32 1
  store i128 %1, i128* %pointonline.k.write_arg_inner, align 4
  %pointonline.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %struct_template_circuit_pointonline, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointonline.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointonline* %struct_template_circuit_pointonline
}

define void @fn_template_init_pointoncurve(%struct_template_circuit_pointoncurve* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 0
  %pointoncurve.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 1
  %pointoncurve.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 2
  %pointoncurve.a.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 3
  %pointoncurve.b.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 4
  %pointoncurve.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 5
  %pointoncurve.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %pointoncurve.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %LOGK27 = call i128 @fn_intrinsic_utils_init()
  %LOGK8 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %pointoncurve.k.read_arg_inner)
  %mul = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul13 = mul i128 %pointoncurve.k.read_arg_inner, %pointoncurve.k.read_arg_inner
  %add = add i128 %mul13, 1
  %mul14 = mul i128 %sub, %add
  %call15 = call i128 @log_ceil(i128 %mul14)
  %mul16 = mul i128 4, %pointoncurve.n.read_arg_inner
  %add18 = add i128 %mul16, %call15
  %slt = icmp slt i128 %add18, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul22 = mul i128 2, %pointoncurve.n.read_arg_inner
  %add24 = add i128 %mul22, %call
  %call25 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %add24)
  %mul29 = mul i128 2, %pointoncurve.n.read_arg_inner
  %add31 = add i128 %mul29, %call
  %call32 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %add31)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add89, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 0, i128 %i.0
  %in34 = load i128, i128* %array_getter, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call25, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %x_sq39 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq39, i128 %in34, i1* @constraint.518)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call25, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter41 = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %x_sq43 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter41, i128 0, i128 %i.0
  store i128 %in34, i128* %x_sq43, align 4
  %in44 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in44, i128 0, i128 0, i128 %i.0
  %in47 = load i128, i128* %array_getter46, align 4
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call25, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %x_sq52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_sq52, i128 %in47, i1* @constraint.519)
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call25, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter55 = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %x_sq57 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter55, i128 0, i128 %i.0
  store i128 %in47, i128* %x_sq57, align 4
  %in58 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in58, i128 0, i128 1, i128 %i.0
  %in61 = load i128, i128* %array_getter60, align 4
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call32, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter64, i128 0, i128 %i.0
  %y_sq67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq67, i128 %in61, i1* @constraint.520)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call32, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter70 = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %y_sq72 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter70, i128 0, i128 %i.0
  store i128 %in61, i128* %y_sq72, align 4
  %in73 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter75 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in73, i128 0, i128 1, i128 %i.0
  %in76 = load i128, i128* %array_getter75, align 4
  %struct_getter78 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call32, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter79 = load [256 x i128]*, [256 x i128]** %struct_getter78, align 8
  %array_getter81 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter79, i128 0, i128 %i.0
  %y_sq82 = load i128, i128* %array_getter81, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq82, i128 %in76, i1* @constraint.521)
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call32, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter85 = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %y_sq87 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter85, i128 0, i128 %i.0
  store i128 %in76, i128* %y_sq87, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add89 = add i128 %i.0, 1
  %slt92 = icmp slt i128 %add89, %pointoncurve.k.read_arg_inner
  br i1 %slt92, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul95 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub96 = sub i128 %mul95, 1
  %mul99 = mul i128 3, %pointoncurve.n.read_arg_inner
  %mul101 = mul i128 2, %call
  %add102 = add i128 %mul99, %mul101
  %call103 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %pointoncurve.n.read_arg_inner, i128 %sub96, i128 %pointoncurve.k.read_arg_inner, i128 %add102)
  br label %loop.body104

loop.body104:                                     ; preds = %loop.latch120, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add122, %loop.latch120 ]
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call25, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter106, align 8
  %array_getter108 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %x_sq109 = load i128, i128* %array_getter108, align 4
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter111, align 8
  %array_getter113 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.1
  %x_cu114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu114, i128 %x_sq109, i1* @constraint.522)
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter117 = load [256 x i128]*, [256 x i128]** %struct_getter116, align 8
  %x_cu119 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter117, i128 0, i128 %i.1
  store i128 %x_sq109, i128* %x_cu119, align 4
  br label %loop.latch120

loop.latch120:                                    ; preds = %loop.body104
  %add122 = add i128 %i.1, 1
  %mul125 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub126 = sub i128 %mul125, 1
  %slt127 = icmp slt i128 %add122, %sub126
  br i1 %slt127, label %loop.body104, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch120
  br label %loop.body129

loop.body129:                                     ; preds = %loop.latch144, %loop.exit128
  %i.2 = phi i128 [ 0, %loop.exit128 ], [ %add146, %loop.latch144 ]
  %in130 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter132 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in130, i128 0, i128 0, i128 %i.2
  %in133 = load i128, i128* %array_getter132, align 4
  %struct_getter135 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter135, align 8
  %array_getter137 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.2
  %x_cu138 = load i128, i128* %array_getter137, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_cu138, i128 %in133, i1* @constraint.523)
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter141 = load [256 x i128]*, [256 x i128]** %struct_getter140, align 8
  %x_cu143 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter141, i128 0, i128 %i.2
  store i128 %in133, i128* %x_cu143, align 4
  br label %loop.latch144

loop.latch144:                                    ; preds = %loop.body129
  %add146 = add i128 %i.2, 1
  %slt149 = icmp slt i128 %add146, %pointoncurve.k.read_arg_inner
  br i1 %slt149, label %loop.body129, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch144
  %mul154 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub155 = sub i128 %mul154, 2
  %mul157 = mul i128 4, %pointoncurve.n.read_arg_inner
  %mul159 = mul i128 3, %call
  %add160 = add i128 %mul157, %mul159
  %add161 = add i128 %add160, 1
  %call162 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %sub155, [256 x i128]* %pointoncurve.p.read_arg_inner, i128 %add161)
  br label %loop.body163

loop.body163:                                     ; preds = %loop.latch234, %loop.exit150
  %i.3 = phi i128 [ 0, %loop.exit150 ], [ %add236, %loop.latch234 ]
  %eq = icmp eq i128 %i.3, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body163
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter166, align 8
  %array_getter168 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.3
  %x_cu169 = load i128, i128* %array_getter168, align 4
  %in170 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter172 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in170, i128 0, i128 0, i128 %i.3
  %in173 = load i128, i128* %array_getter172, align 4
  %mul174 = mul i128 %pointoncurve.a.read_arg_inner, %in173
  %add175 = add i128 %x_cu169, %mul174
  %add176 = add i128 %add175, %pointoncurve.b.read_arg_inner
  %struct_getter178 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter178, align 8
  %array_getter180 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.3
  %cu_red181 = load i128, i128* %array_getter180, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red181, i128 %add176, i1* @constraint.524)
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 5
  %primereduce.in.read_input_outter184 = load [256 x i128]*, [256 x i128]** %struct_getter183, align 8
  %cu_red186 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter184, i128 0, i128 %i.3
  store i128 %add176, i128* %cu_red186, align 4
  br label %if.exit233

if.false:                                         ; preds = %loop.body163
  %slt191 = icmp slt i128 %i.3, %pointoncurve.k.read_arg_inner
  br i1 %slt191, label %if.true187, label %if.false188

if.true187:                                       ; preds = %if.false
  %struct_getter193 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter194 = load [256 x i128]*, [256 x i128]** %struct_getter193, align 8
  %array_getter196 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter194, i128 0, i128 %i.3
  %x_cu197 = load i128, i128* %array_getter196, align 4
  %in199 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %pointoncurve.in.declare_input, align 8
  %array_getter201 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in199, i128 0, i128 0, i128 %i.3
  %in202 = load i128, i128* %array_getter201, align 4
  %mul203 = mul i128 %pointoncurve.a.read_arg_inner, %in202
  %add204 = add i128 %x_cu197, %mul203
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 5
  %primereduce.in.read_input_outter207 = load [256 x i128]*, [256 x i128]** %struct_getter206, align 8
  %array_getter209 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter207, i128 0, i128 %i.3
  %cu_red210 = load i128, i128* %array_getter209, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red210, i128 %add204, i1* @constraint.525)
  %struct_getter212 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 5
  %primereduce.in.read_input_outter213 = load [256 x i128]*, [256 x i128]** %struct_getter212, align 8
  %cu_red215 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter213, i128 0, i128 %i.3
  store i128 %add204, i128* %cu_red215, align 4
  br label %if.exit

if.false188:                                      ; preds = %if.false
  %struct_getter217 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call103, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter218 = load [256 x i128]*, [256 x i128]** %struct_getter217, align 8
  %array_getter220 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter218, i128 0, i128 %i.3
  %x_cu221 = load i128, i128* %array_getter220, align 4
  %struct_getter223 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 5
  %primereduce.in.read_input_outter224 = load [256 x i128]*, [256 x i128]** %struct_getter223, align 8
  %array_getter226 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter224, i128 0, i128 %i.3
  %cu_red227 = load i128, i128* %array_getter226, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cu_red227, i128 %x_cu221, i1* @constraint.526)
  %struct_getter229 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 5
  %primereduce.in.read_input_outter230 = load [256 x i128]*, [256 x i128]** %struct_getter229, align 8
  %cu_red232 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter230, i128 0, i128 %i.3
  store i128 %x_cu221, i128* %cu_red232, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false188, %if.true187
  br label %if.exit233

if.exit233:                                       ; preds = %if.exit, %if.true
  br label %loop.latch234

loop.latch234:                                    ; preds = %if.exit233
  %add236 = add i128 %i.3, 1
  %mul239 = mul i128 3, %pointoncurve.k.read_arg_inner
  %sub240 = sub i128 %mul239, 2
  %slt241 = icmp slt i128 %add236, %sub240
  br i1 %slt241, label %loop.body163, label %loop.exit242

loop.exit242:                                     ; preds = %loop.latch234
  %sub246 = sub i128 %pointoncurve.k.read_arg_inner, 1
  %mul249 = mul i128 3, %pointoncurve.n.read_arg_inner
  %mul251 = mul i128 2, %call
  %add252 = add i128 %mul249, %mul251
  %add253 = add i128 %add252, 1
  %call254 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %sub246, [256 x i128]* %pointoncurve.p.read_arg_inner, i128 %add253)
  br label %loop.body255

loop.body255:                                     ; preds = %loop.latch273, %loop.exit242
  %i.4 = phi i128 [ 0, %loop.exit242 ], [ %add275, %loop.latch273 ]
  %struct_getter257 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call32, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter258 = load [256 x i128]*, [256 x i128]** %struct_getter257, align 8
  %array_getter260 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter258, i128 0, i128 %i.4
  %y_sq261 = load i128, i128* %array_getter260, align 4
  %struct_getter263 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call254, i32 0, i32 5
  %primereduce.in.read_input_outter264 = load [256 x i128]*, [256 x i128]** %struct_getter263, align 8
  %array_getter266 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter264, i128 0, i128 %i.4
  %y_sq_red267 = load i128, i128* %array_getter266, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_sq_red267, i128 %y_sq261, i1* @constraint.527)
  %struct_getter269 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call254, i32 0, i32 5
  %primereduce.in.read_input_outter270 = load [256 x i128]*, [256 x i128]** %struct_getter269, align 8
  %y_sq_red272 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter270, i128 0, i128 %i.4
  store i128 %y_sq261, i128* %y_sq_red272, align 4
  br label %loop.latch273

loop.latch273:                                    ; preds = %loop.body255
  %add275 = add i128 %i.4, 1
  %mul278 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub279 = sub i128 %mul278, 1
  %slt280 = icmp slt i128 %add275, %sub279
  br i1 %slt280, label %loop.body255, label %loop.exit281

loop.exit281:                                     ; preds = %loop.latch273
  %mul285 = mul i128 4, %pointoncurve.n.read_arg_inner
  %add287 = add i128 %mul285, %call15
  %call289 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %add287, [256 x i128]* %pointoncurve.p.read_arg_inner)
  br label %loop.body290

loop.body290:                                     ; preds = %loop.latch313, %loop.exit281
  %i.5 = phi i128 [ 0, %loop.exit281 ], [ %add315, %loop.latch313 ]
  %struct_getter292 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call162, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter292, align 8
  %array_getter294 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.5
  %cu_red295 = load i128, i128* %array_getter294, align 4
  %struct_getter297 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call254, i32 0, i32 6
  %primereduce.out.read_output_outter298 = load [256 x i128]*, [256 x i128]** %struct_getter297, align 8
  %array_getter300 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter298, i128 0, i128 %i.5
  %y_sq_red301 = load i128, i128* %array_getter300, align 4
  %sub302 = sub i128 %cu_red295, %y_sq_red301
  %struct_getter304 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call289, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter304, align 8
  %array_getter306 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.5
  %constraint307 = load i128, i128* %array_getter306, align 4
  call void @fn_intrinsic_utils_constraint(i128 %constraint307, i128 %sub302, i1* @constraint.528)
  %struct_getter309 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call289, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter310 = load [256 x i128]*, [256 x i128]** %struct_getter309, align 8
  %constraint312 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter310, i128 0, i128 %i.5
  store i128 %sub302, i128* %constraint312, align 4
  br label %loop.latch313

loop.latch313:                                    ; preds = %loop.body290
  %add315 = add i128 %i.5, 1
  %slt318 = icmp slt i128 %add315, %pointoncurve.k.read_arg_inner
  br i1 %slt318, label %loop.body290, label %loop.exit319

loop.exit319:                                     ; preds = %loop.latch313
  br label %arraydim

arraydim:                                         ; preds = %loop.exit319
  %ptr_cast = bitcast [256 x [256 x i128]]** %pointoncurve.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %pointoncurve.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_pointoncurve* @fn_template_build_pointoncurve(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_pointoncurve = alloca %struct_template_circuit_pointoncurve, align 8
  %pointoncurve.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 0
  store i128 %0, i128* %pointoncurve.n.write_arg_inner, align 4
  %pointoncurve.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 1
  store i128 %1, i128* %pointoncurve.k.write_arg_inner, align 4
  %pointoncurve.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 2
  store i128 %2, i128* %pointoncurve.a.write_arg_inner, align 4
  %pointoncurve.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 3
  store i128 %3, i128* %pointoncurve.b.write_arg_inner, align 4
  %pointoncurve.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %pointoncurve.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve
}

define [256 x i128]* @find_Fp_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %ka11 = call i128 @fn_intrinsic_utils_init()
  %l13 = call i128 @fn_intrinsic_utils_init()
  %i14 = call i128 @fn_intrinsic_utils_init()
  %call = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 0, [256 x i128]* %2, [256 x i128]* %3)
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array16 = alloca [256 x i128], align 8
  %uniform_array17 = alloca [256 x i128], align 8
  %uniform_array18 = alloca [256 x i128], align 8
  %uniform_array19 = alloca [256 x i128], align 8
  %uniform_array20 = alloca [256 x i128], align 8
  %uniform_array21 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 1, i128 %i.0
  %amodp24 = load i128, i128* %array_getter, align 4
  %a26 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %amodp24, i128* %a26, align 4
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %p30 = load i128, i128* %array_getter29, align 4
  %b33 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %i.0
  store i128 %p30, i128* %b33, align 4
  %x36 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array17, i128 0, i128 %i.0
  store i128 0, i128* %x36, align 4
  %y39 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %i.0
  store i128 0, i128* %y39, align 4
  %u42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 %i.0
  store i128 0, i128* %u42, align 4
  %v45 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array20, i128 0, i128 %i.0
  store i128 0, i128* %v45, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %y50 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 0
  store i128 1, i128* %y50, align 4
  %u52 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 0
  store i128 1, i128* %u52, align 4
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch210, %loop.exit
  %l.0 = phi i128 [ 0, %loop.exit ], [ %add212, %loop.latch210 ]
  br label %loop.body54

loop.body54:                                      ; preds = %loop.latch61, %loop.body53
  %ka.0 = phi i128 [ 0, %loop.body53 ], [ %ka.1, %loop.latch61 ]
  %i.1 = phi i128 [ 0, %loop.body53 ], [ %add63, %loop.latch61 ]
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %a58 = load i128, i128* %array_getter57, align 4
  %ne = icmp ne i128 %a58, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body54
  %add60 = add i128 %i.1, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body54
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %ka.1 = phi i128 [ %add60, %if.true ], [ %ka.0, %if.false ]
  br label %loop.latch61

loop.latch61:                                     ; preds = %if.exit
  %add63 = add i128 %i.1, 1
  %slt66 = icmp slt i128 %add63, %1
  br i1 %slt66, label %loop.body54, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch61
  %eq = icmp eq i128 %ka.1, 0
  br i1 %eq, label %if.true68, label %if.false69

if.true68:                                        ; preds = %loop.exit67
  br label %loop.body71

if.false69:                                       ; preds = %loop.exit67
  br label %if.exit87

loop.body71:                                      ; preds = %loop.latch79, %if.true68
  %i.2 = phi i128 [ 0, %if.true68 ], [ %add81, %loop.latch79 ]
  %array_getter74 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array17, i128 0, i128 %i.2
  %x75 = load i128, i128* %array_getter74, align 4
  %ret78 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array21, i128 0, i128 %i.2
  store i128 %x75, i128* %ret78, align 4
  br label %loop.latch79

loop.latch79:                                     ; preds = %loop.body71
  %add81 = add i128 %i.2, 1
  %slt84 = icmp slt i128 %add81, %1
  br i1 %slt84, label %loop.body71, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch79
  ret [256 x i128]* %uniform_array21

if.exit87:                                        ; preds = %if.false69
  %sub = sub i128 %1, %ka.1
  %call94 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %ka.1, i128 %sub, [256 x i128]* %uniform_array16, [256 x i128]* %uniform_array)
  %uniform_array95 = alloca [256 x i128], align 8
  br label %loop.body96

loop.body96:                                      ; preds = %loop.latch104, %if.exit87
  %i.3 = phi i128 [ 0, %if.exit87 ], [ %add106, %loop.latch104 ]
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call94, i128 0, i128 0, i128 %i.3
  %r100 = load i128, i128* %array_getter99, align 4
  %q103 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array95, i128 0, i128 %i.3
  store i128 %r100, i128* %q103, align 4
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.body96
  %add106 = add i128 %i.3, 1
  %sub110 = sub i128 %1, %ka.1
  %add111 = add i128 %sub110, 1
  %slt112 = icmp slt i128 %add106, %add111
  br i1 %slt112, label %loop.body96, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch104
  %sub116 = sub i128 %1, %ka.1
  %add117 = add i128 %sub116, 1
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch122, %loop.exit113
  %i.4 = phi i128 [ %add117, %loop.exit113 ], [ %add124, %loop.latch122 ]
  %q121 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array95, i128 0, i128 %i.4
  store i128 0, i128* %q121, align 4
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.body118
  %add124 = add i128 %i.4, 1
  %slt127 = icmp slt i128 %add124, %1
  br i1 %slt127, label %loop.body118, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch122
  %call137 = call [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array19, [256 x i128]* %uniform_array95, [256 x i128]* %3)
  %call139 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array17, [256 x i128]* %call137, [256 x i128]* %3)
  %call148 = call [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array20, [256 x i128]* %uniform_array95, [256 x i128]* %3)
  %call150 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array18, [256 x i128]* %call148, [256 x i128]* %3)
  br label %loop.body151

loop.body151:                                     ; preds = %loop.latch203, %loop.exit128
  %i.5 = phi i128 [ 0, %loop.exit128 ], [ %add205, %loop.latch203 ]
  %array_getter154 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  %a155 = load i128, i128* %array_getter154, align 4
  %b158 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %i.5
  store i128 %a155, i128* %b158, align 4
  %slt163 = icmp slt i128 %i.5, %ka.1
  br i1 %slt163, label %if.true159, label %if.false160

if.true159:                                       ; preds = %loop.body151
  %array_getter166 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call94, i128 0, i128 1, i128 %i.5
  %r167 = load i128, i128* %array_getter166, align 4
  %a170 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 %r167, i128* %a170, align 4
  br label %if.exit174

if.false160:                                      ; preds = %loop.body151
  %a173 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 0, i128* %a173, align 4
  br label %if.exit174

if.exit174:                                       ; preds = %if.false160, %if.true159
  %array_getter177 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 %i.5
  %u178 = load i128, i128* %array_getter177, align 4
  %x181 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array17, i128 0, i128 %i.5
  store i128 %u178, i128* %x181, align 4
  %array_getter184 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array20, i128 0, i128 %i.5
  %v185 = load i128, i128* %array_getter184, align 4
  %y188 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %i.5
  store i128 %v185, i128* %y188, align 4
  %array_getter191 = getelementptr inbounds [256 x i128], [256 x i128]* %call139, i128 0, i128 %i.5
  %newu192 = load i128, i128* %array_getter191, align 4
  %u195 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 %i.5
  store i128 %newu192, i128* %u195, align 4
  %array_getter198 = getelementptr inbounds [256 x i128], [256 x i128]* %call150, i128 0, i128 %i.5
  %newv199 = load i128, i128* %array_getter198, align 4
  %v202 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array20, i128 0, i128 %i.5
  store i128 %newv199, i128* %v202, align 4
  br label %loop.latch203

loop.latch203:                                    ; preds = %if.exit174
  %add205 = add i128 %i.5, 1
  %slt208 = icmp slt i128 %add205, %1
  br i1 %slt208, label %loop.body151, label %loop.exit209

loop.exit209:                                     ; preds = %loop.latch203
  br label %loop.latch210

loop.latch210:                                    ; preds = %loop.exit209
  %add212 = add i128 %l.0, 1
  %slt214 = icmp slt i128 %add212, 1000
  br i1 %slt214, label %loop.body53, label %loop.exit215

loop.exit215:                                     ; preds = %loop.latch210
  call void @fn_intrinsic_utils_assert(i1 false)
  ret [256 x i128]* %uniform_array21
}

define void @fn_template_init_signedfp2multiplynocarrycompressthree(%struct_template_circuit_signedfp2multiplynocarrycompressthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 0
  %signedfp2multiplynocarrycompressthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 1
  %signedfp2multiplynocarrycompressthree.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 2
  %signedfp2multiplynocarrycompressthree.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 3
  %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 4
  %signedfp2multiplynocarrycompressthree.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 5
  %signedfp2multiplynocarrycompressthree.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %signedfp2multiplynocarrycompressthree.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.a.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 6
  %signedfp2multiplynocarrycompressthree.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %signedfp2multiplynocarrycompressthree.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.b.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.b.declare_input, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 7
  %signedfp2multiplynocarrycompressthree.c.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter7, align 8
  %signedfp2multiplynocarrycompressthree.c.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.c.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.c.declare_input, align 8
  %LOGK8 = call i128 @fn_intrinsic_utils_init()
  %signedfp2multiplynocarrycompressthree.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.declare_output, align 8
  %i9 = call i128 @fn_intrinsic_utils_init()
  %idx10 = call i128 @fn_intrinsic_utils_init()
  %j11 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner)
  %mul = mul i128 2, %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner
  %add = add i128 %mul, %call
  %add18 = add i128 %add, 1
  %call19 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp2multiplynocarrycompressthree.n.read_arg_inner, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner, i128 %add18)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch55, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add57, %loop.latch55 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add52, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i.0, i128 %idx.0
  %a23 = load i128, i128* %array_getter, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call19, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter25, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab29, i128 %a23, i1* @constraint.529)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call19, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter31 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter30, align 8
  %ab34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter31, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a23, i128* %ab34, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.b.declare_input, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i.0, i128 %idx.0
  %b38 = load i128, i128* %array_getter37, align 4
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call19, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter40, align 8
  %array_getter43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab44 = load i128, i128* %array_getter43, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab44, i128 %b38, i1* @constraint.530)
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call19, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter47 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter46, align 8
  %ab50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter47, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b38, i128* %ab50, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body20
  %add52 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add52, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  br i1 %slt, label %loop.body20, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.exit
  %add57 = add i128 %i.0, 1
  %slt59 = icmp slt i128 %add57, 2
  br i1 %slt59, label %loop.body, label %loop.exit60

loop.exit60:                                      ; preds = %loop.latch55
  %mul63 = mul i128 2, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub = sub i128 %mul63, 1
  %mul66 = mul i128 3, %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner
  %mul68 = mul i128 2, %call
  %add69 = add i128 %mul66, %mul68
  %add70 = add i128 %add69, 2
  %call71 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %signedfp2multiplynocarrycompressthree.n.read_arg_inner, i128 %sub, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner, i128 %add70)
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch125, %loop.exit60
  %i.1 = phi i128 [ 0, %loop.exit60 ], [ %add127, %loop.latch125 ]
  br label %loop.body73

loop.body73:                                      ; preds = %loop.latch92, %loop.body72
  %idx.1 = phi i128 [ 0, %loop.body72 ], [ %add94, %loop.latch92 ]
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call19, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter75, align 8
  %array_getter78 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.1
  %ab79 = load i128, i128* %array_getter78, align 4
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call71, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter81, align 8
  %array_getter84 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.1, i128 %idx.1
  %abc85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_utils_constraint(i128 %abc85, i128 %ab79, i1* @constraint.531)
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call71, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter88 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter87, align 8
  %abc91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter88, i128 0, i128 %i.1, i128 %idx.1
  store i128 %ab79, i128* %abc91, align 4
  br label %loop.latch92

loop.latch92:                                     ; preds = %loop.body73
  %add94 = add i128 %idx.1, 1
  %mul97 = mul i128 2, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub98 = sub i128 %mul97, 1
  %slt99 = icmp slt i128 %add94, %sub98
  br i1 %slt99, label %loop.body73, label %loop.exit100

loop.exit100:                                     ; preds = %loop.latch92
  br label %loop.body101

loop.body101:                                     ; preds = %loop.latch118, %loop.exit100
  %idx.2 = phi i128 [ 0, %loop.exit100 ], [ %add120, %loop.latch118 ]
  %c = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.c.declare_input, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %c, i128 0, i128 %i.1, i128 %idx.2
  %c105 = load i128, i128* %array_getter104, align 4
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call71, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter107, align 8
  %array_getter110 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.1, i128 %idx.2
  %abc111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_utils_constraint(i128 %abc111, i128 %c105, i1* @constraint.532)
  %struct_getter113 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call71, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter114 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter113, align 8
  %abc117 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter114, i128 0, i128 %i.1, i128 %idx.2
  store i128 %c105, i128* %abc117, align 4
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.body101
  %add120 = add i128 %idx.2, 1
  %slt123 = icmp slt i128 %add120, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  br i1 %slt123, label %loop.body101, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.exit124
  %add127 = add i128 %i.1, 1
  %slt129 = icmp slt i128 %add127, 2
  br i1 %slt129, label %loop.body72, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  %mul134 = mul i128 2, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub135 = sub i128 %mul134, 2
  %mul137 = mul i128 3, %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner
  %add139 = add i128 %mul137, %signedfp2multiplynocarrycompressthree.n.read_arg_inner
  %mul141 = mul i128 3, %call
  %add142 = add i128 %add139, %mul141
  %add143 = add i128 %add142, 3
  %call144 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %signedfp2multiplynocarrycompressthree.n.read_arg_inner, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner, i128 %sub135, [256 x i128]* %signedfp2multiplynocarrycompressthree.p.read_arg_inner, i128 %add143)
  br label %loop.body145

loop.body145:                                     ; preds = %loop.latch174, %loop.exit130
  %i.2 = phi i128 [ 0, %loop.exit130 ], [ %add176, %loop.latch174 ]
  br label %loop.body146

loop.body146:                                     ; preds = %loop.latch165, %loop.body145
  %j.0 = phi i128 [ 0, %loop.body145 ], [ %add167, %loop.latch165 ]
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call71, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter148, align 8
  %array_getter151 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.2, i128 %j.0
  %abc152 = load i128, i128* %array_getter151, align 4
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call144, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter154, align 8
  %array_getter157 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.2, i128 %j.0
  %compress158 = load i128, i128* %array_getter157, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress158, i128 %abc152, i1* @constraint.533)
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call144, i32 0, i32 5
  %fp2compress.in.read_input_outter161 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter160, align 8
  %compress164 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter161, i128 0, i128 %i.2, i128 %j.0
  store i128 %abc152, i128* %compress164, align 4
  br label %loop.latch165

loop.latch165:                                    ; preds = %loop.body146
  %add167 = add i128 %j.0, 1
  %mul170 = mul i128 3, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub171 = sub i128 %mul170, 2
  %slt172 = icmp slt i128 %add167, %sub171
  br i1 %slt172, label %loop.body146, label %loop.exit173

loop.exit173:                                     ; preds = %loop.latch165
  br label %loop.latch174

loop.latch174:                                    ; preds = %loop.exit173
  %add176 = add i128 %i.2, 1
  %slt178 = icmp slt i128 %add176, 2
  br i1 %slt178, label %loop.body145, label %loop.exit179

loop.exit179:                                     ; preds = %loop.latch174
  br label %loop.body180

loop.body180:                                     ; preds = %loop.latch204, %loop.exit179
  %i.3 = phi i128 [ 0, %loop.exit179 ], [ %add206, %loop.latch204 ]
  br label %loop.body181

loop.body181:                                     ; preds = %loop.latch197, %loop.body180
  %j.1 = phi i128 [ 0, %loop.body180 ], [ %add199, %loop.latch197 ]
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call144, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter183, align 8
  %array_getter186 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.3, i128 %j.1
  %compress187 = load i128, i128* %array_getter186, align 4
  %out188 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.declare_output, align 8
  %array_getter191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out188, i128 0, i128 %i.3, i128 %j.1
  %out192 = load i128, i128* %array_getter191, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out192, i128 %compress187, i1* @constraint.534)
  %ptr_getter193 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.declare_output, align 8
  %out196 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter193, i128 0, i128 %i.3, i128 %j.1
  store i128 %compress187, i128* %out196, align 4
  br label %loop.latch197

loop.latch197:                                    ; preds = %loop.body181
  %add199 = add i128 %j.1, 1
  %slt202 = icmp slt i128 %add199, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  br i1 %slt202, label %loop.body181, label %loop.exit203

loop.exit203:                                     ; preds = %loop.latch197
  br label %loop.latch204

loop.latch204:                                    ; preds = %loop.exit203
  %add206 = add i128 %i.3, 1
  %slt208 = icmp slt i128 %add206, 2
  br i1 %slt208, label %loop.body180, label %loop.exit209

loop.exit209:                                     ; preds = %loop.latch204
  br label %arraydim

arraydim:                                         ; preds = %loop.exit209
  %ptr_cast = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner)
  %ptr_cast210 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast210, i128 2, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner)
  %ptr_cast211 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast211, i128 2, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner)
  %ptr_cast212 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.c.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast212, i128 2, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.declare_output, align 8
  %signedfp2multiplynocarrycompressthree.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 8
  store [256 x [256 x i128]]* %out213, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarrycompressthree* @fn_template_build_signedfp2multiplynocarrycompressthree(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_signedfp2multiplynocarrycompressthree = alloca %struct_template_circuit_signedfp2multiplynocarrycompressthree, align 8
  %signedfp2multiplynocarrycompressthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarrycompressthree.n.write_arg_inner, align 4
  %signedfp2multiplynocarrycompressthree.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarrycompressthree.k.write_arg_inner, align 4
  %signedfp2multiplynocarrycompressthree.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %signedfp2multiplynocarrycompressthree.p.write_arg_inner, align 8
  %signedfp2multiplynocarrycompressthree.m_in.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 3
  store i128 %3, i128* %signedfp2multiplynocarrycompressthree.m_in.write_arg_inner, align 4
  %signedfp2multiplynocarrycompressthree.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 4
  store i128 %4, i128* %signedfp2multiplynocarrycompressthree.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree
}

define void @fn_template_init_signedfp2multiplynocarrycompress(%struct_template_circuit_signedfp2multiplynocarrycompress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 0
  %signedfp2multiplynocarrycompress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 1
  %signedfp2multiplynocarrycompress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 2
  %signedfp2multiplynocarrycompress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 3
  %signedfp2multiplynocarrycompress.m_in.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 4
  %signedfp2multiplynocarrycompress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %signedfp2multiplynocarrycompress.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %signedfp2multiplynocarrycompress.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_inner, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.b.declare_input, align 8
  %LOGK17 = call i128 @fn_intrinsic_utils_init()
  %i8 = call i128 @fn_intrinsic_utils_init()
  %j9 = call i128 @fn_intrinsic_utils_init()
  %idx10 = call i128 @fn_intrinsic_utils_init()
  %signedfp2multiplynocarrycompress.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.declare_output, align 8
  %LOGK211 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul)
  %mul16 = mul i128 2, %signedfp2multiplynocarrycompress.m_in.read_arg_inner
  %add = add i128 %mul16, %call
  %call18 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp2multiplynocarrycompress.n.read_arg_inner, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch54, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add56, %loop.latch54 ]
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add51, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i.0, i128 %idx.0
  %a22 = load i128, i128* %array_getter, align 4
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter24, align 8
  %array_getter27 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab28, i128 %a22, i1* @constraint.535)
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter30 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter29, align 8
  %ab33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter30, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a22, i128* %ab33, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.b.declare_input, align 8
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i.0, i128 %idx.0
  %b37 = load i128, i128* %array_getter36, align 4
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter39, align 8
  %array_getter42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab43 = load i128, i128* %array_getter42, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ab43, i128 %b37, i1* @constraint.536)
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter46 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter45, align 8
  %ab49 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter46, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b37, i128* %ab49, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body19
  %add51 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add51, %signedfp2multiplynocarrycompress.k.read_arg_inner
  br i1 %slt, label %loop.body19, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch54

loop.latch54:                                     ; preds = %loop.exit
  %add56 = add i128 %i.0, 1
  %slt58 = icmp slt i128 %add56, 2
  br i1 %slt58, label %loop.body, label %loop.exit59

loop.exit59:                                      ; preds = %loop.latch54
  %mul61 = mul i128 2, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %mul63 = mul i128 %mul61, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %call64 = call i128 @log_ceil(i128 %mul63)
  %sub = sub i128 %signedfp2multiplynocarrycompress.k.read_arg_inner, 1
  %mul69 = mul i128 2, %signedfp2multiplynocarrycompress.m_in.read_arg_inner
  %add71 = add i128 %mul69, %signedfp2multiplynocarrycompress.n.read_arg_inner
  %add73 = add i128 %add71, %call64
  %call74 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %signedfp2multiplynocarrycompress.n.read_arg_inner, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner, i128 %sub, [256 x i128]* %signedfp2multiplynocarrycompress.p.read_arg_inner, i128 %add73)
  br label %loop.body75

loop.body75:                                      ; preds = %loop.latch104, %loop.exit59
  %i.1 = phi i128 [ 0, %loop.exit59 ], [ %add106, %loop.latch104 ]
  br label %loop.body76

loop.body76:                                      ; preds = %loop.latch95, %loop.body75
  %j.0 = phi i128 [ 0, %loop.body75 ], [ %add97, %loop.latch95 ]
  %struct_getter78 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call18, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter78, align 8
  %array_getter81 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %j.0
  %ab82 = load i128, i128* %array_getter81, align 4
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call74, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter84, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %compress88 = load i128, i128* %array_getter87, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress88, i128 %ab82, i1* @constraint.537)
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call74, i32 0, i32 5
  %fp2compress.in.read_input_outter91 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter90, align 8
  %compress94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter91, i128 0, i128 %i.1, i128 %j.0
  store i128 %ab82, i128* %compress94, align 4
  br label %loop.latch95

loop.latch95:                                     ; preds = %loop.body76
  %add97 = add i128 %j.0, 1
  %mul100 = mul i128 2, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %sub101 = sub i128 %mul100, 1
  %slt102 = icmp slt i128 %add97, %sub101
  br i1 %slt102, label %loop.body76, label %loop.exit103

loop.exit103:                                     ; preds = %loop.latch95
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.exit103
  %add106 = add i128 %i.1, 1
  %slt108 = icmp slt i128 %add106, 2
  br i1 %slt108, label %loop.body75, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch104
  br label %loop.body110

loop.body110:                                     ; preds = %loop.latch134, %loop.exit109
  %i.2 = phi i128 [ 0, %loop.exit109 ], [ %add136, %loop.latch134 ]
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch127, %loop.body110
  %j.1 = phi i128 [ 0, %loop.body110 ], [ %add129, %loop.latch127 ]
  %struct_getter113 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call74, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter113, align 8
  %array_getter116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1
  %compress117 = load i128, i128* %array_getter116, align 4
  %out118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.declare_output, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out118, i128 0, i128 %i.2, i128 %j.1
  %out122 = load i128, i128* %array_getter121, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out122, i128 %compress117, i1* @constraint.538)
  %ptr_getter123 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.declare_output, align 8
  %out126 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter123, i128 0, i128 %i.2, i128 %j.1
  store i128 %compress117, i128* %out126, align 4
  br label %loop.latch127

loop.latch127:                                    ; preds = %loop.body111
  %add129 = add i128 %j.1, 1
  %slt132 = icmp slt i128 %add129, %signedfp2multiplynocarrycompress.k.read_arg_inner
  br i1 %slt132, label %loop.body111, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch127
  br label %loop.latch134

loop.latch134:                                    ; preds = %loop.exit133
  %add136 = add i128 %i.2, 1
  %slt138 = icmp slt i128 %add136, 2
  br i1 %slt138, label %loop.body110, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch134
  br label %arraydim

arraydim:                                         ; preds = %loop.exit139
  %ptr_cast = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner)
  %ptr_cast140 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast140, i128 2, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner)
  %ptr_cast141 = bitcast [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast141, i128 2, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out142 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.declare_output, align 8
  %signedfp2multiplynocarrycompress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %out142, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_signedfp2multiplynocarrycompress = alloca %struct_template_circuit_signedfp2multiplynocarrycompress, align 8
  %signedfp2multiplynocarrycompress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarrycompress.n.write_arg_inner, align 4
  %signedfp2multiplynocarrycompress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarrycompress.k.write_arg_inner, align 4
  %signedfp2multiplynocarrycompress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %signedfp2multiplynocarrycompress.p.write_arg_inner, align 8
  %signedfp2multiplynocarrycompress.m_in.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 3
  store i128 %3, i128* %signedfp2multiplynocarrycompress.m_in.write_arg_inner, align 4
  %signedfp2multiplynocarrycompress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 4
  store i128 %4, i128* %signedfp2multiplynocarrycompress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress
}

define void @fn_template_init_linefunctionequalfp2(%struct_template_circuit_linefunctionequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %0, i32 0, i32 0
  %linefunctionequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %0, i32 0, i32 1
  %linefunctionequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %0, i32 0, i32 2
  %linefunctionequalfp2.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %0, i32 0, i32 3
  %linefunctionequalfp2.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %linefunctionequalfp2.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.p.read_input_inner, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %0, i32 0, i32 4
  %linefunctionequalfp2.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %linefunctionequalfp2.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %linefunctionequalfp2.q.read_input_inner, [256 x [256 x i128]]** %linefunctionequalfp2.q.declare_input, align 8
  %idx5 = call i128 @fn_intrinsic_utils_init()
  %i6 = call i128 @fn_intrinsic_utils_init()
  %linefunctionequalfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.out.declare_output, align 8
  %LOGK27 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %LOGK39 = call i128 @fn_intrinsic_utils_init()
  %reduce = alloca [256 x [256 x %struct_template_circuit_primereduce*]]*, align 8
  %reduce10 = alloca [256 x [256 x %struct_template_circuit_primereduce*]], align 8
  store [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce10, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %mul = mul i128 12, %linefunctionequalfp2.k.read_arg_inner
  %mul15 = mul i128 %mul, %linefunctionequalfp2.k.read_arg_inner
  %add = add i128 %mul15, 1
  %call = call i128 @log_ceil(i128 %add)
  %mul18 = mul i128 3, %linefunctionequalfp2.n.read_arg_inner
  %add20 = add i128 %mul18, %call
  %call21 = call %struct_template_circuit_signedlinefunctionequalnocarryfp2* @fn_template_build_signedlinefunctionequalnocarryfp2(i128 %linefunctionequalfp2.n.read_arg_inner, i128 %linefunctionequalfp2.k.read_arg_inner, i128 %add20)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch51, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add53, %loop.latch51 ]
  br label %loop.body22

loop.body22:                                      ; preds = %loop.latch45, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add47, %loop.latch45 ]
  br label %loop.body23

loop.body23:                                      ; preds = %loop.latch, %loop.body22
  %idx.0 = phi i128 [ 0, %loop.body22 ], [ %add42, %loop.latch ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %P27 = load i128, i128* %array_getter, align 4
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %call21, i32 0, i32 3
  %signedlinefunctionequalnocarryfp2.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter29, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionequalnocarryfp2.p.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %nocarry34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry34, i128 %P27, i1* @constraint.539)
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %call21, i32 0, i32 3
  %signedlinefunctionequalnocarryfp2.p.read_input_outter36 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter35, align 8
  %nocarry40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionequalnocarryfp2.p.read_input_outter36, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %P27, i128* %nocarry40, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body23
  %add42 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add42, %linefunctionequalfp2.k.read_arg_inner
  br i1 %slt, label %loop.body23, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch45

loop.latch45:                                     ; preds = %loop.exit
  %add47 = add i128 %j.0, 1
  %slt49 = icmp slt i128 %add47, 2
  br i1 %slt49, label %loop.body22, label %loop.exit50

loop.exit50:                                      ; preds = %loop.latch45
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.exit50
  %add53 = add i128 %i.0, 1
  %slt55 = icmp slt i128 %add53, 2
  br i1 %slt55, label %loop.body, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  br label %loop.body57

loop.body57:                                      ; preds = %loop.latch82, %loop.exit56
  %i.1 = phi i128 [ 0, %loop.exit56 ], [ %add84, %loop.latch82 ]
  br label %loop.body58

loop.body58:                                      ; preds = %loop.latch75, %loop.body57
  %idx.1 = phi i128 [ 0, %loop.body57 ], [ %add77, %loop.latch75 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %linefunctionequalfp2.q.declare_input, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 %i.1, i128 %idx.1
  %Q62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %call21, i32 0, i32 4
  %signedlinefunctionequalnocarryfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter64, align 8
  %array_getter67 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionequalnocarryfp2.q.read_input_outter, i128 0, i128 %i.1, i128 %idx.1
  %nocarry68 = load i128, i128* %array_getter67, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry68, i128 %Q62, i1* @constraint.540)
  %struct_getter70 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %call21, i32 0, i32 4
  %signedlinefunctionequalnocarryfp2.q.read_input_outter71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter70, align 8
  %nocarry74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionequalnocarryfp2.q.read_input_outter71, i128 0, i128 %i.1, i128 %idx.1
  store i128 %Q62, i128* %nocarry74, align 4
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.body58
  %add77 = add i128 %idx.1, 1
  %slt80 = icmp slt i128 %add77, %linefunctionequalfp2.k.read_arg_inner
  br i1 %slt80, label %loop.body58, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch75
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.exit81
  %add84 = add i128 %i.1, 1
  %slt86 = icmp slt i128 %add84, 2
  br i1 %slt86, label %loop.body57, label %loop.exit87

loop.exit87:                                      ; preds = %loop.latch82
  %mul89 = mul i128 2, %linefunctionequalfp2.k.read_arg_inner
  %sub = sub i128 %mul89, 1
  %mul90 = mul i128 %sub, 12
  %mul92 = mul i128 %mul90, %linefunctionequalfp2.k.read_arg_inner
  %mul94 = mul i128 %mul92, %linefunctionequalfp2.k.read_arg_inner
  %add95 = add i128 %mul94, 1
  %call96 = call i128 @log_ceil(i128 %add95)
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch161, %loop.exit87
  %i.2 = phi i128 [ 0, %loop.exit87 ], [ %add163, %loop.latch161 ]
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch113, %loop.body97
  %j.1 = phi i128 [ 0, %loop.body97 ], [ %add115, %loop.latch113 ]
  %mul102 = mul i128 2, %linefunctionequalfp2.k.read_arg_inner
  %sub103 = sub i128 %mul102, 2
  %mul105 = mul i128 4, %linefunctionequalfp2.n.read_arg_inner
  %add107 = add i128 %mul105, %call96
  %call108 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %linefunctionequalfp2.n.read_arg_inner, i128 %linefunctionequalfp2.k.read_arg_inner, i128 %sub103, [256 x i128]* %linefunctionequalfp2.q.read_arg_inner, i128 %add107)
  %ptr_getter109 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %reduce112 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter109, i128 0, i128 %i.2, i128 %j.1
  store %struct_template_circuit_primereduce* %call108, %struct_template_circuit_primereduce** %reduce112, align 8
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.body98
  %add115 = add i128 %j.1, 1
  %slt117 = icmp slt i128 %add115, 2
  br i1 %slt117, label %loop.body98, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch113
  br label %loop.body119

loop.body119:                                     ; preds = %loop.latch155, %loop.exit118
  %j.2 = phi i128 [ 0, %loop.exit118 ], [ %add157, %loop.latch155 ]
  br label %loop.body120

loop.body120:                                     ; preds = %loop.latch146, %loop.body119
  %idx.2 = phi i128 [ 0, %loop.body119 ], [ %add148, %loop.latch146 ]
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarryfp2, %struct_template_circuit_signedlinefunctionequalnocarryfp2* %call21, i32 0, i32 5
  %signedlinefunctionequalnocarryfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter122, align 8
  %array_getter126 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionequalnocarryfp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %nocarry127 = load i128, i128* %array_getter126, align 4
  %reduce128 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter131 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce128, i128 0, i128 %i.2, i128 %j.2
  %reduce132 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter131, align 8
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce132, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter133, align 8
  %array_getter135 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %idx.2
  %reduce136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce136, i128 %nocarry127, i1* @constraint.541)
  %ptr_getter137 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter140 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter137, i128 0, i128 %i.2, i128 %j.2
  %reduce141 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter140, align 8
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce141, i32 0, i32 5
  %primereduce.in.read_input_outter143 = load [256 x i128]*, [256 x i128]** %struct_getter142, align 8
  %reduce145 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter143, i128 0, i128 %idx.2
  store i128 %nocarry127, i128* %reduce145, align 4
  br label %loop.latch146

loop.latch146:                                    ; preds = %loop.body120
  %add148 = add i128 %idx.2, 1
  %mul151 = mul i128 3, %linefunctionequalfp2.k.read_arg_inner
  %sub152 = sub i128 %mul151, 2
  %slt153 = icmp slt i128 %add148, %sub152
  br i1 %slt153, label %loop.body120, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch146
  br label %loop.latch155

loop.latch155:                                    ; preds = %loop.exit154
  %add157 = add i128 %j.2, 1
  %slt159 = icmp slt i128 %add157, 2
  br i1 %slt159, label %loop.body119, label %loop.exit160

loop.exit160:                                     ; preds = %loop.latch155
  br label %loop.latch161

loop.latch161:                                    ; preds = %loop.exit160
  %add163 = add i128 %i.2, 1
  %slt165 = icmp slt i128 %add163, 6
  br i1 %slt165, label %loop.body97, label %loop.exit166

loop.exit166:                                     ; preds = %loop.latch161
  %mul170 = mul i128 4, %linefunctionequalfp2.n.read_arg_inner
  %add172 = add i128 %mul170, %call96
  %call174 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %linefunctionequalfp2.n.read_arg_inner, i128 %linefunctionequalfp2.k.read_arg_inner, i128 %add172, [256 x i128]* %linefunctionequalfp2.q.read_arg_inner)
  br label %loop.body175

loop.body175:                                     ; preds = %loop.latch214, %loop.exit166
  %i.3 = phi i128 [ 0, %loop.exit166 ], [ %add216, %loop.latch214 ]
  br label %loop.body176

loop.body176:                                     ; preds = %loop.latch208, %loop.body175
  %j.3 = phi i128 [ 0, %loop.body175 ], [ %add210, %loop.latch208 ]
  br label %loop.body177

loop.body177:                                     ; preds = %loop.latch201, %loop.body176
  %idx.3 = phi i128 [ 0, %loop.body176 ], [ %add203, %loop.latch201 ]
  %reduce178 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter181 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce178, i128 0, i128 %i.3, i128 %j.3
  %reduce182 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter181, align 8
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce182, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter183, align 8
  %array_getter185 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %idx.3
  %reduce186 = load i128, i128* %array_getter185, align 4
  %struct_getter188 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call174, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter188, align 8
  %array_getter192 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.3, i128 %j.3, i128 %idx.3
  %carry193 = load i128, i128* %array_getter192, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry193, i128 %reduce186, i1* @constraint.542)
  %struct_getter195 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call174, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter196 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter195, align 8
  %carry200 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter196, i128 0, i128 %i.3, i128 %j.3, i128 %idx.3
  store i128 %reduce186, i128* %carry200, align 4
  br label %loop.latch201

loop.latch201:                                    ; preds = %loop.body177
  %add203 = add i128 %idx.3, 1
  %slt206 = icmp slt i128 %add203, %linefunctionequalfp2.k.read_arg_inner
  br i1 %slt206, label %loop.body177, label %loop.exit207

loop.exit207:                                     ; preds = %loop.latch201
  br label %loop.latch208

loop.latch208:                                    ; preds = %loop.exit207
  %add210 = add i128 %j.3, 1
  %slt212 = icmp slt i128 %add210, 2
  br i1 %slt212, label %loop.body176, label %loop.exit213

loop.exit213:                                     ; preds = %loop.latch208
  br label %loop.latch214

loop.latch214:                                    ; preds = %loop.exit213
  %add216 = add i128 %i.3, 1
  %slt218 = icmp slt i128 %add216, 6
  br i1 %slt218, label %loop.body175, label %loop.exit219

loop.exit219:                                     ; preds = %loop.latch214
  br label %loop.body220

loop.body220:                                     ; preds = %loop.latch254, %loop.exit219
  %i.4 = phi i128 [ 0, %loop.exit219 ], [ %add256, %loop.latch254 ]
  br label %loop.body221

loop.body221:                                     ; preds = %loop.latch248, %loop.body220
  %j.4 = phi i128 [ 0, %loop.body220 ], [ %add250, %loop.latch248 ]
  br label %loop.body222

loop.body222:                                     ; preds = %loop.latch241, %loop.body221
  %idx.4 = phi i128 [ 0, %loop.body221 ], [ %add243, %loop.latch241 ]
  %struct_getter224 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call174, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter224, align 8
  %array_getter228 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  %carry229 = load i128, i128* %array_getter228, align 4
  %out230 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.out.declare_output, align 8
  %array_getter234 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out230, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  %out235 = load i128, i128* %array_getter234, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out235, i128 %carry229, i1* @constraint.543)
  %ptr_getter236 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.out.declare_output, align 8
  %out240 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter236, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  store i128 %carry229, i128* %out240, align 4
  br label %loop.latch241

loop.latch241:                                    ; preds = %loop.body222
  %add243 = add i128 %idx.4, 1
  %slt246 = icmp slt i128 %add243, %linefunctionequalfp2.k.read_arg_inner
  br i1 %slt246, label %loop.body222, label %loop.exit247

loop.exit247:                                     ; preds = %loop.latch241
  br label %loop.latch248

loop.latch248:                                    ; preds = %loop.exit247
  %add250 = add i128 %j.4, 1
  %slt252 = icmp slt i128 %add250, 2
  br i1 %slt252, label %loop.body221, label %loop.exit253

loop.exit253:                                     ; preds = %loop.latch248
  br label %loop.latch254

loop.latch254:                                    ; preds = %loop.exit253
  %add256 = add i128 %i.4, 1
  %slt258 = icmp slt i128 %add256, 6
  br i1 %slt258, label %loop.body220, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch254
  br label %arraydim

arraydim:                                         ; preds = %loop.exit259
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %linefunctionequalfp2.k.read_arg_inner)
  %ptr_cast260 = bitcast [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast260, i128 2, i128 2, i128 %linefunctionequalfp2.k.read_arg_inner)
  %ptr_cast261 = bitcast [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast261, i128 6, i128 4)
  %ptr_cast262 = bitcast [256 x [256 x i128]]** %linefunctionequalfp2.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast262, i128 2, i128 %linefunctionequalfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out263 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.out.declare_output, align 8
  %linefunctionequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out263, [256 x [256 x [256 x i128]]]** %linefunctionequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_linefunctionequalfp2* @fn_template_build_linefunctionequalfp2(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_linefunctionequalfp2 = alloca %struct_template_circuit_linefunctionequalfp2, align 8
  %linefunctionequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %struct_template_circuit_linefunctionequalfp2, i32 0, i32 0
  store i128 %0, i128* %linefunctionequalfp2.n.write_arg_inner, align 4
  %linefunctionequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %struct_template_circuit_linefunctionequalfp2, i32 0, i32 1
  store i128 %1, i128* %linefunctionequalfp2.k.write_arg_inner, align 4
  %linefunctionequalfp2.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %struct_template_circuit_linefunctionequalfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %linefunctionequalfp2.q.write_arg_inner, align 8
  ret %struct_template_circuit_linefunctionequalfp2* %struct_template_circuit_linefunctionequalfp2
}

define void @fn_template_init_linefunctionequal(%struct_template_circuit_linefunctionequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %0, i32 0, i32 0
  %linefunctionequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %0, i32 0, i32 1
  %linefunctionequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %0, i32 0, i32 2
  %linefunctionequal.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %0, i32 0, i32 3
  %linefunctionequal.p.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %linefunctionequal.p.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %linefunctionequal.p.read_input_inner, [256 x [256 x i128]]** %linefunctionequal.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %0, i32 0, i32 4
  %linefunctionequal.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %linefunctionequal.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %linefunctionequal.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionequal.q.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %LOGK26 = call i128 @fn_intrinsic_utils_init()
  %reduce = alloca [256 x [256 x %struct_template_circuit_primereduce*]]*, align 8
  %reduce7 = alloca [256 x [256 x %struct_template_circuit_primereduce*]], align 8
  store [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce7, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %idx8 = call i128 @fn_intrinsic_utils_init()
  %linefunctionequal.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %linefunctionequal.out.declare_output, align 8
  %l9 = call i128 @fn_intrinsic_utils_init()
  %j10 = call i128 @fn_intrinsic_utils_init()
  %LOGK311 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 3, %linefunctionequal.k.read_arg_inner
  %add = add i128 %mul, 1
  %mul16 = mul i128 %add, %linefunctionequal.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul16)
  %mul19 = mul i128 3, %linefunctionequal.n.read_arg_inner
  %add21 = add i128 %mul19, %call
  %call22 = call %struct_template_circuit_signedlinefunctionequalnocarry* @fn_template_build_signedlinefunctionequalnocarry(i128 %linefunctionequal.n.read_arg_inner, i128 %linefunctionequal.k.read_arg_inner, i128 %add21)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch42, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add44, %loop.latch42 ]
  br label %loop.body23

loop.body23:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add39, %loop.latch ]
  %P = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %linefunctionequal.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %i.0, i128 %idx.0
  %P26 = load i128, i128* %array_getter, align 4
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %call22, i32 0, i32 3
  %signedlinefunctionequalnocarry.p.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter28, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionequalnocarry.p.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %nocarry32 = load i128, i128* %array_getter31, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry32, i128 %P26, i1* @constraint.544)
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %call22, i32 0, i32 3
  %signedlinefunctionequalnocarry.p.read_input_outter34 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter33, align 8
  %nocarry37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionequalnocarry.p.read_input_outter34, i128 0, i128 %i.0, i128 %idx.0
  store i128 %P26, i128* %nocarry37, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body23
  %add39 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add39, %linefunctionequal.k.read_arg_inner
  br i1 %slt, label %loop.body23, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch42

loop.latch42:                                     ; preds = %loop.exit
  %add44 = add i128 %i.0, 1
  %slt46 = icmp slt i128 %add44, 2
  br i1 %slt46, label %loop.body, label %loop.exit47

loop.exit47:                                      ; preds = %loop.latch42
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch93, %loop.exit47
  %i.1 = phi i128 [ 0, %loop.exit47 ], [ %add95, %loop.latch93 ]
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch87, %loop.body48
  %j.0 = phi i128 [ 0, %loop.body48 ], [ %add89, %loop.latch87 ]
  br label %loop.body50

loop.body50:                                      ; preds = %loop.latch81, %loop.body49
  %l.0 = phi i128 [ 0, %loop.body49 ], [ %add83, %loop.latch81 ]
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch74, %loop.body50
  %idx.1 = phi i128 [ 0, %loop.body50 ], [ %add76, %loop.latch74 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %linefunctionequal.q.declare_input, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.1
  %Q57 = load i128, i128* %array_getter56, align 4
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %call22, i32 0, i32 4
  %signedlinefunctionequalnocarry.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter59, align 8
  %array_getter64 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionequalnocarry.q.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.1
  %nocarry65 = load i128, i128* %array_getter64, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry65, i128 %Q57, i1* @constraint.545)
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %call22, i32 0, i32 4
  %signedlinefunctionequalnocarry.q.read_input_outter68 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter67, align 8
  %nocarry73 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionequalnocarry.q.read_input_outter68, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.1
  store i128 %Q57, i128* %nocarry73, align 4
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.body51
  %add76 = add i128 %idx.1, 1
  %slt79 = icmp slt i128 %add76, %linefunctionequal.k.read_arg_inner
  br i1 %slt79, label %loop.body51, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch74
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.exit80
  %add83 = add i128 %l.0, 1
  %slt85 = icmp slt i128 %add83, 2
  br i1 %slt85, label %loop.body50, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch81
  br label %loop.latch87

loop.latch87:                                     ; preds = %loop.exit86
  %add89 = add i128 %j.0, 1
  %slt91 = icmp slt i128 %add89, 6
  br i1 %slt91, label %loop.body49, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch87
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.exit92
  %add95 = add i128 %i.1, 1
  %slt97 = icmp slt i128 %add95, 2
  br i1 %slt97, label %loop.body48, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch93
  %mul100 = mul i128 2, %linefunctionequal.k.read_arg_inner
  %sub = sub i128 %mul100, 1
  %mul102 = mul i128 3, %linefunctionequal.k.read_arg_inner
  %mul104 = mul i128 %mul102, %linefunctionequal.k.read_arg_inner
  %mul105 = mul i128 %sub, %mul104
  %add106 = add i128 %mul105, 1
  %call107 = call i128 @log_ceil(i128 %add106)
  br label %loop.body108

loop.body108:                                     ; preds = %loop.latch172, %loop.exit98
  %i.2 = phi i128 [ 0, %loop.exit98 ], [ %add174, %loop.latch172 ]
  br label %loop.body109

loop.body109:                                     ; preds = %loop.latch124, %loop.body108
  %j.1 = phi i128 [ 0, %loop.body108 ], [ %add126, %loop.latch124 ]
  %mul113 = mul i128 2, %linefunctionequal.k.read_arg_inner
  %sub114 = sub i128 %mul113, 2
  %mul116 = mul i128 4, %linefunctionequal.n.read_arg_inner
  %add118 = add i128 %mul116, %call107
  %call119 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %linefunctionequal.n.read_arg_inner, i128 %linefunctionequal.k.read_arg_inner, i128 %sub114, [256 x i128]* %linefunctionequal.q.read_arg_inner, i128 %add118)
  %ptr_getter120 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %reduce123 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter120, i128 0, i128 %i.2, i128 %j.1
  store %struct_template_circuit_primereduce* %call119, %struct_template_circuit_primereduce** %reduce123, align 8
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.body109
  %add126 = add i128 %j.1, 1
  %slt128 = icmp slt i128 %add126, 2
  br i1 %slt128, label %loop.body109, label %loop.exit129

loop.exit129:                                     ; preds = %loop.latch124
  br label %loop.body130

loop.body130:                                     ; preds = %loop.latch166, %loop.exit129
  %j.2 = phi i128 [ 0, %loop.exit129 ], [ %add168, %loop.latch166 ]
  br label %loop.body131

loop.body131:                                     ; preds = %loop.latch157, %loop.body130
  %idx.2 = phi i128 [ 0, %loop.body130 ], [ %add159, %loop.latch157 ]
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_signedlinefunctionequalnocarry, %struct_template_circuit_signedlinefunctionequalnocarry* %call22, i32 0, i32 5
  %signedlinefunctionequalnocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter133, align 8
  %array_getter137 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionequalnocarry.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %nocarry138 = load i128, i128* %array_getter137, align 4
  %reduce139 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter142 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce139, i128 0, i128 %i.2, i128 %j.2
  %reduce143 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter142, align 8
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce143, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter144, align 8
  %array_getter146 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %idx.2
  %reduce147 = load i128, i128* %array_getter146, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce147, i128 %nocarry138, i1* @constraint.546)
  %ptr_getter148 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter151 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter148, i128 0, i128 %i.2, i128 %j.2
  %reduce152 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter151, align 8
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce152, i32 0, i32 5
  %primereduce.in.read_input_outter154 = load [256 x i128]*, [256 x i128]** %struct_getter153, align 8
  %reduce156 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter154, i128 0, i128 %idx.2
  store i128 %nocarry138, i128* %reduce156, align 4
  br label %loop.latch157

loop.latch157:                                    ; preds = %loop.body131
  %add159 = add i128 %idx.2, 1
  %mul162 = mul i128 3, %linefunctionequal.k.read_arg_inner
  %sub163 = sub i128 %mul162, 2
  %slt164 = icmp slt i128 %add159, %sub163
  br i1 %slt164, label %loop.body131, label %loop.exit165

loop.exit165:                                     ; preds = %loop.latch157
  br label %loop.latch166

loop.latch166:                                    ; preds = %loop.exit165
  %add168 = add i128 %j.2, 1
  %slt170 = icmp slt i128 %add168, 2
  br i1 %slt170, label %loop.body130, label %loop.exit171

loop.exit171:                                     ; preds = %loop.latch166
  br label %loop.latch172

loop.latch172:                                    ; preds = %loop.exit171
  %add174 = add i128 %i.2, 1
  %slt176 = icmp slt i128 %add174, 6
  br i1 %slt176, label %loop.body108, label %loop.exit177

loop.exit177:                                     ; preds = %loop.latch172
  %mul181 = mul i128 4, %linefunctionequal.n.read_arg_inner
  %add183 = add i128 %mul181, %call107
  %call185 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %linefunctionequal.n.read_arg_inner, i128 %linefunctionequal.k.read_arg_inner, i128 %add183, [256 x i128]* %linefunctionequal.q.read_arg_inner)
  br label %loop.body186

loop.body186:                                     ; preds = %loop.latch225, %loop.exit177
  %i.3 = phi i128 [ 0, %loop.exit177 ], [ %add227, %loop.latch225 ]
  br label %loop.body187

loop.body187:                                     ; preds = %loop.latch219, %loop.body186
  %j.3 = phi i128 [ 0, %loop.body186 ], [ %add221, %loop.latch219 ]
  br label %loop.body188

loop.body188:                                     ; preds = %loop.latch212, %loop.body187
  %idx.3 = phi i128 [ 0, %loop.body187 ], [ %add214, %loop.latch212 ]
  %reduce189 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter192 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce189, i128 0, i128 %i.3, i128 %j.3
  %reduce193 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter192, align 8
  %struct_getter194 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce193, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter194, align 8
  %array_getter196 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %idx.3
  %reduce197 = load i128, i128* %array_getter196, align 4
  %struct_getter199 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call185, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter199, align 8
  %array_getter203 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.3, i128 %j.3, i128 %idx.3
  %carry204 = load i128, i128* %array_getter203, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry204, i128 %reduce197, i1* @constraint.547)
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call185, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter207 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter206, align 8
  %carry211 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter207, i128 0, i128 %i.3, i128 %j.3, i128 %idx.3
  store i128 %reduce197, i128* %carry211, align 4
  br label %loop.latch212

loop.latch212:                                    ; preds = %loop.body188
  %add214 = add i128 %idx.3, 1
  %slt217 = icmp slt i128 %add214, %linefunctionequal.k.read_arg_inner
  br i1 %slt217, label %loop.body188, label %loop.exit218

loop.exit218:                                     ; preds = %loop.latch212
  br label %loop.latch219

loop.latch219:                                    ; preds = %loop.exit218
  %add221 = add i128 %j.3, 1
  %slt223 = icmp slt i128 %add221, 2
  br i1 %slt223, label %loop.body187, label %loop.exit224

loop.exit224:                                     ; preds = %loop.latch219
  br label %loop.latch225

loop.latch225:                                    ; preds = %loop.exit224
  %add227 = add i128 %i.3, 1
  %slt229 = icmp slt i128 %add227, 6
  br i1 %slt229, label %loop.body186, label %loop.exit230

loop.exit230:                                     ; preds = %loop.latch225
  br label %loop.body231

loop.body231:                                     ; preds = %loop.latch265, %loop.exit230
  %i.4 = phi i128 [ 0, %loop.exit230 ], [ %add267, %loop.latch265 ]
  br label %loop.body232

loop.body232:                                     ; preds = %loop.latch259, %loop.body231
  %j.4 = phi i128 [ 0, %loop.body231 ], [ %add261, %loop.latch259 ]
  br label %loop.body233

loop.body233:                                     ; preds = %loop.latch252, %loop.body232
  %idx.4 = phi i128 [ 0, %loop.body232 ], [ %add254, %loop.latch252 ]
  %struct_getter235 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call185, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter235, align 8
  %array_getter239 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  %carry240 = load i128, i128* %array_getter239, align 4
  %out241 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequal.out.declare_output, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out241, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  %out246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out246, i128 %carry240, i1* @constraint.548)
  %ptr_getter247 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequal.out.declare_output, align 8
  %out251 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter247, i128 0, i128 %i.4, i128 %j.4, i128 %idx.4
  store i128 %carry240, i128* %out251, align 4
  br label %loop.latch252

loop.latch252:                                    ; preds = %loop.body233
  %add254 = add i128 %idx.4, 1
  %slt257 = icmp slt i128 %add254, %linefunctionequal.k.read_arg_inner
  br i1 %slt257, label %loop.body233, label %loop.exit258

loop.exit258:                                     ; preds = %loop.latch252
  br label %loop.latch259

loop.latch259:                                    ; preds = %loop.exit258
  %add261 = add i128 %j.4, 1
  %slt263 = icmp slt i128 %add261, 2
  br i1 %slt263, label %loop.body232, label %loop.exit264

loop.exit264:                                     ; preds = %loop.latch259
  br label %loop.latch265

loop.latch265:                                    ; preds = %loop.exit264
  %add267 = add i128 %i.4, 1
  %slt269 = icmp slt i128 %add267, 6
  br i1 %slt269, label %loop.body231, label %loop.exit270

loop.exit270:                                     ; preds = %loop.latch265
  br label %arraydim

arraydim:                                         ; preds = %loop.exit270
  %ptr_cast = bitcast [256 x [256 x [256 x [256 x i128]]]]** %linefunctionequal.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 6, i128 2, i128 %linefunctionequal.k.read_arg_inner)
  %ptr_cast271 = bitcast [256 x [256 x i128]]** %linefunctionequal.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast271, i128 2, i128 %linefunctionequal.k.read_arg_inner)
  %ptr_cast272 = bitcast [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast272, i128 6, i128 4)
  %ptr_cast273 = bitcast [256 x [256 x [256 x i128]]]** %linefunctionequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast273, i128 6, i128 2, i128 %linefunctionequal.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out274 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %linefunctionequal.out.declare_output, align 8
  %linefunctionequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out274, [256 x [256 x [256 x i128]]]** %linefunctionequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_linefunctionequal* @fn_template_build_linefunctionequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_linefunctionequal = alloca %struct_template_circuit_linefunctionequal, align 8
  %linefunctionequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %struct_template_circuit_linefunctionequal, i32 0, i32 0
  store i128 %0, i128* %linefunctionequal.n.write_arg_inner, align 4
  %linefunctionequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %struct_template_circuit_linefunctionequal, i32 0, i32 1
  store i128 %1, i128* %linefunctionequal.k.write_arg_inner, align 4
  %linefunctionequal.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %struct_template_circuit_linefunctionequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %linefunctionequal.q.write_arg_inner, align 8
  ret %struct_template_circuit_linefunctionequal* %struct_template_circuit_linefunctionequal
}

define [256 x [256 x i128]]* @find_Fp2_inverse(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x i128]* %3) {
entry:
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a12 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a12, [256 x i128]* %spice_inline_array, align 4
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a15 = load [256 x i128], [256 x i128]* %array_getter14, align 4
  %spice_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] %a15, [256 x i128]* %spice_inline_array16, align 4
  %call = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array16)
  %array_getter20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a21 = load [256 x i128], [256 x i128]* %array_getter20, align 4
  %spice_inline_array22 = alloca [256 x i128], align 8
  store [256 x i128] %a21, [256 x i128]* %spice_inline_array22, align 4
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a25 = load [256 x i128], [256 x i128]* %array_getter24, align 4
  %spice_inline_array26 = alloca [256 x i128], align 8
  store [256 x i128] %a25, [256 x i128]* %spice_inline_array26, align 4
  %call27 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array22, [256 x i128]* %spice_inline_array26)
  %mul = mul i128 2, %1
  %call32 = call [256 x i128]* @long_add(i128 %0, i128 %mul, [256 x i128]* %call, [256 x i128]* %call27)
  %add = add i128 %1, 1
  %call37 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %add, [256 x i128]* %call32, [256 x i128]* %3)
  %array_getter41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call37, i128 0, i128 1
  %sq_sum_div42 = load [256 x i128], [256 x i128]* %array_getter41, align 4
  %spice_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] %sq_sum_div42, [256 x i128]* %spice_inline_array43, align 4
  %call45 = call [256 x i128]* @mod_inv(i128 %0, i128 %1, [256 x i128]* %spice_inline_array43, [256 x i128]* %3)
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a51 = load [256 x i128], [256 x i128]* %array_getter50, align 4
  %spice_inline_array52 = alloca [256 x i128], align 8
  store [256 x i128] %a51, [256 x i128]* %spice_inline_array52, align 4
  %call53 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %call45, [256 x i128]* %spice_inline_array52)
  %call58 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call53, [256 x i128]* %3)
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call58, i128 0, i128 1
  %out0_div61 = load [256 x i128], [256 x i128]* %array_getter60, align 4
  %spice_inline_array62 = alloca [256 x i128], align 8
  store [256 x i128] %out0_div61, [256 x i128]* %spice_inline_array62, align 4
  %out63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %4 = bitcast [256 x i128]* %out63 to i8*
  %5 = bitcast [256 x i128]* %spice_inline_array62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter68 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a69 = load [256 x i128], [256 x i128]* %array_getter68, align 4
  %spice_inline_array70 = alloca [256 x i128], align 8
  store [256 x i128] %a69, [256 x i128]* %spice_inline_array70, align 4
  %call71 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %3, [256 x i128]* %spice_inline_array70)
  %call76 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %call45, [256 x i128]* %call71)
  %call81 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call76, [256 x i128]* %3)
  %array_getter83 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call81, i128 0, i128 1
  %out1_div84 = load [256 x i128], [256 x i128]* %array_getter83, align 4
  %spice_inline_array85 = alloca [256 x i128], align 8
  store [256 x i128] %out1_div84, [256 x i128]* %spice_inline_array85, align 4
  %out87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %6 = bitcast [256 x i128]* %out87 to i8*
  %7 = bitcast [256 x i128]* %spice_inline_array85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_fp12compress(%struct_template_circuit_fp12compress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 0
  %fp12compress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 1
  %fp12compress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 2
  %fp12compress.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 3
  %fp12compress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 4
  %fp12compress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 5
  %fp12compress.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %fp12compress.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12compress.in.declare_input, align 8
  %j6 = call i128 @fn_intrinsic_utils_init()
  %l7 = call i128 @fn_intrinsic_utils_init()
  %i8 = call i128 @fn_intrinsic_utils_init()
  %fp12compress.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12compress.out.declare_output, align 8
  %idx9 = call i128 @fn_intrinsic_utils_init()
  %reduce = alloca [256 x [256 x %struct_template_circuit_primereduce*]]*, align 8
  %reduce10 = alloca [256 x [256 x %struct_template_circuit_primereduce*]], align 8
  store [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce10, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %add = add i128 %fp12compress.k.read_arg_inner, %fp12compress.m.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch56, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add58, %loop.latch56 ]
  br label %loop.body15

loop.body15:                                      ; preds = %loop.latch50, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add52, %loop.latch50 ]
  %call = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %fp12compress.n.read_arg_inner, i128 %fp12compress.k.read_arg_inner, i128 %fp12compress.m.read_arg_inner, [256 x i128]* %fp12compress.p.read_arg_inner, i128 %fp12compress.m_out.read_arg_inner)
  %ptr_getter = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %reduce20 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_primereduce* %call, %struct_template_circuit_primereduce** %reduce20, align 8
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch, %loop.body15
  %idx.0 = phi i128 [ 0, %loop.body15 ], [ %add45, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12compress.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %in25 = load i128, i128* %array_getter, align 4
  %reduce26 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter29 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce26, i128 0, i128 %i.0, i128 %j.0
  %reduce30 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter29, align 8
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce30, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %idx.0
  %reduce34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce34, i128 %in25, i1* @constraint.549)
  %ptr_getter35 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter38 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %ptr_getter35, i128 0, i128 %i.0, i128 %j.0
  %reduce39 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter38, align 8
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce39, i32 0, i32 5
  %primereduce.in.read_input_outter41 = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %reduce43 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter41, i128 0, i128 %idx.0
  store i128 %in25, i128* %reduce43, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body21
  %add45 = add i128 %idx.0, 1
  %add49 = add i128 %fp12compress.k.read_arg_inner, %fp12compress.m.read_arg_inner
  %slt = icmp slt i128 %add45, %add49
  br i1 %slt, label %loop.body21, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch50

loop.latch50:                                     ; preds = %loop.exit
  %add52 = add i128 %j.0, 1
  %slt54 = icmp slt i128 %add52, 2
  br i1 %slt54, label %loop.body15, label %loop.exit55

loop.exit55:                                      ; preds = %loop.latch50
  br label %loop.latch56

loop.latch56:                                     ; preds = %loop.exit55
  %add58 = add i128 %i.0, 1
  %slt61 = icmp slt i128 %add58, 6
  br i1 %slt61, label %loop.body, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch56
  br label %loop.body63

loop.body63:                                      ; preds = %loop.latch99, %loop.exit62
  %i.1 = phi i128 [ 0, %loop.exit62 ], [ %add101, %loop.latch99 ]
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch93, %loop.body63
  %j.1 = phi i128 [ 0, %loop.body63 ], [ %add95, %loop.latch93 ]
  br label %loop.body65

loop.body65:                                      ; preds = %loop.latch86, %loop.body64
  %idx.1 = phi i128 [ 0, %loop.body64 ], [ %add88, %loop.latch86 ]
  %reduce66 = load [256 x [256 x %struct_template_circuit_primereduce*]]*, [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce, align 8
  %array_getter69 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce66, i128 0, i128 %i.1, i128 %j.1
  %reduce70 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter69, align 8
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce70, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter71, align 8
  %array_getter73 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %idx.1
  %reduce74 = load i128, i128* %array_getter73, align 4
  %out75 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12compress.out.declare_output, align 8
  %array_getter79 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out75, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %out80 = load i128, i128* %array_getter79, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out80, i128 %reduce74, i1* @constraint.550)
  %ptr_getter81 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12compress.out.declare_output, align 8
  %out85 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter81, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %reduce74, i128* %out85, align 4
  br label %loop.latch86

loop.latch86:                                     ; preds = %loop.body65
  %add88 = add i128 %idx.1, 1
  %slt91 = icmp slt i128 %add88, %fp12compress.k.read_arg_inner
  br i1 %slt91, label %loop.body65, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch86
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.exit92
  %add95 = add i128 %j.1, 1
  %slt97 = icmp slt i128 %add95, 2
  br i1 %slt97, label %loop.body64, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch93
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.exit98
  %add101 = add i128 %i.1, 1
  %slt104 = icmp slt i128 %add101, 6
  br i1 %slt104, label %loop.body63, label %loop.exit105

loop.exit105:                                     ; preds = %loop.latch99
  br label %arraydim

arraydim:                                         ; preds = %loop.exit105
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12compress.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %add)
  %ptr_cast106 = bitcast [256 x [256 x %struct_template_circuit_primereduce*]]** %reduce to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast106, i128 6, i128 2)
  %ptr_cast107 = bitcast [256 x [256 x [256 x i128]]]** %fp12compress.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast107, i128 6, i128 2, i128 %fp12compress.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out108 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12compress.out.declare_output, align 8
  %fp12compress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out108, [256 x [256 x [256 x i128]]]** %fp12compress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, i128 %4) {
entry:
  %struct_template_circuit_fp12compress = alloca %struct_template_circuit_fp12compress, align 8
  %fp12compress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 0
  store i128 %0, i128* %fp12compress.n.write_arg_inner, align 4
  %fp12compress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 1
  store i128 %1, i128* %fp12compress.k.write_arg_inner, align 4
  %fp12compress.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 2
  store i128 %2, i128* %fp12compress.m.write_arg_inner, align 4
  %fp12compress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp12compress.p.write_arg_inner, align 8
  %fp12compress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 4
  store i128 %4, i128* %fp12compress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress
}

define void @fn_template_init_pointonlinefp2(%struct_template_circuit_pointonlinefp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 0
  %pointonlinefp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 1
  %pointonlinefp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 2
  %pointonlinefp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 3
  %pointonlinefp2.in.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter3, align 8
  %pointonlinefp2.in.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %LOGK24 = call i128 @fn_intrinsic_utils_init()
  %j5 = call i128 @fn_intrinsic_utils_init()
  %diff_red = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %diff_red6 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %diff_red6, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %LOGK7 = call i128 @fn_intrinsic_utils_init()
  %i8 = call i128 @fn_intrinsic_utils_init()
  %diff_mod = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, align 8
  %diff_mod9 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  store [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %diff_mod9, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %diff_mod, align 8
  %call = call i128 @log_ceil(i128 %pointonlinefp2.k.read_arg_inner)
  %mul = mul i128 6, %pointonlinefp2.k.read_arg_inner
  %mul13 = mul i128 %mul, %pointonlinefp2.k.read_arg_inner
  %call14 = call i128 @log_ceil(i128 %mul13)
  %mul15 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %add = add i128 %mul15, %call14
  %slt = icmp slt i128 %add, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %call19 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 2)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch68, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add70, %loop.latch68 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add64, %loop.latch ]
  %in = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in, i128 0, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in23 = load i128, i128* %array_getter, align 4
  %in24 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter27 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in24, i128 0, i128 2, i128 1, i128 %i.0, i128 %j.0
  %in28 = load i128, i128* %array_getter27, align 4
  %add29 = add i128 %in23, %in28
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %left35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left35, i128 %add29, i1* @constraint.551)
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter37 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %left40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter37, i128 0, i128 %i.0, i128 %j.0
  store i128 %add29, i128* %left40, align 4
  %in41 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in41, i128 0, i128 1, i128 0, i128 %i.0, i128 %j.0
  %in45 = load i128, i128* %array_getter44, align 4
  %in46 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in46, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in50 = load i128, i128* %array_getter49, align 4
  %sub = sub i128 %in45, %in50
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter52, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %left56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %left56, i128 %sub, i1* @constraint.552)
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter58, align 8
  %left62 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter59, i128 0, i128 %i.0, i128 %j.0
  store i128 %sub, i128* %left62, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body20
  %add64 = add i128 %j.0, 1
  %slt67 = icmp slt i128 %add64, %pointonlinefp2.k.read_arg_inner
  br i1 %slt67, label %loop.body20, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit
  %add70 = add i128 %i.0, 1
  %slt72 = icmp slt i128 %add70, 2
  br i1 %slt72, label %loop.body, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch68
  %call76 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 2)
  br label %loop.body77

loop.body77:                                      ; preds = %loop.latch134, %loop.exit73
  %i.1 = phi i128 [ 0, %loop.exit73 ], [ %add136, %loop.latch134 ]
  br label %loop.body78

loop.body78:                                      ; preds = %loop.latch127, %loop.body77
  %j.1 = phi i128 [ 0, %loop.body77 ], [ %add129, %loop.latch127 ]
  %in79 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter82 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in79, i128 0, i128 1, i128 1, i128 %i.1, i128 %j.1
  %in83 = load i128, i128* %array_getter82, align 4
  %in84 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in84, i128 0, i128 0, i128 1, i128 %i.1, i128 %j.1
  %in88 = load i128, i128* %array_getter87, align 4
  %sub89 = sub i128 %in83, %in88
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter92 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter91, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter92, i128 0, i128 %i.1, i128 %j.1
  %right96 = load i128, i128* %array_getter95, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right96, i128 %sub89, i1* @constraint.553)
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter99 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter98, align 8
  %right102 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter99, i128 0, i128 %i.1, i128 %j.1
  store i128 %sub89, i128* %right102, align 4
  %in103 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in103, i128 0, i128 0, i128 0, i128 %i.1, i128 %j.1
  %in107 = load i128, i128* %array_getter106, align 4
  %in108 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input, align 8
  %array_getter111 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %in108, i128 0, i128 2, i128 0, i128 %i.1, i128 %j.1
  %in112 = load i128, i128* %array_getter111, align 4
  %sub113 = sub i128 %in107, %in112
  %struct_getter115 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter116 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter115, align 8
  %array_getter119 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter116, i128 0, i128 %i.1, i128 %j.1
  %right120 = load i128, i128* %array_getter119, align 4
  call void @fn_intrinsic_utils_constraint(i128 %right120, i128 %sub113, i1* @constraint.554)
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter123 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter122, align 8
  %right126 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter123, i128 0, i128 %i.1, i128 %j.1
  store i128 %sub113, i128* %right126, align 4
  br label %loop.latch127

loop.latch127:                                    ; preds = %loop.body78
  %add129 = add i128 %j.1, 1
  %slt132 = icmp slt i128 %add129, %pointonlinefp2.k.read_arg_inner
  br i1 %slt132, label %loop.body78, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch127
  br label %loop.latch134

loop.latch134:                                    ; preds = %loop.exit133
  %add136 = add i128 %i.1, 1
  %slt138 = icmp slt i128 %add136, 2
  br i1 %slt138, label %loop.body77, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch134
  %sub143 = sub i128 %pointonlinefp2.k.read_arg_inner, 1
  %mul145 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %mul147 = mul i128 2, %call
  %add148 = add i128 %mul145, %mul147
  %add149 = add i128 %add148, 2
  %call150 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 %sub143, [256 x i128]* %pointonlinefp2.p.read_arg_inner, i128 %add149)
  %ptr_getter151 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %diff_red152 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter151, i128 0, i128 0
  store %struct_template_circuit_primereduce* %call150, %struct_template_circuit_primereduce** %diff_red152, align 8
  %sub156 = sub i128 %pointonlinefp2.k.read_arg_inner, 1
  %mul159 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %mul161 = mul i128 2, %call
  %add162 = add i128 %mul159, %mul161
  %add163 = add i128 %add162, 1
  %call164 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 %sub156, [256 x i128]* %pointonlinefp2.p.read_arg_inner, i128 %add163)
  %ptr_getter165 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %diff_red166 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter165, i128 0, i128 1
  store %struct_template_circuit_primereduce* %call164, %struct_template_circuit_primereduce** %diff_red166, align 8
  br label %loop.body167

loop.body167:                                     ; preds = %loop.latch236, %loop.exit139
  %i.2 = phi i128 [ 0, %loop.exit139 ], [ %add238, %loop.latch236 ]
  %struct_getter169 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter169, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter, i128 0, i128 0, i128 %i.2
  %left172 = load i128, i128* %array_getter171, align 4
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter175 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter174, align 8
  %array_getter177 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter175, i128 0, i128 2, i128 %i.2
  %left178 = load i128, i128* %array_getter177, align 4
  %sub179 = sub i128 %left172, %left178
  %struct_getter181 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter182 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter181, align 8
  %array_getter184 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter182, i128 0, i128 0, i128 %i.2
  %right185 = load i128, i128* %array_getter184, align 4
  %sub186 = sub i128 %sub179, %right185
  %struct_getter188 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter189 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter188, align 8
  %array_getter191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter189, i128 0, i128 2, i128 %i.2
  %right192 = load i128, i128* %array_getter191, align 4
  %add193 = add i128 %sub186, %right192
  %diff_red194 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter195 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red194, i128 0, i128 0
  %diff_red196 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter195, align 8
  %struct_getter197 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red196, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter197, align 8
  %array_getter199 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %diff_red200 = load i128, i128* %array_getter199, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red200, i128 %add193, i1* @constraint.555)
  %ptr_getter201 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter202 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter201, i128 0, i128 0
  %diff_red203 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter202, align 8
  %struct_getter204 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red203, i32 0, i32 5
  %primereduce.in.read_input_outter205 = load [256 x i128]*, [256 x i128]** %struct_getter204, align 8
  %diff_red207 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter205, i128 0, i128 %i.2
  store i128 %add193, i128* %diff_red207, align 4
  %struct_getter209 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call19, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter210 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter209, align 8
  %array_getter212 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter210, i128 0, i128 1, i128 %i.2
  %left213 = load i128, i128* %array_getter212, align 4
  %struct_getter215 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call76, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter216 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter215, align 8
  %array_getter218 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter216, i128 0, i128 1, i128 %i.2
  %right219 = load i128, i128* %array_getter218, align 4
  %sub220 = sub i128 %left213, %right219
  %diff_red221 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter222 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red221, i128 0, i128 1
  %diff_red223 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter222, align 8
  %struct_getter224 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red223, i32 0, i32 5
  %primereduce.in.read_input_outter225 = load [256 x i128]*, [256 x i128]** %struct_getter224, align 8
  %array_getter227 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter225, i128 0, i128 %i.2
  %diff_red228 = load i128, i128* %array_getter227, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_red228, i128 %sub220, i1* @constraint.556)
  %ptr_getter229 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter230 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter229, i128 0, i128 1
  %diff_red231 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter230, align 8
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red231, i32 0, i32 5
  %primereduce.in.read_input_outter233 = load [256 x i128]*, [256 x i128]** %struct_getter232, align 8
  %diff_red235 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter233, i128 0, i128 %i.2
  store i128 %sub220, i128* %diff_red235, align 4
  br label %loop.latch236

loop.latch236:                                    ; preds = %loop.body167
  %add238 = add i128 %i.2, 1
  %mul241 = mul i128 2, %pointonlinefp2.k.read_arg_inner
  %sub242 = sub i128 %mul241, 1
  %slt243 = icmp slt i128 %add238, %sub242
  br i1 %slt243, label %loop.body167, label %loop.exit244

loop.exit244:                                     ; preds = %loop.latch236
  br label %loop.body245

loop.body245:                                     ; preds = %loop.latch289, %loop.exit244
  %j.2 = phi i128 [ 0, %loop.exit244 ], [ %add291, %loop.latch289 ]
  %mul249 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %add251 = add i128 %mul249, %call14
  %call253 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 %add251, [256 x i128]* %pointonlinefp2.p.read_arg_inner)
  %ptr_getter254 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %diff_mod, align 8
  %diff_mod256 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter254, i128 0, i128 %j.2
  store %struct_template_circuit_signedcheckcarrymodtozero* %call253, %struct_template_circuit_signedcheckcarrymodtozero** %diff_mod256, align 8
  br label %loop.body257

loop.body257:                                     ; preds = %loop.latch282, %loop.body245
  %i.3 = phi i128 [ 0, %loop.body245 ], [ %add284, %loop.latch282 ]
  %diff_red258 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %diff_red, align 8
  %array_getter260 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red258, i128 0, i128 %j.2
  %diff_red261 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter260, align 8
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red261, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter262, align 8
  %array_getter264 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.3
  %diff_red265 = load i128, i128* %array_getter264, align 4
  %diff_mod266 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %diff_mod, align 8
  %array_getter268 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %diff_mod266, i128 0, i128 %j.2
  %diff_mod269 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter268, align 8
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %diff_mod269, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter270, align 8
  %array_getter272 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.3
  %diff_mod273 = load i128, i128* %array_getter272, align 4
  call void @fn_intrinsic_utils_constraint(i128 %diff_mod273, i128 %diff_red265, i1* @constraint.557)
  %ptr_getter274 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %diff_mod, align 8
  %array_getter276 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter274, i128 0, i128 %j.2
  %diff_mod277 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter276, align 8
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %diff_mod277, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter279 = load [256 x i128]*, [256 x i128]** %struct_getter278, align 8
  %diff_mod281 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter279, i128 0, i128 %i.3
  store i128 %diff_red265, i128* %diff_mod281, align 4
  br label %loop.latch282

loop.latch282:                                    ; preds = %loop.body257
  %add284 = add i128 %i.3, 1
  %slt287 = icmp slt i128 %add284, %pointonlinefp2.k.read_arg_inner
  br i1 %slt287, label %loop.body257, label %loop.exit288

loop.exit288:                                     ; preds = %loop.latch282
  br label %loop.latch289

loop.latch289:                                    ; preds = %loop.exit288
  %add291 = add i128 %j.2, 1
  %slt293 = icmp slt i128 %add291, 2
  br i1 %slt293, label %loop.body245, label %loop.exit294

loop.exit294:                                     ; preds = %loop.latch289
  br label %arraydim

arraydim:                                         ; preds = %loop.exit294
  %ptr_cast = bitcast [256 x [256 x [256 x [256 x i128]]]]** %pointonlinefp2.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 3, i128 2, i128 2, i128 %pointonlinefp2.k.read_arg_inner)
  %ptr_cast295 = bitcast [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %diff_mod to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast295, i128 2)
  %ptr_cast296 = bitcast [256 x %struct_template_circuit_primereduce*]** %diff_red to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast296, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  ret void
}

define %struct_template_circuit_pointonlinefp2* @fn_template_build_pointonlinefp2(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_pointonlinefp2 = alloca %struct_template_circuit_pointonlinefp2, align 8
  %pointonlinefp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2, i32 0, i32 0
  store i128 %0, i128* %pointonlinefp2.n.write_arg_inner, align 4
  %pointonlinefp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2, i32 0, i32 1
  store i128 %1, i128* %pointonlinefp2.k.write_arg_inner, align 4
  %pointonlinefp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointonlinefp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2
}

define void @fn_template_init_fp12cyclotomicsquare(%struct_template_circuit_fp12cyclotomicsquare* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %0, i32 0, i32 0
  %fp12cyclotomicsquare.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %0, i32 0, i32 1
  %fp12cyclotomicsquare.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %0, i32 0, i32 2
  %fp12cyclotomicsquare.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %0, i32 0, i32 3
  %fp12cyclotomicsquare.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12cyclotomicsquare.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.in.declare_input, align 8
  %fp12cyclotomicsquare.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.out.declare_output, align 8
  %sqRed = alloca [256 x %struct_template_circuit_fp2compress*]*, align 8
  %sqRed4 = alloca [256 x %struct_template_circuit_fp2compress*], align 8
  store [256 x %struct_template_circuit_fp2compress*]* %sqRed4, [256 x %struct_template_circuit_fp2compress*]** %sqRed, align 8
  %sqMod = alloca [256 x %struct_template_circuit_signedfp2carrymodp*]*, align 8
  %sqMod5 = alloca [256 x %struct_template_circuit_signedfp2carrymodp*], align 8
  store [256 x %struct_template_circuit_signedfp2carrymodp*]* %sqMod5, [256 x %struct_template_circuit_signedfp2carrymodp*]** %sqMod, align 8
  %LOGK26 = call i128 @fn_intrinsic_utils_init()
  %eps7 = call i128 @fn_intrinsic_utils_init()
  %i8 = call i128 @fn_intrinsic_utils_init()
  %XI09 = call i128 @fn_intrinsic_utils_init()
  %j10 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 2, 1
  %mul = mul i128 18, %add
  %mul14 = mul i128 %mul, %fp12cyclotomicsquare.k.read_arg_inner
  %mul16 = mul i128 %mul14, %fp12cyclotomicsquare.k.read_arg_inner
  %add17 = add i128 %mul16, 1
  %call = call i128 @log_ceil(i128 %add17)
  %mul18 = mul i128 3, %fp12cyclotomicsquare.n.read_arg_inner
  %add20 = add i128 %mul18, %call
  %slt = icmp slt i128 %add20, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %call23 = call %struct_template_circuit_signedfp12cyclotomicsquarenocarry* @fn_template_build_signedfp12cyclotomicsquarenocarry(i128 %fp12cyclotomicsquare.n.read_arg_inner, i128 %fp12cyclotomicsquare.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch54, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add56, %loop.latch54 ]
  br label %loop.body24

loop.body24:                                      ; preds = %loop.latch48, %loop.body
  %eps.0 = phi i128 [ 0, %loop.body ], [ %add50, %loop.latch48 ]
  br label %loop.body25

loop.body25:                                      ; preds = %loop.latch, %loop.body24
  %j.0 = phi i128 [ 0, %loop.body24 ], [ %add44, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %i.0, i128 %eps.0, i128 %j.0
  %in29 = load i128, i128* %array_getter, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %call23, i32 0, i32 2
  %signedfp12cyclotomicsquarenocarry.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter31, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12cyclotomicsquarenocarry.in.read_input_outter, i128 0, i128 %i.0, i128 %eps.0, i128 %j.0
  %sq36 = load i128, i128* %array_getter35, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sq36, i128 %in29, i1* @constraint.558)
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %call23, i32 0, i32 2
  %signedfp12cyclotomicsquarenocarry.in.read_input_outter38 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter37, align 8
  %sq42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12cyclotomicsquarenocarry.in.read_input_outter38, i128 0, i128 %i.0, i128 %eps.0, i128 %j.0
  store i128 %in29, i128* %sq42, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body25
  %add44 = add i128 %j.0, 1
  %slt47 = icmp slt i128 %add44, %fp12cyclotomicsquare.k.read_arg_inner
  br i1 %slt47, label %loop.body25, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch48

loop.latch48:                                     ; preds = %loop.exit
  %add50 = add i128 %eps.0, 1
  %slt52 = icmp slt i128 %add50, 2
  br i1 %slt52, label %loop.body24, label %loop.exit53

loop.exit53:                                      ; preds = %loop.latch48
  br label %loop.latch54

loop.latch54:                                     ; preds = %loop.exit53
  %add56 = add i128 %i.0, 1
  %slt58 = icmp slt i128 %add56, 4
  br i1 %slt58, label %loop.body, label %loop.exit59

loop.exit59:                                      ; preds = %loop.latch54
  br label %loop.body60

loop.body60:                                      ; preds = %loop.latch167, %loop.exit59
  %i.1 = phi i128 [ 0, %loop.exit59 ], [ %add169, %loop.latch167 ]
  %sub = sub i128 %fp12cyclotomicsquare.k.read_arg_inner, 1
  %mul65 = mul i128 3, %fp12cyclotomicsquare.n.read_arg_inner
  %add67 = add i128 %mul65, %call
  %call68 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %fp12cyclotomicsquare.n.read_arg_inner, i128 %fp12cyclotomicsquare.k.read_arg_inner, i128 %sub, [256 x i128]* %fp12cyclotomicsquare.p.read_arg_inner, i128 %add67)
  %ptr_getter69 = load [256 x %struct_template_circuit_fp2compress*]*, [256 x %struct_template_circuit_fp2compress*]** %sqRed, align 8
  %sqRed71 = getelementptr inbounds [256 x %struct_template_circuit_fp2compress*], [256 x %struct_template_circuit_fp2compress*]* %ptr_getter69, i128 0, i128 %i.1
  store %struct_template_circuit_fp2compress* %call68, %struct_template_circuit_fp2compress** %sqRed71, align 8
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch108, %loop.body60
  %eps.1 = phi i128 [ 0, %loop.body60 ], [ %add110, %loop.latch108 ]
  br label %loop.body73

loop.body73:                                      ; preds = %loop.latch99, %loop.body72
  %j.1 = phi i128 [ 0, %loop.body72 ], [ %add101, %loop.latch99 ]
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_signedfp12cyclotomicsquarenocarry, %struct_template_circuit_signedfp12cyclotomicsquarenocarry* %call23, i32 0, i32 3
  %signedfp12cyclotomicsquarenocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter75, align 8
  %array_getter79 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12cyclotomicsquarenocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %eps.1, i128 %j.1
  %sq80 = load i128, i128* %array_getter79, align 4
  %sqRed81 = load [256 x %struct_template_circuit_fp2compress*]*, [256 x %struct_template_circuit_fp2compress*]** %sqRed, align 8
  %array_getter83 = getelementptr inbounds [256 x %struct_template_circuit_fp2compress*], [256 x %struct_template_circuit_fp2compress*]* %sqRed81, i128 0, i128 %i.1
  %sqRed84 = load %struct_template_circuit_fp2compress*, %struct_template_circuit_fp2compress** %array_getter83, align 8
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %sqRed84, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter85, align 8
  %array_getter88 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %eps.1, i128 %j.1
  %sqRed89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sqRed89, i128 %sq80, i1* @constraint.559)
  %ptr_getter90 = load [256 x %struct_template_circuit_fp2compress*]*, [256 x %struct_template_circuit_fp2compress*]** %sqRed, align 8
  %array_getter92 = getelementptr inbounds [256 x %struct_template_circuit_fp2compress*], [256 x %struct_template_circuit_fp2compress*]* %ptr_getter90, i128 0, i128 %i.1
  %sqRed93 = load %struct_template_circuit_fp2compress*, %struct_template_circuit_fp2compress** %array_getter92, align 8
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %sqRed93, i32 0, i32 5
  %fp2compress.in.read_input_outter95 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter94, align 8
  %sqRed98 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter95, i128 0, i128 %eps.1, i128 %j.1
  store i128 %sq80, i128* %sqRed98, align 4
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.body73
  %add101 = add i128 %j.1, 1
  %mul104 = mul i128 2, %fp12cyclotomicsquare.k.read_arg_inner
  %sub105 = sub i128 %mul104, 1
  %slt106 = icmp slt i128 %add101, %sub105
  br i1 %slt106, label %loop.body73, label %loop.exit107

loop.exit107:                                     ; preds = %loop.latch99
  br label %loop.latch108

loop.latch108:                                    ; preds = %loop.exit107
  %add110 = add i128 %eps.1, 1
  %slt112 = icmp slt i128 %add110, 2
  br i1 %slt112, label %loop.body72, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch108
  %mul117 = mul i128 3, %fp12cyclotomicsquare.n.read_arg_inner
  %add119 = add i128 %mul117, %call
  %call121 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp12cyclotomicsquare.n.read_arg_inner, i128 %fp12cyclotomicsquare.k.read_arg_inner, i128 %add119, [256 x i128]* %fp12cyclotomicsquare.p.read_arg_inner)
  %ptr_getter122 = load [256 x %struct_template_circuit_signedfp2carrymodp*]*, [256 x %struct_template_circuit_signedfp2carrymodp*]** %sqMod, align 8
  %sqMod124 = getelementptr inbounds [256 x %struct_template_circuit_signedfp2carrymodp*], [256 x %struct_template_circuit_signedfp2carrymodp*]* %ptr_getter122, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp2carrymodp* %call121, %struct_template_circuit_signedfp2carrymodp** %sqMod124, align 8
  br label %loop.body125

loop.body125:                                     ; preds = %loop.latch161, %loop.exit113
  %eps.2 = phi i128 [ 0, %loop.exit113 ], [ %add163, %loop.latch161 ]
  br label %loop.body126

loop.body126:                                     ; preds = %loop.latch154, %loop.body125
  %j.2 = phi i128 [ 0, %loop.body125 ], [ %add156, %loop.latch154 ]
  %sqRed127 = load [256 x %struct_template_circuit_fp2compress*]*, [256 x %struct_template_circuit_fp2compress*]** %sqRed, align 8
  %array_getter129 = getelementptr inbounds [256 x %struct_template_circuit_fp2compress*], [256 x %struct_template_circuit_fp2compress*]* %sqRed127, i128 0, i128 %i.1
  %sqRed130 = load %struct_template_circuit_fp2compress*, %struct_template_circuit_fp2compress** %array_getter129, align 8
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %sqRed130, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter131, align 8
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %eps.2, i128 %j.2
  %sqRed135 = load i128, i128* %array_getter134, align 4
  %sqMod136 = load [256 x %struct_template_circuit_signedfp2carrymodp*]*, [256 x %struct_template_circuit_signedfp2carrymodp*]** %sqMod, align 8
  %array_getter138 = getelementptr inbounds [256 x %struct_template_circuit_signedfp2carrymodp*], [256 x %struct_template_circuit_signedfp2carrymodp*]* %sqMod136, i128 0, i128 %i.1
  %sqMod139 = load %struct_template_circuit_signedfp2carrymodp*, %struct_template_circuit_signedfp2carrymodp** %array_getter138, align 8
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %sqMod139, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter140, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %eps.2, i128 %j.2
  %sqMod144 = load i128, i128* %array_getter143, align 4
  call void @fn_intrinsic_utils_constraint(i128 %sqMod144, i128 %sqRed135, i1* @constraint.560)
  %ptr_getter145 = load [256 x %struct_template_circuit_signedfp2carrymodp*]*, [256 x %struct_template_circuit_signedfp2carrymodp*]** %sqMod, align 8
  %array_getter147 = getelementptr inbounds [256 x %struct_template_circuit_signedfp2carrymodp*], [256 x %struct_template_circuit_signedfp2carrymodp*]* %ptr_getter145, i128 0, i128 %i.1
  %sqMod148 = load %struct_template_circuit_signedfp2carrymodp*, %struct_template_circuit_signedfp2carrymodp** %array_getter147, align 8
  %struct_getter149 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %sqMod148, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter150 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter149, align 8
  %sqMod153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter150, i128 0, i128 %eps.2, i128 %j.2
  store i128 %sqRed135, i128* %sqMod153, align 4
  br label %loop.latch154

loop.latch154:                                    ; preds = %loop.body126
  %add156 = add i128 %j.2, 1
  %slt159 = icmp slt i128 %add156, %fp12cyclotomicsquare.k.read_arg_inner
  br i1 %slt159, label %loop.body126, label %loop.exit160

loop.exit160:                                     ; preds = %loop.latch154
  br label %loop.latch161

loop.latch161:                                    ; preds = %loop.exit160
  %add163 = add i128 %eps.2, 1
  %slt165 = icmp slt i128 %add163, 2
  br i1 %slt165, label %loop.body125, label %loop.exit166

loop.exit166:                                     ; preds = %loop.latch161
  br label %loop.latch167

loop.latch167:                                    ; preds = %loop.exit166
  %add169 = add i128 %i.1, 1
  %slt171 = icmp slt i128 %add169, 4
  br i1 %slt171, label %loop.body60, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch167
  br label %loop.body173

loop.body173:                                     ; preds = %loop.latch209, %loop.exit172
  %i.2 = phi i128 [ 0, %loop.exit172 ], [ %add211, %loop.latch209 ]
  br label %loop.body174

loop.body174:                                     ; preds = %loop.latch203, %loop.body173
  %eps.3 = phi i128 [ 0, %loop.body173 ], [ %add205, %loop.latch203 ]
  br label %loop.body175

loop.body175:                                     ; preds = %loop.latch196, %loop.body174
  %j.3 = phi i128 [ 0, %loop.body174 ], [ %add198, %loop.latch196 ]
  %sqMod176 = load [256 x %struct_template_circuit_signedfp2carrymodp*]*, [256 x %struct_template_circuit_signedfp2carrymodp*]** %sqMod, align 8
  %array_getter178 = getelementptr inbounds [256 x %struct_template_circuit_signedfp2carrymodp*], [256 x %struct_template_circuit_signedfp2carrymodp*]* %sqMod176, i128 0, i128 %i.2
  %sqMod179 = load %struct_template_circuit_signedfp2carrymodp*, %struct_template_circuit_signedfp2carrymodp** %array_getter178, align 8
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %sqMod179, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter180, align 8
  %array_getter183 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %eps.3, i128 %j.3
  %sqMod184 = load i128, i128* %array_getter183, align 4
  %out185 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.out.declare_output, align 8
  %array_getter189 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out185, i128 0, i128 %i.2, i128 %eps.3, i128 %j.3
  %out190 = load i128, i128* %array_getter189, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out190, i128 %sqMod184, i1* @constraint.561)
  %ptr_getter191 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.out.declare_output, align 8
  %out195 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter191, i128 0, i128 %i.2, i128 %eps.3, i128 %j.3
  store i128 %sqMod184, i128* %out195, align 4
  br label %loop.latch196

loop.latch196:                                    ; preds = %loop.body175
  %add198 = add i128 %j.3, 1
  %slt201 = icmp slt i128 %add198, %fp12cyclotomicsquare.k.read_arg_inner
  br i1 %slt201, label %loop.body175, label %loop.exit202

loop.exit202:                                     ; preds = %loop.latch196
  br label %loop.latch203

loop.latch203:                                    ; preds = %loop.exit202
  %add205 = add i128 %eps.3, 1
  %slt207 = icmp slt i128 %add205, 2
  br i1 %slt207, label %loop.body174, label %loop.exit208

loop.exit208:                                     ; preds = %loop.latch203
  br label %loop.latch209

loop.latch209:                                    ; preds = %loop.exit208
  %add211 = add i128 %i.2, 1
  %slt213 = icmp slt i128 %add211, 4
  br i1 %slt213, label %loop.body173, label %loop.exit214

loop.exit214:                                     ; preds = %loop.latch209
  br label %arraydim

arraydim:                                         ; preds = %loop.exit214
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 4, i128 2, i128 %fp12cyclotomicsquare.k.read_arg_inner)
  %ptr_cast215 = bitcast [256 x %struct_template_circuit_fp2compress*]** %sqRed to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast215, i128 4)
  %ptr_cast216 = bitcast [256 x %struct_template_circuit_signedfp2carrymodp*]** %sqMod to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast216, i128 4)
  %ptr_cast217 = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast217, i128 4, i128 2, i128 %fp12cyclotomicsquare.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out218 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.out.declare_output, align 8
  %fp12cyclotomicsquare.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out218, [256 x [256 x [256 x i128]]]** %fp12cyclotomicsquare.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12cyclotomicsquare* @fn_template_build_fp12cyclotomicsquare(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12cyclotomicsquare = alloca %struct_template_circuit_fp12cyclotomicsquare, align 8
  %fp12cyclotomicsquare.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %struct_template_circuit_fp12cyclotomicsquare, i32 0, i32 0
  store i128 %0, i128* %fp12cyclotomicsquare.n.write_arg_inner, align 4
  %fp12cyclotomicsquare.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %struct_template_circuit_fp12cyclotomicsquare, i32 0, i32 1
  store i128 %1, i128* %fp12cyclotomicsquare.k.write_arg_inner, align 4
  %fp12cyclotomicsquare.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %struct_template_circuit_fp12cyclotomicsquare, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12cyclotomicsquare.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12cyclotomicsquare* %struct_template_circuit_fp12cyclotomicsquare
}

define void @fn_template_init_fp2multiply(%struct_template_circuit_fp2multiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 0
  %fp2multiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 1
  %fp2multiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 2
  %fp2multiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 3
  %fp2multiply.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2multiply.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2multiply.a.read_input_inner, [256 x [256 x i128]]** %fp2multiply.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 4
  %fp2multiply.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp2multiply.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2multiply.b.read_input_inner, [256 x [256 x i128]]** %fp2multiply.b.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %LOGK26 = call i128 @fn_intrinsic_utils_init()
  %fp2multiply.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2multiply.out.declare_output, align 8
  %j7 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 2, %fp2multiply.k.read_arg_inner
  %mul12 = mul i128 %mul, %fp2multiply.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul12)
  %mul13 = mul i128 3, %fp2multiply.n.read_arg_inner
  %add = add i128 %mul13, %call
  %slt = icmp slt i128 %add, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul19 = mul i128 3, %fp2multiply.n.read_arg_inner
  %add21 = add i128 %mul19, %call
  %call22 = call %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %fp2multiply.n.read_arg_inner, i128 %fp2multiply.k.read_arg_inner, [256 x i128]* %fp2multiply.p.read_arg_inner, i128 %fp2multiply.n.read_arg_inner, i128 %add21)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add78, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 0, i128 %i.0
  %a24 = load i128, i128* %array_getter, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter, i128 0, i128 0, i128 %i.0
  %c29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %c29, i128 %a24, i1* @constraint.562)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter31 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter30, align 8
  %c33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter31, i128 0, i128 0, i128 %i.0
  store i128 %a24, i128* %c33, align 4
  %a34 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.a.declare_input, align 8
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a34, i128 0, i128 1, i128 %i.0
  %a37 = load i128, i128* %array_getter36, align 4
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter40 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter39, align 8
  %array_getter42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter40, i128 0, i128 1, i128 %i.0
  %c43 = load i128, i128* %array_getter42, align 4
  call void @fn_intrinsic_utils_constraint(i128 %c43, i128 %a37, i1* @constraint.563)
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter46 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter45, align 8
  %c48 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter46, i128 0, i128 1, i128 %i.0
  store i128 %a37, i128* %c48, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.b.declare_input, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 0, i128 %i.0
  %b51 = load i128, i128* %array_getter50, align 4
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter53, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter, i128 0, i128 0, i128 %i.0
  %c56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %c56, i128 %b51, i1* @constraint.564)
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter58, align 8
  %c61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter59, i128 0, i128 0, i128 %i.0
  store i128 %b51, i128* %c61, align 4
  %b62 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.b.declare_input, align 8
  %array_getter64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b62, i128 0, i128 1, i128 %i.0
  %b65 = load i128, i128* %array_getter64, align 4
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter68 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter67, align 8
  %array_getter70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter68, i128 0, i128 1, i128 %i.0
  %c71 = load i128, i128* %array_getter70, align 4
  call void @fn_intrinsic_utils_constraint(i128 %c71, i128 %b65, i1* @constraint.565)
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter74 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter73, align 8
  %c76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter74, i128 0, i128 1, i128 %i.0
  store i128 %b65, i128* %c76, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add78 = add i128 %i.0, 1
  %slt81 = icmp slt i128 %add78, %fp2multiply.k.read_arg_inner
  br i1 %slt81, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul85 = mul i128 3, %fp2multiply.n.read_arg_inner
  %add87 = add i128 %mul85, %call
  %call89 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp2multiply.n.read_arg_inner, i128 %fp2multiply.k.read_arg_inner, i128 %add87, [256 x i128]* %fp2multiply.p.read_arg_inner)
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch117, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add119, %loop.latch117 ]
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch110, %loop.body90
  %j.0 = phi i128 [ 0, %loop.body90 ], [ %add112, %loop.latch110 ]
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call22, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter93, align 8
  %array_getter96 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter, i128 0, i128 %i.1, i128 %j.0
  %c97 = load i128, i128* %array_getter96, align 4
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call89, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter99, align 8
  %array_getter102 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %carry_mod103 = load i128, i128* %array_getter102, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_mod103, i128 %c97, i1* @constraint.566)
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call89, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter106 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter105, align 8
  %carry_mod109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter106, i128 0, i128 %i.1, i128 %j.0
  store i128 %c97, i128* %carry_mod109, align 4
  br label %loop.latch110

loop.latch110:                                    ; preds = %loop.body91
  %add112 = add i128 %j.0, 1
  %slt115 = icmp slt i128 %add112, %fp2multiply.k.read_arg_inner
  br i1 %slt115, label %loop.body91, label %loop.exit116

loop.exit116:                                     ; preds = %loop.latch110
  br label %loop.latch117

loop.latch117:                                    ; preds = %loop.exit116
  %add119 = add i128 %i.1, 1
  %slt121 = icmp slt i128 %add119, 2
  br i1 %slt121, label %loop.body90, label %loop.exit122

loop.exit122:                                     ; preds = %loop.latch117
  br label %loop.body123

loop.body123:                                     ; preds = %loop.latch147, %loop.exit122
  %i.2 = phi i128 [ 0, %loop.exit122 ], [ %add149, %loop.latch147 ]
  br label %loop.body124

loop.body124:                                     ; preds = %loop.latch140, %loop.body123
  %j.1 = phi i128 [ 0, %loop.body123 ], [ %add142, %loop.latch140 ]
  %struct_getter126 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call89, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter126, align 8
  %array_getter129 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1
  %carry_mod130 = load i128, i128* %array_getter129, align 4
  %out131 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.out.declare_output, align 8
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out131, i128 0, i128 %i.2, i128 %j.1
  %out135 = load i128, i128* %array_getter134, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out135, i128 %carry_mod130, i1* @constraint.567)
  %ptr_getter136 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.out.declare_output, align 8
  %out139 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter136, i128 0, i128 %i.2, i128 %j.1
  store i128 %carry_mod130, i128* %out139, align 4
  br label %loop.latch140

loop.latch140:                                    ; preds = %loop.body124
  %add142 = add i128 %j.1, 1
  %slt145 = icmp slt i128 %add142, %fp2multiply.k.read_arg_inner
  br i1 %slt145, label %loop.body124, label %loop.exit146

loop.exit146:                                     ; preds = %loop.latch140
  br label %loop.latch147

loop.latch147:                                    ; preds = %loop.exit146
  %add149 = add i128 %i.2, 1
  %slt151 = icmp slt i128 %add149, 2
  br i1 %slt151, label %loop.body123, label %loop.exit152

loop.exit152:                                     ; preds = %loop.latch147
  br label %arraydim

arraydim:                                         ; preds = %loop.exit152
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2multiply.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2multiply.k.read_arg_inner)
  %ptr_cast153 = bitcast [256 x [256 x i128]]** %fp2multiply.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast153, i128 2, i128 %fp2multiply.k.read_arg_inner)
  %ptr_cast154 = bitcast [256 x [256 x i128]]** %fp2multiply.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast154, i128 2, i128 %fp2multiply.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out155 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiply.out.declare_output, align 8
  %fp2multiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out155, [256 x [256 x i128]]** %fp2multiply.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2multiply* @fn_template_build_fp2multiply(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2multiply = alloca %struct_template_circuit_fp2multiply, align 8
  %fp2multiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply, i32 0, i32 0
  store i128 %0, i128* %fp2multiply.n.write_arg_inner, align 4
  %fp2multiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply, i32 0, i32 1
  store i128 %1, i128* %fp2multiply.k.write_arg_inner, align 4
  %fp2multiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2multiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply
}

define void @fn_template_init_fp2invert(%struct_template_circuit_fp2invert* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 0
  %fp2invert.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 1
  %fp2invert.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 2
  %fp2invert.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 3
  %fp2invert.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2invert.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2invert.in.read_input_inner, [256 x [256 x i128]]** %fp2invert.in.declare_input, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %fp2invert.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2invert.out.declare_output, align 8
  %j5 = call i128 @fn_intrinsic_utils_init()
  %inverse = alloca [256 x [256 x i128]]*, align 8
  %inverse6 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %inverse6, [256 x [256 x i128]]** %inverse, align 8
  %outRangeChecks = alloca [256 x [256 x %struct_template_circuit_num2bits*]]*, align 8
  %outRangeChecks7 = alloca [256 x [256 x %struct_template_circuit_num2bits*]], align 8
  store [256 x [256 x %struct_template_circuit_num2bits*]]* %outRangeChecks7, [256 x [256 x %struct_template_circuit_num2bits*]]** %outRangeChecks, align 8
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2invert.in.declare_input, align 8
  %call = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %fp2invert.n.read_arg_inner, i128 %fp2invert.k.read_arg_inner, [256 x [256 x i128]]* %in, [256 x i128]* %fp2invert.p.read_arg_inner)
  store [256 x [256 x i128]]* %call, [256 x [256 x i128]]** %inverse, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch21, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add23, %loop.latch21 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %inverse11 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %inverse, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %inverse11, i128 0, i128 %i.0, i128 %j.0
  %inverse14 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2invert.out.declare_output, align 8
  %out17 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0
  store i128 %inverse14, i128* %out17, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body10
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp2invert.k.read_arg_inner
  br i1 %slt, label %loop.body10, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch21

loop.latch21:                                     ; preds = %loop.exit
  %add23 = add i128 %i.0, 1
  %slt25 = icmp slt i128 %add23, 2
  br i1 %slt25, label %loop.body, label %loop.exit26

loop.exit26:                                      ; preds = %loop.latch21
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch59, %loop.exit26
  %i.1 = phi i128 [ 0, %loop.exit26 ], [ %add61, %loop.latch59 ]
  br label %loop.body29

loop.body29:                                      ; preds = %loop.latch52, %loop.body28
  %j.1 = phi i128 [ 0, %loop.body28 ], [ %add54, %loop.latch52 ]
  %call31 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %fp2invert.n.read_arg_inner)
  %ptr_getter32 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %outRangeChecks, align 8
  %outRangeChecks35 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %ptr_getter32, i128 0, i128 %i.1, i128 %j.1
  store %struct_template_circuit_num2bits* %call31, %struct_template_circuit_num2bits** %outRangeChecks35, align 8
  %out36 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2invert.out.declare_output, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out36, i128 0, i128 %i.1, i128 %j.1
  %out40 = load i128, i128* %array_getter39, align 4
  %outRangeChecks41 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %outRangeChecks, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %outRangeChecks41, i128 0, i128 %i.1, i128 %j.1
  %outRangeChecks45 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks45, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter46, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %out40, i1* @constraint.568)
  %ptr_getter47 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %outRangeChecks, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %ptr_getter47, i128 0, i128 %i.1, i128 %j.1
  %outRangeChecks51 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter50, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks51, i32 0, i32 1
  store i128 %out40, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch52

loop.latch52:                                     ; preds = %loop.body29
  %add54 = add i128 %j.1, 1
  %slt57 = icmp slt i128 %add54, %fp2invert.k.read_arg_inner
  br i1 %slt57, label %loop.body29, label %loop.exit58

loop.exit58:                                      ; preds = %loop.latch52
  br label %loop.latch59

loop.latch59:                                     ; preds = %loop.exit58
  %add61 = add i128 %i.1, 1
  %slt63 = icmp slt i128 %add61, 2
  br i1 %slt63, label %loop.body28, label %loop.exit64

loop.exit64:                                      ; preds = %loop.latch59
  %call68 = call %struct_template_circuit_fp2multiply* @fn_template_build_fp2multiply(i128 %fp2invert.n.read_arg_inner, i128 %fp2invert.k.read_arg_inner, [256 x i128]* %fp2invert.p.read_arg_inner)
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch112, %loop.exit64
  %i.2 = phi i128 [ 0, %loop.exit64 ], [ %add114, %loop.latch112 ]
  br label %loop.body70

loop.body70:                                      ; preds = %loop.latch105, %loop.body69
  %j.2 = phi i128 [ 0, %loop.body69 ], [ %add107, %loop.latch105 ]
  %in71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2invert.in.declare_input, align 8
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in71, i128 0, i128 %i.2, i128 %j.2
  %in75 = load i128, i128* %array_getter74, align 4
  %struct_getter77 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call68, i32 0, i32 3
  %fp2multiply.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter77, align 8
  %array_getter80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter, i128 0, i128 %i.2, i128 %j.2
  %in_out81 = load i128, i128* %array_getter80, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out81, i128 %in75, i1* @constraint.569)
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call68, i32 0, i32 3
  %fp2multiply.a.read_input_outter84 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter83, align 8
  %in_out87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter84, i128 0, i128 %i.2, i128 %j.2
  store i128 %in75, i128* %in_out87, align 4
  %out88 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2invert.out.declare_output, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out88, i128 0, i128 %i.2, i128 %j.2
  %out92 = load i128, i128* %array_getter91, align 4
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call68, i32 0, i32 4
  %fp2multiply.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter94, align 8
  %array_getter97 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter, i128 0, i128 %i.2, i128 %j.2
  %in_out98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out98, i128 %out92, i1* @constraint.570)
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call68, i32 0, i32 4
  %fp2multiply.b.read_input_outter101 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter100, align 8
  %in_out104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter101, i128 0, i128 %i.2, i128 %j.2
  store i128 %out92, i128* %in_out104, align 4
  br label %loop.latch105

loop.latch105:                                    ; preds = %loop.body70
  %add107 = add i128 %j.2, 1
  %slt110 = icmp slt i128 %add107, %fp2invert.k.read_arg_inner
  br i1 %slt110, label %loop.body70, label %loop.exit111

loop.exit111:                                     ; preds = %loop.latch105
  br label %loop.latch112

loop.latch112:                                    ; preds = %loop.exit111
  %add114 = add i128 %i.2, 1
  %slt116 = icmp slt i128 %add114, 2
  br i1 %slt116, label %loop.body69, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch112
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch143, %loop.exit117
  %i.3 = phi i128 [ 0, %loop.exit117 ], [ %add145, %loop.latch143 ]
  br label %loop.body119

loop.body119:                                     ; preds = %loop.latch136, %loop.body118
  %j.3 = phi i128 [ 0, %loop.body118 ], [ %add138, %loop.latch136 ]
  %eq = icmp eq i128 %i.3, 0
  %eq122 = icmp eq i128 %j.3, 0
  %and = and i1 %eq, %eq122
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body119
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call68, i32 0, i32 5
  %fp2multiply.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter124, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter, i128 0, i128 %i.3, i128 %j.3
  %in_out128 = load i128, i128* %array_getter127, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out128, i128 1, i1* @constraint.571)
  br label %if.exit

if.false:                                         ; preds = %loop.body119
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call68, i32 0, i32 5
  %fp2multiply.out.read_output_outter131 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter130, align 8
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter131, i128 0, i128 %i.3, i128 %j.3
  %in_out135 = load i128, i128* %array_getter134, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out135, i128 0, i1* @constraint.572)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch136

loop.latch136:                                    ; preds = %if.exit
  %add138 = add i128 %j.3, 1
  %slt141 = icmp slt i128 %add138, %fp2invert.k.read_arg_inner
  br i1 %slt141, label %loop.body119, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %i.3, 1
  %slt147 = icmp slt i128 %add145, 2
  br i1 %slt147, label %loop.body118, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %arraydim

arraydim:                                         ; preds = %loop.exit148
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2invert.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2invert.k.read_arg_inner)
  %ptr_cast149 = bitcast [256 x [256 x i128]]** %fp2invert.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast149, i128 2, i128 %fp2invert.k.read_arg_inner)
  %ptr_cast150 = bitcast [256 x [256 x i128]]** %inverse to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast150, i128 2, i128 50)
  %ptr_cast151 = bitcast [256 x [256 x %struct_template_circuit_num2bits*]]** %outRangeChecks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast151, i128 2, i128 %fp2invert.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out152 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2invert.out.declare_output, align 8
  %fp2invert.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %out152, [256 x [256 x i128]]** %fp2invert.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2invert* @fn_template_build_fp2invert(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2invert = alloca %struct_template_circuit_fp2invert, align 8
  %fp2invert.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert, i32 0, i32 0
  store i128 %0, i128* %fp2invert.n.write_arg_inner, align 4
  %fp2invert.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert, i32 0, i32 1
  store i128 %1, i128* %fp2invert.k.write_arg_inner, align 4
  %fp2invert.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2invert.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert
}

define void @fn_template_init_ellipticcurveaddunequalfp2(%struct_template_circuit_ellipticcurveaddunequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 0
  %ellipticcurveaddunequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 1
  %ellipticcurveaddunequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 2
  %ellipticcurveaddunequalfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %ellipticcurveaddunequalfp2.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %ellipticcurveaddunequalfp2.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %LOGK35 = call i128 @fn_intrinsic_utils_init()
  %dy = alloca [256 x [256 x i128]]*, align 8
  %dy6 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %dy6, [256 x [256 x i128]]** %dy, align 8
  %dx_inv = alloca [256 x [256 x i128]]*, align 8
  %dx_inv7 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %dx_inv7, [256 x [256 x i128]]** %dx_inv, align 8
  %y3 = alloca [256 x [256 x i128]]*, align 8
  %y38 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %y38, [256 x [256 x i128]]** %y3, align 8
  %j9 = call i128 @fn_intrinsic_utils_init()
  %dx = alloca [256 x [256 x i128]]*, align 8
  %dx10 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %dx10, [256 x [256 x i128]]** %dx, align 8
  %ind11 = call i128 @fn_intrinsic_utils_init()
  %i12 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurveaddunequalfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %cubic_mod = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, align 8
  %cubic_mod13 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  store [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod13, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %lambda_sq = alloca [256 x [256 x i128]]*, align 8
  %lambda_sq14 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %lambda_sq14, [256 x [256 x i128]]** %lambda_sq, align 8
  %LOGK15 = call i128 @fn_intrinsic_utils_init()
  %lambda = alloca [256 x [256 x i128]]*, align 8
  %lambda16 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %lambda16, [256 x [256 x i128]]** %lambda, align 8
  %x3 = alloca [256 x [256 x i128]]*, align 8
  %x317 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %x317, [256 x [256 x i128]]** %x3, align 8
  %cubic_red = alloca [256 x %struct_template_circuit_primereduce*]*, align 8
  %cubic_red18 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  store [256 x %struct_template_circuit_primereduce*]* %cubic_red18, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %range_check = alloca [256 x %struct_template_circuit_rangecheck2d*]*, align 8
  %range_check19 = alloca [256 x %struct_template_circuit_rangecheck2d*], align 8
  store [256 x %struct_template_circuit_rangecheck2d*]* %range_check19, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %call = call i128 @log_ceil(i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %mul = mul i128 12, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %mul25 = mul i128 %mul, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %mul27 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub = sub i128 %mul27, 1
  %mul28 = mul i128 %mul25, %sub
  %add = add i128 %mul28, 1
  %call29 = call i128 @log_ceil(i128 %add)
  %mul30 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add32 = add i128 %mul30, %call29
  %add33 = add i128 %add32, 2
  %slt = icmp slt i128 %add33, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 1
  %b36 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b36, [256 x [256 x i128]]* %spice_inline_array, align 4
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 1
  %a38 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter37, align 4
  %spice_inline_array39 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a38, [256 x [256 x i128]]* %spice_inline_array39, align 4
  %call40 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array39, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call40, [256 x [256 x i128]]** %dy, align 8
  %b43 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b43, i128 0, i128 0
  %b45 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter44, align 4
  %spice_inline_array46 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b45, [256 x [256 x i128]]* %spice_inline_array46, align 4
  %a47 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter48 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a47, i128 0, i128 0
  %a49 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter48, align 4
  %spice_inline_array50 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a49, [256 x [256 x i128]]* %spice_inline_array50, align 4
  %call52 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array46, [256 x [256 x i128]]* %spice_inline_array50, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call52, [256 x [256 x i128]]** %dx, align 8
  %dx55 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %dx, align 8
  %call57 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %dx55, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call57, [256 x [256 x i128]]** %dx_inv, align 8
  %dy60 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %dy, align 8
  %dx_inv61 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %dx_inv, align 8
  %call63 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %dy60, [256 x [256 x i128]]* %dx_inv61, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call63, [256 x [256 x i128]]** %lambda, align 8
  %lambda66 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lambda, align 8
  %lambda67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lambda, align 8
  %call69 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %lambda66, [256 x [256 x i128]]* %lambda67, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call69, [256 x [256 x i128]]** %lambda_sq, align 8
  %lambda_sq74 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lambda_sq, align 8
  %a75 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter76 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a75, i128 0, i128 0
  %a77 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter76, align 4
  %spice_inline_array78 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a77, [256 x [256 x i128]]* %spice_inline_array78, align 4
  %call80 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %lambda_sq74, [256 x [256 x i128]]* %spice_inline_array78, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %b81 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter82 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b81, i128 0, i128 0
  %b83 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter82, align 4
  %spice_inline_array84 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b83, [256 x [256 x i128]]* %spice_inline_array84, align 4
  %call86 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call80, [256 x [256 x i128]]* %spice_inline_array84, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call86, [256 x [256 x i128]]** %x3, align 8
  %lambda91 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lambda, align 8
  %a94 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a94, i128 0, i128 0
  %a96 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter95, align 4
  %spice_inline_array97 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a96, [256 x [256 x i128]]* %spice_inline_array97, align 4
  %x398 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %x3, align 8
  %call100 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array97, [256 x [256 x i128]]* %x398, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %call102 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %lambda91, [256 x [256 x i128]]* %call100, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %a103 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a103, i128 0, i128 1
  %a105 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter104, align 4
  %spice_inline_array106 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a105, [256 x [256 x i128]]* %spice_inline_array106, align 4
  %call108 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call102, [256 x [256 x i128]]* %spice_inline_array106, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call108, [256 x [256 x i128]]** %y3, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add137, %loop.latch ]
  %x3109 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %x3, align 8
  %array_getter111 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %x3109, i128 0, i128 0, i128 %i.0
  %x3112 = load i128, i128* %array_getter111, align 4
  %ptr_getter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %out114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter, i128 0, i128 0, i128 0, i128 %i.0
  store i128 %x3112, i128* %out114, align 4
  %x3115 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %x3, align 8
  %array_getter117 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %x3115, i128 0, i128 1, i128 %i.0
  %x3118 = load i128, i128* %array_getter117, align 4
  %ptr_getter119 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %out121 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter119, i128 0, i128 0, i128 1, i128 %i.0
  store i128 %x3118, i128* %out121, align 4
  %y3122 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %y3, align 8
  %array_getter124 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %y3122, i128 0, i128 0, i128 %i.0
  %y3125 = load i128, i128* %array_getter124, align 4
  %ptr_getter126 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %out128 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter126, i128 0, i128 1, i128 0, i128 %i.0
  store i128 %y3125, i128* %out128, align 4
  %y3129 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %y3, align 8
  %array_getter131 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %y3129, i128 0, i128 1, i128 %i.0
  %y3132 = load i128, i128* %array_getter131, align 4
  %ptr_getter133 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %out135 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter133, i128 0, i128 1, i128 1, i128 %i.0
  store i128 %y3132, i128* %out135, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add137 = add i128 %i.0, 1
  %slt140 = icmp slt i128 %add137, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt140, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call143 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 2)
  %call146 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 2)
  br label %loop.body147

loop.body147:                                     ; preds = %loop.latch250, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add252, %loop.latch250 ]
  br label %loop.body148

loop.body148:                                     ; preds = %loop.latch243, %loop.body147
  %j.0 = phi i128 [ 0, %loop.body147 ], [ %add245, %loop.latch243 ]
  %b149 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b149, i128 0, i128 0, i128 %i.1, i128 %j.0
  %b153 = load i128, i128* %array_getter152, align 4
  %a154 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter157 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a154, i128 0, i128 0, i128 %i.1, i128 %j.0
  %a158 = load i128, i128* %array_getter157, align 4
  %sub159 = sub i128 %b153, %a158
  %struct_getter161 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter161, align 8
  %array_getter164 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %dx_sq165 = load i128, i128* %array_getter164, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dx_sq165, i128 %sub159, i1* @constraint.573)
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter168 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter167, align 8
  %dx_sq171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter168, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub159, i128* %dx_sq171, align 4
  %b172 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter175 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b172, i128 0, i128 0, i128 %i.1, i128 %j.0
  %b176 = load i128, i128* %array_getter175, align 4
  %a177 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter180 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a177, i128 0, i128 0, i128 %i.1, i128 %j.0
  %a181 = load i128, i128* %array_getter180, align 4
  %sub182 = sub i128 %b176, %a181
  %struct_getter184 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter184, align 8
  %array_getter187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %dx_sq188 = load i128, i128* %array_getter187, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dx_sq188, i128 %sub182, i1* @constraint.574)
  %struct_getter190 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter191 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter190, align 8
  %dx_sq194 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter191, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub182, i128* %dx_sq194, align 4
  %b195 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter198 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b195, i128 0, i128 1, i128 %i.1, i128 %j.0
  %b199 = load i128, i128* %array_getter198, align 4
  %a200 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter203 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a200, i128 0, i128 1, i128 %i.1, i128 %j.0
  %a204 = load i128, i128* %array_getter203, align 4
  %sub205 = sub i128 %b199, %a204
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter208 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter207, align 8
  %array_getter211 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter208, i128 0, i128 %i.1, i128 %j.0
  %dy_sq212 = load i128, i128* %array_getter211, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dy_sq212, i128 %sub205, i1* @constraint.575)
  %struct_getter214 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter215 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter214, align 8
  %dy_sq218 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter215, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub205, i128* %dy_sq218, align 4
  %b219 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter222 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b219, i128 0, i128 1, i128 %i.1, i128 %j.0
  %b223 = load i128, i128* %array_getter222, align 4
  %a224 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter227 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a224, i128 0, i128 1, i128 %i.1, i128 %j.0
  %a228 = load i128, i128* %array_getter227, align 4
  %sub229 = sub i128 %b223, %a228
  %struct_getter231 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter232 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter231, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter232, i128 0, i128 %i.1, i128 %j.0
  %dy_sq236 = load i128, i128* %array_getter235, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dy_sq236, i128 %sub229, i1* @constraint.576)
  %struct_getter238 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter239 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter238, align 8
  %dy_sq242 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter239, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub229, i128* %dy_sq242, align 4
  br label %loop.latch243

loop.latch243:                                    ; preds = %loop.body148
  %add245 = add i128 %j.0, 1
  %slt248 = icmp slt i128 %add245, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt248, label %loop.body148, label %loop.exit249

loop.exit249:                                     ; preds = %loop.latch243
  br label %loop.latch250

loop.latch250:                                    ; preds = %loop.exit249
  %add252 = add i128 %i.1, 1
  %slt254 = icmp slt i128 %add252, 2
  br i1 %slt254, label %loop.body147, label %loop.exit255

loop.exit255:                                     ; preds = %loop.latch250
  %mul259 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub260 = sub i128 %mul259, 1
  %call261 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %sub260, i128 2, i128 2)
  br label %loop.body262

loop.body262:                                     ; preds = %loop.latch312, %loop.exit255
  %i.2 = phi i128 [ 0, %loop.exit255 ], [ %add314, %loop.latch312 ]
  %a263 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter265 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a263, i128 0, i128 0, i128 0, i128 %i.2
  %a266 = load i128, i128* %array_getter265, align 4
  %b267 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter269 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b267, i128 0, i128 0, i128 0, i128 %i.2
  %b270 = load i128, i128* %array_getter269, align 4
  %add271 = add i128 %a266, %b270
  %out272 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %array_getter274 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out272, i128 0, i128 0, i128 0, i128 %i.2
  %out275 = load i128, i128* %array_getter274, align 4
  %add276 = add i128 %add271, %out275
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter278, align 8
  %array_getter280 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter, i128 0, i128 0, i128 %i.2
  %cubic281 = load i128, i128* %array_getter280, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic281, i128 %add276, i1* @constraint.577)
  %struct_getter283 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter284 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter283, align 8
  %cubic286 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter284, i128 0, i128 0, i128 %i.2
  store i128 %add276, i128* %cubic286, align 4
  %a287 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter289 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a287, i128 0, i128 0, i128 1, i128 %i.2
  %a290 = load i128, i128* %array_getter289, align 4
  %b291 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter293 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b291, i128 0, i128 0, i128 1, i128 %i.2
  %b294 = load i128, i128* %array_getter293, align 4
  %add295 = add i128 %a290, %b294
  %out296 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %array_getter298 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out296, i128 0, i128 0, i128 1, i128 %i.2
  %out299 = load i128, i128* %array_getter298, align 4
  %add300 = add i128 %add295, %out299
  %struct_getter302 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter303 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter302, align 8
  %array_getter305 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter303, i128 0, i128 1, i128 %i.2
  %cubic306 = load i128, i128* %array_getter305, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic306, i128 %add300, i1* @constraint.578)
  %struct_getter308 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter309 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter308, align 8
  %cubic311 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter309, i128 0, i128 1, i128 %i.2
  store i128 %add300, i128* %cubic311, align 4
  br label %loop.latch312

loop.latch312:                                    ; preds = %loop.body262
  %add314 = add i128 %i.2, 1
  %slt317 = icmp slt i128 %add314, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt317, label %loop.body262, label %loop.exit318

loop.exit318:                                     ; preds = %loop.latch312
  br label %loop.body319

loop.body319:                                     ; preds = %loop.latch359, %loop.exit318
  %i.3 = phi i128 [ 0, %loop.exit318 ], [ %add361, %loop.latch359 ]
  %struct_getter321 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter321, align 8
  %array_getter323 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter, i128 0, i128 0, i128 %i.3
  %dx_sq324 = load i128, i128* %array_getter323, align 4
  %struct_getter326 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter327 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter326, align 8
  %array_getter329 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter327, i128 0, i128 2, i128 %i.3
  %dx_sq330 = load i128, i128* %array_getter329, align 4
  %sub331 = sub i128 %dx_sq324, %dx_sq330
  %struct_getter333 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter333, align 8
  %array_getter335 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter, i128 0, i128 0, i128 %i.3
  %cubic336 = load i128, i128* %array_getter335, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic336, i128 %sub331, i1* @constraint.579)
  %struct_getter338 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter339 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter338, align 8
  %cubic341 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter339, i128 0, i128 0, i128 %i.3
  store i128 %sub331, i128* %cubic341, align 4
  %struct_getter343 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call143, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter344 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter343, align 8
  %array_getter346 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter344, i128 0, i128 1, i128 %i.3
  %dx_sq347 = load i128, i128* %array_getter346, align 4
  %struct_getter349 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter350 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter349, align 8
  %array_getter352 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter350, i128 0, i128 1, i128 %i.3
  %cubic353 = load i128, i128* %array_getter352, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic353, i128 %dx_sq347, i1* @constraint.580)
  %struct_getter355 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter356 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter355, align 8
  %cubic358 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter356, i128 0, i128 1, i128 %i.3
  store i128 %dx_sq347, i128* %cubic358, align 4
  br label %loop.latch359

loop.latch359:                                    ; preds = %loop.body319
  %add361 = add i128 %i.3, 1
  %mul364 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub365 = sub i128 %mul364, 1
  %slt366 = icmp slt i128 %add361, %sub365
  br i1 %slt366, label %loop.body319, label %loop.exit367

loop.exit367:                                     ; preds = %loop.latch359
  %mul371 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub372 = sub i128 %mul371, 2
  %mul375 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add377 = add i128 %mul375, %call29
  %add378 = add i128 %add377, 2
  %call379 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %sub372, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner, i128 %add378)
  %ptr_getter380 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %cubic_red381 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter380, i128 0, i128 0
  store %struct_template_circuit_primereduce* %call379, %struct_template_circuit_primereduce** %cubic_red381, align 8
  %mul385 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub386 = sub i128 %mul385, 2
  %mul389 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add391 = add i128 %mul389, %call29
  %add392 = add i128 %add391, 2
  %call393 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %sub386, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner, i128 %add392)
  %ptr_getter394 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %cubic_red395 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter394, i128 0, i128 1
  store %struct_template_circuit_primereduce* %call393, %struct_template_circuit_primereduce** %cubic_red395, align 8
  br label %loop.body396

loop.body396:                                     ; preds = %loop.latch465, %loop.exit367
  %i.4 = phi i128 [ 0, %loop.exit367 ], [ %add467, %loop.latch465 ]
  %struct_getter398 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter398, align 8
  %array_getter400 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter, i128 0, i128 0, i128 %i.4
  %cubic401 = load i128, i128* %array_getter400, align 4
  %struct_getter403 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter404 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter403, align 8
  %array_getter406 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter404, i128 0, i128 2, i128 %i.4
  %cubic407 = load i128, i128* %array_getter406, align 4
  %sub408 = sub i128 %cubic401, %cubic407
  %struct_getter410 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter411 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter410, align 8
  %array_getter413 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter411, i128 0, i128 0, i128 %i.4
  %dy_sq414 = load i128, i128* %array_getter413, align 4
  %sub415 = sub i128 %sub408, %dy_sq414
  %struct_getter417 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter418 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter417, align 8
  %array_getter420 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter418, i128 0, i128 2, i128 %i.4
  %dy_sq421 = load i128, i128* %array_getter420, align 4
  %add422 = add i128 %sub415, %dy_sq421
  %cubic_red423 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter424 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red423, i128 0, i128 0
  %cubic_red425 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter424, align 8
  %struct_getter426 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red425, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter426, align 8
  %array_getter428 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.4
  %cubic_red429 = load i128, i128* %array_getter428, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_red429, i128 %add422, i1* @constraint.581)
  %ptr_getter430 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter431 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter430, i128 0, i128 0
  %cubic_red432 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter431, align 8
  %struct_getter433 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red432, i32 0, i32 5
  %primereduce.in.read_input_outter434 = load [256 x i128]*, [256 x i128]** %struct_getter433, align 8
  %cubic_red436 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter434, i128 0, i128 %i.4
  store i128 %add422, i128* %cubic_red436, align 4
  %struct_getter438 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter439 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter438, align 8
  %array_getter441 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter439, i128 0, i128 1, i128 %i.4
  %cubic442 = load i128, i128* %array_getter441, align 4
  %struct_getter444 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call146, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter445 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter444, align 8
  %array_getter447 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter445, i128 0, i128 1, i128 %i.4
  %dy_sq448 = load i128, i128* %array_getter447, align 4
  %sub449 = sub i128 %cubic442, %dy_sq448
  %cubic_red450 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter451 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red450, i128 0, i128 1
  %cubic_red452 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter451, align 8
  %struct_getter453 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red452, i32 0, i32 5
  %primereduce.in.read_input_outter454 = load [256 x i128]*, [256 x i128]** %struct_getter453, align 8
  %array_getter456 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter454, i128 0, i128 %i.4
  %cubic_red457 = load i128, i128* %array_getter456, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_red457, i128 %sub449, i1* @constraint.582)
  %ptr_getter458 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter459 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter458, i128 0, i128 1
  %cubic_red460 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter459, align 8
  %struct_getter461 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red460, i32 0, i32 5
  %primereduce.in.read_input_outter462 = load [256 x i128]*, [256 x i128]** %struct_getter461, align 8
  %cubic_red464 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter462, i128 0, i128 %i.4
  store i128 %sub449, i128* %cubic_red464, align 4
  br label %loop.latch465

loop.latch465:                                    ; preds = %loop.body396
  %add467 = add i128 %i.4, 1
  %mul470 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub471 = sub i128 %mul470, 1
  %slt472 = icmp slt i128 %add467, %sub471
  br i1 %slt472, label %loop.body396, label %loop.exit473

loop.exit473:                                     ; preds = %loop.latch465
  %mul475 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub476 = sub i128 %mul475, 1
  br label %loop.body477

loop.body477:                                     ; preds = %loop.latch527, %loop.exit473
  %i.5 = phi i128 [ %sub476, %loop.exit473 ], [ %add529, %loop.latch527 ]
  %struct_getter479 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter480 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter479, align 8
  %array_getter482 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter480, i128 0, i128 0, i128 %i.5
  %cubic483 = load i128, i128* %array_getter482, align 4
  %struct_getter485 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter486 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter485, align 8
  %array_getter488 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter486, i128 0, i128 2, i128 %i.5
  %cubic489 = load i128, i128* %array_getter488, align 4
  %sub490 = sub i128 %cubic483, %cubic489
  %cubic_red491 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter492 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red491, i128 0, i128 0
  %cubic_red493 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter492, align 8
  %struct_getter494 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red493, i32 0, i32 5
  %primereduce.in.read_input_outter495 = load [256 x i128]*, [256 x i128]** %struct_getter494, align 8
  %array_getter497 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter495, i128 0, i128 %i.5
  %cubic_red498 = load i128, i128* %array_getter497, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_red498, i128 %sub490, i1* @constraint.583)
  %ptr_getter499 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter500 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter499, i128 0, i128 0
  %cubic_red501 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter500, align 8
  %struct_getter502 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red501, i32 0, i32 5
  %primereduce.in.read_input_outter503 = load [256 x i128]*, [256 x i128]** %struct_getter502, align 8
  %cubic_red505 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter503, i128 0, i128 %i.5
  store i128 %sub490, i128* %cubic_red505, align 4
  %struct_getter507 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call261, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter508 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter507, align 8
  %array_getter510 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter508, i128 0, i128 1, i128 %i.5
  %cubic511 = load i128, i128* %array_getter510, align 4
  %cubic_red512 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter513 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red512, i128 0, i128 1
  %cubic_red514 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter513, align 8
  %struct_getter515 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red514, i32 0, i32 5
  %primereduce.in.read_input_outter516 = load [256 x i128]*, [256 x i128]** %struct_getter515, align 8
  %array_getter518 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter516, i128 0, i128 %i.5
  %cubic_red519 = load i128, i128* %array_getter518, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_red519, i128 %cubic511, i1* @constraint.584)
  %ptr_getter520 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter521 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %ptr_getter520, i128 0, i128 1
  %cubic_red522 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter521, align 8
  %struct_getter523 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red522, i32 0, i32 5
  %primereduce.in.read_input_outter524 = load [256 x i128]*, [256 x i128]** %struct_getter523, align 8
  %cubic_red526 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter524, i128 0, i128 %i.5
  store i128 %cubic511, i128* %cubic_red526, align 4
  br label %loop.latch527

loop.latch527:                                    ; preds = %loop.body477
  %add529 = add i128 %i.5, 1
  %mul532 = mul i128 3, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub533 = sub i128 %mul532, 2
  %slt534 = icmp slt i128 %add529, %sub533
  br i1 %slt534, label %loop.body477, label %loop.exit535

loop.exit535:                                     ; preds = %loop.latch527
  %mul539 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add541 = add i128 %mul539, %call29
  %add542 = add i128 %add541, 2
  %call544 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %add542, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %ptr_getter545 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %cubic_mod546 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter545, i128 0, i128 0
  store %struct_template_circuit_signedcheckcarrymodtozero* %call544, %struct_template_circuit_signedcheckcarrymodtozero** %cubic_mod546, align 8
  %mul550 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add552 = add i128 %mul550, %call29
  %add553 = add i128 %add552, 2
  %call555 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %add553, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %ptr_getter556 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %cubic_mod557 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter556, i128 0, i128 1
  store %struct_template_circuit_signedcheckcarrymodtozero* %call555, %struct_template_circuit_signedcheckcarrymodtozero** %cubic_mod557, align 8
  br label %loop.body558

loop.body558:                                     ; preds = %loop.latch603, %loop.exit535
  %i.6 = phi i128 [ 0, %loop.exit535 ], [ %add605, %loop.latch603 ]
  %cubic_red559 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter560 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red559, i128 0, i128 0
  %cubic_red561 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter560, align 8
  %struct_getter562 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red561, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter562, align 8
  %array_getter564 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.6
  %cubic_red565 = load i128, i128* %array_getter564, align 4
  %cubic_mod566 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %array_getter567 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod566, i128 0, i128 0
  %cubic_mod568 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter567, align 8
  %struct_getter569 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod568, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter569, align 8
  %array_getter571 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.6
  %cubic_mod572 = load i128, i128* %array_getter571, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_mod572, i128 %cubic_red565, i1* @constraint.585)
  %ptr_getter573 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %array_getter574 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter573, i128 0, i128 0
  %cubic_mod575 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter574, align 8
  %struct_getter576 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod575, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter577 = load [256 x i128]*, [256 x i128]** %struct_getter576, align 8
  %cubic_mod579 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter577, i128 0, i128 %i.6
  store i128 %cubic_red565, i128* %cubic_mod579, align 4
  %cubic_red580 = load [256 x %struct_template_circuit_primereduce*]*, [256 x %struct_template_circuit_primereduce*]** %cubic_red, align 8
  %array_getter581 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red580, i128 0, i128 1
  %cubic_red582 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter581, align 8
  %struct_getter583 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red582, i32 0, i32 6
  %primereduce.out.read_output_outter584 = load [256 x i128]*, [256 x i128]** %struct_getter583, align 8
  %array_getter586 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter584, i128 0, i128 %i.6
  %cubic_red587 = load i128, i128* %array_getter586, align 4
  %cubic_mod588 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %array_getter589 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod588, i128 0, i128 1
  %cubic_mod590 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter589, align 8
  %struct_getter591 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod590, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter592 = load [256 x i128]*, [256 x i128]** %struct_getter591, align 8
  %array_getter594 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter592, i128 0, i128 %i.6
  %cubic_mod595 = load i128, i128* %array_getter594, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_mod595, i128 %cubic_red587, i1* @constraint.586)
  %ptr_getter596 = load [256 x %struct_template_circuit_signedcheckcarrymodtozero*]*, [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod, align 8
  %array_getter597 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %ptr_getter596, i128 0, i128 1
  %cubic_mod598 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter597, align 8
  %struct_getter599 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod598, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter600 = load [256 x i128]*, [256 x i128]** %struct_getter599, align 8
  %cubic_mod602 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter600, i128 0, i128 %i.6
  store i128 %cubic_red587, i128* %cubic_mod602, align 4
  br label %loop.latch603

loop.latch603:                                    ; preds = %loop.body558
  %add605 = add i128 %i.6, 1
  %slt608 = icmp slt i128 %add605, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt608, label %loop.body558, label %loop.exit609

loop.exit609:                                     ; preds = %loop.latch603
  %call613 = call %struct_template_circuit_pointonlinefp2* @fn_template_build_pointonlinefp2(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  br label %loop.body614

loop.body614:                                     ; preds = %loop.latch691, %loop.exit609
  %i.7 = phi i128 [ 0, %loop.exit609 ], [ %add693, %loop.latch691 ]
  br label %loop.body615

loop.body615:                                     ; preds = %loop.latch685, %loop.body614
  %j.1 = phi i128 [ 0, %loop.body614 ], [ %add687, %loop.latch685 ]
  br label %loop.body616

loop.body616:                                     ; preds = %loop.latch679, %loop.body615
  %ind.0 = phi i128 [ 0, %loop.body615 ], [ %add681, %loop.latch679 ]
  %a617 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input, align 8
  %array_getter621 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a617, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %a622 = load i128, i128* %array_getter621, align 4
  %struct_getter624 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call613, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter624, align 8
  %array_getter628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter, i128 0, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %y_constraint629 = load i128, i128* %array_getter628, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_constraint629, i128 %a622, i1* @constraint.587)
  %struct_getter631 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call613, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter632 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter631, align 8
  %y_constraint636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter632, i128 0, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  store i128 %a622, i128* %y_constraint636, align 4
  %b637 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input, align 8
  %array_getter641 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b637, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %b642 = load i128, i128* %array_getter641, align 4
  %struct_getter644 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call613, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter645 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter644, align 8
  %array_getter649 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter645, i128 0, i128 1, i128 %j.1, i128 %ind.0, i128 %i.7
  %y_constraint650 = load i128, i128* %array_getter649, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_constraint650, i128 %b642, i1* @constraint.588)
  %struct_getter652 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call613, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter653 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter652, align 8
  %y_constraint657 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter653, i128 0, i128 1, i128 %j.1, i128 %ind.0, i128 %i.7
  store i128 %b642, i128* %y_constraint657, align 4
  %out658 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %array_getter662 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out658, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %out663 = load i128, i128* %array_getter662, align 4
  %struct_getter665 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call613, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter666 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter665, align 8
  %array_getter670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter666, i128 0, i128 2, i128 %j.1, i128 %ind.0, i128 %i.7
  %y_constraint671 = load i128, i128* %array_getter670, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_constraint671, i128 %out663, i1* @constraint.589)
  %struct_getter673 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call613, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter674 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter673, align 8
  %y_constraint678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter674, i128 0, i128 2, i128 %j.1, i128 %ind.0, i128 %i.7
  store i128 %out663, i128* %y_constraint678, align 4
  br label %loop.latch679

loop.latch679:                                    ; preds = %loop.body616
  %add681 = add i128 %ind.0, 1
  %slt683 = icmp slt i128 %add681, 2
  br i1 %slt683, label %loop.body616, label %loop.exit684

loop.exit684:                                     ; preds = %loop.latch679
  br label %loop.latch685

loop.latch685:                                    ; preds = %loop.exit684
  %add687 = add i128 %j.1, 1
  %slt689 = icmp slt i128 %add687, 2
  br i1 %slt689, label %loop.body615, label %loop.exit690

loop.exit690:                                     ; preds = %loop.latch685
  br label %loop.latch691

loop.latch691:                                    ; preds = %loop.exit690
  %add693 = add i128 %i.7, 1
  %slt696 = icmp slt i128 %add693, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt696, label %loop.body614, label %loop.exit697

loop.exit697:                                     ; preds = %loop.latch691
  %call700 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %ptr_getter701 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %range_check702 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter701, i128 0, i128 0
  store %struct_template_circuit_rangecheck2d* %call700, %struct_template_circuit_rangecheck2d** %range_check702, align 8
  %call705 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %ptr_getter706 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %range_check707 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter706, i128 0, i128 1
  store %struct_template_circuit_rangecheck2d* %call705, %struct_template_circuit_rangecheck2d** %range_check707, align 8
  br label %loop.body708

loop.body708:                                     ; preds = %loop.latch760, %loop.exit697
  %j.2 = phi i128 [ 0, %loop.exit697 ], [ %add762, %loop.latch760 ]
  br label %loop.body709

loop.body709:                                     ; preds = %loop.latch753, %loop.body708
  %i.8 = phi i128 [ 0, %loop.body708 ], [ %add755, %loop.latch753 ]
  %out710 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %array_getter713 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out710, i128 0, i128 0, i128 %j.2, i128 %i.8
  %out714 = load i128, i128* %array_getter713, align 4
  %range_check715 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter716 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check715, i128 0, i128 0
  %range_check717 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter716, align 8
  %struct_getter718 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check717, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter718, align 8
  %array_getter721 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.2, i128 %i.8
  %range_check722 = load i128, i128* %array_getter721, align 4
  call void @fn_intrinsic_utils_constraint(i128 %range_check722, i128 %out714, i1* @constraint.590)
  %ptr_getter723 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter724 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter723, i128 0, i128 0
  %range_check725 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter724, align 8
  %struct_getter726 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check725, i32 0, i32 2
  %rangecheck2d.in.read_input_outter727 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter726, align 8
  %range_check730 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter727, i128 0, i128 %j.2, i128 %i.8
  store i128 %out714, i128* %range_check730, align 4
  %out731 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %array_getter734 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out731, i128 0, i128 1, i128 %j.2, i128 %i.8
  %out735 = load i128, i128* %array_getter734, align 4
  %range_check736 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter737 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check736, i128 0, i128 1
  %range_check738 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter737, align 8
  %struct_getter739 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check738, i32 0, i32 2
  %rangecheck2d.in.read_input_outter740 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter739, align 8
  %array_getter743 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter740, i128 0, i128 %j.2, i128 %i.8
  %range_check744 = load i128, i128* %array_getter743, align 4
  call void @fn_intrinsic_utils_constraint(i128 %range_check744, i128 %out735, i1* @constraint.591)
  %ptr_getter745 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter746 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter745, i128 0, i128 1
  %range_check747 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter746, align 8
  %struct_getter748 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check747, i32 0, i32 2
  %rangecheck2d.in.read_input_outter749 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter748, align 8
  %range_check752 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter749, i128 0, i128 %j.2, i128 %i.8
  store i128 %out735, i128* %range_check752, align 4
  br label %loop.latch753

loop.latch753:                                    ; preds = %loop.body709
  %add755 = add i128 %i.8, 1
  %slt758 = icmp slt i128 %add755, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt758, label %loop.body709, label %loop.exit759

loop.exit759:                                     ; preds = %loop.latch753
  br label %loop.latch760

loop.latch760:                                    ; preds = %loop.exit759
  %add762 = add i128 %j.2, 1
  %slt764 = icmp slt i128 %add762, 2
  br i1 %slt764, label %loop.body708, label %loop.exit765

loop.exit765:                                     ; preds = %loop.latch760
  br label %arraydim

arraydim:                                         ; preds = %loop.exit765
  %ptr_cast = bitcast [256 x [256 x i128]]** %dx_inv to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 50)
  %ptr_cast766 = bitcast [256 x %struct_template_circuit_signedcheckcarrymodtozero*]** %cubic_mod to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast766, i128 2)
  %ptr_cast767 = bitcast [256 x [256 x i128]]** %dx to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast767, i128 2, i128 50)
  %ptr_cast768 = bitcast [256 x [256 x i128]]** %y3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast768, i128 2, i128 50)
  %ptr_cast769 = bitcast [256 x [256 x i128]]** %dy to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast769, i128 2, i128 50)
  %ptr_cast770 = bitcast [256 x %struct_template_circuit_primereduce*]** %cubic_red to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast770, i128 2)
  %ptr_cast771 = bitcast [256 x [256 x i128]]** %x3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast771, i128 2, i128 50)
  %ptr_cast772 = bitcast [256 x %struct_template_circuit_rangecheck2d*]** %range_check to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast772, i128 2)
  %ptr_cast773 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast773, i128 2, i128 2, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %ptr_cast774 = bitcast [256 x [256 x i128]]** %lambda_sq to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast774, i128 2, i128 50)
  %ptr_cast775 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast775, i128 2, i128 2, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %ptr_cast776 = bitcast [256 x [256 x i128]]** %lambda to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast776, i128 2, i128 50)
  %ptr_cast777 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast777, i128 2, i128 2, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out778 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.declare_output, align 8
  %ellipticcurveaddunequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out778, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_ellipticcurveaddunequalfp2 = alloca %struct_template_circuit_ellipticcurveaddunequalfp2, align 8
  %ellipticcurveaddunequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveaddunequalfp2.n.write_arg_inner, align 4
  %ellipticcurveaddunequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveaddunequalfp2.k.write_arg_inner, align 4
  %ellipticcurveaddunequalfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurveaddunequalfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2
}

define void @fn_template_init_signedfp2compresscarry(%struct_template_circuit_signedfp2compresscarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 0
  %signedfp2compresscarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 1
  %signedfp2compresscarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 2
  %signedfp2compresscarry.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 3
  %signedfp2compresscarry.overflow.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 4
  %signedfp2compresscarry.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 5
  %signedfp2compresscarry.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %signedfp2compresscarry.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2compresscarry.in.read_input_inner, [256 x [256 x i128]]** %signedfp2compresscarry.in.declare_input, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %signedfp2compresscarry.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2compresscarry.out.declare_output, align 8
  %LOGM8 = call i128 @fn_intrinsic_utils_init()
  %add = add i128 %signedfp2compresscarry.k.read_arg_inner, %signedfp2compresscarry.m.read_arg_inner
  %add11 = add i128 %signedfp2compresscarry.m.read_arg_inner, 1
  %call = call i128 @log_ceil(i128 %add11)
  %add15 = add i128 %signedfp2compresscarry.overflow.read_arg_inner, %signedfp2compresscarry.n.read_arg_inner
  %add17 = add i128 %add15, %call
  %call18 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %signedfp2compresscarry.n.read_arg_inner, i128 %signedfp2compresscarry.k.read_arg_inner, i128 %signedfp2compresscarry.m.read_arg_inner, [256 x i128]* %signedfp2compresscarry.p.read_arg_inner, i128 %add17)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch40, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add42, %loop.latch40 ]
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add35, %loop.latch ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2compresscarry.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %i.0, i128 %idx.0
  %in22 = load i128, i128* %array_getter, align 4
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call18, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter24, align 8
  %array_getter27 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress28, i128 %in22, i1* @constraint.592)
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call18, i32 0, i32 5
  %fp2compress.in.read_input_outter30 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter29, align 8
  %compress33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter30, i128 0, i128 %i.0, i128 %idx.0
  store i128 %in22, i128* %compress33, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body19
  %add35 = add i128 %idx.0, 1
  %add39 = add i128 %signedfp2compresscarry.k.read_arg_inner, %signedfp2compresscarry.m.read_arg_inner
  %slt = icmp slt i128 %add35, %add39
  br i1 %slt, label %loop.body19, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch40

loop.latch40:                                     ; preds = %loop.exit
  %add42 = add i128 %i.0, 1
  %slt44 = icmp slt i128 %add42, 2
  br i1 %slt44, label %loop.body, label %loop.exit45

loop.exit45:                                      ; preds = %loop.latch40
  %add50 = add i128 %signedfp2compresscarry.overflow.read_arg_inner, %signedfp2compresscarry.n.read_arg_inner
  %add52 = add i128 %add50, %call
  %call54 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %signedfp2compresscarry.n.read_arg_inner, i128 %signedfp2compresscarry.k.read_arg_inner, i128 %add52, [256 x i128]* %signedfp2compresscarry.p.read_arg_inner)
  br label %loop.body55

loop.body55:                                      ; preds = %loop.latch82, %loop.exit45
  %i.1 = phi i128 [ 0, %loop.exit45 ], [ %add84, %loop.latch82 ]
  br label %loop.body56

loop.body56:                                      ; preds = %loop.latch75, %loop.body55
  %idx.1 = phi i128 [ 0, %loop.body55 ], [ %add77, %loop.latch75 ]
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call18, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter58, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.1
  %compress62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call54, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter64, align 8
  %array_getter67 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %idx.1
  %carry68 = load i128, i128* %array_getter67, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry68, i128 %compress62, i1* @constraint.593)
  %struct_getter70 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call54, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter70, align 8
  %carry74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter71, i128 0, i128 %i.1, i128 %idx.1
  store i128 %compress62, i128* %carry74, align 4
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.body56
  %add77 = add i128 %idx.1, 1
  %slt80 = icmp slt i128 %add77, %signedfp2compresscarry.k.read_arg_inner
  br i1 %slt80, label %loop.body56, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch75
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.exit81
  %add84 = add i128 %i.1, 1
  %slt86 = icmp slt i128 %add84, 2
  br i1 %slt86, label %loop.body55, label %loop.exit87

loop.exit87:                                      ; preds = %loop.latch82
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch112, %loop.exit87
  %i.2 = phi i128 [ 0, %loop.exit87 ], [ %add114, %loop.latch112 ]
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch105, %loop.body88
  %idx.2 = phi i128 [ 0, %loop.body88 ], [ %add107, %loop.latch105 ]
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call54, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter91, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %idx.2
  %carry95 = load i128, i128* %array_getter94, align 4
  %out96 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2compresscarry.out.declare_output, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out96, i128 0, i128 %i.2, i128 %idx.2
  %out100 = load i128, i128* %array_getter99, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out100, i128 %carry95, i1* @constraint.594)
  %ptr_getter101 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2compresscarry.out.declare_output, align 8
  %out104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter101, i128 0, i128 %i.2, i128 %idx.2
  store i128 %carry95, i128* %out104, align 4
  br label %loop.latch105

loop.latch105:                                    ; preds = %loop.body89
  %add107 = add i128 %idx.2, 1
  %slt110 = icmp slt i128 %add107, %signedfp2compresscarry.k.read_arg_inner
  br i1 %slt110, label %loop.body89, label %loop.exit111

loop.exit111:                                     ; preds = %loop.latch105
  br label %loop.latch112

loop.latch112:                                    ; preds = %loop.exit111
  %add114 = add i128 %i.2, 1
  %slt116 = icmp slt i128 %add114, 2
  br i1 %slt116, label %loop.body88, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch112
  br label %arraydim

arraydim:                                         ; preds = %loop.exit117
  %ptr_cast = bitcast [256 x [256 x i128]]** %signedfp2compresscarry.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %signedfp2compresscarry.k.read_arg_inner)
  %ptr_cast118 = bitcast [256 x [256 x i128]]** %signedfp2compresscarry.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast118, i128 2, i128 %add)
  br label %exit

exit:                                             ; preds = %arraydim
  %out119 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2compresscarry.out.declare_output, align 8
  %signedfp2compresscarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out119, [256 x [256 x i128]]** %signedfp2compresscarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2compresscarry* @fn_template_build_signedfp2compresscarry(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_signedfp2compresscarry = alloca %struct_template_circuit_signedfp2compresscarry, align 8
  %signedfp2compresscarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 0
  store i128 %0, i128* %signedfp2compresscarry.n.write_arg_inner, align 4
  %signedfp2compresscarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 1
  store i128 %1, i128* %signedfp2compresscarry.k.write_arg_inner, align 4
  %signedfp2compresscarry.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 2
  store i128 %2, i128* %signedfp2compresscarry.m.write_arg_inner, align 4
  %signedfp2compresscarry.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 3
  store i128 %3, i128* %signedfp2compresscarry.overflow.write_arg_inner, align 4
  %signedfp2compresscarry.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %signedfp2compresscarry.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry
}

define void @fn_template_init_fp12frobeniusmap(%struct_template_circuit_fp12frobeniusmap* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 0
  %fp12frobeniusmap.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 1
  %fp12frobeniusmap.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 2
  %fp12frobeniusmap.power.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12frobeniusmap.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %eps4 = call i128 @fn_intrinsic_utils_init()
  %fp12frobeniusmap.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %j5 = call i128 @fn_intrinsic_utils_init()
  %in_frob = alloca [256 x %struct_template_circuit_fp2frobeniusmap*]*, align 8
  %in_frob6 = alloca [256 x %struct_template_circuit_fp2frobeniusmap*], align 8
  store [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob6, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %mult_odd = alloca [256 x %struct_template_circuit_fp2multiply*]*, align 8
  %mult_odd7 = alloca [256 x %struct_template_circuit_fp2multiply*], align 8
  store [256 x %struct_template_circuit_fp2multiply*]* %mult_odd7, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %FP12_FROBENIUS_COEFFICIENTS = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %FP12_FROBENIUS_COEFFICIENTS8 = alloca [256 x [256 x [256 x [256 x i128]]]], align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %FP12_FROBENIUS_COEFFICIENTS8, [256 x [256 x [256 x [256 x i128]]]]** %FP12_FROBENIUS_COEFFICIENTS, align 8
  %p = alloca [256 x i128]*, align 8
  %p9 = alloca [256 x i128], align 8
  store [256 x i128]* %p9, [256 x i128]** %p, align 8
  %pow10 = call i128 @fn_intrinsic_utils_init()
  %mult_even = alloca [256 x [256 x %struct_template_circuit_fpmultiply*]]*, align 8
  %mult_even11 = alloca [256 x [256 x %struct_template_circuit_fpmultiply*]], align 8
  store [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %i12 = call i128 @fn_intrinsic_utils_init()
  %call = call [256 x i128]* @get_BLS12_381_prime(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner)
  store [256 x i128]* %call, [256 x i128]** %p, align 8
  %call17 = call [256 x [256 x [256 x [256 x i128]]]]* @get_Fp12_frobenius(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner)
  store [256 x [256 x [256 x [256 x i128]]]]* %call17, [256 x [256 x [256 x [256 x i128]]]]** %FP12_FROBENIUS_COEFFICIENTS, align 8
  %mod = srem i128 %fp12frobeniusmap.power.read_arg_inner, 12
  %mod19 = srem i128 %mod, 2
  %eq = icmp eq i128 %mod19, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  br label %loop.body

if.false:                                         ; preds = %entry
  br label %loop.body202

loop.body:                                        ; preds = %loop.latch, %if.true
  %j.0 = phi i128 [ 0, %if.true ], [ %add, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0, i128 0, i128 %j.0
  %in21 = load i128, i128* %array_getter, align 4
  %out22 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out22, i128 0, i128 0, i128 0, i128 %j.0
  %out25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out25, i128 %in21, i1* @constraint.595)
  %ptr_getter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out27 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter, i128 0, i128 0, i128 0, i128 %j.0
  store i128 %in21, i128* %out27, align 4
  %in28 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %array_getter30 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in28, i128 0, i128 0, i128 1, i128 %j.0
  %in31 = load i128, i128* %array_getter30, align 4
  %out32 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out32, i128 0, i128 0, i128 1, i128 %j.0
  %out35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out35, i128 %in31, i1* @constraint.596)
  %ptr_getter36 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out38 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter36, i128 0, i128 0, i128 1, i128 %j.0
  store i128 %in31, i128* %out38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body42

loop.body42:                                      ; preds = %loop.latch196, %loop.exit
  %i.0 = phi i128 [ 1, %loop.exit ], [ %add198, %loop.latch196 ]
  %p45 = load [256 x i128]*, [256 x i128]** %p, align 8
  %call46 = call %struct_template_circuit_fpmultiply* @fn_template_build_fpmultiply(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, [256 x i128]* %p45)
  %ptr_getter47 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %mult_even49 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %ptr_getter47, i128 0, i128 %i.0, i128 0
  store %struct_template_circuit_fpmultiply* %call46, %struct_template_circuit_fpmultiply** %mult_even49, align 8
  %p52 = load [256 x i128]*, [256 x i128]** %p, align 8
  %call53 = call %struct_template_circuit_fpmultiply* @fn_template_build_fpmultiply(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, [256 x i128]* %p52)
  %ptr_getter54 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %mult_even56 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %ptr_getter54, i128 0, i128 %i.0, i128 1
  store %struct_template_circuit_fpmultiply* %call53, %struct_template_circuit_fpmultiply** %mult_even56, align 8
  br label %loop.body57

loop.body57:                                      ; preds = %loop.latch146, %loop.body42
  %j.1 = phi i128 [ 0, %loop.body42 ], [ %add148, %loop.latch146 ]
  %in58 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in58, i128 0, i128 %i.0, i128 0, i128 %j.1
  %in62 = load i128, i128* %array_getter61, align 4
  %mult_even63 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter65 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even63, i128 0, i128 %i.0, i128 0
  %mult_even66 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter65, align 8
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even66, i32 0, i32 3
  %fpmultiply.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter67, align 8
  %array_getter69 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter, i128 0, i128 %j.1
  %mult_even70 = load i128, i128* %array_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult_even70, i128 %in62, i1* @constraint.597)
  %ptr_getter71 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter73 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %ptr_getter71, i128 0, i128 %i.0, i128 0
  %mult_even74 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter73, align 8
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even74, i32 0, i32 3
  %fpmultiply.a.read_input_outter76 = load [256 x i128]*, [256 x i128]** %struct_getter75, align 8
  %mult_even78 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter76, i128 0, i128 %j.1
  store i128 %in62, i128* %mult_even78, align 4
  %in79 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %array_getter82 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in79, i128 0, i128 %i.0, i128 1, i128 %j.1
  %in83 = load i128, i128* %array_getter82, align 4
  %mult_even84 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter86 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even84, i128 0, i128 %i.0, i128 1
  %mult_even87 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter86, align 8
  %struct_getter88 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even87, i32 0, i32 3
  %fpmultiply.a.read_input_outter89 = load [256 x i128]*, [256 x i128]** %struct_getter88, align 8
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter89, i128 0, i128 %j.1
  %mult_even92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult_even92, i128 %in83, i1* @constraint.598)
  %ptr_getter93 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %ptr_getter93, i128 0, i128 %i.0, i128 1
  %mult_even96 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter95, align 8
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even96, i32 0, i32 3
  %fpmultiply.a.read_input_outter98 = load [256 x i128]*, [256 x i128]** %struct_getter97, align 8
  %mult_even100 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter98, i128 0, i128 %j.1
  store i128 %in83, i128* %mult_even100, align 4
  %FP12_FROBENIUS_COEFFICIENTS101 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %FP12_FROBENIUS_COEFFICIENTS, align 8
  %array_getter105 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %FP12_FROBENIUS_COEFFICIENTS101, i128 0, i128 %mod, i128 %i.0, i128 0, i128 %j.1
  %FP12_FROBENIUS_COEFFICIENTS106 = load i128, i128* %array_getter105, align 4
  %mult_even107 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter109 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even107, i128 0, i128 %i.0, i128 0
  %mult_even110 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter109, align 8
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even110, i32 0, i32 4
  %fpmultiply.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter111, align 8
  %array_getter113 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter, i128 0, i128 %j.1
  %mult_even114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult_even114, i128 %FP12_FROBENIUS_COEFFICIENTS106, i1* @constraint.599)
  %ptr_getter115 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter117 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %ptr_getter115, i128 0, i128 %i.0, i128 0
  %mult_even118 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter117, align 8
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even118, i32 0, i32 4
  %fpmultiply.b.read_input_outter120 = load [256 x i128]*, [256 x i128]** %struct_getter119, align 8
  %mult_even122 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter120, i128 0, i128 %j.1
  store i128 %FP12_FROBENIUS_COEFFICIENTS106, i128* %mult_even122, align 4
  %FP12_FROBENIUS_COEFFICIENTS123 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %FP12_FROBENIUS_COEFFICIENTS, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %FP12_FROBENIUS_COEFFICIENTS123, i128 0, i128 %mod, i128 %i.0, i128 0, i128 %j.1
  %FP12_FROBENIUS_COEFFICIENTS128 = load i128, i128* %array_getter127, align 4
  %mult_even129 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter131 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even129, i128 0, i128 %i.0, i128 1
  %mult_even132 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter131, align 8
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even132, i32 0, i32 4
  %fpmultiply.b.read_input_outter134 = load [256 x i128]*, [256 x i128]** %struct_getter133, align 8
  %array_getter136 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter134, i128 0, i128 %j.1
  %mult_even137 = load i128, i128* %array_getter136, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult_even137, i128 %FP12_FROBENIUS_COEFFICIENTS128, i1* @constraint.600)
  %ptr_getter138 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter140 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %ptr_getter138, i128 0, i128 %i.0, i128 1
  %mult_even141 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter140, align 8
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even141, i32 0, i32 4
  %fpmultiply.b.read_input_outter143 = load [256 x i128]*, [256 x i128]** %struct_getter142, align 8
  %mult_even145 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter143, i128 0, i128 %j.1
  store i128 %FP12_FROBENIUS_COEFFICIENTS128, i128* %mult_even145, align 4
  br label %loop.latch146

loop.latch146:                                    ; preds = %loop.body57
  %add148 = add i128 %j.1, 1
  %slt151 = icmp slt i128 %add148, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt151, label %loop.body57, label %loop.exit152

loop.exit152:                                     ; preds = %loop.latch146
  br label %loop.body153

loop.body153:                                     ; preds = %loop.latch189, %loop.exit152
  %j.2 = phi i128 [ 0, %loop.exit152 ], [ %add191, %loop.latch189 ]
  %mult_even154 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even154, i128 0, i128 %i.0, i128 0
  %mult_even157 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter156, align 8
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even157, i32 0, i32 5
  %fpmultiply.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter158, align 8
  %array_getter160 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.out.read_output_outter, i128 0, i128 %j.2
  %mult_even161 = load i128, i128* %array_getter160, align 4
  %out162 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter165 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out162, i128 0, i128 %i.0, i128 0, i128 %j.2
  %out166 = load i128, i128* %array_getter165, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out166, i128 %mult_even161, i1* @constraint.601)
  %ptr_getter167 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out170 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter167, i128 0, i128 %i.0, i128 0, i128 %j.2
  store i128 %mult_even161, i128* %out170, align 4
  %mult_even171 = load [256 x [256 x %struct_template_circuit_fpmultiply*]]*, [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even, align 8
  %array_getter173 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even171, i128 0, i128 %i.0, i128 1
  %mult_even174 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter173, align 8
  %struct_getter175 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even174, i32 0, i32 5
  %fpmultiply.out.read_output_outter176 = load [256 x i128]*, [256 x i128]** %struct_getter175, align 8
  %array_getter178 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.out.read_output_outter176, i128 0, i128 %j.2
  %mult_even179 = load i128, i128* %array_getter178, align 4
  %out180 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter183 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out180, i128 0, i128 %i.0, i128 1, i128 %j.2
  %out184 = load i128, i128* %array_getter183, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out184, i128 %mult_even179, i1* @constraint.602)
  %ptr_getter185 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out188 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter185, i128 0, i128 %i.0, i128 1, i128 %j.2
  store i128 %mult_even179, i128* %out188, align 4
  br label %loop.latch189

loop.latch189:                                    ; preds = %loop.body153
  %add191 = add i128 %j.2, 1
  %slt194 = icmp slt i128 %add191, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt194, label %loop.body153, label %loop.exit195

loop.exit195:                                     ; preds = %loop.latch189
  br label %loop.latch196

loop.latch196:                                    ; preds = %loop.exit195
  %add198 = add i128 %i.0, 1
  %slt200 = icmp slt i128 %add198, 6
  br i1 %slt200, label %loop.body42, label %loop.exit201

loop.exit201:                                     ; preds = %loop.latch196
  br label %if.exit

loop.body202:                                     ; preds = %loop.latch262, %if.false
  %i.1 = phi i128 [ 0, %if.false ], [ %add264, %loop.latch262 ]
  %p206 = load [256 x i128]*, [256 x i128]** %p, align 8
  %call207 = call %struct_template_circuit_fp2frobeniusmap* @fn_template_build_fp2frobeniusmap(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, i128 %mod, [256 x i128]* %p206)
  %ptr_getter208 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %in_frob210 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %ptr_getter208, i128 0, i128 %i.1
  store %struct_template_circuit_fp2frobeniusmap* %call207, %struct_template_circuit_fp2frobeniusmap** %in_frob210, align 8
  br label %loop.body211

loop.body211:                                     ; preds = %loop.latch255, %loop.body202
  %j.3 = phi i128 [ 0, %loop.body202 ], [ %add257, %loop.latch255 ]
  %in212 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %array_getter215 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in212, i128 0, i128 %i.1, i128 0, i128 %j.3
  %in216 = load i128, i128* %array_getter215, align 4
  %in_frob217 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter219 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob217, i128 0, i128 %i.1
  %in_frob220 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter219, align 8
  %struct_getter221 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob220, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter221, align 8
  %array_getter223 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter, i128 0, i128 0, i128 %j.3
  %in_frob224 = load i128, i128* %array_getter223, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_frob224, i128 %in216, i1* @constraint.603)
  %ptr_getter225 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter227 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %ptr_getter225, i128 0, i128 %i.1
  %in_frob228 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter227, align 8
  %struct_getter229 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob228, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter230 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter229, align 8
  %in_frob232 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter230, i128 0, i128 0, i128 %j.3
  store i128 %in216, i128* %in_frob232, align 4
  %in233 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input, align 8
  %array_getter236 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in233, i128 0, i128 %i.1, i128 1, i128 %j.3
  %in237 = load i128, i128* %array_getter236, align 4
  %in_frob238 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter240 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob238, i128 0, i128 %i.1
  %in_frob241 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter240, align 8
  %struct_getter242 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob241, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter243 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter242, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter243, i128 0, i128 1, i128 %j.3
  %in_frob246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_frob246, i128 %in237, i1* @constraint.604)
  %ptr_getter247 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter249 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %ptr_getter247, i128 0, i128 %i.1
  %in_frob250 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter249, align 8
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob250, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter252 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter251, align 8
  %in_frob254 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter252, i128 0, i128 1, i128 %j.3
  store i128 %in237, i128* %in_frob254, align 4
  br label %loop.latch255

loop.latch255:                                    ; preds = %loop.body211
  %add257 = add i128 %j.3, 1
  %slt260 = icmp slt i128 %add257, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt260, label %loop.body211, label %loop.exit261

loop.exit261:                                     ; preds = %loop.latch255
  br label %loop.latch262

loop.latch262:                                    ; preds = %loop.exit261
  %add264 = add i128 %i.1, 1
  %slt266 = icmp slt i128 %add264, 6
  br i1 %slt266, label %loop.body202, label %loop.exit267

loop.exit267:                                     ; preds = %loop.latch262
  br label %loop.body268

loop.body268:                                     ; preds = %loop.latch298, %loop.exit267
  %j.4 = phi i128 [ 0, %loop.exit267 ], [ %add300, %loop.latch298 ]
  %in_frob269 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter270 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob269, i128 0, i128 0
  %in_frob271 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter270, align 8
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob271, i32 0, i32 5
  %fp2frobeniusmap.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter272, align 8
  %array_getter274 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.out.read_output_outter, i128 0, i128 0, i128 %j.4
  %in_frob275 = load i128, i128* %array_getter274, align 4
  %out276 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter278 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out276, i128 0, i128 0, i128 0, i128 %j.4
  %out279 = load i128, i128* %array_getter278, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out279, i128 %in_frob275, i1* @constraint.605)
  %ptr_getter280 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out282 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter280, i128 0, i128 0, i128 0, i128 %j.4
  store i128 %in_frob275, i128* %out282, align 4
  %in_frob283 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter284 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob283, i128 0, i128 0
  %in_frob285 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter284, align 8
  %struct_getter286 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob285, i32 0, i32 5
  %fp2frobeniusmap.out.read_output_outter287 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter286, align 8
  %array_getter289 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.out.read_output_outter287, i128 0, i128 1, i128 %j.4
  %in_frob290 = load i128, i128* %array_getter289, align 4
  %out291 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter293 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out291, i128 0, i128 0, i128 1, i128 %j.4
  %out294 = load i128, i128* %array_getter293, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out294, i128 %in_frob290, i1* @constraint.606)
  %ptr_getter295 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out297 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter295, i128 0, i128 0, i128 1, i128 %j.4
  store i128 %in_frob290, i128* %out297, align 4
  br label %loop.latch298

loop.latch298:                                    ; preds = %loop.body268
  %add300 = add i128 %j.4, 1
  %slt303 = icmp slt i128 %add300, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt303, label %loop.body268, label %loop.exit304

loop.exit304:                                     ; preds = %loop.latch298
  br label %loop.body305

loop.body305:                                     ; preds = %loop.latch424, %loop.exit304
  %i.2 = phi i128 [ 1, %loop.exit304 ], [ %add426, %loop.latch424 ]
  %p308 = load [256 x i128]*, [256 x i128]** %p, align 8
  %call309 = call %struct_template_circuit_fp2multiply* @fn_template_build_fp2multiply(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, [256 x i128]* %p308)
  %ptr_getter310 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %mult_odd312 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %ptr_getter310, i128 0, i128 %i.2
  store %struct_template_circuit_fp2multiply* %call309, %struct_template_circuit_fp2multiply** %mult_odd312, align 8
  br label %loop.body313

loop.body313:                                     ; preds = %loop.latch374, %loop.body305
  %j.5 = phi i128 [ 0, %loop.body305 ], [ %add376, %loop.latch374 ]
  br label %loop.body314

loop.body314:                                     ; preds = %loop.latch368, %loop.body313
  %eps.0 = phi i128 [ 0, %loop.body313 ], [ %add370, %loop.latch368 ]
  %in_frob315 = load [256 x %struct_template_circuit_fp2frobeniusmap*]*, [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob, align 8
  %array_getter317 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob315, i128 0, i128 %i.2
  %in_frob318 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter317, align 8
  %struct_getter319 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob318, i32 0, i32 5
  %fp2frobeniusmap.out.read_output_outter320 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter319, align 8
  %array_getter323 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.out.read_output_outter320, i128 0, i128 %eps.0, i128 %j.5
  %in_frob324 = load i128, i128* %array_getter323, align 4
  %mult_odd325 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %array_getter327 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd325, i128 0, i128 %i.2
  %mult_odd328 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter327, align 8
  %struct_getter329 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd328, i32 0, i32 3
  %fp2multiply.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter329, align 8
  %array_getter332 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter, i128 0, i128 %eps.0, i128 %j.5
  %mult_odd333 = load i128, i128* %array_getter332, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult_odd333, i128 %in_frob324, i1* @constraint.607)
  %ptr_getter334 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %array_getter336 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %ptr_getter334, i128 0, i128 %i.2
  %mult_odd337 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter336, align 8
  %struct_getter338 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd337, i32 0, i32 3
  %fp2multiply.a.read_input_outter339 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter338, align 8
  %mult_odd342 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter339, i128 0, i128 %eps.0, i128 %j.5
  store i128 %in_frob324, i128* %mult_odd342, align 4
  %FP12_FROBENIUS_COEFFICIENTS343 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %FP12_FROBENIUS_COEFFICIENTS, align 8
  %array_getter348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %FP12_FROBENIUS_COEFFICIENTS343, i128 0, i128 %mod, i128 %i.2, i128 %eps.0, i128 %j.5
  %FP12_FROBENIUS_COEFFICIENTS349 = load i128, i128* %array_getter348, align 4
  %mult_odd350 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %array_getter352 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd350, i128 0, i128 %i.2
  %mult_odd353 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter352, align 8
  %struct_getter354 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd353, i32 0, i32 4
  %fp2multiply.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter354, align 8
  %array_getter357 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter, i128 0, i128 %eps.0, i128 %j.5
  %mult_odd358 = load i128, i128* %array_getter357, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult_odd358, i128 %FP12_FROBENIUS_COEFFICIENTS349, i1* @constraint.608)
  %ptr_getter359 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %array_getter361 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %ptr_getter359, i128 0, i128 %i.2
  %mult_odd362 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter361, align 8
  %struct_getter363 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd362, i32 0, i32 4
  %fp2multiply.b.read_input_outter364 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter363, align 8
  %mult_odd367 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter364, i128 0, i128 %eps.0, i128 %j.5
  store i128 %FP12_FROBENIUS_COEFFICIENTS349, i128* %mult_odd367, align 4
  br label %loop.latch368

loop.latch368:                                    ; preds = %loop.body314
  %add370 = add i128 %eps.0, 1
  %slt372 = icmp slt i128 %add370, 2
  br i1 %slt372, label %loop.body314, label %loop.exit373

loop.exit373:                                     ; preds = %loop.latch368
  br label %loop.latch374

loop.latch374:                                    ; preds = %loop.exit373
  %add376 = add i128 %j.5, 1
  %slt379 = icmp slt i128 %add376, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt379, label %loop.body313, label %loop.exit380

loop.exit380:                                     ; preds = %loop.latch374
  br label %loop.body381

loop.body381:                                     ; preds = %loop.latch417, %loop.exit380
  %j.6 = phi i128 [ 0, %loop.exit380 ], [ %add419, %loop.latch417 ]
  %mult_odd382 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %array_getter384 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd382, i128 0, i128 %i.2
  %mult_odd385 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter384, align 8
  %struct_getter386 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd385, i32 0, i32 5
  %fp2multiply.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter386, align 8
  %array_getter388 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter, i128 0, i128 0, i128 %j.6
  %mult_odd389 = load i128, i128* %array_getter388, align 4
  %out390 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter393 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out390, i128 0, i128 %i.2, i128 0, i128 %j.6
  %out394 = load i128, i128* %array_getter393, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out394, i128 %mult_odd389, i1* @constraint.609)
  %ptr_getter395 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out398 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter395, i128 0, i128 %i.2, i128 0, i128 %j.6
  store i128 %mult_odd389, i128* %out398, align 4
  %mult_odd399 = load [256 x %struct_template_circuit_fp2multiply*]*, [256 x %struct_template_circuit_fp2multiply*]** %mult_odd, align 8
  %array_getter401 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd399, i128 0, i128 %i.2
  %mult_odd402 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter401, align 8
  %struct_getter403 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd402, i32 0, i32 5
  %fp2multiply.out.read_output_outter404 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter403, align 8
  %array_getter406 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter404, i128 0, i128 1, i128 %j.6
  %mult_odd407 = load i128, i128* %array_getter406, align 4
  %out408 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %array_getter411 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out408, i128 0, i128 %i.2, i128 1, i128 %j.6
  %out412 = load i128, i128* %array_getter411, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out412, i128 %mult_odd407, i1* @constraint.610)
  %ptr_getter413 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %out416 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter413, i128 0, i128 %i.2, i128 1, i128 %j.6
  store i128 %mult_odd407, i128* %out416, align 4
  br label %loop.latch417

loop.latch417:                                    ; preds = %loop.body381
  %add419 = add i128 %j.6, 1
  %slt422 = icmp slt i128 %add419, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt422, label %loop.body381, label %loop.exit423

loop.exit423:                                     ; preds = %loop.latch417
  br label %loop.latch424

loop.latch424:                                    ; preds = %loop.exit423
  %add426 = add i128 %i.2, 1
  %slt428 = icmp slt i128 %add426, 6
  br i1 %slt428, label %loop.body305, label %loop.exit429

loop.exit429:                                     ; preds = %loop.latch424
  br label %if.exit

if.exit:                                          ; preds = %loop.exit429, %loop.exit201
  br label %arraydim

arraydim:                                         ; preds = %if.exit
  %ptr_cast = bitcast [256 x %struct_template_circuit_fp2frobeniusmap*]** %in_frob to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6)
  %ptr_cast430 = bitcast [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast430, i128 6, i128 2, i128 %fp12frobeniusmap.k.read_arg_inner)
  %ptr_cast431 = bitcast [256 x %struct_template_circuit_fp2multiply*]** %mult_odd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast431, i128 6)
  %ptr_cast432 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %FP12_FROBENIUS_COEFFICIENTS to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast432, i128 12, i128 6, i128 2, i128 20)
  %ptr_cast433 = bitcast [256 x i128]** %p to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast433, i128 50)
  %ptr_cast434 = bitcast [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast434, i128 6, i128 2, i128 %fp12frobeniusmap.k.read_arg_inner)
  %ptr_cast435 = bitcast [256 x [256 x %struct_template_circuit_fpmultiply*]]** %mult_even to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast435, i128 6, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %out436 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.declare_output, align 8
  %fp12frobeniusmap.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out436, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_fp12frobeniusmap = alloca %struct_template_circuit_fp12frobeniusmap, align 8
  %fp12frobeniusmap.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap, i32 0, i32 0
  store i128 %0, i128* %fp12frobeniusmap.n.write_arg_inner, align 4
  %fp12frobeniusmap.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap, i32 0, i32 1
  store i128 %1, i128* %fp12frobeniusmap.k.write_arg_inner, align 4
  %fp12frobeniusmap.power.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap, i32 0, i32 2
  store i128 %2, i128* %fp12frobeniusmap.power.write_arg_inner, align 4
  ret %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap
}

define void @fn_template_init_fp12multiplywithlineunequal(%struct_template_circuit_fp12multiplywithlineunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 0
  %fp12multiplywithlineunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 1
  %fp12multiplywithlineunequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 2
  %fp12multiplywithlineunequal.kg.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 3
  %fp12multiplywithlineunequal.overflowg.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 4
  %fp12multiplywithlineunequal.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 5
  %fp12multiplywithlineunequal.g.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %fp12multiplywithlineunequal.g.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.g.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.g.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter6, align 8
  %fp12multiplywithlineunequal.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.p.declare_input, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 7
  %fp12multiplywithlineunequal.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter7, align 8
  %fp12multiplywithlineunequal.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequal.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %fp12multiplywithlineunequal.q.declare_input, align 8
  %LOGK18 = call i128 @fn_intrinsic_utils_init()
  %LOGK29 = call i128 @fn_intrinsic_utils_init()
  %fp12multiplywithlineunequal.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.out.declare_output, align 8
  %l10 = call i128 @fn_intrinsic_utils_init()
  %j11 = call i128 @fn_intrinsic_utils_init()
  %LOGK312 = call i128 @fn_intrinsic_utils_init()
  %XI013 = call i128 @fn_intrinsic_utils_init()
  %idx14 = call i128 @fn_intrinsic_utils_init()
  %i15 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 6, %fp12multiplywithlineunequal.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul)
  %mul20 = mul i128 6, %fp12multiplywithlineunequal.k.read_arg_inner
  %mul23 = mul i128 2, %fp12multiplywithlineunequal.k.read_arg_inner
  %sub = sub i128 %mul23, 1
  %call24 = call i128 @min(i128 %fp12multiplywithlineunequal.kg.read_arg_inner, i128 %sub)
  %mul25 = mul i128 %mul20, %call24
  %mul26 = mul i128 %mul25, 6
  %add = add i128 2, 1
  %mul28 = mul i128 %mul26, %add
  %call29 = call i128 @log_ceil(i128 %mul28)
  %mul31 = mul i128 6, %fp12multiplywithlineunequal.k.read_arg_inner
  %mul34 = mul i128 2, %fp12multiplywithlineunequal.k.read_arg_inner
  %sub35 = sub i128 %mul34, 1
  %call36 = call i128 @min(i128 %fp12multiplywithlineunequal.kg.read_arg_inner, i128 %sub35)
  %mul37 = mul i128 %mul31, %call36
  %mul38 = mul i128 %mul37, 6
  %add40 = add i128 2, 1
  %mul41 = mul i128 %mul38, %add40
  %add44 = add i128 %fp12multiplywithlineunequal.k.read_arg_inner, %fp12multiplywithlineunequal.kg.read_arg_inner
  %sub45 = sub i128 %add44, 1
  %mul46 = mul i128 %mul41, %sub45
  %call47 = call i128 @log_ceil(i128 %mul46)
  %mul48 = mul i128 3, %fp12multiplywithlineunequal.n.read_arg_inner
  %add49 = add i128 %fp12multiplywithlineunequal.overflowg.read_arg_inner, %mul48
  %add51 = add i128 %add49, %call47
  %slt = icmp slt i128 %add51, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul55 = mul i128 2, %fp12multiplywithlineunequal.n.read_arg_inner
  %add57 = add i128 %mul55, %call
  %call58 = call %struct_template_circuit_signedlinefunctionunequalnocarry* @fn_template_build_signedlinefunctionunequalnocarry(i128 %fp12multiplywithlineunequal.n.read_arg_inner, i128 %fp12multiplywithlineunequal.k.read_arg_inner, i128 %add57)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch89, %entry
  %l.0 = phi i128 [ 0, %entry ], [ %add91, %loop.latch89 ]
  br label %loop.body59

loop.body59:                                      ; preds = %loop.latch83, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add85, %loop.latch83 ]
  br label %loop.body60

loop.body60:                                      ; preds = %loop.latch, %loop.body59
  %idx.0 = phi i128 [ 0, %loop.body59 ], [ %add79, %loop.latch ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %l.0, i128 %j.0, i128 %idx.0
  %P64 = load i128, i128* %array_getter, align 4
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call58, i32 0, i32 3
  %signedlinefunctionunequalnocarry.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter66, align 8
  %array_getter70 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.p.read_input_outter, i128 0, i128 %l.0, i128 %j.0, i128 %idx.0
  %line71 = load i128, i128* %array_getter70, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line71, i128 %P64, i1* @constraint.611)
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call58, i32 0, i32 3
  %signedlinefunctionunequalnocarry.p.read_input_outter73 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter72, align 8
  %line77 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.p.read_input_outter73, i128 0, i128 %l.0, i128 %j.0, i128 %idx.0
  store i128 %P64, i128* %line77, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body60
  %add79 = add i128 %idx.0, 1
  %slt82 = icmp slt i128 %add79, %fp12multiplywithlineunequal.k.read_arg_inner
  br i1 %slt82, label %loop.body60, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch83

loop.latch83:                                     ; preds = %loop.exit
  %add85 = add i128 %j.0, 1
  %slt87 = icmp slt i128 %add85, 2
  br i1 %slt87, label %loop.body59, label %loop.exit88

loop.exit88:                                      ; preds = %loop.latch83
  br label %loop.latch89

loop.latch89:                                     ; preds = %loop.exit88
  %add91 = add i128 %l.0, 1
  %slt93 = icmp slt i128 %add91, 2
  br i1 %slt93, label %loop.body, label %loop.exit94

loop.exit94:                                      ; preds = %loop.latch89
  br label %loop.body95

loop.body95:                                      ; preds = %loop.latch140, %loop.exit94
  %l.1 = phi i128 [ 0, %loop.exit94 ], [ %add142, %loop.latch140 ]
  br label %loop.body96

loop.body96:                                      ; preds = %loop.latch134, %loop.body95
  %i.0 = phi i128 [ 0, %loop.body95 ], [ %add136, %loop.latch134 ]
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch128, %loop.body96
  %j.1 = phi i128 [ 0, %loop.body96 ], [ %add130, %loop.latch128 ]
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch121, %loop.body97
  %idx.1 = phi i128 [ 0, %loop.body97 ], [ %add123, %loop.latch121 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %fp12multiplywithlineunequal.q.declare_input, align 8
  %array_getter103 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 %l.1, i128 %i.0, i128 %j.1, i128 %idx.1
  %Q104 = load i128, i128* %array_getter103, align 4
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call58, i32 0, i32 4
  %signedlinefunctionunequalnocarry.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter106, align 8
  %array_getter111 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarry.q.read_input_outter, i128 0, i128 %l.1, i128 %i.0, i128 %j.1, i128 %idx.1
  %line112 = load i128, i128* %array_getter111, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line112, i128 %Q104, i1* @constraint.612)
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call58, i32 0, i32 4
  %signedlinefunctionunequalnocarry.q.read_input_outter115 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter114, align 8
  %line120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarry.q.read_input_outter115, i128 0, i128 %l.1, i128 %i.0, i128 %j.1, i128 %idx.1
  store i128 %Q104, i128* %line120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body98
  %add123 = add i128 %idx.1, 1
  %slt126 = icmp slt i128 %add123, %fp12multiplywithlineunequal.k.read_arg_inner
  br i1 %slt126, label %loop.body98, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %j.1, 1
  %slt132 = icmp slt i128 %add130, 2
  br i1 %slt132, label %loop.body97, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch128
  br label %loop.latch134

loop.latch134:                                    ; preds = %loop.exit133
  %add136 = add i128 %i.0, 1
  %slt138 = icmp slt i128 %add136, 6
  br i1 %slt138, label %loop.body96, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch134
  br label %loop.latch140

loop.latch140:                                    ; preds = %loop.exit139
  %add142 = add i128 %l.1, 1
  %slt144 = icmp slt i128 %add142, 2
  br i1 %slt144, label %loop.body95, label %loop.exit145

loop.exit145:                                     ; preds = %loop.latch140
  %mul149 = mul i128 2, %fp12multiplywithlineunequal.k.read_arg_inner
  %sub150 = sub i128 %mul149, 1
  %mul153 = mul i128 2, %fp12multiplywithlineunequal.n.read_arg_inner
  %add154 = add i128 %fp12multiplywithlineunequal.overflowg.read_arg_inner, %mul153
  %add156 = add i128 %add154, %call29
  %call157 = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %fp12multiplywithlineunequal.n.read_arg_inner, i128 %fp12multiplywithlineunequal.kg.read_arg_inner, i128 %sub150, i128 %add156)
  br label %loop.body158

loop.body158:                                     ; preds = %loop.latch193, %loop.exit145
  %i.1 = phi i128 [ 0, %loop.exit145 ], [ %add195, %loop.latch193 ]
  br label %loop.body159

loop.body159:                                     ; preds = %loop.latch187, %loop.body158
  %j.2 = phi i128 [ 0, %loop.body158 ], [ %add189, %loop.latch187 ]
  br label %loop.body160

loop.body160:                                     ; preds = %loop.latch180, %loop.body159
  %idx.2 = phi i128 [ 0, %loop.body159 ], [ %add182, %loop.latch180 ]
  %g = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.g.declare_input, align 8
  %array_getter164 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %g, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  %g165 = load i128, i128* %array_getter164, align 4
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call157, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter167, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  %mult172 = load i128, i128* %array_getter171, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult172, i128 %g165, i1* @constraint.613)
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call157, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter175 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter174, align 8
  %mult179 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter175, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  store i128 %g165, i128* %mult179, align 4
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.body160
  %add182 = add i128 %idx.2, 1
  %slt185 = icmp slt i128 %add182, %fp12multiplywithlineunequal.kg.read_arg_inner
  br i1 %slt185, label %loop.body160, label %loop.exit186

loop.exit186:                                     ; preds = %loop.latch180
  br label %loop.latch187

loop.latch187:                                    ; preds = %loop.exit186
  %add189 = add i128 %j.2, 1
  %slt191 = icmp slt i128 %add189, 2
  br i1 %slt191, label %loop.body159, label %loop.exit192

loop.exit192:                                     ; preds = %loop.latch187
  br label %loop.latch193

loop.latch193:                                    ; preds = %loop.exit192
  %add195 = add i128 %i.1, 1
  %slt197 = icmp slt i128 %add195, 6
  br i1 %slt197, label %loop.body158, label %loop.exit198

loop.exit198:                                     ; preds = %loop.latch193
  br label %loop.body199

loop.body199:                                     ; preds = %loop.latch238, %loop.exit198
  %i.2 = phi i128 [ 0, %loop.exit198 ], [ %add240, %loop.latch238 ]
  br label %loop.body200

loop.body200:                                     ; preds = %loop.latch232, %loop.body199
  %j.3 = phi i128 [ 0, %loop.body199 ], [ %add234, %loop.latch232 ]
  br label %loop.body201

loop.body201:                                     ; preds = %loop.latch223, %loop.body200
  %idx.3 = phi i128 [ 0, %loop.body200 ], [ %add225, %loop.latch223 ]
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarry, %struct_template_circuit_signedlinefunctionunequalnocarry* %call58, i32 0, i32 5
  %signedlinefunctionunequalnocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter203, align 8
  %array_getter207 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarry.out.read_output_outter, i128 0, i128 %i.2, i128 %j.3, i128 %idx.3
  %line208 = load i128, i128* %array_getter207, align 4
  %struct_getter210 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call157, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter210, align 8
  %array_getter214 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.2, i128 %j.3, i128 %idx.3
  %mult215 = load i128, i128* %array_getter214, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult215, i128 %line208, i1* @constraint.614)
  %struct_getter217 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call157, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter218 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter217, align 8
  %mult222 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter218, i128 0, i128 %i.2, i128 %j.3, i128 %idx.3
  store i128 %line208, i128* %mult222, align 4
  br label %loop.latch223

loop.latch223:                                    ; preds = %loop.body201
  %add225 = add i128 %idx.3, 1
  %mul228 = mul i128 2, %fp12multiplywithlineunequal.k.read_arg_inner
  %sub229 = sub i128 %mul228, 1
  %slt230 = icmp slt i128 %add225, %sub229
  br i1 %slt230, label %loop.body201, label %loop.exit231

loop.exit231:                                     ; preds = %loop.latch223
  br label %loop.latch232

loop.latch232:                                    ; preds = %loop.exit231
  %add234 = add i128 %j.3, 1
  %slt236 = icmp slt i128 %add234, 2
  br i1 %slt236, label %loop.body200, label %loop.exit237

loop.exit237:                                     ; preds = %loop.latch232
  br label %loop.latch238

loop.latch238:                                    ; preds = %loop.exit237
  %add240 = add i128 %i.2, 1
  %slt242 = icmp slt i128 %add240, 6
  br i1 %slt242, label %loop.body199, label %loop.exit243

loop.exit243:                                     ; preds = %loop.latch238
  %add248 = add i128 %fp12multiplywithlineunequal.k.read_arg_inner, %fp12multiplywithlineunequal.kg.read_arg_inner
  %sub249 = sub i128 %add248, 2
  %mul252 = mul i128 3, %fp12multiplywithlineunequal.n.read_arg_inner
  %add253 = add i128 %fp12multiplywithlineunequal.overflowg.read_arg_inner, %mul252
  %add255 = add i128 %add253, %call47
  %call256 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %fp12multiplywithlineunequal.n.read_arg_inner, i128 %fp12multiplywithlineunequal.k.read_arg_inner, i128 %sub249, [256 x i128]* %fp12multiplywithlineunequal.q.read_arg_inner, i128 %add255)
  br label %loop.body257

loop.body257:                                     ; preds = %loop.latch298, %loop.exit243
  %i.3 = phi i128 [ 0, %loop.exit243 ], [ %add300, %loop.latch298 ]
  br label %loop.body258

loop.body258:                                     ; preds = %loop.latch292, %loop.body257
  %j.4 = phi i128 [ 0, %loop.body257 ], [ %add294, %loop.latch292 ]
  br label %loop.body259

loop.body259:                                     ; preds = %loop.latch281, %loop.body258
  %idx.4 = phi i128 [ 0, %loop.body258 ], [ %add283, %loop.latch281 ]
  %struct_getter261 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call157, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter261, align 8
  %array_getter265 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.3, i128 %j.4, i128 %idx.4
  %mult266 = load i128, i128* %array_getter265, align 4
  %struct_getter268 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call256, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter268, align 8
  %array_getter272 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %i.3, i128 %j.4, i128 %idx.4
  %reduce273 = load i128, i128* %array_getter272, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce273, i128 %mult266, i1* @constraint.615)
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call256, i32 0, i32 5
  %fp12compress.in.read_input_outter276 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter275, align 8
  %reduce280 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter276, i128 0, i128 %i.3, i128 %j.4, i128 %idx.4
  store i128 %mult266, i128* %reduce280, align 4
  br label %loop.latch281

loop.latch281:                                    ; preds = %loop.body259
  %add283 = add i128 %idx.4, 1
  %mul286 = mul i128 2, %fp12multiplywithlineunequal.k.read_arg_inner
  %add288 = add i128 %mul286, %fp12multiplywithlineunequal.kg.read_arg_inner
  %sub289 = sub i128 %add288, 2
  %slt290 = icmp slt i128 %add283, %sub289
  br i1 %slt290, label %loop.body259, label %loop.exit291

loop.exit291:                                     ; preds = %loop.latch281
  br label %loop.latch292

loop.latch292:                                    ; preds = %loop.exit291
  %add294 = add i128 %j.4, 1
  %slt296 = icmp slt i128 %add294, 2
  br i1 %slt296, label %loop.body258, label %loop.exit297

loop.exit297:                                     ; preds = %loop.latch292
  br label %loop.latch298

loop.latch298:                                    ; preds = %loop.exit297
  %add300 = add i128 %i.3, 1
  %slt302 = icmp slt i128 %add300, 6
  br i1 %slt302, label %loop.body257, label %loop.exit303

loop.exit303:                                     ; preds = %loop.latch298
  %mul308 = mul i128 3, %fp12multiplywithlineunequal.n.read_arg_inner
  %add309 = add i128 %fp12multiplywithlineunequal.overflowg.read_arg_inner, %mul308
  %add311 = add i128 %add309, %call47
  %call313 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %fp12multiplywithlineunequal.n.read_arg_inner, i128 %fp12multiplywithlineunequal.k.read_arg_inner, i128 %add311, [256 x i128]* %fp12multiplywithlineunequal.q.read_arg_inner)
  br label %loop.body314

loop.body314:                                     ; preds = %loop.latch351, %loop.exit303
  %i.4 = phi i128 [ 0, %loop.exit303 ], [ %add353, %loop.latch351 ]
  br label %loop.body315

loop.body315:                                     ; preds = %loop.latch345, %loop.body314
  %j.5 = phi i128 [ 0, %loop.body314 ], [ %add347, %loop.latch345 ]
  br label %loop.body316

loop.body316:                                     ; preds = %loop.latch338, %loop.body315
  %idx.5 = phi i128 [ 0, %loop.body315 ], [ %add340, %loop.latch338 ]
  %struct_getter318 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call256, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter318, align 8
  %array_getter322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %i.4, i128 %j.5, i128 %idx.5
  %reduce323 = load i128, i128* %array_getter322, align 4
  %struct_getter325 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call313, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter325, align 8
  %array_getter329 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.4, i128 %j.5, i128 %idx.5
  %carry330 = load i128, i128* %array_getter329, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry330, i128 %reduce323, i1* @constraint.616)
  %struct_getter332 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call313, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter333 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter332, align 8
  %carry337 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter333, i128 0, i128 %i.4, i128 %j.5, i128 %idx.5
  store i128 %reduce323, i128* %carry337, align 4
  br label %loop.latch338

loop.latch338:                                    ; preds = %loop.body316
  %add340 = add i128 %idx.5, 1
  %slt343 = icmp slt i128 %add340, %fp12multiplywithlineunequal.k.read_arg_inner
  br i1 %slt343, label %loop.body316, label %loop.exit344

loop.exit344:                                     ; preds = %loop.latch338
  br label %loop.latch345

loop.latch345:                                    ; preds = %loop.exit344
  %add347 = add i128 %j.5, 1
  %slt349 = icmp slt i128 %add347, 2
  br i1 %slt349, label %loop.body315, label %loop.exit350

loop.exit350:                                     ; preds = %loop.latch345
  br label %loop.latch351

loop.latch351:                                    ; preds = %loop.exit350
  %add353 = add i128 %i.4, 1
  %slt355 = icmp slt i128 %add353, 6
  br i1 %slt355, label %loop.body314, label %loop.exit356

loop.exit356:                                     ; preds = %loop.latch351
  br label %loop.body357

loop.body357:                                     ; preds = %loop.latch391, %loop.exit356
  %i.5 = phi i128 [ 0, %loop.exit356 ], [ %add393, %loop.latch391 ]
  br label %loop.body358

loop.body358:                                     ; preds = %loop.latch385, %loop.body357
  %j.6 = phi i128 [ 0, %loop.body357 ], [ %add387, %loop.latch385 ]
  br label %loop.body359

loop.body359:                                     ; preds = %loop.latch378, %loop.body358
  %idx.6 = phi i128 [ 0, %loop.body358 ], [ %add380, %loop.latch378 ]
  %struct_getter361 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call313, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter361, align 8
  %array_getter365 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.5, i128 %j.6, i128 %idx.6
  %carry366 = load i128, i128* %array_getter365, align 4
  %out367 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.out.declare_output, align 8
  %array_getter371 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out367, i128 0, i128 %i.5, i128 %j.6, i128 %idx.6
  %out372 = load i128, i128* %array_getter371, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out372, i128 %carry366, i1* @constraint.617)
  %ptr_getter373 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.out.declare_output, align 8
  %out377 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter373, i128 0, i128 %i.5, i128 %j.6, i128 %idx.6
  store i128 %carry366, i128* %out377, align 4
  br label %loop.latch378

loop.latch378:                                    ; preds = %loop.body359
  %add380 = add i128 %idx.6, 1
  %slt383 = icmp slt i128 %add380, %fp12multiplywithlineunequal.k.read_arg_inner
  br i1 %slt383, label %loop.body359, label %loop.exit384

loop.exit384:                                     ; preds = %loop.latch378
  br label %loop.latch385

loop.latch385:                                    ; preds = %loop.exit384
  %add387 = add i128 %j.6, 1
  %slt389 = icmp slt i128 %add387, 2
  br i1 %slt389, label %loop.body358, label %loop.exit390

loop.exit390:                                     ; preds = %loop.latch385
  br label %loop.latch391

loop.latch391:                                    ; preds = %loop.exit390
  %add393 = add i128 %i.5, 1
  %slt395 = icmp slt i128 %add393, 6
  br i1 %slt395, label %loop.body357, label %loop.exit396

loop.exit396:                                     ; preds = %loop.latch391
  br label %arraydim

arraydim:                                         ; preds = %loop.exit396
  %ptr_cast = bitcast [256 x [256 x [256 x [256 x i128]]]]** %fp12multiplywithlineunequal.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 6, i128 2, i128 %fp12multiplywithlineunequal.k.read_arg_inner)
  %ptr_cast397 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast397, i128 2, i128 2, i128 %fp12multiplywithlineunequal.k.read_arg_inner)
  %ptr_cast398 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.g.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast398, i128 6, i128 2, i128 %fp12multiplywithlineunequal.kg.read_arg_inner)
  %ptr_cast399 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast399, i128 6, i128 2, i128 %fp12multiplywithlineunequal.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out400 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.out.declare_output, align 8
  %fp12multiplywithlineunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %0, i32 0, i32 8
  store [256 x [256 x [256 x i128]]]* %out400, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12multiplywithlineunequal* @fn_template_build_fp12multiplywithlineunequal(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_fp12multiplywithlineunequal = alloca %struct_template_circuit_fp12multiplywithlineunequal, align 8
  %fp12multiplywithlineunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %struct_template_circuit_fp12multiplywithlineunequal, i32 0, i32 0
  store i128 %0, i128* %fp12multiplywithlineunequal.n.write_arg_inner, align 4
  %fp12multiplywithlineunequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %struct_template_circuit_fp12multiplywithlineunequal, i32 0, i32 1
  store i128 %1, i128* %fp12multiplywithlineunequal.k.write_arg_inner, align 4
  %fp12multiplywithlineunequal.kg.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %struct_template_circuit_fp12multiplywithlineunequal, i32 0, i32 2
  store i128 %2, i128* %fp12multiplywithlineunequal.kg.write_arg_inner, align 4
  %fp12multiplywithlineunequal.overflowg.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %struct_template_circuit_fp12multiplywithlineunequal, i32 0, i32 3
  store i128 %3, i128* %fp12multiplywithlineunequal.overflowg.write_arg_inner, align 4
  %fp12multiplywithlineunequal.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %struct_template_circuit_fp12multiplywithlineunequal, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %fp12multiplywithlineunequal.q.write_arg_inner, align 8
  ret %struct_template_circuit_fp12multiplywithlineunequal* %struct_template_circuit_fp12multiplywithlineunequal
}

define void @fn_template_init_fp12multiplywithlineunequalfp2(%struct_template_circuit_fp12multiplywithlineunequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 0
  %fp12multiplywithlineunequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 1
  %fp12multiplywithlineunequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 2
  %fp12multiplywithlineunequalfp2.kg.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 3
  %fp12multiplywithlineunequalfp2.overflowg.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 4
  %fp12multiplywithlineunequalfp2.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %fp12multiplywithlineunequalfp2.g.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.g.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter6, align 8
  %fp12multiplywithlineunequalfp2.p.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %fp12multiplywithlineunequalfp2.p.declare_input, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 7
  %fp12multiplywithlineunequalfp2.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter7, align 8
  %fp12multiplywithlineunequalfp2.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp12multiplywithlineunequalfp2.q.read_input_inner, [256 x [256 x i128]]** %fp12multiplywithlineunequalfp2.q.declare_input, align 8
  %l8 = call i128 @fn_intrinsic_utils_init()
  %XI09 = call i128 @fn_intrinsic_utils_init()
  %LOGK310 = call i128 @fn_intrinsic_utils_init()
  %LOGK111 = call i128 @fn_intrinsic_utils_init()
  %idx12 = call i128 @fn_intrinsic_utils_init()
  %fp12multiplywithlineunequalfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.out.declare_output, align 8
  %LOGK213 = call i128 @fn_intrinsic_utils_init()
  %j14 = call i128 @fn_intrinsic_utils_init()
  %i15 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 12, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul)
  %mul20 = mul i128 12, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %mul23 = mul i128 2, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %sub = sub i128 %mul23, 1
  %call24 = call i128 @min(i128 %fp12multiplywithlineunequalfp2.kg.read_arg_inner, i128 %sub)
  %mul25 = mul i128 %mul20, %call24
  %mul26 = mul i128 %mul25, 6
  %add = add i128 2, 1
  %mul28 = mul i128 %mul26, %add
  %call29 = call i128 @log_ceil(i128 %mul28)
  %mul31 = mul i128 12, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %mul34 = mul i128 2, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %sub35 = sub i128 %mul34, 1
  %call36 = call i128 @min(i128 %fp12multiplywithlineunequalfp2.kg.read_arg_inner, i128 %sub35)
  %mul37 = mul i128 %mul31, %call36
  %mul38 = mul i128 %mul37, 6
  %add40 = add i128 2, 1
  %mul41 = mul i128 %mul38, %add40
  %add44 = add i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner, %fp12multiplywithlineunequalfp2.kg.read_arg_inner
  %sub45 = sub i128 %add44, 1
  %mul46 = mul i128 %mul41, %sub45
  %call47 = call i128 @log_ceil(i128 %mul46)
  %mul48 = mul i128 3, %fp12multiplywithlineunequalfp2.n.read_arg_inner
  %add49 = add i128 %fp12multiplywithlineunequalfp2.overflowg.read_arg_inner, %mul48
  %add51 = add i128 %add49, %call47
  %slt = icmp slt i128 %add51, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul55 = mul i128 2, %fp12multiplywithlineunequalfp2.n.read_arg_inner
  %add57 = add i128 %mul55, %call
  %call58 = call %struct_template_circuit_signedlinefunctionunequalnocarryfp2* @fn_template_build_signedlinefunctionunequalnocarryfp2(i128 %fp12multiplywithlineunequalfp2.n.read_arg_inner, i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner, i128 %add57)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch99, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add101, %loop.latch99 ]
  br label %loop.body59

loop.body59:                                      ; preds = %loop.latch93, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add95, %loop.latch93 ]
  br label %loop.body60

loop.body60:                                      ; preds = %loop.latch87, %loop.body59
  %l.0 = phi i128 [ 0, %loop.body59 ], [ %add89, %loop.latch87 ]
  br label %loop.body61

loop.body61:                                      ; preds = %loop.latch, %loop.body60
  %idx.0 = phi i128 [ 0, %loop.body60 ], [ %add83, %loop.latch ]
  %P = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %fp12multiplywithlineunequalfp2.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P, i128 0, i128 %i.0, i128 %j.0, i128 %l.0, i128 %idx.0
  %P66 = load i128, i128* %array_getter, align 4
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call58, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter68, align 8
  %array_getter73 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %l.0, i128 %idx.0
  %line74 = load i128, i128* %array_getter73, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line74, i128 %P66, i1* @constraint.618)
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call58, i32 0, i32 3
  %signedlinefunctionunequalnocarryfp2.p.read_input_outter76 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter75, align 8
  %line81 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %signedlinefunctionunequalnocarryfp2.p.read_input_outter76, i128 0, i128 %i.0, i128 %j.0, i128 %l.0, i128 %idx.0
  store i128 %P66, i128* %line81, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body61
  %add83 = add i128 %idx.0, 1
  %slt86 = icmp slt i128 %add83, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  br i1 %slt86, label %loop.body61, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch87

loop.latch87:                                     ; preds = %loop.exit
  %add89 = add i128 %l.0, 1
  %slt91 = icmp slt i128 %add89, 2
  br i1 %slt91, label %loop.body60, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch87
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.exit92
  %add95 = add i128 %j.0, 1
  %slt97 = icmp slt i128 %add95, 2
  br i1 %slt97, label %loop.body59, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch93
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.exit98
  %add101 = add i128 %i.0, 1
  %slt103 = icmp slt i128 %add101, 2
  br i1 %slt103, label %loop.body, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch99
  br label %loop.body105

loop.body105:                                     ; preds = %loop.latch130, %loop.exit104
  %l.1 = phi i128 [ 0, %loop.exit104 ], [ %add132, %loop.latch130 ]
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch123, %loop.body105
  %idx.1 = phi i128 [ 0, %loop.body105 ], [ %add125, %loop.latch123 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12multiplywithlineunequalfp2.q.declare_input, align 8
  %array_getter109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 %l.1, i128 %idx.1
  %Q110 = load i128, i128* %array_getter109, align 4
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call58, i32 0, i32 4
  %signedlinefunctionunequalnocarryfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter112, align 8
  %array_getter115 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionunequalnocarryfp2.q.read_input_outter, i128 0, i128 %l.1, i128 %idx.1
  %line116 = load i128, i128* %array_getter115, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line116, i128 %Q110, i1* @constraint.619)
  %struct_getter118 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call58, i32 0, i32 4
  %signedlinefunctionunequalnocarryfp2.q.read_input_outter119 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter118, align 8
  %line122 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedlinefunctionunequalnocarryfp2.q.read_input_outter119, i128 0, i128 %l.1, i128 %idx.1
  store i128 %Q110, i128* %line122, align 4
  br label %loop.latch123

loop.latch123:                                    ; preds = %loop.body106
  %add125 = add i128 %idx.1, 1
  %slt128 = icmp slt i128 %add125, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  br i1 %slt128, label %loop.body106, label %loop.exit129

loop.exit129:                                     ; preds = %loop.latch123
  br label %loop.latch130

loop.latch130:                                    ; preds = %loop.exit129
  %add132 = add i128 %l.1, 1
  %slt134 = icmp slt i128 %add132, 2
  br i1 %slt134, label %loop.body105, label %loop.exit135

loop.exit135:                                     ; preds = %loop.latch130
  %mul139 = mul i128 2, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %sub140 = sub i128 %mul139, 1
  %mul143 = mul i128 2, %fp12multiplywithlineunequalfp2.n.read_arg_inner
  %add144 = add i128 %fp12multiplywithlineunequalfp2.overflowg.read_arg_inner, %mul143
  %add146 = add i128 %add144, %call29
  %call147 = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %fp12multiplywithlineunequalfp2.n.read_arg_inner, i128 %fp12multiplywithlineunequalfp2.kg.read_arg_inner, i128 %sub140, i128 %add146)
  br label %loop.body148

loop.body148:                                     ; preds = %loop.latch183, %loop.exit135
  %i.1 = phi i128 [ 0, %loop.exit135 ], [ %add185, %loop.latch183 ]
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch177, %loop.body148
  %j.1 = phi i128 [ 0, %loop.body148 ], [ %add179, %loop.latch177 ]
  br label %loop.body150

loop.body150:                                     ; preds = %loop.latch170, %loop.body149
  %idx.2 = phi i128 [ 0, %loop.body149 ], [ %add172, %loop.latch170 ]
  %g = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.g.declare_input, align 8
  %array_getter154 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %g, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  %g155 = load i128, i128* %array_getter154, align 4
  %struct_getter157 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call147, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter157, align 8
  %array_getter161 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  %mult162 = load i128, i128* %array_getter161, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult162, i128 %g155, i1* @constraint.620)
  %struct_getter164 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call147, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter165 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter164, align 8
  %mult169 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter165, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  store i128 %g155, i128* %mult169, align 4
  br label %loop.latch170

loop.latch170:                                    ; preds = %loop.body150
  %add172 = add i128 %idx.2, 1
  %slt175 = icmp slt i128 %add172, %fp12multiplywithlineunequalfp2.kg.read_arg_inner
  br i1 %slt175, label %loop.body150, label %loop.exit176

loop.exit176:                                     ; preds = %loop.latch170
  br label %loop.latch177

loop.latch177:                                    ; preds = %loop.exit176
  %add179 = add i128 %j.1, 1
  %slt181 = icmp slt i128 %add179, 2
  br i1 %slt181, label %loop.body149, label %loop.exit182

loop.exit182:                                     ; preds = %loop.latch177
  br label %loop.latch183

loop.latch183:                                    ; preds = %loop.exit182
  %add185 = add i128 %i.1, 1
  %slt187 = icmp slt i128 %add185, 6
  br i1 %slt187, label %loop.body148, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch183
  br label %loop.body189

loop.body189:                                     ; preds = %loop.latch228, %loop.exit188
  %i.2 = phi i128 [ 0, %loop.exit188 ], [ %add230, %loop.latch228 ]
  br label %loop.body190

loop.body190:                                     ; preds = %loop.latch222, %loop.body189
  %j.2 = phi i128 [ 0, %loop.body189 ], [ %add224, %loop.latch222 ]
  br label %loop.body191

loop.body191:                                     ; preds = %loop.latch213, %loop.body190
  %idx.3 = phi i128 [ 0, %loop.body190 ], [ %add215, %loop.latch213 ]
  %struct_getter193 = getelementptr inbounds %struct_template_circuit_signedlinefunctionunequalnocarryfp2, %struct_template_circuit_signedlinefunctionunequalnocarryfp2* %call58, i32 0, i32 5
  %signedlinefunctionunequalnocarryfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter193, align 8
  %array_getter197 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedlinefunctionunequalnocarryfp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.3
  %line198 = load i128, i128* %array_getter197, align 4
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call147, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter200, align 8
  %array_getter204 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.3
  %mult205 = load i128, i128* %array_getter204, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult205, i128 %line198, i1* @constraint.621)
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call147, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter208 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter207, align 8
  %mult212 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter208, i128 0, i128 %i.2, i128 %j.2, i128 %idx.3
  store i128 %line198, i128* %mult212, align 4
  br label %loop.latch213

loop.latch213:                                    ; preds = %loop.body191
  %add215 = add i128 %idx.3, 1
  %mul218 = mul i128 2, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %sub219 = sub i128 %mul218, 1
  %slt220 = icmp slt i128 %add215, %sub219
  br i1 %slt220, label %loop.body191, label %loop.exit221

loop.exit221:                                     ; preds = %loop.latch213
  br label %loop.latch222

loop.latch222:                                    ; preds = %loop.exit221
  %add224 = add i128 %j.2, 1
  %slt226 = icmp slt i128 %add224, 2
  br i1 %slt226, label %loop.body190, label %loop.exit227

loop.exit227:                                     ; preds = %loop.latch222
  br label %loop.latch228

loop.latch228:                                    ; preds = %loop.exit227
  %add230 = add i128 %i.2, 1
  %slt232 = icmp slt i128 %add230, 6
  br i1 %slt232, label %loop.body189, label %loop.exit233

loop.exit233:                                     ; preds = %loop.latch228
  %add238 = add i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner, %fp12multiplywithlineunequalfp2.kg.read_arg_inner
  %sub239 = sub i128 %add238, 2
  %mul242 = mul i128 3, %fp12multiplywithlineunequalfp2.n.read_arg_inner
  %add243 = add i128 %fp12multiplywithlineunequalfp2.overflowg.read_arg_inner, %mul242
  %add245 = add i128 %add243, %call47
  %call246 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %fp12multiplywithlineunequalfp2.n.read_arg_inner, i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner, i128 %sub239, [256 x i128]* %fp12multiplywithlineunequalfp2.q.read_arg_inner, i128 %add245)
  br label %loop.body247

loop.body247:                                     ; preds = %loop.latch288, %loop.exit233
  %i.3 = phi i128 [ 0, %loop.exit233 ], [ %add290, %loop.latch288 ]
  br label %loop.body248

loop.body248:                                     ; preds = %loop.latch282, %loop.body247
  %j.3 = phi i128 [ 0, %loop.body247 ], [ %add284, %loop.latch282 ]
  br label %loop.body249

loop.body249:                                     ; preds = %loop.latch271, %loop.body248
  %idx.4 = phi i128 [ 0, %loop.body248 ], [ %add273, %loop.latch271 ]
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call147, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter251, align 8
  %array_getter255 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.3, i128 %j.3, i128 %idx.4
  %mult256 = load i128, i128* %array_getter255, align 4
  %struct_getter258 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call246, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter258, align 8
  %array_getter262 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %i.3, i128 %j.3, i128 %idx.4
  %reduce263 = load i128, i128* %array_getter262, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce263, i128 %mult256, i1* @constraint.622)
  %struct_getter265 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call246, i32 0, i32 5
  %fp12compress.in.read_input_outter266 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter265, align 8
  %reduce270 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter266, i128 0, i128 %i.3, i128 %j.3, i128 %idx.4
  store i128 %mult256, i128* %reduce270, align 4
  br label %loop.latch271

loop.latch271:                                    ; preds = %loop.body249
  %add273 = add i128 %idx.4, 1
  %mul276 = mul i128 2, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  %add278 = add i128 %mul276, %fp12multiplywithlineunequalfp2.kg.read_arg_inner
  %sub279 = sub i128 %add278, 2
  %slt280 = icmp slt i128 %add273, %sub279
  br i1 %slt280, label %loop.body249, label %loop.exit281

loop.exit281:                                     ; preds = %loop.latch271
  br label %loop.latch282

loop.latch282:                                    ; preds = %loop.exit281
  %add284 = add i128 %j.3, 1
  %slt286 = icmp slt i128 %add284, 2
  br i1 %slt286, label %loop.body248, label %loop.exit287

loop.exit287:                                     ; preds = %loop.latch282
  br label %loop.latch288

loop.latch288:                                    ; preds = %loop.exit287
  %add290 = add i128 %i.3, 1
  %slt292 = icmp slt i128 %add290, 6
  br i1 %slt292, label %loop.body247, label %loop.exit293

loop.exit293:                                     ; preds = %loop.latch288
  %mul298 = mul i128 3, %fp12multiplywithlineunequalfp2.n.read_arg_inner
  %add299 = add i128 %fp12multiplywithlineunequalfp2.overflowg.read_arg_inner, %mul298
  %add301 = add i128 %add299, %call47
  %call303 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %fp12multiplywithlineunequalfp2.n.read_arg_inner, i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner, i128 %add301, [256 x i128]* %fp12multiplywithlineunequalfp2.q.read_arg_inner)
  br label %loop.body304

loop.body304:                                     ; preds = %loop.latch341, %loop.exit293
  %i.4 = phi i128 [ 0, %loop.exit293 ], [ %add343, %loop.latch341 ]
  br label %loop.body305

loop.body305:                                     ; preds = %loop.latch335, %loop.body304
  %j.4 = phi i128 [ 0, %loop.body304 ], [ %add337, %loop.latch335 ]
  br label %loop.body306

loop.body306:                                     ; preds = %loop.latch328, %loop.body305
  %idx.5 = phi i128 [ 0, %loop.body305 ], [ %add330, %loop.latch328 ]
  %struct_getter308 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call246, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter308, align 8
  %array_getter312 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %i.4, i128 %j.4, i128 %idx.5
  %reduce313 = load i128, i128* %array_getter312, align 4
  %struct_getter315 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call303, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter315, align 8
  %array_getter319 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.4, i128 %j.4, i128 %idx.5
  %carry320 = load i128, i128* %array_getter319, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry320, i128 %reduce313, i1* @constraint.623)
  %struct_getter322 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call303, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter323 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter322, align 8
  %carry327 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter323, i128 0, i128 %i.4, i128 %j.4, i128 %idx.5
  store i128 %reduce313, i128* %carry327, align 4
  br label %loop.latch328

loop.latch328:                                    ; preds = %loop.body306
  %add330 = add i128 %idx.5, 1
  %slt333 = icmp slt i128 %add330, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  br i1 %slt333, label %loop.body306, label %loop.exit334

loop.exit334:                                     ; preds = %loop.latch328
  br label %loop.latch335

loop.latch335:                                    ; preds = %loop.exit334
  %add337 = add i128 %j.4, 1
  %slt339 = icmp slt i128 %add337, 2
  br i1 %slt339, label %loop.body305, label %loop.exit340

loop.exit340:                                     ; preds = %loop.latch335
  br label %loop.latch341

loop.latch341:                                    ; preds = %loop.exit340
  %add343 = add i128 %i.4, 1
  %slt345 = icmp slt i128 %add343, 6
  br i1 %slt345, label %loop.body304, label %loop.exit346

loop.exit346:                                     ; preds = %loop.latch341
  br label %loop.body347

loop.body347:                                     ; preds = %loop.latch381, %loop.exit346
  %i.5 = phi i128 [ 0, %loop.exit346 ], [ %add383, %loop.latch381 ]
  br label %loop.body348

loop.body348:                                     ; preds = %loop.latch375, %loop.body347
  %j.5 = phi i128 [ 0, %loop.body347 ], [ %add377, %loop.latch375 ]
  br label %loop.body349

loop.body349:                                     ; preds = %loop.latch368, %loop.body348
  %idx.6 = phi i128 [ 0, %loop.body348 ], [ %add370, %loop.latch368 ]
  %struct_getter351 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call303, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter351, align 8
  %array_getter355 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.5, i128 %j.5, i128 %idx.6
  %carry356 = load i128, i128* %array_getter355, align 4
  %out357 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.out.declare_output, align 8
  %array_getter361 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out357, i128 0, i128 %i.5, i128 %j.5, i128 %idx.6
  %out362 = load i128, i128* %array_getter361, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out362, i128 %carry356, i1* @constraint.624)
  %ptr_getter363 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.out.declare_output, align 8
  %out367 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter363, i128 0, i128 %i.5, i128 %j.5, i128 %idx.6
  store i128 %carry356, i128* %out367, align 4
  br label %loop.latch368

loop.latch368:                                    ; preds = %loop.body349
  %add370 = add i128 %idx.6, 1
  %slt373 = icmp slt i128 %add370, %fp12multiplywithlineunequalfp2.k.read_arg_inner
  br i1 %slt373, label %loop.body349, label %loop.exit374

loop.exit374:                                     ; preds = %loop.latch368
  br label %loop.latch375

loop.latch375:                                    ; preds = %loop.exit374
  %add377 = add i128 %j.5, 1
  %slt379 = icmp slt i128 %add377, 2
  br i1 %slt379, label %loop.body348, label %loop.exit380

loop.exit380:                                     ; preds = %loop.latch375
  br label %loop.latch381

loop.latch381:                                    ; preds = %loop.exit380
  %add383 = add i128 %i.5, 1
  %slt385 = icmp slt i128 %add383, 6
  br i1 %slt385, label %loop.body347, label %loop.exit386

loop.exit386:                                     ; preds = %loop.latch381
  br label %arraydim

arraydim:                                         ; preds = %loop.exit386
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp12multiplywithlineunequalfp2.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner)
  %ptr_cast387 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.g.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast387, i128 6, i128 2, i128 %fp12multiplywithlineunequalfp2.kg.read_arg_inner)
  %ptr_cast388 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast388, i128 6, i128 2, i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner)
  %ptr_cast389 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %fp12multiplywithlineunequalfp2.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast389, i128 2, i128 2, i128 2, i128 %fp12multiplywithlineunequalfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out390 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.out.declare_output, align 8
  %fp12multiplywithlineunequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %0, i32 0, i32 8
  store [256 x [256 x [256 x i128]]]* %out390, [256 x [256 x [256 x i128]]]** %fp12multiplywithlineunequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12multiplywithlineunequalfp2* @fn_template_build_fp12multiplywithlineunequalfp2(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_fp12multiplywithlineunequalfp2 = alloca %struct_template_circuit_fp12multiplywithlineunequalfp2, align 8
  %fp12multiplywithlineunequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %struct_template_circuit_fp12multiplywithlineunequalfp2, i32 0, i32 0
  store i128 %0, i128* %fp12multiplywithlineunequalfp2.n.write_arg_inner, align 4
  %fp12multiplywithlineunequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %struct_template_circuit_fp12multiplywithlineunequalfp2, i32 0, i32 1
  store i128 %1, i128* %fp12multiplywithlineunequalfp2.k.write_arg_inner, align 4
  %fp12multiplywithlineunequalfp2.kg.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %struct_template_circuit_fp12multiplywithlineunequalfp2, i32 0, i32 2
  store i128 %2, i128* %fp12multiplywithlineunequalfp2.kg.write_arg_inner, align 4
  %fp12multiplywithlineunequalfp2.overflowg.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %struct_template_circuit_fp12multiplywithlineunequalfp2, i32 0, i32 3
  store i128 %3, i128* %fp12multiplywithlineunequalfp2.overflowg.write_arg_inner, align 4
  %fp12multiplywithlineunequalfp2.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %struct_template_circuit_fp12multiplywithlineunequalfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %fp12multiplywithlineunequalfp2.q.write_arg_inner, align 8
  ret %struct_template_circuit_fp12multiplywithlineunequalfp2* %struct_template_circuit_fp12multiplywithlineunequalfp2
}

define void @fn_template_init_bigmodinv(%struct_template_circuit_bigmodinv* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 0
  %bigmodinv.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 1
  %bigmodinv.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 2
  %bigmodinv.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %bigmodinv.in.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmodinv.in.read_input_inner, [256 x i128]** %bigmodinv.in.declare_input, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 3
  %bigmodinv.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %bigmodinv.p.declare_input = alloca [256 x i128]*, align 8
  store [256 x i128]* %bigmodinv.p.read_input_inner, [256 x i128]** %bigmodinv.p.declare_input, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %range_checks = alloca [256 x %struct_template_circuit_num2bits*]*, align 8
  %range_checks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  store [256 x %struct_template_circuit_num2bits*]* %range_checks5, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %bigmodinv.out.declare_output = alloca [256 x i128]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  store [256 x i128]* %out, [256 x i128]** %bigmodinv.out.declare_output, align 8
  %inv = alloca [256 x i128]*, align 8
  %inv6 = alloca [256 x i128], align 8
  store [256 x i128]* %inv6, [256 x i128]** %inv, align 8
  %sle = icmp sle i128 %bigmodinv.n.read_arg_inner, 252
  call void @fn_intrinsic_utils_assert(i1 %sle)
  %in = load [256 x i128]*, [256 x i128]** %bigmodinv.in.declare_input, align 8
  %p = load [256 x i128]*, [256 x i128]** %bigmodinv.p.declare_input, align 8
  %call = call [256 x i128]* @mod_inv(i128 %bigmodinv.n.read_arg_inner, i128 %bigmodinv.k.read_arg_inner, [256 x i128]* %in, [256 x i128]* %p)
  store [256 x i128]* %call, [256 x i128]** %inv, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %inv11 = load [256 x i128]*, [256 x i128]** %inv, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %inv11, i128 0, i128 %i.0
  %inv13 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x i128]*, [256 x i128]** %bigmodinv.out.declare_output, align 8
  %out15 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %inv13, i128* %out15, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigmodinv.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch39, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add41, %loop.latch39 ]
  %call22 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmodinv.n.read_arg_inner)
  %ptr_getter23 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %range_checks25 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter23, i128 0, i128 %i.1
  store %struct_template_circuit_num2bits* %call22, %struct_template_circuit_num2bits** %range_checks25, align 8
  %out26 = load [256 x i128]*, [256 x i128]** %bigmodinv.out.declare_output, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %out26, i128 0, i128 %i.1
  %out29 = load i128, i128* %array_getter28, align 4
  %range_checks30 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %array_getter32 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks30, i128 0, i128 %i.1
  %range_checks33 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter32, align 8
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks33, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter34, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %out29, i1* @constraint.625)
  %ptr_getter35 = load [256 x %struct_template_circuit_num2bits*]*, [256 x %struct_template_circuit_num2bits*]** %range_checks, align 8
  %array_getter37 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %ptr_getter35, i128 0, i128 %i.1
  %range_checks38 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter37, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks38, i32 0, i32 1
  store i128 %out29, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch39

loop.latch39:                                     ; preds = %loop.body20
  %add41 = add i128 %i.1, 1
  %slt44 = icmp slt i128 %add41, %bigmodinv.k.read_arg_inner
  br i1 %slt44, label %loop.body20, label %loop.exit45

loop.exit45:                                      ; preds = %loop.latch39
  %call48 = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmodinv.n.read_arg_inner, i128 %bigmodinv.k.read_arg_inner)
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch78, %loop.exit45
  %i.2 = phi i128 [ 0, %loop.exit45 ], [ %add80, %loop.latch78 ]
  %in50 = load [256 x i128]*, [256 x i128]** %bigmodinv.in.declare_input, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %in50, i128 0, i128 %i.2
  %in53 = load i128, i128* %array_getter52, align 4
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call48, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.2
  %mult58 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult58, i128 %in53, i1* @constraint.626)
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call48, i32 0, i32 2
  %bigmult.a.read_input_outter61 = load [256 x i128]*, [256 x i128]** %struct_getter60, align 8
  %mult63 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter61, i128 0, i128 %i.2
  store i128 %in53, i128* %mult63, align 4
  %out64 = load [256 x i128]*, [256 x i128]** %bigmodinv.out.declare_output, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %out64, i128 0, i128 %i.2
  %out67 = load i128, i128* %array_getter66, align 4
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call48, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.2
  %mult72 = load i128, i128* %array_getter71, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult72, i128 %out67, i1* @constraint.627)
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call48, i32 0, i32 3
  %bigmult.b.read_input_outter75 = load [256 x i128]*, [256 x i128]** %struct_getter74, align 8
  %mult77 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter75, i128 0, i128 %i.2
  store i128 %out67, i128* %mult77, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body49
  %add80 = add i128 %i.2, 1
  %slt83 = icmp slt i128 %add80, %bigmodinv.k.read_arg_inner
  br i1 %slt83, label %loop.body49, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  %call87 = call %struct_template_circuit_bigmod* @fn_template_build_bigmod(i128 %bigmodinv.n.read_arg_inner, i128 %bigmodinv.k.read_arg_inner)
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch104, %loop.exit84
  %i.3 = phi i128 [ 0, %loop.exit84 ], [ %add106, %loop.latch104 ]
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call48, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter90, align 8
  %array_getter92 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.3
  %mult93 = load i128, i128* %array_getter92, align 4
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call87, i32 0, i32 2
  %bigmod.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter95, align 8
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter, i128 0, i128 %i.3
  %mod98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod98, i128 %mult93, i1* @constraint.628)
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call87, i32 0, i32 2
  %bigmod.a.read_input_outter101 = load [256 x i128]*, [256 x i128]** %struct_getter100, align 8
  %mod103 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter101, i128 0, i128 %i.3
  store i128 %mult93, i128* %mod103, align 4
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.body88
  %add106 = add i128 %i.3, 1
  %mul = mul i128 2, %bigmodinv.k.read_arg_inner
  %slt109 = icmp slt i128 %add106, %mul
  br i1 %slt109, label %loop.body88, label %loop.exit110

loop.exit110:                                     ; preds = %loop.latch104
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch126, %loop.exit110
  %i.4 = phi i128 [ 0, %loop.exit110 ], [ %add128, %loop.latch126 ]
  %p112 = load [256 x i128]*, [256 x i128]** %bigmodinv.p.declare_input, align 8
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %p112, i128 0, i128 %i.4
  %p115 = load i128, i128* %array_getter114, align 4
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call87, i32 0, i32 3
  %bigmod.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter117, align 8
  %array_getter119 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter, i128 0, i128 %i.4
  %mod120 = load i128, i128* %array_getter119, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod120, i128 %p115, i1* @constraint.629)
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call87, i32 0, i32 3
  %bigmod.b.read_input_outter123 = load [256 x i128]*, [256 x i128]** %struct_getter122, align 8
  %mod125 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter123, i128 0, i128 %i.4
  store i128 %p115, i128* %mod125, align 4
  br label %loop.latch126

loop.latch126:                                    ; preds = %loop.body111
  %add128 = add i128 %i.4, 1
  %slt131 = icmp slt i128 %add128, %bigmodinv.k.read_arg_inner
  br i1 %slt131, label %loop.body111, label %loop.exit132

loop.exit132:                                     ; preds = %loop.latch126
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call87, i32 0, i32 5
  %bigmod.mod.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter134, align 8
  %array_getter135 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.mod.read_output_outter, i128 0, i128 0
  %mod136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod136, i128 1, i1* @constraint.630)
  br label %loop.body137

loop.body137:                                     ; preds = %loop.latch144, %loop.exit132
  %i.5 = phi i128 [ 1, %loop.exit132 ], [ %add146, %loop.latch144 ]
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call87, i32 0, i32 5
  %bigmod.mod.read_output_outter140 = load [256 x i128]*, [256 x i128]** %struct_getter139, align 8
  %array_getter142 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.mod.read_output_outter140, i128 0, i128 %i.5
  %mod143 = load i128, i128* %array_getter142, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod143, i128 0, i1* @constraint.631)
  br label %loop.latch144

loop.latch144:                                    ; preds = %loop.body137
  %add146 = add i128 %i.5, 1
  %slt149 = icmp slt i128 %add146, %bigmodinv.k.read_arg_inner
  br i1 %slt149, label %loop.body137, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch144
  br label %arraydim

arraydim:                                         ; preds = %loop.exit150
  %ptr_cast = bitcast [256 x %struct_template_circuit_num2bits*]** %range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %bigmodinv.k.read_arg_inner)
  %ptr_cast151 = bitcast [256 x i128]** %bigmodinv.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast151, i128 %bigmodinv.k.read_arg_inner)
  %ptr_cast152 = bitcast [256 x i128]** %inv to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast152, i128 50)
  %ptr_cast153 = bitcast [256 x i128]** %bigmodinv.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast153, i128 %bigmodinv.k.read_arg_inner)
  %ptr_cast154 = bitcast [256 x i128]** %bigmodinv.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast154, i128 %bigmodinv.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out155 = load [256 x i128]*, [256 x i128]** %bigmodinv.out.declare_output, align 8
  %bigmodinv.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 4
  store [256 x i128]* %out155, [256 x i128]** %bigmodinv.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmodinv* @fn_template_build_bigmodinv(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmodinv = alloca %struct_template_circuit_bigmodinv, align 8
  %bigmodinv.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %struct_template_circuit_bigmodinv, i32 0, i32 0
  store i128 %0, i128* %bigmodinv.n.write_arg_inner, align 4
  %bigmodinv.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %struct_template_circuit_bigmodinv, i32 0, i32 1
  store i128 %1, i128* %bigmodinv.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmodinv* %struct_template_circuit_bigmodinv
}

define void @fn_template_init_ellipticcurveaddunequal(%struct_template_circuit_ellipticcurveaddunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 0
  %ellipticcurveaddunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 1
  %ellipticcurveaddunequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 2
  %ellipticcurveaddunequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %ellipticcurveaddunequal.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %ellipticcurveaddunequal.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %y3 = alloca [256 x i128]*, align 8
  %y35 = alloca [256 x i128], align 8
  store [256 x i128]* %y35, [256 x i128]** %y3, align 8
  %lambda_sq = alloca [256 x i128]*, align 8
  %lambda_sq6 = alloca [256 x i128], align 8
  store [256 x i128]* %lambda_sq6, [256 x i128]** %lambda_sq, align 8
  %lambda = alloca [256 x i128]*, align 8
  %lambda7 = alloca [256 x i128], align 8
  store [256 x i128]* %lambda7, [256 x i128]** %lambda, align 8
  %LOGK38 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurveaddunequal.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %x3 = alloca [256 x i128]*, align 8
  %x39 = alloca [256 x i128], align 8
  store [256 x i128]* %x39, [256 x i128]** %x3, align 8
  %dy = alloca [256 x i128]*, align 8
  %dy10 = alloca [256 x i128], align 8
  store [256 x i128]* %dy10, [256 x i128]** %dy, align 8
  %i11 = call i128 @fn_intrinsic_utils_init()
  %j12 = call i128 @fn_intrinsic_utils_init()
  %LOGK13 = call i128 @fn_intrinsic_utils_init()
  %dx = alloca [256 x i128]*, align 8
  %dx14 = alloca [256 x i128], align 8
  store [256 x i128]* %dx14, [256 x i128]** %dx, align 8
  %dx_inv = alloca [256 x i128]*, align 8
  %dx_inv15 = alloca [256 x i128], align 8
  store [256 x i128]* %dx_inv15, [256 x i128]** %dx_inv, align 8
  %call = call i128 @log_ceil(i128 %ellipticcurveaddunequal.k.read_arg_inner)
  %mul = mul i128 3, %ellipticcurveaddunequal.k.read_arg_inner
  %mul21 = mul i128 %mul, %ellipticcurveaddunequal.k.read_arg_inner
  %mul23 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub = sub i128 %mul23, 1
  %mul24 = mul i128 %mul21, %sub
  %add = add i128 %mul24, 1
  %call25 = call i128 @log_ceil(i128 %add)
  %mul26 = mul i128 4, %ellipticcurveaddunequal.n.read_arg_inner
  %add28 = add i128 %mul26, %call25
  %slt = icmp slt i128 %add28, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 1
  %b31 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %b31, [256 x i128]* %spice_inline_array, align 4
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter32 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 1
  %a33 = load [256 x i128], [256 x i128]* %array_getter32, align 4
  %spice_inline_array34 = alloca [256 x i128], align 8
  store [256 x i128] %a33, [256 x i128]* %spice_inline_array34, align 4
  %call35 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array34, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call35, [256 x i128]** %dy, align 8
  %b38 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b38, i128 0, i128 0
  %b40 = load [256 x i128], [256 x i128]* %array_getter39, align 4
  %spice_inline_array41 = alloca [256 x i128], align 8
  store [256 x i128] %b40, [256 x i128]* %spice_inline_array41, align 4
  %a42 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a42, i128 0, i128 0
  %a44 = load [256 x i128], [256 x i128]* %array_getter43, align 4
  %spice_inline_array45 = alloca [256 x i128], align 8
  store [256 x i128] %a44, [256 x i128]* %spice_inline_array45, align 4
  %call47 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %spice_inline_array41, [256 x i128]* %spice_inline_array45, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call47, [256 x i128]** %dx, align 8
  %dx50 = load [256 x i128]*, [256 x i128]** %dx, align 8
  %call52 = call [256 x i128]* @mod_inv(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %dx50, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call52, [256 x i128]** %dx_inv, align 8
  %dy55 = load [256 x i128]*, [256 x i128]** %dy, align 8
  %dx_inv56 = load [256 x i128]*, [256 x i128]** %dx_inv, align 8
  %call58 = call [256 x i128]* @prod_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %dy55, [256 x i128]* %dx_inv56, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call58, [256 x i128]** %lambda, align 8
  %lambda61 = load [256 x i128]*, [256 x i128]** %lambda, align 8
  %lambda62 = load [256 x i128]*, [256 x i128]** %lambda, align 8
  %call64 = call [256 x i128]* @prod_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %lambda61, [256 x i128]* %lambda62, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call64, [256 x i128]** %lambda_sq, align 8
  %lambda_sq69 = load [256 x i128]*, [256 x i128]** %lambda_sq, align 8
  %a70 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a70, i128 0, i128 0
  %a72 = load [256 x i128], [256 x i128]* %array_getter71, align 4
  %spice_inline_array73 = alloca [256 x i128], align 8
  store [256 x i128] %a72, [256 x i128]* %spice_inline_array73, align 4
  %call75 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %lambda_sq69, [256 x i128]* %spice_inline_array73, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %b76 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter77 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b76, i128 0, i128 0
  %b78 = load [256 x i128], [256 x i128]* %array_getter77, align 4
  %spice_inline_array79 = alloca [256 x i128], align 8
  store [256 x i128] %b78, [256 x i128]* %spice_inline_array79, align 4
  %call81 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call75, [256 x i128]* %spice_inline_array79, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call81, [256 x i128]** %x3, align 8
  %lambda86 = load [256 x i128]*, [256 x i128]** %lambda, align 8
  %a89 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter90 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a89, i128 0, i128 0
  %a91 = load [256 x i128], [256 x i128]* %array_getter90, align 4
  %spice_inline_array92 = alloca [256 x i128], align 8
  store [256 x i128] %a91, [256 x i128]* %spice_inline_array92, align 4
  %x393 = load [256 x i128]*, [256 x i128]** %x3, align 8
  %call95 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %spice_inline_array92, [256 x i128]* %x393, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %call97 = call [256 x i128]* @prod_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %lambda86, [256 x i128]* %call95, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %a98 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a98, i128 0, i128 1
  %a100 = load [256 x i128], [256 x i128]* %array_getter99, align 4
  %spice_inline_array101 = alloca [256 x i128], align 8
  store [256 x i128] %a100, [256 x i128]* %spice_inline_array101, align 4
  %call103 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call97, [256 x i128]* %spice_inline_array101, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  store [256 x i128]* %call103, [256 x i128]** %y3, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add118, %loop.latch ]
  %x3104 = load [256 x i128]*, [256 x i128]** %x3, align 8
  %array_getter106 = getelementptr inbounds [256 x i128], [256 x i128]* %x3104, i128 0, i128 %i.0
  %x3107 = load i128, i128* %array_getter106, align 4
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %out109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 0, i128 %i.0
  store i128 %x3107, i128* %out109, align 4
  %y3110 = load [256 x i128]*, [256 x i128]** %y3, align 8
  %array_getter112 = getelementptr inbounds [256 x i128], [256 x i128]* %y3110, i128 0, i128 %i.0
  %y3113 = load i128, i128* %array_getter112, align 4
  %ptr_getter114 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %out116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter114, i128 0, i128 1, i128 %i.0
  store i128 %y3113, i128* %out116, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add118 = add i128 %i.0, 1
  %slt121 = icmp slt i128 %add118, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt121, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul125 = mul i128 2, %ellipticcurveaddunequal.n.read_arg_inner
  %add127 = add i128 %mul125, %call
  %add128 = add i128 %add127, 2
  %call129 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %add128)
  %mul133 = mul i128 2, %ellipticcurveaddunequal.n.read_arg_inner
  %add135 = add i128 %mul133, %call
  %add136 = add i128 %add135, 2
  %call137 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %add136)
  br label %loop.body138

loop.body138:                                     ; preds = %loop.latch217, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add219, %loop.latch217 ]
  %b139 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter141 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b139, i128 0, i128 0, i128 %i.1
  %b142 = load i128, i128* %array_getter141, align 4
  %a143 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter145 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a143, i128 0, i128 0, i128 %i.1
  %a146 = load i128, i128* %array_getter145, align 4
  %sub147 = sub i128 %b142, %a146
  %struct_getter149 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter149, align 8
  %array_getter151 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.1
  %dx_sq152 = load i128, i128* %array_getter151, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dx_sq152, i128 %sub147, i1* @constraint.632)
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %dx_sq157 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter155, i128 0, i128 %i.1
  store i128 %sub147, i128* %dx_sq157, align 4
  %b158 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter160 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b158, i128 0, i128 0, i128 %i.1
  %b161 = load i128, i128* %array_getter160, align 4
  %a162 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter164 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a162, i128 0, i128 0, i128 %i.1
  %a165 = load i128, i128* %array_getter164, align 4
  %sub166 = sub i128 %b161, %a165
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter168, align 8
  %array_getter170 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.1
  %dx_sq171 = load i128, i128* %array_getter170, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dx_sq171, i128 %sub166, i1* @constraint.633)
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter174 = load [256 x i128]*, [256 x i128]** %struct_getter173, align 8
  %dx_sq176 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter174, i128 0, i128 %i.1
  store i128 %sub166, i128* %dx_sq176, align 4
  %b177 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter179 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b177, i128 0, i128 1, i128 %i.1
  %b180 = load i128, i128* %array_getter179, align 4
  %a181 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter183 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a181, i128 0, i128 1, i128 %i.1
  %a184 = load i128, i128* %array_getter183, align 4
  %sub185 = sub i128 %b180, %a184
  %struct_getter187 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call137, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter188 = load [256 x i128]*, [256 x i128]** %struct_getter187, align 8
  %array_getter190 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter188, i128 0, i128 %i.1
  %dy_sq191 = load i128, i128* %array_getter190, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dy_sq191, i128 %sub185, i1* @constraint.634)
  %struct_getter193 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call137, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter194 = load [256 x i128]*, [256 x i128]** %struct_getter193, align 8
  %dy_sq196 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter194, i128 0, i128 %i.1
  store i128 %sub185, i128* %dy_sq196, align 4
  %b197 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter199 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b197, i128 0, i128 1, i128 %i.1
  %b200 = load i128, i128* %array_getter199, align 4
  %a201 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter203 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a201, i128 0, i128 1, i128 %i.1
  %a204 = load i128, i128* %array_getter203, align 4
  %sub205 = sub i128 %b200, %a204
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call137, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter208 = load [256 x i128]*, [256 x i128]** %struct_getter207, align 8
  %array_getter210 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter208, i128 0, i128 %i.1
  %dy_sq211 = load i128, i128* %array_getter210, align 4
  call void @fn_intrinsic_utils_constraint(i128 %dy_sq211, i128 %sub205, i1* @constraint.635)
  %struct_getter213 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call137, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter214 = load [256 x i128]*, [256 x i128]** %struct_getter213, align 8
  %dy_sq216 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter214, i128 0, i128 %i.1
  store i128 %sub205, i128* %dy_sq216, align 4
  br label %loop.latch217

loop.latch217:                                    ; preds = %loop.body138
  %add219 = add i128 %i.1, 1
  %slt222 = icmp slt i128 %add219, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt222, label %loop.body138, label %loop.exit223

loop.exit223:                                     ; preds = %loop.latch217
  %mul227 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub228 = sub i128 %mul227, 1
  %mul230 = mul i128 3, %ellipticcurveaddunequal.n.read_arg_inner
  %add231 = add i128 %mul230, 4
  %mul233 = mul i128 2, %call
  %add234 = add i128 %add231, %mul233
  %call235 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %sub228, i128 %add234)
  br label %loop.body236

loop.body236:                                     ; preds = %loop.latch261, %loop.exit223
  %i.2 = phi i128 [ 0, %loop.exit223 ], [ %add263, %loop.latch261 ]
  %a237 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter239 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a237, i128 0, i128 0, i128 %i.2
  %a240 = load i128, i128* %array_getter239, align 4
  %b241 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter243 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b241, i128 0, i128 0, i128 %i.2
  %b244 = load i128, i128* %array_getter243, align 4
  %add245 = add i128 %a240, %b244
  %out246 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %array_getter248 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out246, i128 0, i128 0, i128 %i.2
  %out249 = load i128, i128* %array_getter248, align 4
  %add250 = add i128 %add245, %out249
  %struct_getter252 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call235, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter252, align 8
  %array_getter254 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.2
  %cubic255 = load i128, i128* %array_getter254, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic255, i128 %add250, i1* @constraint.636)
  %struct_getter257 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call235, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter258 = load [256 x i128]*, [256 x i128]** %struct_getter257, align 8
  %cubic260 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter258, i128 0, i128 %i.2
  store i128 %add250, i128* %cubic260, align 4
  br label %loop.latch261

loop.latch261:                                    ; preds = %loop.body236
  %add263 = add i128 %i.2, 1
  %slt266 = icmp slt i128 %add263, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt266, label %loop.body236, label %loop.exit267

loop.exit267:                                     ; preds = %loop.latch261
  br label %loop.body268

loop.body268:                                     ; preds = %loop.latch284, %loop.exit267
  %i.3 = phi i128 [ 0, %loop.exit267 ], [ %add286, %loop.latch284 ]
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter270, align 8
  %array_getter272 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.3
  %dx_sq273 = load i128, i128* %array_getter272, align 4
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call235, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter275, align 8
  %array_getter277 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.3
  %cubic278 = load i128, i128* %array_getter277, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic278, i128 %dx_sq273, i1* @constraint.637)
  %struct_getter280 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call235, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter281 = load [256 x i128]*, [256 x i128]** %struct_getter280, align 8
  %cubic283 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter281, i128 0, i128 %i.3
  store i128 %dx_sq273, i128* %cubic283, align 4
  br label %loop.latch284

loop.latch284:                                    ; preds = %loop.body268
  %add286 = add i128 %i.3, 1
  %mul289 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub290 = sub i128 %mul289, 1
  %slt291 = icmp slt i128 %add286, %sub290
  br i1 %slt291, label %loop.body268, label %loop.exit292

loop.exit292:                                     ; preds = %loop.latch284
  %mul296 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub297 = sub i128 %mul296, 2
  %mul300 = mul i128 4, %ellipticcurveaddunequal.n.read_arg_inner
  %add302 = add i128 %mul300, %call25
  %call303 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %sub297, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner, i128 %add302)
  br label %loop.body304

loop.body304:                                     ; preds = %loop.latch327, %loop.exit292
  %i.4 = phi i128 [ 0, %loop.exit292 ], [ %add329, %loop.latch327 ]
  %struct_getter306 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call235, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter306, align 8
  %array_getter308 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.4
  %cubic309 = load i128, i128* %array_getter308, align 4
  %struct_getter311 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call137, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter312 = load [256 x i128]*, [256 x i128]** %struct_getter311, align 8
  %array_getter314 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter312, i128 0, i128 %i.4
  %dy_sq315 = load i128, i128* %array_getter314, align 4
  %sub316 = sub i128 %cubic309, %dy_sq315
  %struct_getter318 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call303, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter318, align 8
  %array_getter320 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.4
  %cubic_red321 = load i128, i128* %array_getter320, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_red321, i128 %sub316, i1* @constraint.638)
  %struct_getter323 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call303, i32 0, i32 5
  %primereduce.in.read_input_outter324 = load [256 x i128]*, [256 x i128]** %struct_getter323, align 8
  %cubic_red326 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter324, i128 0, i128 %i.4
  store i128 %sub316, i128* %cubic_red326, align 4
  br label %loop.latch327

loop.latch327:                                    ; preds = %loop.body304
  %add329 = add i128 %i.4, 1
  %mul332 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub333 = sub i128 %mul332, 1
  %slt334 = icmp slt i128 %add329, %sub333
  br i1 %slt334, label %loop.body304, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch327
  %mul337 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub338 = sub i128 %mul337, 1
  br label %loop.body339

loop.body339:                                     ; preds = %loop.latch357, %loop.exit335
  %i.5 = phi i128 [ %sub338, %loop.exit335 ], [ %add359, %loop.latch357 ]
  %struct_getter341 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call235, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter342 = load [256 x i128]*, [256 x i128]** %struct_getter341, align 8
  %array_getter344 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter342, i128 0, i128 %i.5
  %cubic345 = load i128, i128* %array_getter344, align 4
  %struct_getter347 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call303, i32 0, i32 5
  %primereduce.in.read_input_outter348 = load [256 x i128]*, [256 x i128]** %struct_getter347, align 8
  %array_getter350 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter348, i128 0, i128 %i.5
  %cubic_red351 = load i128, i128* %array_getter350, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_red351, i128 %cubic345, i1* @constraint.639)
  %struct_getter353 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call303, i32 0, i32 5
  %primereduce.in.read_input_outter354 = load [256 x i128]*, [256 x i128]** %struct_getter353, align 8
  %cubic_red356 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter354, i128 0, i128 %i.5
  store i128 %cubic345, i128* %cubic_red356, align 4
  br label %loop.latch357

loop.latch357:                                    ; preds = %loop.body339
  %add359 = add i128 %i.5, 1
  %mul362 = mul i128 3, %ellipticcurveaddunequal.k.read_arg_inner
  %sub363 = sub i128 %mul362, 2
  %slt364 = icmp slt i128 %add359, %sub363
  br i1 %slt364, label %loop.body339, label %loop.exit365

loop.exit365:                                     ; preds = %loop.latch357
  %mul369 = mul i128 4, %ellipticcurveaddunequal.n.read_arg_inner
  %add371 = add i128 %mul369, %call25
  %call373 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %add371, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  br label %loop.body374

loop.body374:                                     ; preds = %loop.latch390, %loop.exit365
  %i.6 = phi i128 [ 0, %loop.exit365 ], [ %add392, %loop.latch390 ]
  %struct_getter376 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call303, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter376, align 8
  %array_getter378 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.6
  %cubic_red379 = load i128, i128* %array_getter378, align 4
  %struct_getter381 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call373, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter381, align 8
  %array_getter383 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.6
  %cubic_mod384 = load i128, i128* %array_getter383, align 4
  call void @fn_intrinsic_utils_constraint(i128 %cubic_mod384, i128 %cubic_red379, i1* @constraint.640)
  %struct_getter386 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call373, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter387 = load [256 x i128]*, [256 x i128]** %struct_getter386, align 8
  %cubic_mod389 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter387, i128 0, i128 %i.6
  store i128 %cubic_red379, i128* %cubic_mod389, align 4
  br label %loop.latch390

loop.latch390:                                    ; preds = %loop.body374
  %add392 = add i128 %i.6, 1
  %slt395 = icmp slt i128 %add392, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt395, label %loop.body374, label %loop.exit396

loop.exit396:                                     ; preds = %loop.latch390
  %call400 = call %struct_template_circuit_pointonline* @fn_template_build_pointonline(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  br label %loop.body401

loop.body401:                                     ; preds = %loop.latch462, %loop.exit396
  %i.7 = phi i128 [ 0, %loop.exit396 ], [ %add464, %loop.latch462 ]
  br label %loop.body402

loop.body402:                                     ; preds = %loop.latch456, %loop.body401
  %j.0 = phi i128 [ 0, %loop.body401 ], [ %add458, %loop.latch456 ]
  %a403 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input, align 8
  %array_getter406 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a403, i128 0, i128 %j.0, i128 %i.7
  %a407 = load i128, i128* %array_getter406, align 4
  %struct_getter409 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call400, i32 0, i32 3
  %pointonline.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter409, align 8
  %array_getter412 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter, i128 0, i128 0, i128 %j.0, i128 %i.7
  %y_constraint413 = load i128, i128* %array_getter412, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_constraint413, i128 %a407, i1* @constraint.641)
  %struct_getter415 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call400, i32 0, i32 3
  %pointonline.in.read_input_outter416 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter415, align 8
  %y_constraint419 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter416, i128 0, i128 0, i128 %j.0, i128 %i.7
  store i128 %a407, i128* %y_constraint419, align 4
  %b420 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input, align 8
  %array_getter423 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b420, i128 0, i128 %j.0, i128 %i.7
  %b424 = load i128, i128* %array_getter423, align 4
  %struct_getter426 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call400, i32 0, i32 3
  %pointonline.in.read_input_outter427 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter426, align 8
  %array_getter430 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter427, i128 0, i128 1, i128 %j.0, i128 %i.7
  %y_constraint431 = load i128, i128* %array_getter430, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_constraint431, i128 %b424, i1* @constraint.642)
  %struct_getter433 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call400, i32 0, i32 3
  %pointonline.in.read_input_outter434 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter433, align 8
  %y_constraint437 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter434, i128 0, i128 1, i128 %j.0, i128 %i.7
  store i128 %b424, i128* %y_constraint437, align 4
  %out438 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %array_getter441 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out438, i128 0, i128 %j.0, i128 %i.7
  %out442 = load i128, i128* %array_getter441, align 4
  %struct_getter444 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call400, i32 0, i32 3
  %pointonline.in.read_input_outter445 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter444, align 8
  %array_getter448 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter445, i128 0, i128 2, i128 %j.0, i128 %i.7
  %y_constraint449 = load i128, i128* %array_getter448, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_constraint449, i128 %out442, i1* @constraint.643)
  %struct_getter451 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call400, i32 0, i32 3
  %pointonline.in.read_input_outter452 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter451, align 8
  %y_constraint455 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter452, i128 0, i128 2, i128 %j.0, i128 %i.7
  store i128 %out442, i128* %y_constraint455, align 4
  br label %loop.latch456

loop.latch456:                                    ; preds = %loop.body402
  %add458 = add i128 %j.0, 1
  %slt460 = icmp slt i128 %add458, 2
  br i1 %slt460, label %loop.body402, label %loop.exit461

loop.exit461:                                     ; preds = %loop.latch456
  br label %loop.latch462

loop.latch462:                                    ; preds = %loop.exit461
  %add464 = add i128 %i.7, 1
  %slt467 = icmp slt i128 %add464, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt467, label %loop.body401, label %loop.exit468

loop.exit468:                                     ; preds = %loop.latch462
  %call471 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner)
  br label %loop.body472

loop.body472:                                     ; preds = %loop.latch498, %loop.exit468
  %j.1 = phi i128 [ 0, %loop.exit468 ], [ %add500, %loop.latch498 ]
  br label %loop.body473

loop.body473:                                     ; preds = %loop.latch491, %loop.body472
  %i.8 = phi i128 [ 0, %loop.body472 ], [ %add493, %loop.latch491 ]
  %out474 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %array_getter477 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out474, i128 0, i128 %j.1, i128 %i.8
  %out478 = load i128, i128* %array_getter477, align 4
  %struct_getter480 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call471, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter480, align 8
  %array_getter483 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.1, i128 %i.8
  %range_check484 = load i128, i128* %array_getter483, align 4
  call void @fn_intrinsic_utils_constraint(i128 %range_check484, i128 %out478, i1* @constraint.644)
  %struct_getter486 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call471, i32 0, i32 2
  %rangecheck2d.in.read_input_outter487 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter486, align 8
  %range_check490 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter487, i128 0, i128 %j.1, i128 %i.8
  store i128 %out478, i128* %range_check490, align 4
  br label %loop.latch491

loop.latch491:                                    ; preds = %loop.body473
  %add493 = add i128 %i.8, 1
  %slt496 = icmp slt i128 %add493, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt496, label %loop.body473, label %loop.exit497

loop.exit497:                                     ; preds = %loop.latch491
  br label %loop.latch498

loop.latch498:                                    ; preds = %loop.exit497
  %add500 = add i128 %j.1, 1
  %slt502 = icmp slt i128 %add500, 2
  br i1 %slt502, label %loop.body472, label %loop.exit503

loop.exit503:                                     ; preds = %loop.latch498
  br label %arraydim

arraydim:                                         ; preds = %loop.exit503
  %ptr_cast = bitcast [256 x [256 x i128]]** %ellipticcurveaddunequal.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %ellipticcurveaddunequal.k.read_arg_inner)
  %ptr_cast504 = bitcast [256 x i128]** %x3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast504, i128 50)
  %ptr_cast505 = bitcast [256 x i128]** %dx_inv to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast505, i128 50)
  %ptr_cast506 = bitcast [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast506, i128 2, i128 %ellipticcurveaddunequal.k.read_arg_inner)
  %ptr_cast507 = bitcast [256 x i128]** %dx to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast507, i128 50)
  %ptr_cast508 = bitcast [256 x [256 x i128]]** %ellipticcurveaddunequal.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast508, i128 2, i128 %ellipticcurveaddunequal.k.read_arg_inner)
  %ptr_cast509 = bitcast [256 x i128]** %lambda to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast509, i128 50)
  %ptr_cast510 = bitcast [256 x i128]** %dy to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast510, i128 50)
  %ptr_cast511 = bitcast [256 x i128]** %y3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast511, i128 50)
  %ptr_cast512 = bitcast [256 x i128]** %lambda_sq to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast512, i128 50)
  br label %exit

exit:                                             ; preds = %arraydim
  %out513 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.declare_output, align 8
  %ellipticcurveaddunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out513, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_ellipticcurveaddunequal = alloca %struct_template_circuit_ellipticcurveaddunequal, align 8
  %ellipticcurveaddunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveaddunequal.n.write_arg_inner, align 4
  %ellipticcurveaddunequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveaddunequal.k.write_arg_inner, align 4
  %ellipticcurveaddunequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurveaddunequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal
}

define void @fn_template_init_ellipticcurvedouble(%struct_template_circuit_ellipticcurvedouble* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 0
  %ellipticcurvedouble.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 1
  %ellipticcurvedouble.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 2
  %ellipticcurvedouble.a.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 3
  %ellipticcurvedouble.b.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 4
  %ellipticcurvedouble.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %ellipticcurvedouble.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %ellipticcurvedouble.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %y3 = alloca [256 x i128]*, align 8
  %y36 = alloca [256 x i128], align 8
  store [256 x i128]* %y36, [256 x i128]** %y3, align 8
  %long_a = alloca [256 x i128]*, align 8
  %long_a7 = alloca [256 x i128], align 8
  store [256 x i128]* %long_a7, [256 x i128]** %long_a, align 8
  %j8 = call i128 @fn_intrinsic_utils_init()
  %i9 = call i128 @fn_intrinsic_utils_init()
  %lamb_denom = alloca [256 x i128]*, align 8
  %lamb_denom10 = alloca [256 x i128], align 8
  store [256 x i128]* %lamb_denom10, [256 x i128]** %lamb_denom, align 8
  %long_3 = alloca [256 x i128]*, align 8
  %long_311 = alloca [256 x i128], align 8
  store [256 x i128]* %long_311, [256 x i128]** %long_3, align 8
  %lamb_num = alloca [256 x i128]*, align 8
  %lamb_num12 = alloca [256 x i128], align 8
  store [256 x i128]* %lamb_num12, [256 x i128]** %lamb_num, align 8
  %x3 = alloca [256 x i128]*, align 8
  %x313 = alloca [256 x i128], align 8
  store [256 x i128]* %x313, [256 x i128]** %x3, align 8
  %lamb = alloca [256 x i128]*, align 8
  %lamb14 = alloca [256 x i128], align 8
  store [256 x i128]* %lamb14, [256 x i128]** %lamb, align 8
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %long_a, align 8
  %uniform_array18 = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array18, [256 x i128]** %long_3, align 8
  %ptr_getter = load [256 x i128]*, [256 x i128]** %long_a, align 8
  %long_a19 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 0
  store i128 %ellipticcurvedouble.a.read_arg_inner, i128* %long_a19, align 4
  %ptr_getter20 = load [256 x i128]*, [256 x i128]** %long_3, align 8
  %long_321 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter20, i128 0, i128 0
  store i128 3, i128* %long_321, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %ptr_getter22 = load [256 x i128]*, [256 x i128]** %long_a, align 8
  %long_a24 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter22, i128 0, i128 %i.0
  store i128 0, i128* %long_a24, align 4
  %ptr_getter25 = load [256 x i128]*, [256 x i128]** %long_3, align 8
  %long_327 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter25, i128 0, i128 %i.0
  store i128 0, i128* %long_327, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %long_a32 = load [256 x i128]*, [256 x i128]** %long_a, align 8
  %long_335 = load [256 x i128]*, [256 x i128]** %long_3, align 8
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 0
  %in38 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %in38, [256 x i128]* %spice_inline_array, align 4
  %in39 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in39, i128 0, i128 0
  %in41 = load [256 x i128], [256 x i128]* %array_getter40, align 4
  %spice_inline_array42 = alloca [256 x i128], align 8
  store [256 x i128] %in41, [256 x i128]* %spice_inline_array42, align 4
  %call = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array42, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call44 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %long_335, [256 x i128]* %call, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call46 = call [256 x i128]* @long_add_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %long_a32, [256 x i128]* %call44, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  store [256 x i128]* %call46, [256 x i128]** %lamb_num, align 8
  %in49 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in49, i128 0, i128 1
  %in51 = load [256 x i128], [256 x i128]* %array_getter50, align 4
  %spice_inline_array52 = alloca [256 x i128], align 8
  store [256 x i128] %in51, [256 x i128]* %spice_inline_array52, align 4
  %in53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in53, i128 0, i128 1
  %in55 = load [256 x i128], [256 x i128]* %array_getter54, align 4
  %spice_inline_array56 = alloca [256 x i128], align 8
  store [256 x i128] %in55, [256 x i128]* %spice_inline_array56, align 4
  %call58 = call [256 x i128]* @long_add_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array52, [256 x i128]* %spice_inline_array56, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  store [256 x i128]* %call58, [256 x i128]** %lamb_denom, align 8
  %lamb_num61 = load [256 x i128]*, [256 x i128]** %lamb_num, align 8
  %lamb_denom64 = load [256 x i128]*, [256 x i128]** %lamb_denom, align 8
  %call66 = call [256 x i128]* @mod_inv(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %lamb_denom64, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call68 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %lamb_num61, [256 x i128]* %call66, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  store [256 x i128]* %call68, [256 x i128]** %lamb, align 8
  %lamb73 = load [256 x i128]*, [256 x i128]** %lamb, align 8
  %lamb74 = load [256 x i128]*, [256 x i128]** %lamb, align 8
  %call76 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %lamb73, [256 x i128]* %lamb74, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %in79 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in79, i128 0, i128 0
  %in81 = load [256 x i128], [256 x i128]* %array_getter80, align 4
  %spice_inline_array82 = alloca [256 x i128], align 8
  store [256 x i128] %in81, [256 x i128]* %spice_inline_array82, align 4
  %in83 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter84 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in83, i128 0, i128 0
  %in85 = load [256 x i128], [256 x i128]* %array_getter84, align 4
  %spice_inline_array86 = alloca [256 x i128], align 8
  store [256 x i128] %in85, [256 x i128]* %spice_inline_array86, align 4
  %call88 = call [256 x i128]* @long_add_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array82, [256 x i128]* %spice_inline_array86, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call90 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call76, [256 x i128]* %call88, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  store [256 x i128]* %call90, [256 x i128]** %x3, align 8
  %lamb95 = load [256 x i128]*, [256 x i128]** %lamb, align 8
  %in98 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in98, i128 0, i128 0
  %in100 = load [256 x i128], [256 x i128]* %array_getter99, align 4
  %spice_inline_array101 = alloca [256 x i128], align 8
  store [256 x i128] %in100, [256 x i128]* %spice_inline_array101, align 4
  %x3102 = load [256 x i128]*, [256 x i128]** %x3, align 8
  %call104 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array101, [256 x i128]* %x3102, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call106 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %lamb95, [256 x i128]* %call104, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %in107 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter108 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in107, i128 0, i128 1
  %in109 = load [256 x i128], [256 x i128]* %array_getter108, align 4
  %spice_inline_array110 = alloca [256 x i128], align 8
  store [256 x i128] %in109, [256 x i128]* %spice_inline_array110, align 4
  %call112 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call106, [256 x i128]* %spice_inline_array110, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  store [256 x i128]* %call112, [256 x i128]** %y3, align 8
  br label %loop.body113

loop.body113:                                     ; preds = %loop.latch128, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add130, %loop.latch128 ]
  %x3114 = load [256 x i128]*, [256 x i128]** %x3, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %x3114, i128 0, i128 %i.1
  %x3117 = load i128, i128* %array_getter116, align 4
  %ptr_getter118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %out120 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter118, i128 0, i128 0, i128 %i.1
  store i128 %x3117, i128* %out120, align 4
  %y3121 = load [256 x i128]*, [256 x i128]** %y3, align 8
  %array_getter123 = getelementptr inbounds [256 x i128], [256 x i128]* %y3121, i128 0, i128 %i.1
  %y3124 = load i128, i128* %array_getter123, align 4
  %ptr_getter125 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %out127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter125, i128 0, i128 1, i128 %i.1
  store i128 %y3124, i128* %out127, align 4
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.body113
  %add130 = add i128 %i.1, 1
  %slt133 = icmp slt i128 %add130, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt133, label %loop.body113, label %loop.exit134

loop.exit134:                                     ; preds = %loop.latch128
  %call137 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner)
  br label %loop.body138

loop.body138:                                     ; preds = %loop.latch164, %loop.exit134
  %j.0 = phi i128 [ 0, %loop.exit134 ], [ %add166, %loop.latch164 ]
  br label %loop.body139

loop.body139:                                     ; preds = %loop.latch157, %loop.body138
  %i.2 = phi i128 [ 0, %loop.body138 ], [ %add159, %loop.latch157 ]
  %out140 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out140, i128 0, i128 %j.0, i128 %i.2
  %out144 = load i128, i128* %array_getter143, align 4
  %struct_getter146 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call137, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter146, align 8
  %array_getter149 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.0, i128 %i.2
  %range_check150 = load i128, i128* %array_getter149, align 4
  call void @fn_intrinsic_utils_constraint(i128 %range_check150, i128 %out144, i1* @constraint.645)
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call137, i32 0, i32 2
  %rangecheck2d.in.read_input_outter153 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter152, align 8
  %range_check156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter153, i128 0, i128 %j.0, i128 %i.2
  store i128 %out144, i128* %range_check156, align 4
  br label %loop.latch157

loop.latch157:                                    ; preds = %loop.body139
  %add159 = add i128 %i.2, 1
  %slt162 = icmp slt i128 %add159, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt162, label %loop.body139, label %loop.exit163

loop.exit163:                                     ; preds = %loop.latch157
  br label %loop.latch164

loop.latch164:                                    ; preds = %loop.exit163
  %add166 = add i128 %j.0, 1
  %slt168 = icmp slt i128 %add166, 2
  br i1 %slt168, label %loop.body138, label %loop.exit169

loop.exit169:                                     ; preds = %loop.latch164
  %call174 = call %struct_template_circuit_pointontangent* @fn_template_build_pointontangent(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, i128 %ellipticcurvedouble.a.read_arg_inner, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body175

loop.body175:                                     ; preds = %loop.latch219, %loop.exit169
  %j.1 = phi i128 [ 0, %loop.exit169 ], [ %add221, %loop.latch219 ]
  br label %loop.body176

loop.body176:                                     ; preds = %loop.latch212, %loop.body175
  %i.3 = phi i128 [ 0, %loop.body175 ], [ %add214, %loop.latch212 ]
  %in177 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter180 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in177, i128 0, i128 %j.1, i128 %i.3
  %in181 = load i128, i128* %array_getter180, align 4
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call174, i32 0, i32 4
  %pointontangent.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter183, align 8
  %array_getter186 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter, i128 0, i128 0, i128 %j.1, i128 %i.3
  %point_on_tangent187 = load i128, i128* %array_getter186, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_tangent187, i128 %in181, i1* @constraint.646)
  %struct_getter189 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call174, i32 0, i32 4
  %pointontangent.in.read_input_outter190 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter189, align 8
  %point_on_tangent193 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter190, i128 0, i128 0, i128 %j.1, i128 %i.3
  store i128 %in181, i128* %point_on_tangent193, align 4
  %out194 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %array_getter197 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out194, i128 0, i128 %j.1, i128 %i.3
  %out198 = load i128, i128* %array_getter197, align 4
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call174, i32 0, i32 4
  %pointontangent.in.read_input_outter201 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter200, align 8
  %array_getter204 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter201, i128 0, i128 1, i128 %j.1, i128 %i.3
  %point_on_tangent205 = load i128, i128* %array_getter204, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_tangent205, i128 %out198, i1* @constraint.647)
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call174, i32 0, i32 4
  %pointontangent.in.read_input_outter208 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter207, align 8
  %point_on_tangent211 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter208, i128 0, i128 1, i128 %j.1, i128 %i.3
  store i128 %out198, i128* %point_on_tangent211, align 4
  br label %loop.latch212

loop.latch212:                                    ; preds = %loop.body176
  %add214 = add i128 %i.3, 1
  %slt217 = icmp slt i128 %add214, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt217, label %loop.body176, label %loop.exit218

loop.exit218:                                     ; preds = %loop.latch212
  br label %loop.latch219

loop.latch219:                                    ; preds = %loop.exit218
  %add221 = add i128 %j.1, 1
  %slt223 = icmp slt i128 %add221, 2
  br i1 %slt223, label %loop.body175, label %loop.exit224

loop.exit224:                                     ; preds = %loop.latch219
  %call229 = call %struct_template_circuit_pointoncurve* @fn_template_build_pointoncurve(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, i128 %ellipticcurvedouble.a.read_arg_inner, i128 %ellipticcurvedouble.b.read_arg_inner, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body230

loop.body230:                                     ; preds = %loop.latch256, %loop.exit224
  %j.2 = phi i128 [ 0, %loop.exit224 ], [ %add258, %loop.latch256 ]
  br label %loop.body231

loop.body231:                                     ; preds = %loop.latch249, %loop.body230
  %i.4 = phi i128 [ 0, %loop.body230 ], [ %add251, %loop.latch249 ]
  %out232 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out232, i128 0, i128 %j.2, i128 %i.4
  %out236 = load i128, i128* %array_getter235, align 4
  %struct_getter238 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %call229, i32 0, i32 5
  %pointoncurve.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter238, align 8
  %array_getter241 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_outter, i128 0, i128 %j.2, i128 %i.4
  %point_on_curve242 = load i128, i128* %array_getter241, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_curve242, i128 %out236, i1* @constraint.648)
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %call229, i32 0, i32 5
  %pointoncurve.in.read_input_outter245 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter244, align 8
  %point_on_curve248 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_outter245, i128 0, i128 %j.2, i128 %i.4
  store i128 %out236, i128* %point_on_curve248, align 4
  br label %loop.latch249

loop.latch249:                                    ; preds = %loop.body231
  %add251 = add i128 %i.4, 1
  %slt254 = icmp slt i128 %add251, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt254, label %loop.body231, label %loop.exit255

loop.exit255:                                     ; preds = %loop.latch249
  br label %loop.latch256

loop.latch256:                                    ; preds = %loop.exit255
  %add258 = add i128 %j.2, 1
  %slt260 = icmp slt i128 %add258, 2
  br i1 %slt260, label %loop.body230, label %loop.exit261

loop.exit261:                                     ; preds = %loop.latch256
  %call265 = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body266

loop.body266:                                     ; preds = %loop.latch296, %loop.exit261
  %i.5 = phi i128 [ 0, %loop.exit261 ], [ %add298, %loop.latch296 ]
  %out267 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %array_getter269 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out267, i128 0, i128 0, i128 %i.5
  %out270 = load i128, i128* %array_getter269, align 4
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call265, i32 0, i32 3
  %fpisequal.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter272, align 8
  %array_getter274 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter, i128 0, i128 0, i128 %i.5
  %x3_eq_x1275 = load i128, i128* %array_getter274, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x3_eq_x1275, i128 %out270, i1* @constraint.649)
  %struct_getter277 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call265, i32 0, i32 3
  %fpisequal.in.read_input_outter278 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter277, align 8
  %x3_eq_x1280 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter278, i128 0, i128 0, i128 %i.5
  store i128 %out270, i128* %x3_eq_x1280, align 4
  %in281 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input, align 8
  %array_getter283 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in281, i128 0, i128 0, i128 %i.5
  %in284 = load i128, i128* %array_getter283, align 4
  %struct_getter286 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call265, i32 0, i32 3
  %fpisequal.in.read_input_outter287 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter286, align 8
  %array_getter289 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter287, i128 0, i128 1, i128 %i.5
  %x3_eq_x1290 = load i128, i128* %array_getter289, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x3_eq_x1290, i128 %in284, i1* @constraint.650)
  %struct_getter292 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call265, i32 0, i32 3
  %fpisequal.in.read_input_outter293 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter292, align 8
  %x3_eq_x1295 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter293, i128 0, i128 1, i128 %i.5
  store i128 %in284, i128* %x3_eq_x1295, align 4
  br label %loop.latch296

loop.latch296:                                    ; preds = %loop.body266
  %add298 = add i128 %i.5, 1
  %slt301 = icmp slt i128 %add298, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt301, label %loop.body266, label %loop.exit302

loop.exit302:                                     ; preds = %loop.latch296
  %struct_getter304 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call265, i32 0, i32 4
  %fpisequal.out.read_output_outter = load i128, i128* %struct_getter304, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fpisequal.out.read_output_outter, i128 0, i1* @constraint.651)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit302
  %ptr_cast = bitcast [256 x i128]** %x3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 50)
  %ptr_cast305 = bitcast [256 x i128]** %lamb_num to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast305, i128 50)
  %ptr_cast306 = bitcast [256 x [256 x i128]]** %ellipticcurvedouble.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast306, i128 2, i128 %ellipticcurvedouble.k.read_arg_inner)
  %ptr_cast307 = bitcast [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast307, i128 2, i128 %ellipticcurvedouble.k.read_arg_inner)
  %ptr_cast308 = bitcast [256 x i128]** %long_a to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast308, i128 %ellipticcurvedouble.k.read_arg_inner)
  %ptr_cast309 = bitcast [256 x i128]** %lamb to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast309, i128 50)
  %ptr_cast310 = bitcast [256 x i128]** %y3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast310, i128 50)
  %ptr_cast311 = bitcast [256 x i128]** %long_3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast311, i128 %ellipticcurvedouble.k.read_arg_inner)
  %ptr_cast312 = bitcast [256 x i128]** %lamb_denom to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast312, i128 50)
  br label %exit

exit:                                             ; preds = %arraydim
  %out313 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvedouble.out.declare_output, align 8
  %ellipticcurvedouble.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out313, [256 x [256 x i128]]** %ellipticcurvedouble.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvedouble = alloca %struct_template_circuit_ellipticcurvedouble, align 8
  %ellipticcurvedouble.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvedouble.n.write_arg_inner, align 4
  %ellipticcurvedouble.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvedouble.k.write_arg_inner, align 4
  %ellipticcurvedouble.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 2
  store i128 %2, i128* %ellipticcurvedouble.a.write_arg_inner, align 4
  %ellipticcurvedouble.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvedouble.b.write_arg_inner, align 4
  %ellipticcurvedouble.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvedouble.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble
}

define void @fn_template_init_signedfp12multiplynocarrycompress(%struct_template_circuit_signedfp12multiplynocarrycompress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 0
  %signedfp12multiplynocarrycompress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 1
  %signedfp12multiplynocarrycompress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 2
  %signedfp12multiplynocarrycompress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 3
  %signedfp12multiplynocarrycompress.m_in.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 4
  %signedfp12multiplynocarrycompress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 5
  %signedfp12multiplynocarrycompress.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %signedfp12multiplynocarrycompress.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.a.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 6
  %signedfp12multiplynocarrycompress.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter6, align 8
  %signedfp12multiplynocarrycompress.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.b.read_input_inner, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.b.declare_input, align 8
  %LOGK17 = call i128 @fn_intrinsic_utils_init()
  %i8 = call i128 @fn_intrinsic_utils_init()
  %idx9 = call i128 @fn_intrinsic_utils_init()
  %l10 = call i128 @fn_intrinsic_utils_init()
  %signedfp12multiplynocarrycompress.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.declare_output, align 8
  %XI011 = call i128 @fn_intrinsic_utils_init()
  %j12 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 6, %signedfp12multiplynocarrycompress.k.read_arg_inner
  %add = add i128 2, 1
  %mul20 = mul i128 %mul, %add
  %call = call i128 @log_ceil(i128 %mul20)
  %mul22 = mul i128 2, %signedfp12multiplynocarrycompress.m_in.read_arg_inner
  %add24 = add i128 %mul22, %call
  %call25 = call %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %signedfp12multiplynocarrycompress.n.read_arg_inner, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner, i128 %add24)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch74, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add76, %loop.latch74 ]
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch68, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add70, %loop.latch68 ]
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch, %loop.body26
  %idx.0 = phi i128 [ 0, %loop.body26 ], [ %add65, %loop.latch ]
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %a31 = load i128, i128* %array_getter, align 4
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call25, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter33, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %nocarry38 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry38, i128 %a31, i1* @constraint.652)
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call25, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter40 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter39, align 8
  %nocarry44 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter40, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %a31, i128* %nocarry44, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.b.declare_input, align 8
  %array_getter48 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b49 = load i128, i128* %array_getter48, align 4
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call25, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter51, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %nocarry56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry56, i128 %b49, i1* @constraint.653)
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call25, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter59 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter58, align 8
  %nocarry63 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter59, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %b49, i128* %nocarry63, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body27
  %add65 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add65, %signedfp12multiplynocarrycompress.k.read_arg_inner
  br i1 %slt, label %loop.body27, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit
  %add70 = add i128 %j.0, 1
  %slt72 = icmp slt i128 %add70, 2
  br i1 %slt72, label %loop.body26, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch68
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.exit73
  %add76 = add i128 %i.0, 1
  %slt79 = icmp slt i128 %add76, 6
  br i1 %slt79, label %loop.body, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch74
  %sub = sub i128 %signedfp12multiplynocarrycompress.k.read_arg_inner, 1
  %call84 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %signedfp12multiplynocarrycompress.n.read_arg_inner, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner, i128 %sub, [256 x i128]* %signedfp12multiplynocarrycompress.p.read_arg_inner, i128 %signedfp12multiplynocarrycompress.m_out.read_arg_inner)
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch124, %loop.exit80
  %i.1 = phi i128 [ 0, %loop.exit80 ], [ %add126, %loop.latch124 ]
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch118, %loop.body85
  %j.1 = phi i128 [ 0, %loop.body85 ], [ %add120, %loop.latch118 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch109, %loop.body86
  %idx.1 = phi i128 [ 0, %loop.body86 ], [ %add111, %loop.latch109 ]
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call25, i32 0, i32 5
  %signedfp12multiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter89, align 8
  %array_getter93 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %nocarry94 = load i128, i128* %array_getter93, align 4
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call84, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter96, align 8
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %reduce101 = load i128, i128* %array_getter100, align 4
  call void @fn_intrinsic_utils_constraint(i128 %reduce101, i128 %nocarry94, i1* @constraint.654)
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call84, i32 0, i32 5
  %fp12compress.in.read_input_outter104 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter103, align 8
  %reduce108 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter104, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %nocarry94, i128* %reduce108, align 4
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.body87
  %add111 = add i128 %idx.1, 1
  %mul114 = mul i128 2, %signedfp12multiplynocarrycompress.k.read_arg_inner
  %sub115 = sub i128 %mul114, 1
  %slt116 = icmp slt i128 %add111, %sub115
  br i1 %slt116, label %loop.body87, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch109
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.exit117
  %add120 = add i128 %j.1, 1
  %slt122 = icmp slt i128 %add120, 2
  br i1 %slt122, label %loop.body86, label %loop.exit123

loop.exit123:                                     ; preds = %loop.latch118
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.exit123
  %add126 = add i128 %i.1, 1
  %slt129 = icmp slt i128 %add126, 6
  br i1 %slt129, label %loop.body85, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch124
  br label %loop.body131

loop.body131:                                     ; preds = %loop.latch165, %loop.exit130
  %i.2 = phi i128 [ 0, %loop.exit130 ], [ %add167, %loop.latch165 ]
  br label %loop.body132

loop.body132:                                     ; preds = %loop.latch159, %loop.body131
  %j.2 = phi i128 [ 0, %loop.body131 ], [ %add161, %loop.latch159 ]
  br label %loop.body133

loop.body133:                                     ; preds = %loop.latch152, %loop.body132
  %idx.2 = phi i128 [ 0, %loop.body132 ], [ %add154, %loop.latch152 ]
  %struct_getter135 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call84, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter135, align 8
  %array_getter139 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %reduce140 = load i128, i128* %array_getter139, align 4
  %out141 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.declare_output, align 8
  %array_getter145 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out141, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %out146 = load i128, i128* %array_getter145, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out146, i128 %reduce140, i1* @constraint.655)
  %ptr_getter147 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.declare_output, align 8
  %out151 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter147, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  store i128 %reduce140, i128* %out151, align 4
  br label %loop.latch152

loop.latch152:                                    ; preds = %loop.body133
  %add154 = add i128 %idx.2, 1
  %slt157 = icmp slt i128 %add154, %signedfp12multiplynocarrycompress.k.read_arg_inner
  br i1 %slt157, label %loop.body133, label %loop.exit158

loop.exit158:                                     ; preds = %loop.latch152
  br label %loop.latch159

loop.latch159:                                    ; preds = %loop.exit158
  %add161 = add i128 %j.2, 1
  %slt163 = icmp slt i128 %add161, 2
  br i1 %slt163, label %loop.body132, label %loop.exit164

loop.exit164:                                     ; preds = %loop.latch159
  br label %loop.latch165

loop.latch165:                                    ; preds = %loop.exit164
  %add167 = add i128 %i.2, 1
  %slt170 = icmp slt i128 %add167, 6
  br i1 %slt170, label %loop.body131, label %loop.exit171

loop.exit171:                                     ; preds = %loop.latch165
  br label %arraydim

arraydim:                                         ; preds = %loop.exit171
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner)
  %ptr_cast172 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast172, i128 6, i128 2, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner)
  %ptr_cast173 = bitcast [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast173, i128 6, i128 2, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out174 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.declare_output, align 8
  %signedfp12multiplynocarrycompress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out174, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12multiplynocarrycompress* @fn_template_build_signedfp12multiplynocarrycompress(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_signedfp12multiplynocarrycompress = alloca %struct_template_circuit_signedfp12multiplynocarrycompress, align 8
  %signedfp12multiplynocarrycompress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 0
  store i128 %0, i128* %signedfp12multiplynocarrycompress.n.write_arg_inner, align 4
  %signedfp12multiplynocarrycompress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 1
  store i128 %1, i128* %signedfp12multiplynocarrycompress.k.write_arg_inner, align 4
  %signedfp12multiplynocarrycompress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %signedfp12multiplynocarrycompress.p.write_arg_inner, align 8
  %signedfp12multiplynocarrycompress.m_in.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 3
  store i128 %3, i128* %signedfp12multiplynocarrycompress.m_in.write_arg_inner, align 4
  %signedfp12multiplynocarrycompress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 4
  store i128 %4, i128* %signedfp12multiplynocarrycompress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress
}

define void @fn_template_init_fp2multiplythree(%struct_template_circuit_fp2multiplythree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 0
  %fp2multiplythree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 1
  %fp2multiplythree.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 2
  %fp2multiplythree.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 3
  %fp2multiplythree.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp2multiplythree.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2multiplythree.a.read_input_inner, [256 x [256 x i128]]** %fp2multiplythree.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 4
  %fp2multiplythree.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp2multiplythree.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2multiplythree.b.read_input_inner, [256 x [256 x i128]]** %fp2multiplythree.b.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 5
  %fp2multiplythree.c.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %fp2multiplythree.c.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp2multiplythree.c.read_input_inner, [256 x [256 x i128]]** %fp2multiplythree.c.declare_input, align 8
  %i6 = call i128 @fn_intrinsic_utils_init()
  %fp2multiplythree.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2multiplythree.out.declare_output, align 8
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %LOGK39 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 4, %fp2multiplythree.k.read_arg_inner
  %mul15 = mul i128 %mul, %fp2multiplythree.k.read_arg_inner
  %mul17 = mul i128 2, %fp2multiplythree.k.read_arg_inner
  %sub = sub i128 %mul17, 1
  %mul18 = mul i128 %mul15, %sub
  %call = call i128 @log_ceil(i128 %mul18)
  %mul19 = mul i128 4, %fp2multiplythree.n.read_arg_inner
  %add = add i128 %mul19, %call
  %slt = icmp slt i128 %add, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul25 = mul i128 4, %fp2multiplythree.n.read_arg_inner
  %add27 = add i128 %mul25, %call
  %call28 = call %struct_template_circuit_signedfp2multiplynocarrycompressthree* @fn_template_build_signedfp2multiplynocarrycompressthree(i128 %fp2multiplythree.n.read_arg_inner, i128 %fp2multiplythree.k.read_arg_inner, [256 x i128]* %fp2multiplythree.p.read_arg_inner, i128 %fp2multiplythree.n.read_arg_inner, i128 %add27)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch81, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add83, %loop.latch81 ]
  br label %loop.body29

loop.body29:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add77, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiplythree.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %i.0, i128 %idx.0
  %a32 = load i128, i128* %array_getter, align 4
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 5
  %signedfp2multiplynocarrycompressthree.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter34, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress38 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress38, i128 %a32, i1* @constraint.656)
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 5
  %signedfp2multiplynocarrycompressthree.a.read_input_outter40 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter39, align 8
  %compress43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.a.read_input_outter40, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a32, i128* %compress43, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiplythree.b.declare_input, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %i.0, i128 %idx.0
  %b47 = load i128, i128* %array_getter46, align 4
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 6
  %signedfp2multiplynocarrycompressthree.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter49, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress53, i128 %b47, i1* @constraint.657)
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 6
  %signedfp2multiplynocarrycompressthree.b.read_input_outter56 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter55, align 8
  %compress59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.b.read_input_outter56, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b47, i128* %compress59, align 4
  %c = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiplythree.c.declare_input, align 8
  %array_getter62 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %c, i128 0, i128 %i.0, i128 %idx.0
  %c63 = load i128, i128* %array_getter62, align 4
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 7
  %signedfp2multiplynocarrycompressthree.c.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter65, align 8
  %array_getter68 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.c.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress69 = load i128, i128* %array_getter68, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress69, i128 %c63, i1* @constraint.658)
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 7
  %signedfp2multiplynocarrycompressthree.c.read_input_outter72 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter71, align 8
  %compress75 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.c.read_input_outter72, i128 0, i128 %i.0, i128 %idx.0
  store i128 %c63, i128* %compress75, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body29
  %add77 = add i128 %idx.0, 1
  %slt80 = icmp slt i128 %add77, %fp2multiplythree.k.read_arg_inner
  br i1 %slt80, label %loop.body29, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.exit
  %add83 = add i128 %i.0, 1
  %slt85 = icmp slt i128 %add83, 2
  br i1 %slt85, label %loop.body, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch81
  %mul90 = mul i128 4, %fp2multiplythree.n.read_arg_inner
  %add92 = add i128 %mul90, %call
  %call94 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp2multiplythree.n.read_arg_inner, i128 %fp2multiplythree.k.read_arg_inner, i128 %add92, [256 x i128]* %fp2multiplythree.p.read_arg_inner)
  br label %loop.body95

loop.body95:                                      ; preds = %loop.latch122, %loop.exit86
  %i.1 = phi i128 [ 0, %loop.exit86 ], [ %add124, %loop.latch122 ]
  br label %loop.body96

loop.body96:                                      ; preds = %loop.latch115, %loop.body95
  %j.0 = phi i128 [ 0, %loop.body95 ], [ %add117, %loop.latch115 ]
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call28, i32 0, i32 8
  %signedfp2multiplynocarrycompressthree.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter98, align 8
  %array_getter101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.out.read_output_outter, i128 0, i128 %i.1, i128 %j.0
  %compress102 = load i128, i128* %array_getter101, align 4
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call94, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter104, align 8
  %array_getter107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %carry_mod108 = load i128, i128* %array_getter107, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_mod108, i128 %compress102, i1* @constraint.659)
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call94, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter111 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter110, align 8
  %carry_mod114 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter111, i128 0, i128 %i.1, i128 %j.0
  store i128 %compress102, i128* %carry_mod114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body96
  %add117 = add i128 %j.0, 1
  %slt120 = icmp slt i128 %add117, %fp2multiplythree.k.read_arg_inner
  br i1 %slt120, label %loop.body96, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.exit121
  %add124 = add i128 %i.1, 1
  %slt126 = icmp slt i128 %add124, 2
  br i1 %slt126, label %loop.body95, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch122
  br label %loop.body128

loop.body128:                                     ; preds = %loop.latch152, %loop.exit127
  %i.2 = phi i128 [ 0, %loop.exit127 ], [ %add154, %loop.latch152 ]
  br label %loop.body129

loop.body129:                                     ; preds = %loop.latch145, %loop.body128
  %j.1 = phi i128 [ 0, %loop.body128 ], [ %add147, %loop.latch145 ]
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call94, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter131, align 8
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1
  %carry_mod135 = load i128, i128* %array_getter134, align 4
  %out136 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiplythree.out.declare_output, align 8
  %array_getter139 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out136, i128 0, i128 %i.2, i128 %j.1
  %out140 = load i128, i128* %array_getter139, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out140, i128 %carry_mod135, i1* @constraint.660)
  %ptr_getter141 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiplythree.out.declare_output, align 8
  %out144 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter141, i128 0, i128 %i.2, i128 %j.1
  store i128 %carry_mod135, i128* %out144, align 4
  br label %loop.latch145

loop.latch145:                                    ; preds = %loop.body129
  %add147 = add i128 %j.1, 1
  %slt150 = icmp slt i128 %add147, %fp2multiplythree.k.read_arg_inner
  br i1 %slt150, label %loop.body129, label %loop.exit151

loop.exit151:                                     ; preds = %loop.latch145
  br label %loop.latch152

loop.latch152:                                    ; preds = %loop.exit151
  %add154 = add i128 %i.2, 1
  %slt156 = icmp slt i128 %add154, 2
  br i1 %slt156, label %loop.body128, label %loop.exit157

loop.exit157:                                     ; preds = %loop.latch152
  br label %arraydim

arraydim:                                         ; preds = %loop.exit157
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp2multiplythree.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp2multiplythree.k.read_arg_inner)
  %ptr_cast158 = bitcast [256 x [256 x i128]]** %fp2multiplythree.c.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast158, i128 2, i128 %fp2multiplythree.k.read_arg_inner)
  %ptr_cast159 = bitcast [256 x [256 x i128]]** %fp2multiplythree.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast159, i128 2, i128 %fp2multiplythree.k.read_arg_inner)
  %ptr_cast160 = bitcast [256 x [256 x i128]]** %fp2multiplythree.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast160, i128 2, i128 %fp2multiplythree.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out161 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp2multiplythree.out.declare_output, align 8
  %fp2multiplythree.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out161, [256 x [256 x i128]]** %fp2multiplythree.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2multiplythree* @fn_template_build_fp2multiplythree(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2multiplythree = alloca %struct_template_circuit_fp2multiplythree, align 8
  %fp2multiplythree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree, i32 0, i32 0
  store i128 %0, i128* %fp2multiplythree.n.write_arg_inner, align 4
  %fp2multiplythree.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree, i32 0, i32 1
  store i128 %1, i128* %fp2multiplythree.k.write_arg_inner, align 4
  %fp2multiplythree.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2multiplythree.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree
}

define void @fn_template_init_ellipticcurvescalarmultiplyunequal(%struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 0
  %ellipticcurvescalarmultiplyunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 1
  %ellipticcurvescalarmultiplyunequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 2
  %ellipticcurvescalarmultiplyunequal.b.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 3
  %ellipticcurvescalarmultiplyunequal.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 4
  %ellipticcurvescalarmultiplyunequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 5
  %ellipticcurvescalarmultiplyunequal.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %ellipticcurvescalarmultiplyunequal.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurvescalarmultiplyunequal.in.read_input_inner, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.in.declare_input, align 8
  %ellipticcurvescalarmultiplyunequal.r.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %R, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %Padd = alloca [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, align 8
  %Padd6 = alloca [256 x %struct_template_circuit_ellipticcurveaddunequal*], align 8
  store [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd6, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %i7 = call i128 @fn_intrinsic_utils_init()
  %Bits = alloca [256 x i128]*, align 8
  %Bits8 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits8, [256 x i128]** %Bits, align 8
  %curid9 = call i128 @fn_intrinsic_utils_init()
  %idx10 = call i128 @fn_intrinsic_utils_init()
  %BitLength11 = call i128 @fn_intrinsic_utils_init()
  %j12 = call i128 @fn_intrinsic_utils_init()
  %SigBits13 = call i128 @fn_intrinsic_utils_init()
  %add_exception = alloca [256 x %struct_template_circuit_fpisequal*]*, align 8
  %add_exception14 = alloca [256 x %struct_template_circuit_fpisequal*], align 8
  store [256 x %struct_template_circuit_fpisequal*]* %add_exception14, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %ellipticcurvescalarmultiplyunequal.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall15 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall15 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.declare_output, align 8
  %Pdouble = alloca [256 x %struct_template_circuit_ellipticcurvedouble*]*, align 8
  %Pdouble16 = alloca [256 x %struct_template_circuit_ellipticcurvedouble*], align 8
  store [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble16, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %LOGK17 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add30, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiplyunequal.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits22 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits22, align 4
  %Bits23 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits23, i128 0, i128 %i.0
  %Bits25 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits25, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add28 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add28, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add30 = add i128 %i.0, 1
  %slt = icmp slt i128 %add30, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch340, %loop.exit
  %i.1 = phi i128 [ %sub, %loop.exit ], [ %sub342, %loop.latch340 ]
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch340 ]
  %sub43 = sub i128 %BitLength.1, 1
  %eq44 = icmp eq i128 %i.1, %sub43
  br i1 %eq44, label %if.true39, label %if.false40

if.true39:                                        ; preds = %loop.body38
  br label %loop.body45

if.false40:                                       ; preds = %loop.body38
  %call76 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %ellipticcurvescalarmultiplyunequal.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner, i128 0, i128 %ellipticcurvescalarmultiplyunequal.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequal.p.read_arg_inner)
  %ptr_getter77 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %Pdouble79 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %ptr_getter77, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedouble* %call76, %struct_template_circuit_ellipticcurvedouble** %Pdouble79, align 8
  br label %loop.body80

loop.body45:                                      ; preds = %loop.latch69, %if.true39
  %j.0 = phi i128 [ 0, %if.true39 ], [ %add71, %loop.latch69 ]
  br label %loop.body46

loop.body46:                                      ; preds = %loop.latch62, %loop.body45
  %idx.0 = phi i128 [ 0, %loop.body45 ], [ %add64, %loop.latch62 ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.in.declare_input, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %j.0, i128 %idx.0
  %in50 = load i128, i128* %array_getter49, align 4
  %R51 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R51, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  %R56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R56, i128 %in50, i1* @constraint.661)
  %ptr_getter57 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %R61 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter57, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  store i128 %in50, i128* %R61, align 4
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.body46
  %add64 = add i128 %idx.0, 1
  %slt67 = icmp slt i128 %add64, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt67, label %loop.body46, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch62
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.exit68
  %add71 = add i128 %j.0, 1
  %slt73 = icmp slt i128 %add71, 2
  br i1 %slt73, label %loop.body45, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch69
  br label %if.exit339

loop.body80:                                      ; preds = %loop.latch114, %if.false40
  %j.1 = phi i128 [ 0, %if.false40 ], [ %add116, %loop.latch114 ]
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch107, %loop.body80
  %idx.1 = phi i128 [ 0, %loop.body80 ], [ %add109, %loop.latch107 ]
  %R82 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %add84 = add i128 %i.1, 1
  %array_getter87 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R82, i128 0, i128 %add84, i128 %j.1, i128 %idx.1
  %R88 = load i128, i128* %array_getter87, align 4
  %Pdouble89 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter91 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble89, i128 0, i128 %i.1
  %Pdouble92 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter91, align 8
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble92, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter93, align 8
  %array_getter96 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %j.1, i128 %idx.1
  %Pdouble97 = load i128, i128* %array_getter96, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble97, i128 %R88, i1* @constraint.662)
  %ptr_getter98 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter100 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %ptr_getter98, i128 0, i128 %i.1
  %Pdouble101 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter100, align 8
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble101, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter103 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter102, align 8
  %Pdouble106 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter103, i128 0, i128 %j.1, i128 %idx.1
  store i128 %R88, i128* %Pdouble106, align 4
  br label %loop.latch107

loop.latch107:                                    ; preds = %loop.body81
  %add109 = add i128 %idx.1, 1
  %slt112 = icmp slt i128 %add109, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt112, label %loop.body81, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch107
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.exit113
  %add116 = add i128 %j.1, 1
  %slt118 = icmp slt i128 %add116, 2
  br i1 %slt118, label %loop.body80, label %loop.exit119

loop.exit119:                                     ; preds = %loop.latch114
  %Bits122 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter124 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits122, i128 0, i128 %i.1
  %Bits125 = load i128, i128* %array_getter124, align 4
  %eq126 = icmp eq i128 %Bits125, 0
  br i1 %eq126, label %if.true120, label %if.false121

if.true120:                                       ; preds = %loop.exit119
  br label %loop.body127

if.false121:                                      ; preds = %loop.exit119
  %call165 = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurvescalarmultiplyunequal.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequal.p.read_arg_inner)
  %ptr_getter166 = load [256 x %struct_template_circuit_fpisequal*]*, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %add_exception168 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %ptr_getter166, i128 0, i128 %curid.0
  store %struct_template_circuit_fpisequal* %call165, %struct_template_circuit_fpisequal** %add_exception168, align 8
  br label %loop.body169

loop.body127:                                     ; preds = %loop.latch156, %if.true120
  %j.2 = phi i128 [ 0, %if.true120 ], [ %add158, %loop.latch156 ]
  br label %loop.body128

loop.body128:                                     ; preds = %loop.latch149, %loop.body127
  %idx.2 = phi i128 [ 0, %loop.body127 ], [ %add151, %loop.latch149 ]
  %Pdouble129 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter131 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble129, i128 0, i128 %i.1
  %Pdouble132 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter131, align 8
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble132, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter133, align 8
  %array_getter136 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %j.2, i128 %idx.2
  %Pdouble137 = load i128, i128* %array_getter136, align 4
  %R138 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %array_getter142 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R138, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  %R143 = load i128, i128* %array_getter142, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R143, i128 %Pdouble137, i1* @constraint.663)
  %ptr_getter144 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %R148 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter144, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  store i128 %Pdouble137, i128* %R148, align 4
  br label %loop.latch149

loop.latch149:                                    ; preds = %loop.body128
  %add151 = add i128 %idx.2, 1
  %slt154 = icmp slt i128 %add151, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt154, label %loop.body128, label %loop.exit155

loop.exit155:                                     ; preds = %loop.latch149
  br label %loop.latch156

loop.latch156:                                    ; preds = %loop.exit155
  %add158 = add i128 %j.2, 1
  %slt160 = icmp slt i128 %add158, 2
  br i1 %slt160, label %loop.body127, label %loop.exit161

loop.exit161:                                     ; preds = %loop.latch156
  br label %if.exit338

loop.body169:                                     ; preds = %loop.latch216, %if.false121
  %idx.3 = phi i128 [ 0, %if.false121 ], [ %add218, %loop.latch216 ]
  %Pdouble170 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter172 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble170, i128 0, i128 %i.1
  %Pdouble173 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter172, align 8
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble173, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter175 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter174, align 8
  %array_getter177 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter175, i128 0, i128 0, i128 %idx.3
  %Pdouble178 = load i128, i128* %array_getter177, align 4
  %add_exception179 = load [256 x %struct_template_circuit_fpisequal*]*, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %array_getter181 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception179, i128 0, i128 %curid.0
  %add_exception182 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter181, align 8
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception182, i32 0, i32 3
  %fpisequal.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter183, align 8
  %array_getter185 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter, i128 0, i128 0, i128 %idx.3
  %add_exception186 = load i128, i128* %array_getter185, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add_exception186, i128 %Pdouble178, i1* @constraint.664)
  %ptr_getter187 = load [256 x %struct_template_circuit_fpisequal*]*, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %array_getter189 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %ptr_getter187, i128 0, i128 %curid.0
  %add_exception190 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter189, align 8
  %struct_getter191 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception190, i32 0, i32 3
  %fpisequal.in.read_input_outter192 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter191, align 8
  %add_exception194 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter192, i128 0, i128 0, i128 %idx.3
  store i128 %Pdouble178, i128* %add_exception194, align 4
  %in195 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.in.declare_input, align 8
  %array_getter197 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in195, i128 0, i128 0, i128 %idx.3
  %in198 = load i128, i128* %array_getter197, align 4
  %add_exception199 = load [256 x %struct_template_circuit_fpisequal*]*, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %array_getter201 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception199, i128 0, i128 %curid.0
  %add_exception202 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter201, align 8
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception202, i32 0, i32 3
  %fpisequal.in.read_input_outter204 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter203, align 8
  %array_getter206 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter204, i128 0, i128 1, i128 %idx.3
  %add_exception207 = load i128, i128* %array_getter206, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add_exception207, i128 %in198, i1* @constraint.665)
  %ptr_getter208 = load [256 x %struct_template_circuit_fpisequal*]*, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %array_getter210 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %ptr_getter208, i128 0, i128 %curid.0
  %add_exception211 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter210, align 8
  %struct_getter212 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception211, i32 0, i32 3
  %fpisequal.in.read_input_outter213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter212, align 8
  %add_exception215 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter213, i128 0, i128 1, i128 %idx.3
  store i128 %in198, i128* %add_exception215, align 4
  br label %loop.latch216

loop.latch216:                                    ; preds = %loop.body169
  %add218 = add i128 %idx.3, 1
  %slt221 = icmp slt i128 %add218, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt221, label %loop.body169, label %loop.exit222

loop.exit222:                                     ; preds = %loop.latch216
  %add_exception223 = load [256 x %struct_template_circuit_fpisequal*]*, [256 x %struct_template_circuit_fpisequal*]** %add_exception, align 8
  %array_getter225 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception223, i128 0, i128 %curid.0
  %add_exception226 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter225, align 8
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception226, i32 0, i32 4
  %fpisequal.out.read_output_outter = load i128, i128* %struct_getter227, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fpisequal.out.read_output_outter, i128 0, i1* @constraint.666)
  %call231 = call %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %ellipticcurvescalarmultiplyunequal.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequal.p.read_arg_inner)
  %ptr_getter232 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %Padd234 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %ptr_getter232, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddunequal* %call231, %struct_template_circuit_ellipticcurveaddunequal** %Padd234, align 8
  br label %loop.body235

loop.body235:                                     ; preds = %loop.latch295, %loop.exit222
  %j.3 = phi i128 [ 0, %loop.exit222 ], [ %add297, %loop.latch295 ]
  br label %loop.body236

loop.body236:                                     ; preds = %loop.latch288, %loop.body235
  %idx.4 = phi i128 [ 0, %loop.body235 ], [ %add290, %loop.latch288 ]
  %Pdouble237 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter239 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble237, i128 0, i128 %i.1
  %Pdouble240 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter239, align 8
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble240, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter242 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter241, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter242, i128 0, i128 %j.3, i128 %idx.4
  %Pdouble246 = load i128, i128* %array_getter245, align 4
  %Padd247 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter249 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd247, i128 0, i128 %curid.0
  %Padd250 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter249, align 8
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd250, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter251, align 8
  %array_getter254 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter, i128 0, i128 %j.3, i128 %idx.4
  %Padd255 = load i128, i128* %array_getter254, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd255, i128 %Pdouble246, i1* @constraint.667)
  %ptr_getter256 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter258 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %ptr_getter256, i128 0, i128 %curid.0
  %Padd259 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter258, align 8
  %struct_getter260 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd259, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter261 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter260, align 8
  %Padd264 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter261, i128 0, i128 %j.3, i128 %idx.4
  store i128 %Pdouble246, i128* %Padd264, align 4
  %in265 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.in.declare_input, align 8
  %array_getter268 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in265, i128 0, i128 %j.3, i128 %idx.4
  %in269 = load i128, i128* %array_getter268, align 4
  %Padd270 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter272 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd270, i128 0, i128 %curid.0
  %Padd273 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter272, align 8
  %struct_getter274 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd273, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter274, align 8
  %array_getter277 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter, i128 0, i128 %j.3, i128 %idx.4
  %Padd278 = load i128, i128* %array_getter277, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd278, i128 %in269, i1* @constraint.668)
  %ptr_getter279 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter281 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %ptr_getter279, i128 0, i128 %curid.0
  %Padd282 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter281, align 8
  %struct_getter283 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd282, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter284 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter283, align 8
  %Padd287 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter284, i128 0, i128 %j.3, i128 %idx.4
  store i128 %in269, i128* %Padd287, align 4
  br label %loop.latch288

loop.latch288:                                    ; preds = %loop.body236
  %add290 = add i128 %idx.4, 1
  %slt293 = icmp slt i128 %add290, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt293, label %loop.body236, label %loop.exit294

loop.exit294:                                     ; preds = %loop.latch288
  br label %loop.latch295

loop.latch295:                                    ; preds = %loop.exit294
  %add297 = add i128 %j.3, 1
  %slt299 = icmp slt i128 %add297, 2
  br i1 %slt299, label %loop.body235, label %loop.exit300

loop.exit300:                                     ; preds = %loop.latch295
  br label %loop.body301

loop.body301:                                     ; preds = %loop.latch330, %loop.exit300
  %j.4 = phi i128 [ 0, %loop.exit300 ], [ %add332, %loop.latch330 ]
  br label %loop.body302

loop.body302:                                     ; preds = %loop.latch323, %loop.body301
  %idx.5 = phi i128 [ 0, %loop.body301 ], [ %add325, %loop.latch323 ]
  %Padd303 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter305 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd303, i128 0, i128 %curid.0
  %Padd306 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter305, align 8
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd306, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter307, align 8
  %array_getter310 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter, i128 0, i128 %j.4, i128 %idx.5
  %Padd311 = load i128, i128* %array_getter310, align 4
  %R312 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %array_getter316 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R312, i128 0, i128 %i.1, i128 %j.4, i128 %idx.5
  %R317 = load i128, i128* %array_getter316, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R317, i128 %Padd311, i1* @constraint.669)
  %ptr_getter318 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %R322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter318, i128 0, i128 %i.1, i128 %j.4, i128 %idx.5
  store i128 %Padd311, i128* %R322, align 4
  br label %loop.latch323

loop.latch323:                                    ; preds = %loop.body302
  %add325 = add i128 %idx.5, 1
  %slt328 = icmp slt i128 %add325, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt328, label %loop.body302, label %loop.exit329

loop.exit329:                                     ; preds = %loop.latch323
  br label %loop.latch330

loop.latch330:                                    ; preds = %loop.exit329
  %add332 = add i128 %j.4, 1
  %slt334 = icmp slt i128 %add332, 2
  br i1 %slt334, label %loop.body301, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch330
  %add337 = add i128 %curid.0, 1
  br label %if.exit338

if.exit338:                                       ; preds = %loop.exit335, %loop.exit161
  %curid.1 = phi i128 [ %curid.0, %loop.exit161 ], [ %add337, %loop.exit335 ]
  br label %if.exit339

if.exit339:                                       ; preds = %if.exit338, %loop.exit74
  %curid.2 = phi i128 [ %curid.0, %loop.exit74 ], [ %curid.1, %if.exit338 ]
  br label %loop.latch340

loop.latch340:                                    ; preds = %if.exit339
  %sub342 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub342, 0
  br i1 %sge, label %loop.body38, label %loop.exit344

loop.exit344:                                     ; preds = %loop.latch340
  br label %loop.body345

loop.body345:                                     ; preds = %loop.latch368, %loop.exit344
  %i.2 = phi i128 [ 0, %loop.exit344 ], [ %add370, %loop.latch368 ]
  br label %loop.body346

loop.body346:                                     ; preds = %loop.latch361, %loop.body345
  %idx.6 = phi i128 [ 0, %loop.body345 ], [ %add363, %loop.latch361 ]
  %R347 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %array_getter350 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R347, i128 0, i128 0, i128 %i.2, i128 %idx.6
  %R351 = load i128, i128* %array_getter350, align 4
  %out352 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.declare_output, align 8
  %array_getter355 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out352, i128 0, i128 %i.2, i128 %idx.6
  %out356 = load i128, i128* %array_getter355, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out356, i128 %R351, i1* @constraint.670)
  %ptr_getter357 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.declare_output, align 8
  %out360 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter357, i128 0, i128 %i.2, i128 %idx.6
  store i128 %R351, i128* %out360, align 4
  br label %loop.latch361

loop.latch361:                                    ; preds = %loop.body346
  %add363 = add i128 %idx.6, 1
  %slt366 = icmp slt i128 %add363, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt366, label %loop.body346, label %loop.exit367

loop.exit367:                                     ; preds = %loop.latch361
  br label %loop.latch368

loop.latch368:                                    ; preds = %loop.exit367
  %add370 = add i128 %i.2, 1
  %slt372 = icmp slt i128 %add370, 2
  br i1 %slt372, label %loop.body345, label %loop.exit373

loop.exit373:                                     ; preds = %loop.latch368
  br label %arraydim

arraydim:                                         ; preds = %loop.exit373
  %ptr_cast = bitcast [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner)
  %ptr_cast374 = bitcast [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast374, i128 %BitLength.1)
  %ptr_cast375 = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast375, i128 250)
  %ptr_cast376 = bitcast [256 x %struct_template_circuit_fpisequal*]** %add_exception to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast376, i128 %SigBits.1)
  %ptr_cast377 = bitcast [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast377, i128 %SigBits.1)
  %ptr_cast378 = bitcast [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast378, i128 2, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner)
  %ptr_cast379 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast379, i128 %BitLength.1, i128 2, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %R380 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.declare_inter, align 8
  %ellipticcurvescalarmultiplyunequal.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %R380, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.write_inter_inner, align 8
  %out381 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.declare_output, align 8
  %ellipticcurvescalarmultiplyunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %out381, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiplyunequal* @fn_template_build_ellipticcurvescalarmultiplyunequal(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiplyunequal = alloca %struct_template_circuit_ellipticcurvescalarmultiplyunequal, align 8
  %ellipticcurvescalarmultiplyunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiplyunequal.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiplyunequal.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 2
  store i128 %2, i128* %ellipticcurvescalarmultiplyunequal.b.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiplyunequal.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiplyunequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal
}

define [256 x [256 x [256 x i128]]]* @find_Fp6_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %5) {
entry:
  %i19 = call i128 @fn_intrinsic_utils_init()
  %j27 = call i128 @fn_intrinsic_utils_init()
  %m30 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %call = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %3, [256 x i128]* %2)
  %call38 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %4, [256 x i128]* %2)
  %call43 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %5, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %call49 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %4, [256 x i128]* %2)
  %call55 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %call61 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %call67 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call49, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %uniform_array68 = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch81, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add83, %loop.latch81 ]
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %eq = icmp eq i128 %j.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body69
  %v373 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array68, i128 0, i128 %i.0, i128 %j.0
  store i128 1, i128* %v373, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body69
  %v377 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array68, i128 0, i128 %i.0, i128 %j.0
  store i128 0, i128* %v377, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body69, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.exit
  %add83 = add i128 %i.0, 1
  %slt85 = icmp slt i128 %add83, 2
  br i1 %slt85, label %loop.body, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch81
  %uniform_array87 = alloca [256 x [256 x i128]], align 8
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch110, %loop.exit86
  %i.1 = phi i128 [ 0, %loop.exit86 ], [ %add112, %loop.latch110 ]
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch103, %loop.body88
  %j.1 = phi i128 [ 0, %loop.body88 ], [ %add105, %loop.latch103 ]
  %eq93 = icmp eq i128 %j.1, 0
  br i1 %eq93, label %if.true90, label %if.false91

if.true90:                                        ; preds = %loop.body89
  %three_v397 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array87, i128 0, i128 %i.1, i128 %j.1
  store i128 3, i128* %three_v397, align 4
  br label %if.exit102

if.false91:                                       ; preds = %loop.body89
  %three_v3101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array87, i128 0, i128 %i.1, i128 %j.1
  store i128 0, i128* %three_v3101, align 4
  br label %if.exit102

if.exit102:                                       ; preds = %if.false91, %if.true90
  br label %loop.latch103

loop.latch103:                                    ; preds = %if.exit102
  %add105 = add i128 %j.1, 1
  %slt108 = icmp slt i128 %add105, %1
  br i1 %slt108, label %loop.body89, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch103
  br label %loop.latch110

loop.latch110:                                    ; preds = %loop.exit109
  %add112 = add i128 %i.1, 1
  %slt114 = icmp slt i128 %add112, 2
  br i1 %slt114, label %loop.body88, label %loop.exit115

loop.exit115:                                     ; preds = %loop.latch110
  %uniform_array116 = alloca [256 x [256 x i128]], align 8
  br label %loop.body117

loop.body117:                                     ; preds = %loop.latch141, %loop.exit115
  %i.2 = phi i128 [ 0, %loop.exit115 ], [ %add143, %loop.latch141 ]
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch134, %loop.body117
  %j.2 = phi i128 [ 0, %loop.body117 ], [ %add136, %loop.latch134 ]
  %eq122 = icmp eq i128 %i.2, 1
  %eq124 = icmp eq i128 %j.2, 0
  %and = and i1 %eq122, %eq124
  br i1 %and, label %if.true119, label %if.false120

if.true119:                                       ; preds = %loop.body118
  %v6128 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array116, i128 0, i128 %i.2, i128 %j.2
  store i128 2, i128* %v6128, align 4
  br label %if.exit133

if.false120:                                      ; preds = %loop.body118
  %v6132 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array116, i128 0, i128 %i.2, i128 %j.2
  store i128 0, i128* %v6132, align 4
  br label %if.exit133

if.exit133:                                       ; preds = %if.false120, %if.true119
  br label %loop.latch134

loop.latch134:                                    ; preds = %if.exit133
  %add136 = add i128 %j.2, 1
  %slt139 = icmp slt i128 %add136, %1
  br i1 %slt139, label %loop.body118, label %loop.exit140

loop.exit140:                                     ; preds = %loop.latch134
  br label %loop.latch141

loop.latch141:                                    ; preds = %loop.exit140
  %add143 = add i128 %i.2, 1
  %slt145 = icmp slt i128 %add143, 2
  br i1 %slt145, label %loop.body117, label %loop.exit146

loop.exit146:                                     ; preds = %loop.latch141
  %call152 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call61, [256 x [256 x i128]]* %uniform_array68, [256 x i128]* %2)
  %call158 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call, [256 x [256 x i128]]* %call152, [256 x i128]* %2)
  %call164 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call43, [256 x [256 x i128]]* %uniform_array68, [256 x i128]* %2)
  %call170 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call164, [256 x [256 x i128]]* %call49, [256 x i128]* %2)
  %call176 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call38, [256 x [256 x i128]]* %call55, [256 x i128]* %2)
  %call182 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %call, [256 x i128]* %2)
  %call188 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %call38, [256 x i128]* %2)
  %call194 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %5, [256 x [256 x i128]]* %call43, [256 x i128]* %2)
  %call200 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call188, [256 x [256 x i128]]* %uniform_array68, [256 x i128]* %2)
  %call206 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call194, [256 x [256 x i128]]* %uniform_array116, [256 x i128]* %2)
  %call212 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call67, [256 x [256 x i128]]* %uniform_array87, [256 x i128]* %2)
  %call218 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %call182, [256 x [256 x i128]]* %call200, [256 x i128]* %2)
  %call224 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call206, [256 x [256 x i128]]* %call212, [256 x i128]* %2)
  %call230 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %call218, [256 x [256 x i128]]* %call224, [256 x i128]* %2)
  %call235 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %0, i128 %1, [256 x [256 x i128]]* %call230, [256 x i128]* %2)
  %call241 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call158, [256 x [256 x i128]]* %call235, [256 x i128]* %2)
  %call247 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call170, [256 x [256 x i128]]* %call235, [256 x i128]* %2)
  %call253 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call176, [256 x [256 x i128]]* %call235, [256 x i128]* %2)
  br label %loop.body254

loop.body254:                                     ; preds = %loop.latch283, %loop.exit146
  %i.3 = phi i128 [ 1, %loop.exit146 ], [ %add285, %loop.latch283 ]
  br label %loop.body255

loop.body255:                                     ; preds = %loop.latch277, %loop.body254
  %j.3 = phi i128 [ 0, %loop.body254 ], [ %add279, %loop.latch277 ]
  br label %loop.body256

loop.body256:                                     ; preds = %loop.latch271, %loop.body255
  %m.0 = phi i128 [ 0, %loop.body255 ], [ %add273, %loop.latch271 ]
  %sgt = icmp sgt i128 %i.3, 1
  br i1 %sgt, label %if.true257, label %if.false258

if.true257:                                       ; preds = %loop.body256
  %out264 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.3, i128 %j.3, i128 %m.0
  store i128 0, i128* %out264, align 4
  br label %if.exit270

if.false258:                                      ; preds = %loop.body256
  %out269 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.3, i128 %j.3, i128 %m.0
  store i128 0, i128* %out269, align 4
  br label %if.exit270

if.exit270:                                       ; preds = %if.false258, %if.true257
  br label %loop.latch271

loop.latch271:                                    ; preds = %if.exit270
  %add273 = add i128 %m.0, 1
  %slt275 = icmp slt i128 %add273, 50
  br i1 %slt275, label %loop.body256, label %loop.exit276

loop.exit276:                                     ; preds = %loop.latch271
  br label %loop.latch277

loop.latch277:                                    ; preds = %loop.exit276
  %add279 = add i128 %j.3, 1
  %slt281 = icmp slt i128 %add279, 2
  br i1 %slt281, label %loop.body255, label %loop.exit282

loop.exit282:                                     ; preds = %loop.latch277
  br label %loop.latch283

loop.latch283:                                    ; preds = %loop.exit282
  %add285 = add i128 %i.3, 2
  %slt287 = icmp slt i128 %add285, 6
  br i1 %slt287, label %loop.body254, label %loop.exit288

loop.exit288:                                     ; preds = %loop.latch283
  %out291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0
  %6 = bitcast [256 x [256 x i128]]* %out291 to i8*
  %7 = bitcast [256 x [256 x i128]]* %call241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  %out294 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2
  %8 = bitcast [256 x [256 x i128]]* %out294 to i8*
  %9 = bitcast [256 x [256 x i128]]* %call247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  %out297 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 4
  %10 = bitcast [256 x [256 x i128]]* %out297 to i8*
  %11 = bitcast [256 x [256 x i128]]* %call253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_fp6invert(%struct_template_circuit_fp6invert* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 0
  %fp6invert.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 1
  %fp6invert.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 2
  %fp6invert.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 3
  %fp6invert.a0.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %fp6invert.a0.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp6invert.a0.read_input_inner, [256 x [256 x i128]]** %fp6invert.a0.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 4
  %fp6invert.a1.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %fp6invert.a1.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp6invert.a1.read_input_inner, [256 x [256 x i128]]** %fp6invert.a1.declare_input, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 5
  %fp6invert.a2.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %fp6invert.a2.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %fp6invert.a2.read_input_inner, [256 x [256 x i128]]** %fp6invert.a2.declare_input, align 8
  %out = alloca [256 x [256 x [256 x i128]]]*, align 8
  %out6 = alloca [256 x [256 x [256 x i128]]], align 8
  store [256 x [256 x [256 x i128]]]* %out6, [256 x [256 x [256 x i128]]]** %out, align 8
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %fp6invert.real_out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %real_out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %real_out, [256 x [256 x [256 x i128]]]** %fp6invert.real_out.declare_output, align 8
  %i8 = call i128 @fn_intrinsic_utils_init()
  %j9 = call i128 @fn_intrinsic_utils_init()
  %a0 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp6invert.a0.declare_input, align 8
  %a1 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp6invert.a1.declare_input, align 8
  %a2 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp6invert.a2.declare_input, align 8
  %call = call [256 x [256 x [256 x i128]]]* @find_Fp6_inverse(i128 %fp6invert.n.read_arg_inner, i128 %fp6invert.k.read_arg_inner, [256 x i128]* %fp6invert.p.read_arg_inner, [256 x [256 x i128]]* %a0, [256 x [256 x i128]]* %a1, [256 x [256 x i128]]* %a2)
  store [256 x [256 x [256 x i128]]]* %call, [256 x [256 x [256 x i128]]]** %out, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch34, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add36, %loop.latch34 ]
  br label %loop.body14

loop.body14:                                      ; preds = %loop.latch28, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add30, %loop.latch28 ]
  br label %loop.body15

loop.body15:                                      ; preds = %loop.latch, %loop.body14
  %idx.0 = phi i128 [ 0, %loop.body14 ], [ %add, %loop.latch ]
  %out16 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %out, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out16, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %out20 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp6invert.real_out.declare_output, align 8
  %real_out24 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %out20, i128* %real_out24, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body15
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fp6invert.k.read_arg_inner
  br i1 %slt, label %loop.body15, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch28

loop.latch28:                                     ; preds = %loop.exit
  %add30 = add i128 %j.0, 1
  %slt32 = icmp slt i128 %add30, 2
  br i1 %slt32, label %loop.body14, label %loop.exit33

loop.exit33:                                      ; preds = %loop.latch28
  br label %loop.latch34

loop.latch34:                                     ; preds = %loop.exit33
  %add36 = add i128 %i.0, 1
  %slt38 = icmp slt i128 %add36, 6
  br i1 %slt38, label %loop.body, label %loop.exit39

loop.exit39:                                      ; preds = %loop.latch34
  br label %arraydim

arraydim:                                         ; preds = %loop.exit39
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp6invert.a2.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp6invert.k.read_arg_inner)
  %ptr_cast40 = bitcast [256 x [256 x i128]]** %fp6invert.a0.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast40, i128 2, i128 %fp6invert.k.read_arg_inner)
  %ptr_cast41 = bitcast [256 x [256 x i128]]** %fp6invert.a1.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast41, i128 2, i128 %fp6invert.k.read_arg_inner)
  %ptr_cast42 = bitcast [256 x [256 x [256 x i128]]]** %fp6invert.real_out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast42, i128 6, i128 2, i128 %fp6invert.k.read_arg_inner)
  %ptr_cast43 = bitcast [256 x [256 x [256 x i128]]]** %out to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast43, i128 6, i128 2, i128 50)
  br label %exit

exit:                                             ; preds = %arraydim
  %real_out44 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp6invert.real_out.declare_output, align 8
  %fp6invert.real_out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %real_out44, [256 x [256 x [256 x i128]]]** %fp6invert.real_out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp6invert* @fn_template_build_fp6invert(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp6invert = alloca %struct_template_circuit_fp6invert, align 8
  %fp6invert.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert, i32 0, i32 0
  store i128 %0, i128* %fp6invert.n.write_arg_inner, align 4
  %fp6invert.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert, i32 0, i32 1
  store i128 %1, i128* %fp6invert.k.write_arg_inner, align 4
  %fp6invert.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp6invert.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert
}

define void @fn_template_init_ellipticcurveadd(%struct_template_circuit_ellipticcurveadd* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 0
  %ellipticcurveadd.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 1
  %ellipticcurveadd.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 2
  %ellipticcurveadd.a1.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 3
  %ellipticcurveadd.b1.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 4
  %ellipticcurveadd.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 5
  %ellipticcurveadd.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %ellipticcurveadd.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 6
  %ellipticcurveadd.aisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 7
  %ellipticcurveadd.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter7, align 8
  %ellipticcurveadd.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 8
  %ellipticcurveadd.bisinfinity.read_input_inner = load i128, i128* %struct_getter8, align 4
  %ellipticcurveadd.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurveadd.out.declare_output, align 8
  %add_is_double = call i128 @fn_intrinsic_utils_init()
  %ab0 = call i128 @fn_intrinsic_utils_init()
  %idx9 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurveadd.tmp.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall10 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %tmp, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %isInfinity = call i128 @fn_intrinsic_utils_init()
  %i11 = call i128 @fn_intrinsic_utils_init()
  %anegb = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  %call18 = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add75, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 0, i128 %idx.0
  %a20 = load i128, i128* %array_getter, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter, i128 0, i128 0, i128 %idx.0
  %x_equal25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_equal25, i128 %a20, i1* @constraint.671)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter27 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter26, align 8
  %x_equal29 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter27, i128 0, i128 0, i128 %idx.0
  store i128 %a20, i128* %x_equal29, align 4
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 0, i128 %idx.0
  %b32 = load i128, i128* %array_getter31, align 4
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter35 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter34, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter35, i128 0, i128 1, i128 %idx.0
  %x_equal38 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_equal38, i128 %b32, i1* @constraint.672)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter41 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter40, align 8
  %x_equal43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter41, i128 0, i128 1, i128 %idx.0
  store i128 %b32, i128* %x_equal43, align 4
  %a44 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a44, i128 0, i128 1, i128 %idx.0
  %a47 = load i128, i128* %array_getter46, align 4
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call18, i32 0, i32 3
  %fpisequal.in.read_input_outter50 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter49, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter50, i128 0, i128 0, i128 %idx.0
  %y_equal53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_equal53, i128 %a47, i1* @constraint.673)
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call18, i32 0, i32 3
  %fpisequal.in.read_input_outter56 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter55, align 8
  %y_equal58 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter56, i128 0, i128 0, i128 %idx.0
  store i128 %a47, i128* %y_equal58, align 4
  %b59 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b59, i128 0, i128 1, i128 %idx.0
  %b62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call18, i32 0, i32 3
  %fpisequal.in.read_input_outter65 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter64, align 8
  %array_getter67 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter65, i128 0, i128 1, i128 %idx.0
  %y_equal68 = load i128, i128* %array_getter67, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_equal68, i128 %b62, i1* @constraint.674)
  %struct_getter70 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call18, i32 0, i32 3
  %fpisequal.in.read_input_outter71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter70, align 8
  %y_equal73 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter71, i128 0, i128 1, i128 %idx.0
  store i128 %b62, i128* %y_equal73, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add75 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add75, %ellipticcurveadd.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter = load i128, i128* %struct_getter79, align 4
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call18, i32 0, i32 4
  %fpisequal.out.read_output_outter82 = load i128, i128* %struct_getter81, align 4
  %mul = mul i128 %fpisequal.out.read_output_outter, %fpisequal.out.read_output_outter82
  call void @fn_intrinsic_utils_constraint(i128 %add_is_double, i128 %mul, i1* @constraint.675)
  %ellipticcurveadd.add_is_double.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 9
  store i128 %mul, i128* %ellipticcurveadd.add_is_double.write_inter_inner, align 4
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 9
  %ellipticcurveadd.add_is_double.read_inter_inner = load i128, i128* %struct_getter86, align 4
  %call87 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %b88 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter89 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b88, i128 0, i128 0, i128 0
  %b90 = load i128, i128* %array_getter89, align 4
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call87, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter92, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %b90, i1* @constraint.676)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call87, i32 0, i32 0
  store i128 %b90, i128* %iszero.in.write_input_outter, align 4
  %call97 = call %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  %call101 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, i128 %ellipticcurveadd.a1.read_arg_inner, i128 %ellipticcurveadd.b1.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  br label %loop.body102

loop.body102:                                     ; preds = %loop.latch195, %loop.exit
  %i.0 = phi i128 [ 0, %loop.exit ], [ %add197, %loop.latch195 ]
  br label %loop.body103

loop.body103:                                     ; preds = %loop.latch188, %loop.body102
  %idx.1 = phi i128 [ 0, %loop.body102 ], [ %add190, %loop.latch188 ]
  %a104 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %array_getter107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a104, i128 0, i128 %i.0, i128 %idx.1
  %a108 = load i128, i128* %array_getter107, align 4
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter110, align 8
  %array_getter113 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.1
  %add114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add114, i128 %a108, i1* @constraint.677)
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter117 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter116, align 8
  %add120 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter117, i128 0, i128 %i.0, i128 %idx.1
  store i128 %a108, i128* %add120, align 4
  %eq = icmp eq i128 %i.0, 0
  %eq123 = icmp eq i128 %idx.1, 0
  %and = and i1 %eq, %eq123
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body103
  %b124 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b124, i128 0, i128 %i.0, i128 %idx.1
  %b128 = load i128, i128* %array_getter127, align 4
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter131 = load i128, i128* %struct_getter130, align 4
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call87, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter133, align 4
  %b134 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter137 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b134, i128 0, i128 %i.0, i128 %idx.1
  %b138 = load i128, i128* %array_getter137, align 4
  %sub = sub i128 %iszero.out.read_output_outter, %b138
  %mul139 = mul i128 %fpisequal.out.read_output_outter131, %sub
  %add140 = add i128 %b128, %mul139
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter142, align 8
  %array_getter145 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.1
  %add146 = load i128, i128* %array_getter145, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add146, i128 %add140, i1* @constraint.678)
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter149 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter148, align 8
  %add152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter149, i128 0, i128 %i.0, i128 %idx.1
  store i128 %add140, i128* %add152, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body103
  %b153 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b153, i128 0, i128 %i.0, i128 %idx.1
  %b157 = load i128, i128* %array_getter156, align 4
  %struct_getter159 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter160 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter159, align 8
  %array_getter163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter160, i128 0, i128 %i.0, i128 %idx.1
  %add164 = load i128, i128* %array_getter163, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add164, i128 %b157, i1* @constraint.679)
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter167 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter166, align 8
  %add170 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter167, i128 0, i128 %i.0, i128 %idx.1
  store i128 %b157, i128* %add170, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %a171 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %array_getter174 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a171, i128 0, i128 %i.0, i128 %idx.1
  %a175 = load i128, i128* %array_getter174, align 4
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %call101, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter177, align 8
  %array_getter180 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %i.0, i128 %idx.1
  %doub181 = load i128, i128* %array_getter180, align 4
  call void @fn_intrinsic_utils_constraint(i128 %doub181, i128 %a175, i1* @constraint.680)
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %call101, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter184 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter183, align 8
  %doub187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter184, i128 0, i128 %i.0, i128 %idx.1
  store i128 %a175, i128* %doub187, align 4
  br label %loop.latch188

loop.latch188:                                    ; preds = %if.exit
  %add190 = add i128 %idx.1, 1
  %slt193 = icmp slt i128 %add190, %ellipticcurveadd.k.read_arg_inner
  br i1 %slt193, label %loop.body103, label %loop.exit194

loop.exit194:                                     ; preds = %loop.latch188
  br label %loop.latch195

loop.latch195:                                    ; preds = %loop.exit194
  %add197 = add i128 %i.0, 1
  %slt199 = icmp slt i128 %add197, 2
  br i1 %slt199, label %loop.body102, label %loop.exit200

loop.exit200:                                     ; preds = %loop.latch195
  %mul201 = mul i128 %ellipticcurveadd.aisinfinity.read_input_inner, %ellipticcurveadd.bisinfinity.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %ab0, i128 %mul201, i1* @constraint.681)
  %ellipticcurveadd.ab0.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 10
  store i128 %mul201, i128* %ellipticcurveadd.ab0.write_inter_inner, align 4
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 10
  %ellipticcurveadd.ab0.read_inter_inner = load i128, i128* %struct_getter205, align 4
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter208 = load i128, i128* %struct_getter207, align 4
  %struct_getter210 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter211 = load i128, i128* %struct_getter210, align 4
  %struct_getter213 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call18, i32 0, i32 4
  %fpisequal.out.read_output_outter214 = load i128, i128* %struct_getter213, align 4
  %mul215 = mul i128 %fpisequal.out.read_output_outter211, %fpisequal.out.read_output_outter214
  %sub216 = sub i128 %fpisequal.out.read_output_outter208, %mul215
  call void @fn_intrinsic_utils_constraint(i128 %anegb, i128 %sub216, i1* @constraint.682)
  %ellipticcurveadd.anegb.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 11
  store i128 %sub216, i128* %ellipticcurveadd.anegb.write_inter_inner, align 4
  %struct_getter220 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 11
  %ellipticcurveadd.anegb.read_inter_inner = load i128, i128* %struct_getter220, align 4
  %add223 = add i128 %ellipticcurveadd.ab0.read_inter_inner, %ellipticcurveadd.anegb.read_inter_inner
  %mul226 = mul i128 %ellipticcurveadd.ab0.read_inter_inner, %ellipticcurveadd.anegb.read_inter_inner
  %sub227 = sub i128 %add223, %mul226
  call void @fn_intrinsic_utils_constraint(i128 %isInfinity, i128 %sub227, i1* @constraint.683)
  %ellipticcurveadd.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 14
  store i128 %sub227, i128* %ellipticcurveadd.isinfinity.write_output_inner, align 4
  %struct_getter231 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 14
  %ellipticcurveadd.isinfinity.read_output_inner = load i128, i128* %struct_getter231, align 4
  br label %loop.body233

loop.body233:                                     ; preds = %loop.latch358, %loop.exit200
  %i.1 = phi i128 [ 0, %loop.exit200 ], [ %add360, %loop.latch358 ]
  br label %loop.body234

loop.body234:                                     ; preds = %loop.latch351, %loop.body233
  %idx.2 = phi i128 [ 0, %loop.body233 ], [ %add353, %loop.latch351 ]
  %struct_getter236 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter236, align 8
  %array_getter239 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.2
  %add240 = load i128, i128* %array_getter239, align 4
  %struct_getter243 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %call101, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter243, align 8
  %array_getter246 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.2
  %doub247 = load i128, i128* %array_getter246, align 4
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call97, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter250 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter249, align 8
  %array_getter253 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter250, i128 0, i128 %i.1, i128 %idx.2
  %add254 = load i128, i128* %array_getter253, align 4
  %sub255 = sub i128 %doub247, %add254
  %mul256 = mul i128 %ellipticcurveadd.add_is_double.read_inter_inner, %sub255
  %add257 = add i128 %add240, %mul256
  %tmp258 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter261 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp258, i128 0, i128 0, i128 %i.1, i128 %idx.2
  %tmp262 = load i128, i128* %array_getter261, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp262, i128 %add257, i1* @constraint.684)
  %ptr_getter263 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %tmp266 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter263, i128 0, i128 0, i128 %i.1, i128 %idx.2
  store i128 %add257, i128* %tmp266, align 4
  %tmp267 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter270 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp267, i128 0, i128 0, i128 %i.1, i128 %idx.2
  %tmp271 = load i128, i128* %array_getter270, align 4
  %b273 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input, align 8
  %array_getter276 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b273, i128 0, i128 %i.1, i128 %idx.2
  %b277 = load i128, i128* %array_getter276, align 4
  %tmp278 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter281 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp278, i128 0, i128 0, i128 %i.1, i128 %idx.2
  %tmp282 = load i128, i128* %array_getter281, align 4
  %sub283 = sub i128 %b277, %tmp282
  %mul284 = mul i128 %ellipticcurveadd.aisinfinity.read_input_inner, %sub283
  %add285 = add i128 %tmp271, %mul284
  %tmp286 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter289 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp286, i128 0, i128 1, i128 %i.1, i128 %idx.2
  %tmp290 = load i128, i128* %array_getter289, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp290, i128 %add285, i1* @constraint.685)
  %ptr_getter291 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %tmp294 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter291, i128 0, i128 1, i128 %i.1, i128 %idx.2
  store i128 %add285, i128* %tmp294, align 4
  %tmp295 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter298 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp295, i128 0, i128 1, i128 %i.1, i128 %idx.2
  %tmp299 = load i128, i128* %array_getter298, align 4
  %a301 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %array_getter304 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a301, i128 0, i128 %i.1, i128 %idx.2
  %a305 = load i128, i128* %array_getter304, align 4
  %tmp306 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter309 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp306, i128 0, i128 1, i128 %i.1, i128 %idx.2
  %tmp310 = load i128, i128* %array_getter309, align 4
  %sub311 = sub i128 %a305, %tmp310
  %mul312 = mul i128 %ellipticcurveadd.bisinfinity.read_input_inner, %sub311
  %add313 = add i128 %tmp299, %mul312
  %tmp314 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter317 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp314, i128 0, i128 2, i128 %i.1, i128 %idx.2
  %tmp318 = load i128, i128* %array_getter317, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp318, i128 %add313, i1* @constraint.686)
  %ptr_getter319 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %tmp322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter319, i128 0, i128 2, i128 %i.1, i128 %idx.2
  store i128 %add313, i128* %tmp322, align 4
  %tmp323 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter326 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp323, i128 0, i128 2, i128 %i.1, i128 %idx.2
  %tmp327 = load i128, i128* %array_getter326, align 4
  %a329 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input, align 8
  %array_getter332 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a329, i128 0, i128 %i.1, i128 %idx.2
  %a333 = load i128, i128* %array_getter332, align 4
  %tmp334 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %array_getter337 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp334, i128 0, i128 2, i128 %i.1, i128 %idx.2
  %tmp338 = load i128, i128* %array_getter337, align 4
  %sub339 = sub i128 %a333, %tmp338
  %mul340 = mul i128 %ellipticcurveadd.isinfinity.read_output_inner, %sub339
  %add341 = add i128 %tmp327, %mul340
  %out342 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.out.declare_output, align 8
  %array_getter345 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out342, i128 0, i128 %i.1, i128 %idx.2
  %out346 = load i128, i128* %array_getter345, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out346, i128 %add341, i1* @constraint.687)
  %ptr_getter347 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.out.declare_output, align 8
  %out350 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter347, i128 0, i128 %i.1, i128 %idx.2
  store i128 %add341, i128* %out350, align 4
  br label %loop.latch351

loop.latch351:                                    ; preds = %loop.body234
  %add353 = add i128 %idx.2, 1
  %slt356 = icmp slt i128 %add353, %ellipticcurveadd.k.read_arg_inner
  br i1 %slt356, label %loop.body234, label %loop.exit357

loop.exit357:                                     ; preds = %loop.latch351
  br label %loop.latch358

loop.latch358:                                    ; preds = %loop.exit357
  %add360 = add i128 %i.1, 1
  %slt362 = icmp slt i128 %add360, 2
  br i1 %slt362, label %loop.body233, label %loop.exit363

loop.exit363:                                     ; preds = %loop.latch358
  br label %arraydim

arraydim:                                         ; preds = %loop.exit363
  %ptr_cast = bitcast [256 x [256 x i128]]** %ellipticcurveadd.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %ellipticcurveadd.k.read_arg_inner)
  %ptr_cast364 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast364, i128 3, i128 2, i128 %ellipticcurveadd.k.read_arg_inner)
  %ptr_cast365 = bitcast [256 x [256 x i128]]** %ellipticcurveadd.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast365, i128 2, i128 %ellipticcurveadd.k.read_arg_inner)
  %ptr_cast366 = bitcast [256 x [256 x i128]]** %ellipticcurveadd.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast366, i128 2, i128 %ellipticcurveadd.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %ellipticcurveadd.add_is_double.write_inter_inner368 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 9
  store i128 %ellipticcurveadd.add_is_double.read_inter_inner, i128* %ellipticcurveadd.add_is_double.write_inter_inner368, align 4
  %ellipticcurveadd.ab0.write_inter_inner370 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 10
  store i128 %ellipticcurveadd.ab0.read_inter_inner, i128* %ellipticcurveadd.ab0.write_inter_inner370, align 4
  %ellipticcurveadd.anegb.write_inter_inner372 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 11
  store i128 %ellipticcurveadd.anegb.read_inter_inner, i128* %ellipticcurveadd.anegb.write_inter_inner372, align 4
  %tmp373 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.declare_inter, align 8
  %ellipticcurveadd.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 12
  store [256 x [256 x [256 x i128]]]* %tmp373, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.write_inter_inner, align 8
  %out374 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurveadd.out.declare_output, align 8
  %ellipticcurveadd.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 13
  store [256 x [256 x i128]]* %out374, [256 x [256 x i128]]** %ellipticcurveadd.out.write_output_inner, align 8
  %ellipticcurveadd.isinfinity.write_output_inner376 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 14
  store i128 %ellipticcurveadd.isinfinity.read_output_inner, i128* %ellipticcurveadd.isinfinity.write_output_inner376, align 4
  ret void
}

define %struct_template_circuit_ellipticcurveadd* @fn_template_build_ellipticcurveadd(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurveadd = alloca %struct_template_circuit_ellipticcurveadd, align 8
  %ellipticcurveadd.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveadd.n.write_arg_inner, align 4
  %ellipticcurveadd.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveadd.k.write_arg_inner, align 4
  %ellipticcurveadd.a1.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 2
  store i128 %2, i128* %ellipticcurveadd.a1.write_arg_inner, align 4
  %ellipticcurveadd.b1.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 3
  store i128 %3, i128* %ellipticcurveadd.b1.write_arg_inner, align 4
  %ellipticcurveadd.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurveadd.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd
}

define void @fn_template_init_ellipticcurvedoublefp2(%struct_template_circuit_ellipticcurvedoublefp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 0
  %ellipticcurvedoublefp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 1
  %ellipticcurvedoublefp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 2
  %ellipticcurvedoublefp2.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 3
  %ellipticcurvedoublefp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 4
  %ellipticcurvedoublefp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %ellipticcurvedoublefp2.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %lamb_denom = alloca [256 x [256 x i128]]*, align 8
  %lamb_denom6 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %lamb_denom6, [256 x [256 x i128]]** %lamb_denom, align 8
  %lamb_num = alloca [256 x [256 x i128]]*, align 8
  %lamb_num7 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %lamb_num7, [256 x [256 x i128]]** %lamb_num, align 8
  %y3 = alloca [256 x [256 x i128]]*, align 8
  %y38 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %y38, [256 x [256 x i128]]** %y3, align 8
  %i9 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvedoublefp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %x3 = alloca [256 x [256 x i128]]*, align 8
  %x310 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %x310, [256 x [256 x i128]]** %x3, align 8
  %lamb = alloca [256 x [256 x i128]]*, align 8
  %lamb11 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %lamb11, [256 x [256 x i128]]** %lamb, align 8
  %j12 = call i128 @fn_intrinsic_utils_init()
  %long_3 = alloca [256 x [256 x i128]]*, align 8
  %long_313 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %long_313, [256 x [256 x i128]]** %long_3, align 8
  %range_check = alloca [256 x %struct_template_circuit_rangecheck2d*]*, align 8
  %range_check14 = alloca [256 x %struct_template_circuit_rangecheck2d*], align 8
  store [256 x %struct_template_circuit_rangecheck2d*]* %range_check14, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %long_a = alloca [256 x [256 x i128]]*, align 8
  %long_a15 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %long_a15, [256 x [256 x i128]]** %long_a, align 8
  %uniform_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]** %long_a, align 8
  %uniform_array19 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array19, [256 x [256 x i128]]** %long_3, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, i128 0, i128 0
  %a20 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_a, align 8
  %long_a21 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 0, i128 0
  store i128 %a20, i128* %long_a21, align 4
  %ptr_getter22 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_3, align 8
  %long_323 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter22, i128 0, i128 0, i128 0
  store i128 3, i128* %long_323, align 4
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, i128 0, i128 1
  %a26 = load i128, i128* %array_getter25, align 4
  %ptr_getter27 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_a, align 8
  %long_a28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter27, i128 0, i128 1, i128 0
  store i128 %a26, i128* %long_a28, align 4
  %ptr_getter29 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_3, align 8
  %long_330 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter29, i128 0, i128 1, i128 0
  store i128 0, i128* %long_330, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %ptr_getter31 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_a, align 8
  %long_a33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter31, i128 0, i128 0, i128 %i.0
  store i128 0, i128* %long_a33, align 4
  %ptr_getter34 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_3, align 8
  %long_336 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter34, i128 0, i128 0, i128 %i.0
  store i128 0, i128* %long_336, align 4
  %ptr_getter37 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_a, align 8
  %long_a39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter37, i128 0, i128 1, i128 %i.0
  store i128 0, i128* %long_a39, align 4
  %ptr_getter40 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_3, align 8
  %long_342 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter40, i128 0, i128 1, i128 %i.0
  store i128 0, i128* %long_342, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %long_a47 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_a, align 8
  %long_350 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %long_3, align 8
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter53 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0
  %in54 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter53, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in54, [256 x [256 x i128]]* %spice_inline_array, align 4
  %in55 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in55, i128 0, i128 0
  %in57 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter56, align 4
  %spice_inline_array58 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in57, [256 x [256 x i128]]* %spice_inline_array58, align 4
  %call = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array58, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call60 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %long_350, [256 x [256 x i128]]* %call, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call62 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %long_a47, [256 x [256 x i128]]* %call60, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call62, [256 x [256 x i128]]** %lamb_num, align 8
  %in65 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter66 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in65, i128 0, i128 1
  %in67 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter66, align 4
  %spice_inline_array68 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in67, [256 x [256 x i128]]* %spice_inline_array68, align 4
  %in69 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter70 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in69, i128 0, i128 1
  %in71 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter70, align 4
  %spice_inline_array72 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in71, [256 x [256 x i128]]* %spice_inline_array72, align 4
  %call74 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array68, [256 x [256 x i128]]* %spice_inline_array72, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call74, [256 x [256 x i128]]** %lamb_denom, align 8
  %lamb_num77 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lamb_num, align 8
  %lamb_denom80 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lamb_denom, align 8
  %call82 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %lamb_denom80, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call84 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %lamb_num77, [256 x [256 x i128]]* %call82, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call84, [256 x [256 x i128]]** %lamb, align 8
  %lamb89 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lamb, align 8
  %lamb90 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lamb, align 8
  %call92 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %lamb89, [256 x [256 x i128]]* %lamb90, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %in95 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter96 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in95, i128 0, i128 0
  %in97 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter96, align 4
  %spice_inline_array98 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in97, [256 x [256 x i128]]* %spice_inline_array98, align 4
  %in99 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in99, i128 0, i128 0
  %in101 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter100, align 4
  %spice_inline_array102 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in101, [256 x [256 x i128]]* %spice_inline_array102, align 4
  %call104 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array98, [256 x [256 x i128]]* %spice_inline_array102, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call106 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call92, [256 x [256 x i128]]* %call104, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call106, [256 x [256 x i128]]** %x3, align 8
  %lamb111 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %lamb, align 8
  %in114 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter115 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in114, i128 0, i128 0
  %in116 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter115, align 4
  %spice_inline_array117 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in116, [256 x [256 x i128]]* %spice_inline_array117, align 4
  %x3118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %x3, align 8
  %call120 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array117, [256 x [256 x i128]]* %x3118, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call122 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %lamb111, [256 x [256 x i128]]* %call120, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %in123 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter124 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in123, i128 0, i128 1
  %in125 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter124, align 4
  %spice_inline_array126 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in125, [256 x [256 x i128]]* %spice_inline_array126, align 4
  %call128 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call122, [256 x [256 x i128]]* %spice_inline_array126, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  store [256 x [256 x i128]]* %call128, [256 x [256 x i128]]** %y3, align 8
  br label %loop.body129

loop.body129:                                     ; preds = %loop.latch158, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add160, %loop.latch158 ]
  %x3130 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %x3, align 8
  %array_getter132 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %x3130, i128 0, i128 0, i128 %i.1
  %x3133 = load i128, i128* %array_getter132, align 4
  %ptr_getter134 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %out136 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter134, i128 0, i128 0, i128 0, i128 %i.1
  store i128 %x3133, i128* %out136, align 4
  %x3137 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %x3, align 8
  %array_getter139 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %x3137, i128 0, i128 1, i128 %i.1
  %x3140 = load i128, i128* %array_getter139, align 4
  %ptr_getter141 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %out143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter141, i128 0, i128 0, i128 1, i128 %i.1
  store i128 %x3140, i128* %out143, align 4
  %y3144 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %y3, align 8
  %array_getter146 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %y3144, i128 0, i128 0, i128 %i.1
  %y3147 = load i128, i128* %array_getter146, align 4
  %ptr_getter148 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %out150 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter148, i128 0, i128 1, i128 0, i128 %i.1
  store i128 %y3147, i128* %out150, align 4
  %y3151 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %y3, align 8
  %array_getter153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %y3151, i128 0, i128 1, i128 %i.1
  %y3154 = load i128, i128* %array_getter153, align 4
  %ptr_getter155 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %out157 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter155, i128 0, i128 1, i128 1, i128 %i.1
  store i128 %y3154, i128* %out157, align 4
  br label %loop.latch158

loop.latch158:                                    ; preds = %loop.body129
  %add160 = add i128 %i.1, 1
  %slt163 = icmp slt i128 %add160, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt163, label %loop.body129, label %loop.exit164

loop.exit164:                                     ; preds = %loop.latch158
  %call167 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %ptr_getter168 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %range_check169 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter168, i128 0, i128 0
  store %struct_template_circuit_rangecheck2d* %call167, %struct_template_circuit_rangecheck2d** %range_check169, align 8
  %call172 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %ptr_getter173 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %range_check174 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter173, i128 0, i128 1
  store %struct_template_circuit_rangecheck2d* %call172, %struct_template_circuit_rangecheck2d** %range_check174, align 8
  br label %loop.body175

loop.body175:                                     ; preds = %loop.latch227, %loop.exit164
  %j.0 = phi i128 [ 0, %loop.exit164 ], [ %add229, %loop.latch227 ]
  br label %loop.body176

loop.body176:                                     ; preds = %loop.latch220, %loop.body175
  %i.2 = phi i128 [ 0, %loop.body175 ], [ %add222, %loop.latch220 ]
  %out177 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter180 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out177, i128 0, i128 0, i128 %j.0, i128 %i.2
  %out181 = load i128, i128* %array_getter180, align 4
  %range_check182 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter183 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check182, i128 0, i128 0
  %range_check184 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter183, align 8
  %struct_getter185 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check184, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter185, align 8
  %array_getter188 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.0, i128 %i.2
  %range_check189 = load i128, i128* %array_getter188, align 4
  call void @fn_intrinsic_utils_constraint(i128 %range_check189, i128 %out181, i1* @constraint.688)
  %ptr_getter190 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter191 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter190, i128 0, i128 0
  %range_check192 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter191, align 8
  %struct_getter193 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check192, i32 0, i32 2
  %rangecheck2d.in.read_input_outter194 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter193, align 8
  %range_check197 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter194, i128 0, i128 %j.0, i128 %i.2
  store i128 %out181, i128* %range_check197, align 4
  %out198 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter201 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out198, i128 0, i128 1, i128 %j.0, i128 %i.2
  %out202 = load i128, i128* %array_getter201, align 4
  %range_check203 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter204 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check203, i128 0, i128 1
  %range_check205 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter204, align 8
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check205, i32 0, i32 2
  %rangecheck2d.in.read_input_outter207 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter206, align 8
  %array_getter210 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter207, i128 0, i128 %j.0, i128 %i.2
  %range_check211 = load i128, i128* %array_getter210, align 4
  call void @fn_intrinsic_utils_constraint(i128 %range_check211, i128 %out202, i1* @constraint.689)
  %ptr_getter212 = load [256 x %struct_template_circuit_rangecheck2d*]*, [256 x %struct_template_circuit_rangecheck2d*]** %range_check, align 8
  %array_getter213 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %ptr_getter212, i128 0, i128 1
  %range_check214 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter213, align 8
  %struct_getter215 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check214, i32 0, i32 2
  %rangecheck2d.in.read_input_outter216 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter215, align 8
  %range_check219 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter216, i128 0, i128 %j.0, i128 %i.2
  store i128 %out202, i128* %range_check219, align 4
  br label %loop.latch220

loop.latch220:                                    ; preds = %loop.body176
  %add222 = add i128 %i.2, 1
  %slt225 = icmp slt i128 %add222, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt225, label %loop.body176, label %loop.exit226

loop.exit226:                                     ; preds = %loop.latch220
  br label %loop.latch227

loop.latch227:                                    ; preds = %loop.exit226
  %add229 = add i128 %j.0, 1
  %slt231 = icmp slt i128 %add229, 2
  br i1 %slt231, label %loop.body175, label %loop.exit232

loop.exit232:                                     ; preds = %loop.latch227
  %call237 = call %struct_template_circuit_pointontangentfp2* @fn_template_build_pointontangentfp2(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body238

loop.body238:                                     ; preds = %loop.latch318, %loop.exit232
  %j.1 = phi i128 [ 0, %loop.exit232 ], [ %add320, %loop.latch318 ]
  br label %loop.body239

loop.body239:                                     ; preds = %loop.latch311, %loop.body238
  %i.3 = phi i128 [ 0, %loop.body238 ], [ %add313, %loop.latch311 ]
  %in240 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter243 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in240, i128 0, i128 %j.1, i128 0, i128 %i.3
  %in244 = load i128, i128* %array_getter243, align 4
  %struct_getter246 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter246, align 8
  %array_getter249 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter, i128 0, i128 0, i128 %j.1, i128 0, i128 %i.3
  %point_on_tangent250 = load i128, i128* %array_getter249, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_tangent250, i128 %in244, i1* @constraint.690)
  %struct_getter252 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter253 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter252, align 8
  %point_on_tangent256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter253, i128 0, i128 0, i128 %j.1, i128 0, i128 %i.3
  store i128 %in244, i128* %point_on_tangent256, align 4
  %in257 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter260 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in257, i128 0, i128 %j.1, i128 1, i128 %i.3
  %in261 = load i128, i128* %array_getter260, align 4
  %struct_getter263 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter264 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter263, align 8
  %array_getter267 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter264, i128 0, i128 0, i128 %j.1, i128 1, i128 %i.3
  %point_on_tangent268 = load i128, i128* %array_getter267, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_tangent268, i128 %in261, i1* @constraint.691)
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter271 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter270, align 8
  %point_on_tangent274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter271, i128 0, i128 0, i128 %j.1, i128 1, i128 %i.3
  store i128 %in261, i128* %point_on_tangent274, align 4
  %out275 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter278 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out275, i128 0, i128 %j.1, i128 0, i128 %i.3
  %out279 = load i128, i128* %array_getter278, align 4
  %struct_getter281 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter282 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter281, align 8
  %array_getter285 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter282, i128 0, i128 1, i128 %j.1, i128 0, i128 %i.3
  %point_on_tangent286 = load i128, i128* %array_getter285, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_tangent286, i128 %out279, i1* @constraint.692)
  %struct_getter288 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter289 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter288, align 8
  %point_on_tangent292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter289, i128 0, i128 1, i128 %j.1, i128 0, i128 %i.3
  store i128 %out279, i128* %point_on_tangent292, align 4
  %out293 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter296 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out293, i128 0, i128 %j.1, i128 1, i128 %i.3
  %out297 = load i128, i128* %array_getter296, align 4
  %struct_getter299 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter300 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter299, align 8
  %array_getter303 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter300, i128 0, i128 1, i128 %j.1, i128 1, i128 %i.3
  %point_on_tangent304 = load i128, i128* %array_getter303, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_tangent304, i128 %out297, i1* @constraint.693)
  %struct_getter306 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call237, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter307 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter306, align 8
  %point_on_tangent310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter307, i128 0, i128 1, i128 %j.1, i128 1, i128 %i.3
  store i128 %out297, i128* %point_on_tangent310, align 4
  br label %loop.latch311

loop.latch311:                                    ; preds = %loop.body239
  %add313 = add i128 %i.3, 1
  %slt316 = icmp slt i128 %add313, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt316, label %loop.body239, label %loop.exit317

loop.exit317:                                     ; preds = %loop.latch311
  br label %loop.latch318

loop.latch318:                                    ; preds = %loop.exit317
  %add320 = add i128 %j.1, 1
  %slt322 = icmp slt i128 %add320, 2
  br i1 %slt322, label %loop.body238, label %loop.exit323

loop.exit323:                                     ; preds = %loop.latch318
  %call328 = call %struct_template_circuit_pointoncurvefp2* @fn_template_build_pointoncurvefp2(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.b.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body329

loop.body329:                                     ; preds = %loop.latch373, %loop.exit323
  %j.2 = phi i128 [ 0, %loop.exit323 ], [ %add375, %loop.latch373 ]
  br label %loop.body330

loop.body330:                                     ; preds = %loop.latch366, %loop.body329
  %i.4 = phi i128 [ 0, %loop.body329 ], [ %add368, %loop.latch366 ]
  %out331 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter334 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out331, i128 0, i128 %j.2, i128 0, i128 %i.4
  %out335 = load i128, i128* %array_getter334, align 4
  %struct_getter337 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call328, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter337, align 8
  %array_getter340 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter, i128 0, i128 %j.2, i128 0, i128 %i.4
  %point_on_curve341 = load i128, i128* %array_getter340, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_curve341, i128 %out335, i1* @constraint.694)
  %struct_getter343 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call328, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter344 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter343, align 8
  %point_on_curve347 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter344, i128 0, i128 %j.2, i128 0, i128 %i.4
  store i128 %out335, i128* %point_on_curve347, align 4
  %out348 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter351 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out348, i128 0, i128 %j.2, i128 1, i128 %i.4
  %out352 = load i128, i128* %array_getter351, align 4
  %struct_getter354 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call328, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter355 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter354, align 8
  %array_getter358 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter355, i128 0, i128 %j.2, i128 1, i128 %i.4
  %point_on_curve359 = load i128, i128* %array_getter358, align 4
  call void @fn_intrinsic_utils_constraint(i128 %point_on_curve359, i128 %out352, i1* @constraint.695)
  %struct_getter361 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call328, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter362 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter361, align 8
  %point_on_curve365 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter362, i128 0, i128 %j.2, i128 1, i128 %i.4
  store i128 %out352, i128* %point_on_curve365, align 4
  br label %loop.latch366

loop.latch366:                                    ; preds = %loop.body330
  %add368 = add i128 %i.4, 1
  %slt371 = icmp slt i128 %add368, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt371, label %loop.body330, label %loop.exit372

loop.exit372:                                     ; preds = %loop.latch366
  br label %loop.latch373

loop.latch373:                                    ; preds = %loop.exit372
  %add375 = add i128 %j.2, 1
  %slt377 = icmp slt i128 %add375, 2
  br i1 %slt377, label %loop.body329, label %loop.exit378

loop.exit378:                                     ; preds = %loop.latch373
  %call382 = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body383

loop.body383:                                     ; preds = %loop.latch426, %loop.exit378
  %j.3 = phi i128 [ 0, %loop.exit378 ], [ %add428, %loop.latch426 ]
  br label %loop.body384

loop.body384:                                     ; preds = %loop.latch419, %loop.body383
  %i.5 = phi i128 [ 0, %loop.body383 ], [ %add421, %loop.latch419 ]
  %out385 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %array_getter388 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out385, i128 0, i128 0, i128 %j.3, i128 %i.5
  %out389 = load i128, i128* %array_getter388, align 4
  %struct_getter391 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call382, i32 0, i32 3
  %fp2isequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter391, align 8
  %array_getter394 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter, i128 0, i128 %j.3, i128 %i.5
  %x3_eq_x1395 = load i128, i128* %array_getter394, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x3_eq_x1395, i128 %out389, i1* @constraint.696)
  %struct_getter397 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call382, i32 0, i32 3
  %fp2isequal.a.read_input_outter398 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter397, align 8
  %x3_eq_x1401 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter398, i128 0, i128 %j.3, i128 %i.5
  store i128 %out389, i128* %x3_eq_x1401, align 4
  %in402 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input, align 8
  %array_getter405 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in402, i128 0, i128 0, i128 %j.3, i128 %i.5
  %in406 = load i128, i128* %array_getter405, align 4
  %struct_getter408 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call382, i32 0, i32 4
  %fp2isequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter408, align 8
  %array_getter411 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter, i128 0, i128 %j.3, i128 %i.5
  %x3_eq_x1412 = load i128, i128* %array_getter411, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x3_eq_x1412, i128 %in406, i1* @constraint.697)
  %struct_getter414 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call382, i32 0, i32 4
  %fp2isequal.b.read_input_outter415 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter414, align 8
  %x3_eq_x1418 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter415, i128 0, i128 %j.3, i128 %i.5
  store i128 %in406, i128* %x3_eq_x1418, align 4
  br label %loop.latch419

loop.latch419:                                    ; preds = %loop.body384
  %add421 = add i128 %i.5, 1
  %slt424 = icmp slt i128 %add421, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt424, label %loop.body384, label %loop.exit425

loop.exit425:                                     ; preds = %loop.latch419
  br label %loop.latch426

loop.latch426:                                    ; preds = %loop.exit425
  %add428 = add i128 %j.3, 1
  %slt430 = icmp slt i128 %add428, 2
  br i1 %slt430, label %loop.body383, label %loop.exit431

loop.exit431:                                     ; preds = %loop.latch426
  %struct_getter433 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call382, i32 0, i32 5
  %fp2isequal.out.read_output_outter = load i128, i128* %struct_getter433, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fp2isequal.out.read_output_outter, i128 0, i1* @constraint.698)
  br label %arraydim

arraydim:                                         ; preds = %loop.exit431
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 2, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %ptr_cast434 = bitcast [256 x [256 x i128]]** %lamb_num to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast434, i128 2, i128 50)
  %ptr_cast435 = bitcast [256 x [256 x i128]]** %lamb to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast435, i128 2, i128 50)
  %ptr_cast436 = bitcast [256 x [256 x i128]]** %x3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast436, i128 2, i128 50)
  %ptr_cast437 = bitcast [256 x [256 x i128]]** %long_a to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast437, i128 2, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %ptr_cast438 = bitcast [256 x [256 x i128]]** %lamb_denom to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast438, i128 2, i128 50)
  %ptr_cast439 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast439, i128 2, i128 2, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %ptr_cast440 = bitcast [256 x [256 x i128]]** %y3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast440, i128 2, i128 50)
  %ptr_cast441 = bitcast [256 x %struct_template_circuit_rangecheck2d*]** %range_check to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast441, i128 2)
  %ptr_cast442 = bitcast [256 x [256 x i128]]** %long_3 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast442, i128 2, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out443 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.declare_output, align 8
  %ellipticcurvedoublefp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out443, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvedoublefp2 = alloca %struct_template_circuit_ellipticcurvedoublefp2, align 8
  %ellipticcurvedoublefp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvedoublefp2.n.write_arg_inner, align 4
  %ellipticcurvedoublefp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvedoublefp2.k.write_arg_inner, align 4
  %ellipticcurvedoublefp2.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvedoublefp2.a.write_arg_inner, align 8
  %ellipticcurvedoublefp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %ellipticcurvedoublefp2.b.write_arg_inner, align 8
  %ellipticcurvedoublefp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvedoublefp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2
}

define void @fn_template_init_millerloopfp2(%struct_template_circuit_millerloopfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 0
  %millerloopfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 1
  %millerloopfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 2
  %millerloopfp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 3
  %millerloopfp2.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 4
  %millerloopfp2.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 5
  %millerloopfp2.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %millerloopfp2.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %millerloopfp2.p.read_input_inner, [256 x [256 x [256 x i128]]]** %millerloopfp2.p.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 6
  %millerloopfp2.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %millerloopfp2.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %millerloopfp2.q.read_input_inner, [256 x [256 x i128]]** %millerloopfp2.q.declare_input, align 8
  %j7 = call i128 @fn_intrinsic_utils_init()
  %nocarry = alloca [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, align 8
  %nocarry8 = alloca [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], align 8
  store [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry8, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %millerloopfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %millerloopfp2.out.declare_output, align 8
  %LOGK9 = call i128 @fn_intrinsic_utils_init()
  %Pdouble = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, align 8
  %Pdouble10 = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*], align 8
  store [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble10, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %l11 = call i128 @fn_intrinsic_utils_init()
  %LOGK312 = call i128 @fn_intrinsic_utils_init()
  %millerloopfp2.r.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall13 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall13 to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %R, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %idx14 = call i128 @fn_intrinsic_utils_init()
  %curid15 = call i128 @fn_intrinsic_utils_init()
  %Padd = alloca [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, align 8
  %Padd16 = alloca [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], align 8
  store [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd16, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %millerloopfp2.xp.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall17 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %xP = bitcast i8* %malloccall17 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %xP, [256 x [256 x [256 x i128]]]** %millerloopfp2.xp.declare_output, align 8
  %line = alloca [256 x %struct_template_circuit_linefunctionequalfp2*]*, align 8
  %line18 = alloca [256 x %struct_template_circuit_linefunctionequalfp2*], align 8
  store [256 x %struct_template_circuit_linefunctionequalfp2*]* %line18, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %compress = alloca [256 x %struct_template_circuit_fp12compress*]*, align 8
  %compress19 = alloca [256 x %struct_template_circuit_fp12compress*], align 8
  store [256 x %struct_template_circuit_fp12compress*]* %compress19, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %i20 = call i128 @fn_intrinsic_utils_init()
  %eps21 = call i128 @fn_intrinsic_utils_init()
  %XI022 = call i128 @fn_intrinsic_utils_init()
  %BitLength23 = call i128 @fn_intrinsic_utils_init()
  %square = alloca [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, align 8
  %square24 = alloca [256 x %struct_template_circuit_signedfp12multiplynocarry*], align 8
  store [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square24, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %SigBits25 = call i128 @fn_intrinsic_utils_init()
  %Bits = alloca [256 x i128]*, align 8
  %Bits26 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits26, [256 x i128]** %Bits, align 8
  %fadd = alloca [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, align 8
  %fadd27 = alloca [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], align 8
  store [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %fadd27, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %millerloopfp2.f.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall28 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %f = bitcast i8* %malloccall28 to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %f, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %LOGK229 = call i128 @fn_intrinsic_utils_init()
  %fdouble = alloca [256 x %struct_template_circuit_signedfp12carrymodp*]*, align 8
  %fdouble30 = alloca [256 x %struct_template_circuit_signedfp12carrymodp*], align 8
  store [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble30, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %call = call i128 @log_ceil(i128 %millerloopfp2.k.read_arg_inner)
  %add = add i128 2, 1
  %mul = mul i128 36, %add
  %add37 = add i128 2, 1
  %mul38 = mul i128 %mul, %add37
  %mul40 = mul i128 %mul38, %millerloopfp2.k.read_arg_inner
  %mul42 = mul i128 %mul40, %millerloopfp2.k.read_arg_inner
  %call43 = call i128 @log_ceil(i128 %mul42)
  %add45 = add i128 2, 1
  %mul46 = mul i128 36, %add45
  %add48 = add i128 2, 1
  %mul49 = mul i128 %mul46, %add48
  %mul51 = mul i128 %mul49, %millerloopfp2.k.read_arg_inner
  %mul53 = mul i128 %mul51, %millerloopfp2.k.read_arg_inner
  %mul55 = mul i128 2, %millerloopfp2.k.read_arg_inner
  %sub = sub i128 %mul55, 1
  %mul56 = mul i128 %mul53, %sub
  %call57 = call i128 @log_ceil(i128 %mul56)
  %mul58 = mul i128 4, %millerloopfp2.n.read_arg_inner
  %add60 = add i128 %mul58, %call57
  %slt = icmp slt i128 %add60, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add72, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %rshift = lshr i128 %millerloopfp2.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits63 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits63, align 4
  %Bits64 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits64, i128 0, i128 %i.0
  %Bits66 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits66, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add68 = add i128 %SigBits.0, 1
  %add70 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add70, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add68, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add72 = add i128 %i.0, 1
  %slt74 = icmp slt i128 %add72, 250
  br i1 %slt74, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub88 = sub i128 %BitLength.1, 1
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch1141, %loop.exit
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch1141 ]
  %i.1 = phi i128 [ %sub88, %loop.exit ], [ %sub1143, %loop.latch1141 ]
  %sub94 = sub i128 %BitLength.1, 1
  %eq95 = icmp eq i128 %i.1, %sub94
  br i1 %eq95, label %if.true90, label %if.false91

if.true90:                                        ; preds = %loop.body89
  br label %loop.body96

if.false91:                                       ; preds = %loop.body89
  %mul198 = mul i128 2, %millerloopfp2.n.read_arg_inner
  %add199 = add i128 %mul198, 4
  %add201 = add i128 %add199, %call
  %call202 = call %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, i128 %add201)
  %ptr_getter203 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %square205 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter203, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12multiplynocarry* %call202, %struct_template_circuit_signedfp12multiplynocarry** %square205, align 8
  br label %loop.body206

loop.body96:                                      ; preds = %loop.latch149, %if.true90
  %l.0 = phi i128 [ 0, %if.true90 ], [ %add151, %loop.latch149 ]
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch143, %loop.body96
  %j.0 = phi i128 [ 0, %loop.body96 ], [ %add145, %loop.latch143 ]
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch136, %loop.body97
  %idx.0 = phi i128 [ 0, %loop.body97 ], [ %add138, %loop.latch136 ]
  %eq102 = icmp eq i128 %l.0, 0
  %eq104 = icmp eq i128 %j.0, 0
  %and105 = and i1 %eq102, %eq104
  %eq107 = icmp eq i128 %idx.0, 0
  %and108 = and i1 %and105, %eq107
  br i1 %and108, label %if.true99, label %if.false100

if.true99:                                        ; preds = %loop.body98
  %f109 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %array_getter114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f109, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  %f115 = load i128, i128* %array_getter114, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f115, i128 1, i1* @constraint.699)
  %ptr_getter116 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %f121 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter116, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  store i128 1, i128* %f121, align 4
  br label %if.exit135

if.false100:                                      ; preds = %loop.body98
  %f122 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f122, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  %f128 = load i128, i128* %array_getter127, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f128, i128 0, i1* @constraint.700)
  %ptr_getter129 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %f134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter129, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  store i128 0, i128* %f134, align 4
  br label %if.exit135

if.exit135:                                       ; preds = %if.false100, %if.true99
  br label %loop.latch136

loop.latch136:                                    ; preds = %if.exit135
  %add138 = add i128 %idx.0, 1
  %slt141 = icmp slt i128 %add138, %millerloopfp2.k.read_arg_inner
  br i1 %slt141, label %loop.body98, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %j.0, 1
  %slt147 = icmp slt i128 %add145, 2
  br i1 %slt147, label %loop.body97, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %loop.latch149

loop.latch149:                                    ; preds = %loop.exit148
  %add151 = add i128 %l.0, 1
  %slt153 = icmp slt i128 %add151, 6
  br i1 %slt153, label %loop.body96, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch149
  br label %loop.body155

loop.body155:                                     ; preds = %loop.latch189, %loop.exit154
  %j.1 = phi i128 [ 0, %loop.exit154 ], [ %add191, %loop.latch189 ]
  br label %loop.body156

loop.body156:                                     ; preds = %loop.latch182, %loop.body155
  %idx.1 = phi i128 [ 0, %loop.body155 ], [ %add184, %loop.latch182 ]
  br label %loop.body157

loop.body157:                                     ; preds = %loop.latch176, %loop.body156
  %l.1 = phi i128 [ 0, %loop.body156 ], [ %add178, %loop.latch176 ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.p.declare_input, align 8
  %array_getter161 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  %P162 = load i128, i128* %array_getter161, align 4
  %R163 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %array_getter168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R163, i128 0, i128 %i.1, i128 %j.1, i128 %l.1, i128 %idx.1
  %R169 = load i128, i128* %array_getter168, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R169, i128 %P162, i1* @constraint.701)
  %ptr_getter170 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %R175 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter170, i128 0, i128 %i.1, i128 %j.1, i128 %l.1, i128 %idx.1
  store i128 %P162, i128* %R175, align 4
  br label %loop.latch176

loop.latch176:                                    ; preds = %loop.body157
  %add178 = add i128 %l.1, 1
  %slt180 = icmp slt i128 %add178, 2
  br i1 %slt180, label %loop.body157, label %loop.exit181

loop.exit181:                                     ; preds = %loop.latch176
  br label %loop.latch182

loop.latch182:                                    ; preds = %loop.exit181
  %add184 = add i128 %idx.1, 1
  %slt187 = icmp slt i128 %add184, %millerloopfp2.k.read_arg_inner
  br i1 %slt187, label %loop.body156, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch182
  br label %loop.latch189

loop.latch189:                                    ; preds = %loop.exit188
  %add191 = add i128 %j.1, 1
  %slt193 = icmp slt i128 %add191, 2
  br i1 %slt193, label %loop.body155, label %loop.exit194

loop.exit194:                                     ; preds = %loop.latch189
  br label %if.exit1140

loop.body206:                                     ; preds = %loop.latch278, %if.false91
  %l.2 = phi i128 [ 0, %if.false91 ], [ %add280, %loop.latch278 ]
  br label %loop.body207

loop.body207:                                     ; preds = %loop.latch272, %loop.body206
  %j.2 = phi i128 [ 0, %loop.body206 ], [ %add274, %loop.latch272 ]
  br label %loop.body208

loop.body208:                                     ; preds = %loop.latch265, %loop.body207
  %idx.2 = phi i128 [ 0, %loop.body207 ], [ %add267, %loop.latch265 ]
  %f209 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %add211 = add i128 %i.1, 1
  %array_getter215 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f209, i128 0, i128 %add211, i128 %l.2, i128 %j.2, i128 %idx.2
  %f216 = load i128, i128* %array_getter215, align 4
  %square217 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter219 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square217, i128 0, i128 %i.1
  %square220 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter219, align 8
  %struct_getter221 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square220, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter221, align 8
  %array_getter225 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  %square226 = load i128, i128* %array_getter225, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square226, i128 %f216, i1* @constraint.702)
  %ptr_getter227 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter229 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter227, i128 0, i128 %i.1
  %square230 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter229, align 8
  %struct_getter231 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square230, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter232 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter231, align 8
  %square236 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter232, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  store i128 %f216, i128* %square236, align 4
  %f237 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %add239 = add i128 %i.1, 1
  %array_getter243 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f237, i128 0, i128 %add239, i128 %l.2, i128 %j.2, i128 %idx.2
  %f244 = load i128, i128* %array_getter243, align 4
  %square245 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter247 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square245, i128 0, i128 %i.1
  %square248 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter247, align 8
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square248, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter249, align 8
  %array_getter253 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  %square254 = load i128, i128* %array_getter253, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square254, i128 %f244, i1* @constraint.703)
  %ptr_getter255 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter257 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter255, i128 0, i128 %i.1
  %square258 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter257, align 8
  %struct_getter259 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square258, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter260 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter259, align 8
  %square264 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter260, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  store i128 %f244, i128* %square264, align 4
  br label %loop.latch265

loop.latch265:                                    ; preds = %loop.body208
  %add267 = add i128 %idx.2, 1
  %slt270 = icmp slt i128 %add267, %millerloopfp2.k.read_arg_inner
  br i1 %slt270, label %loop.body208, label %loop.exit271

loop.exit271:                                     ; preds = %loop.latch265
  br label %loop.latch272

loop.latch272:                                    ; preds = %loop.exit271
  %add274 = add i128 %j.2, 1
  %slt276 = icmp slt i128 %add274, 2
  br i1 %slt276, label %loop.body207, label %loop.exit277

loop.exit277:                                     ; preds = %loop.latch272
  br label %loop.latch278

loop.latch278:                                    ; preds = %loop.exit277
  %add280 = add i128 %l.2, 1
  %slt282 = icmp slt i128 %add280, 6
  br i1 %slt282, label %loop.body206, label %loop.exit283

loop.exit283:                                     ; preds = %loop.latch278
  %call286 = call %struct_template_circuit_linefunctionequalfp2* @fn_template_build_linefunctionequalfp2(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, [256 x i128]* %millerloopfp2.q.read_arg_inner)
  %ptr_getter287 = load [256 x %struct_template_circuit_linefunctionequalfp2*]*, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %line289 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequalfp2*], [256 x %struct_template_circuit_linefunctionequalfp2*]* %ptr_getter287, i128 0, i128 %i.1
  store %struct_template_circuit_linefunctionequalfp2* %call286, %struct_template_circuit_linefunctionequalfp2** %line289, align 8
  br label %loop.body290

loop.body290:                                     ; preds = %loop.latch334, %loop.exit283
  %j.3 = phi i128 [ 0, %loop.exit283 ], [ %add336, %loop.latch334 ]
  br label %loop.body291

loop.body291:                                     ; preds = %loop.latch327, %loop.body290
  %idx.3 = phi i128 [ 0, %loop.body290 ], [ %add329, %loop.latch327 ]
  br label %loop.body292

loop.body292:                                     ; preds = %loop.latch321, %loop.body291
  %l.3 = phi i128 [ 0, %loop.body291 ], [ %add323, %loop.latch321 ]
  %R293 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %add295 = add i128 %i.1, 1
  %array_getter299 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R293, i128 0, i128 %add295, i128 %j.3, i128 %l.3, i128 %idx.3
  %R300 = load i128, i128* %array_getter299, align 4
  %line301 = load [256 x %struct_template_circuit_linefunctionequalfp2*]*, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %array_getter303 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequalfp2*], [256 x %struct_template_circuit_linefunctionequalfp2*]* %line301, i128 0, i128 %i.1
  %line304 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter303, align 8
  %struct_getter305 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line304, i32 0, i32 3
  %linefunctionequalfp2.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter305, align 8
  %array_getter309 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.p.read_input_outter, i128 0, i128 %j.3, i128 %l.3, i128 %idx.3
  %line310 = load i128, i128* %array_getter309, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line310, i128 %R300, i1* @constraint.704)
  %ptr_getter311 = load [256 x %struct_template_circuit_linefunctionequalfp2*]*, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %array_getter313 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequalfp2*], [256 x %struct_template_circuit_linefunctionequalfp2*]* %ptr_getter311, i128 0, i128 %i.1
  %line314 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter313, align 8
  %struct_getter315 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line314, i32 0, i32 3
  %linefunctionequalfp2.p.read_input_outter316 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter315, align 8
  %line320 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.p.read_input_outter316, i128 0, i128 %j.3, i128 %l.3, i128 %idx.3
  store i128 %R300, i128* %line320, align 4
  br label %loop.latch321

loop.latch321:                                    ; preds = %loop.body292
  %add323 = add i128 %l.3, 1
  %slt325 = icmp slt i128 %add323, 2
  br i1 %slt325, label %loop.body292, label %loop.exit326

loop.exit326:                                     ; preds = %loop.latch321
  br label %loop.latch327

loop.latch327:                                    ; preds = %loop.exit326
  %add329 = add i128 %idx.3, 1
  %slt332 = icmp slt i128 %add329, %millerloopfp2.k.read_arg_inner
  br i1 %slt332, label %loop.body291, label %loop.exit333

loop.exit333:                                     ; preds = %loop.latch327
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.exit333
  %add336 = add i128 %j.3, 1
  %slt338 = icmp slt i128 %add336, 2
  br i1 %slt338, label %loop.body290, label %loop.exit339

loop.exit339:                                     ; preds = %loop.latch334
  br label %loop.body340

loop.body340:                                     ; preds = %loop.latch371, %loop.exit339
  %eps.0 = phi i128 [ 0, %loop.exit339 ], [ %add373, %loop.latch371 ]
  br label %loop.body341

loop.body341:                                     ; preds = %loop.latch364, %loop.body340
  %idx.4 = phi i128 [ 0, %loop.body340 ], [ %add366, %loop.latch364 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloopfp2.q.declare_input, align 8
  %array_getter344 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 %eps.0, i128 %idx.4
  %Q345 = load i128, i128* %array_getter344, align 4
  %line346 = load [256 x %struct_template_circuit_linefunctionequalfp2*]*, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %array_getter348 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequalfp2*], [256 x %struct_template_circuit_linefunctionequalfp2*]* %line346, i128 0, i128 %i.1
  %line349 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter348, align 8
  %struct_getter350 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line349, i32 0, i32 4
  %linefunctionequalfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter350, align 8
  %array_getter353 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %linefunctionequalfp2.q.read_input_outter, i128 0, i128 %eps.0, i128 %idx.4
  %line354 = load i128, i128* %array_getter353, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line354, i128 %Q345, i1* @constraint.705)
  %ptr_getter355 = load [256 x %struct_template_circuit_linefunctionequalfp2*]*, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %array_getter357 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequalfp2*], [256 x %struct_template_circuit_linefunctionequalfp2*]* %ptr_getter355, i128 0, i128 %i.1
  %line358 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter357, align 8
  %struct_getter359 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line358, i32 0, i32 4
  %linefunctionequalfp2.q.read_input_outter360 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter359, align 8
  %line363 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %linefunctionequalfp2.q.read_input_outter360, i128 0, i128 %eps.0, i128 %idx.4
  store i128 %Q345, i128* %line363, align 4
  br label %loop.latch364

loop.latch364:                                    ; preds = %loop.body341
  %add366 = add i128 %idx.4, 1
  %slt369 = icmp slt i128 %add366, %millerloopfp2.k.read_arg_inner
  br i1 %slt369, label %loop.body341, label %loop.exit370

loop.exit370:                                     ; preds = %loop.latch364
  br label %loop.latch371

loop.latch371:                                    ; preds = %loop.exit370
  %add373 = add i128 %eps.0, 1
  %slt375 = icmp slt i128 %add373, 2
  br i1 %slt375, label %loop.body340, label %loop.exit376

loop.exit376:                                     ; preds = %loop.latch371
  %mul379 = mul i128 2, %millerloopfp2.k.read_arg_inner
  %sub380 = sub i128 %mul379, 1
  %mul383 = mul i128 3, %millerloopfp2.n.read_arg_inner
  %add385 = add i128 %mul383, %call43
  %call386 = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %millerloopfp2.n.read_arg_inner, i128 %sub380, i128 %millerloopfp2.k.read_arg_inner, i128 %add385)
  %ptr_getter387 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %nocarry389 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter387, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12multiplynocarryunequal* %call386, %struct_template_circuit_signedfp12multiplynocarryunequal** %nocarry389, align 8
  br label %loop.body390

loop.body390:                                     ; preds = %loop.latch438, %loop.exit376
  %l.4 = phi i128 [ 0, %loop.exit376 ], [ %add440, %loop.latch438 ]
  br label %loop.body391

loop.body391:                                     ; preds = %loop.latch432, %loop.body390
  %j.4 = phi i128 [ 0, %loop.body390 ], [ %add434, %loop.latch432 ]
  br label %loop.body392

loop.body392:                                     ; preds = %loop.latch423, %loop.body391
  %idx.5 = phi i128 [ 0, %loop.body391 ], [ %add425, %loop.latch423 ]
  %square393 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter395 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square393, i128 0, i128 %i.1
  %square396 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter395, align 8
  %struct_getter397 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square396, i32 0, i32 5
  %signedfp12multiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter397, align 8
  %array_getter401 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.out.read_output_outter, i128 0, i128 %l.4, i128 %j.4, i128 %idx.5
  %square402 = load i128, i128* %array_getter401, align 4
  %nocarry403 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter405 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry403, i128 0, i128 %i.1
  %nocarry406 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter405, align 8
  %struct_getter407 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry406, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter407, align 8
  %array_getter411 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %l.4, i128 %j.4, i128 %idx.5
  %nocarry412 = load i128, i128* %array_getter411, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry412, i128 %square402, i1* @constraint.706)
  %ptr_getter413 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter415 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter413, i128 0, i128 %i.1
  %nocarry416 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter415, align 8
  %struct_getter417 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry416, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter418 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter417, align 8
  %nocarry422 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter418, i128 0, i128 %l.4, i128 %j.4, i128 %idx.5
  store i128 %square402, i128* %nocarry422, align 4
  br label %loop.latch423

loop.latch423:                                    ; preds = %loop.body392
  %add425 = add i128 %idx.5, 1
  %mul428 = mul i128 2, %millerloopfp2.k.read_arg_inner
  %sub429 = sub i128 %mul428, 1
  %slt430 = icmp slt i128 %add425, %sub429
  br i1 %slt430, label %loop.body392, label %loop.exit431

loop.exit431:                                     ; preds = %loop.latch423
  br label %loop.latch432

loop.latch432:                                    ; preds = %loop.exit431
  %add434 = add i128 %j.4, 1
  %slt436 = icmp slt i128 %add434, 2
  br i1 %slt436, label %loop.body391, label %loop.exit437

loop.exit437:                                     ; preds = %loop.latch432
  br label %loop.latch438

loop.latch438:                                    ; preds = %loop.exit437
  %add440 = add i128 %l.4, 1
  %slt442 = icmp slt i128 %add440, 6
  br i1 %slt442, label %loop.body390, label %loop.exit443

loop.exit443:                                     ; preds = %loop.latch438
  br label %loop.body444

loop.body444:                                     ; preds = %loop.latch490, %loop.exit443
  %l.5 = phi i128 [ 0, %loop.exit443 ], [ %add492, %loop.latch490 ]
  br label %loop.body445

loop.body445:                                     ; preds = %loop.latch484, %loop.body444
  %j.5 = phi i128 [ 0, %loop.body444 ], [ %add486, %loop.latch484 ]
  br label %loop.body446

loop.body446:                                     ; preds = %loop.latch477, %loop.body445
  %idx.6 = phi i128 [ 0, %loop.body445 ], [ %add479, %loop.latch477 ]
  %line447 = load [256 x %struct_template_circuit_linefunctionequalfp2*]*, [256 x %struct_template_circuit_linefunctionequalfp2*]** %line, align 8
  %array_getter449 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequalfp2*], [256 x %struct_template_circuit_linefunctionequalfp2*]* %line447, i128 0, i128 %i.1
  %line450 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter449, align 8
  %struct_getter451 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line450, i32 0, i32 5
  %linefunctionequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter451, align 8
  %array_getter455 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.out.read_output_outter, i128 0, i128 %l.5, i128 %j.5, i128 %idx.6
  %line456 = load i128, i128* %array_getter455, align 4
  %nocarry457 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter459 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry457, i128 0, i128 %i.1
  %nocarry460 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter459, align 8
  %struct_getter461 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry460, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter461, align 8
  %array_getter465 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %l.5, i128 %j.5, i128 %idx.6
  %nocarry466 = load i128, i128* %array_getter465, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry466, i128 %line456, i1* @constraint.707)
  %ptr_getter467 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter469 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter467, i128 0, i128 %i.1
  %nocarry470 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter469, align 8
  %struct_getter471 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry470, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter472 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter471, align 8
  %nocarry476 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter472, i128 0, i128 %l.5, i128 %j.5, i128 %idx.6
  store i128 %line456, i128* %nocarry476, align 4
  br label %loop.latch477

loop.latch477:                                    ; preds = %loop.body446
  %add479 = add i128 %idx.6, 1
  %slt482 = icmp slt i128 %add479, %millerloopfp2.k.read_arg_inner
  br i1 %slt482, label %loop.body446, label %loop.exit483

loop.exit483:                                     ; preds = %loop.latch477
  br label %loop.latch484

loop.latch484:                                    ; preds = %loop.exit483
  %add486 = add i128 %j.5, 1
  %slt488 = icmp slt i128 %add486, 2
  br i1 %slt488, label %loop.body445, label %loop.exit489

loop.exit489:                                     ; preds = %loop.latch484
  br label %loop.latch490

loop.latch490:                                    ; preds = %loop.exit489
  %add492 = add i128 %l.5, 1
  %slt494 = icmp slt i128 %add492, 6
  br i1 %slt494, label %loop.body444, label %loop.exit495

loop.exit495:                                     ; preds = %loop.latch490
  %mul499 = mul i128 2, %millerloopfp2.k.read_arg_inner
  %sub500 = sub i128 %mul499, 2
  %mul503 = mul i128 4, %millerloopfp2.n.read_arg_inner
  %add505 = add i128 %mul503, %call57
  %call506 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, i128 %sub500, [256 x i128]* %millerloopfp2.q.read_arg_inner, i128 %add505)
  %ptr_getter507 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %compress509 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %ptr_getter507, i128 0, i128 %i.1
  store %struct_template_circuit_fp12compress* %call506, %struct_template_circuit_fp12compress** %compress509, align 8
  br label %loop.body510

loop.body510:                                     ; preds = %loop.latch558, %loop.exit495
  %l.6 = phi i128 [ 0, %loop.exit495 ], [ %add560, %loop.latch558 ]
  br label %loop.body511

loop.body511:                                     ; preds = %loop.latch552, %loop.body510
  %j.6 = phi i128 [ 0, %loop.body510 ], [ %add554, %loop.latch552 ]
  br label %loop.body512

loop.body512:                                     ; preds = %loop.latch543, %loop.body511
  %idx.7 = phi i128 [ 0, %loop.body511 ], [ %add545, %loop.latch543 ]
  %nocarry513 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter515 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry513, i128 0, i128 %i.1
  %nocarry516 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter515, align 8
  %struct_getter517 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry516, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter517, align 8
  %array_getter521 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %l.6, i128 %j.6, i128 %idx.7
  %nocarry522 = load i128, i128* %array_getter521, align 4
  %compress523 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter525 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %compress523, i128 0, i128 %i.1
  %compress526 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter525, align 8
  %struct_getter527 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress526, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter527, align 8
  %array_getter531 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %l.6, i128 %j.6, i128 %idx.7
  %compress532 = load i128, i128* %array_getter531, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress532, i128 %nocarry522, i1* @constraint.708)
  %ptr_getter533 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter535 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %ptr_getter533, i128 0, i128 %i.1
  %compress536 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter535, align 8
  %struct_getter537 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress536, i32 0, i32 5
  %fp12compress.in.read_input_outter538 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter537, align 8
  %compress542 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter538, i128 0, i128 %l.6, i128 %j.6, i128 %idx.7
  store i128 %nocarry522, i128* %compress542, align 4
  br label %loop.latch543

loop.latch543:                                    ; preds = %loop.body512
  %add545 = add i128 %idx.7, 1
  %mul548 = mul i128 3, %millerloopfp2.k.read_arg_inner
  %sub549 = sub i128 %mul548, 2
  %slt550 = icmp slt i128 %add545, %sub549
  br i1 %slt550, label %loop.body512, label %loop.exit551

loop.exit551:                                     ; preds = %loop.latch543
  br label %loop.latch552

loop.latch552:                                    ; preds = %loop.exit551
  %add554 = add i128 %j.6, 1
  %slt556 = icmp slt i128 %add554, 2
  br i1 %slt556, label %loop.body511, label %loop.exit557

loop.exit557:                                     ; preds = %loop.latch552
  br label %loop.latch558

loop.latch558:                                    ; preds = %loop.exit557
  %add560 = add i128 %l.6, 1
  %slt562 = icmp slt i128 %add560, 6
  br i1 %slt562, label %loop.body510, label %loop.exit563

loop.exit563:                                     ; preds = %loop.latch558
  %mul567 = mul i128 4, %millerloopfp2.n.read_arg_inner
  %add569 = add i128 %mul567, %call57
  %call571 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, i128 %add569, [256 x i128]* %millerloopfp2.q.read_arg_inner)
  %ptr_getter572 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %fdouble574 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %ptr_getter572, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12carrymodp* %call571, %struct_template_circuit_signedfp12carrymodp** %fdouble574, align 8
  br label %loop.body575

loop.body575:                                     ; preds = %loop.latch621, %loop.exit563
  %l.7 = phi i128 [ 0, %loop.exit563 ], [ %add623, %loop.latch621 ]
  br label %loop.body576

loop.body576:                                     ; preds = %loop.latch615, %loop.body575
  %j.7 = phi i128 [ 0, %loop.body575 ], [ %add617, %loop.latch615 ]
  br label %loop.body577

loop.body577:                                     ; preds = %loop.latch608, %loop.body576
  %idx.8 = phi i128 [ 0, %loop.body576 ], [ %add610, %loop.latch608 ]
  %compress578 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter580 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %compress578, i128 0, i128 %i.1
  %compress581 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter580, align 8
  %struct_getter582 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress581, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter582, align 8
  %array_getter586 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %l.7, i128 %j.7, i128 %idx.8
  %compress587 = load i128, i128* %array_getter586, align 4
  %fdouble588 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter590 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble588, i128 0, i128 %i.1
  %fdouble591 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter590, align 8
  %struct_getter592 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble591, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter592, align 8
  %array_getter596 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %l.7, i128 %j.7, i128 %idx.8
  %fdouble597 = load i128, i128* %array_getter596, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fdouble597, i128 %compress587, i1* @constraint.709)
  %ptr_getter598 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter600 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %ptr_getter598, i128 0, i128 %i.1
  %fdouble601 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter600, align 8
  %struct_getter602 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble601, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter603 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter602, align 8
  %fdouble607 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter603, i128 0, i128 %l.7, i128 %j.7, i128 %idx.8
  store i128 %compress587, i128* %fdouble607, align 4
  br label %loop.latch608

loop.latch608:                                    ; preds = %loop.body577
  %add610 = add i128 %idx.8, 1
  %slt613 = icmp slt i128 %add610, %millerloopfp2.k.read_arg_inner
  br i1 %slt613, label %loop.body577, label %loop.exit614

loop.exit614:                                     ; preds = %loop.latch608
  br label %loop.latch615

loop.latch615:                                    ; preds = %loop.exit614
  %add617 = add i128 %j.7, 1
  %slt619 = icmp slt i128 %add617, 2
  br i1 %slt619, label %loop.body576, label %loop.exit620

loop.exit620:                                     ; preds = %loop.latch615
  br label %loop.latch621

loop.latch621:                                    ; preds = %loop.exit620
  %add623 = add i128 %l.7, 1
  %slt625 = icmp slt i128 %add623, 6
  br i1 %slt625, label %loop.body575, label %loop.exit626

loop.exit626:                                     ; preds = %loop.latch621
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array, align 4
  %call630 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, [256 x i128]* %const_inline_array, [256 x i128]* %millerloopfp2.b.read_arg_inner, [256 x i128]* %millerloopfp2.q.read_arg_inner)
  %ptr_getter631 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %Pdouble633 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %ptr_getter631, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedoublefp2* %call630, %struct_template_circuit_ellipticcurvedoublefp2** %Pdouble633, align 8
  br label %loop.body634

loop.body634:                                     ; preds = %loop.latch678, %loop.exit626
  %j.8 = phi i128 [ 0, %loop.exit626 ], [ %add680, %loop.latch678 ]
  br label %loop.body635

loop.body635:                                     ; preds = %loop.latch671, %loop.body634
  %idx.9 = phi i128 [ 0, %loop.body634 ], [ %add673, %loop.latch671 ]
  br label %loop.body636

loop.body636:                                     ; preds = %loop.latch665, %loop.body635
  %l.8 = phi i128 [ 0, %loop.body635 ], [ %add667, %loop.latch665 ]
  %R637 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %add639 = add i128 %i.1, 1
  %array_getter643 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R637, i128 0, i128 %add639, i128 %j.8, i128 %l.8, i128 %idx.9
  %R644 = load i128, i128* %array_getter643, align 4
  %Pdouble645 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter647 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble645, i128 0, i128 %i.1
  %Pdouble648 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter647, align 8
  %struct_getter649 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble648, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter649, align 8
  %array_getter653 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %j.8, i128 %l.8, i128 %idx.9
  %Pdouble654 = load i128, i128* %array_getter653, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble654, i128 %R644, i1* @constraint.710)
  %ptr_getter655 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter657 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %ptr_getter655, i128 0, i128 %i.1
  %Pdouble658 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter657, align 8
  %struct_getter659 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble658, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter660 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter659, align 8
  %Pdouble664 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter660, i128 0, i128 %j.8, i128 %l.8, i128 %idx.9
  store i128 %R644, i128* %Pdouble664, align 4
  br label %loop.latch665

loop.latch665:                                    ; preds = %loop.body636
  %add667 = add i128 %l.8, 1
  %slt669 = icmp slt i128 %add667, 2
  br i1 %slt669, label %loop.body636, label %loop.exit670

loop.exit670:                                     ; preds = %loop.latch665
  br label %loop.latch671

loop.latch671:                                    ; preds = %loop.exit670
  %add673 = add i128 %idx.9, 1
  %slt676 = icmp slt i128 %add673, %millerloopfp2.k.read_arg_inner
  br i1 %slt676, label %loop.body635, label %loop.exit677

loop.exit677:                                     ; preds = %loop.latch671
  br label %loop.latch678

loop.latch678:                                    ; preds = %loop.exit677
  %add680 = add i128 %j.8, 1
  %slt682 = icmp slt i128 %add680, 2
  br i1 %slt682, label %loop.body634, label %loop.exit683

loop.exit683:                                     ; preds = %loop.latch678
  %Bits686 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter688 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits686, i128 0, i128 %i.1
  %Bits689 = load i128, i128* %array_getter688, align 4
  %eq690 = icmp eq i128 %Bits689, 0
  br i1 %eq690, label %if.true684, label %if.false685

if.true684:                                       ; preds = %loop.exit683
  br label %loop.body691

if.false685:                                      ; preds = %loop.exit683
  %call786 = call %struct_template_circuit_fp12multiplywithlineunequalfp2* @fn_template_build_fp12multiplywithlineunequalfp2(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, i128 %millerloopfp2.n.read_arg_inner, [256 x i128]* %millerloopfp2.q.read_arg_inner)
  %ptr_getter787 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %fadd789 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %ptr_getter787, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12multiplywithlineunequalfp2* %call786, %struct_template_circuit_fp12multiplywithlineunequalfp2** %fadd789, align 8
  br label %loop.body790

loop.body691:                                     ; preds = %loop.latch730, %if.true684
  %l.9 = phi i128 [ 0, %if.true684 ], [ %add732, %loop.latch730 ]
  br label %loop.body692

loop.body692:                                     ; preds = %loop.latch724, %loop.body691
  %j.9 = phi i128 [ 0, %loop.body691 ], [ %add726, %loop.latch724 ]
  br label %loop.body693

loop.body693:                                     ; preds = %loop.latch717, %loop.body692
  %idx.10 = phi i128 [ 0, %loop.body692 ], [ %add719, %loop.latch717 ]
  %fdouble694 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter696 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble694, i128 0, i128 %i.1
  %fdouble697 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter696, align 8
  %struct_getter698 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble697, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter698, align 8
  %array_getter702 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %l.9, i128 %j.9, i128 %idx.10
  %fdouble703 = load i128, i128* %array_getter702, align 4
  %f704 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %array_getter709 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f704, i128 0, i128 %i.1, i128 %l.9, i128 %j.9, i128 %idx.10
  %f710 = load i128, i128* %array_getter709, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f710, i128 %fdouble703, i1* @constraint.711)
  %ptr_getter711 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %f716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter711, i128 0, i128 %i.1, i128 %l.9, i128 %j.9, i128 %idx.10
  store i128 %fdouble703, i128* %f716, align 4
  br label %loop.latch717

loop.latch717:                                    ; preds = %loop.body693
  %add719 = add i128 %idx.10, 1
  %slt722 = icmp slt i128 %add719, %millerloopfp2.k.read_arg_inner
  br i1 %slt722, label %loop.body693, label %loop.exit723

loop.exit723:                                     ; preds = %loop.latch717
  br label %loop.latch724

loop.latch724:                                    ; preds = %loop.exit723
  %add726 = add i128 %j.9, 1
  %slt728 = icmp slt i128 %add726, 2
  br i1 %slt728, label %loop.body692, label %loop.exit729

loop.exit729:                                     ; preds = %loop.latch724
  br label %loop.latch730

loop.latch730:                                    ; preds = %loop.exit729
  %add732 = add i128 %l.9, 1
  %slt734 = icmp slt i128 %add732, 6
  br i1 %slt734, label %loop.body691, label %loop.exit735

loop.exit735:                                     ; preds = %loop.latch730
  br label %loop.body736

loop.body736:                                     ; preds = %loop.latch775, %loop.exit735
  %j.10 = phi i128 [ 0, %loop.exit735 ], [ %add777, %loop.latch775 ]
  br label %loop.body737

loop.body737:                                     ; preds = %loop.latch768, %loop.body736
  %idx.11 = phi i128 [ 0, %loop.body736 ], [ %add770, %loop.latch768 ]
  br label %loop.body738

loop.body738:                                     ; preds = %loop.latch762, %loop.body737
  %l.10 = phi i128 [ 0, %loop.body737 ], [ %add764, %loop.latch762 ]
  %Pdouble739 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter741 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble739, i128 0, i128 %i.1
  %Pdouble742 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter741, align 8
  %struct_getter743 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble742, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter743, align 8
  %array_getter747 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %j.10, i128 %l.10, i128 %idx.11
  %Pdouble748 = load i128, i128* %array_getter747, align 4
  %R749 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %array_getter754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R749, i128 0, i128 %i.1, i128 %j.10, i128 %l.10, i128 %idx.11
  %R755 = load i128, i128* %array_getter754, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R755, i128 %Pdouble748, i1* @constraint.712)
  %ptr_getter756 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %R761 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter756, i128 0, i128 %i.1, i128 %j.10, i128 %l.10, i128 %idx.11
  store i128 %Pdouble748, i128* %R761, align 4
  br label %loop.latch762

loop.latch762:                                    ; preds = %loop.body738
  %add764 = add i128 %l.10, 1
  %slt766 = icmp slt i128 %add764, 2
  br i1 %slt766, label %loop.body738, label %loop.exit767

loop.exit767:                                     ; preds = %loop.latch762
  br label %loop.latch768

loop.latch768:                                    ; preds = %loop.exit767
  %add770 = add i128 %idx.11, 1
  %slt773 = icmp slt i128 %add770, %millerloopfp2.k.read_arg_inner
  br i1 %slt773, label %loop.body737, label %loop.exit774

loop.exit774:                                     ; preds = %loop.latch768
  br label %loop.latch775

loop.latch775:                                    ; preds = %loop.exit774
  %add777 = add i128 %j.10, 1
  %slt779 = icmp slt i128 %add777, 2
  br i1 %slt779, label %loop.body736, label %loop.exit780

loop.exit780:                                     ; preds = %loop.latch775
  br label %if.exit1139

loop.body790:                                     ; preds = %loop.latch837, %if.false685
  %l.11 = phi i128 [ 0, %if.false685 ], [ %add839, %loop.latch837 ]
  br label %loop.body791

loop.body791:                                     ; preds = %loop.latch831, %loop.body790
  %j.11 = phi i128 [ 0, %loop.body790 ], [ %add833, %loop.latch831 ]
  br label %loop.body792

loop.body792:                                     ; preds = %loop.latch824, %loop.body791
  %idx.12 = phi i128 [ 0, %loop.body791 ], [ %add826, %loop.latch824 ]
  %fdouble793 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter795 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble793, i128 0, i128 %i.1
  %fdouble796 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter795, align 8
  %struct_getter797 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble796, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter798 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter797, align 8
  %array_getter802 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter798, i128 0, i128 %l.11, i128 %j.11, i128 %idx.12
  %fdouble803 = load i128, i128* %array_getter802, align 4
  %fadd804 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter806 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %fadd804, i128 0, i128 %curid.0
  %fadd807 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter806, align 8
  %struct_getter808 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd807, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter808, align 8
  %array_getter812 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_outter, i128 0, i128 %l.11, i128 %j.11, i128 %idx.12
  %fadd813 = load i128, i128* %array_getter812, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd813, i128 %fdouble803, i1* @constraint.713)
  %ptr_getter814 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter816 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %ptr_getter814, i128 0, i128 %curid.0
  %fadd817 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter816, align 8
  %struct_getter818 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd817, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_outter819 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter818, align 8
  %fadd823 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_outter819, i128 0, i128 %l.11, i128 %j.11, i128 %idx.12
  store i128 %fdouble803, i128* %fadd823, align 4
  br label %loop.latch824

loop.latch824:                                    ; preds = %loop.body792
  %add826 = add i128 %idx.12, 1
  %slt829 = icmp slt i128 %add826, %millerloopfp2.k.read_arg_inner
  br i1 %slt829, label %loop.body792, label %loop.exit830

loop.exit830:                                     ; preds = %loop.latch824
  br label %loop.latch831

loop.latch831:                                    ; preds = %loop.exit830
  %add833 = add i128 %j.11, 1
  %slt835 = icmp slt i128 %add833, 2
  br i1 %slt835, label %loop.body791, label %loop.exit836

loop.exit836:                                     ; preds = %loop.latch831
  br label %loop.latch837

loop.latch837:                                    ; preds = %loop.exit836
  %add839 = add i128 %l.11, 1
  %slt841 = icmp slt i128 %add839, 6
  br i1 %slt841, label %loop.body790, label %loop.exit842

loop.exit842:                                     ; preds = %loop.latch837
  br label %loop.body843

loop.body843:                                     ; preds = %loop.latch917, %loop.exit842
  %j.12 = phi i128 [ 0, %loop.exit842 ], [ %add919, %loop.latch917 ]
  br label %loop.body844

loop.body844:                                     ; preds = %loop.latch910, %loop.body843
  %idx.13 = phi i128 [ 0, %loop.body843 ], [ %add912, %loop.latch910 ]
  br label %loop.body845

loop.body845:                                     ; preds = %loop.latch904, %loop.body844
  %l.12 = phi i128 [ 0, %loop.body844 ], [ %add906, %loop.latch904 ]
  %Pdouble846 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter848 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble846, i128 0, i128 %i.1
  %Pdouble849 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter848, align 8
  %struct_getter850 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble849, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter851 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter850, align 8
  %array_getter855 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter851, i128 0, i128 %j.12, i128 %l.12, i128 %idx.13
  %Pdouble856 = load i128, i128* %array_getter855, align 4
  %fadd857 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter859 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %fadd857, i128 0, i128 %curid.0
  %fadd860 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter859, align 8
  %struct_getter861 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd860, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter861, align 8
  %array_getter865 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter, i128 0, i128 0, i128 %j.12, i128 %l.12, i128 %idx.13
  %fadd866 = load i128, i128* %array_getter865, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd866, i128 %Pdouble856, i1* @constraint.714)
  %ptr_getter867 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter869 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %ptr_getter867, i128 0, i128 %curid.0
  %fadd870 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter869, align 8
  %struct_getter871 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd870, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter872 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter871, align 8
  %fadd876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter872, i128 0, i128 0, i128 %j.12, i128 %l.12, i128 %idx.13
  store i128 %Pdouble856, i128* %fadd876, align 4
  %P877 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.p.declare_input, align 8
  %array_getter881 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P877, i128 0, i128 %j.12, i128 %l.12, i128 %idx.13
  %P882 = load i128, i128* %array_getter881, align 4
  %fadd883 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter885 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %fadd883, i128 0, i128 %curid.0
  %fadd886 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter885, align 8
  %struct_getter887 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd886, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter888 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter887, align 8
  %array_getter892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter888, i128 0, i128 1, i128 %j.12, i128 %l.12, i128 %idx.13
  %fadd893 = load i128, i128* %array_getter892, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd893, i128 %P882, i1* @constraint.715)
  %ptr_getter894 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter896 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %ptr_getter894, i128 0, i128 %curid.0
  %fadd897 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter896, align 8
  %struct_getter898 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd897, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter899 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter898, align 8
  %fadd903 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter899, i128 0, i128 1, i128 %j.12, i128 %l.12, i128 %idx.13
  store i128 %P882, i128* %fadd903, align 4
  br label %loop.latch904

loop.latch904:                                    ; preds = %loop.body845
  %add906 = add i128 %l.12, 1
  %slt908 = icmp slt i128 %add906, 2
  br i1 %slt908, label %loop.body845, label %loop.exit909

loop.exit909:                                     ; preds = %loop.latch904
  br label %loop.latch910

loop.latch910:                                    ; preds = %loop.exit909
  %add912 = add i128 %idx.13, 1
  %slt915 = icmp slt i128 %add912, %millerloopfp2.k.read_arg_inner
  br i1 %slt915, label %loop.body844, label %loop.exit916

loop.exit916:                                     ; preds = %loop.latch910
  br label %loop.latch917

loop.latch917:                                    ; preds = %loop.exit916
  %add919 = add i128 %j.12, 1
  %slt921 = icmp slt i128 %add919, 2
  br i1 %slt921, label %loop.body843, label %loop.exit922

loop.exit922:                                     ; preds = %loop.latch917
  br label %loop.body923

loop.body923:                                     ; preds = %loop.latch955, %loop.exit922
  %eps.1 = phi i128 [ 0, %loop.exit922 ], [ %add957, %loop.latch955 ]
  br label %loop.body924

loop.body924:                                     ; preds = %loop.latch948, %loop.body923
  %idx.14 = phi i128 [ 0, %loop.body923 ], [ %add950, %loop.latch948 ]
  %Q925 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloopfp2.q.declare_input, align 8
  %array_getter928 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q925, i128 0, i128 %eps.1, i128 %idx.14
  %Q929 = load i128, i128* %array_getter928, align 4
  %fadd930 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter932 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %fadd930, i128 0, i128 %curid.0
  %fadd933 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter932, align 8
  %struct_getter934 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd933, i32 0, i32 7
  %fp12multiplywithlineunequalfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter934, align 8
  %array_getter937 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp12multiplywithlineunequalfp2.q.read_input_outter, i128 0, i128 %eps.1, i128 %idx.14
  %fadd938 = load i128, i128* %array_getter937, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd938, i128 %Q929, i1* @constraint.716)
  %ptr_getter939 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter941 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %ptr_getter939, i128 0, i128 %curid.0
  %fadd942 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter941, align 8
  %struct_getter943 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd942, i32 0, i32 7
  %fp12multiplywithlineunequalfp2.q.read_input_outter944 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter943, align 8
  %fadd947 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp12multiplywithlineunequalfp2.q.read_input_outter944, i128 0, i128 %eps.1, i128 %idx.14
  store i128 %Q929, i128* %fadd947, align 4
  br label %loop.latch948

loop.latch948:                                    ; preds = %loop.body924
  %add950 = add i128 %idx.14, 1
  %slt953 = icmp slt i128 %add950, %millerloopfp2.k.read_arg_inner
  br i1 %slt953, label %loop.body924, label %loop.exit954

loop.exit954:                                     ; preds = %loop.latch948
  br label %loop.latch955

loop.latch955:                                    ; preds = %loop.exit954
  %add957 = add i128 %eps.1, 1
  %slt959 = icmp slt i128 %add957, 2
  br i1 %slt959, label %loop.body923, label %loop.exit960

loop.exit960:                                     ; preds = %loop.latch955
  br label %loop.body961

loop.body961:                                     ; preds = %loop.latch1000, %loop.exit960
  %l.13 = phi i128 [ 0, %loop.exit960 ], [ %add1002, %loop.latch1000 ]
  br label %loop.body962

loop.body962:                                     ; preds = %loop.latch994, %loop.body961
  %j.13 = phi i128 [ 0, %loop.body961 ], [ %add996, %loop.latch994 ]
  br label %loop.body963

loop.body963:                                     ; preds = %loop.latch987, %loop.body962
  %idx.15 = phi i128 [ 0, %loop.body962 ], [ %add989, %loop.latch987 ]
  %fadd964 = load [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd, align 8
  %array_getter966 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*], [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]* %fadd964, i128 0, i128 %curid.0
  %fadd967 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter966, align 8
  %struct_getter968 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd967, i32 0, i32 8
  %fp12multiplywithlineunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter968, align 8
  %array_getter972 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.out.read_output_outter, i128 0, i128 %l.13, i128 %j.13, i128 %idx.15
  %fadd973 = load i128, i128* %array_getter972, align 4
  %f974 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %array_getter979 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f974, i128 0, i128 %i.1, i128 %l.13, i128 %j.13, i128 %idx.15
  %f980 = load i128, i128* %array_getter979, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f980, i128 %fadd973, i1* @constraint.717)
  %ptr_getter981 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %f986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter981, i128 0, i128 %i.1, i128 %l.13, i128 %j.13, i128 %idx.15
  store i128 %fadd973, i128* %f986, align 4
  br label %loop.latch987

loop.latch987:                                    ; preds = %loop.body963
  %add989 = add i128 %idx.15, 1
  %slt992 = icmp slt i128 %add989, %millerloopfp2.k.read_arg_inner
  br i1 %slt992, label %loop.body963, label %loop.exit993

loop.exit993:                                     ; preds = %loop.latch987
  br label %loop.latch994

loop.latch994:                                    ; preds = %loop.exit993
  %add996 = add i128 %j.13, 1
  %slt998 = icmp slt i128 %add996, 2
  br i1 %slt998, label %loop.body962, label %loop.exit999

loop.exit999:                                     ; preds = %loop.latch994
  br label %loop.latch1000

loop.latch1000:                                   ; preds = %loop.exit999
  %add1002 = add i128 %l.13, 1
  %slt1004 = icmp slt i128 %add1002, 6
  br i1 %slt1004, label %loop.body961, label %loop.exit1005

loop.exit1005:                                    ; preds = %loop.latch1000
  %call1009 = call %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %millerloopfp2.n.read_arg_inner, i128 %millerloopfp2.k.read_arg_inner, [256 x i128]* %millerloopfp2.q.read_arg_inner)
  %ptr_getter1010 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %Padd1012 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %ptr_getter1010, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddunequalfp2* %call1009, %struct_template_circuit_ellipticcurveaddunequalfp2** %Padd1012, align 8
  br label %loop.body1013

loop.body1013:                                    ; preds = %loop.latch1086, %loop.exit1005
  %j.14 = phi i128 [ 0, %loop.exit1005 ], [ %add1088, %loop.latch1086 ]
  br label %loop.body1014

loop.body1014:                                    ; preds = %loop.latch1079, %loop.body1013
  %idx.16 = phi i128 [ 0, %loop.body1013 ], [ %add1081, %loop.latch1079 ]
  br label %loop.body1015

loop.body1015:                                    ; preds = %loop.latch1073, %loop.body1014
  %l.14 = phi i128 [ 0, %loop.body1014 ], [ %add1075, %loop.latch1073 ]
  %Pdouble1016 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter1018 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble1016, i128 0, i128 %i.1
  %Pdouble1019 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter1018, align 8
  %struct_getter1020 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble1019, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter1021 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1020, align 8
  %array_getter1025 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter1021, i128 0, i128 %j.14, i128 %l.14, i128 %idx.16
  %Pdouble1026 = load i128, i128* %array_getter1025, align 4
  %Padd1027 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter1029 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd1027, i128 0, i128 %curid.0
  %Padd1030 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1029, align 8
  %struct_getter1031 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1030, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1031, align 8
  %array_getter1035 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter, i128 0, i128 %j.14, i128 %l.14, i128 %idx.16
  %Padd1036 = load i128, i128* %array_getter1035, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd1036, i128 %Pdouble1026, i1* @constraint.718)
  %ptr_getter1037 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter1039 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %ptr_getter1037, i128 0, i128 %curid.0
  %Padd1040 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1039, align 8
  %struct_getter1041 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1040, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter1042 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1041, align 8
  %Padd1046 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter1042, i128 0, i128 %j.14, i128 %l.14, i128 %idx.16
  store i128 %Pdouble1026, i128* %Padd1046, align 4
  %P1047 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.p.declare_input, align 8
  %array_getter1051 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P1047, i128 0, i128 %j.14, i128 %l.14, i128 %idx.16
  %P1052 = load i128, i128* %array_getter1051, align 4
  %Padd1053 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter1055 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd1053, i128 0, i128 %curid.0
  %Padd1056 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1055, align 8
  %struct_getter1057 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1056, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1057, align 8
  %array_getter1061 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter, i128 0, i128 %j.14, i128 %l.14, i128 %idx.16
  %Padd1062 = load i128, i128* %array_getter1061, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd1062, i128 %P1052, i1* @constraint.719)
  %ptr_getter1063 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter1065 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %ptr_getter1063, i128 0, i128 %curid.0
  %Padd1066 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1065, align 8
  %struct_getter1067 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1066, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter1068 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1067, align 8
  %Padd1072 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter1068, i128 0, i128 %j.14, i128 %l.14, i128 %idx.16
  store i128 %P1052, i128* %Padd1072, align 4
  br label %loop.latch1073

loop.latch1073:                                   ; preds = %loop.body1015
  %add1075 = add i128 %l.14, 1
  %slt1077 = icmp slt i128 %add1075, 2
  br i1 %slt1077, label %loop.body1015, label %loop.exit1078

loop.exit1078:                                    ; preds = %loop.latch1073
  br label %loop.latch1079

loop.latch1079:                                   ; preds = %loop.exit1078
  %add1081 = add i128 %idx.16, 1
  %slt1084 = icmp slt i128 %add1081, %millerloopfp2.k.read_arg_inner
  br i1 %slt1084, label %loop.body1014, label %loop.exit1085

loop.exit1085:                                    ; preds = %loop.latch1079
  br label %loop.latch1086

loop.latch1086:                                   ; preds = %loop.exit1085
  %add1088 = add i128 %j.14, 1
  %slt1090 = icmp slt i128 %add1088, 2
  br i1 %slt1090, label %loop.body1013, label %loop.exit1091

loop.exit1091:                                    ; preds = %loop.latch1086
  br label %loop.body1092

loop.body1092:                                    ; preds = %loop.latch1131, %loop.exit1091
  %j.15 = phi i128 [ 0, %loop.exit1091 ], [ %add1133, %loop.latch1131 ]
  br label %loop.body1093

loop.body1093:                                    ; preds = %loop.latch1124, %loop.body1092
  %idx.17 = phi i128 [ 0, %loop.body1092 ], [ %add1126, %loop.latch1124 ]
  br label %loop.body1094

loop.body1094:                                    ; preds = %loop.latch1118, %loop.body1093
  %l.15 = phi i128 [ 0, %loop.body1093 ], [ %add1120, %loop.latch1118 ]
  %Padd1095 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter1097 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd1095, i128 0, i128 %curid.0
  %Padd1098 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1097, align 8
  %struct_getter1099 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1098, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1099, align 8
  %array_getter1103 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter, i128 0, i128 %j.15, i128 %l.15, i128 %idx.17
  %Padd1104 = load i128, i128* %array_getter1103, align 4
  %R1105 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %array_getter1110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R1105, i128 0, i128 %i.1, i128 %j.15, i128 %l.15, i128 %idx.17
  %R1111 = load i128, i128* %array_getter1110, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R1111, i128 %Padd1104, i1* @constraint.720)
  %ptr_getter1112 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %R1117 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter1112, i128 0, i128 %i.1, i128 %j.15, i128 %l.15, i128 %idx.17
  store i128 %Padd1104, i128* %R1117, align 4
  br label %loop.latch1118

loop.latch1118:                                   ; preds = %loop.body1094
  %add1120 = add i128 %l.15, 1
  %slt1122 = icmp slt i128 %add1120, 2
  br i1 %slt1122, label %loop.body1094, label %loop.exit1123

loop.exit1123:                                    ; preds = %loop.latch1118
  br label %loop.latch1124

loop.latch1124:                                   ; preds = %loop.exit1123
  %add1126 = add i128 %idx.17, 1
  %slt1129 = icmp slt i128 %add1126, %millerloopfp2.k.read_arg_inner
  br i1 %slt1129, label %loop.body1093, label %loop.exit1130

loop.exit1130:                                    ; preds = %loop.latch1124
  br label %loop.latch1131

loop.latch1131:                                   ; preds = %loop.exit1130
  %add1133 = add i128 %j.15, 1
  %slt1135 = icmp slt i128 %add1133, 2
  br i1 %slt1135, label %loop.body1092, label %loop.exit1136

loop.exit1136:                                    ; preds = %loop.latch1131
  %add1138 = add i128 %curid.0, 1
  br label %if.exit1139

if.exit1139:                                      ; preds = %loop.exit1136, %loop.exit780
  %curid.1 = phi i128 [ %curid.0, %loop.exit780 ], [ %add1138, %loop.exit1136 ]
  br label %if.exit1140

if.exit1140:                                      ; preds = %if.exit1139, %loop.exit194
  %curid.2 = phi i128 [ %curid.0, %loop.exit194 ], [ %curid.1, %if.exit1139 ]
  br label %loop.latch1141

loop.latch1141:                                   ; preds = %if.exit1140
  %sub1143 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub1143, 0
  br i1 %sge, label %loop.body89, label %loop.exit1145

loop.exit1145:                                    ; preds = %loop.latch1141
  br label %loop.body1146

loop.body1146:                                    ; preds = %loop.latch1179, %loop.exit1145
  %l.16 = phi i128 [ 0, %loop.exit1145 ], [ %add1181, %loop.latch1179 ]
  br label %loop.body1147

loop.body1147:                                    ; preds = %loop.latch1173, %loop.body1146
  %j.16 = phi i128 [ 0, %loop.body1146 ], [ %add1175, %loop.latch1173 ]
  br label %loop.body1148

loop.body1148:                                    ; preds = %loop.latch1166, %loop.body1147
  %idx.18 = phi i128 [ 0, %loop.body1147 ], [ %add1168, %loop.latch1166 ]
  %f1149 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %array_getter1153 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f1149, i128 0, i128 0, i128 %l.16, i128 %j.16, i128 %idx.18
  %f1154 = load i128, i128* %array_getter1153, align 4
  %out1155 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.out.declare_output, align 8
  %array_getter1159 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out1155, i128 0, i128 %l.16, i128 %j.16, i128 %idx.18
  %out1160 = load i128, i128* %array_getter1159, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out1160, i128 %f1154, i1* @constraint.721)
  %ptr_getter1161 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.out.declare_output, align 8
  %out1165 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter1161, i128 0, i128 %l.16, i128 %j.16, i128 %idx.18
  store i128 %f1154, i128* %out1165, align 4
  br label %loop.latch1166

loop.latch1166:                                   ; preds = %loop.body1148
  %add1168 = add i128 %idx.18, 1
  %slt1171 = icmp slt i128 %add1168, %millerloopfp2.k.read_arg_inner
  br i1 %slt1171, label %loop.body1148, label %loop.exit1172

loop.exit1172:                                    ; preds = %loop.latch1166
  br label %loop.latch1173

loop.latch1173:                                   ; preds = %loop.exit1172
  %add1175 = add i128 %j.16, 1
  %slt1177 = icmp slt i128 %add1175, 2
  br i1 %slt1177, label %loop.body1147, label %loop.exit1178

loop.exit1178:                                    ; preds = %loop.latch1173
  br label %loop.latch1179

loop.latch1179:                                   ; preds = %loop.exit1178
  %add1181 = add i128 %l.16, 1
  %slt1183 = icmp slt i128 %add1181, 6
  br i1 %slt1183, label %loop.body1146, label %loop.exit1184

loop.exit1184:                                    ; preds = %loop.latch1179
  br label %loop.body1185

loop.body1185:                                    ; preds = %loop.latch1218, %loop.exit1184
  %j.17 = phi i128 [ 0, %loop.exit1184 ], [ %add1220, %loop.latch1218 ]
  br label %loop.body1186

loop.body1186:                                    ; preds = %loop.latch1211, %loop.body1185
  %idx.19 = phi i128 [ 0, %loop.body1185 ], [ %add1213, %loop.latch1211 ]
  br label %loop.body1187

loop.body1187:                                    ; preds = %loop.latch1205, %loop.body1186
  %l.17 = phi i128 [ 0, %loop.body1186 ], [ %add1207, %loop.latch1205 ]
  %R1188 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %array_getter1192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R1188, i128 0, i128 0, i128 %j.17, i128 %l.17, i128 %idx.19
  %R1193 = load i128, i128* %array_getter1192, align 4
  %xP1194 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.xp.declare_output, align 8
  %array_getter1198 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %xP1194, i128 0, i128 %j.17, i128 %l.17, i128 %idx.19
  %xP1199 = load i128, i128* %array_getter1198, align 4
  call void @fn_intrinsic_utils_constraint(i128 %xP1199, i128 %R1193, i1* @constraint.722)
  %ptr_getter1200 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.xp.declare_output, align 8
  %xP1204 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter1200, i128 0, i128 %j.17, i128 %l.17, i128 %idx.19
  store i128 %R1193, i128* %xP1204, align 4
  br label %loop.latch1205

loop.latch1205:                                   ; preds = %loop.body1187
  %add1207 = add i128 %l.17, 1
  %slt1209 = icmp slt i128 %add1207, 2
  br i1 %slt1209, label %loop.body1187, label %loop.exit1210

loop.exit1210:                                    ; preds = %loop.latch1205
  br label %loop.latch1211

loop.latch1211:                                   ; preds = %loop.exit1210
  %add1213 = add i128 %idx.19, 1
  %slt1216 = icmp slt i128 %add1213, %millerloopfp2.k.read_arg_inner
  br i1 %slt1216, label %loop.body1186, label %loop.exit1217

loop.exit1217:                                    ; preds = %loop.latch1211
  br label %loop.latch1218

loop.latch1218:                                   ; preds = %loop.exit1217
  %add1220 = add i128 %j.17, 1
  %slt1222 = icmp slt i128 %add1220, 2
  br i1 %slt1222, label %loop.body1185, label %loop.exit1223

loop.exit1223:                                    ; preds = %loop.latch1218
  br label %arraydim

arraydim:                                         ; preds = %loop.exit1223
  %ptr_cast = bitcast [256 x %struct_template_circuit_fp12compress*]** %compress to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %BitLength.1)
  %ptr_cast1224 = bitcast [256 x %struct_template_circuit_linefunctionequalfp2*]** %line to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1224, i128 %BitLength.1)
  %ptr_cast1225 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1225, i128 %BitLength.1, i128 2, i128 2, i128 %millerloopfp2.k.read_arg_inner)
  %ptr_cast1226 = bitcast [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]** %fadd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1226, i128 %SigBits.1)
  %ptr_cast1227 = bitcast [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1227, i128 %BitLength.1)
  %ptr_cast1228 = bitcast [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1228, i128 %SigBits.1)
  %ptr_cast1229 = bitcast [256 x [256 x [256 x i128]]]** %millerloopfp2.xp.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1229, i128 2, i128 2, i128 %millerloopfp2.k.read_arg_inner)
  %ptr_cast1230 = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1230, i128 250)
  %ptr_cast1231 = bitcast [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1231, i128 %BitLength.1)
  %ptr_cast1232 = bitcast [256 x [256 x [256 x i128]]]** %millerloopfp2.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1232, i128 2, i128 2, i128 %millerloopfp2.k.read_arg_inner)
  %ptr_cast1233 = bitcast [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1233, i128 %BitLength.1)
  %ptr_cast1234 = bitcast [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1234, i128 %BitLength.1)
  %ptr_cast1235 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1235, i128 %BitLength.1, i128 6, i128 2, i128 %millerloopfp2.k.read_arg_inner)
  %ptr_cast1236 = bitcast [256 x [256 x [256 x i128]]]** %millerloopfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1236, i128 6, i128 2, i128 %millerloopfp2.k.read_arg_inner)
  %ptr_cast1237 = bitcast [256 x [256 x i128]]** %millerloopfp2.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1237, i128 2, i128 %millerloopfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %R1238 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.declare_inter, align 8
  %millerloopfp2.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 7
  store [256 x [256 x [256 x [256 x i128]]]]* %R1238, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.r.write_inter_inner, align 8
  %f1239 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.declare_inter, align 8
  %millerloopfp2.f.write_inter_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 8
  store [256 x [256 x [256 x [256 x i128]]]]* %f1239, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2.f.write_inter_inner, align 8
  %out1240 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.out.declare_output, align 8
  %millerloopfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 9
  store [256 x [256 x [256 x i128]]]* %out1240, [256 x [256 x [256 x i128]]]** %millerloopfp2.out.write_output_inner, align 8
  %xP1241 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2.xp.declare_output, align 8
  %millerloopfp2.xp.write_output_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %0, i32 0, i32 10
  store [256 x [256 x [256 x i128]]]* %xP1241, [256 x [256 x [256 x i128]]]** %millerloopfp2.xp.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_millerloopfp2* @fn_template_build_millerloopfp2(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_millerloopfp2 = alloca %struct_template_circuit_millerloopfp2, align 8
  %millerloopfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %struct_template_circuit_millerloopfp2, i32 0, i32 0
  store i128 %0, i128* %millerloopfp2.n.write_arg_inner, align 4
  %millerloopfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %struct_template_circuit_millerloopfp2, i32 0, i32 1
  store i128 %1, i128* %millerloopfp2.k.write_arg_inner, align 4
  %millerloopfp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %struct_template_circuit_millerloopfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %millerloopfp2.b.write_arg_inner, align 8
  %millerloopfp2.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %struct_template_circuit_millerloopfp2, i32 0, i32 3
  store i128 %3, i128* %millerloopfp2.x.write_arg_inner, align 4
  %millerloopfp2.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %struct_template_circuit_millerloopfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %millerloopfp2.q.write_arg_inner, align 8
  ret %struct_template_circuit_millerloopfp2* %struct_template_circuit_millerloopfp2
}

define void @fn_template_init_ellipticcurvescalarmultiplyunequalfp2(%struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 0
  %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 1
  %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 2
  %ellipticcurvescalarmultiplyunequalfp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 3
  %ellipticcurvescalarmultiplyunequalfp2.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 4
  %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 5
  %ellipticcurvescalarmultiplyunequalfp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %ellipticcurvescalarmultiplyunequalfp2.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyunequalfp2.in.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.in.declare_input, align 8
  %Bits = alloca [256 x i128]*, align 8
  %Bits6 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits6, [256 x i128]** %Bits, align 8
  %idx7 = call i128 @fn_intrinsic_utils_init()
  %BitLength8 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %R, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %ellipticcurvescalarmultiplyunequalfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall9 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.declare_output, align 8
  %add_exception = alloca [256 x %struct_template_circuit_fp2isequal*]*, align 8
  %add_exception10 = alloca [256 x %struct_template_circuit_fp2isequal*], align 8
  store [256 x %struct_template_circuit_fp2isequal*]* %add_exception10, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %Pdouble = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, align 8
  %Pdouble11 = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*], align 8
  store [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble11, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %j12 = call i128 @fn_intrinsic_utils_init()
  %curid13 = call i128 @fn_intrinsic_utils_init()
  %SigBits14 = call i128 @fn_intrinsic_utils_init()
  %Padd = alloca [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, align 8
  %Padd15 = alloca [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], align 8
  store [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd15, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %i16 = call i128 @fn_intrinsic_utils_init()
  %LOGK17 = call i128 @fn_intrinsic_utils_init()
  %l18 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add31, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiplyunequalfp2.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits23 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits23, align 4
  %Bits24 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits24, i128 0, i128 %i.0
  %Bits26 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits26, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add29 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add29, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add31 = add i128 %i.0, 1
  %slt = icmp slt i128 %add31, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch406, %loop.exit
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch406 ]
  %i.1 = phi i128 [ %sub, %loop.exit ], [ %sub408, %loop.latch406 ]
  %sub44 = sub i128 %BitLength.1, 1
  %eq45 = icmp eq i128 %i.1, %sub44
  br i1 %eq45, label %if.true40, label %if.false41

if.true40:                                        ; preds = %loop.body39
  br label %loop.body46

if.false41:                                       ; preds = %loop.body39
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array, align 4
  %call87 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner, [256 x i128]* %const_inline_array, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner)
  %ptr_getter88 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %Pdouble90 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %ptr_getter88, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedoublefp2* %call87, %struct_template_circuit_ellipticcurvedoublefp2** %Pdouble90, align 8
  br label %loop.body91

loop.body46:                                      ; preds = %loop.latch80, %if.true40
  %j.0 = phi i128 [ 0, %if.true40 ], [ %add82, %loop.latch80 ]
  br label %loop.body47

loop.body47:                                      ; preds = %loop.latch73, %loop.body46
  %idx.0 = phi i128 [ 0, %loop.body46 ], [ %add75, %loop.latch73 ]
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch67, %loop.body47
  %l.0 = phi i128 [ 0, %loop.body47 ], [ %add69, %loop.latch67 ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.in.declare_input, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  %in53 = load i128, i128* %array_getter52, align 4
  %R54 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %array_getter59 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R54, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.0
  %R60 = load i128, i128* %array_getter59, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R60, i128 %in53, i1* @constraint.723)
  %ptr_getter61 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %R66 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter61, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.0
  store i128 %in53, i128* %R66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body48
  %add69 = add i128 %l.0, 1
  %slt71 = icmp slt i128 %add69, 2
  br i1 %slt71, label %loop.body48, label %loop.exit72

loop.exit72:                                      ; preds = %loop.latch67
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.exit72
  %add75 = add i128 %idx.0, 1
  %slt78 = icmp slt i128 %add75, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt78, label %loop.body47, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.exit79
  %add82 = add i128 %j.0, 1
  %slt84 = icmp slt i128 %add82, 2
  br i1 %slt84, label %loop.body46, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch80
  br label %if.exit405

loop.body91:                                      ; preds = %loop.latch135, %if.false41
  %j.1 = phi i128 [ 0, %if.false41 ], [ %add137, %loop.latch135 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch128, %loop.body91
  %idx.1 = phi i128 [ 0, %loop.body91 ], [ %add130, %loop.latch128 ]
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch122, %loop.body92
  %l.1 = phi i128 [ 0, %loop.body92 ], [ %add124, %loop.latch122 ]
  %R94 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %add96 = add i128 %i.1, 1
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R94, i128 0, i128 %add96, i128 %j.1, i128 %l.1, i128 %idx.1
  %R101 = load i128, i128* %array_getter100, align 4
  %Pdouble102 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter104 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble102, i128 0, i128 %i.1
  %Pdouble105 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter104, align 8
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble105, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter106, align 8
  %array_getter110 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  %Pdouble111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble111, i128 %R101, i1* @constraint.724)
  %ptr_getter112 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter114 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %ptr_getter112, i128 0, i128 %i.1
  %Pdouble115 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter114, align 8
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble115, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter117 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter116, align 8
  %Pdouble121 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter117, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  store i128 %R101, i128* %Pdouble121, align 4
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.body93
  %add124 = add i128 %l.1, 1
  %slt126 = icmp slt i128 %add124, 2
  br i1 %slt126, label %loop.body93, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch122
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %idx.1, 1
  %slt133 = icmp slt i128 %add130, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt133, label %loop.body92, label %loop.exit134

loop.exit134:                                     ; preds = %loop.latch128
  br label %loop.latch135

loop.latch135:                                    ; preds = %loop.exit134
  %add137 = add i128 %j.1, 1
  %slt139 = icmp slt i128 %add137, 2
  br i1 %slt139, label %loop.body91, label %loop.exit140

loop.exit140:                                     ; preds = %loop.latch135
  %Bits143 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter145 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits143, i128 0, i128 %i.1
  %Bits146 = load i128, i128* %array_getter145, align 4
  %eq147 = icmp eq i128 %Bits146, 0
  br i1 %eq147, label %if.true141, label %if.false142

if.true141:                                       ; preds = %loop.exit140
  br label %loop.body148

if.false142:                                      ; preds = %loop.exit140
  %call196 = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner)
  %ptr_getter197 = load [256 x %struct_template_circuit_fp2isequal*]*, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %add_exception199 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %ptr_getter197, i128 0, i128 %curid.0
  store %struct_template_circuit_fp2isequal* %call196, %struct_template_circuit_fp2isequal** %add_exception199, align 8
  br label %loop.body200

loop.body148:                                     ; preds = %loop.latch187, %if.true141
  %j.2 = phi i128 [ 0, %if.true141 ], [ %add189, %loop.latch187 ]
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch180, %loop.body148
  %idx.2 = phi i128 [ 0, %loop.body148 ], [ %add182, %loop.latch180 ]
  br label %loop.body150

loop.body150:                                     ; preds = %loop.latch174, %loop.body149
  %l.2 = phi i128 [ 0, %loop.body149 ], [ %add176, %loop.latch174 ]
  %Pdouble151 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter153 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble151, i128 0, i128 %i.1
  %Pdouble154 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter153, align 8
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble154, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter155, align 8
  %array_getter159 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %j.2, i128 %l.2, i128 %idx.2
  %Pdouble160 = load i128, i128* %array_getter159, align 4
  %R161 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %array_getter166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R161, i128 0, i128 %i.1, i128 %j.2, i128 %l.2, i128 %idx.2
  %R167 = load i128, i128* %array_getter166, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R167, i128 %Pdouble160, i1* @constraint.725)
  %ptr_getter168 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %R173 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter168, i128 0, i128 %i.1, i128 %j.2, i128 %l.2, i128 %idx.2
  store i128 %Pdouble160, i128* %R173, align 4
  br label %loop.latch174

loop.latch174:                                    ; preds = %loop.body150
  %add176 = add i128 %l.2, 1
  %slt178 = icmp slt i128 %add176, 2
  br i1 %slt178, label %loop.body150, label %loop.exit179

loop.exit179:                                     ; preds = %loop.latch174
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.exit179
  %add182 = add i128 %idx.2, 1
  %slt185 = icmp slt i128 %add182, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt185, label %loop.body149, label %loop.exit186

loop.exit186:                                     ; preds = %loop.latch180
  br label %loop.latch187

loop.latch187:                                    ; preds = %loop.exit186
  %add189 = add i128 %j.2, 1
  %slt191 = icmp slt i128 %add189, 2
  br i1 %slt191, label %loop.body148, label %loop.exit192

loop.exit192:                                     ; preds = %loop.latch187
  br label %if.exit404

loop.body200:                                     ; preds = %loop.latch260, %if.false142
  %j.3 = phi i128 [ 0, %if.false142 ], [ %add262, %loop.latch260 ]
  br label %loop.body201

loop.body201:                                     ; preds = %loop.latch253, %loop.body200
  %idx.3 = phi i128 [ 0, %loop.body200 ], [ %add255, %loop.latch253 ]
  %Pdouble202 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter204 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble202, i128 0, i128 %i.1
  %Pdouble205 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter204, align 8
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble205, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter207 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter206, align 8
  %array_getter210 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter207, i128 0, i128 0, i128 %j.3, i128 %idx.3
  %Pdouble211 = load i128, i128* %array_getter210, align 4
  %add_exception212 = load [256 x %struct_template_circuit_fp2isequal*]*, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %array_getter214 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception212, i128 0, i128 %curid.0
  %add_exception215 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter214, align 8
  %struct_getter216 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception215, i32 0, i32 3
  %fp2isequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter216, align 8
  %array_getter219 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter, i128 0, i128 %j.3, i128 %idx.3
  %add_exception220 = load i128, i128* %array_getter219, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add_exception220, i128 %Pdouble211, i1* @constraint.726)
  %ptr_getter221 = load [256 x %struct_template_circuit_fp2isequal*]*, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %array_getter223 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %ptr_getter221, i128 0, i128 %curid.0
  %add_exception224 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter223, align 8
  %struct_getter225 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception224, i32 0, i32 3
  %fp2isequal.a.read_input_outter226 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter225, align 8
  %add_exception229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter226, i128 0, i128 %j.3, i128 %idx.3
  store i128 %Pdouble211, i128* %add_exception229, align 4
  %in230 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.in.declare_input, align 8
  %array_getter233 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in230, i128 0, i128 0, i128 %j.3, i128 %idx.3
  %in234 = load i128, i128* %array_getter233, align 4
  %add_exception235 = load [256 x %struct_template_circuit_fp2isequal*]*, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %array_getter237 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception235, i128 0, i128 %curid.0
  %add_exception238 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter237, align 8
  %struct_getter239 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception238, i32 0, i32 4
  %fp2isequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter239, align 8
  %array_getter242 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter, i128 0, i128 %j.3, i128 %idx.3
  %add_exception243 = load i128, i128* %array_getter242, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add_exception243, i128 %in234, i1* @constraint.727)
  %ptr_getter244 = load [256 x %struct_template_circuit_fp2isequal*]*, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %array_getter246 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %ptr_getter244, i128 0, i128 %curid.0
  %add_exception247 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter246, align 8
  %struct_getter248 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception247, i32 0, i32 4
  %fp2isequal.b.read_input_outter249 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter248, align 8
  %add_exception252 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter249, i128 0, i128 %j.3, i128 %idx.3
  store i128 %in234, i128* %add_exception252, align 4
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.body201
  %add255 = add i128 %idx.3, 1
  %slt258 = icmp slt i128 %add255, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt258, label %loop.body201, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch253
  br label %loop.latch260

loop.latch260:                                    ; preds = %loop.exit259
  %add262 = add i128 %j.3, 1
  %slt264 = icmp slt i128 %add262, 2
  br i1 %slt264, label %loop.body200, label %loop.exit265

loop.exit265:                                     ; preds = %loop.latch260
  %add_exception266 = load [256 x %struct_template_circuit_fp2isequal*]*, [256 x %struct_template_circuit_fp2isequal*]** %add_exception, align 8
  %array_getter268 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception266, i128 0, i128 %curid.0
  %add_exception269 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter268, align 8
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception269, i32 0, i32 5
  %fp2isequal.out.read_output_outter = load i128, i128* %struct_getter270, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fp2isequal.out.read_output_outter, i128 0, i1* @constraint.728)
  %call274 = call %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner)
  %ptr_getter275 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %Padd277 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %ptr_getter275, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddunequalfp2* %call274, %struct_template_circuit_ellipticcurveaddunequalfp2** %Padd277, align 8
  br label %loop.body278

loop.body278:                                     ; preds = %loop.latch351, %loop.exit265
  %j.4 = phi i128 [ 0, %loop.exit265 ], [ %add353, %loop.latch351 ]
  br label %loop.body279

loop.body279:                                     ; preds = %loop.latch345, %loop.body278
  %l.3 = phi i128 [ 0, %loop.body278 ], [ %add347, %loop.latch345 ]
  br label %loop.body280

loop.body280:                                     ; preds = %loop.latch338, %loop.body279
  %idx.4 = phi i128 [ 0, %loop.body279 ], [ %add340, %loop.latch338 ]
  %Pdouble281 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter283 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble281, i128 0, i128 %i.1
  %Pdouble284 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter283, align 8
  %struct_getter285 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble284, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter286 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter285, align 8
  %array_getter290 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter286, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %Pdouble291 = load i128, i128* %array_getter290, align 4
  %Padd292 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter294 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd292, i128 0, i128 %curid.0
  %Padd295 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter294, align 8
  %struct_getter296 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd295, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter296, align 8
  %array_getter300 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %Padd301 = load i128, i128* %array_getter300, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd301, i128 %Pdouble291, i1* @constraint.729)
  %ptr_getter302 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter304 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %ptr_getter302, i128 0, i128 %curid.0
  %Padd305 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter304, align 8
  %struct_getter306 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd305, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter307 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter306, align 8
  %Padd311 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter307, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  store i128 %Pdouble291, i128* %Padd311, align 4
  %in312 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.in.declare_input, align 8
  %array_getter316 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in312, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %in317 = load i128, i128* %array_getter316, align 4
  %Padd318 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter320 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd318, i128 0, i128 %curid.0
  %Padd321 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter320, align 8
  %struct_getter322 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd321, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter322, align 8
  %array_getter326 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %Padd327 = load i128, i128* %array_getter326, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd327, i128 %in317, i1* @constraint.730)
  %ptr_getter328 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter330 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %ptr_getter328, i128 0, i128 %curid.0
  %Padd331 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter330, align 8
  %struct_getter332 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd331, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter333 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter332, align 8
  %Padd337 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter333, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  store i128 %in317, i128* %Padd337, align 4
  br label %loop.latch338

loop.latch338:                                    ; preds = %loop.body280
  %add340 = add i128 %idx.4, 1
  %slt343 = icmp slt i128 %add340, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt343, label %loop.body280, label %loop.exit344

loop.exit344:                                     ; preds = %loop.latch338
  br label %loop.latch345

loop.latch345:                                    ; preds = %loop.exit344
  %add347 = add i128 %l.3, 1
  %slt349 = icmp slt i128 %add347, 2
  br i1 %slt349, label %loop.body279, label %loop.exit350

loop.exit350:                                     ; preds = %loop.latch345
  br label %loop.latch351

loop.latch351:                                    ; preds = %loop.exit350
  %add353 = add i128 %j.4, 1
  %slt355 = icmp slt i128 %add353, 2
  br i1 %slt355, label %loop.body278, label %loop.exit356

loop.exit356:                                     ; preds = %loop.latch351
  br label %loop.body357

loop.body357:                                     ; preds = %loop.latch396, %loop.exit356
  %j.5 = phi i128 [ 0, %loop.exit356 ], [ %add398, %loop.latch396 ]
  br label %loop.body358

loop.body358:                                     ; preds = %loop.latch390, %loop.body357
  %l.4 = phi i128 [ 0, %loop.body357 ], [ %add392, %loop.latch390 ]
  br label %loop.body359

loop.body359:                                     ; preds = %loop.latch383, %loop.body358
  %idx.5 = phi i128 [ 0, %loop.body358 ], [ %add385, %loop.latch383 ]
  %Padd360 = load [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd, align 8
  %array_getter362 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd360, i128 0, i128 %curid.0
  %Padd363 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter362, align 8
  %struct_getter364 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd363, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter364, align 8
  %array_getter368 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter, i128 0, i128 %j.5, i128 %l.4, i128 %idx.5
  %Padd369 = load i128, i128* %array_getter368, align 4
  %R370 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %array_getter375 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R370, i128 0, i128 %i.1, i128 %j.5, i128 %l.4, i128 %idx.5
  %R376 = load i128, i128* %array_getter375, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R376, i128 %Padd369, i1* @constraint.731)
  %ptr_getter377 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %R382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter377, i128 0, i128 %i.1, i128 %j.5, i128 %l.4, i128 %idx.5
  store i128 %Padd369, i128* %R382, align 4
  br label %loop.latch383

loop.latch383:                                    ; preds = %loop.body359
  %add385 = add i128 %idx.5, 1
  %slt388 = icmp slt i128 %add385, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt388, label %loop.body359, label %loop.exit389

loop.exit389:                                     ; preds = %loop.latch383
  br label %loop.latch390

loop.latch390:                                    ; preds = %loop.exit389
  %add392 = add i128 %l.4, 1
  %slt394 = icmp slt i128 %add392, 2
  br i1 %slt394, label %loop.body358, label %loop.exit395

loop.exit395:                                     ; preds = %loop.latch390
  br label %loop.latch396

loop.latch396:                                    ; preds = %loop.exit395
  %add398 = add i128 %j.5, 1
  %slt400 = icmp slt i128 %add398, 2
  br i1 %slt400, label %loop.body357, label %loop.exit401

loop.exit401:                                     ; preds = %loop.latch396
  %add403 = add i128 %curid.0, 1
  br label %if.exit404

if.exit404:                                       ; preds = %loop.exit401, %loop.exit192
  %curid.1 = phi i128 [ %curid.0, %loop.exit192 ], [ %add403, %loop.exit401 ]
  br label %if.exit405

if.exit405:                                       ; preds = %if.exit404, %loop.exit85
  %curid.2 = phi i128 [ %curid.0, %loop.exit85 ], [ %curid.1, %if.exit404 ]
  br label %loop.latch406

loop.latch406:                                    ; preds = %if.exit405
  %sub408 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub408, 0
  br i1 %sge, label %loop.body39, label %loop.exit410

loop.exit410:                                     ; preds = %loop.latch406
  br label %loop.body411

loop.body411:                                     ; preds = %loop.latch444, %loop.exit410
  %i.2 = phi i128 [ 0, %loop.exit410 ], [ %add446, %loop.latch444 ]
  br label %loop.body412

loop.body412:                                     ; preds = %loop.latch438, %loop.body411
  %j.6 = phi i128 [ 0, %loop.body411 ], [ %add440, %loop.latch438 ]
  br label %loop.body413

loop.body413:                                     ; preds = %loop.latch431, %loop.body412
  %idx.6 = phi i128 [ 0, %loop.body412 ], [ %add433, %loop.latch431 ]
  %R414 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %array_getter418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R414, i128 0, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %R419 = load i128, i128* %array_getter418, align 4
  %out420 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.declare_output, align 8
  %array_getter424 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out420, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %out425 = load i128, i128* %array_getter424, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out425, i128 %R419, i1* @constraint.732)
  %ptr_getter426 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.declare_output, align 8
  %out430 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter426, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  store i128 %R419, i128* %out430, align 4
  br label %loop.latch431

loop.latch431:                                    ; preds = %loop.body413
  %add433 = add i128 %idx.6, 1
  %slt436 = icmp slt i128 %add433, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt436, label %loop.body413, label %loop.exit437

loop.exit437:                                     ; preds = %loop.latch431
  br label %loop.latch438

loop.latch438:                                    ; preds = %loop.exit437
  %add440 = add i128 %j.6, 1
  %slt442 = icmp slt i128 %add440, 2
  br i1 %slt442, label %loop.body412, label %loop.exit443

loop.exit443:                                     ; preds = %loop.latch438
  br label %loop.latch444

loop.latch444:                                    ; preds = %loop.exit443
  %add446 = add i128 %i.2, 1
  %slt448 = icmp slt i128 %add446, 2
  br i1 %slt448, label %loop.body411, label %loop.exit449

loop.exit449:                                     ; preds = %loop.latch444
  br label %arraydim

arraydim:                                         ; preds = %loop.exit449
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner)
  %ptr_cast450 = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast450, i128 250)
  %ptr_cast451 = bitcast [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast451, i128 %SigBits.1)
  %ptr_cast452 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast452, i128 %BitLength.1, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner)
  %ptr_cast453 = bitcast [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast453, i128 %BitLength.1)
  %ptr_cast454 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast454, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner)
  %ptr_cast455 = bitcast [256 x %struct_template_circuit_fp2isequal*]** %add_exception to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast455, i128 %SigBits.1)
  br label %exit

exit:                                             ; preds = %arraydim
  %R456 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.declare_inter, align 8
  %ellipticcurvescalarmultiplyunequalfp2.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 6
  store [256 x [256 x [256 x [256 x i128]]]]* %R456, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.write_inter_inner, align 8
  %out457 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.declare_output, align 8
  %ellipticcurvescalarmultiplyunequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out457, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* @fn_template_build_ellipticcurvescalarmultiplyunequalfp2(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2 = alloca %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, align 8
  %ellipticcurvescalarmultiplyunequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiplyunequalfp2.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiplyunequalfp2.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequalfp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvescalarmultiplyunequalfp2.b.write_arg_inner, align 8
  %ellipticcurvescalarmultiplyunequalfp2.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiplyunequalfp2.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequalfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiplyunequalfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2
}

define void @fn_template_init_signedfp2divide(%struct_template_circuit_signedfp2divide* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 0
  %signedfp2divide.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 1
  %signedfp2divide.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 2
  %signedfp2divide.overflowa.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 3
  %signedfp2divide.overflowb.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 4
  %signedfp2divide.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 5
  %signedfp2divide.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %signedfp2divide.a.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2divide.a.read_input_inner, [256 x [256 x i128]]** %signedfp2divide.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 6
  %signedfp2divide.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %signedfp2divide.b.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %signedfp2divide.b.read_input_inner, [256 x [256 x i128]]** %signedfp2divide.b.declare_input, align 8
  %signedfp2divide.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2divide.out.declare_output, align 8
  %overflow7 = call i128 @fn_intrinsic_utils_init()
  %temp = alloca [256 x [256 x i128]]*, align 8
  %temp8 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %temp8, [256 x [256 x i128]]** %temp, align 8
  %i9 = call i128 @fn_intrinsic_utils_init()
  %b_mod = alloca [256 x [256 x i128]]*, align 8
  %b_mod10 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %b_mod10, [256 x [256 x i128]]** %b_mod, align 8
  %mod_check = alloca [256 x %struct_template_circuit_checkcarrymodp*]*, align 8
  %mod_check11 = alloca [256 x %struct_template_circuit_checkcarrymodp*], align 8
  store [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check11, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %eps12 = call i128 @fn_intrinsic_utils_init()
  %XY1 = alloca [256 x [256 x [256 x i128]]]*, align 8
  %XY113 = alloca [256 x [256 x [256 x i128]]], align 8
  store [256 x [256 x [256 x i128]]]* %XY113, [256 x [256 x [256 x i128]]]** %XY1, align 8
  %X_range_checks = alloca [256 x [256 x %struct_template_circuit_num2bits*]]*, align 8
  %X_range_checks14 = alloca [256 x [256 x %struct_template_circuit_num2bits*]], align 8
  store [256 x [256 x %struct_template_circuit_num2bits*]]* %X_range_checks14, [256 x [256 x %struct_template_circuit_num2bits*]]** %X_range_checks, align 8
  %a_mod = alloca [256 x [256 x i128]]*, align 8
  %a_mod15 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %a_mod15, [256 x [256 x i128]]** %a_mod, align 8
  %LOGK216 = call i128 @fn_intrinsic_utils_init()
  %out_var = alloca [256 x [256 x i128]]*, align 8
  %out_var17 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %out_var17, [256 x [256 x i128]]** %out_var, align 8
  %m18 = call i128 @fn_intrinsic_utils_init()
  %ma19 = call i128 @fn_intrinsic_utils_init()
  %mb20 = call i128 @fn_intrinsic_utils_init()
  %XY = alloca [256 x [256 x [256 x i128]]]*, align 8
  %XY21 = alloca [256 x [256 x [256 x i128]]], align 8
  store [256 x [256 x [256 x i128]]]* %XY21, [256 x [256 x [256 x i128]]]** %XY, align 8
  %signedfp2divide.x.declare_inter = alloca [256 x [256 x i128]]*, align 8
  %malloccall22 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall22 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %X, [256 x [256 x i128]]** %signedfp2divide.x.declare_inter, align 8
  %b_inv = alloca [256 x [256 x i128]]*, align 8
  %b_inv23 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %b_inv23, [256 x [256 x i128]]** %b_inv, align 8
  %sdiv = sdiv i128 %signedfp2divide.overflowa.read_arg_inner, %signedfp2divide.n.read_arg_inner
  %sdiv27 = sdiv i128 %signedfp2divide.overflowb.read_arg_inner, %signedfp2divide.n.read_arg_inner
  %uniform_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]** %a_mod, align 8
  %uniform_array28 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array28, [256 x [256 x i128]]** %b_mod, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %eps.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %a = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a, i128 0, i128 %eps.0
  %a33 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a33, [256 x i128]* %spice_inline_array, align 4
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %sdiv, [256 x i128]* %spice_inline_array, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  store [256 x [256 x i128]]* %call, [256 x [256 x i128]]** %temp, align 8
  %temp34 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %temp, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %temp34, i128 0, i128 1
  %temp36 = load [256 x i128], [256 x i128]* %array_getter35, align 4
  %spice_inline_array37 = alloca [256 x i128], align 8
  store [256 x i128] %temp36, [256 x i128]* %spice_inline_array37, align 4
  %ptr_getter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_mod, align 8
  %a_mod39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter, i128 0, i128 %eps.0
  %1 = bitcast [256 x i128]* %a_mod39 to i8*
  %2 = bitcast [256 x i128]* %spice_inline_array37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %b = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.b.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b, i128 0, i128 %eps.0
  %b45 = load [256 x i128], [256 x i128]* %array_getter44, align 4
  %spice_inline_array46 = alloca [256 x i128], align 8
  store [256 x i128] %b45, [256 x i128]* %spice_inline_array46, align 4
  %call48 = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %sdiv27, [256 x i128]* %spice_inline_array46, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  store [256 x [256 x i128]]* %call48, [256 x [256 x i128]]** %temp, align 8
  %temp49 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %temp, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %temp49, i128 0, i128 1
  %temp51 = load [256 x i128], [256 x i128]* %array_getter50, align 4
  %spice_inline_array52 = alloca [256 x i128], align 8
  store [256 x i128] %temp51, [256 x i128]* %spice_inline_array52, align 4
  %ptr_getter53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_mod, align 8
  %b_mod55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter53, i128 0, i128 %eps.0
  %3 = bitcast [256 x i128]* %b_mod55 to i8*
  %4 = bitcast [256 x i128]* %spice_inline_array52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %eps.0, 1
  %slt = icmp slt i128 %add, 2
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %b_mod60 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_mod, align 8
  %call62 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, [256 x [256 x i128]]* %b_mod60, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  store [256 x [256 x i128]]* %call62, [256 x [256 x i128]]** %b_inv, align 8
  %a_mod65 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %a_mod, align 8
  %b_inv66 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %b_inv, align 8
  %call68 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, [256 x [256 x i128]]* %a_mod65, [256 x [256 x i128]]* %b_inv66, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  store [256 x [256 x i128]]* %call68, [256 x [256 x i128]]** %out_var, align 8
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch87, %loop.exit
  %eps.1 = phi i128 [ 0, %loop.exit ], [ %add89, %loop.latch87 ]
  br label %loop.body70

loop.body70:                                      ; preds = %loop.latch80, %loop.body69
  %i.0 = phi i128 [ 0, %loop.body69 ], [ %add82, %loop.latch80 ]
  %out_var71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %out_var, align 8
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out_var71, i128 0, i128 %eps.1, i128 %i.0
  %out_var75 = load i128, i128* %array_getter74, align 4
  %ptr_getter76 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.out.declare_output, align 8
  %out79 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter76, i128 0, i128 %eps.1, i128 %i.0
  store i128 %out_var75, i128* %out79, align 4
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.body70
  %add82 = add i128 %i.0, 1
  %slt85 = icmp slt i128 %add82, %signedfp2divide.k.read_arg_inner
  br i1 %slt85, label %loop.body70, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch80
  br label %loop.latch87

loop.latch87:                                     ; preds = %loop.exit86
  %add89 = add i128 %eps.1, 1
  %slt91 = icmp slt i128 %add89, 2
  br i1 %slt91, label %loop.body69, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch87
  %call95 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner)
  br label %loop.body96

loop.body96:                                      ; preds = %loop.latch122, %loop.exit92
  %eps.2 = phi i128 [ 0, %loop.exit92 ], [ %add124, %loop.latch122 ]
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch115, %loop.body96
  %i.1 = phi i128 [ 0, %loop.body96 ], [ %add117, %loop.latch115 ]
  %out98 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.out.declare_output, align 8
  %array_getter101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out98, i128 0, i128 %eps.2, i128 %i.1
  %out102 = load i128, i128* %array_getter101, align 4
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call95, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter104, align 8
  %array_getter107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %eps.2, i128 %i.1
  %check108 = load i128, i128* %array_getter107, align 4
  call void @fn_intrinsic_utils_constraint(i128 %check108, i128 %out102, i1* @constraint.733)
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call95, i32 0, i32 2
  %rangecheck2d.in.read_input_outter111 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter110, align 8
  %check114 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter111, i128 0, i128 %eps.2, i128 %i.1
  store i128 %out102, i128* %check114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body97
  %add117 = add i128 %i.1, 1
  %slt120 = icmp slt i128 %add117, %signedfp2divide.k.read_arg_inner
  br i1 %slt120, label %loop.body97, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.exit121
  %add124 = add i128 %eps.2, 1
  %slt126 = icmp slt i128 %add124, 2
  br i1 %slt126, label %loop.body96, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch122
  %mul = mul i128 2, %signedfp2divide.k.read_arg_inner
  %mul130 = mul i128 %mul, %signedfp2divide.k.read_arg_inner
  %call131 = call i128 @log_ceil(i128 %mul130)
  %call137 = call i128 @max(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.overflowb.read_arg_inner)
  %mul139 = mul i128 2, %signedfp2divide.n.read_arg_inner
  %add141 = add i128 %mul139, %signedfp2divide.overflowb.read_arg_inner
  %add143 = add i128 %add141, %call131
  %call144 = call %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, [256 x i128]* %signedfp2divide.p.read_arg_inner, i128 %call137, i128 %add143)
  br label %loop.body145

loop.body145:                                     ; preds = %loop.latch188, %loop.exit127
  %eps.3 = phi i128 [ 0, %loop.exit127 ], [ %add190, %loop.latch188 ]
  br label %loop.body146

loop.body146:                                     ; preds = %loop.latch181, %loop.body145
  %i.2 = phi i128 [ 0, %loop.body145 ], [ %add183, %loop.latch181 ]
  %out147 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.out.declare_output, align 8
  %array_getter150 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out147, i128 0, i128 %eps.3, i128 %i.2
  %out151 = load i128, i128* %array_getter150, align 4
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call144, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter153, align 8
  %array_getter156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter, i128 0, i128 %eps.3, i128 %i.2
  %mult157 = load i128, i128* %array_getter156, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult157, i128 %out151, i1* @constraint.734)
  %struct_getter159 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call144, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter160 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter159, align 8
  %mult163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter160, i128 0, i128 %eps.3, i128 %i.2
  store i128 %out151, i128* %mult163, align 4
  %b164 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.b.declare_input, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %b164, i128 0, i128 %eps.3, i128 %i.2
  %b168 = load i128, i128* %array_getter167, align 4
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call144, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter170, align 8
  %array_getter173 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter, i128 0, i128 %eps.3, i128 %i.2
  %mult174 = load i128, i128* %array_getter173, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult174, i128 %b168, i1* @constraint.735)
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call144, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter177 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter176, align 8
  %mult180 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter177, i128 0, i128 %eps.3, i128 %i.2
  store i128 %b168, i128* %mult180, align 4
  br label %loop.latch181

loop.latch181:                                    ; preds = %loop.body146
  %add183 = add i128 %i.2, 1
  %slt186 = icmp slt i128 %add183, %signedfp2divide.k.read_arg_inner
  br i1 %slt186, label %loop.body146, label %loop.exit187

loop.exit187:                                     ; preds = %loop.latch181
  br label %loop.latch188

loop.latch188:                                    ; preds = %loop.exit187
  %add190 = add i128 %eps.3, 1
  %slt192 = icmp slt i128 %add190, 2
  br i1 %slt192, label %loop.body145, label %loop.exit193

loop.exit193:                                     ; preds = %loop.latch188
  %add196 = add i128 %sdiv27, %signedfp2divide.k.read_arg_inner
  %call198 = call i128 @max(i128 %add196, i128 %sdiv)
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call144, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter203, align 8
  %call205 = call [256 x [256 x [256 x i128]]]* @get_signed_Fp2_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %call198, [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  store [256 x [256 x [256 x i128]]]* %call205, [256 x [256 x [256 x i128]]]** %XY, align 8
  %a209 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.a.declare_input, align 8
  %call211 = call [256 x [256 x [256 x i128]]]* @get_signed_Fp2_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %call198, [256 x [256 x i128]]* %a209, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  store [256 x [256 x [256 x i128]]]* %call211, [256 x [256 x [256 x i128]]]** %XY1, align 8
  br label %loop.body214

loop.body214:                                     ; preds = %loop.latch263, %loop.exit193
  %eps.4 = phi i128 [ 0, %loop.exit193 ], [ %add265, %loop.latch263 ]
  br label %loop.body215

loop.body215:                                     ; preds = %loop.latch256, %loop.body214
  %i.3 = phi i128 [ 0, %loop.body214 ], [ %add258, %loop.latch256 ]
  %XY216 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %XY, align 8
  %array_getter219 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %XY216, i128 0, i128 %eps.4, i128 0, i128 %i.3
  %XY220 = load i128, i128* %array_getter219, align 4
  %XY1221 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %XY1, align 8
  %array_getter224 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %XY1221, i128 0, i128 %eps.4, i128 0, i128 %i.3
  %XY1225 = load i128, i128* %array_getter224, align 4
  %sub = sub i128 %XY220, %XY1225
  %ptr_getter226 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.x.declare_inter, align 8
  %X229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter226, i128 0, i128 %eps.4, i128 %i.3
  store i128 %sub, i128* %X229, align 4
  %add231 = add i128 %signedfp2divide.n.read_arg_inner, 2
  %call232 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add231)
  %ptr_getter233 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %X_range_checks, align 8
  %X_range_checks236 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %ptr_getter233, i128 0, i128 %eps.4, i128 %i.3
  store %struct_template_circuit_num2bits* %call232, %struct_template_circuit_num2bits** %X_range_checks236, align 8
  %X237 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.x.declare_inter, align 8
  %array_getter240 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X237, i128 0, i128 %eps.4, i128 %i.3
  %X241 = load i128, i128* %array_getter240, align 4
  %add243 = add i128 %signedfp2divide.n.read_arg_inner, 1
  %lshift = shl i128 1, %add243
  %add244 = add i128 %X241, %lshift
  %X_range_checks245 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %X_range_checks, align 8
  %array_getter248 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %X_range_checks245, i128 0, i128 %eps.4, i128 %i.3
  %X_range_checks249 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter248, align 8
  %struct_getter250 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks249, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter250, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %add244, i1* @constraint.736)
  %ptr_getter251 = load [256 x [256 x %struct_template_circuit_num2bits*]]*, [256 x [256 x %struct_template_circuit_num2bits*]]** %X_range_checks, align 8
  %array_getter254 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %ptr_getter251, i128 0, i128 %eps.4, i128 %i.3
  %X_range_checks255 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter254, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks255, i32 0, i32 1
  store i128 %add244, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch256

loop.latch256:                                    ; preds = %loop.body215
  %add258 = add i128 %i.3, 1
  %slt261 = icmp slt i128 %add258, %call198
  br i1 %slt261, label %loop.body215, label %loop.exit262

loop.exit262:                                     ; preds = %loop.latch256
  br label %loop.latch263

loop.latch263:                                    ; preds = %loop.exit262
  %add265 = add i128 %eps.4, 1
  %slt267 = icmp slt i128 %add265, 2
  br i1 %slt267, label %loop.body214, label %loop.exit268

loop.exit268:                                     ; preds = %loop.latch263
  %mul270 = mul i128 2, %signedfp2divide.n.read_arg_inner
  %add272 = add i128 %mul270, %signedfp2divide.overflowb.read_arg_inner
  %add274 = add i128 %add272, %call131
  %call276 = call i128 @max(i128 %add274, i128 %signedfp2divide.overflowa.read_arg_inner)
  br label %loop.body277

loop.body277:                                     ; preds = %loop.latch370, %loop.exit268
  %eps.5 = phi i128 [ 0, %loop.exit268 ], [ %add372, %loop.latch370 ]
  %add282 = add i128 %call276, 1
  %call284 = call %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %call198, i128 %add282, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  %ptr_getter285 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %mod_check287 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %ptr_getter285, i128 0, i128 %eps.5
  store %struct_template_circuit_checkcarrymodp* %call284, %struct_template_circuit_checkcarrymodp** %mod_check287, align 8
  br label %loop.body288

loop.body288:                                     ; preds = %loop.latch334, %loop.body277
  %i.4 = phi i128 [ 0, %loop.body277 ], [ %add336, %loop.latch334 ]
  %struct_getter290 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call144, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter291 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter290, align 8
  %array_getter294 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter291, i128 0, i128 %eps.5, i128 %i.4
  %mult295 = load i128, i128* %array_getter294, align 4
  %a296 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.a.declare_input, align 8
  %array_getter299 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %a296, i128 0, i128 %eps.5, i128 %i.4
  %a300 = load i128, i128* %array_getter299, align 4
  %sub301 = sub i128 %mult295, %a300
  %mod_check302 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %array_getter304 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check302, i128 0, i128 %eps.5
  %mod_check305 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter304, align 8
  %struct_getter306 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check305, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter306, align 8
  %array_getter308 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter, i128 0, i128 %i.4
  %mod_check309 = load i128, i128* %array_getter308, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check309, i128 %sub301, i1* @constraint.737)
  %ptr_getter310 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %array_getter312 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %ptr_getter310, i128 0, i128 %eps.5
  %mod_check313 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter312, align 8
  %struct_getter314 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check313, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter315 = load [256 x i128]*, [256 x i128]** %struct_getter314, align 8
  %mod_check317 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter315, i128 0, i128 %i.4
  store i128 %sub301, i128* %mod_check317, align 4
  %mod_check318 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %array_getter320 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check318, i128 0, i128 %eps.5
  %mod_check321 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter320, align 8
  %struct_getter322 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check321, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter322, align 8
  %array_getter324 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter, i128 0, i128 %i.4
  %mod_check325 = load i128, i128* %array_getter324, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check325, i128 0, i1* @constraint.738)
  %ptr_getter326 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %array_getter328 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %ptr_getter326, i128 0, i128 %eps.5
  %mod_check329 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter328, align 8
  %struct_getter330 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check329, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter331 = load [256 x i128]*, [256 x i128]** %struct_getter330, align 8
  %mod_check333 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter331, i128 0, i128 %i.4
  store i128 0, i128* %mod_check333, align 4
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.body288
  %add336 = add i128 %i.4, 1
  %slt339 = icmp slt i128 %add336, %signedfp2divide.k.read_arg_inner
  br i1 %slt339, label %loop.body288, label %loop.exit340

loop.exit340:                                     ; preds = %loop.latch334
  br label %loop.body341

loop.body341:                                     ; preds = %loop.latch363, %loop.exit340
  %i.5 = phi i128 [ 0, %loop.exit340 ], [ %add365, %loop.latch363 ]
  %X342 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.x.declare_inter, align 8
  %array_getter345 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X342, i128 0, i128 %eps.5, i128 %i.5
  %X346 = load i128, i128* %array_getter345, align 4
  %mod_check347 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %array_getter349 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check347, i128 0, i128 %eps.5
  %mod_check350 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter349, align 8
  %struct_getter351 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check350, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter351, align 8
  %array_getter353 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter, i128 0, i128 %i.5
  %mod_check354 = load i128, i128* %array_getter353, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mod_check354, i128 %X346, i1* @constraint.739)
  %ptr_getter355 = load [256 x %struct_template_circuit_checkcarrymodp*]*, [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check, align 8
  %array_getter357 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %ptr_getter355, i128 0, i128 %eps.5
  %mod_check358 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter357, align 8
  %struct_getter359 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check358, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter360 = load [256 x i128]*, [256 x i128]** %struct_getter359, align 8
  %mod_check362 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter360, i128 0, i128 %i.5
  store i128 %X346, i128* %mod_check362, align 4
  br label %loop.latch363

loop.latch363:                                    ; preds = %loop.body341
  %add365 = add i128 %i.5, 1
  %slt368 = icmp slt i128 %add365, %call198
  br i1 %slt368, label %loop.body341, label %loop.exit369

loop.exit369:                                     ; preds = %loop.latch363
  br label %loop.latch370

loop.latch370:                                    ; preds = %loop.exit369
  %add372 = add i128 %eps.5, 1
  %slt374 = icmp slt i128 %add372, 2
  br i1 %slt374, label %loop.body277, label %loop.exit375

loop.exit375:                                     ; preds = %loop.latch370
  br label %arraydim

arraydim:                                         ; preds = %loop.exit375
  %ptr_cast = bitcast [256 x [256 x i128]]** %signedfp2divide.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %signedfp2divide.k.read_arg_inner)
  %ptr_cast376 = bitcast [256 x [256 x i128]]** %signedfp2divide.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast376, i128 2, i128 %signedfp2divide.k.read_arg_inner)
  %ptr_cast377 = bitcast [256 x [256 x i128]]** %b_inv to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast377, i128 2, i128 50)
  %ptr_cast378 = bitcast [256 x %struct_template_circuit_checkcarrymodp*]** %mod_check to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast378, i128 2)
  %ptr_cast379 = bitcast [256 x [256 x %struct_template_circuit_num2bits*]]** %X_range_checks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast379, i128 2, i128 %call198)
  %ptr_cast380 = bitcast [256 x [256 x i128]]** %signedfp2divide.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast380, i128 2, i128 %signedfp2divide.k.read_arg_inner)
  %ptr_cast381 = bitcast [256 x [256 x [256 x i128]]]** %XY1 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast381, i128 2, i128 2, i128 50)
  %ptr_cast382 = bitcast [256 x [256 x i128]]** %a_mod to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast382, i128 2, i128 50)
  %ptr_cast383 = bitcast [256 x [256 x i128]]** %signedfp2divide.x.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast383, i128 2, i128 %call198)
  %ptr_cast384 = bitcast [256 x [256 x i128]]** %out_var to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast384, i128 2, i128 50)
  %ptr_cast385 = bitcast [256 x [256 x i128]]** %temp to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast385, i128 2, i128 50)
  %ptr_cast386 = bitcast [256 x [256 x [256 x i128]]]** %XY to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast386, i128 2, i128 2, i128 50)
  %ptr_cast387 = bitcast [256 x [256 x i128]]** %b_mod to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast387, i128 2, i128 50)
  br label %exit

exit:                                             ; preds = %arraydim
  %X388 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.x.declare_inter, align 8
  %signedfp2divide.x.write_inter_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %X388, [256 x [256 x i128]]** %signedfp2divide.x.write_inter_inner, align 8
  %out389 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %signedfp2divide.out.declare_output, align 8
  %signedfp2divide.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 8
  store [256 x [256 x i128]]* %out389, [256 x [256 x i128]]** %signedfp2divide.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2divide* @fn_template_build_signedfp2divide(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_signedfp2divide = alloca %struct_template_circuit_signedfp2divide, align 8
  %signedfp2divide.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 0
  store i128 %0, i128* %signedfp2divide.n.write_arg_inner, align 4
  %signedfp2divide.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 1
  store i128 %1, i128* %signedfp2divide.k.write_arg_inner, align 4
  %signedfp2divide.overflowa.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 2
  store i128 %2, i128* %signedfp2divide.overflowa.write_arg_inner, align 4
  %signedfp2divide.overflowb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 3
  store i128 %3, i128* %signedfp2divide.overflowb.write_arg_inner, align 4
  %signedfp2divide.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %signedfp2divide.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide
}

define void @fn_template_init_ellipticcurveaddfp2(%struct_template_circuit_ellipticcurveaddfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 0
  %ellipticcurveaddfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 1
  %ellipticcurveaddfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 2
  %ellipticcurveaddfp2.a2.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 3
  %ellipticcurveaddfp2.b2.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 4
  %ellipticcurveaddfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 5
  %ellipticcurveaddfp2.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %ellipticcurveaddfp2.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 6
  %ellipticcurveaddfp2.aisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 7
  %ellipticcurveaddfp2.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter7, align 8
  %ellipticcurveaddfp2.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 8
  %ellipticcurveaddfp2.bisinfinity.read_input_inner = load i128, i128* %struct_getter8, align 4
  %add_is_double = call i128 @fn_intrinsic_utils_init()
  %ab0 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurveaddfp2.tmp.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %tmp, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %anegb = call i128 @fn_intrinsic_utils_init()
  %ellipticcurveaddfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall9 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.declare_output, align 8
  %i10 = call i128 @fn_intrinsic_utils_init()
  %idx11 = call i128 @fn_intrinsic_utils_init()
  %j12 = call i128 @fn_intrinsic_utils_init()
  %isInfinity = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  %call19 = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch91, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add93, %loop.latch91 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add88, %loop.latch ]
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 0, i128 %i.0, i128 %idx.0
  %a23 = load i128, i128* %array_getter, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 3
  %fp2isequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter25, align 8
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %x_equal29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_equal29, i128 %a23, i1* @constraint.740)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 3
  %fp2isequal.a.read_input_outter31 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter30, align 8
  %x_equal34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter31, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a23, i128* %x_equal34, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter37 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 0, i128 %i.0, i128 %idx.0
  %b38 = load i128, i128* %array_getter37, align 4
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 4
  %fp2isequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter40, align 8
  %array_getter43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %x_equal44 = load i128, i128* %array_getter43, align 4
  call void @fn_intrinsic_utils_constraint(i128 %x_equal44, i128 %b38, i1* @constraint.741)
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 4
  %fp2isequal.b.read_input_outter47 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter46, align 8
  %x_equal50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter47, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b38, i128* %x_equal50, align 4
  %a51 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a51, i128 0, i128 1, i128 %i.0, i128 %idx.0
  %a55 = load i128, i128* %array_getter54, align 4
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call19, i32 0, i32 3
  %fp2isequal.a.read_input_outter58 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter57, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter58, i128 0, i128 %i.0, i128 %idx.0
  %y_equal62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_equal62, i128 %a55, i1* @constraint.742)
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call19, i32 0, i32 3
  %fp2isequal.a.read_input_outter65 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter64, align 8
  %y_equal68 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter65, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a55, i128* %y_equal68, align 4
  %b69 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter72 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b69, i128 0, i128 1, i128 %i.0, i128 %idx.0
  %b73 = load i128, i128* %array_getter72, align 4
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call19, i32 0, i32 4
  %fp2isequal.b.read_input_outter76 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter75, align 8
  %array_getter79 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter76, i128 0, i128 %i.0, i128 %idx.0
  %y_equal80 = load i128, i128* %array_getter79, align 4
  call void @fn_intrinsic_utils_constraint(i128 %y_equal80, i128 %b73, i1* @constraint.743)
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call19, i32 0, i32 4
  %fp2isequal.b.read_input_outter83 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter82, align 8
  %y_equal86 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter83, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b73, i128* %y_equal86, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body20
  %add88 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add88, %ellipticcurveaddfp2.k.read_arg_inner
  br i1 %slt, label %loop.body20, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch91

loop.latch91:                                     ; preds = %loop.exit
  %add93 = add i128 %i.0, 1
  %slt95 = icmp slt i128 %add93, 2
  br i1 %slt95, label %loop.body, label %loop.exit96

loop.exit96:                                      ; preds = %loop.latch91
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter = load i128, i128* %struct_getter98, align 4
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call19, i32 0, i32 5
  %fp2isequal.out.read_output_outter101 = load i128, i128* %struct_getter100, align 4
  %mul = mul i128 %fp2isequal.out.read_output_outter, %fp2isequal.out.read_output_outter101
  call void @fn_intrinsic_utils_constraint(i128 %add_is_double, i128 %mul, i1* @constraint.744)
  %ellipticcurveaddfp2.add_is_double.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 9
  store i128 %mul, i128* %ellipticcurveaddfp2.add_is_double.write_inter_inner, align 4
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 9
  %ellipticcurveaddfp2.add_is_double.read_inter_inner = load i128, i128* %struct_getter105, align 4
  %call106 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %b107 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter108 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b107, i128 0, i128 0, i128 0, i128 0
  %b109 = load i128, i128* %array_getter108, align 4
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call106, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter111, align 4
  call void @fn_intrinsic_utils_constraint(i128 %iszero.in.read_input_outter, i128 %b109, i1* @constraint.745)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call106, i32 0, i32 0
  store i128 %b109, i128* %iszero.in.write_input_outter, align 4
  %call116 = call %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  %call120 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.a2.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.b2.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  br label %loop.body121

loop.body121:                                     ; preds = %loop.latch237, %loop.exit96
  %i.1 = phi i128 [ 0, %loop.exit96 ], [ %add239, %loop.latch237 ]
  br label %loop.body122

loop.body122:                                     ; preds = %loop.latch231, %loop.body121
  %j.0 = phi i128 [ 0, %loop.body121 ], [ %add233, %loop.latch231 ]
  br label %loop.body123

loop.body123:                                     ; preds = %loop.latch224, %loop.body122
  %idx.1 = phi i128 [ 0, %loop.body122 ], [ %add226, %loop.latch224 ]
  %a124 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %array_getter128 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a124, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %a129 = load i128, i128* %array_getter128, align 4
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter131, align 8
  %array_getter135 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %add136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add136, i128 %a129, i1* @constraint.746)
  %struct_getter138 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter139 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter138, align 8
  %add143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter139, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %a129, i128* %add143, align 4
  %eq = icmp eq i128 %i.1, 0
  %eq146 = icmp eq i128 %j.0, 0
  %and = and i1 %eq, %eq146
  %eq148 = icmp eq i128 %idx.1, 0
  %and149 = and i1 %and, %eq148
  br i1 %and149, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body123
  %b150 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter154 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b150, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %b155 = load i128, i128* %array_getter154, align 4
  %struct_getter157 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter158 = load i128, i128* %struct_getter157, align 4
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call106, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter160, align 4
  %b161 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter165 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b161, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %b166 = load i128, i128* %array_getter165, align 4
  %sub = sub i128 %iszero.out.read_output_outter, %b166
  %mul167 = mul i128 %fp2isequal.out.read_output_outter158, %sub
  %add168 = add i128 %b155, %mul167
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter170, align 8
  %array_getter174 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %add175 = load i128, i128* %array_getter174, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add175, i128 %add168, i1* @constraint.747)
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter178 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter177, align 8
  %add182 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter178, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %add168, i128* %add182, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body123
  %b183 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter187 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b183, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %b188 = load i128, i128* %array_getter187, align 4
  %struct_getter190 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter191 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter190, align 8
  %array_getter195 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter191, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %add196 = load i128, i128* %array_getter195, align 4
  call void @fn_intrinsic_utils_constraint(i128 %add196, i128 %b188, i1* @constraint.748)
  %struct_getter198 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter199 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter198, align 8
  %add203 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter199, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %b188, i128* %add203, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %a204 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %array_getter208 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a204, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %a209 = load i128, i128* %array_getter208, align 4
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %call120, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter211, align 8
  %array_getter215 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %doub216 = load i128, i128* %array_getter215, align 4
  call void @fn_intrinsic_utils_constraint(i128 %doub216, i128 %a209, i1* @constraint.749)
  %struct_getter218 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %call120, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter219 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter218, align 8
  %doub223 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter219, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %a209, i128* %doub223, align 4
  br label %loop.latch224

loop.latch224:                                    ; preds = %if.exit
  %add226 = add i128 %idx.1, 1
  %slt229 = icmp slt i128 %add226, %ellipticcurveaddfp2.k.read_arg_inner
  br i1 %slt229, label %loop.body123, label %loop.exit230

loop.exit230:                                     ; preds = %loop.latch224
  br label %loop.latch231

loop.latch231:                                    ; preds = %loop.exit230
  %add233 = add i128 %j.0, 1
  %slt235 = icmp slt i128 %add233, 2
  br i1 %slt235, label %loop.body122, label %loop.exit236

loop.exit236:                                     ; preds = %loop.latch231
  br label %loop.latch237

loop.latch237:                                    ; preds = %loop.exit236
  %add239 = add i128 %i.1, 1
  %slt241 = icmp slt i128 %add239, 2
  br i1 %slt241, label %loop.body121, label %loop.exit242

loop.exit242:                                     ; preds = %loop.latch237
  %mul243 = mul i128 %ellipticcurveaddfp2.aisinfinity.read_input_inner, %ellipticcurveaddfp2.bisinfinity.read_input_inner
  call void @fn_intrinsic_utils_constraint(i128 %ab0, i128 %mul243, i1* @constraint.750)
  %ellipticcurveaddfp2.ab0.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 10
  store i128 %mul243, i128* %ellipticcurveaddfp2.ab0.write_inter_inner, align 4
  %struct_getter247 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 10
  %ellipticcurveaddfp2.ab0.read_inter_inner = load i128, i128* %struct_getter247, align 4
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter250 = load i128, i128* %struct_getter249, align 4
  %struct_getter252 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter253 = load i128, i128* %struct_getter252, align 4
  %struct_getter255 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call19, i32 0, i32 5
  %fp2isequal.out.read_output_outter256 = load i128, i128* %struct_getter255, align 4
  %mul257 = mul i128 %fp2isequal.out.read_output_outter253, %fp2isequal.out.read_output_outter256
  %sub258 = sub i128 %fp2isequal.out.read_output_outter250, %mul257
  call void @fn_intrinsic_utils_constraint(i128 %anegb, i128 %sub258, i1* @constraint.751)
  %ellipticcurveaddfp2.anegb.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 11
  store i128 %sub258, i128* %ellipticcurveaddfp2.anegb.write_inter_inner, align 4
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 11
  %ellipticcurveaddfp2.anegb.read_inter_inner = load i128, i128* %struct_getter262, align 4
  %add265 = add i128 %ellipticcurveaddfp2.ab0.read_inter_inner, %ellipticcurveaddfp2.anegb.read_inter_inner
  %mul268 = mul i128 %ellipticcurveaddfp2.ab0.read_inter_inner, %ellipticcurveaddfp2.anegb.read_inter_inner
  %sub269 = sub i128 %add265, %mul268
  call void @fn_intrinsic_utils_constraint(i128 %isInfinity, i128 %sub269, i1* @constraint.752)
  %ellipticcurveaddfp2.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 14
  store i128 %sub269, i128* %ellipticcurveaddfp2.isinfinity.write_output_inner, align 4
  %struct_getter273 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 14
  %ellipticcurveaddfp2.isinfinity.read_output_inner = load i128, i128* %struct_getter273, align 4
  br label %loop.body275

loop.body275:                                     ; preds = %loop.latch427, %loop.exit242
  %i.2 = phi i128 [ 0, %loop.exit242 ], [ %add429, %loop.latch427 ]
  br label %loop.body276

loop.body276:                                     ; preds = %loop.latch421, %loop.body275
  %j.1 = phi i128 [ 0, %loop.body275 ], [ %add423, %loop.latch421 ]
  br label %loop.body277

loop.body277:                                     ; preds = %loop.latch414, %loop.body276
  %idx.2 = phi i128 [ 0, %loop.body276 ], [ %add416, %loop.latch414 ]
  %struct_getter279 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter279, align 8
  %array_getter283 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %add284 = load i128, i128* %array_getter283, align 4
  %struct_getter287 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %call120, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter287, align 8
  %array_getter291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %doub292 = load i128, i128* %array_getter291, align 4
  %struct_getter294 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call116, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter295 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter294, align 8
  %array_getter299 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter295, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %add300 = load i128, i128* %array_getter299, align 4
  %sub301 = sub i128 %doub292, %add300
  %mul302 = mul i128 %ellipticcurveaddfp2.add_is_double.read_inter_inner, %sub301
  %add303 = add i128 %add284, %mul302
  %tmp304 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp304, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp309 = load i128, i128* %array_getter308, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp309, i128 %add303, i1* @constraint.753)
  %ptr_getter310 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %tmp314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter310, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add303, i128* %tmp314, align 4
  %tmp315 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter319 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp315, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp320 = load i128, i128* %array_getter319, align 4
  %b322 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input, align 8
  %array_getter326 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b322, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %b327 = load i128, i128* %array_getter326, align 4
  %tmp328 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp328, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp333 = load i128, i128* %array_getter332, align 4
  %sub334 = sub i128 %b327, %tmp333
  %mul335 = mul i128 %ellipticcurveaddfp2.aisinfinity.read_input_inner, %sub334
  %add336 = add i128 %tmp320, %mul335
  %tmp337 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter341 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp337, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp342 = load i128, i128* %array_getter341, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp342, i128 %add336, i1* @constraint.754)
  %ptr_getter343 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %tmp347 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter343, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add336, i128* %tmp347, align 4
  %tmp348 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp348, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp353 = load i128, i128* %array_getter352, align 4
  %a355 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %array_getter359 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a355, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %a360 = load i128, i128* %array_getter359, align 4
  %tmp361 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter365 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp361, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp366 = load i128, i128* %array_getter365, align 4
  %sub367 = sub i128 %a360, %tmp366
  %mul368 = mul i128 %ellipticcurveaddfp2.bisinfinity.read_input_inner, %sub367
  %add369 = add i128 %tmp353, %mul368
  %tmp370 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp370, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp375 = load i128, i128* %array_getter374, align 4
  call void @fn_intrinsic_utils_constraint(i128 %tmp375, i128 %add369, i1* @constraint.755)
  %ptr_getter376 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %tmp380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter376, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add369, i128* %tmp380, align 4
  %tmp381 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter385 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp381, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp386 = load i128, i128* %array_getter385, align 4
  %a388 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input, align 8
  %array_getter392 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a388, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %a393 = load i128, i128* %array_getter392, align 4
  %tmp394 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %array_getter398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp394, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp399 = load i128, i128* %array_getter398, align 4
  %sub400 = sub i128 %a393, %tmp399
  %mul401 = mul i128 %ellipticcurveaddfp2.isinfinity.read_output_inner, %sub400
  %add402 = add i128 %tmp386, %mul401
  %out403 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.declare_output, align 8
  %array_getter407 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out403, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %out408 = load i128, i128* %array_getter407, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out408, i128 %add402, i1* @constraint.756)
  %ptr_getter409 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.declare_output, align 8
  %out413 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter409, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add402, i128* %out413, align 4
  br label %loop.latch414

loop.latch414:                                    ; preds = %loop.body277
  %add416 = add i128 %idx.2, 1
  %slt419 = icmp slt i128 %add416, %ellipticcurveaddfp2.k.read_arg_inner
  br i1 %slt419, label %loop.body277, label %loop.exit420

loop.exit420:                                     ; preds = %loop.latch414
  br label %loop.latch421

loop.latch421:                                    ; preds = %loop.exit420
  %add423 = add i128 %j.1, 1
  %slt425 = icmp slt i128 %add423, 2
  br i1 %slt425, label %loop.body276, label %loop.exit426

loop.exit426:                                     ; preds = %loop.latch421
  br label %loop.latch427

loop.latch427:                                    ; preds = %loop.exit426
  %add429 = add i128 %i.2, 1
  %slt431 = icmp slt i128 %add429, 2
  br i1 %slt431, label %loop.body275, label %loop.exit432

loop.exit432:                                     ; preds = %loop.latch427
  br label %arraydim

arraydim:                                         ; preds = %loop.exit432
  %ptr_cast = bitcast [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 3, i128 2, i128 2, i128 %ellipticcurveaddfp2.k.read_arg_inner)
  %ptr_cast433 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast433, i128 2, i128 2, i128 %ellipticcurveaddfp2.k.read_arg_inner)
  %ptr_cast434 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast434, i128 2, i128 2, i128 %ellipticcurveaddfp2.k.read_arg_inner)
  %ptr_cast435 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast435, i128 2, i128 2, i128 %ellipticcurveaddfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %ellipticcurveaddfp2.add_is_double.write_inter_inner437 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 9
  store i128 %ellipticcurveaddfp2.add_is_double.read_inter_inner, i128* %ellipticcurveaddfp2.add_is_double.write_inter_inner437, align 4
  %ellipticcurveaddfp2.ab0.write_inter_inner439 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 10
  store i128 %ellipticcurveaddfp2.ab0.read_inter_inner, i128* %ellipticcurveaddfp2.ab0.write_inter_inner439, align 4
  %ellipticcurveaddfp2.anegb.write_inter_inner441 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 11
  store i128 %ellipticcurveaddfp2.anegb.read_inter_inner, i128* %ellipticcurveaddfp2.anegb.write_inter_inner441, align 4
  %tmp442 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.declare_inter, align 8
  %ellipticcurveaddfp2.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 12
  store [256 x [256 x [256 x [256 x i128]]]]* %tmp442, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.write_inter_inner, align 8
  %out443 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.declare_output, align 8
  %ellipticcurveaddfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 13
  store [256 x [256 x [256 x i128]]]* %out443, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.write_output_inner, align 8
  %ellipticcurveaddfp2.isinfinity.write_output_inner445 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 14
  store i128 %ellipticcurveaddfp2.isinfinity.read_output_inner, i128* %ellipticcurveaddfp2.isinfinity.write_output_inner445, align 4
  ret void
}

define %struct_template_circuit_ellipticcurveaddfp2* @fn_template_build_ellipticcurveaddfp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurveaddfp2 = alloca %struct_template_circuit_ellipticcurveaddfp2, align 8
  %ellipticcurveaddfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveaddfp2.n.write_arg_inner, align 4
  %ellipticcurveaddfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveaddfp2.k.write_arg_inner, align 4
  %ellipticcurveaddfp2.a2.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurveaddfp2.a2.write_arg_inner, align 8
  %ellipticcurveaddfp2.b2.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %ellipticcurveaddfp2.b2.write_arg_inner, align 8
  %ellipticcurveaddfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurveaddfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2
}

define void @fn_template_init_fp12multiply(%struct_template_circuit_fp12multiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 0
  %fp12multiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 1
  %fp12multiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 2
  %fp12multiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 3
  %fp12multiply.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12multiply.a.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12multiply.a.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 4
  %fp12multiply.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %fp12multiply.b.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12multiply.b.declare_input, align 8
  %j5 = call i128 @fn_intrinsic_utils_init()
  %fp12multiply.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12multiply.out.declare_output, align 8
  %XI06 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  %idx8 = call i128 @fn_intrinsic_utils_init()
  %l9 = call i128 @fn_intrinsic_utils_init()
  %LOGK210 = call i128 @fn_intrinsic_utils_init()
  %mul = mul i128 6, %fp12multiply.k.read_arg_inner
  %mul18 = mul i128 %mul, %fp12multiply.k.read_arg_inner
  %add = add i128 2, 1
  %mul20 = mul i128 %mul18, %add
  %call = call i128 @log_ceil(i128 %mul20)
  %mul24 = mul i128 3, %fp12multiply.n.read_arg_inner
  %add26 = add i128 %mul24, %call
  %call27 = call %struct_template_circuit_signedfp12multiplynocarrycompress* @fn_template_build_signedfp12multiplynocarrycompress(i128 %fp12multiply.n.read_arg_inner, i128 %fp12multiply.k.read_arg_inner, [256 x i128]* %fp12multiply.p.read_arg_inner, i128 %fp12multiply.n.read_arg_inner, i128 %add26)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch76, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add78, %loop.latch76 ]
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch70, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add72, %loop.latch70 ]
  br label %loop.body29

loop.body29:                                      ; preds = %loop.latch, %loop.body28
  %idx.0 = phi i128 [ 0, %loop.body28 ], [ %add67, %loop.latch ]
  %a = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiply.a.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %a, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %a33 = load i128, i128* %array_getter, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call27, i32 0, i32 5
  %signedfp12multiplynocarrycompress.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter35, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %no_carry40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_utils_constraint(i128 %no_carry40, i128 %a33, i1* @constraint.757)
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call27, i32 0, i32 5
  %signedfp12multiplynocarrycompress.a.read_input_outter42 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter41, align 8
  %no_carry46 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.a.read_input_outter42, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %a33, i128* %no_carry46, align 4
  %b = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiply.b.declare_input, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %b, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b51 = load i128, i128* %array_getter50, align 4
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call27, i32 0, i32 6
  %signedfp12multiplynocarrycompress.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter53, align 8
  %array_getter57 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %no_carry58 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_utils_constraint(i128 %no_carry58, i128 %b51, i1* @constraint.758)
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call27, i32 0, i32 6
  %signedfp12multiplynocarrycompress.b.read_input_outter61 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter60, align 8
  %no_carry65 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.b.read_input_outter61, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %b51, i128* %no_carry65, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body29
  %add67 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add67, %fp12multiply.k.read_arg_inner
  br i1 %slt, label %loop.body29, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch70

loop.latch70:                                     ; preds = %loop.exit
  %add72 = add i128 %j.0, 1
  %slt74 = icmp slt i128 %add72, 2
  br i1 %slt74, label %loop.body28, label %loop.exit75

loop.exit75:                                      ; preds = %loop.latch70
  br label %loop.latch76

loop.latch76:                                     ; preds = %loop.exit75
  %add78 = add i128 %i.0, 1
  %slt81 = icmp slt i128 %add78, 6
  br i1 %slt81, label %loop.body, label %loop.exit82

loop.exit82:                                      ; preds = %loop.latch76
  %mul86 = mul i128 3, %fp12multiply.n.read_arg_inner
  %add88 = add i128 %mul86, %call
  %call90 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %fp12multiply.n.read_arg_inner, i128 %fp12multiply.k.read_arg_inner, i128 %add88, [256 x i128]* %fp12multiply.p.read_arg_inner)
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch128, %loop.exit82
  %i.1 = phi i128 [ 0, %loop.exit82 ], [ %add130, %loop.latch128 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch122, %loop.body91
  %j.1 = phi i128 [ 0, %loop.body91 ], [ %add124, %loop.latch122 ]
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch115, %loop.body92
  %idx.1 = phi i128 [ 0, %loop.body92 ], [ %add117, %loop.latch115 ]
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call27, i32 0, i32 7
  %signedfp12multiplynocarrycompress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter95, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %no_carry100 = load i128, i128* %array_getter99, align 4
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call90, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter102, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %carry_mod107 = load i128, i128* %array_getter106, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_mod107, i128 %no_carry100, i1* @constraint.759)
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call90, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter110 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter109, align 8
  %carry_mod114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter110, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %no_carry100, i128* %carry_mod114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body93
  %add117 = add i128 %idx.1, 1
  %slt120 = icmp slt i128 %add117, %fp12multiply.k.read_arg_inner
  br i1 %slt120, label %loop.body93, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.exit121
  %add124 = add i128 %j.1, 1
  %slt126 = icmp slt i128 %add124, 2
  br i1 %slt126, label %loop.body92, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch122
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %i.1, 1
  %slt133 = icmp slt i128 %add130, 6
  br i1 %slt133, label %loop.body91, label %loop.exit134

loop.exit134:                                     ; preds = %loop.latch128
  br label %loop.body135

loop.body135:                                     ; preds = %loop.latch169, %loop.exit134
  %i.2 = phi i128 [ 0, %loop.exit134 ], [ %add171, %loop.latch169 ]
  br label %loop.body136

loop.body136:                                     ; preds = %loop.latch163, %loop.body135
  %j.2 = phi i128 [ 0, %loop.body135 ], [ %add165, %loop.latch163 ]
  br label %loop.body137

loop.body137:                                     ; preds = %loop.latch156, %loop.body136
  %idx.2 = phi i128 [ 0, %loop.body136 ], [ %add158, %loop.latch156 ]
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call90, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter139, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %carry_mod144 = load i128, i128* %array_getter143, align 4
  %out145 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiply.out.declare_output, align 8
  %array_getter149 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out145, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %out150 = load i128, i128* %array_getter149, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out150, i128 %carry_mod144, i1* @constraint.760)
  %ptr_getter151 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiply.out.declare_output, align 8
  %out155 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter151, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  store i128 %carry_mod144, i128* %out155, align 4
  br label %loop.latch156

loop.latch156:                                    ; preds = %loop.body137
  %add158 = add i128 %idx.2, 1
  %slt161 = icmp slt i128 %add158, %fp12multiply.k.read_arg_inner
  br i1 %slt161, label %loop.body137, label %loop.exit162

loop.exit162:                                     ; preds = %loop.latch156
  br label %loop.latch163

loop.latch163:                                    ; preds = %loop.exit162
  %add165 = add i128 %j.2, 1
  %slt167 = icmp slt i128 %add165, 2
  br i1 %slt167, label %loop.body136, label %loop.exit168

loop.exit168:                                     ; preds = %loop.latch163
  br label %loop.latch169

loop.latch169:                                    ; preds = %loop.exit168
  %add171 = add i128 %i.2, 1
  %slt174 = icmp slt i128 %add171, 6
  br i1 %slt174, label %loop.body135, label %loop.exit175

loop.exit175:                                     ; preds = %loop.latch169
  br label %arraydim

arraydim:                                         ; preds = %loop.exit175
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12multiply.a.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %fp12multiply.k.read_arg_inner)
  %ptr_cast176 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiply.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast176, i128 6, i128 2, i128 %fp12multiply.k.read_arg_inner)
  %ptr_cast177 = bitcast [256 x [256 x [256 x i128]]]** %fp12multiply.b.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast177, i128 6, i128 2, i128 %fp12multiply.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out178 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12multiply.out.declare_output, align 8
  %fp12multiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out178, [256 x [256 x [256 x i128]]]** %fp12multiply.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12multiply = alloca %struct_template_circuit_fp12multiply, align 8
  %fp12multiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply, i32 0, i32 0
  store i128 %0, i128* %fp12multiply.n.write_arg_inner, align 4
  %fp12multiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply, i32 0, i32 1
  store i128 %1, i128* %fp12multiply.k.write_arg_inner, align 4
  %fp12multiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12multiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply
}

define void @fn_template_init_ellipticcurvescalarmultiplyfp2(%struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 0
  %ellipticcurvescalarmultiplyfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 1
  %ellipticcurvescalarmultiplyfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 2
  %ellipticcurvescalarmultiplyfp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 3
  %ellipticcurvescalarmultiplyfp2.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 4
  %ellipticcurvescalarmultiplyfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 5
  %ellipticcurvescalarmultiplyfp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %ellipticcurvescalarmultiplyfp2.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyfp2.in.read_input_inner, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.in.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 6
  %ellipticcurvescalarmultiplyfp2.inisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %Bits = alloca [256 x i128]*, align 8
  %Bits7 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits7, [256 x i128]** %Bits, align 8
  %ellipticcurvescalarmultiplyfp2.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.declare_output, align 8
  %ellipticcurvescalarmultiplyfp2.p.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall8 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %P = bitcast i8* %malloccall8 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %P, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter, align 8
  %i9 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvescalarmultiplyfp2.r.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall10 to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %R, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %curid11 = call i128 @fn_intrinsic_utils_init()
  %l12 = call i128 @fn_intrinsic_utils_init()
  %BitLength13 = call i128 @fn_intrinsic_utils_init()
  %LOGK14 = call i128 @fn_intrinsic_utils_init()
  %isInfinity = call i128 @fn_intrinsic_utils_init()
  %idx15 = call i128 @fn_intrinsic_utils_init()
  %SigBits16 = call i128 @fn_intrinsic_utils_init()
  %j17 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter = alloca [256 x i128]*, align 8
  %malloccall18 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %R_isO = bitcast i8* %malloccall18 to [256 x i128]*
  store [256 x i128]* %R_isO, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %Padd = alloca [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, align 8
  %Padd19 = alloca [256 x %struct_template_circuit_ellipticcurveaddfp2*], align 8
  store [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd19, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %Pdouble = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, align 8
  %Pdouble20 = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*], align 8
  store [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble20, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add33, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiplyfp2.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits25 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits25, align 4
  %Bits26 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits26, i128 0, i128 %i.0
  %Bits28 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits28, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add31 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add31, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add33 = add i128 %i.0, 1
  %slt = icmp slt i128 %add33, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch73, %loop.exit
  %j.0 = phi i128 [ 0, %loop.exit ], [ %add75, %loop.latch73 ]
  br label %loop.body42

loop.body42:                                      ; preds = %loop.latch66, %loop.body41
  %idx.0 = phi i128 [ 0, %loop.body41 ], [ %add68, %loop.latch66 ]
  br label %loop.body43

loop.body43:                                      ; preds = %loop.latch60, %loop.body42
  %l.0 = phi i128 [ 0, %loop.body42 ], [ %add62, %loop.latch60 ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.in.declare_input, align 8
  %array_getter47 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  %in48 = load i128, i128* %array_getter47, align 4
  %P49 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter, align 8
  %array_getter53 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P49, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  %P54 = load i128, i128* %array_getter53, align 4
  call void @fn_intrinsic_utils_constraint(i128 %P54, i128 %in48, i1* @constraint.761)
  %ptr_getter55 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter, align 8
  %P59 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter55, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  store i128 %in48, i128* %P59, align 4
  br label %loop.latch60

loop.latch60:                                     ; preds = %loop.body43
  %add62 = add i128 %l.0, 1
  %slt64 = icmp slt i128 %add62, 2
  br i1 %slt64, label %loop.body43, label %loop.exit65

loop.exit65:                                      ; preds = %loop.latch60
  br label %loop.latch66

loop.latch66:                                     ; preds = %loop.exit65
  %add68 = add i128 %idx.0, 1
  %slt71 = icmp slt i128 %add68, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt71, label %loop.body42, label %loop.exit72

loop.exit72:                                      ; preds = %loop.latch66
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.exit72
  %add75 = add i128 %j.0, 1
  %slt77 = icmp slt i128 %add75, 2
  br i1 %slt77, label %loop.body41, label %loop.exit78

loop.exit78:                                      ; preds = %loop.latch73
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch426, %loop.exit78
  %i.1 = phi i128 [ %sub, %loop.exit78 ], [ %sub428, %loop.latch426 ]
  %curid.0 = phi i128 [ 0, %loop.exit78 ], [ %curid.2, %loop.latch426 ]
  %sub85 = sub i128 %BitLength.1, 1
  %eq86 = icmp eq i128 %i.1, %sub85
  br i1 %eq86, label %if.true81, label %if.false82

if.true81:                                        ; preds = %loop.body80
  br label %loop.body87

if.false82:                                       ; preds = %loop.body80
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array, align 4
  %call136 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %ellipticcurvescalarmultiplyfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner, [256 x i128]* %const_inline_array, [256 x i128]* %ellipticcurvescalarmultiplyfp2.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyfp2.p.read_arg_inner)
  %ptr_getter137 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %Pdouble139 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %ptr_getter137, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedoublefp2* %call136, %struct_template_circuit_ellipticcurvedoublefp2** %Pdouble139, align 8
  br label %loop.body140

loop.body87:                                      ; preds = %loop.latch122, %if.true81
  %j.1 = phi i128 [ 0, %if.true81 ], [ %add124, %loop.latch122 ]
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch115, %loop.body87
  %idx.1 = phi i128 [ 0, %loop.body87 ], [ %add117, %loop.latch115 ]
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch109, %loop.body88
  %l.1 = phi i128 [ 0, %loop.body88 ], [ %add111, %loop.latch109 ]
  %P90 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P90, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  %P95 = load i128, i128* %array_getter94, align 4
  %R96 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %array_getter101 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R96, i128 0, i128 %i.1, i128 %j.1, i128 %l.1, i128 %idx.1
  %R102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R102, i128 %P95, i1* @constraint.762)
  %ptr_getter103 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %R108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter103, i128 0, i128 %i.1, i128 %j.1, i128 %l.1, i128 %idx.1
  store i128 %P95, i128* %R108, align 4
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.body89
  %add111 = add i128 %l.1, 1
  %slt113 = icmp slt i128 %add111, 2
  br i1 %slt113, label %loop.body89, label %loop.exit114

loop.exit114:                                     ; preds = %loop.latch109
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.exit114
  %add117 = add i128 %idx.1, 1
  %slt120 = icmp slt i128 %add117, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt120, label %loop.body88, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.exit121
  %add124 = add i128 %j.1, 1
  %slt126 = icmp slt i128 %add124, 2
  br i1 %slt126, label %loop.body87, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch122
  %R_isO128 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %array_getter130 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO128, i128 0, i128 %i.1
  %R_isO131 = load i128, i128* %array_getter130, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R_isO131, i128 0, i1* @constraint.763)
  %ptr_getter132 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %R_isO134 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter132, i128 0, i128 %i.1
  store i128 0, i128* %R_isO134, align 4
  br label %if.exit425

loop.body140:                                     ; preds = %loop.latch184, %if.false82
  %j.2 = phi i128 [ 0, %if.false82 ], [ %add186, %loop.latch184 ]
  br label %loop.body141

loop.body141:                                     ; preds = %loop.latch177, %loop.body140
  %idx.2 = phi i128 [ 0, %loop.body140 ], [ %add179, %loop.latch177 ]
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch171, %loop.body141
  %l.2 = phi i128 [ 0, %loop.body141 ], [ %add173, %loop.latch171 ]
  %R143 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %add145 = add i128 %i.1, 1
  %array_getter149 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R143, i128 0, i128 %add145, i128 %j.2, i128 %l.2, i128 %idx.2
  %R150 = load i128, i128* %array_getter149, align 4
  %Pdouble151 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter153 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble151, i128 0, i128 %i.1
  %Pdouble154 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter153, align 8
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble154, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter155, align 8
  %array_getter159 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %j.2, i128 %l.2, i128 %idx.2
  %Pdouble160 = load i128, i128* %array_getter159, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble160, i128 %R150, i1* @constraint.764)
  %ptr_getter161 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter163 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %ptr_getter161, i128 0, i128 %i.1
  %Pdouble164 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter163, align 8
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble164, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter166 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter165, align 8
  %Pdouble170 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter166, i128 0, i128 %j.2, i128 %l.2, i128 %idx.2
  store i128 %R150, i128* %Pdouble170, align 4
  br label %loop.latch171

loop.latch171:                                    ; preds = %loop.body142
  %add173 = add i128 %l.2, 1
  %slt175 = icmp slt i128 %add173, 2
  br i1 %slt175, label %loop.body142, label %loop.exit176

loop.exit176:                                     ; preds = %loop.latch171
  br label %loop.latch177

loop.latch177:                                    ; preds = %loop.exit176
  %add179 = add i128 %idx.2, 1
  %slt182 = icmp slt i128 %add179, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt182, label %loop.body141, label %loop.exit183

loop.exit183:                                     ; preds = %loop.latch177
  br label %loop.latch184

loop.latch184:                                    ; preds = %loop.exit183
  %add186 = add i128 %j.2, 1
  %slt188 = icmp slt i128 %add186, 2
  br i1 %slt188, label %loop.body140, label %loop.exit189

loop.exit189:                                     ; preds = %loop.latch184
  %Bits192 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter194 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits192, i128 0, i128 %i.1
  %Bits195 = load i128, i128* %array_getter194, align 4
  %eq196 = icmp eq i128 %Bits195, 0
  br i1 %eq196, label %if.true190, label %if.false191

if.true190:                                       ; preds = %loop.exit189
  br label %loop.body197

if.false191:                                      ; preds = %loop.exit189
  %const_inline_array256 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array256, align 4
  %call259 = call %struct_template_circuit_ellipticcurveaddfp2* @fn_template_build_ellipticcurveaddfp2(i128 %ellipticcurvescalarmultiplyfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner, [256 x i128]* %const_inline_array256, [256 x i128]* %ellipticcurvescalarmultiplyfp2.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyfp2.p.read_arg_inner)
  %ptr_getter260 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %Padd262 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %ptr_getter260, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddfp2* %call259, %struct_template_circuit_ellipticcurveaddfp2** %Padd262, align 8
  br label %loop.body263

loop.body197:                                     ; preds = %loop.latch236, %if.true190
  %j.3 = phi i128 [ 0, %if.true190 ], [ %add238, %loop.latch236 ]
  br label %loop.body198

loop.body198:                                     ; preds = %loop.latch229, %loop.body197
  %idx.3 = phi i128 [ 0, %loop.body197 ], [ %add231, %loop.latch229 ]
  br label %loop.body199

loop.body199:                                     ; preds = %loop.latch223, %loop.body198
  %l.3 = phi i128 [ 0, %loop.body198 ], [ %add225, %loop.latch223 ]
  %Pdouble200 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter202 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble200, i128 0, i128 %i.1
  %Pdouble203 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter202, align 8
  %struct_getter204 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble203, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter204, align 8
  %array_getter208 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %j.3, i128 %l.3, i128 %idx.3
  %Pdouble209 = load i128, i128* %array_getter208, align 4
  %R210 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %array_getter215 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R210, i128 0, i128 %i.1, i128 %j.3, i128 %l.3, i128 %idx.3
  %R216 = load i128, i128* %array_getter215, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R216, i128 %Pdouble209, i1* @constraint.765)
  %ptr_getter217 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %R222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter217, i128 0, i128 %i.1, i128 %j.3, i128 %l.3, i128 %idx.3
  store i128 %Pdouble209, i128* %R222, align 4
  br label %loop.latch223

loop.latch223:                                    ; preds = %loop.body199
  %add225 = add i128 %l.3, 1
  %slt227 = icmp slt i128 %add225, 2
  br i1 %slt227, label %loop.body199, label %loop.exit228

loop.exit228:                                     ; preds = %loop.latch223
  br label %loop.latch229

loop.latch229:                                    ; preds = %loop.exit228
  %add231 = add i128 %idx.3, 1
  %slt234 = icmp slt i128 %add231, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt234, label %loop.body198, label %loop.exit235

loop.exit235:                                     ; preds = %loop.latch229
  br label %loop.latch236

loop.latch236:                                    ; preds = %loop.exit235
  %add238 = add i128 %j.3, 1
  %slt240 = icmp slt i128 %add238, 2
  br i1 %slt240, label %loop.body197, label %loop.exit241

loop.exit241:                                     ; preds = %loop.latch236
  %R_isO242 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %add244 = add i128 %i.1, 1
  %array_getter245 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO242, i128 0, i128 %add244
  %R_isO246 = load i128, i128* %array_getter245, align 4
  %R_isO247 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %array_getter249 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO247, i128 0, i128 %i.1
  %R_isO250 = load i128, i128* %array_getter249, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R_isO250, i128 %R_isO246, i1* @constraint.766)
  %ptr_getter251 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %R_isO253 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter251, i128 0, i128 %i.1
  store i128 %R_isO246, i128* %R_isO253, align 4
  br label %if.exit424

loop.body263:                                     ; preds = %loop.latch336, %if.false191
  %j.4 = phi i128 [ 0, %if.false191 ], [ %add338, %loop.latch336 ]
  br label %loop.body264

loop.body264:                                     ; preds = %loop.latch330, %loop.body263
  %l.4 = phi i128 [ 0, %loop.body263 ], [ %add332, %loop.latch330 ]
  br label %loop.body265

loop.body265:                                     ; preds = %loop.latch323, %loop.body264
  %idx.4 = phi i128 [ 0, %loop.body264 ], [ %add325, %loop.latch323 ]
  %Pdouble266 = load [256 x %struct_template_circuit_ellipticcurvedoublefp2*]*, [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble, align 8
  %array_getter268 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble266, i128 0, i128 %i.1
  %Pdouble269 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter268, align 8
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble269, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter271 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter270, align 8
  %array_getter275 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter271, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %Pdouble276 = load i128, i128* %array_getter275, align 4
  %Padd277 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter279 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd277, i128 0, i128 %curid.0
  %Padd280 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter279, align 8
  %struct_getter281 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd280, i32 0, i32 5
  %ellipticcurveaddfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter281, align 8
  %array_getter285 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_outter, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %Padd286 = load i128, i128* %array_getter285, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd286, i128 %Pdouble276, i1* @constraint.767)
  %ptr_getter287 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter289 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %ptr_getter287, i128 0, i128 %curid.0
  %Padd290 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter289, align 8
  %struct_getter291 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd290, i32 0, i32 5
  %ellipticcurveaddfp2.a.read_input_outter292 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter291, align 8
  %Padd296 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_outter292, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  store i128 %Pdouble276, i128* %Padd296, align 4
  %P297 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter, align 8
  %array_getter301 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P297, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %P302 = load i128, i128* %array_getter301, align 4
  %Padd303 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter305 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd303, i128 0, i128 %curid.0
  %Padd306 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter305, align 8
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd306, i32 0, i32 7
  %ellipticcurveaddfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter307, align 8
  %array_getter311 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_outter, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %Padd312 = load i128, i128* %array_getter311, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd312, i128 %P302, i1* @constraint.768)
  %ptr_getter313 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter315 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %ptr_getter313, i128 0, i128 %curid.0
  %Padd316 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter315, align 8
  %struct_getter317 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd316, i32 0, i32 7
  %ellipticcurveaddfp2.b.read_input_outter318 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter317, align 8
  %Padd322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_outter318, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  store i128 %P302, i128* %Padd322, align 4
  br label %loop.latch323

loop.latch323:                                    ; preds = %loop.body265
  %add325 = add i128 %idx.4, 1
  %slt328 = icmp slt i128 %add325, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt328, label %loop.body265, label %loop.exit329

loop.exit329:                                     ; preds = %loop.latch323
  br label %loop.latch330

loop.latch330:                                    ; preds = %loop.exit329
  %add332 = add i128 %l.4, 1
  %slt334 = icmp slt i128 %add332, 2
  br i1 %slt334, label %loop.body264, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch330
  br label %loop.latch336

loop.latch336:                                    ; preds = %loop.exit335
  %add338 = add i128 %j.4, 1
  %slt340 = icmp slt i128 %add338, 2
  br i1 %slt340, label %loop.body263, label %loop.exit341

loop.exit341:                                     ; preds = %loop.latch336
  %R_isO342 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %add344 = add i128 %i.1, 1
  %array_getter345 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO342, i128 0, i128 %add344
  %R_isO346 = load i128, i128* %array_getter345, align 4
  %Padd347 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter349 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd347, i128 0, i128 %curid.0
  %Padd350 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter349, align 8
  %struct_getter351 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd350, i32 0, i32 6
  %ellipticcurveaddfp2.aisinfinity.read_input_outter = load i128, i128* %struct_getter351, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ellipticcurveaddfp2.aisinfinity.read_input_outter, i128 %R_isO346, i1* @constraint.769)
  %ptr_getter352 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter354 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %ptr_getter352, i128 0, i128 %curid.0
  %Padd355 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter354, align 8
  %ellipticcurveaddfp2.aisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd355, i32 0, i32 6
  store i128 %R_isO346, i128* %ellipticcurveaddfp2.aisinfinity.write_input_outter, align 4
  %Padd356 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter358 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd356, i128 0, i128 %curid.0
  %Padd359 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter358, align 8
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd359, i32 0, i32 8
  %ellipticcurveaddfp2.bisinfinity.read_input_outter = load i128, i128* %struct_getter360, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ellipticcurveaddfp2.bisinfinity.read_input_outter, i128 0, i1* @constraint.770)
  %ptr_getter361 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter363 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %ptr_getter361, i128 0, i128 %curid.0
  %Padd364 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter363, align 8
  %ellipticcurveaddfp2.bisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd364, i32 0, i32 8
  store i128 0, i128* %ellipticcurveaddfp2.bisinfinity.write_input_outter, align 4
  %Padd365 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter367 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd365, i128 0, i128 %curid.0
  %Padd368 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter367, align 8
  %struct_getter369 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd368, i32 0, i32 14
  %ellipticcurveaddfp2.isinfinity.read_output_outter = load i128, i128* %struct_getter369, align 4
  %R_isO370 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %array_getter372 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO370, i128 0, i128 %i.1
  %R_isO373 = load i128, i128* %array_getter372, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R_isO373, i128 %ellipticcurveaddfp2.isinfinity.read_output_outter, i1* @constraint.771)
  %ptr_getter374 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %R_isO376 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter374, i128 0, i128 %i.1
  store i128 %ellipticcurveaddfp2.isinfinity.read_output_outter, i128* %R_isO376, align 4
  br label %loop.body377

loop.body377:                                     ; preds = %loop.latch416, %loop.exit341
  %j.5 = phi i128 [ 0, %loop.exit341 ], [ %add418, %loop.latch416 ]
  br label %loop.body378

loop.body378:                                     ; preds = %loop.latch410, %loop.body377
  %l.5 = phi i128 [ 0, %loop.body377 ], [ %add412, %loop.latch410 ]
  br label %loop.body379

loop.body379:                                     ; preds = %loop.latch403, %loop.body378
  %idx.5 = phi i128 [ 0, %loop.body378 ], [ %add405, %loop.latch403 ]
  %Padd380 = load [256 x %struct_template_circuit_ellipticcurveaddfp2*]*, [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd, align 8
  %array_getter382 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd380, i128 0, i128 %curid.0
  %Padd383 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter382, align 8
  %struct_getter384 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd383, i32 0, i32 13
  %ellipticcurveaddfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter384, align 8
  %array_getter388 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.out.read_output_outter, i128 0, i128 %j.5, i128 %l.5, i128 %idx.5
  %Padd389 = load i128, i128* %array_getter388, align 4
  %R390 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %array_getter395 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R390, i128 0, i128 %i.1, i128 %j.5, i128 %l.5, i128 %idx.5
  %R396 = load i128, i128* %array_getter395, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R396, i128 %Padd389, i1* @constraint.772)
  %ptr_getter397 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %R402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter397, i128 0, i128 %i.1, i128 %j.5, i128 %l.5, i128 %idx.5
  store i128 %Padd389, i128* %R402, align 4
  br label %loop.latch403

loop.latch403:                                    ; preds = %loop.body379
  %add405 = add i128 %idx.5, 1
  %slt408 = icmp slt i128 %add405, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt408, label %loop.body379, label %loop.exit409

loop.exit409:                                     ; preds = %loop.latch403
  br label %loop.latch410

loop.latch410:                                    ; preds = %loop.exit409
  %add412 = add i128 %l.5, 1
  %slt414 = icmp slt i128 %add412, 2
  br i1 %slt414, label %loop.body378, label %loop.exit415

loop.exit415:                                     ; preds = %loop.latch410
  br label %loop.latch416

loop.latch416:                                    ; preds = %loop.exit415
  %add418 = add i128 %j.5, 1
  %slt420 = icmp slt i128 %add418, 2
  br i1 %slt420, label %loop.body377, label %loop.exit421

loop.exit421:                                     ; preds = %loop.latch416
  %add423 = add i128 %curid.0, 1
  br label %if.exit424

if.exit424:                                       ; preds = %loop.exit421, %loop.exit241
  %curid.1 = phi i128 [ %curid.0, %loop.exit241 ], [ %add423, %loop.exit421 ]
  br label %if.exit425

if.exit425:                                       ; preds = %if.exit424, %loop.exit127
  %curid.2 = phi i128 [ %curid.0, %loop.exit127 ], [ %curid.1, %if.exit424 ]
  br label %loop.latch426

loop.latch426:                                    ; preds = %if.exit425
  %sub428 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub428, 0
  br i1 %sge, label %loop.body80, label %loop.exit430

loop.exit430:                                     ; preds = %loop.latch426
  %R_isO431 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %array_getter432 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO431, i128 0, i128 0
  %R_isO433 = load i128, i128* %array_getter432, align 4
  %add434 = add i128 %ellipticcurvescalarmultiplyfp2.inisinfinity.read_input_inner, %R_isO433
  %R_isO436 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %array_getter437 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO436, i128 0, i128 0
  %R_isO438 = load i128, i128* %array_getter437, align 4
  %mul = mul i128 %ellipticcurvescalarmultiplyfp2.inisinfinity.read_input_inner, %R_isO438
  %sub439 = sub i128 %add434, %mul
  call void @fn_intrinsic_utils_constraint(i128 %isInfinity, i128 %sub439, i1* @constraint.773)
  %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 11
  store i128 %sub439, i128* %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner, align 4
  %struct_getter443 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 11
  %ellipticcurvescalarmultiplyfp2.isinfinity.read_output_inner = load i128, i128* %struct_getter443, align 4
  br label %loop.body444

loop.body444:                                     ; preds = %loop.latch493, %loop.exit430
  %i.2 = phi i128 [ 0, %loop.exit430 ], [ %add495, %loop.latch493 ]
  br label %loop.body445

loop.body445:                                     ; preds = %loop.latch487, %loop.body444
  %j.6 = phi i128 [ 0, %loop.body444 ], [ %add489, %loop.latch487 ]
  br label %loop.body446

loop.body446:                                     ; preds = %loop.latch480, %loop.body445
  %idx.6 = phi i128 [ 0, %loop.body445 ], [ %add482, %loop.latch480 ]
  %R447 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %array_getter451 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R447, i128 0, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %R452 = load i128, i128* %array_getter451, align 4
  %in454 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.in.declare_input, align 8
  %array_getter458 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in454, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %in459 = load i128, i128* %array_getter458, align 4
  %R460 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %array_getter464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R460, i128 0, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %R465 = load i128, i128* %array_getter464, align 4
  %sub466 = sub i128 %in459, %R465
  %mul467 = mul i128 %ellipticcurvescalarmultiplyfp2.isinfinity.read_output_inner, %sub466
  %add468 = add i128 %R452, %mul467
  %out469 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.declare_output, align 8
  %array_getter473 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out469, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %out474 = load i128, i128* %array_getter473, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out474, i128 %add468, i1* @constraint.774)
  %ptr_getter475 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.declare_output, align 8
  %out479 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter475, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  store i128 %add468, i128* %out479, align 4
  br label %loop.latch480

loop.latch480:                                    ; preds = %loop.body446
  %add482 = add i128 %idx.6, 1
  %slt485 = icmp slt i128 %add482, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt485, label %loop.body446, label %loop.exit486

loop.exit486:                                     ; preds = %loop.latch480
  br label %loop.latch487

loop.latch487:                                    ; preds = %loop.exit486
  %add489 = add i128 %j.6, 1
  %slt491 = icmp slt i128 %add489, 2
  br i1 %slt491, label %loop.body445, label %loop.exit492

loop.exit492:                                     ; preds = %loop.latch487
  br label %loop.latch493

loop.latch493:                                    ; preds = %loop.exit492
  %add495 = add i128 %i.2, 1
  %slt497 = icmp slt i128 %add495, 2
  br i1 %slt497, label %loop.body444, label %loop.exit498

loop.exit498:                                     ; preds = %loop.latch493
  br label %arraydim

arraydim:                                         ; preds = %loop.exit498
  %ptr_cast = bitcast [256 x %struct_template_circuit_ellipticcurvedoublefp2*]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %BitLength.1)
  %ptr_cast499 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast499, i128 %BitLength.1, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner)
  %ptr_cast500 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast500, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner)
  %ptr_cast501 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast501, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner)
  %ptr_cast502 = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast502, i128 250)
  %ptr_cast503 = bitcast [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast503, i128 %BitLength.1)
  %ptr_cast504 = bitcast [256 x %struct_template_circuit_ellipticcurveaddfp2*]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast504, i128 %SigBits.1)
  %ptr_cast505 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast505, i128 2, i128 2, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %R506 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.declare_inter, align 8
  %ellipticcurvescalarmultiplyfp2.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 7
  store [256 x [256 x [256 x [256 x i128]]]]* %R506, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.write_inter_inner, align 8
  %R_isO507 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.declare_inter, align 8
  %ellipticcurvescalarmultiplyfp2.r_iso.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 8
  store [256 x i128]* %R_isO507, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.write_inter_inner, align 8
  %P508 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.declare_inter, align 8
  %ellipticcurvescalarmultiplyfp2.p.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 9
  store [256 x [256 x [256 x i128]]]* %P508, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.write_inter_inner, align 8
  %out509 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.declare_output, align 8
  %ellipticcurvescalarmultiplyfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 10
  store [256 x [256 x [256 x i128]]]* %out509, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.write_output_inner, align 8
  %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner511 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 11
  store i128 %ellipticcurvescalarmultiplyfp2.isinfinity.read_output_inner, i128* %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner511, align 4
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiplyfp2* @fn_template_build_ellipticcurvescalarmultiplyfp2(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiplyfp2 = alloca %struct_template_circuit_ellipticcurvescalarmultiplyfp2, align 8
  %ellipticcurvescalarmultiplyfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiplyfp2.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiplyfp2.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyfp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvescalarmultiplyfp2.b.write_arg_inner, align 8
  %ellipticcurvescalarmultiplyfp2.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiplyfp2.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiplyfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2
}

define void @fn_template_init_millerloop(%struct_template_circuit_millerloop* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 0
  %millerloop.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 1
  %millerloop.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 2
  %millerloop.b.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 3
  %millerloop.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 4
  %millerloop.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 5
  %millerloop.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %millerloop.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_inner, [256 x [256 x [256 x i128]]]** %millerloop.in.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 6
  %millerloop.p.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %millerloop.p.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %millerloop.p.read_input_inner, [256 x [256 x i128]]** %millerloop.p.declare_input, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 7
  %millerloop.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter7, align 8
  %millerloop.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %millerloop.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.q.declare_input, align 8
  %BitLength8 = call i128 @fn_intrinsic_utils_init()
  %compress = alloca [256 x %struct_template_circuit_fp12compress*]*, align 8
  %compress9 = alloca [256 x %struct_template_circuit_fp12compress*], align 8
  store [256 x %struct_template_circuit_fp12compress*]* %compress9, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %millerloop.f.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %f = bitcast i8* %malloccall to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %f, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %Bits = alloca [256 x i128]*, align 8
  %Bits10 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits10, [256 x i128]** %Bits, align 8
  %XI011 = call i128 @fn_intrinsic_utils_init()
  %LOGK212 = call i128 @fn_intrinsic_utils_init()
  %Pdouble = alloca [256 x %struct_template_circuit_ellipticcurvedouble*]*, align 8
  %Pdouble13 = alloca [256 x %struct_template_circuit_ellipticcurvedouble*], align 8
  store [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble13, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %fadd_pre = alloca [256 x %struct_template_circuit_fp12multiply*]*, align 8
  %fadd_pre14 = alloca [256 x %struct_template_circuit_fp12multiply*], align 8
  store [256 x %struct_template_circuit_fp12multiply*]* %fadd_pre14, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %millerloop.pintermed.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall15 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %Pintermed = bitcast i8* %malloccall15 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %Pintermed, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %millerloop.xp.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %xP = bitcast i8* %malloccall16 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %xP, [256 x [256 x i128]]** %millerloop.xp.declare_output, align 8
  %line = alloca [256 x %struct_template_circuit_linefunctionequal*]*, align 8
  %line17 = alloca [256 x %struct_template_circuit_linefunctionequal*], align 8
  store [256 x %struct_template_circuit_linefunctionequal*]* %line17, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %fadd = alloca [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, align 8
  %fadd18 = alloca [256 x %struct_template_circuit_fp12multiplywithlineunequal*], align 8
  store [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %fadd18, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %Padd = alloca [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, align 8
  %Padd19 = alloca [256 x %struct_template_circuit_ellipticcurveaddunequal*], align 8
  store [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd19, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %fdouble = alloca [256 x %struct_template_circuit_signedfp12carrymodp*]*, align 8
  %fdouble20 = alloca [256 x %struct_template_circuit_signedfp12carrymodp*], align 8
  store [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble20, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %idx21 = call i128 @fn_intrinsic_utils_init()
  %SigBits22 = call i128 @fn_intrinsic_utils_init()
  %curid23 = call i128 @fn_intrinsic_utils_init()
  %millerloop.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall24 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall24 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %millerloop.out.declare_output, align 8
  %nocarry = alloca [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, align 8
  %nocarry25 = alloca [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], align 8
  store [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry25, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %eps26 = call i128 @fn_intrinsic_utils_init()
  %i27 = call i128 @fn_intrinsic_utils_init()
  %j28 = call i128 @fn_intrinsic_utils_init()
  %l29 = call i128 @fn_intrinsic_utils_init()
  %LOGK30 = call i128 @fn_intrinsic_utils_init()
  %square = alloca [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, align 8
  %square31 = alloca [256 x %struct_template_circuit_signedfp12multiplynocarry*], align 8
  store [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square31, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %LOGK332 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %millerloop.k.read_arg_inner)
  %add = add i128 2, 1
  %mul = mul i128 36, %add
  %add40 = add i128 2, 1
  %mul41 = mul i128 %mul, %add40
  %mul43 = mul i128 %mul41, %millerloop.k.read_arg_inner
  %mul45 = mul i128 %mul43, %millerloop.k.read_arg_inner
  %call46 = call i128 @log_ceil(i128 %mul45)
  %add48 = add i128 2, 1
  %mul49 = mul i128 36, %add48
  %add51 = add i128 2, 1
  %mul52 = mul i128 %mul49, %add51
  %mul54 = mul i128 %mul52, %millerloop.k.read_arg_inner
  %mul56 = mul i128 %mul54, %millerloop.k.read_arg_inner
  %mul58 = mul i128 2, %millerloop.k.read_arg_inner
  %sub = sub i128 %mul58, 1
  %mul59 = mul i128 %mul56, %sub
  %call60 = call i128 @log_ceil(i128 %mul59)
  %mul61 = mul i128 4, %millerloop.n.read_arg_inner
  %add63 = add i128 %mul61, %call60
  %slt = icmp slt i128 %add63, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add75, %loop.latch ]
  %rshift = lshr i128 %millerloop.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits66 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits66, align 4
  %Bits67 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits67, i128 0, i128 %i.0
  %Bits69 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits69, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add71 = add i128 %SigBits.0, 1
  %add73 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %SigBits.1 = phi i128 [ %add71, %if.true ], [ %SigBits.0, %if.false ]
  %BitLength.1 = phi i128 [ %add73, %if.true ], [ %BitLength.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add75 = add i128 %i.0, 1
  %slt77 = icmp slt i128 %add75, 250
  br i1 %slt77, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub92 = sub i128 %BitLength.1, 1
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch1175, %loop.exit
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch1175 ]
  %i.1 = phi i128 [ %sub92, %loop.exit ], [ %sub1177, %loop.latch1175 ]
  %sub98 = sub i128 %BitLength.1, 1
  %eq99 = icmp eq i128 %i.1, %sub98
  br i1 %eq99, label %if.true94, label %if.false95

if.true94:                                        ; preds = %loop.body93
  br label %loop.body100

if.false95:                                       ; preds = %loop.body93
  %mul173 = mul i128 2, %millerloop.n.read_arg_inner
  %add174 = add i128 %mul173, 4
  %add176 = add i128 %add174, %call
  %call177 = call %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, i128 %add176)
  %ptr_getter178 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %square180 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter178, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12multiplynocarry* %call177, %struct_template_circuit_signedfp12multiplynocarry** %square180, align 8
  br label %loop.body181

loop.body100:                                     ; preds = %loop.latch134, %if.true94
  %l.0 = phi i128 [ 0, %if.true94 ], [ %add136, %loop.latch134 ]
  br label %loop.body101

loop.body101:                                     ; preds = %loop.latch128, %loop.body100
  %j.0 = phi i128 [ 0, %loop.body100 ], [ %add130, %loop.latch128 ]
  br label %loop.body102

loop.body102:                                     ; preds = %loop.latch121, %loop.body101
  %idx.0 = phi i128 [ 0, %loop.body101 ], [ %add123, %loop.latch121 ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.in.declare_input, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %l.0, i128 %j.0, i128 %idx.0
  %in107 = load i128, i128* %array_getter106, align 4
  %f108 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %array_getter113 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f108, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  %f114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f114, i128 %in107, i1* @constraint.775)
  %ptr_getter115 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %f120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter115, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  store i128 %in107, i128* %f120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body102
  %add123 = add i128 %idx.0, 1
  %slt126 = icmp slt i128 %add123, %millerloop.k.read_arg_inner
  br i1 %slt126, label %loop.body102, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %j.0, 1
  %slt132 = icmp slt i128 %add130, 2
  br i1 %slt132, label %loop.body101, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch128
  br label %loop.latch134

loop.latch134:                                    ; preds = %loop.exit133
  %add136 = add i128 %l.0, 1
  %slt138 = icmp slt i128 %add136, 6
  br i1 %slt138, label %loop.body100, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch134
  br label %loop.body140

loop.body140:                                     ; preds = %loop.latch164, %loop.exit139
  %j.1 = phi i128 [ 0, %loop.exit139 ], [ %add166, %loop.latch164 ]
  br label %loop.body141

loop.body141:                                     ; preds = %loop.latch157, %loop.body140
  %idx.1 = phi i128 [ 0, %loop.body140 ], [ %add159, %loop.latch157 ]
  %P = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloop.p.declare_input, align 8
  %array_getter144 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %j.1, i128 %idx.1
  %P145 = load i128, i128* %array_getter144, align 4
  %Pintermed146 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %array_getter150 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Pintermed146, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %Pintermed151 = load i128, i128* %array_getter150, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pintermed151, i128 %P145, i1* @constraint.776)
  %ptr_getter152 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %Pintermed156 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter152, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %P145, i128* %Pintermed156, align 4
  br label %loop.latch157

loop.latch157:                                    ; preds = %loop.body141
  %add159 = add i128 %idx.1, 1
  %slt162 = icmp slt i128 %add159, %millerloop.k.read_arg_inner
  br i1 %slt162, label %loop.body141, label %loop.exit163

loop.exit163:                                     ; preds = %loop.latch157
  br label %loop.latch164

loop.latch164:                                    ; preds = %loop.exit163
  %add166 = add i128 %j.1, 1
  %slt168 = icmp slt i128 %add166, 2
  br i1 %slt168, label %loop.body140, label %loop.exit169

loop.exit169:                                     ; preds = %loop.latch164
  br label %if.exit1174

loop.body181:                                     ; preds = %loop.latch253, %if.false95
  %l.1 = phi i128 [ 0, %if.false95 ], [ %add255, %loop.latch253 ]
  br label %loop.body182

loop.body182:                                     ; preds = %loop.latch247, %loop.body181
  %j.2 = phi i128 [ 0, %loop.body181 ], [ %add249, %loop.latch247 ]
  br label %loop.body183

loop.body183:                                     ; preds = %loop.latch240, %loop.body182
  %idx.2 = phi i128 [ 0, %loop.body182 ], [ %add242, %loop.latch240 ]
  %f184 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %add186 = add i128 %i.1, 1
  %array_getter190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f184, i128 0, i128 %add186, i128 %l.1, i128 %j.2, i128 %idx.2
  %f191 = load i128, i128* %array_getter190, align 4
  %square192 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter194 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square192, i128 0, i128 %i.1
  %square195 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter194, align 8
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square195, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter196, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter, i128 0, i128 %l.1, i128 %j.2, i128 %idx.2
  %square201 = load i128, i128* %array_getter200, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square201, i128 %f191, i1* @constraint.777)
  %ptr_getter202 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter204 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter202, i128 0, i128 %i.1
  %square205 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter204, align 8
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square205, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter207 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter206, align 8
  %square211 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter207, i128 0, i128 %l.1, i128 %j.2, i128 %idx.2
  store i128 %f191, i128* %square211, align 4
  %f212 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %add214 = add i128 %i.1, 1
  %array_getter218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f212, i128 0, i128 %add214, i128 %l.1, i128 %j.2, i128 %idx.2
  %f219 = load i128, i128* %array_getter218, align 4
  %square220 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter222 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square220, i128 0, i128 %i.1
  %square223 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter222, align 8
  %struct_getter224 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square223, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter224, align 8
  %array_getter228 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter, i128 0, i128 %l.1, i128 %j.2, i128 %idx.2
  %square229 = load i128, i128* %array_getter228, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square229, i128 %f219, i1* @constraint.778)
  %ptr_getter230 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter232 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter230, i128 0, i128 %i.1
  %square233 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter232, align 8
  %struct_getter234 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square233, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter235 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter234, align 8
  %square239 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter235, i128 0, i128 %l.1, i128 %j.2, i128 %idx.2
  store i128 %f219, i128* %square239, align 4
  br label %loop.latch240

loop.latch240:                                    ; preds = %loop.body183
  %add242 = add i128 %idx.2, 1
  %slt245 = icmp slt i128 %add242, %millerloop.k.read_arg_inner
  br i1 %slt245, label %loop.body183, label %loop.exit246

loop.exit246:                                     ; preds = %loop.latch240
  br label %loop.latch247

loop.latch247:                                    ; preds = %loop.exit246
  %add249 = add i128 %j.2, 1
  %slt251 = icmp slt i128 %add249, 2
  br i1 %slt251, label %loop.body182, label %loop.exit252

loop.exit252:                                     ; preds = %loop.latch247
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.exit252
  %add255 = add i128 %l.1, 1
  %slt257 = icmp slt i128 %add255, 6
  br i1 %slt257, label %loop.body181, label %loop.exit258

loop.exit258:                                     ; preds = %loop.latch253
  %call261 = call %struct_template_circuit_linefunctionequal* @fn_template_build_linefunctionequal(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, [256 x i128]* %millerloop.q.read_arg_inner)
  %ptr_getter262 = load [256 x %struct_template_circuit_linefunctionequal*]*, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %line264 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequal*], [256 x %struct_template_circuit_linefunctionequal*]* %ptr_getter262, i128 0, i128 %i.1
  store %struct_template_circuit_linefunctionequal* %call261, %struct_template_circuit_linefunctionequal** %line264, align 8
  br label %loop.body265

loop.body265:                                     ; preds = %loop.latch299, %loop.exit258
  %j.3 = phi i128 [ 0, %loop.exit258 ], [ %add301, %loop.latch299 ]
  br label %loop.body266

loop.body266:                                     ; preds = %loop.latch292, %loop.body265
  %idx.3 = phi i128 [ 0, %loop.body265 ], [ %add294, %loop.latch292 ]
  %Pintermed267 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %add269 = add i128 %i.1, 1
  %array_getter272 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Pintermed267, i128 0, i128 %add269, i128 %j.3, i128 %idx.3
  %Pintermed273 = load i128, i128* %array_getter272, align 4
  %line274 = load [256 x %struct_template_circuit_linefunctionequal*]*, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %array_getter276 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequal*], [256 x %struct_template_circuit_linefunctionequal*]* %line274, i128 0, i128 %i.1
  %line277 = load %struct_template_circuit_linefunctionequal*, %struct_template_circuit_linefunctionequal** %array_getter276, align 8
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %line277, i32 0, i32 3
  %linefunctionequal.p.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter278, align 8
  %array_getter281 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %linefunctionequal.p.read_input_outter, i128 0, i128 %j.3, i128 %idx.3
  %line282 = load i128, i128* %array_getter281, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line282, i128 %Pintermed273, i1* @constraint.779)
  %ptr_getter283 = load [256 x %struct_template_circuit_linefunctionequal*]*, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %array_getter285 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequal*], [256 x %struct_template_circuit_linefunctionequal*]* %ptr_getter283, i128 0, i128 %i.1
  %line286 = load %struct_template_circuit_linefunctionequal*, %struct_template_circuit_linefunctionequal** %array_getter285, align 8
  %struct_getter287 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %line286, i32 0, i32 3
  %linefunctionequal.p.read_input_outter288 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter287, align 8
  %line291 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %linefunctionequal.p.read_input_outter288, i128 0, i128 %j.3, i128 %idx.3
  store i128 %Pintermed273, i128* %line291, align 4
  br label %loop.latch292

loop.latch292:                                    ; preds = %loop.body266
  %add294 = add i128 %idx.3, 1
  %slt297 = icmp slt i128 %add294, %millerloop.k.read_arg_inner
  br i1 %slt297, label %loop.body266, label %loop.exit298

loop.exit298:                                     ; preds = %loop.latch292
  br label %loop.latch299

loop.latch299:                                    ; preds = %loop.exit298
  %add301 = add i128 %j.3, 1
  %slt303 = icmp slt i128 %add301, 2
  br i1 %slt303, label %loop.body265, label %loop.exit304

loop.exit304:                                     ; preds = %loop.latch299
  br label %loop.body305

loop.body305:                                     ; preds = %loop.latch356, %loop.exit304
  %eps.0 = phi i128 [ 0, %loop.exit304 ], [ %add358, %loop.latch356 ]
  br label %loop.body306

loop.body306:                                     ; preds = %loop.latch350, %loop.body305
  %l.2 = phi i128 [ 0, %loop.body305 ], [ %add352, %loop.latch350 ]
  br label %loop.body307

loop.body307:                                     ; preds = %loop.latch344, %loop.body306
  %j.4 = phi i128 [ 0, %loop.body306 ], [ %add346, %loop.latch344 ]
  br label %loop.body308

loop.body308:                                     ; preds = %loop.latch337, %loop.body307
  %idx.4 = phi i128 [ 0, %loop.body307 ], [ %add339, %loop.latch337 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.q.declare_input, align 8
  %array_getter313 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 %eps.0, i128 %l.2, i128 %j.4, i128 %idx.4
  %Q314 = load i128, i128* %array_getter313, align 4
  %line315 = load [256 x %struct_template_circuit_linefunctionequal*]*, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %array_getter317 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequal*], [256 x %struct_template_circuit_linefunctionequal*]* %line315, i128 0, i128 %i.1
  %line318 = load %struct_template_circuit_linefunctionequal*, %struct_template_circuit_linefunctionequal** %array_getter317, align 8
  %struct_getter319 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %line318, i32 0, i32 4
  %linefunctionequal.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter319, align 8
  %array_getter324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %linefunctionequal.q.read_input_outter, i128 0, i128 %eps.0, i128 %l.2, i128 %j.4, i128 %idx.4
  %line325 = load i128, i128* %array_getter324, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line325, i128 %Q314, i1* @constraint.780)
  %ptr_getter326 = load [256 x %struct_template_circuit_linefunctionequal*]*, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %array_getter328 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequal*], [256 x %struct_template_circuit_linefunctionequal*]* %ptr_getter326, i128 0, i128 %i.1
  %line329 = load %struct_template_circuit_linefunctionequal*, %struct_template_circuit_linefunctionequal** %array_getter328, align 8
  %struct_getter330 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %line329, i32 0, i32 4
  %linefunctionequal.q.read_input_outter331 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter330, align 8
  %line336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %linefunctionequal.q.read_input_outter331, i128 0, i128 %eps.0, i128 %l.2, i128 %j.4, i128 %idx.4
  store i128 %Q314, i128* %line336, align 4
  br label %loop.latch337

loop.latch337:                                    ; preds = %loop.body308
  %add339 = add i128 %idx.4, 1
  %slt342 = icmp slt i128 %add339, %millerloop.k.read_arg_inner
  br i1 %slt342, label %loop.body308, label %loop.exit343

loop.exit343:                                     ; preds = %loop.latch337
  br label %loop.latch344

loop.latch344:                                    ; preds = %loop.exit343
  %add346 = add i128 %j.4, 1
  %slt348 = icmp slt i128 %add346, 2
  br i1 %slt348, label %loop.body307, label %loop.exit349

loop.exit349:                                     ; preds = %loop.latch344
  br label %loop.latch350

loop.latch350:                                    ; preds = %loop.exit349
  %add352 = add i128 %l.2, 1
  %slt354 = icmp slt i128 %add352, 6
  br i1 %slt354, label %loop.body306, label %loop.exit355

loop.exit355:                                     ; preds = %loop.latch350
  br label %loop.latch356

loop.latch356:                                    ; preds = %loop.exit355
  %add358 = add i128 %eps.0, 1
  %slt360 = icmp slt i128 %add358, 2
  br i1 %slt360, label %loop.body305, label %loop.exit361

loop.exit361:                                     ; preds = %loop.latch356
  %mul364 = mul i128 2, %millerloop.k.read_arg_inner
  %sub365 = sub i128 %mul364, 1
  %mul368 = mul i128 3, %millerloop.n.read_arg_inner
  %add370 = add i128 %mul368, %call46
  %call371 = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %millerloop.n.read_arg_inner, i128 %sub365, i128 %millerloop.k.read_arg_inner, i128 %add370)
  %ptr_getter372 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %nocarry374 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter372, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12multiplynocarryunequal* %call371, %struct_template_circuit_signedfp12multiplynocarryunequal** %nocarry374, align 8
  br label %loop.body375

loop.body375:                                     ; preds = %loop.latch423, %loop.exit361
  %l.3 = phi i128 [ 0, %loop.exit361 ], [ %add425, %loop.latch423 ]
  br label %loop.body376

loop.body376:                                     ; preds = %loop.latch417, %loop.body375
  %j.5 = phi i128 [ 0, %loop.body375 ], [ %add419, %loop.latch417 ]
  br label %loop.body377

loop.body377:                                     ; preds = %loop.latch408, %loop.body376
  %idx.5 = phi i128 [ 0, %loop.body376 ], [ %add410, %loop.latch408 ]
  %square378 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter380 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square378, i128 0, i128 %i.1
  %square381 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter380, align 8
  %struct_getter382 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square381, i32 0, i32 5
  %signedfp12multiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter382, align 8
  %array_getter386 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.out.read_output_outter, i128 0, i128 %l.3, i128 %j.5, i128 %idx.5
  %square387 = load i128, i128* %array_getter386, align 4
  %nocarry388 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter390 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry388, i128 0, i128 %i.1
  %nocarry391 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter390, align 8
  %struct_getter392 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry391, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter392, align 8
  %array_getter396 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %l.3, i128 %j.5, i128 %idx.5
  %nocarry397 = load i128, i128* %array_getter396, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry397, i128 %square387, i1* @constraint.781)
  %ptr_getter398 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter400 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter398, i128 0, i128 %i.1
  %nocarry401 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter400, align 8
  %struct_getter402 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry401, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter403 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter402, align 8
  %nocarry407 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter403, i128 0, i128 %l.3, i128 %j.5, i128 %idx.5
  store i128 %square387, i128* %nocarry407, align 4
  br label %loop.latch408

loop.latch408:                                    ; preds = %loop.body377
  %add410 = add i128 %idx.5, 1
  %mul413 = mul i128 2, %millerloop.k.read_arg_inner
  %sub414 = sub i128 %mul413, 1
  %slt415 = icmp slt i128 %add410, %sub414
  br i1 %slt415, label %loop.body377, label %loop.exit416

loop.exit416:                                     ; preds = %loop.latch408
  br label %loop.latch417

loop.latch417:                                    ; preds = %loop.exit416
  %add419 = add i128 %j.5, 1
  %slt421 = icmp slt i128 %add419, 2
  br i1 %slt421, label %loop.body376, label %loop.exit422

loop.exit422:                                     ; preds = %loop.latch417
  br label %loop.latch423

loop.latch423:                                    ; preds = %loop.exit422
  %add425 = add i128 %l.3, 1
  %slt427 = icmp slt i128 %add425, 6
  br i1 %slt427, label %loop.body375, label %loop.exit428

loop.exit428:                                     ; preds = %loop.latch423
  br label %loop.body429

loop.body429:                                     ; preds = %loop.latch475, %loop.exit428
  %l.4 = phi i128 [ 0, %loop.exit428 ], [ %add477, %loop.latch475 ]
  br label %loop.body430

loop.body430:                                     ; preds = %loop.latch469, %loop.body429
  %j.6 = phi i128 [ 0, %loop.body429 ], [ %add471, %loop.latch469 ]
  br label %loop.body431

loop.body431:                                     ; preds = %loop.latch462, %loop.body430
  %idx.6 = phi i128 [ 0, %loop.body430 ], [ %add464, %loop.latch462 ]
  %line432 = load [256 x %struct_template_circuit_linefunctionequal*]*, [256 x %struct_template_circuit_linefunctionequal*]** %line, align 8
  %array_getter434 = getelementptr inbounds [256 x %struct_template_circuit_linefunctionequal*], [256 x %struct_template_circuit_linefunctionequal*]* %line432, i128 0, i128 %i.1
  %line435 = load %struct_template_circuit_linefunctionequal*, %struct_template_circuit_linefunctionequal** %array_getter434, align 8
  %struct_getter436 = getelementptr inbounds %struct_template_circuit_linefunctionequal, %struct_template_circuit_linefunctionequal* %line435, i32 0, i32 5
  %linefunctionequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter436, align 8
  %array_getter440 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequal.out.read_output_outter, i128 0, i128 %l.4, i128 %j.6, i128 %idx.6
  %line441 = load i128, i128* %array_getter440, align 4
  %nocarry442 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter444 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry442, i128 0, i128 %i.1
  %nocarry445 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter444, align 8
  %struct_getter446 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry445, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter446, align 8
  %array_getter450 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %l.4, i128 %j.6, i128 %idx.6
  %nocarry451 = load i128, i128* %array_getter450, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry451, i128 %line441, i1* @constraint.782)
  %ptr_getter452 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter454 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter452, i128 0, i128 %i.1
  %nocarry455 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter454, align 8
  %struct_getter456 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry455, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter457 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter456, align 8
  %nocarry461 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter457, i128 0, i128 %l.4, i128 %j.6, i128 %idx.6
  store i128 %line441, i128* %nocarry461, align 4
  br label %loop.latch462

loop.latch462:                                    ; preds = %loop.body431
  %add464 = add i128 %idx.6, 1
  %slt467 = icmp slt i128 %add464, %millerloop.k.read_arg_inner
  br i1 %slt467, label %loop.body431, label %loop.exit468

loop.exit468:                                     ; preds = %loop.latch462
  br label %loop.latch469

loop.latch469:                                    ; preds = %loop.exit468
  %add471 = add i128 %j.6, 1
  %slt473 = icmp slt i128 %add471, 2
  br i1 %slt473, label %loop.body430, label %loop.exit474

loop.exit474:                                     ; preds = %loop.latch469
  br label %loop.latch475

loop.latch475:                                    ; preds = %loop.exit474
  %add477 = add i128 %l.4, 1
  %slt479 = icmp slt i128 %add477, 6
  br i1 %slt479, label %loop.body429, label %loop.exit480

loop.exit480:                                     ; preds = %loop.latch475
  %mul484 = mul i128 2, %millerloop.k.read_arg_inner
  %sub485 = sub i128 %mul484, 2
  %mul488 = mul i128 4, %millerloop.n.read_arg_inner
  %add490 = add i128 %mul488, %call60
  %call491 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, i128 %sub485, [256 x i128]* %millerloop.q.read_arg_inner, i128 %add490)
  %ptr_getter492 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %compress494 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %ptr_getter492, i128 0, i128 %i.1
  store %struct_template_circuit_fp12compress* %call491, %struct_template_circuit_fp12compress** %compress494, align 8
  br label %loop.body495

loop.body495:                                     ; preds = %loop.latch543, %loop.exit480
  %l.5 = phi i128 [ 0, %loop.exit480 ], [ %add545, %loop.latch543 ]
  br label %loop.body496

loop.body496:                                     ; preds = %loop.latch537, %loop.body495
  %j.7 = phi i128 [ 0, %loop.body495 ], [ %add539, %loop.latch537 ]
  br label %loop.body497

loop.body497:                                     ; preds = %loop.latch528, %loop.body496
  %idx.7 = phi i128 [ 0, %loop.body496 ], [ %add530, %loop.latch528 ]
  %nocarry498 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter500 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry498, i128 0, i128 %i.1
  %nocarry501 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter500, align 8
  %struct_getter502 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry501, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter502, align 8
  %array_getter506 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %l.5, i128 %j.7, i128 %idx.7
  %nocarry507 = load i128, i128* %array_getter506, align 4
  %compress508 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter510 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %compress508, i128 0, i128 %i.1
  %compress511 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter510, align 8
  %struct_getter512 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress511, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter512, align 8
  %array_getter516 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %l.5, i128 %j.7, i128 %idx.7
  %compress517 = load i128, i128* %array_getter516, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress517, i128 %nocarry507, i1* @constraint.783)
  %ptr_getter518 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter520 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %ptr_getter518, i128 0, i128 %i.1
  %compress521 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter520, align 8
  %struct_getter522 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress521, i32 0, i32 5
  %fp12compress.in.read_input_outter523 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter522, align 8
  %compress527 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter523, i128 0, i128 %l.5, i128 %j.7, i128 %idx.7
  store i128 %nocarry507, i128* %compress527, align 4
  br label %loop.latch528

loop.latch528:                                    ; preds = %loop.body497
  %add530 = add i128 %idx.7, 1
  %mul533 = mul i128 3, %millerloop.k.read_arg_inner
  %sub534 = sub i128 %mul533, 2
  %slt535 = icmp slt i128 %add530, %sub534
  br i1 %slt535, label %loop.body497, label %loop.exit536

loop.exit536:                                     ; preds = %loop.latch528
  br label %loop.latch537

loop.latch537:                                    ; preds = %loop.exit536
  %add539 = add i128 %j.7, 1
  %slt541 = icmp slt i128 %add539, 2
  br i1 %slt541, label %loop.body496, label %loop.exit542

loop.exit542:                                     ; preds = %loop.latch537
  br label %loop.latch543

loop.latch543:                                    ; preds = %loop.exit542
  %add545 = add i128 %l.5, 1
  %slt547 = icmp slt i128 %add545, 6
  br i1 %slt547, label %loop.body495, label %loop.exit548

loop.exit548:                                     ; preds = %loop.latch543
  %mul552 = mul i128 4, %millerloop.n.read_arg_inner
  %add554 = add i128 %mul552, %call60
  %call556 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, i128 %add554, [256 x i128]* %millerloop.q.read_arg_inner)
  %ptr_getter557 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %fdouble559 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %ptr_getter557, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12carrymodp* %call556, %struct_template_circuit_signedfp12carrymodp** %fdouble559, align 8
  br label %loop.body560

loop.body560:                                     ; preds = %loop.latch606, %loop.exit548
  %l.6 = phi i128 [ 0, %loop.exit548 ], [ %add608, %loop.latch606 ]
  br label %loop.body561

loop.body561:                                     ; preds = %loop.latch600, %loop.body560
  %j.8 = phi i128 [ 0, %loop.body560 ], [ %add602, %loop.latch600 ]
  br label %loop.body562

loop.body562:                                     ; preds = %loop.latch593, %loop.body561
  %idx.8 = phi i128 [ 0, %loop.body561 ], [ %add595, %loop.latch593 ]
  %compress563 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter565 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %compress563, i128 0, i128 %i.1
  %compress566 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter565, align 8
  %struct_getter567 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress566, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter567, align 8
  %array_getter571 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %l.6, i128 %j.8, i128 %idx.8
  %compress572 = load i128, i128* %array_getter571, align 4
  %fdouble573 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter575 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble573, i128 0, i128 %i.1
  %fdouble576 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter575, align 8
  %struct_getter577 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble576, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter577, align 8
  %array_getter581 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %l.6, i128 %j.8, i128 %idx.8
  %fdouble582 = load i128, i128* %array_getter581, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fdouble582, i128 %compress572, i1* @constraint.784)
  %ptr_getter583 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter585 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %ptr_getter583, i128 0, i128 %i.1
  %fdouble586 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter585, align 8
  %struct_getter587 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble586, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter588 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter587, align 8
  %fdouble592 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter588, i128 0, i128 %l.6, i128 %j.8, i128 %idx.8
  store i128 %compress572, i128* %fdouble592, align 4
  br label %loop.latch593

loop.latch593:                                    ; preds = %loop.body562
  %add595 = add i128 %idx.8, 1
  %slt598 = icmp slt i128 %add595, %millerloop.k.read_arg_inner
  br i1 %slt598, label %loop.body562, label %loop.exit599

loop.exit599:                                     ; preds = %loop.latch593
  br label %loop.latch600

loop.latch600:                                    ; preds = %loop.exit599
  %add602 = add i128 %j.8, 1
  %slt604 = icmp slt i128 %add602, 2
  br i1 %slt604, label %loop.body561, label %loop.exit605

loop.exit605:                                     ; preds = %loop.latch600
  br label %loop.latch606

loop.latch606:                                    ; preds = %loop.exit605
  %add608 = add i128 %l.6, 1
  %slt610 = icmp slt i128 %add608, 6
  br i1 %slt610, label %loop.body560, label %loop.exit611

loop.exit611:                                     ; preds = %loop.latch606
  %call615 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, i128 0, i128 %millerloop.b.read_arg_inner, [256 x i128]* %millerloop.q.read_arg_inner)
  %ptr_getter616 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %Pdouble618 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %ptr_getter616, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedouble* %call615, %struct_template_circuit_ellipticcurvedouble** %Pdouble618, align 8
  br label %loop.body619

loop.body619:                                     ; preds = %loop.latch653, %loop.exit611
  %j.9 = phi i128 [ 0, %loop.exit611 ], [ %add655, %loop.latch653 ]
  br label %loop.body620

loop.body620:                                     ; preds = %loop.latch646, %loop.body619
  %idx.9 = phi i128 [ 0, %loop.body619 ], [ %add648, %loop.latch646 ]
  %Pintermed621 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %add623 = add i128 %i.1, 1
  %array_getter626 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Pintermed621, i128 0, i128 %add623, i128 %j.9, i128 %idx.9
  %Pintermed627 = load i128, i128* %array_getter626, align 4
  %Pdouble628 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter630 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble628, i128 0, i128 %i.1
  %Pdouble631 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter630, align 8
  %struct_getter632 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble631, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter632, align 8
  %array_getter635 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %j.9, i128 %idx.9
  %Pdouble636 = load i128, i128* %array_getter635, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble636, i128 %Pintermed627, i1* @constraint.785)
  %ptr_getter637 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter639 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %ptr_getter637, i128 0, i128 %i.1
  %Pdouble640 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter639, align 8
  %struct_getter641 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble640, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter642 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter641, align 8
  %Pdouble645 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter642, i128 0, i128 %j.9, i128 %idx.9
  store i128 %Pintermed627, i128* %Pdouble645, align 4
  br label %loop.latch646

loop.latch646:                                    ; preds = %loop.body620
  %add648 = add i128 %idx.9, 1
  %slt651 = icmp slt i128 %add648, %millerloop.k.read_arg_inner
  br i1 %slt651, label %loop.body620, label %loop.exit652

loop.exit652:                                     ; preds = %loop.latch646
  br label %loop.latch653

loop.latch653:                                    ; preds = %loop.exit652
  %add655 = add i128 %j.9, 1
  %slt657 = icmp slt i128 %add655, 2
  br i1 %slt657, label %loop.body619, label %loop.exit658

loop.exit658:                                     ; preds = %loop.latch653
  %Bits661 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter663 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits661, i128 0, i128 %i.1
  %Bits664 = load i128, i128* %array_getter663, align 4
  %eq665 = icmp eq i128 %Bits664, 0
  br i1 %eq665, label %if.true659, label %if.false660

if.true659:                                       ; preds = %loop.exit658
  br label %loop.body666

if.false660:                                      ; preds = %loop.exit658
  %call749 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, [256 x i128]* %millerloop.q.read_arg_inner)
  %ptr_getter750 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %fadd_pre752 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter750, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12multiply* %call749, %struct_template_circuit_fp12multiply** %fadd_pre752, align 8
  br label %loop.body753

loop.body666:                                     ; preds = %loop.latch705, %if.true659
  %l.7 = phi i128 [ 0, %if.true659 ], [ %add707, %loop.latch705 ]
  br label %loop.body667

loop.body667:                                     ; preds = %loop.latch699, %loop.body666
  %j.10 = phi i128 [ 0, %loop.body666 ], [ %add701, %loop.latch699 ]
  br label %loop.body668

loop.body668:                                     ; preds = %loop.latch692, %loop.body667
  %idx.10 = phi i128 [ 0, %loop.body667 ], [ %add694, %loop.latch692 ]
  %fdouble669 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter671 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble669, i128 0, i128 %i.1
  %fdouble672 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter671, align 8
  %struct_getter673 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble672, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter673, align 8
  %array_getter677 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %l.7, i128 %j.10, i128 %idx.10
  %fdouble678 = load i128, i128* %array_getter677, align 4
  %f679 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %array_getter684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f679, i128 0, i128 %i.1, i128 %l.7, i128 %j.10, i128 %idx.10
  %f685 = load i128, i128* %array_getter684, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f685, i128 %fdouble678, i1* @constraint.786)
  %ptr_getter686 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %f691 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter686, i128 0, i128 %i.1, i128 %l.7, i128 %j.10, i128 %idx.10
  store i128 %fdouble678, i128* %f691, align 4
  br label %loop.latch692

loop.latch692:                                    ; preds = %loop.body668
  %add694 = add i128 %idx.10, 1
  %slt697 = icmp slt i128 %add694, %millerloop.k.read_arg_inner
  br i1 %slt697, label %loop.body668, label %loop.exit698

loop.exit698:                                     ; preds = %loop.latch692
  br label %loop.latch699

loop.latch699:                                    ; preds = %loop.exit698
  %add701 = add i128 %j.10, 1
  %slt703 = icmp slt i128 %add701, 2
  br i1 %slt703, label %loop.body667, label %loop.exit704

loop.exit704:                                     ; preds = %loop.latch699
  br label %loop.latch705

loop.latch705:                                    ; preds = %loop.exit704
  %add707 = add i128 %l.7, 1
  %slt709 = icmp slt i128 %add707, 6
  br i1 %slt709, label %loop.body666, label %loop.exit710

loop.exit710:                                     ; preds = %loop.latch705
  br label %loop.body711

loop.body711:                                     ; preds = %loop.latch740, %loop.exit710
  %j.11 = phi i128 [ 0, %loop.exit710 ], [ %add742, %loop.latch740 ]
  br label %loop.body712

loop.body712:                                     ; preds = %loop.latch733, %loop.body711
  %idx.11 = phi i128 [ 0, %loop.body711 ], [ %add735, %loop.latch733 ]
  %Pdouble713 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter715 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble713, i128 0, i128 %i.1
  %Pdouble716 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter715, align 8
  %struct_getter717 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble716, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter717, align 8
  %array_getter720 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %j.11, i128 %idx.11
  %Pdouble721 = load i128, i128* %array_getter720, align 4
  %Pintermed722 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %array_getter726 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Pintermed722, i128 0, i128 %i.1, i128 %j.11, i128 %idx.11
  %Pintermed727 = load i128, i128* %array_getter726, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pintermed727, i128 %Pdouble721, i1* @constraint.787)
  %ptr_getter728 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %Pintermed732 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter728, i128 0, i128 %i.1, i128 %j.11, i128 %idx.11
  store i128 %Pdouble721, i128* %Pintermed732, align 4
  br label %loop.latch733

loop.latch733:                                    ; preds = %loop.body712
  %add735 = add i128 %idx.11, 1
  %slt738 = icmp slt i128 %add735, %millerloop.k.read_arg_inner
  br i1 %slt738, label %loop.body712, label %loop.exit739

loop.exit739:                                     ; preds = %loop.latch733
  br label %loop.latch740

loop.latch740:                                    ; preds = %loop.exit739
  %add742 = add i128 %j.11, 1
  %slt744 = icmp slt i128 %add742, 2
  br i1 %slt744, label %loop.body711, label %loop.exit745

loop.exit745:                                     ; preds = %loop.latch740
  br label %if.exit1173

loop.body753:                                     ; preds = %loop.latch826, %if.false660
  %l.8 = phi i128 [ 0, %if.false660 ], [ %add828, %loop.latch826 ]
  br label %loop.body754

loop.body754:                                     ; preds = %loop.latch820, %loop.body753
  %j.12 = phi i128 [ 0, %loop.body753 ], [ %add822, %loop.latch820 ]
  br label %loop.body755

loop.body755:                                     ; preds = %loop.latch813, %loop.body754
  %idx.12 = phi i128 [ 0, %loop.body754 ], [ %add815, %loop.latch813 ]
  %fdouble756 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble, align 8
  %array_getter758 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble756, i128 0, i128 %i.1
  %fdouble759 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter758, align 8
  %struct_getter760 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble759, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter761 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter760, align 8
  %array_getter765 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter761, i128 0, i128 %l.8, i128 %j.12, i128 %idx.12
  %fdouble766 = load i128, i128* %array_getter765, align 4
  %fadd_pre767 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %array_getter769 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fadd_pre767, i128 0, i128 %curid.0
  %fadd_pre770 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter769, align 8
  %struct_getter771 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fadd_pre770, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter771, align 8
  %array_getter775 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %l.8, i128 %j.12, i128 %idx.12
  %fadd_pre776 = load i128, i128* %array_getter775, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd_pre776, i128 %fdouble766, i1* @constraint.788)
  %ptr_getter777 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %array_getter779 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter777, i128 0, i128 %curid.0
  %fadd_pre780 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter779, align 8
  %struct_getter781 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fadd_pre780, i32 0, i32 3
  %fp12multiply.a.read_input_outter782 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter781, align 8
  %fadd_pre786 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter782, i128 0, i128 %l.8, i128 %j.12, i128 %idx.12
  store i128 %fdouble766, i128* %fadd_pre786, align 4
  %in787 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.in.declare_input, align 8
  %array_getter791 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in787, i128 0, i128 %l.8, i128 %j.12, i128 %idx.12
  %in792 = load i128, i128* %array_getter791, align 4
  %fadd_pre793 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %array_getter795 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fadd_pre793, i128 0, i128 %curid.0
  %fadd_pre796 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter795, align 8
  %struct_getter797 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fadd_pre796, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter797, align 8
  %array_getter801 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %l.8, i128 %j.12, i128 %idx.12
  %fadd_pre802 = load i128, i128* %array_getter801, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd_pre802, i128 %in792, i1* @constraint.789)
  %ptr_getter803 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %array_getter805 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter803, i128 0, i128 %curid.0
  %fadd_pre806 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter805, align 8
  %struct_getter807 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fadd_pre806, i32 0, i32 4
  %fp12multiply.b.read_input_outter808 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter807, align 8
  %fadd_pre812 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter808, i128 0, i128 %l.8, i128 %j.12, i128 %idx.12
  store i128 %in792, i128* %fadd_pre812, align 4
  br label %loop.latch813

loop.latch813:                                    ; preds = %loop.body755
  %add815 = add i128 %idx.12, 1
  %slt818 = icmp slt i128 %add815, %millerloop.k.read_arg_inner
  br i1 %slt818, label %loop.body755, label %loop.exit819

loop.exit819:                                     ; preds = %loop.latch813
  br label %loop.latch820

loop.latch820:                                    ; preds = %loop.exit819
  %add822 = add i128 %j.12, 1
  %slt824 = icmp slt i128 %add822, 2
  br i1 %slt824, label %loop.body754, label %loop.exit825

loop.exit825:                                     ; preds = %loop.latch820
  br label %loop.latch826

loop.latch826:                                    ; preds = %loop.exit825
  %add828 = add i128 %l.8, 1
  %slt830 = icmp slt i128 %add828, 6
  br i1 %slt830, label %loop.body753, label %loop.exit831

loop.exit831:                                     ; preds = %loop.latch826
  %call837 = call %struct_template_circuit_fp12multiplywithlineunequal* @fn_template_build_fp12multiplywithlineunequal(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, i128 %millerloop.k.read_arg_inner, i128 %millerloop.n.read_arg_inner, [256 x i128]* %millerloop.q.read_arg_inner)
  %ptr_getter838 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %fadd840 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %ptr_getter838, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12multiplywithlineunequal* %call837, %struct_template_circuit_fp12multiplywithlineunequal** %fadd840, align 8
  br label %loop.body841

loop.body841:                                     ; preds = %loop.latch887, %loop.exit831
  %l.9 = phi i128 [ 0, %loop.exit831 ], [ %add889, %loop.latch887 ]
  br label %loop.body842

loop.body842:                                     ; preds = %loop.latch881, %loop.body841
  %j.13 = phi i128 [ 0, %loop.body841 ], [ %add883, %loop.latch881 ]
  br label %loop.body843

loop.body843:                                     ; preds = %loop.latch874, %loop.body842
  %idx.13 = phi i128 [ 0, %loop.body842 ], [ %add876, %loop.latch874 ]
  %fadd_pre844 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre, align 8
  %array_getter846 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fadd_pre844, i128 0, i128 %curid.0
  %fadd_pre847 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter846, align 8
  %struct_getter848 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fadd_pre847, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter848, align 8
  %array_getter852 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %l.9, i128 %j.13, i128 %idx.13
  %fadd_pre853 = load i128, i128* %array_getter852, align 4
  %fadd854 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter856 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %fadd854, i128 0, i128 %curid.0
  %fadd857 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter856, align 8
  %struct_getter858 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd857, i32 0, i32 5
  %fp12multiplywithlineunequal.g.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter858, align 8
  %array_getter862 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.g.read_input_outter, i128 0, i128 %l.9, i128 %j.13, i128 %idx.13
  %fadd863 = load i128, i128* %array_getter862, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd863, i128 %fadd_pre853, i1* @constraint.790)
  %ptr_getter864 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter866 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %ptr_getter864, i128 0, i128 %curid.0
  %fadd867 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter866, align 8
  %struct_getter868 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd867, i32 0, i32 5
  %fp12multiplywithlineunequal.g.read_input_outter869 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter868, align 8
  %fadd873 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.g.read_input_outter869, i128 0, i128 %l.9, i128 %j.13, i128 %idx.13
  store i128 %fadd_pre853, i128* %fadd873, align 4
  br label %loop.latch874

loop.latch874:                                    ; preds = %loop.body843
  %add876 = add i128 %idx.13, 1
  %slt879 = icmp slt i128 %add876, %millerloop.k.read_arg_inner
  br i1 %slt879, label %loop.body843, label %loop.exit880

loop.exit880:                                     ; preds = %loop.latch874
  br label %loop.latch881

loop.latch881:                                    ; preds = %loop.exit880
  %add883 = add i128 %j.13, 1
  %slt885 = icmp slt i128 %add883, 2
  br i1 %slt885, label %loop.body842, label %loop.exit886

loop.exit886:                                     ; preds = %loop.latch881
  br label %loop.latch887

loop.latch887:                                    ; preds = %loop.exit886
  %add889 = add i128 %l.9, 1
  %slt891 = icmp slt i128 %add889, 6
  br i1 %slt891, label %loop.body841, label %loop.exit892

loop.exit892:                                     ; preds = %loop.latch887
  br label %loop.body893

loop.body893:                                     ; preds = %loop.latch954, %loop.exit892
  %j.14 = phi i128 [ 0, %loop.exit892 ], [ %add956, %loop.latch954 ]
  br label %loop.body894

loop.body894:                                     ; preds = %loop.latch947, %loop.body893
  %idx.14 = phi i128 [ 0, %loop.body893 ], [ %add949, %loop.latch947 ]
  %Pdouble895 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter897 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble895, i128 0, i128 %i.1
  %Pdouble898 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter897, align 8
  %struct_getter899 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble898, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter900 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter899, align 8
  %array_getter903 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter900, i128 0, i128 %j.14, i128 %idx.14
  %Pdouble904 = load i128, i128* %array_getter903, align 4
  %fadd905 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter907 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %fadd905, i128 0, i128 %curid.0
  %fadd908 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter907, align 8
  %struct_getter909 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd908, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter909, align 8
  %array_getter912 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter, i128 0, i128 0, i128 %j.14, i128 %idx.14
  %fadd913 = load i128, i128* %array_getter912, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd913, i128 %Pdouble904, i1* @constraint.791)
  %ptr_getter914 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter916 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %ptr_getter914, i128 0, i128 %curid.0
  %fadd917 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter916, align 8
  %struct_getter918 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd917, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter919 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter918, align 8
  %fadd922 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter919, i128 0, i128 0, i128 %j.14, i128 %idx.14
  store i128 %Pdouble904, i128* %fadd922, align 4
  %P923 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloop.p.declare_input, align 8
  %array_getter926 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P923, i128 0, i128 %j.14, i128 %idx.14
  %P927 = load i128, i128* %array_getter926, align 4
  %fadd928 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter930 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %fadd928, i128 0, i128 %curid.0
  %fadd931 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter930, align 8
  %struct_getter932 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd931, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter933 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter932, align 8
  %array_getter936 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter933, i128 0, i128 1, i128 %j.14, i128 %idx.14
  %fadd937 = load i128, i128* %array_getter936, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd937, i128 %P927, i1* @constraint.792)
  %ptr_getter938 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter940 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %ptr_getter938, i128 0, i128 %curid.0
  %fadd941 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter940, align 8
  %struct_getter942 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd941, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter943 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter942, align 8
  %fadd946 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter943, i128 0, i128 1, i128 %j.14, i128 %idx.14
  store i128 %P927, i128* %fadd946, align 4
  br label %loop.latch947

loop.latch947:                                    ; preds = %loop.body894
  %add949 = add i128 %idx.14, 1
  %slt952 = icmp slt i128 %add949, %millerloop.k.read_arg_inner
  br i1 %slt952, label %loop.body894, label %loop.exit953

loop.exit953:                                     ; preds = %loop.latch947
  br label %loop.latch954

loop.latch954:                                    ; preds = %loop.exit953
  %add956 = add i128 %j.14, 1
  %slt958 = icmp slt i128 %add956, 2
  br i1 %slt958, label %loop.body893, label %loop.exit959

loop.exit959:                                     ; preds = %loop.latch954
  br label %loop.body960

loop.body960:                                     ; preds = %loop.latch1012, %loop.exit959
  %eps.1 = phi i128 [ 0, %loop.exit959 ], [ %add1014, %loop.latch1012 ]
  br label %loop.body961

loop.body961:                                     ; preds = %loop.latch1006, %loop.body960
  %l.10 = phi i128 [ 0, %loop.body960 ], [ %add1008, %loop.latch1006 ]
  br label %loop.body962

loop.body962:                                     ; preds = %loop.latch1000, %loop.body961
  %j.15 = phi i128 [ 0, %loop.body961 ], [ %add1002, %loop.latch1000 ]
  br label %loop.body963

loop.body963:                                     ; preds = %loop.latch993, %loop.body962
  %idx.15 = phi i128 [ 0, %loop.body962 ], [ %add995, %loop.latch993 ]
  %Q964 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.q.declare_input, align 8
  %array_getter969 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q964, i128 0, i128 %eps.1, i128 %l.10, i128 %j.15, i128 %idx.15
  %Q970 = load i128, i128* %array_getter969, align 4
  %fadd971 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter973 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %fadd971, i128 0, i128 %curid.0
  %fadd974 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter973, align 8
  %struct_getter975 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd974, i32 0, i32 7
  %fp12multiplywithlineunequal.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter975, align 8
  %array_getter980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequal.q.read_input_outter, i128 0, i128 %eps.1, i128 %l.10, i128 %j.15, i128 %idx.15
  %fadd981 = load i128, i128* %array_getter980, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd981, i128 %Q970, i1* @constraint.793)
  %ptr_getter982 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter984 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %ptr_getter982, i128 0, i128 %curid.0
  %fadd985 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter984, align 8
  %struct_getter986 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd985, i32 0, i32 7
  %fp12multiplywithlineunequal.q.read_input_outter987 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter986, align 8
  %fadd992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequal.q.read_input_outter987, i128 0, i128 %eps.1, i128 %l.10, i128 %j.15, i128 %idx.15
  store i128 %Q970, i128* %fadd992, align 4
  br label %loop.latch993

loop.latch993:                                    ; preds = %loop.body963
  %add995 = add i128 %idx.15, 1
  %slt998 = icmp slt i128 %add995, %millerloop.k.read_arg_inner
  br i1 %slt998, label %loop.body963, label %loop.exit999

loop.exit999:                                     ; preds = %loop.latch993
  br label %loop.latch1000

loop.latch1000:                                   ; preds = %loop.exit999
  %add1002 = add i128 %j.15, 1
  %slt1004 = icmp slt i128 %add1002, 2
  br i1 %slt1004, label %loop.body962, label %loop.exit1005

loop.exit1005:                                    ; preds = %loop.latch1000
  br label %loop.latch1006

loop.latch1006:                                   ; preds = %loop.exit1005
  %add1008 = add i128 %l.10, 1
  %slt1010 = icmp slt i128 %add1008, 6
  br i1 %slt1010, label %loop.body961, label %loop.exit1011

loop.exit1011:                                    ; preds = %loop.latch1006
  br label %loop.latch1012

loop.latch1012:                                   ; preds = %loop.exit1011
  %add1014 = add i128 %eps.1, 1
  %slt1016 = icmp slt i128 %add1014, 2
  br i1 %slt1016, label %loop.body960, label %loop.exit1017

loop.exit1017:                                    ; preds = %loop.latch1012
  br label %loop.body1018

loop.body1018:                                    ; preds = %loop.latch1057, %loop.exit1017
  %l.11 = phi i128 [ 0, %loop.exit1017 ], [ %add1059, %loop.latch1057 ]
  br label %loop.body1019

loop.body1019:                                    ; preds = %loop.latch1051, %loop.body1018
  %j.16 = phi i128 [ 0, %loop.body1018 ], [ %add1053, %loop.latch1051 ]
  br label %loop.body1020

loop.body1020:                                    ; preds = %loop.latch1044, %loop.body1019
  %idx.16 = phi i128 [ 0, %loop.body1019 ], [ %add1046, %loop.latch1044 ]
  %fadd1021 = load [256 x %struct_template_circuit_fp12multiplywithlineunequal*]*, [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd, align 8
  %array_getter1023 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiplywithlineunequal*], [256 x %struct_template_circuit_fp12multiplywithlineunequal*]* %fadd1021, i128 0, i128 %curid.0
  %fadd1024 = load %struct_template_circuit_fp12multiplywithlineunequal*, %struct_template_circuit_fp12multiplywithlineunequal** %array_getter1023, align 8
  %struct_getter1025 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %fadd1024, i32 0, i32 8
  %fp12multiplywithlineunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1025, align 8
  %array_getter1029 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.out.read_output_outter, i128 0, i128 %l.11, i128 %j.16, i128 %idx.16
  %fadd1030 = load i128, i128* %array_getter1029, align 4
  %f1031 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %array_getter1036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f1031, i128 0, i128 %i.1, i128 %l.11, i128 %j.16, i128 %idx.16
  %f1037 = load i128, i128* %array_getter1036, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f1037, i128 %fadd1030, i1* @constraint.794)
  %ptr_getter1038 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %f1043 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter1038, i128 0, i128 %i.1, i128 %l.11, i128 %j.16, i128 %idx.16
  store i128 %fadd1030, i128* %f1043, align 4
  br label %loop.latch1044

loop.latch1044:                                   ; preds = %loop.body1020
  %add1046 = add i128 %idx.16, 1
  %slt1049 = icmp slt i128 %add1046, %millerloop.k.read_arg_inner
  br i1 %slt1049, label %loop.body1020, label %loop.exit1050

loop.exit1050:                                    ; preds = %loop.latch1044
  br label %loop.latch1051

loop.latch1051:                                   ; preds = %loop.exit1050
  %add1053 = add i128 %j.16, 1
  %slt1055 = icmp slt i128 %add1053, 2
  br i1 %slt1055, label %loop.body1019, label %loop.exit1056

loop.exit1056:                                    ; preds = %loop.latch1051
  br label %loop.latch1057

loop.latch1057:                                   ; preds = %loop.exit1056
  %add1059 = add i128 %l.11, 1
  %slt1061 = icmp slt i128 %add1059, 6
  br i1 %slt1061, label %loop.body1018, label %loop.exit1062

loop.exit1062:                                    ; preds = %loop.latch1057
  %call1066 = call %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %millerloop.n.read_arg_inner, i128 %millerloop.k.read_arg_inner, [256 x i128]* %millerloop.q.read_arg_inner)
  %ptr_getter1067 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %Padd1069 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %ptr_getter1067, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddunequal* %call1066, %struct_template_circuit_ellipticcurveaddunequal** %Padd1069, align 8
  br label %loop.body1070

loop.body1070:                                    ; preds = %loop.latch1130, %loop.exit1062
  %j.17 = phi i128 [ 0, %loop.exit1062 ], [ %add1132, %loop.latch1130 ]
  br label %loop.body1071

loop.body1071:                                    ; preds = %loop.latch1123, %loop.body1070
  %idx.17 = phi i128 [ 0, %loop.body1070 ], [ %add1125, %loop.latch1123 ]
  %Pdouble1072 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter1074 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble1072, i128 0, i128 %i.1
  %Pdouble1075 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter1074, align 8
  %struct_getter1076 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble1075, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter1077 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1076, align 8
  %array_getter1080 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter1077, i128 0, i128 %j.17, i128 %idx.17
  %Pdouble1081 = load i128, i128* %array_getter1080, align 4
  %Padd1082 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter1084 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd1082, i128 0, i128 %curid.0
  %Padd1085 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter1084, align 8
  %struct_getter1086 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd1085, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1086, align 8
  %array_getter1089 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter, i128 0, i128 %j.17, i128 %idx.17
  %Padd1090 = load i128, i128* %array_getter1089, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd1090, i128 %Pdouble1081, i1* @constraint.795)
  %ptr_getter1091 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter1093 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %ptr_getter1091, i128 0, i128 %curid.0
  %Padd1094 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter1093, align 8
  %struct_getter1095 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd1094, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter1096 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1095, align 8
  %Padd1099 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter1096, i128 0, i128 %j.17, i128 %idx.17
  store i128 %Pdouble1081, i128* %Padd1099, align 4
  %P1100 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloop.p.declare_input, align 8
  %array_getter1103 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P1100, i128 0, i128 %j.17, i128 %idx.17
  %P1104 = load i128, i128* %array_getter1103, align 4
  %Padd1105 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter1107 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd1105, i128 0, i128 %curid.0
  %Padd1108 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter1107, align 8
  %struct_getter1109 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd1108, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1109, align 8
  %array_getter1112 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter, i128 0, i128 %j.17, i128 %idx.17
  %Padd1113 = load i128, i128* %array_getter1112, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd1113, i128 %P1104, i1* @constraint.796)
  %ptr_getter1114 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter1116 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %ptr_getter1114, i128 0, i128 %curid.0
  %Padd1117 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter1116, align 8
  %struct_getter1118 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd1117, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter1119 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1118, align 8
  %Padd1122 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter1119, i128 0, i128 %j.17, i128 %idx.17
  store i128 %P1104, i128* %Padd1122, align 4
  br label %loop.latch1123

loop.latch1123:                                   ; preds = %loop.body1071
  %add1125 = add i128 %idx.17, 1
  %slt1128 = icmp slt i128 %add1125, %millerloop.k.read_arg_inner
  br i1 %slt1128, label %loop.body1071, label %loop.exit1129

loop.exit1129:                                    ; preds = %loop.latch1123
  br label %loop.latch1130

loop.latch1130:                                   ; preds = %loop.exit1129
  %add1132 = add i128 %j.17, 1
  %slt1134 = icmp slt i128 %add1132, 2
  br i1 %slt1134, label %loop.body1070, label %loop.exit1135

loop.exit1135:                                    ; preds = %loop.latch1130
  br label %loop.body1136

loop.body1136:                                    ; preds = %loop.latch1165, %loop.exit1135
  %j.18 = phi i128 [ 0, %loop.exit1135 ], [ %add1167, %loop.latch1165 ]
  br label %loop.body1137

loop.body1137:                                    ; preds = %loop.latch1158, %loop.body1136
  %idx.18 = phi i128 [ 0, %loop.body1136 ], [ %add1160, %loop.latch1158 ]
  %Padd1138 = load [256 x %struct_template_circuit_ellipticcurveaddunequal*]*, [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd, align 8
  %array_getter1140 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd1138, i128 0, i128 %curid.0
  %Padd1141 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter1140, align 8
  %struct_getter1142 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd1141, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1142, align 8
  %array_getter1145 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter, i128 0, i128 %j.18, i128 %idx.18
  %Padd1146 = load i128, i128* %array_getter1145, align 4
  %Pintermed1147 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %array_getter1151 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Pintermed1147, i128 0, i128 %i.1, i128 %j.18, i128 %idx.18
  %Pintermed1152 = load i128, i128* %array_getter1151, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pintermed1152, i128 %Padd1146, i1* @constraint.797)
  %ptr_getter1153 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %Pintermed1157 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter1153, i128 0, i128 %i.1, i128 %j.18, i128 %idx.18
  store i128 %Padd1146, i128* %Pintermed1157, align 4
  br label %loop.latch1158

loop.latch1158:                                   ; preds = %loop.body1137
  %add1160 = add i128 %idx.18, 1
  %slt1163 = icmp slt i128 %add1160, %millerloop.k.read_arg_inner
  br i1 %slt1163, label %loop.body1137, label %loop.exit1164

loop.exit1164:                                    ; preds = %loop.latch1158
  br label %loop.latch1165

loop.latch1165:                                   ; preds = %loop.exit1164
  %add1167 = add i128 %j.18, 1
  %slt1169 = icmp slt i128 %add1167, 2
  br i1 %slt1169, label %loop.body1136, label %loop.exit1170

loop.exit1170:                                    ; preds = %loop.latch1165
  %add1172 = add i128 %curid.0, 1
  br label %if.exit1173

if.exit1173:                                      ; preds = %loop.exit1170, %loop.exit745
  %curid.1 = phi i128 [ %curid.0, %loop.exit745 ], [ %add1172, %loop.exit1170 ]
  br label %if.exit1174

if.exit1174:                                      ; preds = %if.exit1173, %loop.exit169
  %curid.2 = phi i128 [ %curid.0, %loop.exit169 ], [ %curid.1, %if.exit1173 ]
  br label %loop.latch1175

loop.latch1175:                                   ; preds = %if.exit1174
  %sub1177 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub1177, 0
  br i1 %sge, label %loop.body93, label %loop.exit1179

loop.exit1179:                                    ; preds = %loop.latch1175
  br label %loop.body1180

loop.body1180:                                    ; preds = %loop.latch1213, %loop.exit1179
  %l.12 = phi i128 [ 0, %loop.exit1179 ], [ %add1215, %loop.latch1213 ]
  br label %loop.body1181

loop.body1181:                                    ; preds = %loop.latch1207, %loop.body1180
  %j.19 = phi i128 [ 0, %loop.body1180 ], [ %add1209, %loop.latch1207 ]
  br label %loop.body1182

loop.body1182:                                    ; preds = %loop.latch1200, %loop.body1181
  %idx.19 = phi i128 [ 0, %loop.body1181 ], [ %add1202, %loop.latch1200 ]
  %f1183 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %array_getter1187 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f1183, i128 0, i128 0, i128 %l.12, i128 %j.19, i128 %idx.19
  %f1188 = load i128, i128* %array_getter1187, align 4
  %out1189 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.out.declare_output, align 8
  %array_getter1193 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out1189, i128 0, i128 %l.12, i128 %j.19, i128 %idx.19
  %out1194 = load i128, i128* %array_getter1193, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out1194, i128 %f1188, i1* @constraint.798)
  %ptr_getter1195 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.out.declare_output, align 8
  %out1199 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter1195, i128 0, i128 %l.12, i128 %j.19, i128 %idx.19
  store i128 %f1188, i128* %out1199, align 4
  br label %loop.latch1200

loop.latch1200:                                   ; preds = %loop.body1182
  %add1202 = add i128 %idx.19, 1
  %slt1205 = icmp slt i128 %add1202, %millerloop.k.read_arg_inner
  br i1 %slt1205, label %loop.body1182, label %loop.exit1206

loop.exit1206:                                    ; preds = %loop.latch1200
  br label %loop.latch1207

loop.latch1207:                                   ; preds = %loop.exit1206
  %add1209 = add i128 %j.19, 1
  %slt1211 = icmp slt i128 %add1209, 2
  br i1 %slt1211, label %loop.body1181, label %loop.exit1212

loop.exit1212:                                    ; preds = %loop.latch1207
  br label %loop.latch1213

loop.latch1213:                                   ; preds = %loop.exit1212
  %add1215 = add i128 %l.12, 1
  %slt1217 = icmp slt i128 %add1215, 6
  br i1 %slt1217, label %loop.body1180, label %loop.exit1218

loop.exit1218:                                    ; preds = %loop.latch1213
  br label %loop.body1219

loop.body1219:                                    ; preds = %loop.latch1242, %loop.exit1218
  %j.20 = phi i128 [ 0, %loop.exit1218 ], [ %add1244, %loop.latch1242 ]
  br label %loop.body1220

loop.body1220:                                    ; preds = %loop.latch1235, %loop.body1219
  %idx.20 = phi i128 [ 0, %loop.body1219 ], [ %add1237, %loop.latch1235 ]
  %Pintermed1221 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %array_getter1224 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Pintermed1221, i128 0, i128 0, i128 %j.20, i128 %idx.20
  %Pintermed1225 = load i128, i128* %array_getter1224, align 4
  %xP1226 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloop.xp.declare_output, align 8
  %array_getter1229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %xP1226, i128 0, i128 %j.20, i128 %idx.20
  %xP1230 = load i128, i128* %array_getter1229, align 4
  call void @fn_intrinsic_utils_constraint(i128 %xP1230, i128 %Pintermed1225, i1* @constraint.799)
  %ptr_getter1231 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloop.xp.declare_output, align 8
  %xP1234 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter1231, i128 0, i128 %j.20, i128 %idx.20
  store i128 %Pintermed1225, i128* %xP1234, align 4
  br label %loop.latch1235

loop.latch1235:                                   ; preds = %loop.body1220
  %add1237 = add i128 %idx.20, 1
  %slt1240 = icmp slt i128 %add1237, %millerloop.k.read_arg_inner
  br i1 %slt1240, label %loop.body1220, label %loop.exit1241

loop.exit1241:                                    ; preds = %loop.latch1235
  br label %loop.latch1242

loop.latch1242:                                   ; preds = %loop.exit1241
  %add1244 = add i128 %j.20, 1
  %slt1246 = icmp slt i128 %add1244, 2
  br i1 %slt1246, label %loop.body1219, label %loop.exit1247

loop.exit1247:                                    ; preds = %loop.latch1242
  br label %arraydim

arraydim:                                         ; preds = %loop.exit1247
  %ptr_cast = bitcast [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %BitLength.1)
  %ptr_cast1248 = bitcast [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1248, i128 %BitLength.1)
  %ptr_cast1249 = bitcast [256 x %struct_template_circuit_fp12multiply*]** %fadd_pre to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1249, i128 %SigBits.1)
  %ptr_cast1250 = bitcast [256 x %struct_template_circuit_ellipticcurveaddunequal*]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1250, i128 %SigBits.1)
  %ptr_cast1251 = bitcast [256 x [256 x [256 x i128]]]** %millerloop.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1251, i128 6, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1252 = bitcast [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1252, i128 %BitLength.1, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1253 = bitcast [256 x %struct_template_circuit_linefunctionequal*]** %line to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1253, i128 %BitLength.1)
  %ptr_cast1254 = bitcast [256 x [256 x i128]]** %millerloop.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1254, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1255 = bitcast [256 x [256 x [256 x i128]]]** %millerloop.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1255, i128 6, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1256 = bitcast [256 x %struct_template_circuit_fp12compress*]** %compress to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1256, i128 %BitLength.1)
  %ptr_cast1257 = bitcast [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1257, i128 %BitLength.1)
  %ptr_cast1258 = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1258, i128 250)
  %ptr_cast1259 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %millerloop.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1259, i128 2, i128 6, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1260 = bitcast [256 x %struct_template_circuit_fp12multiplywithlineunequal*]** %fadd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1260, i128 %SigBits.1)
  %ptr_cast1261 = bitcast [256 x [256 x i128]]** %millerloop.xp.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1261, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1262 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1262, i128 %BitLength.1, i128 6, i128 2, i128 %millerloop.k.read_arg_inner)
  %ptr_cast1263 = bitcast [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1263, i128 %BitLength.1)
  br label %exit

exit:                                             ; preds = %arraydim
  %Pintermed1264 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.declare_inter, align 8
  %millerloop.pintermed.write_inter_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 8
  store [256 x [256 x [256 x i128]]]* %Pintermed1264, [256 x [256 x [256 x i128]]]** %millerloop.pintermed.write_inter_inner, align 8
  %f1265 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.declare_inter, align 8
  %millerloop.f.write_inter_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 9
  store [256 x [256 x [256 x [256 x i128]]]]* %f1265, [256 x [256 x [256 x [256 x i128]]]]** %millerloop.f.write_inter_inner, align 8
  %out1266 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloop.out.declare_output, align 8
  %millerloop.out.write_output_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 10
  store [256 x [256 x [256 x i128]]]* %out1266, [256 x [256 x [256 x i128]]]** %millerloop.out.write_output_inner, align 8
  %xP1267 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %millerloop.xp.declare_output, align 8
  %millerloop.xp.write_output_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %0, i32 0, i32 11
  store [256 x [256 x i128]]* %xP1267, [256 x [256 x i128]]** %millerloop.xp.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_millerloop* @fn_template_build_millerloop(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_millerloop = alloca %struct_template_circuit_millerloop, align 8
  %millerloop.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %struct_template_circuit_millerloop, i32 0, i32 0
  store i128 %0, i128* %millerloop.n.write_arg_inner, align 4
  %millerloop.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %struct_template_circuit_millerloop, i32 0, i32 1
  store i128 %1, i128* %millerloop.k.write_arg_inner, align 4
  %millerloop.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %struct_template_circuit_millerloop, i32 0, i32 2
  store i128 %2, i128* %millerloop.b.write_arg_inner, align 4
  %millerloop.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %struct_template_circuit_millerloop, i32 0, i32 3
  store i128 %3, i128* %millerloop.x.write_arg_inner, align 4
  %millerloop.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %struct_template_circuit_millerloop, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %millerloop.q.write_arg_inner, align 8
  ret %struct_template_circuit_millerloop* %struct_template_circuit_millerloop
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x [256 x [256 x i128]]]* %3) {
entry:
  %m1 = call i128 @fn_intrinsic_utils_init()
  %j3 = call i128 @fn_intrinsic_utils_init()
  %i13 = call i128 @fn_intrinsic_utils_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %uniform_array18 = alloca [256 x [256 x [256 x i128]]], align 8
  %uniform_array19 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch88, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add90, %loop.latch88 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch82, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add84, %loop.latch82 ]
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch, %loop.body20
  %m.0 = phi i128 [ 0, %loop.body20 ], [ %add80, %loop.latch ]
  %mul = mul i128 2, %i.0
  %add = add i128 %mul, 1
  %A25 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %add, i128 %j.0, i128 %m.0
  store i128 0, i128* %A25, align 4
  %mul28 = mul i128 2, %i.0
  %add29 = add i128 %mul28, 1
  %B32 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array18, i128 0, i128 %add29, i128 %j.0, i128 %m.0
  store i128 0, i128* %B32, align 4
  %mul34 = mul i128 2, %i.0
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %mul34, i128 %j.0, i128 %m.0
  %a37 = load i128, i128* %array_getter, align 4
  %mul40 = mul i128 2, %i.0
  %A43 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %mul40, i128 %j.0, i128 %m.0
  store i128 %a37, i128* %A43, align 4
  %mul46 = mul i128 2, %i.0
  %add47 = add i128 %mul46, 1
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %add47, i128 %j.0, i128 %m.0
  %a51 = load i128, i128* %array_getter50, align 4
  %mul54 = mul i128 2, %i.0
  %B57 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array18, i128 0, i128 %mul54, i128 %j.0, i128 %m.0
  store i128 %a51, i128* %B57, align 4
  %mul60 = mul i128 2, %i.0
  %Bw63 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array19, i128 0, i128 %mul60, i128 %j.0, i128 %m.0
  store i128 0, i128* %Bw63, align 4
  %mul66 = mul i128 2, %i.0
  %add67 = add i128 %mul66, 1
  %array_getter70 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %add67, i128 %j.0, i128 %m.0
  %a71 = load i128, i128* %array_getter70, align 4
  %mul74 = mul i128 2, %i.0
  %add75 = add i128 %mul74, 1
  %Bw78 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array19, i128 0, i128 %add75, i128 %j.0, i128 %m.0
  store i128 %a71, i128* %Bw78, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body21
  %add80 = add i128 %m.0, 1
  %slt = icmp slt i128 %add80, %1
  br i1 %slt, label %loop.body21, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.exit
  %add84 = add i128 %j.0, 1
  %slt86 = icmp slt i128 %add84, 2
  br i1 %slt86, label %loop.body20, label %loop.exit87

loop.exit87:                                      ; preds = %loop.latch82
  br label %loop.latch88

loop.latch88:                                     ; preds = %loop.exit87
  %add90 = add i128 %i.0, 1
  %slt92 = icmp slt i128 %add90, 3
  br i1 %slt92, label %loop.body, label %loop.exit93

loop.exit93:                                      ; preds = %loop.latch88
  %call = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %uniform_array, [256 x [256 x [256 x i128]]]* %uniform_array, [256 x i128]* %2)
  %call102 = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %uniform_array18, [256 x [256 x [256 x i128]]]* %uniform_array18, [256 x i128]* %2)
  %call108 = call [256 x [256 x [256 x i128]]]* @find_Fp12_diff(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %uniform_array, [256 x [256 x [256 x i128]]]* %uniform_array19, [256 x i128]* %2)
  %uniform_array109 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body110

loop.body110:                                     ; preds = %loop.latch142, %loop.exit93
  %i.1 = phi i128 [ 0, %loop.exit93 ], [ %add144, %loop.latch142 ]
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch136, %loop.body110
  %j.1 = phi i128 [ 0, %loop.body110 ], [ %add138, %loop.latch136 ]
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch129, %loop.body111
  %m.1 = phi i128 [ 0, %loop.body111 ], [ %add131, %loop.latch129 ]
  %eq = icmp eq i128 %i.1, 2
  %eq115 = icmp eq i128 %j.1, 0
  %and = and i1 %eq, %eq115
  %eq117 = icmp eq i128 %m.1, 0
  %and118 = and i1 %and, %eq117
  br i1 %and118, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body112
  %w2123 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array109, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  store i128 1, i128* %w2123, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body112
  %w2128 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array109, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  store i128 0, i128* %w2128, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch129

loop.latch129:                                    ; preds = %if.exit
  %add131 = add i128 %m.1, 1
  %slt134 = icmp slt i128 %add131, %1
  br i1 %slt134, label %loop.body112, label %loop.exit135

loop.exit135:                                     ; preds = %loop.latch129
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.exit135
  %add138 = add i128 %j.1, 1
  %slt140 = icmp slt i128 %add138, 2
  br i1 %slt140, label %loop.body111, label %loop.exit141

loop.exit141:                                     ; preds = %loop.latch136
  br label %loop.latch142

loop.latch142:                                    ; preds = %loop.exit141
  %add144 = add i128 %i.1, 1
  %slt146 = icmp slt i128 %add144, 6
  br i1 %slt146, label %loop.body110, label %loop.exit147

loop.exit147:                                     ; preds = %loop.latch142
  %call153 = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %call102, [256 x [256 x [256 x i128]]]* %uniform_array109, [256 x i128]* %2)
  %call159 = call [256 x [256 x [256 x i128]]]* @find_Fp12_diff(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %call, [256 x [256 x [256 x i128]]]* %call153, [256 x i128]* %2)
  %uniform_array160 = alloca [256 x [256 x i128]], align 8
  %uniform_array161 = alloca [256 x [256 x i128]], align 8
  %uniform_array162 = alloca [256 x [256 x i128]], align 8
  br label %loop.body163

loop.body163:                                     ; preds = %loop.latch199, %loop.exit147
  %i.2 = phi i128 [ 0, %loop.exit147 ], [ %add201, %loop.latch199 ]
  br label %loop.body164

loop.body164:                                     ; preds = %loop.latch192, %loop.body163
  %m.2 = phi i128 [ 0, %loop.body163 ], [ %add194, %loop.latch192 ]
  %array_getter168 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call159, i128 0, i128 0, i128 %i.2, i128 %m.2
  %conjProd169 = load i128, i128* %array_getter168, align 4
  %a0173 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array160, i128 0, i128 %i.2, i128 %m.2
  store i128 %conjProd169, i128* %a0173, align 4
  %array_getter177 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call159, i128 0, i128 2, i128 %i.2, i128 %m.2
  %conjProd178 = load i128, i128* %array_getter177, align 4
  %a1182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array161, i128 0, i128 %i.2, i128 %m.2
  store i128 %conjProd178, i128* %a1182, align 4
  %array_getter186 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call159, i128 0, i128 4, i128 %i.2, i128 %m.2
  %conjProd187 = load i128, i128* %array_getter186, align 4
  %a2191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array162, i128 0, i128 %i.2, i128 %m.2
  store i128 %conjProd187, i128* %a2191, align 4
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.body164
  %add194 = add i128 %m.2, 1
  %slt197 = icmp slt i128 %add194, %1
  br i1 %slt197, label %loop.body164, label %loop.exit198

loop.exit198:                                     ; preds = %loop.latch192
  br label %loop.latch199

loop.latch199:                                    ; preds = %loop.exit198
  %add201 = add i128 %i.2, 1
  %slt203 = icmp slt i128 %add201, 2
  br i1 %slt203, label %loop.body163, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch199
  %call211 = call [256 x [256 x [256 x i128]]]* @find_Fp6_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x [256 x i128]]* %uniform_array160, [256 x [256 x i128]]* %uniform_array161, [256 x [256 x i128]]* %uniform_array162)
  %call217 = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %call108, [256 x [256 x [256 x i128]]]* %call211, [256 x i128]* %2)
  ret [256 x [256 x [256 x i128]]]* %call217
}

define void @fn_template_init_fp12square(%struct_template_circuit_fp12square* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 0
  %fp12square.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 1
  %fp12square.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 2
  %fp12square.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 3
  %fp12square.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12square.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12square.in.declare_input, align 8
  %j4 = call i128 @fn_intrinsic_utils_init()
  %i5 = call i128 @fn_intrinsic_utils_init()
  %fp12square.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output, align 8
  %call = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12square.n.read_arg_inner, i128 %fp12square.k.read_arg_inner, [256 x i128]* %fp12square.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch79, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add81, %loop.latch79 ]
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %i.0, i128 0, i128 %j.0
  %in11 = load i128, i128* %array_getter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter13, align 8
  %array_getter16 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %i.0, i128 0, i128 %j.0
  %square17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square17, i128 %in11, i1* @constraint.800)
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter19 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter18, align 8
  %square22 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter19, i128 0, i128 %i.0, i128 0, i128 %j.0
  store i128 %in11, i128* %square22, align 4
  %in23 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.in.declare_input, align 8
  %array_getter26 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in23, i128 0, i128 %i.0, i128 1, i128 %j.0
  %in27 = load i128, i128* %array_getter26, align 4
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter30 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter29, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter30, i128 0, i128 %i.0, i128 1, i128 %j.0
  %square34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square34, i128 %in27, i1* @constraint.801)
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter37 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter36, align 8
  %square40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter37, i128 0, i128 %i.0, i128 1, i128 %j.0
  store i128 %in27, i128* %square40, align 4
  %in41 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.in.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in41, i128 0, i128 %i.0, i128 0, i128 %j.0
  %in45 = load i128, i128* %array_getter44, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter47, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %i.0, i128 0, i128 %j.0
  %square51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square51, i128 %in45, i1* @constraint.802)
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter54 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter53, align 8
  %square57 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter54, i128 0, i128 %i.0, i128 0, i128 %j.0
  store i128 %in45, i128* %square57, align 4
  %in58 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.in.declare_input, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in58, i128 0, i128 %i.0, i128 1, i128 %j.0
  %in62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter65 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter64, align 8
  %array_getter68 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter65, i128 0, i128 %i.0, i128 1, i128 %j.0
  %square69 = load i128, i128* %array_getter68, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square69, i128 %in62, i1* @constraint.803)
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter72 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter71, align 8
  %square75 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter72, i128 0, i128 %i.0, i128 1, i128 %j.0
  store i128 %in62, i128* %square75, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body8
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp12square.k.read_arg_inner
  br i1 %slt, label %loop.body8, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch79

loop.latch79:                                     ; preds = %loop.exit
  %add81 = add i128 %i.0, 1
  %slt83 = icmp slt i128 %add81, 6
  br i1 %slt83, label %loop.body, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch79
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch125, %loop.exit84
  %i.1 = phi i128 [ 0, %loop.exit84 ], [ %add127, %loop.latch125 ]
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch118, %loop.body85
  %j.1 = phi i128 [ 0, %loop.body85 ], [ %add120, %loop.latch118 ]
  %struct_getter88 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter88, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %i.1, i128 0, i128 %j.1
  %square92 = load i128, i128* %array_getter91, align 4
  %out93 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output, align 8
  %array_getter96 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out93, i128 0, i128 %i.1, i128 0, i128 %j.1
  %out97 = load i128, i128* %array_getter96, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out97, i128 %square92, i1* @constraint.804)
  %ptr_getter98 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output, align 8
  %out101 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter98, i128 0, i128 %i.1, i128 0, i128 %j.1
  store i128 %square92, i128* %out101, align 4
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 5
  %fp12multiply.out.read_output_outter104 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter103, align 8
  %array_getter107 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter104, i128 0, i128 %i.1, i128 1, i128 %j.1
  %square108 = load i128, i128* %array_getter107, align 4
  %out109 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output, align 8
  %array_getter112 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out109, i128 0, i128 %i.1, i128 1, i128 %j.1
  %out113 = load i128, i128* %array_getter112, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out113, i128 %square108, i1* @constraint.805)
  %ptr_getter114 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output, align 8
  %out117 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter114, i128 0, i128 %i.1, i128 1, i128 %j.1
  store i128 %square108, i128* %out117, align 4
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.body86
  %add120 = add i128 %j.1, 1
  %slt123 = icmp slt i128 %add120, %fp12square.k.read_arg_inner
  br i1 %slt123, label %loop.body86, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.exit124
  %add127 = add i128 %i.1, 1
  %slt129 = icmp slt i128 %add127, 6
  br i1 %slt129, label %loop.body85, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  br label %arraydim

arraydim:                                         ; preds = %loop.exit130
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %fp12square.k.read_arg_inner)
  %ptr_cast131 = bitcast [256 x [256 x [256 x i128]]]** %fp12square.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast131, i128 6, i128 2, i128 %fp12square.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out132 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12square.out.declare_output, align 8
  %fp12square.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out132, [256 x [256 x [256 x i128]]]** %fp12square.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12square* @fn_template_build_fp12square(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12square = alloca %struct_template_circuit_fp12square, align 8
  %fp12square.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %struct_template_circuit_fp12square, i32 0, i32 0
  store i128 %0, i128* %fp12square.n.write_arg_inner, align 4
  %fp12square.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %struct_template_circuit_fp12square, i32 0, i32 1
  store i128 %1, i128* %fp12square.k.write_arg_inner, align 4
  %fp12square.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %struct_template_circuit_fp12square, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12square.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12square* %struct_template_circuit_fp12square
}

define void @fn_template_init_ellipticcurvescalarmultiply(%struct_template_circuit_ellipticcurvescalarmultiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 0
  %ellipticcurvescalarmultiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 1
  %ellipticcurvescalarmultiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 2
  %ellipticcurvescalarmultiply.b.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 3
  %ellipticcurvescalarmultiply.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 4
  %ellipticcurvescalarmultiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 5
  %ellipticcurvescalarmultiply.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %ellipticcurvescalarmultiply.in.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %ellipticcurvescalarmultiply.in.read_input_inner, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.in.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 6
  %ellipticcurvescalarmultiply.inisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %BitLength7 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvescalarmultiply.p.declare_inter = alloca [256 x [256 x i128]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %P = bitcast i8* %malloccall to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %P, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter, align 8
  %j8 = call i128 @fn_intrinsic_utils_init()
  %SigBits9 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvescalarmultiply.r.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall10 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %R, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %isInfinity = call i128 @fn_intrinsic_utils_init()
  %curid11 = call i128 @fn_intrinsic_utils_init()
  %Bits = alloca [256 x i128]*, align 8
  %Bits12 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits12, [256 x i128]** %Bits, align 8
  %i13 = call i128 @fn_intrinsic_utils_init()
  %ellipticcurvescalarmultiply.out.declare_output = alloca [256 x [256 x i128]]*, align 8
  %malloccall14 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall14 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.declare_output, align 8
  %Padd = alloca [256 x %struct_template_circuit_ellipticcurveadd*]*, align 8
  %Padd15 = alloca [256 x %struct_template_circuit_ellipticcurveadd*], align 8
  store [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd15, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %ellipticcurvescalarmultiply.r_iso.declare_inter = alloca [256 x i128]*, align 8
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %R_isO = bitcast i8* %malloccall16 to [256 x i128]*
  store [256 x i128]* %R_isO, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %Pdouble = alloca [256 x %struct_template_circuit_ellipticcurvedouble*]*, align 8
  %Pdouble17 = alloca [256 x %struct_template_circuit_ellipticcurvedouble*], align 8
  store [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble17, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %idx18 = call i128 @fn_intrinsic_utils_init()
  %LOGK19 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiply.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add32, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiply.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits24 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits24, align 4
  %Bits25 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits25, i128 0, i128 %i.0
  %Bits27 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits27, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add30 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add30, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add32 = add i128 %i.0, 1
  %slt = icmp slt i128 %add32, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch62, %loop.exit
  %j.0 = phi i128 [ 0, %loop.exit ], [ %add64, %loop.latch62 ]
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch55, %loop.body40
  %idx.0 = phi i128 [ 0, %loop.body40 ], [ %add57, %loop.latch55 ]
  %in = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.in.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in, i128 0, i128 %j.0, i128 %idx.0
  %in45 = load i128, i128* %array_getter44, align 4
  %P46 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P46, i128 0, i128 %j.0, i128 %idx.0
  %P50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_utils_constraint(i128 %P50, i128 %in45, i1* @constraint.806)
  %ptr_getter51 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter, align 8
  %P54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter51, i128 0, i128 %j.0, i128 %idx.0
  store i128 %in45, i128* %P54, align 4
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.body41
  %add57 = add i128 %idx.0, 1
  %slt60 = icmp slt i128 %add57, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt60, label %loop.body41, label %loop.exit61

loop.exit61:                                      ; preds = %loop.latch55
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.exit61
  %add64 = add i128 %j.0, 1
  %slt66 = icmp slt i128 %add64, 2
  br i1 %slt66, label %loop.body40, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch62
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch361, %loop.exit67
  %curid.0 = phi i128 [ 0, %loop.exit67 ], [ %curid.2, %loop.latch361 ]
  %i.1 = phi i128 [ %sub, %loop.exit67 ], [ %sub363, %loop.latch361 ]
  %sub74 = sub i128 %BitLength.1, 1
  %eq75 = icmp eq i128 %i.1, %sub74
  br i1 %eq75, label %if.true70, label %if.false71

if.true70:                                        ; preds = %loop.body69
  br label %loop.body76

if.false71:                                       ; preds = %loop.body69
  %call115 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %ellipticcurvescalarmultiply.n.read_arg_inner, i128 %ellipticcurvescalarmultiply.k.read_arg_inner, i128 0, i128 %ellipticcurvescalarmultiply.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiply.p.read_arg_inner)
  %ptr_getter116 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %Pdouble118 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %ptr_getter116, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedouble* %call115, %struct_template_circuit_ellipticcurvedouble** %Pdouble118, align 8
  br label %loop.body119

loop.body76:                                      ; preds = %loop.latch101, %if.true70
  %j.1 = phi i128 [ 0, %if.true70 ], [ %add103, %loop.latch101 ]
  br label %loop.body77

loop.body77:                                      ; preds = %loop.latch94, %loop.body76
  %idx.1 = phi i128 [ 0, %loop.body76 ], [ %add96, %loop.latch94 ]
  %P78 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter, align 8
  %array_getter81 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P78, i128 0, i128 %j.1, i128 %idx.1
  %P82 = load i128, i128* %array_getter81, align 4
  %R83 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R83, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %R88 = load i128, i128* %array_getter87, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R88, i128 %P82, i1* @constraint.807)
  %ptr_getter89 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %R93 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter89, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %P82, i128* %R93, align 4
  br label %loop.latch94

loop.latch94:                                     ; preds = %loop.body77
  %add96 = add i128 %idx.1, 1
  %slt99 = icmp slt i128 %add96, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt99, label %loop.body77, label %loop.exit100

loop.exit100:                                     ; preds = %loop.latch94
  br label %loop.latch101

loop.latch101:                                    ; preds = %loop.exit100
  %add103 = add i128 %j.1, 1
  %slt105 = icmp slt i128 %add103, 2
  br i1 %slt105, label %loop.body76, label %loop.exit106

loop.exit106:                                     ; preds = %loop.latch101
  %R_isO107 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO107, i128 0, i128 %i.1
  %R_isO110 = load i128, i128* %array_getter109, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R_isO110, i128 0, i1* @constraint.808)
  %ptr_getter111 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %R_isO113 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter111, i128 0, i128 %i.1
  store i128 0, i128* %R_isO113, align 4
  br label %if.exit360

loop.body119:                                     ; preds = %loop.latch153, %if.false71
  %j.2 = phi i128 [ 0, %if.false71 ], [ %add155, %loop.latch153 ]
  br label %loop.body120

loop.body120:                                     ; preds = %loop.latch146, %loop.body119
  %idx.2 = phi i128 [ 0, %loop.body119 ], [ %add148, %loop.latch146 ]
  %R121 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %add123 = add i128 %i.1, 1
  %array_getter126 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R121, i128 0, i128 %add123, i128 %j.2, i128 %idx.2
  %R127 = load i128, i128* %array_getter126, align 4
  %Pdouble128 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter130 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble128, i128 0, i128 %i.1
  %Pdouble131 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter130, align 8
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble131, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter132, align 8
  %array_getter135 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %j.2, i128 %idx.2
  %Pdouble136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble136, i128 %R127, i1* @constraint.809)
  %ptr_getter137 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter139 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %ptr_getter137, i128 0, i128 %i.1
  %Pdouble140 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter139, align 8
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble140, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter142 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter141, align 8
  %Pdouble145 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter142, i128 0, i128 %j.2, i128 %idx.2
  store i128 %R127, i128* %Pdouble145, align 4
  br label %loop.latch146

loop.latch146:                                    ; preds = %loop.body120
  %add148 = add i128 %idx.2, 1
  %slt151 = icmp slt i128 %add148, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt151, label %loop.body120, label %loop.exit152

loop.exit152:                                     ; preds = %loop.latch146
  br label %loop.latch153

loop.latch153:                                    ; preds = %loop.exit152
  %add155 = add i128 %j.2, 1
  %slt157 = icmp slt i128 %add155, 2
  br i1 %slt157, label %loop.body119, label %loop.exit158

loop.exit158:                                     ; preds = %loop.latch153
  %Bits161 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter163 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits161, i128 0, i128 %i.1
  %Bits164 = load i128, i128* %array_getter163, align 4
  %eq165 = icmp eq i128 %Bits164, 0
  br i1 %eq165, label %if.true159, label %if.false160

if.true159:                                       ; preds = %loop.exit158
  br label %loop.body166

if.false160:                                      ; preds = %loop.exit158
  %call217 = call %struct_template_circuit_ellipticcurveadd* @fn_template_build_ellipticcurveadd(i128 %ellipticcurvescalarmultiply.n.read_arg_inner, i128 %ellipticcurvescalarmultiply.k.read_arg_inner, i128 0, i128 %ellipticcurvescalarmultiply.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiply.p.read_arg_inner)
  %ptr_getter218 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %Padd220 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %ptr_getter218, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveadd* %call217, %struct_template_circuit_ellipticcurveadd** %Padd220, align 8
  br label %loop.body221

loop.body166:                                     ; preds = %loop.latch195, %if.true159
  %j.3 = phi i128 [ 0, %if.true159 ], [ %add197, %loop.latch195 ]
  br label %loop.body167

loop.body167:                                     ; preds = %loop.latch188, %loop.body166
  %idx.3 = phi i128 [ 0, %loop.body166 ], [ %add190, %loop.latch188 ]
  %Pdouble168 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter170 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble168, i128 0, i128 %i.1
  %Pdouble171 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter170, align 8
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble171, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter172, align 8
  %array_getter175 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %j.3, i128 %idx.3
  %Pdouble176 = load i128, i128* %array_getter175, align 4
  %R177 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %array_getter181 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R177, i128 0, i128 %i.1, i128 %j.3, i128 %idx.3
  %R182 = load i128, i128* %array_getter181, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R182, i128 %Pdouble176, i1* @constraint.810)
  %ptr_getter183 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %R187 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter183, i128 0, i128 %i.1, i128 %j.3, i128 %idx.3
  store i128 %Pdouble176, i128* %R187, align 4
  br label %loop.latch188

loop.latch188:                                    ; preds = %loop.body167
  %add190 = add i128 %idx.3, 1
  %slt193 = icmp slt i128 %add190, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt193, label %loop.body167, label %loop.exit194

loop.exit194:                                     ; preds = %loop.latch188
  br label %loop.latch195

loop.latch195:                                    ; preds = %loop.exit194
  %add197 = add i128 %j.3, 1
  %slt199 = icmp slt i128 %add197, 2
  br i1 %slt199, label %loop.body166, label %loop.exit200

loop.exit200:                                     ; preds = %loop.latch195
  %R_isO201 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %add203 = add i128 %i.1, 1
  %array_getter204 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO201, i128 0, i128 %add203
  %R_isO205 = load i128, i128* %array_getter204, align 4
  %R_isO206 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %array_getter208 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO206, i128 0, i128 %i.1
  %R_isO209 = load i128, i128* %array_getter208, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R_isO209, i128 %R_isO205, i1* @constraint.811)
  %ptr_getter210 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %R_isO212 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter210, i128 0, i128 %i.1
  store i128 %R_isO205, i128* %R_isO212, align 4
  br label %if.exit359

loop.body221:                                     ; preds = %loop.latch281, %if.false160
  %j.4 = phi i128 [ 0, %if.false160 ], [ %add283, %loop.latch281 ]
  br label %loop.body222

loop.body222:                                     ; preds = %loop.latch274, %loop.body221
  %idx.4 = phi i128 [ 0, %loop.body221 ], [ %add276, %loop.latch274 ]
  %Pdouble223 = load [256 x %struct_template_circuit_ellipticcurvedouble*]*, [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble, align 8
  %array_getter225 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble223, i128 0, i128 %i.1
  %Pdouble226 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter225, align 8
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble226, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter228 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter227, align 8
  %array_getter231 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter228, i128 0, i128 %j.4, i128 %idx.4
  %Pdouble232 = load i128, i128* %array_getter231, align 4
  %Padd233 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter235 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd233, i128 0, i128 %curid.0
  %Padd236 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter235, align 8
  %struct_getter237 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd236, i32 0, i32 5
  %ellipticcurveadd.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter237, align 8
  %array_getter240 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_outter, i128 0, i128 %j.4, i128 %idx.4
  %Padd241 = load i128, i128* %array_getter240, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd241, i128 %Pdouble232, i1* @constraint.812)
  %ptr_getter242 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter244 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %ptr_getter242, i128 0, i128 %curid.0
  %Padd245 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter244, align 8
  %struct_getter246 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd245, i32 0, i32 5
  %ellipticcurveadd.a.read_input_outter247 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter246, align 8
  %Padd250 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_outter247, i128 0, i128 %j.4, i128 %idx.4
  store i128 %Pdouble232, i128* %Padd250, align 4
  %P251 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter, align 8
  %array_getter254 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P251, i128 0, i128 %j.4, i128 %idx.4
  %P255 = load i128, i128* %array_getter254, align 4
  %Padd256 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter258 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd256, i128 0, i128 %curid.0
  %Padd259 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter258, align 8
  %struct_getter260 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd259, i32 0, i32 7
  %ellipticcurveadd.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter260, align 8
  %array_getter263 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_outter, i128 0, i128 %j.4, i128 %idx.4
  %Padd264 = load i128, i128* %array_getter263, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd264, i128 %P255, i1* @constraint.813)
  %ptr_getter265 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter267 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %ptr_getter265, i128 0, i128 %curid.0
  %Padd268 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter267, align 8
  %struct_getter269 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd268, i32 0, i32 7
  %ellipticcurveadd.b.read_input_outter270 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter269, align 8
  %Padd273 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_outter270, i128 0, i128 %j.4, i128 %idx.4
  store i128 %P255, i128* %Padd273, align 4
  br label %loop.latch274

loop.latch274:                                    ; preds = %loop.body222
  %add276 = add i128 %idx.4, 1
  %slt279 = icmp slt i128 %add276, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt279, label %loop.body222, label %loop.exit280

loop.exit280:                                     ; preds = %loop.latch274
  br label %loop.latch281

loop.latch281:                                    ; preds = %loop.exit280
  %add283 = add i128 %j.4, 1
  %slt285 = icmp slt i128 %add283, 2
  br i1 %slt285, label %loop.body221, label %loop.exit286

loop.exit286:                                     ; preds = %loop.latch281
  %R_isO287 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %add289 = add i128 %i.1, 1
  %array_getter290 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO287, i128 0, i128 %add289
  %R_isO291 = load i128, i128* %array_getter290, align 4
  %Padd292 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter294 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd292, i128 0, i128 %curid.0
  %Padd295 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter294, align 8
  %struct_getter296 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd295, i32 0, i32 6
  %ellipticcurveadd.aisinfinity.read_input_outter = load i128, i128* %struct_getter296, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ellipticcurveadd.aisinfinity.read_input_outter, i128 %R_isO291, i1* @constraint.814)
  %ptr_getter297 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter299 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %ptr_getter297, i128 0, i128 %curid.0
  %Padd300 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter299, align 8
  %ellipticcurveadd.aisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd300, i32 0, i32 6
  store i128 %R_isO291, i128* %ellipticcurveadd.aisinfinity.write_input_outter, align 4
  %Padd301 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter303 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd301, i128 0, i128 %curid.0
  %Padd304 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter303, align 8
  %struct_getter305 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd304, i32 0, i32 8
  %ellipticcurveadd.bisinfinity.read_input_outter = load i128, i128* %struct_getter305, align 4
  call void @fn_intrinsic_utils_constraint(i128 %ellipticcurveadd.bisinfinity.read_input_outter, i128 0, i1* @constraint.815)
  %ptr_getter306 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter308 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %ptr_getter306, i128 0, i128 %curid.0
  %Padd309 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter308, align 8
  %ellipticcurveadd.bisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd309, i32 0, i32 8
  store i128 0, i128* %ellipticcurveadd.bisinfinity.write_input_outter, align 4
  %Padd310 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter312 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd310, i128 0, i128 %curid.0
  %Padd313 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter312, align 8
  %struct_getter314 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd313, i32 0, i32 14
  %ellipticcurveadd.isinfinity.read_output_outter = load i128, i128* %struct_getter314, align 4
  %R_isO315 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %array_getter317 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO315, i128 0, i128 %i.1
  %R_isO318 = load i128, i128* %array_getter317, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R_isO318, i128 %ellipticcurveadd.isinfinity.read_output_outter, i1* @constraint.816)
  %ptr_getter319 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %R_isO321 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter319, i128 0, i128 %i.1
  store i128 %ellipticcurveadd.isinfinity.read_output_outter, i128* %R_isO321, align 4
  br label %loop.body322

loop.body322:                                     ; preds = %loop.latch351, %loop.exit286
  %j.5 = phi i128 [ 0, %loop.exit286 ], [ %add353, %loop.latch351 ]
  br label %loop.body323

loop.body323:                                     ; preds = %loop.latch344, %loop.body322
  %idx.5 = phi i128 [ 0, %loop.body322 ], [ %add346, %loop.latch344 ]
  %Padd324 = load [256 x %struct_template_circuit_ellipticcurveadd*]*, [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd, align 8
  %array_getter326 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd324, i128 0, i128 %curid.0
  %Padd327 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter326, align 8
  %struct_getter328 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd327, i32 0, i32 13
  %ellipticcurveadd.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter328, align 8
  %array_getter331 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.out.read_output_outter, i128 0, i128 %j.5, i128 %idx.5
  %Padd332 = load i128, i128* %array_getter331, align 4
  %R333 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %array_getter337 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R333, i128 0, i128 %i.1, i128 %j.5, i128 %idx.5
  %R338 = load i128, i128* %array_getter337, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R338, i128 %Padd332, i1* @constraint.817)
  %ptr_getter339 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %R343 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter339, i128 0, i128 %i.1, i128 %j.5, i128 %idx.5
  store i128 %Padd332, i128* %R343, align 4
  br label %loop.latch344

loop.latch344:                                    ; preds = %loop.body323
  %add346 = add i128 %idx.5, 1
  %slt349 = icmp slt i128 %add346, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt349, label %loop.body323, label %loop.exit350

loop.exit350:                                     ; preds = %loop.latch344
  br label %loop.latch351

loop.latch351:                                    ; preds = %loop.exit350
  %add353 = add i128 %j.5, 1
  %slt355 = icmp slt i128 %add353, 2
  br i1 %slt355, label %loop.body322, label %loop.exit356

loop.exit356:                                     ; preds = %loop.latch351
  %add358 = add i128 %curid.0, 1
  br label %if.exit359

if.exit359:                                       ; preds = %loop.exit356, %loop.exit200
  %curid.1 = phi i128 [ %curid.0, %loop.exit200 ], [ %add358, %loop.exit356 ]
  br label %if.exit360

if.exit360:                                       ; preds = %if.exit359, %loop.exit106
  %curid.2 = phi i128 [ %curid.0, %loop.exit106 ], [ %curid.1, %if.exit359 ]
  br label %loop.latch361

loop.latch361:                                    ; preds = %if.exit360
  %sub363 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub363, 0
  br i1 %sge, label %loop.body69, label %loop.exit365

loop.exit365:                                     ; preds = %loop.latch361
  %R_isO366 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %array_getter367 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO366, i128 0, i128 0
  %R_isO368 = load i128, i128* %array_getter367, align 4
  %add369 = add i128 %ellipticcurvescalarmultiply.inisinfinity.read_input_inner, %R_isO368
  %R_isO371 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %array_getter372 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO371, i128 0, i128 0
  %R_isO373 = load i128, i128* %array_getter372, align 4
  %mul = mul i128 %ellipticcurvescalarmultiply.inisinfinity.read_input_inner, %R_isO373
  %sub374 = sub i128 %add369, %mul
  call void @fn_intrinsic_utils_constraint(i128 %isInfinity, i128 %sub374, i1* @constraint.818)
  %ellipticcurvescalarmultiply.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 11
  store i128 %sub374, i128* %ellipticcurvescalarmultiply.isinfinity.write_output_inner, align 4
  %struct_getter378 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 11
  %ellipticcurvescalarmultiply.isinfinity.read_output_inner = load i128, i128* %struct_getter378, align 4
  br label %loop.body379

loop.body379:                                     ; preds = %loop.latch416, %loop.exit365
  %i.2 = phi i128 [ 0, %loop.exit365 ], [ %add418, %loop.latch416 ]
  br label %loop.body380

loop.body380:                                     ; preds = %loop.latch409, %loop.body379
  %idx.6 = phi i128 [ 0, %loop.body379 ], [ %add411, %loop.latch409 ]
  %R381 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %array_getter384 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R381, i128 0, i128 0, i128 %i.2, i128 %idx.6
  %R385 = load i128, i128* %array_getter384, align 4
  %in387 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.in.declare_input, align 8
  %array_getter390 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %in387, i128 0, i128 %i.2, i128 %idx.6
  %in391 = load i128, i128* %array_getter390, align 4
  %R392 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %array_getter395 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R392, i128 0, i128 0, i128 %i.2, i128 %idx.6
  %R396 = load i128, i128* %array_getter395, align 4
  %sub397 = sub i128 %in391, %R396
  %mul398 = mul i128 %ellipticcurvescalarmultiply.isinfinity.read_output_inner, %sub397
  %add399 = add i128 %R385, %mul398
  %out400 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.declare_output, align 8
  %array_getter403 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out400, i128 0, i128 %i.2, i128 %idx.6
  %out404 = load i128, i128* %array_getter403, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out404, i128 %add399, i1* @constraint.819)
  %ptr_getter405 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.declare_output, align 8
  %out408 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter405, i128 0, i128 %i.2, i128 %idx.6
  store i128 %add399, i128* %out408, align 4
  br label %loop.latch409

loop.latch409:                                    ; preds = %loop.body380
  %add411 = add i128 %idx.6, 1
  %slt414 = icmp slt i128 %add411, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt414, label %loop.body380, label %loop.exit415

loop.exit415:                                     ; preds = %loop.latch409
  br label %loop.latch416

loop.latch416:                                    ; preds = %loop.exit415
  %add418 = add i128 %i.2, 1
  %slt420 = icmp slt i128 %add418, 2
  br i1 %slt420, label %loop.body379, label %loop.exit421

loop.exit421:                                     ; preds = %loop.latch416
  br label %arraydim

arraydim:                                         ; preds = %loop.exit421
  %ptr_cast = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 250)
  %ptr_cast422 = bitcast [256 x %struct_template_circuit_ellipticcurveadd*]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast422, i128 %SigBits.1)
  %ptr_cast423 = bitcast [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast423, i128 2, i128 %ellipticcurvescalarmultiply.k.read_arg_inner)
  %ptr_cast424 = bitcast [256 x [256 x i128]]** %ellipticcurvescalarmultiply.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast424, i128 2, i128 %ellipticcurvescalarmultiply.k.read_arg_inner)
  %ptr_cast425 = bitcast [256 x %struct_template_circuit_ellipticcurvedouble*]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast425, i128 %BitLength.1)
  %ptr_cast426 = bitcast [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast426, i128 %BitLength.1, i128 2, i128 %ellipticcurvescalarmultiply.k.read_arg_inner)
  %ptr_cast427 = bitcast [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast427, i128 2, i128 %ellipticcurvescalarmultiply.k.read_arg_inner)
  %ptr_cast428 = bitcast [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast428, i128 %BitLength.1)
  br label %exit

exit:                                             ; preds = %arraydim
  %R429 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.declare_inter, align 8
  %ellipticcurvescalarmultiply.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %R429, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.write_inter_inner, align 8
  %R_isO430 = load [256 x i128]*, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.declare_inter, align 8
  %ellipticcurvescalarmultiply.r_iso.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 8
  store [256 x i128]* %R_isO430, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.write_inter_inner, align 8
  %P431 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.declare_inter, align 8
  %ellipticcurvescalarmultiply.p.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 9
  store [256 x [256 x i128]]* %P431, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.write_inter_inner, align 8
  %out432 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.declare_output, align 8
  %ellipticcurvescalarmultiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 10
  store [256 x [256 x i128]]* %out432, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.write_output_inner, align 8
  %ellipticcurvescalarmultiply.isinfinity.write_output_inner434 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 11
  store i128 %ellipticcurvescalarmultiply.isinfinity.read_output_inner, i128* %ellipticcurvescalarmultiply.isinfinity.write_output_inner434, align 4
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiply* @fn_template_build_ellipticcurvescalarmultiply(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiply = alloca %struct_template_circuit_ellipticcurvescalarmultiply, align 8
  %ellipticcurvescalarmultiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiply.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiply.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 2
  store i128 %2, i128* %ellipticcurvescalarmultiply.b.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiply.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply
}

define void @fn_template_init_fp12cyclotomicdecompress(%struct_template_circuit_fp12cyclotomicdecompress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 0
  %fp12cyclotomicdecompress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 1
  %fp12cyclotomicdecompress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 2
  %fp12cyclotomicdecompress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 3
  %fp12cyclotomicdecompress.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12cyclotomicdecompress.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12cyclotomicdecompress.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %g5sqc = alloca [256 x [256 x i128]]*, align 8
  %g5sqc4 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %g5sqc4, [256 x [256 x i128]]** %g5sqc, align 8
  %tempc = alloca [256 x [256 x i128]]*, align 8
  %tempc5 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %tempc5, [256 x [256 x i128]]** %tempc, align 8
  %LOGK6 = call i128 @fn_intrinsic_utils_init()
  %fp12cyclotomicdecompress.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %XI07 = call i128 @fn_intrinsic_utils_init()
  %j8 = call i128 @fn_intrinsic_utils_init()
  %temp = alloca [256 x [256 x i128]]*, align 8
  %temp9 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %temp9, [256 x [256 x i128]]** %temp, align 8
  %fp12cyclotomicdecompress.g0_1.declare_inter = alloca [256 x [256 x i128]]*, align 8
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %g0_1 = bitcast i8* %malloccall10 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %g0_1, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter, align 8
  %LOGK311 = call i128 @fn_intrinsic_utils_init()
  %eps12 = call i128 @fn_intrinsic_utils_init()
  %fp12cyclotomicdecompress.g1num.declare_inter = alloca [256 x [256 x i128]]*, align 8
  %malloccall13 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %g1num = bitcast i8* %malloccall13 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %g1num, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %i14 = call i128 @fn_intrinsic_utils_init()
  %len15 = call i128 @fn_intrinsic_utils_init()
  %fp12cyclotomicdecompress.g0_0.declare_inter = alloca [256 x [256 x i128]]*, align 8
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %g0_0 = bitcast i8* %malloccall16 to [256 x [256 x i128]]*
  store [256 x [256 x i128]]* %g0_0, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.declare_inter, align 8
  %LOGK217 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %fp12cyclotomicdecompress.k.read_arg_inner)
  %add = add i128 1, 1
  %mul = mul i128 %add, 2
  %mul22 = mul i128 %mul, %fp12cyclotomicdecompress.k.read_arg_inner
  %mul24 = mul i128 6, %fp12cyclotomicdecompress.k.read_arg_inner
  %add25 = add i128 %mul22, %mul24
  %mul27 = mul i128 %add25, %fp12cyclotomicdecompress.k.read_arg_inner
  %add28 = add i128 %mul27, 1
  %call29 = call i128 @log_ceil(i128 %add28)
  %add31 = add i128 1, 1
  %mul32 = mul i128 %add31, 6
  %mul34 = mul i128 %mul32, %fp12cyclotomicdecompress.k.read_arg_inner
  %mul36 = mul i128 %mul34, %fp12cyclotomicdecompress.k.read_arg_inner
  %add37 = add i128 %mul36, 1
  %call38 = call i128 @log_ceil(i128 %add37)
  %mul39 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add41 = add i128 %mul39, %call29
  %slt = icmp slt i128 %add41, 250
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %mul43 = mul i128 2, %fp12cyclotomicdecompress.k.read_arg_inner
  %sub = sub i128 %mul43, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch103, %entry
  %eps.0 = phi i128 [ 0, %entry ], [ %add105, %loop.latch103 ]
  br label %loop.body44

loop.body44:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add99, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 0, i128 %eps.0, i128 %j.0
  %in47 = load i128, i128* %array_getter, align 4
  %out48 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %array_getter51 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out48, i128 0, i128 1, i128 %eps.0, i128 %j.0
  %out52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out52, i128 %in47, i1* @constraint.820)
  %ptr_getter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %out55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter, i128 0, i128 1, i128 %eps.0, i128 %j.0
  store i128 %in47, i128* %out55, align 4
  %in56 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter59 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in56, i128 0, i128 2, i128 %eps.0, i128 %j.0
  %in60 = load i128, i128* %array_getter59, align 4
  %out61 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %array_getter64 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out61, i128 0, i128 2, i128 %eps.0, i128 %j.0
  %out65 = load i128, i128* %array_getter64, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out65, i128 %in60, i1* @constraint.821)
  %ptr_getter66 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %out69 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter66, i128 0, i128 2, i128 %eps.0, i128 %j.0
  store i128 %in60, i128* %out69, align 4
  %in70 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter73 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in70, i128 0, i128 1, i128 %eps.0, i128 %j.0
  %in74 = load i128, i128* %array_getter73, align 4
  %out75 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %array_getter78 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out75, i128 0, i128 4, i128 %eps.0, i128 %j.0
  %out79 = load i128, i128* %array_getter78, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out79, i128 %in74, i1* @constraint.822)
  %ptr_getter80 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %out83 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter80, i128 0, i128 4, i128 %eps.0, i128 %j.0
  store i128 %in74, i128* %out83, align 4
  %in84 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in84, i128 0, i128 3, i128 %eps.0, i128 %j.0
  %in88 = load i128, i128* %array_getter87, align 4
  %out89 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %array_getter92 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out89, i128 0, i128 5, i128 %eps.0, i128 %j.0
  %out93 = load i128, i128* %array_getter92, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out93, i128 %in88, i1* @constraint.823)
  %ptr_getter94 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %out97 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter94, i128 0, i128 5, i128 %eps.0, i128 %j.0
  store i128 %in88, i128* %out97, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body44
  %add99 = add i128 %j.0, 1
  %slt102 = icmp slt i128 %add99, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt102, label %loop.body44, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch103

loop.latch103:                                    ; preds = %loop.exit
  %add105 = add i128 %eps.0, 1
  %slt107 = icmp slt i128 %add105, 2
  br i1 %slt107, label %loop.body, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch103
  %call111 = call %struct_template_circuit_fp2iszero* @fn_template_build_fp2iszero(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner)
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch138, %loop.exit108
  %eps.1 = phi i128 [ 0, %loop.exit108 ], [ %add140, %loop.latch138 ]
  br label %loop.body113

loop.body113:                                     ; preds = %loop.latch131, %loop.body112
  %i.0 = phi i128 [ 0, %loop.body112 ], [ %add133, %loop.latch131 ]
  %in114 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter117 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in114, i128 0, i128 0, i128 %eps.1, i128 %i.0
  %in118 = load i128, i128* %array_getter117, align 4
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %call111, i32 0, i32 3
  %fp2iszero.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter120, align 8
  %array_getter123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2iszero.in.read_input_outter, i128 0, i128 %eps.1, i128 %i.0
  %g2IsZero124 = load i128, i128* %array_getter123, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g2IsZero124, i128 %in118, i1* @constraint.824)
  %struct_getter126 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %call111, i32 0, i32 3
  %fp2iszero.in.read_input_outter127 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter126, align 8
  %g2IsZero130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2iszero.in.read_input_outter127, i128 0, i128 %eps.1, i128 %i.0
  store i128 %in118, i128* %g2IsZero130, align 4
  br label %loop.latch131

loop.latch131:                                    ; preds = %loop.body113
  %add133 = add i128 %i.0, 1
  %slt136 = icmp slt i128 %add133, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt136, label %loop.body113, label %loop.exit137

loop.exit137:                                     ; preds = %loop.latch131
  br label %loop.latch138

loop.latch138:                                    ; preds = %loop.exit137
  %add140 = add i128 %eps.1, 1
  %slt142 = icmp slt i128 %add140, 2
  br i1 %slt142, label %loop.body112, label %loop.exit143

loop.exit143:                                     ; preds = %loop.latch138
  %mul147 = mul i128 2, %fp12cyclotomicdecompress.n.read_arg_inner
  %add148 = add i128 %mul147, 1
  %add150 = add i128 %add148, %call
  %call151 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add150)
  br label %loop.body152

loop.body152:                                     ; preds = %loop.latch194, %loop.exit143
  %i.1 = phi i128 [ 0, %loop.exit143 ], [ %add196, %loop.latch194 ]
  br label %loop.body153

loop.body153:                                     ; preds = %loop.latch188, %loop.body152
  %eps.2 = phi i128 [ 0, %loop.body152 ], [ %add190, %loop.latch188 ]
  %in154 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter157 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in154, i128 0, i128 3, i128 %eps.2, i128 %i.1
  %in158 = load i128, i128* %array_getter157, align 4
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call151, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter160, align 8
  %array_getter163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %eps.2, i128 %i.1
  %g5sq164 = load i128, i128* %array_getter163, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g5sq164, i128 %in158, i1* @constraint.825)
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call151, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter167 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter166, align 8
  %g5sq170 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter167, i128 0, i128 %eps.2, i128 %i.1
  store i128 %in158, i128* %g5sq170, align 4
  %in171 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter174 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in171, i128 0, i128 3, i128 %eps.2, i128 %i.1
  %in175 = load i128, i128* %array_getter174, align 4
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call151, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter177, align 8
  %array_getter180 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 %eps.2, i128 %i.1
  %g5sq181 = load i128, i128* %array_getter180, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g5sq181, i128 %in175, i1* @constraint.826)
  %struct_getter183 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call151, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter184 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter183, align 8
  %g5sq187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter184, i128 0, i128 %eps.2, i128 %i.1
  store i128 %in175, i128* %g5sq187, align 4
  br label %loop.latch188

loop.latch188:                                    ; preds = %loop.body153
  %add190 = add i128 %eps.2, 1
  %slt192 = icmp slt i128 %add190, 2
  br i1 %slt192, label %loop.body153, label %loop.exit193

loop.exit193:                                     ; preds = %loop.latch188
  br label %loop.latch194

loop.latch194:                                    ; preds = %loop.exit193
  %add196 = add i128 %i.1, 1
  %slt199 = icmp slt i128 %add196, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt199, label %loop.body152, label %loop.exit200

loop.exit200:                                     ; preds = %loop.latch194
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call151, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter203, align 8
  %call205 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %sub, [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 1)
  store [256 x [256 x i128]]* %call205, [256 x [256 x i128]]** %g5sqc, align 8
  %mul209 = mul i128 2, %fp12cyclotomicdecompress.n.read_arg_inner
  %add210 = add i128 %mul209, 3
  %add212 = add i128 %add210, %call
  %call213 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add212)
  br label %loop.body214

loop.body214:                                     ; preds = %loop.latch259, %loop.exit200
  %i.2 = phi i128 [ 0, %loop.exit200 ], [ %add261, %loop.latch259 ]
  br label %loop.body215

loop.body215:                                     ; preds = %loop.latch253, %loop.body214
  %eps.3 = phi i128 [ 0, %loop.body214 ], [ %add255, %loop.latch253 ]
  %in216 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter219 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in216, i128 0, i128 2, i128 %eps.3, i128 %i.2
  %in220 = load i128, i128* %array_getter219, align 4
  %mul221 = mul i128 3, %in220
  %struct_getter223 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call213, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter224 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter223, align 8
  %array_getter227 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter224, i128 0, i128 %eps.3, i128 %i.2
  %g4sq3228 = load i128, i128* %array_getter227, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g4sq3228, i128 %mul221, i1* @constraint.827)
  %struct_getter230 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call213, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter231 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter230, align 8
  %g4sq3234 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter231, i128 0, i128 %eps.3, i128 %i.2
  store i128 %mul221, i128* %g4sq3234, align 4
  %in235 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter238 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in235, i128 0, i128 2, i128 %eps.3, i128 %i.2
  %in239 = load i128, i128* %array_getter238, align 4
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call213, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter242 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter241, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter242, i128 0, i128 %eps.3, i128 %i.2
  %g4sq3246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g4sq3246, i128 %in239, i1* @constraint.828)
  %struct_getter248 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call213, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter249 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter248, align 8
  %g4sq3252 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter249, i128 0, i128 %eps.3, i128 %i.2
  store i128 %in239, i128* %g4sq3252, align 4
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.body215
  %add255 = add i128 %eps.3, 1
  %slt257 = icmp slt i128 %add255, 2
  br i1 %slt257, label %loop.body215, label %loop.exit258

loop.exit258:                                     ; preds = %loop.latch253
  br label %loop.latch259

loop.latch259:                                    ; preds = %loop.exit258
  %add261 = add i128 %i.2, 1
  %slt264 = icmp slt i128 %add261, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt264, label %loop.body214, label %loop.exit265

loop.exit265:                                     ; preds = %loop.latch259
  br label %loop.body267

loop.body267:                                     ; preds = %loop.latch329, %loop.exit265
  %i.3 = phi i128 [ 0, %loop.exit265 ], [ %add331, %loop.latch329 ]
  br label %loop.body268

loop.body268:                                     ; preds = %loop.latch323, %loop.body267
  %eps.4 = phi i128 [ 0, %loop.body267 ], [ %add325, %loop.latch323 ]
  %slt271 = icmp slt i128 %i.3, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt271, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body268
  %g5sqc272 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %g5sqc, align 8
  %array_getter275 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g5sqc272, i128 0, i128 %eps.4, i128 %i.3
  %g5sqc276 = load i128, i128* %array_getter275, align 4
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call213, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter279 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter278, align 8
  %array_getter282 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter279, i128 0, i128 %eps.4, i128 %i.3
  %g4sq3283 = load i128, i128* %array_getter282, align 4
  %add284 = add i128 %g5sqc276, %g4sq3283
  %in285 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter288 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in285, i128 0, i128 1, i128 %eps.4, i128 %i.3
  %in289 = load i128, i128* %array_getter288, align 4
  %mul290 = mul i128 2, %in289
  %sub291 = sub i128 %add284, %mul290
  %g1num292 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %array_getter295 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g1num292, i128 0, i128 %eps.4, i128 %i.3
  %g1num296 = load i128, i128* %array_getter295, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1num296, i128 %sub291, i1* @constraint.829)
  %ptr_getter297 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %g1num300 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter297, i128 0, i128 %eps.4, i128 %i.3
  store i128 %sub291, i128* %g1num300, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body268
  %g5sqc301 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %g5sqc, align 8
  %array_getter304 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g5sqc301, i128 0, i128 %eps.4, i128 %i.3
  %g5sqc305 = load i128, i128* %array_getter304, align 4
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call213, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter308 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter307, align 8
  %array_getter311 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter308, i128 0, i128 %eps.4, i128 %i.3
  %g4sq3312 = load i128, i128* %array_getter311, align 4
  %add313 = add i128 %g5sqc305, %g4sq3312
  %g1num314 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %array_getter317 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g1num314, i128 0, i128 %eps.4, i128 %i.3
  %g1num318 = load i128, i128* %array_getter317, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1num318, i128 %add313, i1* @constraint.830)
  %ptr_getter319 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %g1num322 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter319, i128 0, i128 %eps.4, i128 %i.3
  store i128 %add313, i128* %g1num322, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch323

loop.latch323:                                    ; preds = %if.exit
  %add325 = add i128 %eps.4, 1
  %slt327 = icmp slt i128 %add325, 2
  br i1 %slt327, label %loop.body268, label %loop.exit328

loop.exit328:                                     ; preds = %loop.latch323
  br label %loop.latch329

loop.latch329:                                    ; preds = %loop.exit328
  %add331 = add i128 %i.3, 1
  %slt334 = icmp slt i128 %add331, %sub
  br i1 %slt334, label %loop.body267, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch329
  %sub339 = sub i128 %fp12cyclotomicdecompress.k.read_arg_inner, 1
  %mul342 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add344 = add i128 %mul342, %call29
  %call345 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %sub339, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner, i128 %add344)
  br label %loop.body346

loop.body346:                                     ; preds = %loop.latch374, %loop.exit335
  %i.4 = phi i128 [ 0, %loop.exit335 ], [ %add376, %loop.latch374 ]
  br label %loop.body347

loop.body347:                                     ; preds = %loop.latch365, %loop.body346
  %j.1 = phi i128 [ 0, %loop.body346 ], [ %add367, %loop.latch365 ]
  %g1num348 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %array_getter351 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g1num348, i128 0, i128 %i.4, i128 %j.1
  %g1num352 = load i128, i128* %array_getter351, align 4
  %struct_getter354 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call345, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter354, align 8
  %array_getter357 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.4, i128 %j.1
  %g1numRed358 = load i128, i128* %array_getter357, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1numRed358, i128 %g1num352, i1* @constraint.831)
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call345, i32 0, i32 5
  %fp2compress.in.read_input_outter361 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter360, align 8
  %g1numRed364 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter361, i128 0, i128 %i.4, i128 %j.1
  store i128 %g1num352, i128* %g1numRed364, align 4
  br label %loop.latch365

loop.latch365:                                    ; preds = %loop.body347
  %add367 = add i128 %j.1, 1
  %mul370 = mul i128 2, %fp12cyclotomicdecompress.k.read_arg_inner
  %sub371 = sub i128 %mul370, 1
  %slt372 = icmp slt i128 %add367, %sub371
  br i1 %slt372, label %loop.body347, label %loop.exit373

loop.exit373:                                     ; preds = %loop.latch365
  br label %loop.latch374

loop.latch374:                                    ; preds = %loop.exit373
  %add376 = add i128 %i.4, 1
  %slt378 = icmp slt i128 %add376, 2
  br i1 %slt378, label %loop.body346, label %loop.exit379

loop.exit379:                                     ; preds = %loop.latch374
  %mul383 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add385 = add i128 %mul383, %call29
  %add387 = add i128 %fp12cyclotomicdecompress.n.read_arg_inner, 2
  %call389 = call %struct_template_circuit_signedfp2divide* @fn_template_build_signedfp2divide(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add385, i128 %add387, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner)
  br label %loop.body390

loop.body390:                                     ; preds = %loop.latch441, %loop.exit379
  %j.2 = phi i128 [ 0, %loop.exit379 ], [ %add443, %loop.latch441 ]
  br label %loop.body391

loop.body391:                                     ; preds = %loop.latch410, %loop.body390
  %i.5 = phi i128 [ 0, %loop.body390 ], [ %add412, %loop.latch410 ]
  %struct_getter393 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call345, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter393, align 8
  %array_getter396 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.5, i128 %j.2
  %g1numRed397 = load i128, i128* %array_getter396, align 4
  %struct_getter399 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 5
  %signedfp2divide.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter399, align 8
  %array_getter402 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.a.read_input_outter, i128 0, i128 %i.5, i128 %j.2
  %g1_1403 = load i128, i128* %array_getter402, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1_1403, i128 %g1numRed397, i1* @constraint.832)
  %struct_getter405 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 5
  %signedfp2divide.a.read_input_outter406 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter405, align 8
  %g1_1409 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.a.read_input_outter406, i128 0, i128 %i.5, i128 %j.2
  store i128 %g1numRed397, i128* %g1_1409, align 4
  br label %loop.latch410

loop.latch410:                                    ; preds = %loop.body391
  %add412 = add i128 %i.5, 1
  %slt414 = icmp slt i128 %add412, 2
  br i1 %slt414, label %loop.body391, label %loop.exit415

loop.exit415:                                     ; preds = %loop.latch410
  br label %loop.body416

loop.body416:                                     ; preds = %loop.latch435, %loop.exit415
  %i.6 = phi i128 [ 0, %loop.exit415 ], [ %add437, %loop.latch435 ]
  %in417 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter420 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in417, i128 0, i128 0, i128 %i.6, i128 %j.2
  %in421 = load i128, i128* %array_getter420, align 4
  %mul422 = mul i128 4, %in421
  %struct_getter424 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 6
  %signedfp2divide.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter424, align 8
  %array_getter427 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.b.read_input_outter, i128 0, i128 %i.6, i128 %j.2
  %g1_1428 = load i128, i128* %array_getter427, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1_1428, i128 %mul422, i1* @constraint.833)
  %struct_getter430 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 6
  %signedfp2divide.b.read_input_outter431 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter430, align 8
  %g1_1434 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.b.read_input_outter431, i128 0, i128 %i.6, i128 %j.2
  store i128 %mul422, i128* %g1_1434, align 4
  br label %loop.latch435

loop.latch435:                                    ; preds = %loop.body416
  %add437 = add i128 %i.6, 1
  %slt439 = icmp slt i128 %add437, 2
  br i1 %slt439, label %loop.body416, label %loop.exit440

loop.exit440:                                     ; preds = %loop.latch435
  br label %loop.latch441

loop.latch441:                                    ; preds = %loop.exit440
  %add443 = add i128 %j.2, 1
  %slt446 = icmp slt i128 %add443, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt446, label %loop.body390, label %loop.exit447

loop.exit447:                                     ; preds = %loop.latch441
  %add452 = add i128 %fp12cyclotomicdecompress.n.read_arg_inner, 1
  %mul454 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add455 = add i128 %mul454, 2
  %mul457 = mul i128 2, %call
  %add458 = add i128 %add455, %mul457
  %call459 = call %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner, i128 %add452, i128 %add458)
  br label %loop.body460

loop.body460:                                     ; preds = %loop.latch503, %loop.exit447
  %i.7 = phi i128 [ 0, %loop.exit447 ], [ %add505, %loop.latch503 ]
  br label %loop.body461

loop.body461:                                     ; preds = %loop.latch497, %loop.body460
  %eps.5 = phi i128 [ 0, %loop.body460 ], [ %add499, %loop.latch497 ]
  %in462 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter465 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in462, i128 0, i128 2, i128 %eps.5, i128 %i.7
  %in466 = load i128, i128* %array_getter465, align 4
  %mul467 = mul i128 2, %in466
  %struct_getter469 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call459, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter469, align 8
  %array_getter472 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter, i128 0, i128 %eps.5, i128 %i.7
  %twog4g5473 = load i128, i128* %array_getter472, align 4
  call void @fn_intrinsic_utils_constraint(i128 %twog4g5473, i128 %mul467, i1* @constraint.834)
  %struct_getter475 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call459, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter476 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter475, align 8
  %twog4g5479 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter476, i128 0, i128 %eps.5, i128 %i.7
  store i128 %mul467, i128* %twog4g5479, align 4
  %in480 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter483 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in480, i128 0, i128 3, i128 %eps.5, i128 %i.7
  %in484 = load i128, i128* %array_getter483, align 4
  %struct_getter486 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call459, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter486, align 8
  %array_getter489 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter, i128 0, i128 %eps.5, i128 %i.7
  %twog4g5490 = load i128, i128* %array_getter489, align 4
  call void @fn_intrinsic_utils_constraint(i128 %twog4g5490, i128 %in484, i1* @constraint.835)
  %struct_getter492 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call459, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter493 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter492, align 8
  %twog4g5496 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter493, i128 0, i128 %eps.5, i128 %i.7
  store i128 %in484, i128* %twog4g5496, align 4
  br label %loop.latch497

loop.latch497:                                    ; preds = %loop.body461
  %add499 = add i128 %eps.5, 1
  %slt501 = icmp slt i128 %add499, 2
  br i1 %slt501, label %loop.body461, label %loop.exit502

loop.exit502:                                     ; preds = %loop.latch497
  br label %loop.latch503

loop.latch503:                                    ; preds = %loop.exit502
  %add505 = add i128 %i.7, 1
  %slt508 = icmp slt i128 %add505, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt508, label %loop.body460, label %loop.exit509

loop.exit509:                                     ; preds = %loop.latch503
  %mul513 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add514 = add i128 %mul513, 2
  %mul516 = mul i128 2, %call
  %add517 = add i128 %add514, %mul516
  %call520 = call %struct_template_circuit_signedfp2divide* @fn_template_build_signedfp2divide(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add517, i128 %fp12cyclotomicdecompress.n.read_arg_inner, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner)
  br label %loop.body521

loop.body521:                                     ; preds = %loop.latch573, %loop.exit509
  %j.3 = phi i128 [ 0, %loop.exit509 ], [ %add575, %loop.latch573 ]
  br label %loop.body522

loop.body522:                                     ; preds = %loop.latch542, %loop.body521
  %i.8 = phi i128 [ 0, %loop.body521 ], [ %add544, %loop.latch542 ]
  %struct_getter524 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call459, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter524, align 8
  %array_getter527 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter, i128 0, i128 %i.8, i128 %j.3
  %twog4g5528 = load i128, i128* %array_getter527, align 4
  %struct_getter530 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 5
  %signedfp2divide.a.read_input_outter531 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter530, align 8
  %array_getter534 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.a.read_input_outter531, i128 0, i128 %i.8, i128 %j.3
  %g1_0535 = load i128, i128* %array_getter534, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1_0535, i128 %twog4g5528, i1* @constraint.836)
  %struct_getter537 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 5
  %signedfp2divide.a.read_input_outter538 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter537, align 8
  %g1_0541 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.a.read_input_outter538, i128 0, i128 %i.8, i128 %j.3
  store i128 %twog4g5528, i128* %g1_0541, align 4
  br label %loop.latch542

loop.latch542:                                    ; preds = %loop.body522
  %add544 = add i128 %i.8, 1
  %slt546 = icmp slt i128 %add544, 2
  br i1 %slt546, label %loop.body522, label %loop.exit547

loop.exit547:                                     ; preds = %loop.latch542
  br label %loop.body548

loop.body548:                                     ; preds = %loop.latch567, %loop.exit547
  %i.9 = phi i128 [ 0, %loop.exit547 ], [ %add569, %loop.latch567 ]
  %in549 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter552 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in549, i128 0, i128 1, i128 %i.9, i128 %j.3
  %in553 = load i128, i128* %array_getter552, align 4
  %struct_getter555 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 6
  %signedfp2divide.b.read_input_outter556 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter555, align 8
  %array_getter559 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.b.read_input_outter556, i128 0, i128 %i.9, i128 %j.3
  %g1_0560 = load i128, i128* %array_getter559, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g1_0560, i128 %in553, i1* @constraint.837)
  %struct_getter562 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 6
  %signedfp2divide.b.read_input_outter563 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter562, align 8
  %g1_0566 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.b.read_input_outter563, i128 0, i128 %i.9, i128 %j.3
  store i128 %in553, i128* %g1_0566, align 4
  br label %loop.latch567

loop.latch567:                                    ; preds = %loop.body548
  %add569 = add i128 %i.9, 1
  %slt571 = icmp slt i128 %add569, 2
  br i1 %slt571, label %loop.body548, label %loop.exit572

loop.exit572:                                     ; preds = %loop.latch567
  br label %loop.latch573

loop.latch573:                                    ; preds = %loop.exit572
  %add575 = add i128 %j.3, 1
  %slt578 = icmp slt i128 %add575, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt578, label %loop.body521, label %loop.exit579

loop.exit579:                                     ; preds = %loop.latch573
  br label %loop.body580

loop.body580:                                     ; preds = %loop.latch622, %loop.exit579
  %i.10 = phi i128 [ 0, %loop.exit579 ], [ %add624, %loop.latch622 ]
  br label %loop.body581

loop.body581:                                     ; preds = %loop.latch616, %loop.body580
  %eps.6 = phi i128 [ 0, %loop.body580 ], [ %add618, %loop.latch616 ]
  %struct_getter583 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 8
  %signedfp2divide.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter583, align 8
  %array_getter586 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter, i128 0, i128 %eps.6, i128 %i.10
  %g1_1587 = load i128, i128* %array_getter586, align 4
  %struct_getter589 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %call111, i32 0, i32 4
  %fp2iszero.out.read_output_outter = load i128, i128* %struct_getter589, align 4
  %struct_getter591 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 8
  %signedfp2divide.out.read_output_outter592 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter591, align 8
  %array_getter595 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter592, i128 0, i128 %eps.6, i128 %i.10
  %g1_0596 = load i128, i128* %array_getter595, align 4
  %struct_getter598 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 8
  %signedfp2divide.out.read_output_outter599 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter598, align 8
  %array_getter602 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter599, i128 0, i128 %eps.6, i128 %i.10
  %g1_1603 = load i128, i128* %array_getter602, align 4
  %sub604 = sub i128 %g1_0596, %g1_1603
  %mul605 = mul i128 %fp2iszero.out.read_output_outter, %sub604
  %add606 = add i128 %g1_1587, %mul605
  %out607 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %array_getter610 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out607, i128 0, i128 3, i128 %eps.6, i128 %i.10
  %out611 = load i128, i128* %array_getter610, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out611, i128 %add606, i1* @constraint.838)
  %ptr_getter612 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %out615 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter612, i128 0, i128 3, i128 %eps.6, i128 %i.10
  store i128 %add606, i128* %out615, align 4
  br label %loop.latch616

loop.latch616:                                    ; preds = %loop.body581
  %add618 = add i128 %eps.6, 1
  %slt620 = icmp slt i128 %add618, 2
  br i1 %slt620, label %loop.body581, label %loop.exit621

loop.exit621:                                     ; preds = %loop.latch616
  br label %loop.latch622

loop.latch622:                                    ; preds = %loop.exit621
  %add624 = add i128 %i.10, 1
  %slt627 = icmp slt i128 %add624, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt627, label %loop.body580, label %loop.exit628

loop.exit628:                                     ; preds = %loop.latch622
  %mul632 = mul i128 2, %fp12cyclotomicdecompress.n.read_arg_inner
  %add633 = add i128 %mul632, 2
  %add635 = add i128 %add633, %call
  %call636 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add635)
  br label %loop.body637

loop.body637:                                     ; preds = %loop.latch686, %loop.exit628
  %i.11 = phi i128 [ 0, %loop.exit628 ], [ %add688, %loop.latch686 ]
  br label %loop.body638

loop.body638:                                     ; preds = %loop.latch680, %loop.body637
  %eps.7 = phi i128 [ 0, %loop.body637 ], [ %add682, %loop.latch680 ]
  %struct_getter640 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 8
  %signedfp2divide.out.read_output_outter641 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter640, align 8
  %array_getter644 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter641, i128 0, i128 %eps.7, i128 %i.11
  %g1_1645 = load i128, i128* %array_getter644, align 4
  %mul646 = mul i128 2, %g1_1645
  %struct_getter648 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call636, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter649 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter648, align 8
  %array_getter652 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter649, i128 0, i128 %eps.7, i128 %i.11
  %twog1sq653 = load i128, i128* %array_getter652, align 4
  call void @fn_intrinsic_utils_constraint(i128 %twog1sq653, i128 %mul646, i1* @constraint.839)
  %struct_getter655 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call636, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter656 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter655, align 8
  %twog1sq659 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter656, i128 0, i128 %eps.7, i128 %i.11
  store i128 %mul646, i128* %twog1sq659, align 4
  %struct_getter661 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call389, i32 0, i32 8
  %signedfp2divide.out.read_output_outter662 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter661, align 8
  %array_getter665 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter662, i128 0, i128 %eps.7, i128 %i.11
  %g1_1666 = load i128, i128* %array_getter665, align 4
  %struct_getter668 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call636, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter669 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter668, align 8
  %array_getter672 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter669, i128 0, i128 %eps.7, i128 %i.11
  %twog1sq673 = load i128, i128* %array_getter672, align 4
  call void @fn_intrinsic_utils_constraint(i128 %twog1sq673, i128 %g1_1666, i1* @constraint.840)
  %struct_getter675 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call636, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter676 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter675, align 8
  %twog1sq679 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter676, i128 0, i128 %eps.7, i128 %i.11
  store i128 %g1_1666, i128* %twog1sq679, align 4
  br label %loop.latch680

loop.latch680:                                    ; preds = %loop.body638
  %add682 = add i128 %eps.7, 1
  %slt684 = icmp slt i128 %add682, 2
  br i1 %slt684, label %loop.body638, label %loop.exit685

loop.exit685:                                     ; preds = %loop.latch680
  br label %loop.latch686

loop.latch686:                                    ; preds = %loop.exit685
  %add688 = add i128 %i.11, 1
  %slt691 = icmp slt i128 %add688, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt691, label %loop.body637, label %loop.exit692

loop.exit692:                                     ; preds = %loop.latch686
  %mul696 = mul i128 2, %fp12cyclotomicdecompress.n.read_arg_inner
  %add697 = add i128 %mul696, 1
  %add699 = add i128 %add697, %call
  %call700 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add699)
  br label %loop.body701

loop.body701:                                     ; preds = %loop.latch745, %loop.exit692
  %i.12 = phi i128 [ 0, %loop.exit692 ], [ %add747, %loop.latch745 ]
  br label %loop.body702

loop.body702:                                     ; preds = %loop.latch739, %loop.body701
  %eps.8 = phi i128 [ 0, %loop.body701 ], [ %add741, %loop.latch739 ]
  %in703 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter706 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in703, i128 0, i128 0, i128 %eps.8, i128 %i.12
  %in707 = load i128, i128* %array_getter706, align 4
  %struct_getter709 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call700, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter710 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter709, align 8
  %array_getter713 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter710, i128 0, i128 %eps.8, i128 %i.12
  %g2g5714 = load i128, i128* %array_getter713, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g2g5714, i128 %in707, i1* @constraint.841)
  %struct_getter716 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call700, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter717 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter716, align 8
  %g2g5720 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter717, i128 0, i128 %eps.8, i128 %i.12
  store i128 %in707, i128* %g2g5720, align 4
  %in721 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter724 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in721, i128 0, i128 3, i128 %eps.8, i128 %i.12
  %in725 = load i128, i128* %array_getter724, align 4
  %struct_getter727 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call700, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter728 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter727, align 8
  %array_getter731 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter728, i128 0, i128 %eps.8, i128 %i.12
  %g2g5732 = load i128, i128* %array_getter731, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g2g5732, i128 %in725, i1* @constraint.842)
  %struct_getter734 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call700, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter735 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter734, align 8
  %g2g5738 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter735, i128 0, i128 %eps.8, i128 %i.12
  store i128 %in725, i128* %g2g5738, align 4
  br label %loop.latch739

loop.latch739:                                    ; preds = %loop.body702
  %add741 = add i128 %eps.8, 1
  %slt743 = icmp slt i128 %add741, 2
  br i1 %slt743, label %loop.body702, label %loop.exit744

loop.exit744:                                     ; preds = %loop.latch739
  br label %loop.latch745

loop.latch745:                                    ; preds = %loop.exit744
  %add747 = add i128 %i.12, 1
  %slt750 = icmp slt i128 %add747, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt750, label %loop.body701, label %loop.exit751

loop.exit751:                                     ; preds = %loop.latch745
  %mul755 = mul i128 2, %fp12cyclotomicdecompress.n.read_arg_inner
  %add756 = add i128 %mul755, 3
  %add758 = add i128 %add756, %call
  %call759 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add758)
  br label %loop.body760

loop.body760:                                     ; preds = %loop.latch805, %loop.exit751
  %i.13 = phi i128 [ 0, %loop.exit751 ], [ %add807, %loop.latch805 ]
  br label %loop.body761

loop.body761:                                     ; preds = %loop.latch799, %loop.body760
  %eps.9 = phi i128 [ 0, %loop.body760 ], [ %add801, %loop.latch799 ]
  %in762 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter765 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in762, i128 0, i128 1, i128 %eps.9, i128 %i.13
  %in766 = load i128, i128* %array_getter765, align 4
  %mul767 = mul i128 3, %in766
  %struct_getter769 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call759, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter770 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter769, align 8
  %array_getter773 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter770, i128 0, i128 %eps.9, i128 %i.13
  %threeg3g4774 = load i128, i128* %array_getter773, align 4
  call void @fn_intrinsic_utils_constraint(i128 %threeg3g4774, i128 %mul767, i1* @constraint.843)
  %struct_getter776 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call759, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter777 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter776, align 8
  %threeg3g4780 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter777, i128 0, i128 %eps.9, i128 %i.13
  store i128 %mul767, i128* %threeg3g4780, align 4
  %in781 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input, align 8
  %array_getter784 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in781, i128 0, i128 2, i128 %eps.9, i128 %i.13
  %in785 = load i128, i128* %array_getter784, align 4
  %struct_getter787 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call759, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter788 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter787, align 8
  %array_getter791 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter788, i128 0, i128 %eps.9, i128 %i.13
  %threeg3g4792 = load i128, i128* %array_getter791, align 4
  call void @fn_intrinsic_utils_constraint(i128 %threeg3g4792, i128 %in785, i1* @constraint.844)
  %struct_getter794 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call759, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter795 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter794, align 8
  %threeg3g4798 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter795, i128 0, i128 %eps.9, i128 %i.13
  store i128 %in785, i128* %threeg3g4798, align 4
  br label %loop.latch799

loop.latch799:                                    ; preds = %loop.body761
  %add801 = add i128 %eps.9, 1
  %slt803 = icmp slt i128 %add801, 2
  br i1 %slt803, label %loop.body761, label %loop.exit804

loop.exit804:                                     ; preds = %loop.latch799
  br label %loop.latch805

loop.latch805:                                    ; preds = %loop.exit804
  %add807 = add i128 %i.13, 1
  %slt810 = icmp slt i128 %add807, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt810, label %loop.body760, label %loop.exit811

loop.exit811:                                     ; preds = %loop.latch805
  %uniform_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]** %temp, align 8
  br label %loop.body813

loop.body813:                                     ; preds = %loop.latch849, %loop.exit811
  %i.14 = phi i128 [ 0, %loop.exit811 ], [ %add851, %loop.latch849 ]
  br label %loop.body814

loop.body814:                                     ; preds = %loop.latch842, %loop.body813
  %j.4 = phi i128 [ 0, %loop.body813 ], [ %add844, %loop.latch842 ]
  %struct_getter816 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call636, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter817 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter816, align 8
  %array_getter820 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter817, i128 0, i128 %i.14, i128 %j.4
  %twog1sq821 = load i128, i128* %array_getter820, align 4
  %struct_getter823 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call700, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter824 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter823, align 8
  %array_getter827 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter824, i128 0, i128 %i.14, i128 %j.4
  %g2g5828 = load i128, i128* %array_getter827, align 4
  %add829 = add i128 %twog1sq821, %g2g5828
  %struct_getter831 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call759, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter832 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter831, align 8
  %array_getter835 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter832, i128 0, i128 %i.14, i128 %j.4
  %threeg3g4836 = load i128, i128* %array_getter835, align 4
  %sub837 = sub i128 %add829, %threeg3g4836
  %ptr_getter838 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %temp, align 8
  %temp841 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter838, i128 0, i128 %i.14, i128 %j.4
  store i128 %sub837, i128* %temp841, align 4
  br label %loop.latch842

loop.latch842:                                    ; preds = %loop.body814
  %add844 = add i128 %j.4, 1
  %slt847 = icmp slt i128 %add844, %sub
  br i1 %slt847, label %loop.body814, label %loop.exit848

loop.exit848:                                     ; preds = %loop.latch842
  br label %loop.latch849

loop.latch849:                                    ; preds = %loop.exit848
  %add851 = add i128 %i.14, 1
  %slt853 = icmp slt i128 %add851, 2
  br i1 %slt853, label %loop.body813, label %loop.exit854

loop.exit854:                                     ; preds = %loop.latch849
  %temp856 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %temp, align 8
  %call858 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %sub, [256 x [256 x i128]]* %temp856, i128 1)
  store [256 x [256 x i128]]* %call858, [256 x [256 x i128]]** %tempc, align 8
  %tempc859 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tempc, align 8
  %array_getter860 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %tempc859, i128 0, i128 0, i128 0
  %tempc861 = load i128, i128* %array_getter860, align 4
  %add862 = add i128 %tempc861, 1
  %ptr_getter863 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tempc, align 8
  %tempc864 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter863, i128 0, i128 0, i128 0
  store i128 %add862, i128* %tempc864, align 4
  %sub868 = sub i128 %fp12cyclotomicdecompress.k.read_arg_inner, 1
  %mul871 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add873 = add i128 %mul871, %call38
  %call874 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %sub868, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner, i128 %add873)
  br label %loop.body875

loop.body875:                                     ; preds = %loop.latch904, %loop.exit854
  %i.15 = phi i128 [ 0, %loop.exit854 ], [ %add906, %loop.latch904 ]
  br label %loop.body876

loop.body876:                                     ; preds = %loop.latch895, %loop.body875
  %j.5 = phi i128 [ 0, %loop.body875 ], [ %add897, %loop.latch895 ]
  %tempc877 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tempc, align 8
  %array_getter880 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %tempc877, i128 0, i128 %i.15, i128 %j.5
  %tempc881 = load i128, i128* %array_getter880, align 4
  %struct_getter883 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call874, i32 0, i32 5
  %fp2compress.in.read_input_outter884 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter883, align 8
  %array_getter887 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter884, i128 0, i128 %i.15, i128 %j.5
  %compress01888 = load i128, i128* %array_getter887, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress01888, i128 %tempc881, i1* @constraint.845)
  %struct_getter890 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call874, i32 0, i32 5
  %fp2compress.in.read_input_outter891 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter890, align 8
  %compress01894 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter891, i128 0, i128 %i.15, i128 %j.5
  store i128 %tempc881, i128* %compress01894, align 4
  br label %loop.latch895

loop.latch895:                                    ; preds = %loop.body876
  %add897 = add i128 %j.5, 1
  %mul900 = mul i128 2, %fp12cyclotomicdecompress.k.read_arg_inner
  %sub901 = sub i128 %mul900, 1
  %slt902 = icmp slt i128 %add897, %sub901
  br i1 %slt902, label %loop.body876, label %loop.exit903

loop.exit903:                                     ; preds = %loop.latch895
  br label %loop.latch904

loop.latch904:                                    ; preds = %loop.exit903
  %add906 = add i128 %i.15, 1
  %slt908 = icmp slt i128 %add906, 2
  br i1 %slt908, label %loop.body875, label %loop.exit909

loop.exit909:                                     ; preds = %loop.latch904
  %mul913 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add915 = add i128 %mul913, %call38
  %call917 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add915, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner)
  br label %loop.body918

loop.body918:                                     ; preds = %loop.latch946, %loop.exit909
  %i.16 = phi i128 [ 0, %loop.exit909 ], [ %add948, %loop.latch946 ]
  br label %loop.body919

loop.body919:                                     ; preds = %loop.latch939, %loop.body918
  %j.6 = phi i128 [ 0, %loop.body918 ], [ %add941, %loop.latch939 ]
  %struct_getter921 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call874, i32 0, i32 6
  %fp2compress.out.read_output_outter922 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter921, align 8
  %array_getter925 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter922, i128 0, i128 %i.16, i128 %j.6
  %compress01926 = load i128, i128* %array_getter925, align 4
  %struct_getter928 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call917, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter928, align 8
  %array_getter931 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.16, i128 %j.6
  %carry_mod01932 = load i128, i128* %array_getter931, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_mod01932, i128 %compress01926, i1* @constraint.846)
  %struct_getter934 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call917, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter935 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter934, align 8
  %carry_mod01938 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter935, i128 0, i128 %i.16, i128 %j.6
  store i128 %compress01926, i128* %carry_mod01938, align 4
  br label %loop.latch939

loop.latch939:                                    ; preds = %loop.body919
  %add941 = add i128 %j.6, 1
  %slt944 = icmp slt i128 %add941, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt944, label %loop.body919, label %loop.exit945

loop.exit945:                                     ; preds = %loop.latch939
  br label %loop.latch946

loop.latch946:                                    ; preds = %loop.exit945
  %add948 = add i128 %i.16, 1
  %slt950 = icmp slt i128 %add948, 2
  br i1 %slt950, label %loop.body918, label %loop.exit951

loop.exit951:                                     ; preds = %loop.latch946
  br label %loop.body953

loop.body953:                                     ; preds = %loop.latch977, %loop.exit951
  %i.17 = phi i128 [ 0, %loop.exit951 ], [ %add979, %loop.latch977 ]
  br label %loop.body954

loop.body954:                                     ; preds = %loop.latch970, %loop.body953
  %j.7 = phi i128 [ 0, %loop.body953 ], [ %add972, %loop.latch970 ]
  %struct_getter956 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call917, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter956, align 8
  %array_getter959 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.17, i128 %j.7
  %carry_mod01960 = load i128, i128* %array_getter959, align 4
  %g0_1961 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter, align 8
  %array_getter964 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g0_1961, i128 0, i128 %i.17, i128 %j.7
  %g0_1965 = load i128, i128* %array_getter964, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g0_1965, i128 %carry_mod01960, i1* @constraint.847)
  %ptr_getter966 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter, align 8
  %g0_1969 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter966, i128 0, i128 %i.17, i128 %j.7
  store i128 %carry_mod01960, i128* %g0_1969, align 4
  br label %loop.latch970

loop.latch970:                                    ; preds = %loop.body954
  %add972 = add i128 %j.7, 1
  %slt975 = icmp slt i128 %add972, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt975, label %loop.body954, label %loop.exit976

loop.exit976:                                     ; preds = %loop.latch970
  br label %loop.latch977

loop.latch977:                                    ; preds = %loop.exit976
  %add979 = add i128 %i.17, 1
  %slt981 = icmp slt i128 %add979, 2
  br i1 %slt981, label %loop.body953, label %loop.exit982

loop.exit982:                                     ; preds = %loop.latch977
  %mul986 = mul i128 2, %fp12cyclotomicdecompress.n.read_arg_inner
  %add987 = add i128 %mul986, 2
  %add989 = add i128 %add987, %call
  %call990 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add989)
  br label %loop.body991

loop.body991:                                     ; preds = %loop.latch1040, %loop.exit982
  %i.18 = phi i128 [ 0, %loop.exit982 ], [ %add1042, %loop.latch1040 ]
  br label %loop.body992

loop.body992:                                     ; preds = %loop.latch1034, %loop.body991
  %eps.10 = phi i128 [ 0, %loop.body991 ], [ %add1036, %loop.latch1034 ]
  %struct_getter994 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 8
  %signedfp2divide.out.read_output_outter995 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter994, align 8
  %array_getter998 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter995, i128 0, i128 %eps.10, i128 %i.18
  %g1_0999 = load i128, i128* %array_getter998, align 4
  %mul1000 = mul i128 2, %g1_0999
  %struct_getter1002 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call990, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter1003 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1002, align 8
  %array_getter1006 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter1003, i128 0, i128 %eps.10, i128 %i.18
  %twog1_0sq1007 = load i128, i128* %array_getter1006, align 4
  call void @fn_intrinsic_utils_constraint(i128 %twog1_0sq1007, i128 %mul1000, i1* @constraint.848)
  %struct_getter1009 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call990, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter1010 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1009, align 8
  %twog1_0sq1013 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter1010, i128 0, i128 %eps.10, i128 %i.18
  store i128 %mul1000, i128* %twog1_0sq1013, align 4
  %struct_getter1015 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %call520, i32 0, i32 8
  %signedfp2divide.out.read_output_outter1016 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1015, align 8
  %array_getter1019 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.out.read_output_outter1016, i128 0, i128 %eps.10, i128 %i.18
  %g1_01020 = load i128, i128* %array_getter1019, align 4
  %struct_getter1022 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call990, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter1023 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1022, align 8
  %array_getter1026 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter1023, i128 0, i128 %eps.10, i128 %i.18
  %twog1_0sq1027 = load i128, i128* %array_getter1026, align 4
  call void @fn_intrinsic_utils_constraint(i128 %twog1_0sq1027, i128 %g1_01020, i1* @constraint.849)
  %struct_getter1029 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call990, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter1030 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1029, align 8
  %twog1_0sq1033 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter1030, i128 0, i128 %eps.10, i128 %i.18
  store i128 %g1_01020, i128* %twog1_0sq1033, align 4
  br label %loop.latch1034

loop.latch1034:                                   ; preds = %loop.body992
  %add1036 = add i128 %eps.10, 1
  %slt1038 = icmp slt i128 %add1036, 2
  br i1 %slt1038, label %loop.body992, label %loop.exit1039

loop.exit1039:                                    ; preds = %loop.latch1034
  br label %loop.latch1040

loop.latch1040:                                   ; preds = %loop.exit1039
  %add1042 = add i128 %i.18, 1
  %slt1045 = icmp slt i128 %add1042, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt1045, label %loop.body991, label %loop.exit1046

loop.exit1046:                                    ; preds = %loop.latch1040
  br label %loop.body1047

loop.body1047:                                    ; preds = %loop.latch1075, %loop.exit1046
  %i.19 = phi i128 [ 0, %loop.exit1046 ], [ %add1077, %loop.latch1075 ]
  br label %loop.body1048

loop.body1048:                                    ; preds = %loop.latch1068, %loop.body1047
  %j.8 = phi i128 [ 0, %loop.body1047 ], [ %add1070, %loop.latch1068 ]
  %struct_getter1050 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call990, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter1051 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1050, align 8
  %array_getter1054 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter1051, i128 0, i128 %i.19, i128 %j.8
  %twog1_0sq1055 = load i128, i128* %array_getter1054, align 4
  %struct_getter1057 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call759, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter1058 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1057, align 8
  %array_getter1061 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter1058, i128 0, i128 %i.19, i128 %j.8
  %threeg3g41062 = load i128, i128* %array_getter1061, align 4
  %sub1063 = sub i128 %twog1_0sq1055, %threeg3g41062
  %ptr_getter1064 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %temp, align 8
  %temp1067 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter1064, i128 0, i128 %i.19, i128 %j.8
  store i128 %sub1063, i128* %temp1067, align 4
  br label %loop.latch1068

loop.latch1068:                                   ; preds = %loop.body1048
  %add1070 = add i128 %j.8, 1
  %slt1073 = icmp slt i128 %add1070, %sub
  br i1 %slt1073, label %loop.body1048, label %loop.exit1074

loop.exit1074:                                    ; preds = %loop.latch1068
  br label %loop.latch1075

loop.latch1075:                                   ; preds = %loop.exit1074
  %add1077 = add i128 %i.19, 1
  %slt1079 = icmp slt i128 %add1077, 2
  br i1 %slt1079, label %loop.body1047, label %loop.exit1080

loop.exit1080:                                    ; preds = %loop.latch1075
  %temp1082 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %temp, align 8
  %call1084 = call [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %sub, [256 x [256 x i128]]* %temp1082, i128 1)
  store [256 x [256 x i128]]* %call1084, [256 x [256 x i128]]** %tempc, align 8
  %tempc1085 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tempc, align 8
  %array_getter1086 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %tempc1085, i128 0, i128 0, i128 0
  %tempc1087 = load i128, i128* %array_getter1086, align 4
  %add1088 = add i128 %tempc1087, 1
  %ptr_getter1089 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tempc, align 8
  %tempc1090 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter1089, i128 0, i128 0, i128 0
  store i128 %add1088, i128* %tempc1090, align 4
  %sub1094 = sub i128 %fp12cyclotomicdecompress.k.read_arg_inner, 1
  %mul1097 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add1099 = add i128 %mul1097, %call38
  %call1100 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %sub1094, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner, i128 %add1099)
  br label %loop.body1101

loop.body1101:                                    ; preds = %loop.latch1130, %loop.exit1080
  %i.20 = phi i128 [ 0, %loop.exit1080 ], [ %add1132, %loop.latch1130 ]
  br label %loop.body1102

loop.body1102:                                    ; preds = %loop.latch1121, %loop.body1101
  %j.9 = phi i128 [ 0, %loop.body1101 ], [ %add1123, %loop.latch1121 ]
  %tempc1103 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tempc, align 8
  %array_getter1106 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %tempc1103, i128 0, i128 %i.20, i128 %j.9
  %tempc1107 = load i128, i128* %array_getter1106, align 4
  %struct_getter1109 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call1100, i32 0, i32 5
  %fp2compress.in.read_input_outter1110 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1109, align 8
  %array_getter1113 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter1110, i128 0, i128 %i.20, i128 %j.9
  %compress001114 = load i128, i128* %array_getter1113, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress001114, i128 %tempc1107, i1* @constraint.850)
  %struct_getter1116 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call1100, i32 0, i32 5
  %fp2compress.in.read_input_outter1117 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1116, align 8
  %compress001120 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter1117, i128 0, i128 %i.20, i128 %j.9
  store i128 %tempc1107, i128* %compress001120, align 4
  br label %loop.latch1121

loop.latch1121:                                   ; preds = %loop.body1102
  %add1123 = add i128 %j.9, 1
  %mul1126 = mul i128 2, %fp12cyclotomicdecompress.k.read_arg_inner
  %sub1127 = sub i128 %mul1126, 1
  %slt1128 = icmp slt i128 %add1123, %sub1127
  br i1 %slt1128, label %loop.body1102, label %loop.exit1129

loop.exit1129:                                    ; preds = %loop.latch1121
  br label %loop.latch1130

loop.latch1130:                                   ; preds = %loop.exit1129
  %add1132 = add i128 %i.20, 1
  %slt1134 = icmp slt i128 %add1132, 2
  br i1 %slt1134, label %loop.body1101, label %loop.exit1135

loop.exit1135:                                    ; preds = %loop.latch1130
  %mul1139 = mul i128 3, %fp12cyclotomicdecompress.n.read_arg_inner
  %add1141 = add i128 %mul1139, %call38
  %call1143 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp12cyclotomicdecompress.n.read_arg_inner, i128 %fp12cyclotomicdecompress.k.read_arg_inner, i128 %add1141, [256 x i128]* %fp12cyclotomicdecompress.p.read_arg_inner)
  br label %loop.body1144

loop.body1144:                                    ; preds = %loop.latch1173, %loop.exit1135
  %i.21 = phi i128 [ 0, %loop.exit1135 ], [ %add1175, %loop.latch1173 ]
  br label %loop.body1145

loop.body1145:                                    ; preds = %loop.latch1166, %loop.body1144
  %j.10 = phi i128 [ 0, %loop.body1144 ], [ %add1168, %loop.latch1166 ]
  %struct_getter1147 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call1100, i32 0, i32 6
  %fp2compress.out.read_output_outter1148 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1147, align 8
  %array_getter1151 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter1148, i128 0, i128 %i.21, i128 %j.10
  %compress001152 = load i128, i128* %array_getter1151, align 4
  %struct_getter1154 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call1143, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter1155 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1154, align 8
  %array_getter1158 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter1155, i128 0, i128 %i.21, i128 %j.10
  %carry_mod001159 = load i128, i128* %array_getter1158, align 4
  call void @fn_intrinsic_utils_constraint(i128 %carry_mod001159, i128 %compress001152, i1* @constraint.851)
  %struct_getter1161 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call1143, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter1162 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1161, align 8
  %carry_mod001165 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter1162, i128 0, i128 %i.21, i128 %j.10
  store i128 %compress001152, i128* %carry_mod001165, align 4
  br label %loop.latch1166

loop.latch1166:                                   ; preds = %loop.body1145
  %add1168 = add i128 %j.10, 1
  %slt1171 = icmp slt i128 %add1168, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt1171, label %loop.body1145, label %loop.exit1172

loop.exit1172:                                    ; preds = %loop.latch1166
  br label %loop.latch1173

loop.latch1173:                                   ; preds = %loop.exit1172
  %add1175 = add i128 %i.21, 1
  %slt1177 = icmp slt i128 %add1175, 2
  br i1 %slt1177, label %loop.body1144, label %loop.exit1178

loop.exit1178:                                    ; preds = %loop.latch1173
  br label %loop.body1180

loop.body1180:                                    ; preds = %loop.latch1205, %loop.exit1178
  %i.22 = phi i128 [ 0, %loop.exit1178 ], [ %add1207, %loop.latch1205 ]
  br label %loop.body1181

loop.body1181:                                    ; preds = %loop.latch1198, %loop.body1180
  %j.11 = phi i128 [ 0, %loop.body1180 ], [ %add1200, %loop.latch1198 ]
  %struct_getter1183 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call1143, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter1184 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1183, align 8
  %array_getter1187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter1184, i128 0, i128 %i.22, i128 %j.11
  %carry_mod001188 = load i128, i128* %array_getter1187, align 4
  %g0_01189 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.declare_inter, align 8
  %array_getter1192 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g0_01189, i128 0, i128 %i.22, i128 %j.11
  %g0_01193 = load i128, i128* %array_getter1192, align 4
  call void @fn_intrinsic_utils_constraint(i128 %g0_01193, i128 %carry_mod001188, i1* @constraint.852)
  %ptr_getter1194 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.declare_inter, align 8
  %g0_01197 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ptr_getter1194, i128 0, i128 %i.22, i128 %j.11
  store i128 %carry_mod001188, i128* %g0_01197, align 4
  br label %loop.latch1198

loop.latch1198:                                   ; preds = %loop.body1181
  %add1200 = add i128 %j.11, 1
  %slt1203 = icmp slt i128 %add1200, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt1203, label %loop.body1181, label %loop.exit1204

loop.exit1204:                                    ; preds = %loop.latch1198
  br label %loop.latch1205

loop.latch1205:                                   ; preds = %loop.exit1204
  %add1207 = add i128 %i.22, 1
  %slt1209 = icmp slt i128 %add1207, 2
  br i1 %slt1209, label %loop.body1180, label %loop.exit1210

loop.exit1210:                                    ; preds = %loop.latch1205
  br label %loop.body1211

loop.body1211:                                    ; preds = %loop.latch1249, %loop.exit1210
  %i.23 = phi i128 [ 0, %loop.exit1210 ], [ %add1251, %loop.latch1249 ]
  br label %loop.body1212

loop.body1212:                                    ; preds = %loop.latch1243, %loop.body1211
  %eps.11 = phi i128 [ 0, %loop.body1211 ], [ %add1245, %loop.latch1243 ]
  %g0_11213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter, align 8
  %array_getter1216 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g0_11213, i128 0, i128 %eps.11, i128 %i.23
  %g0_11217 = load i128, i128* %array_getter1216, align 4
  %struct_getter1219 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %call111, i32 0, i32 4
  %fp2iszero.out.read_output_outter1220 = load i128, i128* %struct_getter1219, align 4
  %g0_01221 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.declare_inter, align 8
  %array_getter1224 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g0_01221, i128 0, i128 %eps.11, i128 %i.23
  %g0_01225 = load i128, i128* %array_getter1224, align 4
  %g0_11226 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter, align 8
  %array_getter1229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %g0_11226, i128 0, i128 %eps.11, i128 %i.23
  %g0_11230 = load i128, i128* %array_getter1229, align 4
  %sub1231 = sub i128 %g0_01225, %g0_11230
  %mul1232 = mul i128 %fp2iszero.out.read_output_outter1220, %sub1231
  %add1233 = add i128 %g0_11217, %mul1232
  %out1234 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %array_getter1237 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out1234, i128 0, i128 0, i128 %eps.11, i128 %i.23
  %out1238 = load i128, i128* %array_getter1237, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out1238, i128 %add1233, i1* @constraint.853)
  %ptr_getter1239 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %out1242 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter1239, i128 0, i128 0, i128 %eps.11, i128 %i.23
  store i128 %add1233, i128* %out1242, align 4
  br label %loop.latch1243

loop.latch1243:                                   ; preds = %loop.body1212
  %add1245 = add i128 %eps.11, 1
  %slt1247 = icmp slt i128 %add1245, 2
  br i1 %slt1247, label %loop.body1212, label %loop.exit1248

loop.exit1248:                                    ; preds = %loop.latch1243
  br label %loop.latch1249

loop.latch1249:                                   ; preds = %loop.exit1248
  %add1251 = add i128 %i.23, 1
  %slt1254 = icmp slt i128 %add1251, %fp12cyclotomicdecompress.k.read_arg_inner
  br i1 %slt1254, label %loop.body1211, label %loop.exit1255

loop.exit1255:                                    ; preds = %loop.latch1249
  br label %arraydim

arraydim:                                         ; preds = %loop.exit1255
  %ptr_cast = bitcast [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %fp12cyclotomicdecompress.k.read_arg_inner)
  %ptr_cast1256 = bitcast [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1256, i128 2, i128 %fp12cyclotomicdecompress.k.read_arg_inner)
  %ptr_cast1257 = bitcast [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1257, i128 2, i128 %sub)
  %ptr_cast1258 = bitcast [256 x [256 x i128]]** %g5sqc to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1258, i128 4, i128 50)
  %ptr_cast1259 = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1259, i128 4, i128 2, i128 %fp12cyclotomicdecompress.k.read_arg_inner)
  %ptr_cast1260 = bitcast [256 x [256 x i128]]** %tempc to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1260, i128 2, i128 50)
  %ptr_cast1261 = bitcast [256 x [256 x i128]]** %temp to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1261, i128 2, i128 %sub)
  %ptr_cast1262 = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1262, i128 6, i128 2, i128 %fp12cyclotomicdecompress.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %g1num1263 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.declare_inter, align 8
  %fp12cyclotomicdecompress.g1num.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %g1num1263, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g1num.write_inter_inner, align 8
  %g0_11264 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.declare_inter, align 8
  %fp12cyclotomicdecompress.g0_1.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %g0_11264, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_1.write_inter_inner, align 8
  %g0_01265 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.declare_inter, align 8
  %fp12cyclotomicdecompress.g0_0.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %g0_01265, [256 x [256 x i128]]** %fp12cyclotomicdecompress.g0_0.write_inter_inner, align 8
  %out1266 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.declare_output, align 8
  %fp12cyclotomicdecompress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out1266, [256 x [256 x [256 x i128]]]** %fp12cyclotomicdecompress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12cyclotomicdecompress* @fn_template_build_fp12cyclotomicdecompress(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12cyclotomicdecompress = alloca %struct_template_circuit_fp12cyclotomicdecompress, align 8
  %fp12cyclotomicdecompress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %struct_template_circuit_fp12cyclotomicdecompress, i32 0, i32 0
  store i128 %0, i128* %fp12cyclotomicdecompress.n.write_arg_inner, align 4
  %fp12cyclotomicdecompress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %struct_template_circuit_fp12cyclotomicdecompress, i32 0, i32 1
  store i128 %1, i128* %fp12cyclotomicdecompress.k.write_arg_inner, align 4
  %fp12cyclotomicdecompress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %struct_template_circuit_fp12cyclotomicdecompress, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12cyclotomicdecompress.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12cyclotomicdecompress* %struct_template_circuit_fp12cyclotomicdecompress
}

define void @fn_template_init_fp12invert(%struct_template_circuit_fp12invert* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 0
  %fp12invert.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 1
  %fp12invert.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 2
  %fp12invert.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 3
  %fp12invert.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %fp12invert.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12invert.in.declare_input, align 8
  %i4 = call i128 @fn_intrinsic_utils_init()
  %m5 = call i128 @fn_intrinsic_utils_init()
  %outRangeChecks = alloca [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]*, align 8
  %outRangeChecks6 = alloca [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], align 8
  store [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %outRangeChecks6, [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]** %outRangeChecks, align 8
  %fp12invert.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12invert.out.declare_output, align 8
  %j7 = call i128 @fn_intrinsic_utils_init()
  %inverse = alloca [256 x [256 x [256 x i128]]]*, align 8
  %inverse8 = alloca [256 x [256 x [256 x i128]]], align 8
  store [256 x [256 x [256 x i128]]]* %inverse8, [256 x [256 x [256 x i128]]]** %inverse, align 8
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12invert.in.declare_input, align 8
  %call = call [256 x [256 x [256 x i128]]]* @find_Fp12_inverse(i128 %fp12invert.n.read_arg_inner, i128 %fp12invert.k.read_arg_inner, [256 x i128]* %fp12invert.p.read_arg_inner, [256 x [256 x [256 x i128]]]* %in)
  store [256 x [256 x [256 x i128]]]* %call, [256 x [256 x [256 x i128]]]** %inverse, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch31, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add33, %loop.latch31 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch25, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add27, %loop.latch25 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body11
  %m.0 = phi i128 [ 0, %loop.body11 ], [ %add, %loop.latch ]
  %inverse13 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %inverse, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %inverse13, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  %inverse17 = load i128, i128* %array_getter, align 4
  %ptr_getter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12invert.out.declare_output, align 8
  %out21 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  store i128 %inverse17, i128* %out21, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add = add i128 %m.0, 1
  %slt = icmp slt i128 %add, %fp12invert.k.read_arg_inner
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch25

loop.latch25:                                     ; preds = %loop.exit
  %add27 = add i128 %j.0, 1
  %slt29 = icmp slt i128 %add27, 2
  br i1 %slt29, label %loop.body11, label %loop.exit30

loop.exit30:                                      ; preds = %loop.latch25
  br label %loop.latch31

loop.latch31:                                     ; preds = %loop.exit30
  %add33 = add i128 %i.0, 1
  %slt35 = icmp slt i128 %add33, 6
  br i1 %slt35, label %loop.body, label %loop.exit36

loop.exit36:                                      ; preds = %loop.latch31
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch80, %loop.exit36
  %i.1 = phi i128 [ 0, %loop.exit36 ], [ %add82, %loop.latch80 ]
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch74, %loop.body38
  %j.1 = phi i128 [ 0, %loop.body38 ], [ %add76, %loop.latch74 ]
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch67, %loop.body39
  %m.1 = phi i128 [ 0, %loop.body39 ], [ %add69, %loop.latch67 ]
  %call42 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %fp12invert.n.read_arg_inner)
  %ptr_getter43 = load [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]*, [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]** %outRangeChecks, align 8
  %outRangeChecks47 = getelementptr inbounds [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %ptr_getter43, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  store %struct_template_circuit_num2bits* %call42, %struct_template_circuit_num2bits** %outRangeChecks47, align 8
  %out48 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12invert.out.declare_output, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out48, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  %out53 = load i128, i128* %array_getter52, align 4
  %outRangeChecks54 = load [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]*, [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]** %outRangeChecks, align 8
  %array_getter58 = getelementptr inbounds [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %outRangeChecks54, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  %outRangeChecks59 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter58, align 8
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks59, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter60, align 4
  call void @fn_intrinsic_utils_constraint(i128 %num2bits.in.read_input_outter, i128 %out53, i1* @constraint.854)
  %ptr_getter61 = load [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]*, [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]** %outRangeChecks, align 8
  %array_getter65 = getelementptr inbounds [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %ptr_getter61, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  %outRangeChecks66 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter65, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks66, i32 0, i32 1
  store i128 %out53, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body40
  %add69 = add i128 %m.1, 1
  %slt72 = icmp slt i128 %add69, %fp12invert.k.read_arg_inner
  br i1 %slt72, label %loop.body40, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  br label %loop.latch74

loop.latch74:                                     ; preds = %loop.exit73
  %add76 = add i128 %j.1, 1
  %slt78 = icmp slt i128 %add76, 2
  br i1 %slt78, label %loop.body39, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch74
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.exit79
  %add82 = add i128 %i.1, 1
  %slt84 = icmp slt i128 %add82, 6
  br i1 %slt84, label %loop.body38, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch80
  %call89 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12invert.n.read_arg_inner, i128 %fp12invert.k.read_arg_inner, [256 x i128]* %fp12invert.p.read_arg_inner)
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch146, %loop.exit85
  %i.2 = phi i128 [ 0, %loop.exit85 ], [ %add148, %loop.latch146 ]
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch140, %loop.body90
  %j.2 = phi i128 [ 0, %loop.body90 ], [ %add142, %loop.latch140 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch133, %loop.body91
  %m.2 = phi i128 [ 0, %loop.body91 ], [ %add135, %loop.latch133 ]
  %in93 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12invert.in.declare_input, align 8
  %array_getter97 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in93, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %in98 = load i128, i128* %array_getter97, align 4
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call89, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter100, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %in_out105 = load i128, i128* %array_getter104, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out105, i128 %in98, i1* @constraint.855)
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call89, i32 0, i32 3
  %fp12multiply.a.read_input_outter108 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter107, align 8
  %in_out112 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter108, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  store i128 %in98, i128* %in_out112, align 4
  %out113 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12invert.out.declare_output, align 8
  %array_getter117 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out113, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %out118 = load i128, i128* %array_getter117, align 4
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call89, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter120, align 8
  %array_getter124 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %in_out125 = load i128, i128* %array_getter124, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out125, i128 %out118, i1* @constraint.856)
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call89, i32 0, i32 4
  %fp12multiply.b.read_input_outter128 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter127, align 8
  %in_out132 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter128, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  store i128 %out118, i128* %in_out132, align 4
  br label %loop.latch133

loop.latch133:                                    ; preds = %loop.body92
  %add135 = add i128 %m.2, 1
  %slt138 = icmp slt i128 %add135, %fp12invert.k.read_arg_inner
  br i1 %slt138, label %loop.body92, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch133
  br label %loop.latch140

loop.latch140:                                    ; preds = %loop.exit139
  %add142 = add i128 %j.2, 1
  %slt144 = icmp slt i128 %add142, 2
  br i1 %slt144, label %loop.body91, label %loop.exit145

loop.exit145:                                     ; preds = %loop.latch140
  br label %loop.latch146

loop.latch146:                                    ; preds = %loop.exit145
  %add148 = add i128 %i.2, 1
  %slt150 = icmp slt i128 %add148, 6
  br i1 %slt150, label %loop.body90, label %loop.exit151

loop.exit151:                                     ; preds = %loop.latch146
  br label %loop.body152

loop.body152:                                     ; preds = %loop.latch189, %loop.exit151
  %i.3 = phi i128 [ 0, %loop.exit151 ], [ %add191, %loop.latch189 ]
  br label %loop.body153

loop.body153:                                     ; preds = %loop.latch183, %loop.body152
  %j.3 = phi i128 [ 0, %loop.body152 ], [ %add185, %loop.latch183 ]
  br label %loop.body154

loop.body154:                                     ; preds = %loop.latch176, %loop.body153
  %m.3 = phi i128 [ 0, %loop.body153 ], [ %add178, %loop.latch176 ]
  %eq = icmp eq i128 %i.3, 0
  %eq157 = icmp eq i128 %j.3, 0
  %and = and i1 %eq, %eq157
  %eq159 = icmp eq i128 %m.3, 0
  %and160 = and i1 %and, %eq159
  br i1 %and160, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body154
  %struct_getter162 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call89, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter162, align 8
  %array_getter166 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %i.3, i128 %j.3, i128 %m.3
  %in_out167 = load i128, i128* %array_getter166, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out167, i128 1, i1* @constraint.857)
  br label %if.exit

if.false:                                         ; preds = %loop.body154
  %struct_getter169 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call89, i32 0, i32 5
  %fp12multiply.out.read_output_outter170 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter169, align 8
  %array_getter174 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter170, i128 0, i128 %i.3, i128 %j.3, i128 %m.3
  %in_out175 = load i128, i128* %array_getter174, align 4
  call void @fn_intrinsic_utils_constraint(i128 %in_out175, i128 0, i1* @constraint.858)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch176

loop.latch176:                                    ; preds = %if.exit
  %add178 = add i128 %m.3, 1
  %slt181 = icmp slt i128 %add178, %fp12invert.k.read_arg_inner
  br i1 %slt181, label %loop.body154, label %loop.exit182

loop.exit182:                                     ; preds = %loop.latch176
  br label %loop.latch183

loop.latch183:                                    ; preds = %loop.exit182
  %add185 = add i128 %j.3, 1
  %slt187 = icmp slt i128 %add185, 2
  br i1 %slt187, label %loop.body153, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch183
  br label %loop.latch189

loop.latch189:                                    ; preds = %loop.exit188
  %add191 = add i128 %i.3, 1
  %slt193 = icmp slt i128 %add191, 6
  br i1 %slt193, label %loop.body152, label %loop.exit194

loop.exit194:                                     ; preds = %loop.latch189
  br label %arraydim

arraydim:                                         ; preds = %loop.exit194
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %inverse to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 50)
  %ptr_cast195 = bitcast [256 x [256 x [256 x i128]]]** %fp12invert.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast195, i128 6, i128 2, i128 %fp12invert.k.read_arg_inner)
  %ptr_cast196 = bitcast [256 x [256 x [256 x i128]]]** %fp12invert.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast196, i128 6, i128 2, i128 %fp12invert.k.read_arg_inner)
  %ptr_cast197 = bitcast [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]** %outRangeChecks to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast197, i128 6, i128 2, i128 %fp12invert.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out198 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12invert.out.declare_output, align 8
  %fp12invert.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out198, [256 x [256 x [256 x i128]]]** %fp12invert.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12invert* @fn_template_build_fp12invert(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12invert = alloca %struct_template_circuit_fp12invert, align 8
  %fp12invert.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert, i32 0, i32 0
  store i128 %0, i128* %fp12invert.n.write_arg_inner, align 4
  %fp12invert.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert, i32 0, i32 1
  store i128 %1, i128* %fp12invert.k.write_arg_inner, align 4
  %fp12invert.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12invert.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert
}

define void @fn_template_init_fp12exp(%struct_template_circuit_fp12exp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 0
  %fp12exp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 1
  %fp12exp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 2
  %fp12exp.e.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 3
  %fp12exp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 4
  %fp12exp.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %fp12exp.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12exp.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12exp.in.declare_input, align 8
  %temp5 = call i128 @fn_intrinsic_utils_init()
  %BITLENGTH6 = call i128 @fn_intrinsic_utils_init()
  %mult = alloca [256 x %struct_template_circuit_fp12multiply*]*, align 8
  %mult7 = alloca [256 x %struct_template_circuit_fp12multiply*], align 8
  store [256 x %struct_template_circuit_fp12multiply*]* %mult7, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %curid8 = call i128 @fn_intrinsic_utils_init()
  %j9 = call i128 @fn_intrinsic_utils_init()
  %eps10 = call i128 @fn_intrinsic_utils_init()
  %fp12exp.first.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %first = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %first, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %fp12exp.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall11 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output, align 8
  %id12 = call i128 @fn_intrinsic_utils_init()
  %i13 = call i128 @fn_intrinsic_utils_init()
  %pow2 = alloca [256 x %struct_template_circuit_fp12square*]*, align 8
  %pow214 = alloca [256 x %struct_template_circuit_fp12square*], align 8
  store [256 x %struct_template_circuit_fp12square*]* %pow214, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %sgt = icmp sgt i128 %fp12exp.e.read_arg_inner, 0
  call void @fn_intrinsic_utils_assert(i1 %sgt)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %BITLENGTH.0 = phi i128 [ 0, %entry ], [ %BITLENGTH.1, %loop.latch ]
  %temp.0 = phi i128 [ %fp12exp.e.read_arg_inner, %entry ], [ %rshift, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %ne = icmp ne i128 %temp.0, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BITLENGTH.1 = phi i128 [ %i.0, %if.true ], [ %BITLENGTH.0, %if.false ]
  %rshift = lshr i128 %temp.0, 1
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add23 = add i128 %BITLENGTH.1, 1
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch408, %loop.exit
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.1, %loop.latch408 ]
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add410, %loop.latch408 ]
  %sgt31 = icmp sgt i128 %i.1, 0
  br i1 %sgt31, label %if.true28, label %if.false29

if.true28:                                        ; preds = %loop.body27
  %call = call %struct_template_circuit_fp12square* @fn_template_build_fp12square(i128 %fp12exp.n.read_arg_inner, i128 %fp12exp.k.read_arg_inner, [256 x i128]* %fp12exp.p.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %pow234 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %ptr_getter, i128 0, i128 %i.1
  store %struct_template_circuit_fp12square* %call, %struct_template_circuit_fp12square** %pow234, align 8
  %eq = icmp eq i128 %i.1, 1
  br i1 %eq, label %if.true35, label %if.false36

if.false29:                                       ; preds = %loop.body27
  br label %if.exit138

if.true35:                                        ; preds = %if.true28
  br label %loop.body38

if.false36:                                       ; preds = %if.true28
  br label %loop.body84

loop.body38:                                      ; preds = %loop.latch78, %if.true35
  %id.0 = phi i128 [ 0, %if.true35 ], [ %add80, %loop.latch78 ]
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch72, %loop.body38
  %eps.0 = phi i128 [ 0, %loop.body38 ], [ %add74, %loop.latch72 ]
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch65, %loop.body39
  %j.0 = phi i128 [ 0, %loop.body39 ], [ %add67, %loop.latch65 ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %in44 = load i128, i128* %array_getter, align 4
  %pow245 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %array_getter47 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow245, i128 0, i128 %i.1
  %pow248 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow248, i32 0, i32 3
  %fp12square.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter49, align 8
  %array_getter53 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %pow254 = load i128, i128* %array_getter53, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow254, i128 %in44, i1* @constraint.859)
  %ptr_getter55 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %array_getter57 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %ptr_getter55, i128 0, i128 %i.1
  %pow258 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter57, align 8
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow258, i32 0, i32 3
  %fp12square.in.read_input_outter60 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter59, align 8
  %pow264 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter60, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  store i128 %in44, i128* %pow264, align 4
  br label %loop.latch65

loop.latch65:                                     ; preds = %loop.body40
  %add67 = add i128 %j.0, 1
  %slt70 = icmp slt i128 %add67, %fp12exp.k.read_arg_inner
  br i1 %slt70, label %loop.body40, label %loop.exit71

loop.exit71:                                      ; preds = %loop.latch65
  br label %loop.latch72

loop.latch72:                                     ; preds = %loop.exit71
  %add74 = add i128 %eps.0, 1
  %slt76 = icmp slt i128 %add74, 2
  br i1 %slt76, label %loop.body39, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch72
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.exit77
  %add80 = add i128 %id.0, 1
  %slt82 = icmp slt i128 %add80, 6
  br i1 %slt82, label %loop.body38, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch78
  br label %if.exit137

loop.body84:                                      ; preds = %loop.latch131, %if.false36
  %id.1 = phi i128 [ 0, %if.false36 ], [ %add133, %loop.latch131 ]
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch125, %loop.body84
  %eps.1 = phi i128 [ 0, %loop.body84 ], [ %add127, %loop.latch125 ]
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch118, %loop.body85
  %j.1 = phi i128 [ 0, %loop.body85 ], [ %add120, %loop.latch118 ]
  %pow287 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %sub = sub i128 %i.1, 1
  %array_getter89 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow287, i128 0, i128 %sub
  %pow290 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter89, align 8
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow290, i32 0, i32 4
  %fp12square.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter91, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.out.read_output_outter, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %pow296 = load i128, i128* %array_getter95, align 4
  %pow297 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %array_getter99 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow297, i128 0, i128 %i.1
  %pow2100 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter99, align 8
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2100, i32 0, i32 3
  %fp12square.in.read_input_outter102 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter101, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter102, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %pow2107 = load i128, i128* %array_getter106, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow2107, i128 %pow296, i1* @constraint.860)
  %ptr_getter108 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %array_getter110 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %ptr_getter108, i128 0, i128 %i.1
  %pow2111 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter110, align 8
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2111, i32 0, i32 3
  %fp12square.in.read_input_outter113 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter112, align 8
  %pow2117 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter113, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  store i128 %pow296, i128* %pow2117, align 4
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.body86
  %add120 = add i128 %j.1, 1
  %slt123 = icmp slt i128 %add120, %fp12exp.k.read_arg_inner
  br i1 %slt123, label %loop.body86, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.exit124
  %add127 = add i128 %eps.1, 1
  %slt129 = icmp slt i128 %add127, 2
  br i1 %slt129, label %loop.body85, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  br label %loop.latch131

loop.latch131:                                    ; preds = %loop.exit130
  %add133 = add i128 %id.1, 1
  %slt135 = icmp slt i128 %add133, 6
  br i1 %slt135, label %loop.body84, label %loop.exit136

loop.exit136:                                     ; preds = %loop.latch131
  br label %if.exit137

if.exit137:                                       ; preds = %loop.exit136, %loop.exit83
  br label %if.exit138

if.exit138:                                       ; preds = %if.exit137, %if.false29
  %rshift143 = lshr i128 %fp12exp.e.read_arg_inner, %i.1
  %and = and i128 %rshift143, 1
  %eq144 = icmp eq i128 %and, 1
  br i1 %eq144, label %if.true139, label %if.false140

if.true139:                                       ; preds = %if.exit138
  %eq148 = icmp eq i128 %curid.0, 0
  br i1 %eq148, label %if.true145, label %if.false146

if.false140:                                      ; preds = %if.exit138
  br label %if.exit407

if.true145:                                       ; preds = %if.true139
  %eq152 = icmp eq i128 %i.1, 0
  br i1 %eq152, label %if.true149, label %if.false150

if.false146:                                      ; preds = %if.true139
  %call240 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12exp.n.read_arg_inner, i128 %fp12exp.k.read_arg_inner, [256 x i128]* %fp12exp.p.read_arg_inner)
  %ptr_getter241 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %mult243 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter241, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12multiply* %call240, %struct_template_circuit_fp12multiply** %mult243, align 8
  br label %loop.body244

if.true149:                                       ; preds = %if.true145
  br label %loop.body153

if.false150:                                      ; preds = %if.true145
  br label %loop.body192

loop.body153:                                     ; preds = %loop.latch186, %if.true149
  %id.2 = phi i128 [ 0, %if.true149 ], [ %add188, %loop.latch186 ]
  br label %loop.body154

loop.body154:                                     ; preds = %loop.latch180, %loop.body153
  %eps.2 = phi i128 [ 0, %loop.body153 ], [ %add182, %loop.latch180 ]
  br label %loop.body155

loop.body155:                                     ; preds = %loop.latch173, %loop.body154
  %j.2 = phi i128 [ 0, %loop.body154 ], [ %add175, %loop.latch173 ]
  %in156 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.in.declare_input, align 8
  %array_getter160 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in156, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %in161 = load i128, i128* %array_getter160, align 4
  %first162 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %array_getter166 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first162, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %first167 = load i128, i128* %array_getter166, align 4
  call void @fn_intrinsic_utils_constraint(i128 %first167, i128 %in161, i1* @constraint.861)
  %ptr_getter168 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %first172 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter168, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  store i128 %in161, i128* %first172, align 4
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.body155
  %add175 = add i128 %j.2, 1
  %slt178 = icmp slt i128 %add175, %fp12exp.k.read_arg_inner
  br i1 %slt178, label %loop.body155, label %loop.exit179

loop.exit179:                                     ; preds = %loop.latch173
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.exit179
  %add182 = add i128 %eps.2, 1
  %slt184 = icmp slt i128 %add182, 2
  br i1 %slt184, label %loop.body154, label %loop.exit185

loop.exit185:                                     ; preds = %loop.latch180
  br label %loop.latch186

loop.latch186:                                    ; preds = %loop.exit185
  %add188 = add i128 %id.2, 1
  %slt190 = icmp slt i128 %add188, 6
  br i1 %slt190, label %loop.body153, label %loop.exit191

loop.exit191:                                     ; preds = %loop.latch186
  br label %if.exit236

loop.body192:                                     ; preds = %loop.latch230, %if.false150
  %id.3 = phi i128 [ 0, %if.false150 ], [ %add232, %loop.latch230 ]
  br label %loop.body193

loop.body193:                                     ; preds = %loop.latch224, %loop.body192
  %eps.3 = phi i128 [ 0, %loop.body192 ], [ %add226, %loop.latch224 ]
  br label %loop.body194

loop.body194:                                     ; preds = %loop.latch217, %loop.body193
  %j.3 = phi i128 [ 0, %loop.body193 ], [ %add219, %loop.latch217 ]
  %pow2195 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %array_getter197 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow2195, i128 0, i128 %i.1
  %pow2198 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter197, align 8
  %struct_getter199 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2198, i32 0, i32 4
  %fp12square.out.read_output_outter200 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter199, align 8
  %array_getter204 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.out.read_output_outter200, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %pow2205 = load i128, i128* %array_getter204, align 4
  %first206 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %array_getter210 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first206, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %first211 = load i128, i128* %array_getter210, align 4
  call void @fn_intrinsic_utils_constraint(i128 %first211, i128 %pow2205, i1* @constraint.862)
  %ptr_getter212 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %first216 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter212, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  store i128 %pow2205, i128* %first216, align 4
  br label %loop.latch217

loop.latch217:                                    ; preds = %loop.body194
  %add219 = add i128 %j.3, 1
  %slt222 = icmp slt i128 %add219, %fp12exp.k.read_arg_inner
  br i1 %slt222, label %loop.body194, label %loop.exit223

loop.exit223:                                     ; preds = %loop.latch217
  br label %loop.latch224

loop.latch224:                                    ; preds = %loop.exit223
  %add226 = add i128 %eps.3, 1
  %slt228 = icmp slt i128 %add226, 2
  br i1 %slt228, label %loop.body193, label %loop.exit229

loop.exit229:                                     ; preds = %loop.latch224
  br label %loop.latch230

loop.latch230:                                    ; preds = %loop.exit229
  %add232 = add i128 %id.3, 1
  %slt234 = icmp slt i128 %add232, 6
  br i1 %slt234, label %loop.body192, label %loop.exit235

loop.exit235:                                     ; preds = %loop.latch230
  br label %if.exit236

if.exit236:                                       ; preds = %loop.exit235, %loop.exit191
  br label %if.exit404

loop.body244:                                     ; preds = %loop.latch291, %if.false146
  %id.4 = phi i128 [ 0, %if.false146 ], [ %add293, %loop.latch291 ]
  br label %loop.body245

loop.body245:                                     ; preds = %loop.latch285, %loop.body244
  %eps.4 = phi i128 [ 0, %loop.body244 ], [ %add287, %loop.latch285 ]
  br label %loop.body246

loop.body246:                                     ; preds = %loop.latch278, %loop.body245
  %j.4 = phi i128 [ 0, %loop.body245 ], [ %add280, %loop.latch278 ]
  %pow2247 = load [256 x %struct_template_circuit_fp12square*]*, [256 x %struct_template_circuit_fp12square*]** %pow2, align 8
  %array_getter249 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow2247, i128 0, i128 %i.1
  %pow2250 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter249, align 8
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2250, i32 0, i32 4
  %fp12square.out.read_output_outter252 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter251, align 8
  %array_getter256 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.out.read_output_outter252, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %pow2257 = load i128, i128* %array_getter256, align 4
  %mult258 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter260 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult258, i128 0, i128 %curid.0
  %mult261 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter260, align 8
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult261, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter262, align 8
  %array_getter266 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %mult267 = load i128, i128* %array_getter266, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult267, i128 %pow2257, i1* @constraint.863)
  %ptr_getter268 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter270 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter268, i128 0, i128 %curid.0
  %mult271 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter270, align 8
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult271, i32 0, i32 3
  %fp12multiply.a.read_input_outter273 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter272, align 8
  %mult277 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter273, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  store i128 %pow2257, i128* %mult277, align 4
  br label %loop.latch278

loop.latch278:                                    ; preds = %loop.body246
  %add280 = add i128 %j.4, 1
  %slt283 = icmp slt i128 %add280, %fp12exp.k.read_arg_inner
  br i1 %slt283, label %loop.body246, label %loop.exit284

loop.exit284:                                     ; preds = %loop.latch278
  br label %loop.latch285

loop.latch285:                                    ; preds = %loop.exit284
  %add287 = add i128 %eps.4, 1
  %slt289 = icmp slt i128 %add287, 2
  br i1 %slt289, label %loop.body245, label %loop.exit290

loop.exit290:                                     ; preds = %loop.latch285
  br label %loop.latch291

loop.latch291:                                    ; preds = %loop.exit290
  %add293 = add i128 %id.4, 1
  %slt295 = icmp slt i128 %add293, 6
  br i1 %slt295, label %loop.body244, label %loop.exit296

loop.exit296:                                     ; preds = %loop.latch291
  %eq300 = icmp eq i128 %curid.0, 1
  br i1 %eq300, label %if.true297, label %if.false298

if.true297:                                       ; preds = %loop.exit296
  br label %loop.body301

if.false298:                                      ; preds = %loop.exit296
  br label %loop.body349

loop.body301:                                     ; preds = %loop.latch343, %if.true297
  %id.5 = phi i128 [ 0, %if.true297 ], [ %add345, %loop.latch343 ]
  br label %loop.body302

loop.body302:                                     ; preds = %loop.latch337, %loop.body301
  %eps.5 = phi i128 [ 0, %loop.body301 ], [ %add339, %loop.latch337 ]
  br label %loop.body303

loop.body303:                                     ; preds = %loop.latch330, %loop.body302
  %j.5 = phi i128 [ 0, %loop.body302 ], [ %add332, %loop.latch330 ]
  %first304 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %array_getter308 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first304, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %first309 = load i128, i128* %array_getter308, align 4
  %mult310 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter312 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult310, i128 0, i128 %curid.0
  %mult313 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter312, align 8
  %struct_getter314 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult313, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter314, align 8
  %array_getter318 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %mult319 = load i128, i128* %array_getter318, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult319, i128 %first309, i1* @constraint.864)
  %ptr_getter320 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter322 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter320, i128 0, i128 %curid.0
  %mult323 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter322, align 8
  %struct_getter324 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult323, i32 0, i32 4
  %fp12multiply.b.read_input_outter325 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter324, align 8
  %mult329 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter325, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  store i128 %first309, i128* %mult329, align 4
  br label %loop.latch330

loop.latch330:                                    ; preds = %loop.body303
  %add332 = add i128 %j.5, 1
  %slt335 = icmp slt i128 %add332, %fp12exp.k.read_arg_inner
  br i1 %slt335, label %loop.body303, label %loop.exit336

loop.exit336:                                     ; preds = %loop.latch330
  br label %loop.latch337

loop.latch337:                                    ; preds = %loop.exit336
  %add339 = add i128 %eps.5, 1
  %slt341 = icmp slt i128 %add339, 2
  br i1 %slt341, label %loop.body302, label %loop.exit342

loop.exit342:                                     ; preds = %loop.latch337
  br label %loop.latch343

loop.latch343:                                    ; preds = %loop.exit342
  %add345 = add i128 %id.5, 1
  %slt347 = icmp slt i128 %add345, 6
  br i1 %slt347, label %loop.body301, label %loop.exit348

loop.exit348:                                     ; preds = %loop.latch343
  br label %if.exit403

loop.body349:                                     ; preds = %loop.latch397, %if.false298
  %id.6 = phi i128 [ 0, %if.false298 ], [ %add399, %loop.latch397 ]
  br label %loop.body350

loop.body350:                                     ; preds = %loop.latch391, %loop.body349
  %eps.6 = phi i128 [ 0, %loop.body349 ], [ %add393, %loop.latch391 ]
  br label %loop.body351

loop.body351:                                     ; preds = %loop.latch384, %loop.body350
  %j.6 = phi i128 [ 0, %loop.body350 ], [ %add386, %loop.latch384 ]
  %mult352 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %sub354 = sub i128 %curid.0, 1
  %array_getter355 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult352, i128 0, i128 %sub354
  %mult356 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter355, align 8
  %struct_getter357 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult356, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter357, align 8
  %array_getter361 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  %mult362 = load i128, i128* %array_getter361, align 4
  %mult363 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter365 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult363, i128 0, i128 %curid.0
  %mult366 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter365, align 8
  %struct_getter367 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult366, i32 0, i32 4
  %fp12multiply.b.read_input_outter368 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter367, align 8
  %array_getter372 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter368, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  %mult373 = load i128, i128* %array_getter372, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult373, i128 %mult362, i1* @constraint.865)
  %ptr_getter374 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter376 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter374, i128 0, i128 %curid.0
  %mult377 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter376, align 8
  %struct_getter378 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult377, i32 0, i32 4
  %fp12multiply.b.read_input_outter379 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter378, align 8
  %mult383 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter379, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  store i128 %mult362, i128* %mult383, align 4
  br label %loop.latch384

loop.latch384:                                    ; preds = %loop.body351
  %add386 = add i128 %j.6, 1
  %slt389 = icmp slt i128 %add386, %fp12exp.k.read_arg_inner
  br i1 %slt389, label %loop.body351, label %loop.exit390

loop.exit390:                                     ; preds = %loop.latch384
  br label %loop.latch391

loop.latch391:                                    ; preds = %loop.exit390
  %add393 = add i128 %eps.6, 1
  %slt395 = icmp slt i128 %add393, 2
  br i1 %slt395, label %loop.body350, label %loop.exit396

loop.exit396:                                     ; preds = %loop.latch391
  br label %loop.latch397

loop.latch397:                                    ; preds = %loop.exit396
  %add399 = add i128 %id.6, 1
  %slt401 = icmp slt i128 %add399, 6
  br i1 %slt401, label %loop.body349, label %loop.exit402

loop.exit402:                                     ; preds = %loop.latch397
  br label %if.exit403

if.exit403:                                       ; preds = %loop.exit402, %loop.exit348
  br label %if.exit404

if.exit404:                                       ; preds = %if.exit403, %if.exit236
  %add406 = add i128 %curid.0, 1
  br label %if.exit407

if.exit407:                                       ; preds = %if.exit404, %if.false140
  %curid.1 = phi i128 [ %add406, %if.exit404 ], [ %curid.0, %if.false140 ]
  br label %loop.latch408

loop.latch408:                                    ; preds = %if.exit407
  %add410 = add i128 %i.1, 1
  %slt413 = icmp slt i128 %add410, %add23
  br i1 %slt413, label %loop.body27, label %loop.exit414

loop.exit414:                                     ; preds = %loop.latch408
  %sub416 = sub i128 %curid.1, 1
  %eq420 = icmp eq i128 %sub416, 0
  br i1 %eq420, label %if.true417, label %if.false418

if.true417:                                       ; preds = %loop.exit414
  br label %loop.body421

if.false418:                                      ; preds = %loop.exit414
  br label %loop.body460

loop.body421:                                     ; preds = %loop.latch454, %if.true417
  %id.7 = phi i128 [ 0, %if.true417 ], [ %add456, %loop.latch454 ]
  br label %loop.body422

loop.body422:                                     ; preds = %loop.latch448, %loop.body421
  %eps.7 = phi i128 [ 0, %loop.body421 ], [ %add450, %loop.latch448 ]
  br label %loop.body423

loop.body423:                                     ; preds = %loop.latch441, %loop.body422
  %j.7 = phi i128 [ 0, %loop.body422 ], [ %add443, %loop.latch441 ]
  %first424 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %array_getter428 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first424, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  %first429 = load i128, i128* %array_getter428, align 4
  %out430 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output, align 8
  %array_getter434 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out430, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  %out435 = load i128, i128* %array_getter434, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out435, i128 %first429, i1* @constraint.866)
  %ptr_getter436 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output, align 8
  %out440 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter436, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  store i128 %first429, i128* %out440, align 4
  br label %loop.latch441

loop.latch441:                                    ; preds = %loop.body423
  %add443 = add i128 %j.7, 1
  %slt446 = icmp slt i128 %add443, %fp12exp.k.read_arg_inner
  br i1 %slt446, label %loop.body423, label %loop.exit447

loop.exit447:                                     ; preds = %loop.latch441
  br label %loop.latch448

loop.latch448:                                    ; preds = %loop.exit447
  %add450 = add i128 %eps.7, 1
  %slt452 = icmp slt i128 %add450, 2
  br i1 %slt452, label %loop.body422, label %loop.exit453

loop.exit453:                                     ; preds = %loop.latch448
  br label %loop.latch454

loop.latch454:                                    ; preds = %loop.exit453
  %add456 = add i128 %id.7, 1
  %slt458 = icmp slt i128 %add456, 6
  br i1 %slt458, label %loop.body421, label %loop.exit459

loop.exit459:                                     ; preds = %loop.latch454
  br label %if.exit504

loop.body460:                                     ; preds = %loop.latch498, %if.false418
  %id.8 = phi i128 [ 0, %if.false418 ], [ %add500, %loop.latch498 ]
  br label %loop.body461

loop.body461:                                     ; preds = %loop.latch492, %loop.body460
  %eps.8 = phi i128 [ 0, %loop.body460 ], [ %add494, %loop.latch492 ]
  br label %loop.body462

loop.body462:                                     ; preds = %loop.latch485, %loop.body461
  %j.8 = phi i128 [ 0, %loop.body461 ], [ %add487, %loop.latch485 ]
  %mult463 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter465 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult463, i128 0, i128 %sub416
  %mult466 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter465, align 8
  %struct_getter467 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult466, i32 0, i32 5
  %fp12multiply.out.read_output_outter468 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter467, align 8
  %array_getter472 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter468, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  %mult473 = load i128, i128* %array_getter472, align 4
  %out474 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output, align 8
  %array_getter478 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out474, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  %out479 = load i128, i128* %array_getter478, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out479, i128 %mult473, i1* @constraint.867)
  %ptr_getter480 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output, align 8
  %out484 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter480, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  store i128 %mult473, i128* %out484, align 4
  br label %loop.latch485

loop.latch485:                                    ; preds = %loop.body462
  %add487 = add i128 %j.8, 1
  %slt490 = icmp slt i128 %add487, %fp12exp.k.read_arg_inner
  br i1 %slt490, label %loop.body462, label %loop.exit491

loop.exit491:                                     ; preds = %loop.latch485
  br label %loop.latch492

loop.latch492:                                    ; preds = %loop.exit491
  %add494 = add i128 %eps.8, 1
  %slt496 = icmp slt i128 %add494, 2
  br i1 %slt496, label %loop.body461, label %loop.exit497

loop.exit497:                                     ; preds = %loop.latch492
  br label %loop.latch498

loop.latch498:                                    ; preds = %loop.exit497
  %add500 = add i128 %id.8, 1
  %slt502 = icmp slt i128 %add500, 6
  br i1 %slt502, label %loop.body460, label %loop.exit503

loop.exit503:                                     ; preds = %loop.latch498
  br label %if.exit504

if.exit504:                                       ; preds = %loop.exit503, %loop.exit459
  br label %arraydim

arraydim:                                         ; preds = %if.exit504
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %fp12exp.k.read_arg_inner)
  %ptr_cast505 = bitcast [256 x %struct_template_circuit_fp12square*]** %pow2 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast505, i128 %add23)
  %ptr_cast506 = bitcast [256 x [256 x [256 x i128]]]** %fp12exp.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast506, i128 6, i128 2, i128 %fp12exp.k.read_arg_inner)
  %ptr_cast507 = bitcast [256 x %struct_template_circuit_fp12multiply*]** %mult to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast507, i128 %add23)
  %ptr_cast508 = bitcast [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast508, i128 6, i128 2, i128 %fp12exp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %first509 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.first.declare_inter, align 8
  %fp12exp.first.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %first509, [256 x [256 x [256 x i128]]]** %fp12exp.first.write_inter_inner, align 8
  %out510 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12exp.out.declare_output, align 8
  %fp12exp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out510, [256 x [256 x [256 x i128]]]** %fp12exp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12exp* @fn_template_build_fp12exp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_fp12exp = alloca %struct_template_circuit_fp12exp, align 8
  %fp12exp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 0
  store i128 %0, i128* %fp12exp.n.write_arg_inner, align 4
  %fp12exp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 1
  store i128 %1, i128* %fp12exp.k.write_arg_inner, align 4
  %fp12exp.e.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 2
  store i128 %2, i128* %fp12exp.e.write_arg_inner, align 4
  %fp12exp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp12exp.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp
}

define void @fn_template_init_millerloopfp2two(%struct_template_circuit_millerloopfp2two* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 0
  %millerloopfp2two.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 1
  %millerloopfp2two.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 2
  %millerloopfp2two.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 3
  %millerloopfp2two.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 4
  %millerloopfp2two.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 5
  %millerloopfp2two.p.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter5, align 8
  %millerloopfp2two.p.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %millerloopfp2two.p.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.p.declare_input, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 6
  %millerloopfp2two.q.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter6, align 8
  %millerloopfp2two.q.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %millerloopfp2two.q.read_input_inner, [256 x [256 x [256 x i128]]]** %millerloopfp2two.q.declare_input, align 8
  %XI07 = call i128 @fn_intrinsic_utils_init()
  %millerloopfp2two.r.declare_inter = alloca [256 x [256 x [256 x [256 x [256 x i128]]]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x [256 x i128]]]]]* getelementptr ([256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall to [256 x [256 x [256 x [256 x [256 x i128]]]]]*
  store [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %fdouble_0 = alloca [256 x %struct_template_circuit_signedfp12carrymodp*]*, align 8
  %fdouble_08 = alloca [256 x %struct_template_circuit_signedfp12carrymodp*], align 8
  store [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble_08, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble_0, align 8
  %Bits = alloca [256 x i128]*, align 8
  %Bits9 = alloca [256 x i128], align 8
  store [256 x i128]* %Bits9, [256 x i128]** %Bits, align 8
  %line = alloca [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, align 8
  %line10 = alloca [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], align 8
  store [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %line10, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %millerloopfp2two.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall11 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %millerloopfp2two.out.declare_output, align 8
  %LOGK312 = call i128 @fn_intrinsic_utils_init()
  %Pdouble = alloca [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, align 8
  %Pdouble13 = alloca [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], align 8
  store [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %Pdouble13, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %compress = alloca [256 x %struct_template_circuit_fp12compress*]*, align 8
  %compress14 = alloca [256 x %struct_template_circuit_fp12compress*], align 8
  store [256 x %struct_template_circuit_fp12compress*]* %compress14, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %idP15 = call i128 @fn_intrinsic_utils_init()
  %square = alloca [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, align 8
  %square16 = alloca [256 x %struct_template_circuit_signedfp12multiplynocarry*], align 8
  store [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square16, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %LOGK17 = call i128 @fn_intrinsic_utils_init()
  %LOGK218 = call i128 @fn_intrinsic_utils_init()
  %BitLength19 = call i128 @fn_intrinsic_utils_init()
  %Padd = alloca [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, align 8
  %Padd20 = alloca [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], align 8
  store [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %Padd20, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %millerloopfp2two.f.declare_inter = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  %malloccall21 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %f = bitcast i8* %malloccall21 to [256 x [256 x [256 x [256 x i128]]]]*
  store [256 x [256 x [256 x [256 x i128]]]]* %f, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %SigBits22 = call i128 @fn_intrinsic_utils_init()
  %fadd = alloca [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, align 8
  %fadd23 = alloca [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], align 8
  store [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd23, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %curid24 = call i128 @fn_intrinsic_utils_init()
  %l25 = call i128 @fn_intrinsic_utils_init()
  %idx26 = call i128 @fn_intrinsic_utils_init()
  %j27 = call i128 @fn_intrinsic_utils_init()
  %fdouble = alloca [256 x %struct_template_circuit_fp12multiply*]*, align 8
  %fdouble28 = alloca [256 x %struct_template_circuit_fp12multiply*], align 8
  store [256 x %struct_template_circuit_fp12multiply*]* %fdouble28, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %nocarry = alloca [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, align 8
  %nocarry29 = alloca [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], align 8
  store [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry29, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %i30 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @log_ceil(i128 %millerloopfp2two.k.read_arg_inner)
  %add = add i128 2, 1
  %mul = mul i128 36, %add
  %add36 = add i128 2, 1
  %mul37 = mul i128 %mul, %add36
  %mul39 = mul i128 %mul37, %millerloopfp2two.k.read_arg_inner
  %mul41 = mul i128 %mul39, %millerloopfp2two.k.read_arg_inner
  %call42 = call i128 @log_ceil(i128 %mul41)
  %add44 = add i128 2, 1
  %mul45 = mul i128 36, %add44
  %add47 = add i128 2, 1
  %mul48 = mul i128 %mul45, %add47
  %mul50 = mul i128 %mul48, %millerloopfp2two.k.read_arg_inner
  %mul52 = mul i128 %mul50, %millerloopfp2two.k.read_arg_inner
  %mul54 = mul i128 2, %millerloopfp2two.k.read_arg_inner
  %sub = sub i128 %mul54, 1
  %mul55 = mul i128 %mul52, %sub
  %call56 = call i128 @log_ceil(i128 %mul55)
  %mul57 = mul i128 4, %millerloopfp2two.n.read_arg_inner
  %add59 = add i128 %mul57, %call56
  %slt = icmp slt i128 %add59, 251
  call void @fn_intrinsic_utils_assert(i1 %slt)
  %uniform_array = alloca [256 x i128], align 8
  store [256 x i128]* %uniform_array, [256 x i128]** %Bits, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add71, %loop.latch ]
  %rshift = lshr i128 %millerloopfp2two.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %ptr_getter = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %Bits62 = getelementptr inbounds [256 x i128], [256 x i128]* %ptr_getter, i128 0, i128 %i.0
  store i128 %and, i128* %Bits62, align 4
  %Bits63 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %Bits63, i128 0, i128 %i.0
  %Bits65 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits65, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add67 = add i128 %SigBits.0, 1
  %add69 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add69, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add67, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add71 = add i128 %i.0, 1
  %slt73 = icmp slt i128 %add71, 250
  br i1 %slt73, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub88 = sub i128 %BitLength.1, 1
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch1325, %loop.exit
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch1325 ]
  %i.1 = phi i128 [ %sub88, %loop.exit ], [ %sub1327, %loop.latch1325 ]
  %sub94 = sub i128 %BitLength.1, 1
  %eq95 = icmp eq i128 %i.1, %sub94
  br i1 %eq95, label %if.true90, label %if.false91

if.true90:                                        ; preds = %loop.body89
  br label %loop.body96

if.false91:                                       ; preds = %loop.body89
  %mul208 = mul i128 2, %millerloopfp2two.n.read_arg_inner
  %add209 = add i128 %mul208, 4
  %add211 = add i128 %add209, %call
  %call212 = call %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, i128 %add211)
  %ptr_getter213 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %square215 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter213, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12multiplynocarry* %call212, %struct_template_circuit_signedfp12multiplynocarry** %square215, align 8
  br label %loop.body216

loop.body96:                                      ; preds = %loop.latch149, %if.true90
  %l.0 = phi i128 [ 0, %if.true90 ], [ %add151, %loop.latch149 ]
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch143, %loop.body96
  %j.0 = phi i128 [ 0, %loop.body96 ], [ %add145, %loop.latch143 ]
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch136, %loop.body97
  %idx.0 = phi i128 [ 0, %loop.body97 ], [ %add138, %loop.latch136 ]
  %eq102 = icmp eq i128 %l.0, 0
  %eq104 = icmp eq i128 %j.0, 0
  %and105 = and i1 %eq102, %eq104
  %eq107 = icmp eq i128 %idx.0, 0
  %and108 = and i1 %and105, %eq107
  br i1 %and108, label %if.true99, label %if.false100

if.true99:                                        ; preds = %loop.body98
  %f109 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %array_getter114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f109, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  %f115 = load i128, i128* %array_getter114, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f115, i128 1, i1* @constraint.868)
  %ptr_getter116 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %f121 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter116, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  store i128 1, i128* %f121, align 4
  br label %if.exit135

if.false100:                                      ; preds = %loop.body98
  %f122 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f122, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  %f128 = load i128, i128* %array_getter127, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f128, i128 0, i1* @constraint.869)
  %ptr_getter129 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %f134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter129, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.0
  store i128 0, i128* %f134, align 4
  br label %if.exit135

if.exit135:                                       ; preds = %if.false100, %if.true99
  br label %loop.latch136

loop.latch136:                                    ; preds = %if.exit135
  %add138 = add i128 %idx.0, 1
  %slt141 = icmp slt i128 %add138, %millerloopfp2two.k.read_arg_inner
  br i1 %slt141, label %loop.body98, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %j.0, 1
  %slt147 = icmp slt i128 %add145, 2
  br i1 %slt147, label %loop.body97, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %loop.latch149

loop.latch149:                                    ; preds = %loop.exit148
  %add151 = add i128 %l.0, 1
  %slt153 = icmp slt i128 %add151, 6
  br i1 %slt153, label %loop.body96, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch149
  br label %loop.body155

loop.body155:                                     ; preds = %loop.latch199, %loop.exit154
  %idP.0 = phi i128 [ 0, %loop.exit154 ], [ %add201, %loop.latch199 ]
  br label %loop.body156

loop.body156:                                     ; preds = %loop.latch193, %loop.body155
  %j.1 = phi i128 [ 0, %loop.body155 ], [ %add195, %loop.latch193 ]
  br label %loop.body157

loop.body157:                                     ; preds = %loop.latch186, %loop.body156
  %idx.1 = phi i128 [ 0, %loop.body156 ], [ %add188, %loop.latch186 ]
  br label %loop.body158

loop.body158:                                     ; preds = %loop.latch180, %loop.body157
  %l.1 = phi i128 [ 0, %loop.body157 ], [ %add182, %loop.latch180 ]
  %P = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.p.declare_input, align 8
  %array_getter163 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P, i128 0, i128 %idP.0, i128 %j.1, i128 %l.1, i128 %idx.1
  %P164 = load i128, i128* %array_getter163, align 4
  %R165 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R165, i128 0, i128 %i.1, i128 %idP.0, i128 %j.1, i128 %l.1, i128 %idx.1
  %R172 = load i128, i128* %array_getter171, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R172, i128 %P164, i1* @constraint.870)
  %ptr_getter173 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %R179 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %ptr_getter173, i128 0, i128 %i.1, i128 %idP.0, i128 %j.1, i128 %l.1, i128 %idx.1
  store i128 %P164, i128* %R179, align 4
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.body158
  %add182 = add i128 %l.1, 1
  %slt184 = icmp slt i128 %add182, 2
  br i1 %slt184, label %loop.body158, label %loop.exit185

loop.exit185:                                     ; preds = %loop.latch180
  br label %loop.latch186

loop.latch186:                                    ; preds = %loop.exit185
  %add188 = add i128 %idx.1, 1
  %slt191 = icmp slt i128 %add188, %millerloopfp2two.k.read_arg_inner
  br i1 %slt191, label %loop.body157, label %loop.exit192

loop.exit192:                                     ; preds = %loop.latch186
  br label %loop.latch193

loop.latch193:                                    ; preds = %loop.exit192
  %add195 = add i128 %j.1, 1
  %slt197 = icmp slt i128 %add195, 2
  br i1 %slt197, label %loop.body156, label %loop.exit198

loop.exit198:                                     ; preds = %loop.latch193
  br label %loop.latch199

loop.latch199:                                    ; preds = %loop.exit198
  %add201 = add i128 %idP.0, 1
  %slt203 = icmp slt i128 %add201, 2
  br i1 %slt203, label %loop.body155, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch199
  br label %if.exit1324

loop.body216:                                     ; preds = %loop.latch288, %if.false91
  %l.2 = phi i128 [ 0, %if.false91 ], [ %add290, %loop.latch288 ]
  br label %loop.body217

loop.body217:                                     ; preds = %loop.latch282, %loop.body216
  %j.2 = phi i128 [ 0, %loop.body216 ], [ %add284, %loop.latch282 ]
  br label %loop.body218

loop.body218:                                     ; preds = %loop.latch275, %loop.body217
  %idx.2 = phi i128 [ 0, %loop.body217 ], [ %add277, %loop.latch275 ]
  %f219 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %add221 = add i128 %i.1, 1
  %array_getter225 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f219, i128 0, i128 %add221, i128 %l.2, i128 %j.2, i128 %idx.2
  %f226 = load i128, i128* %array_getter225, align 4
  %square227 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter229 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square227, i128 0, i128 %i.1
  %square230 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter229, align 8
  %struct_getter231 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square230, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter231, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  %square236 = load i128, i128* %array_getter235, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square236, i128 %f226, i1* @constraint.871)
  %ptr_getter237 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter239 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter237, i128 0, i128 %i.1
  %square240 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter239, align 8
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square240, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter242 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter241, align 8
  %square246 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter242, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  store i128 %f226, i128* %square246, align 4
  %f247 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %add249 = add i128 %i.1, 1
  %array_getter253 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f247, i128 0, i128 %add249, i128 %l.2, i128 %j.2, i128 %idx.2
  %f254 = load i128, i128* %array_getter253, align 4
  %square255 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter257 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square255, i128 0, i128 %i.1
  %square258 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter257, align 8
  %struct_getter259 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square258, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter259, align 8
  %array_getter263 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  %square264 = load i128, i128* %array_getter263, align 4
  call void @fn_intrinsic_utils_constraint(i128 %square264, i128 %f254, i1* @constraint.872)
  %ptr_getter265 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter267 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %ptr_getter265, i128 0, i128 %i.1
  %square268 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter267, align 8
  %struct_getter269 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square268, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter270 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter269, align 8
  %square274 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter270, i128 0, i128 %l.2, i128 %j.2, i128 %idx.2
  store i128 %f254, i128* %square274, align 4
  br label %loop.latch275

loop.latch275:                                    ; preds = %loop.body218
  %add277 = add i128 %idx.2, 1
  %slt280 = icmp slt i128 %add277, %millerloopfp2two.k.read_arg_inner
  br i1 %slt280, label %loop.body218, label %loop.exit281

loop.exit281:                                     ; preds = %loop.latch275
  br label %loop.latch282

loop.latch282:                                    ; preds = %loop.exit281
  %add284 = add i128 %j.2, 1
  %slt286 = icmp slt i128 %add284, 2
  br i1 %slt286, label %loop.body217, label %loop.exit287

loop.exit287:                                     ; preds = %loop.latch282
  br label %loop.latch288

loop.latch288:                                    ; preds = %loop.exit287
  %add290 = add i128 %l.2, 1
  %slt292 = icmp slt i128 %add290, 6
  br i1 %slt292, label %loop.body216, label %loop.exit293

loop.exit293:                                     ; preds = %loop.latch288
  br label %loop.body294

loop.body294:                                     ; preds = %loop.latch456, %loop.exit293
  %idP.1 = phi i128 [ 0, %loop.exit293 ], [ %add458, %loop.latch456 ]
  %call297 = call %struct_template_circuit_linefunctionequalfp2* @fn_template_build_linefunctionequalfp2(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, [256 x i128]* %millerloopfp2two.q.read_arg_inner)
  %ptr_getter298 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %line301 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %ptr_getter298, i128 0, i128 %i.1, i128 %idP.1
  store %struct_template_circuit_linefunctionequalfp2* %call297, %struct_template_circuit_linefunctionequalfp2** %line301, align 8
  br label %loop.body302

loop.body302:                                     ; preds = %loop.latch349, %loop.body294
  %j.3 = phi i128 [ 0, %loop.body294 ], [ %add351, %loop.latch349 ]
  br label %loop.body303

loop.body303:                                     ; preds = %loop.latch342, %loop.body302
  %idx.3 = phi i128 [ 0, %loop.body302 ], [ %add344, %loop.latch342 ]
  br label %loop.body304

loop.body304:                                     ; preds = %loop.latch336, %loop.body303
  %l.3 = phi i128 [ 0, %loop.body303 ], [ %add338, %loop.latch336 ]
  %R305 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %add307 = add i128 %i.1, 1
  %array_getter312 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R305, i128 0, i128 %add307, i128 %idP.1, i128 %j.3, i128 %l.3, i128 %idx.3
  %R313 = load i128, i128* %array_getter312, align 4
  %line314 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %array_getter317 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %line314, i128 0, i128 %i.1, i128 %idP.1
  %line318 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter317, align 8
  %struct_getter319 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line318, i32 0, i32 3
  %linefunctionequalfp2.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter319, align 8
  %array_getter323 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.p.read_input_outter, i128 0, i128 %j.3, i128 %l.3, i128 %idx.3
  %line324 = load i128, i128* %array_getter323, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line324, i128 %R313, i1* @constraint.873)
  %ptr_getter325 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %array_getter328 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %ptr_getter325, i128 0, i128 %i.1, i128 %idP.1
  %line329 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter328, align 8
  %struct_getter330 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line329, i32 0, i32 3
  %linefunctionequalfp2.p.read_input_outter331 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter330, align 8
  %line335 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.p.read_input_outter331, i128 0, i128 %j.3, i128 %l.3, i128 %idx.3
  store i128 %R313, i128* %line335, align 4
  br label %loop.latch336

loop.latch336:                                    ; preds = %loop.body304
  %add338 = add i128 %l.3, 1
  %slt340 = icmp slt i128 %add338, 2
  br i1 %slt340, label %loop.body304, label %loop.exit341

loop.exit341:                                     ; preds = %loop.latch336
  br label %loop.latch342

loop.latch342:                                    ; preds = %loop.exit341
  %add344 = add i128 %idx.3, 1
  %slt347 = icmp slt i128 %add344, %millerloopfp2two.k.read_arg_inner
  br i1 %slt347, label %loop.body303, label %loop.exit348

loop.exit348:                                     ; preds = %loop.latch342
  br label %loop.latch349

loop.latch349:                                    ; preds = %loop.exit348
  %add351 = add i128 %j.3, 1
  %slt353 = icmp slt i128 %add351, 2
  br i1 %slt353, label %loop.body302, label %loop.exit354

loop.exit354:                                     ; preds = %loop.latch349
  br label %loop.body355

loop.body355:                                     ; preds = %loop.latch389, %loop.exit354
  %j.4 = phi i128 [ 0, %loop.exit354 ], [ %add391, %loop.latch389 ]
  br label %loop.body356

loop.body356:                                     ; preds = %loop.latch382, %loop.body355
  %idx.4 = phi i128 [ 0, %loop.body355 ], [ %add384, %loop.latch382 ]
  %Q = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2two.q.declare_input, align 8
  %array_getter360 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Q, i128 0, i128 %idP.1, i128 %j.4, i128 %idx.4
  %Q361 = load i128, i128* %array_getter360, align 4
  %line362 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %array_getter365 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %line362, i128 0, i128 %i.1, i128 %idP.1
  %line366 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter365, align 8
  %struct_getter367 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line366, i32 0, i32 4
  %linefunctionequalfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter367, align 8
  %array_getter370 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %linefunctionequalfp2.q.read_input_outter, i128 0, i128 %j.4, i128 %idx.4
  %line371 = load i128, i128* %array_getter370, align 4
  call void @fn_intrinsic_utils_constraint(i128 %line371, i128 %Q361, i1* @constraint.874)
  %ptr_getter372 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %array_getter375 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %ptr_getter372, i128 0, i128 %i.1, i128 %idP.1
  %line376 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter375, align 8
  %struct_getter377 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line376, i32 0, i32 4
  %linefunctionequalfp2.q.read_input_outter378 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter377, align 8
  %line381 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %linefunctionequalfp2.q.read_input_outter378, i128 0, i128 %j.4, i128 %idx.4
  store i128 %Q361, i128* %line381, align 4
  br label %loop.latch382

loop.latch382:                                    ; preds = %loop.body356
  %add384 = add i128 %idx.4, 1
  %slt387 = icmp slt i128 %add384, %millerloopfp2two.k.read_arg_inner
  br i1 %slt387, label %loop.body356, label %loop.exit388

loop.exit388:                                     ; preds = %loop.latch382
  br label %loop.latch389

loop.latch389:                                    ; preds = %loop.exit388
  %add391 = add i128 %j.4, 1
  %slt393 = icmp slt i128 %add391, 2
  br i1 %slt393, label %loop.body355, label %loop.exit394

loop.exit394:                                     ; preds = %loop.latch389
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array, align 4
  %call398 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, [256 x i128]* %const_inline_array, [256 x i128]* %millerloopfp2two.b.read_arg_inner, [256 x i128]* %millerloopfp2two.q.read_arg_inner)
  %ptr_getter399 = load [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %Pdouble402 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %ptr_getter399, i128 0, i128 %i.1, i128 %idP.1
  store %struct_template_circuit_ellipticcurvedoublefp2* %call398, %struct_template_circuit_ellipticcurvedoublefp2** %Pdouble402, align 8
  br label %loop.body403

loop.body403:                                     ; preds = %loop.latch450, %loop.exit394
  %j.5 = phi i128 [ 0, %loop.exit394 ], [ %add452, %loop.latch450 ]
  br label %loop.body404

loop.body404:                                     ; preds = %loop.latch443, %loop.body403
  %idx.5 = phi i128 [ 0, %loop.body403 ], [ %add445, %loop.latch443 ]
  br label %loop.body405

loop.body405:                                     ; preds = %loop.latch437, %loop.body404
  %l.4 = phi i128 [ 0, %loop.body404 ], [ %add439, %loop.latch437 ]
  %R406 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %add408 = add i128 %i.1, 1
  %array_getter413 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R406, i128 0, i128 %add408, i128 %idP.1, i128 %j.5, i128 %l.4, i128 %idx.5
  %R414 = load i128, i128* %array_getter413, align 4
  %Pdouble415 = load [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %array_getter418 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %Pdouble415, i128 0, i128 %i.1, i128 %idP.1
  %Pdouble419 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter418, align 8
  %struct_getter420 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble419, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter420, align 8
  %array_getter424 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %j.5, i128 %l.4, i128 %idx.5
  %Pdouble425 = load i128, i128* %array_getter424, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Pdouble425, i128 %R414, i1* @constraint.875)
  %ptr_getter426 = load [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %array_getter429 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %ptr_getter426, i128 0, i128 %i.1, i128 %idP.1
  %Pdouble430 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter429, align 8
  %struct_getter431 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble430, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter432 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter431, align 8
  %Pdouble436 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter432, i128 0, i128 %j.5, i128 %l.4, i128 %idx.5
  store i128 %R414, i128* %Pdouble436, align 4
  br label %loop.latch437

loop.latch437:                                    ; preds = %loop.body405
  %add439 = add i128 %l.4, 1
  %slt441 = icmp slt i128 %add439, 2
  br i1 %slt441, label %loop.body405, label %loop.exit442

loop.exit442:                                     ; preds = %loop.latch437
  br label %loop.latch443

loop.latch443:                                    ; preds = %loop.exit442
  %add445 = add i128 %idx.5, 1
  %slt448 = icmp slt i128 %add445, %millerloopfp2two.k.read_arg_inner
  br i1 %slt448, label %loop.body404, label %loop.exit449

loop.exit449:                                     ; preds = %loop.latch443
  br label %loop.latch450

loop.latch450:                                    ; preds = %loop.exit449
  %add452 = add i128 %j.5, 1
  %slt454 = icmp slt i128 %add452, 2
  br i1 %slt454, label %loop.body403, label %loop.exit455

loop.exit455:                                     ; preds = %loop.latch450
  br label %loop.latch456

loop.latch456:                                    ; preds = %loop.exit455
  %add458 = add i128 %idP.1, 1
  %slt460 = icmp slt i128 %add458, 2
  br i1 %slt460, label %loop.body294, label %loop.exit461

loop.exit461:                                     ; preds = %loop.latch456
  %mul464 = mul i128 2, %millerloopfp2two.k.read_arg_inner
  %sub465 = sub i128 %mul464, 1
  %mul468 = mul i128 3, %millerloopfp2two.n.read_arg_inner
  %add470 = add i128 %mul468, %call42
  %call471 = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %millerloopfp2two.n.read_arg_inner, i128 %sub465, i128 %millerloopfp2two.k.read_arg_inner, i128 %add470)
  %ptr_getter472 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %nocarry474 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter472, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12multiplynocarryunequal* %call471, %struct_template_circuit_signedfp12multiplynocarryunequal** %nocarry474, align 8
  br label %loop.body475

loop.body475:                                     ; preds = %loop.latch561, %loop.exit461
  %l.5 = phi i128 [ 0, %loop.exit461 ], [ %add563, %loop.latch561 ]
  br label %loop.body476

loop.body476:                                     ; preds = %loop.latch555, %loop.body475
  %j.6 = phi i128 [ 0, %loop.body475 ], [ %add557, %loop.latch555 ]
  br label %loop.body477

loop.body477:                                     ; preds = %loop.latch508, %loop.body476
  %idx.6 = phi i128 [ 0, %loop.body476 ], [ %add510, %loop.latch508 ]
  %square478 = load [256 x %struct_template_circuit_signedfp12multiplynocarry*]*, [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square, align 8
  %array_getter480 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarry*], [256 x %struct_template_circuit_signedfp12multiplynocarry*]* %square478, i128 0, i128 %i.1
  %square481 = load %struct_template_circuit_signedfp12multiplynocarry*, %struct_template_circuit_signedfp12multiplynocarry** %array_getter480, align 8
  %struct_getter482 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %square481, i32 0, i32 5
  %signedfp12multiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter482, align 8
  %array_getter486 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.out.read_output_outter, i128 0, i128 %l.5, i128 %j.6, i128 %idx.6
  %square487 = load i128, i128* %array_getter486, align 4
  %nocarry488 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter490 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry488, i128 0, i128 %i.1
  %nocarry491 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter490, align 8
  %struct_getter492 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry491, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter492, align 8
  %array_getter496 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %l.5, i128 %j.6, i128 %idx.6
  %nocarry497 = load i128, i128* %array_getter496, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry497, i128 %square487, i1* @constraint.876)
  %ptr_getter498 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter500 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter498, i128 0, i128 %i.1
  %nocarry501 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter500, align 8
  %struct_getter502 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry501, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter503 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter502, align 8
  %nocarry507 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter503, i128 0, i128 %l.5, i128 %j.6, i128 %idx.6
  store i128 %square487, i128* %nocarry507, align 4
  br label %loop.latch508

loop.latch508:                                    ; preds = %loop.body477
  %add510 = add i128 %idx.6, 1
  %mul513 = mul i128 2, %millerloopfp2two.k.read_arg_inner
  %sub514 = sub i128 %mul513, 1
  %slt515 = icmp slt i128 %add510, %sub514
  br i1 %slt515, label %loop.body477, label %loop.exit516

loop.exit516:                                     ; preds = %loop.latch508
  br label %loop.body517

loop.body517:                                     ; preds = %loop.latch548, %loop.exit516
  %idx.7 = phi i128 [ 0, %loop.exit516 ], [ %add550, %loop.latch548 ]
  %line518 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %array_getter520 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %line518, i128 0, i128 %i.1, i128 0
  %line521 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter520, align 8
  %struct_getter522 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line521, i32 0, i32 5
  %linefunctionequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter522, align 8
  %array_getter526 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.out.read_output_outter, i128 0, i128 %l.5, i128 %j.6, i128 %idx.7
  %line527 = load i128, i128* %array_getter526, align 4
  %nocarry528 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter530 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry528, i128 0, i128 %i.1
  %nocarry531 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter530, align 8
  %struct_getter532 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry531, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter532, align 8
  %array_getter536 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %l.5, i128 %j.6, i128 %idx.7
  %nocarry537 = load i128, i128* %array_getter536, align 4
  call void @fn_intrinsic_utils_constraint(i128 %nocarry537, i128 %line527, i1* @constraint.877)
  %ptr_getter538 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter540 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %ptr_getter538, i128 0, i128 %i.1
  %nocarry541 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter540, align 8
  %struct_getter542 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry541, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter543 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter542, align 8
  %nocarry547 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter543, i128 0, i128 %l.5, i128 %j.6, i128 %idx.7
  store i128 %line527, i128* %nocarry547, align 4
  br label %loop.latch548

loop.latch548:                                    ; preds = %loop.body517
  %add550 = add i128 %idx.7, 1
  %slt553 = icmp slt i128 %add550, %millerloopfp2two.k.read_arg_inner
  br i1 %slt553, label %loop.body517, label %loop.exit554

loop.exit554:                                     ; preds = %loop.latch548
  br label %loop.latch555

loop.latch555:                                    ; preds = %loop.exit554
  %add557 = add i128 %j.6, 1
  %slt559 = icmp slt i128 %add557, 2
  br i1 %slt559, label %loop.body476, label %loop.exit560

loop.exit560:                                     ; preds = %loop.latch555
  br label %loop.latch561

loop.latch561:                                    ; preds = %loop.exit560
  %add563 = add i128 %l.5, 1
  %slt565 = icmp slt i128 %add563, 6
  br i1 %slt565, label %loop.body475, label %loop.exit566

loop.exit566:                                     ; preds = %loop.latch561
  %mul570 = mul i128 2, %millerloopfp2two.k.read_arg_inner
  %sub571 = sub i128 %mul570, 2
  %mul574 = mul i128 4, %millerloopfp2two.n.read_arg_inner
  %add576 = add i128 %mul574, %call56
  %call577 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, i128 %sub571, [256 x i128]* %millerloopfp2two.q.read_arg_inner, i128 %add576)
  %ptr_getter578 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %compress580 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %ptr_getter578, i128 0, i128 %i.1
  store %struct_template_circuit_fp12compress* %call577, %struct_template_circuit_fp12compress** %compress580, align 8
  br label %loop.body581

loop.body581:                                     ; preds = %loop.latch629, %loop.exit566
  %l.6 = phi i128 [ 0, %loop.exit566 ], [ %add631, %loop.latch629 ]
  br label %loop.body582

loop.body582:                                     ; preds = %loop.latch623, %loop.body581
  %j.7 = phi i128 [ 0, %loop.body581 ], [ %add625, %loop.latch623 ]
  br label %loop.body583

loop.body583:                                     ; preds = %loop.latch614, %loop.body582
  %idx.8 = phi i128 [ 0, %loop.body582 ], [ %add616, %loop.latch614 ]
  %nocarry584 = load [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]*, [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry, align 8
  %array_getter586 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*], [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]* %nocarry584, i128 0, i128 %i.1
  %nocarry587 = load %struct_template_circuit_signedfp12multiplynocarryunequal*, %struct_template_circuit_signedfp12multiplynocarryunequal** %array_getter586, align 8
  %struct_getter588 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %nocarry587, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter588, align 8
  %array_getter592 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %l.6, i128 %j.7, i128 %idx.8
  %nocarry593 = load i128, i128* %array_getter592, align 4
  %compress594 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter596 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %compress594, i128 0, i128 %i.1
  %compress597 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter596, align 8
  %struct_getter598 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress597, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter598, align 8
  %array_getter602 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %l.6, i128 %j.7, i128 %idx.8
  %compress603 = load i128, i128* %array_getter602, align 4
  call void @fn_intrinsic_utils_constraint(i128 %compress603, i128 %nocarry593, i1* @constraint.878)
  %ptr_getter604 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter606 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %ptr_getter604, i128 0, i128 %i.1
  %compress607 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter606, align 8
  %struct_getter608 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress607, i32 0, i32 5
  %fp12compress.in.read_input_outter609 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter608, align 8
  %compress613 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter609, i128 0, i128 %l.6, i128 %j.7, i128 %idx.8
  store i128 %nocarry593, i128* %compress613, align 4
  br label %loop.latch614

loop.latch614:                                    ; preds = %loop.body583
  %add616 = add i128 %idx.8, 1
  %mul619 = mul i128 3, %millerloopfp2two.k.read_arg_inner
  %sub620 = sub i128 %mul619, 2
  %slt621 = icmp slt i128 %add616, %sub620
  br i1 %slt621, label %loop.body583, label %loop.exit622

loop.exit622:                                     ; preds = %loop.latch614
  br label %loop.latch623

loop.latch623:                                    ; preds = %loop.exit622
  %add625 = add i128 %j.7, 1
  %slt627 = icmp slt i128 %add625, 2
  br i1 %slt627, label %loop.body582, label %loop.exit628

loop.exit628:                                     ; preds = %loop.latch623
  br label %loop.latch629

loop.latch629:                                    ; preds = %loop.exit628
  %add631 = add i128 %l.6, 1
  %slt633 = icmp slt i128 %add631, 6
  br i1 %slt633, label %loop.body581, label %loop.exit634

loop.exit634:                                     ; preds = %loop.latch629
  %mul638 = mul i128 4, %millerloopfp2two.n.read_arg_inner
  %add640 = add i128 %mul638, %call56
  %call642 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, i128 %add640, [256 x i128]* %millerloopfp2two.q.read_arg_inner)
  %ptr_getter643 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble_0, align 8
  %fdouble_0645 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %ptr_getter643, i128 0, i128 %i.1
  store %struct_template_circuit_signedfp12carrymodp* %call642, %struct_template_circuit_signedfp12carrymodp** %fdouble_0645, align 8
  br label %loop.body646

loop.body646:                                     ; preds = %loop.latch692, %loop.exit634
  %l.7 = phi i128 [ 0, %loop.exit634 ], [ %add694, %loop.latch692 ]
  br label %loop.body647

loop.body647:                                     ; preds = %loop.latch686, %loop.body646
  %j.8 = phi i128 [ 0, %loop.body646 ], [ %add688, %loop.latch686 ]
  br label %loop.body648

loop.body648:                                     ; preds = %loop.latch679, %loop.body647
  %idx.9 = phi i128 [ 0, %loop.body647 ], [ %add681, %loop.latch679 ]
  %compress649 = load [256 x %struct_template_circuit_fp12compress*]*, [256 x %struct_template_circuit_fp12compress*]** %compress, align 8
  %array_getter651 = getelementptr inbounds [256 x %struct_template_circuit_fp12compress*], [256 x %struct_template_circuit_fp12compress*]* %compress649, i128 0, i128 %i.1
  %compress652 = load %struct_template_circuit_fp12compress*, %struct_template_circuit_fp12compress** %array_getter651, align 8
  %struct_getter653 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %compress652, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter653, align 8
  %array_getter657 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %l.7, i128 %j.8, i128 %idx.9
  %compress658 = load i128, i128* %array_getter657, align 4
  %fdouble_0659 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble_0, align 8
  %array_getter661 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble_0659, i128 0, i128 %i.1
  %fdouble_0662 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter661, align 8
  %struct_getter663 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble_0662, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter663, align 8
  %array_getter667 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %l.7, i128 %j.8, i128 %idx.9
  %fdouble_0668 = load i128, i128* %array_getter667, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fdouble_0668, i128 %compress658, i1* @constraint.879)
  %ptr_getter669 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble_0, align 8
  %array_getter671 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %ptr_getter669, i128 0, i128 %i.1
  %fdouble_0672 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter671, align 8
  %struct_getter673 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble_0672, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter674 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter673, align 8
  %fdouble_0678 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter674, i128 0, i128 %l.7, i128 %j.8, i128 %idx.9
  store i128 %compress658, i128* %fdouble_0678, align 4
  br label %loop.latch679

loop.latch679:                                    ; preds = %loop.body648
  %add681 = add i128 %idx.9, 1
  %slt684 = icmp slt i128 %add681, %millerloopfp2two.k.read_arg_inner
  br i1 %slt684, label %loop.body648, label %loop.exit685

loop.exit685:                                     ; preds = %loop.latch679
  br label %loop.latch686

loop.latch686:                                    ; preds = %loop.exit685
  %add688 = add i128 %j.8, 1
  %slt690 = icmp slt i128 %add688, 2
  br i1 %slt690, label %loop.body647, label %loop.exit691

loop.exit691:                                     ; preds = %loop.latch686
  br label %loop.latch692

loop.latch692:                                    ; preds = %loop.exit691
  %add694 = add i128 %l.7, 1
  %slt696 = icmp slt i128 %add694, 6
  br i1 %slt696, label %loop.body646, label %loop.exit697

loop.exit697:                                     ; preds = %loop.latch692
  %call701 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, [256 x i128]* %millerloopfp2two.q.read_arg_inner)
  %ptr_getter702 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %fdouble704 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter702, i128 0, i128 %i.1
  store %struct_template_circuit_fp12multiply* %call701, %struct_template_circuit_fp12multiply** %fdouble704, align 8
  br label %loop.body705

loop.body705:                                     ; preds = %loop.latch782, %loop.exit697
  %l.8 = phi i128 [ 0, %loop.exit697 ], [ %add784, %loop.latch782 ]
  br label %loop.body706

loop.body706:                                     ; preds = %loop.latch776, %loop.body705
  %j.9 = phi i128 [ 0, %loop.body705 ], [ %add778, %loop.latch776 ]
  br label %loop.body707

loop.body707:                                     ; preds = %loop.latch769, %loop.body706
  %idx.10 = phi i128 [ 0, %loop.body706 ], [ %add771, %loop.latch769 ]
  %fdouble_0708 = load [256 x %struct_template_circuit_signedfp12carrymodp*]*, [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble_0, align 8
  %array_getter710 = getelementptr inbounds [256 x %struct_template_circuit_signedfp12carrymodp*], [256 x %struct_template_circuit_signedfp12carrymodp*]* %fdouble_0708, i128 0, i128 %i.1
  %fdouble_0711 = load %struct_template_circuit_signedfp12carrymodp*, %struct_template_circuit_signedfp12carrymodp** %array_getter710, align 8
  %struct_getter712 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %fdouble_0711, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter712, align 8
  %array_getter716 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %l.8, i128 %j.9, i128 %idx.10
  %fdouble_0717 = load i128, i128* %array_getter716, align 4
  %fdouble718 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %array_getter720 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fdouble718, i128 0, i128 %i.1
  %fdouble721 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter720, align 8
  %struct_getter722 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fdouble721, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter722, align 8
  %array_getter726 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %l.8, i128 %j.9, i128 %idx.10
  %fdouble727 = load i128, i128* %array_getter726, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fdouble727, i128 %fdouble_0717, i1* @constraint.880)
  %ptr_getter728 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %array_getter730 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter728, i128 0, i128 %i.1
  %fdouble731 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter730, align 8
  %struct_getter732 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fdouble731, i32 0, i32 3
  %fp12multiply.a.read_input_outter733 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter732, align 8
  %fdouble737 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter733, i128 0, i128 %l.8, i128 %j.9, i128 %idx.10
  store i128 %fdouble_0717, i128* %fdouble737, align 4
  %line738 = load [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]*, [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line, align 8
  %array_getter740 = getelementptr inbounds [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]], [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]* %line738, i128 0, i128 %i.1, i128 1
  %line741 = load %struct_template_circuit_linefunctionequalfp2*, %struct_template_circuit_linefunctionequalfp2** %array_getter740, align 8
  %struct_getter742 = getelementptr inbounds %struct_template_circuit_linefunctionequalfp2, %struct_template_circuit_linefunctionequalfp2* %line741, i32 0, i32 5
  %linefunctionequalfp2.out.read_output_outter743 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter742, align 8
  %array_getter747 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %linefunctionequalfp2.out.read_output_outter743, i128 0, i128 %l.8, i128 %j.9, i128 %idx.10
  %line748 = load i128, i128* %array_getter747, align 4
  %fdouble749 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %array_getter751 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fdouble749, i128 0, i128 %i.1
  %fdouble752 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter751, align 8
  %struct_getter753 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fdouble752, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter753, align 8
  %array_getter757 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %l.8, i128 %j.9, i128 %idx.10
  %fdouble758 = load i128, i128* %array_getter757, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fdouble758, i128 %line748, i1* @constraint.881)
  %ptr_getter759 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %array_getter761 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter759, i128 0, i128 %i.1
  %fdouble762 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter761, align 8
  %struct_getter763 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fdouble762, i32 0, i32 4
  %fp12multiply.b.read_input_outter764 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter763, align 8
  %fdouble768 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter764, i128 0, i128 %l.8, i128 %j.9, i128 %idx.10
  store i128 %line748, i128* %fdouble768, align 4
  br label %loop.latch769

loop.latch769:                                    ; preds = %loop.body707
  %add771 = add i128 %idx.10, 1
  %slt774 = icmp slt i128 %add771, %millerloopfp2two.k.read_arg_inner
  br i1 %slt774, label %loop.body707, label %loop.exit775

loop.exit775:                                     ; preds = %loop.latch769
  br label %loop.latch776

loop.latch776:                                    ; preds = %loop.exit775
  %add778 = add i128 %j.9, 1
  %slt780 = icmp slt i128 %add778, 2
  br i1 %slt780, label %loop.body706, label %loop.exit781

loop.exit781:                                     ; preds = %loop.latch776
  br label %loop.latch782

loop.latch782:                                    ; preds = %loop.exit781
  %add784 = add i128 %l.8, 1
  %slt786 = icmp slt i128 %add784, 6
  br i1 %slt786, label %loop.body705, label %loop.exit787

loop.exit787:                                     ; preds = %loop.latch782
  %Bits790 = load [256 x i128]*, [256 x i128]** %Bits, align 8
  %array_getter792 = getelementptr inbounds [256 x i128], [256 x i128]* %Bits790, i128 0, i128 %i.1
  %Bits793 = load i128, i128* %array_getter792, align 4
  %eq794 = icmp eq i128 %Bits793, 0
  br i1 %eq794, label %if.true788, label %if.false789

if.true788:                                       ; preds = %loop.exit787
  br label %loop.body795

if.false789:                                      ; preds = %loop.exit787
  br label %loop.body895

loop.body795:                                     ; preds = %loop.latch834, %if.true788
  %l.9 = phi i128 [ 0, %if.true788 ], [ %add836, %loop.latch834 ]
  br label %loop.body796

loop.body796:                                     ; preds = %loop.latch828, %loop.body795
  %j.10 = phi i128 [ 0, %loop.body795 ], [ %add830, %loop.latch828 ]
  br label %loop.body797

loop.body797:                                     ; preds = %loop.latch821, %loop.body796
  %idx.11 = phi i128 [ 0, %loop.body796 ], [ %add823, %loop.latch821 ]
  %fdouble798 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %array_getter800 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fdouble798, i128 0, i128 %i.1
  %fdouble801 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter800, align 8
  %struct_getter802 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fdouble801, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter802, align 8
  %array_getter806 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %l.9, i128 %j.10, i128 %idx.11
  %fdouble807 = load i128, i128* %array_getter806, align 4
  %f808 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %array_getter813 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f808, i128 0, i128 %i.1, i128 %l.9, i128 %j.10, i128 %idx.11
  %f814 = load i128, i128* %array_getter813, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f814, i128 %fdouble807, i1* @constraint.882)
  %ptr_getter815 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %f820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter815, i128 0, i128 %i.1, i128 %l.9, i128 %j.10, i128 %idx.11
  store i128 %fdouble807, i128* %f820, align 4
  br label %loop.latch821

loop.latch821:                                    ; preds = %loop.body797
  %add823 = add i128 %idx.11, 1
  %slt826 = icmp slt i128 %add823, %millerloopfp2two.k.read_arg_inner
  br i1 %slt826, label %loop.body797, label %loop.exit827

loop.exit827:                                     ; preds = %loop.latch821
  br label %loop.latch828

loop.latch828:                                    ; preds = %loop.exit827
  %add830 = add i128 %j.10, 1
  %slt832 = icmp slt i128 %add830, 2
  br i1 %slt832, label %loop.body796, label %loop.exit833

loop.exit833:                                     ; preds = %loop.latch828
  br label %loop.latch834

loop.latch834:                                    ; preds = %loop.exit833
  %add836 = add i128 %l.9, 1
  %slt838 = icmp slt i128 %add836, 6
  br i1 %slt838, label %loop.body795, label %loop.exit839

loop.exit839:                                     ; preds = %loop.latch834
  br label %loop.body840

loop.body840:                                     ; preds = %loop.latch889, %loop.exit839
  %idP.2 = phi i128 [ 0, %loop.exit839 ], [ %add891, %loop.latch889 ]
  br label %loop.body841

loop.body841:                                     ; preds = %loop.latch883, %loop.body840
  %j.11 = phi i128 [ 0, %loop.body840 ], [ %add885, %loop.latch883 ]
  br label %loop.body842

loop.body842:                                     ; preds = %loop.latch876, %loop.body841
  %idx.12 = phi i128 [ 0, %loop.body841 ], [ %add878, %loop.latch876 ]
  br label %loop.body843

loop.body843:                                     ; preds = %loop.latch870, %loop.body842
  %l.10 = phi i128 [ 0, %loop.body842 ], [ %add872, %loop.latch870 ]
  %Pdouble844 = load [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %array_getter847 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %Pdouble844, i128 0, i128 %i.1, i128 %idP.2
  %Pdouble848 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter847, align 8
  %struct_getter849 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble848, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter849, align 8
  %array_getter853 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %j.11, i128 %l.10, i128 %idx.12
  %Pdouble854 = load i128, i128* %array_getter853, align 4
  %R855 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %array_getter861 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R855, i128 0, i128 %i.1, i128 %idP.2, i128 %j.11, i128 %l.10, i128 %idx.12
  %R862 = load i128, i128* %array_getter861, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R862, i128 %Pdouble854, i1* @constraint.883)
  %ptr_getter863 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %R869 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %ptr_getter863, i128 0, i128 %i.1, i128 %idP.2, i128 %j.11, i128 %l.10, i128 %idx.12
  store i128 %Pdouble854, i128* %R869, align 4
  br label %loop.latch870

loop.latch870:                                    ; preds = %loop.body843
  %add872 = add i128 %l.10, 1
  %slt874 = icmp slt i128 %add872, 2
  br i1 %slt874, label %loop.body843, label %loop.exit875

loop.exit875:                                     ; preds = %loop.latch870
  br label %loop.latch876

loop.latch876:                                    ; preds = %loop.exit875
  %add878 = add i128 %idx.12, 1
  %slt881 = icmp slt i128 %add878, %millerloopfp2two.k.read_arg_inner
  br i1 %slt881, label %loop.body842, label %loop.exit882

loop.exit882:                                     ; preds = %loop.latch876
  br label %loop.latch883

loop.latch883:                                    ; preds = %loop.exit882
  %add885 = add i128 %j.11, 1
  %slt887 = icmp slt i128 %add885, 2
  br i1 %slt887, label %loop.body841, label %loop.exit888

loop.exit888:                                     ; preds = %loop.latch883
  br label %loop.latch889

loop.latch889:                                    ; preds = %loop.exit888
  %add891 = add i128 %idP.2, 1
  %slt893 = icmp slt i128 %add891, 2
  br i1 %slt893, label %loop.body840, label %loop.exit894

loop.exit894:                                     ; preds = %loop.latch889
  br label %if.exit1323

loop.body895:                                     ; preds = %loop.latch1269, %if.false789
  %idP.3 = phi i128 [ 0, %if.false789 ], [ %add1271, %loop.latch1269 ]
  %call901 = call %struct_template_circuit_fp12multiplywithlineunequalfp2* @fn_template_build_fp12multiplywithlineunequalfp2(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, i128 %millerloopfp2two.n.read_arg_inner, [256 x i128]* %millerloopfp2two.q.read_arg_inner)
  %ptr_getter902 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %fadd905 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %ptr_getter902, i128 0, i128 %curid.0, i128 %idP.3
  store %struct_template_circuit_fp12multiplywithlineunequalfp2* %call901, %struct_template_circuit_fp12multiplywithlineunequalfp2** %fadd905, align 8
  br label %loop.body906

loop.body906:                                     ; preds = %loop.latch995, %loop.body895
  %l.11 = phi i128 [ 0, %loop.body895 ], [ %add997, %loop.latch995 ]
  br label %loop.body907

loop.body907:                                     ; preds = %loop.latch989, %loop.body906
  %j.12 = phi i128 [ 0, %loop.body906 ], [ %add991, %loop.latch989 ]
  br label %loop.body908

loop.body908:                                     ; preds = %loop.latch982, %loop.body907
  %idx.13 = phi i128 [ 0, %loop.body907 ], [ %add984, %loop.latch982 ]
  %eq912 = icmp eq i128 %idP.3, 0
  br i1 %eq912, label %if.true909, label %if.false910

if.true909:                                       ; preds = %loop.body908
  %fdouble913 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %fdouble, align 8
  %array_getter915 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %fdouble913, i128 0, i128 %i.1
  %fdouble916 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter915, align 8
  %struct_getter917 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %fdouble916, i32 0, i32 5
  %fp12multiply.out.read_output_outter918 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter917, align 8
  %array_getter922 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter918, i128 0, i128 %l.11, i128 %j.12, i128 %idx.13
  %fdouble923 = load i128, i128* %array_getter922, align 4
  %fadd924 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter927 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd924, i128 0, i128 %curid.0, i128 %idP.3
  %fadd928 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter927, align 8
  %struct_getter929 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd928, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter929, align 8
  %array_getter933 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_outter, i128 0, i128 %l.11, i128 %j.12, i128 %idx.13
  %fadd934 = load i128, i128* %array_getter933, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd934, i128 %fdouble923, i1* @constraint.884)
  %ptr_getter935 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter938 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %ptr_getter935, i128 0, i128 %curid.0, i128 %idP.3
  %fadd939 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter938, align 8
  %struct_getter940 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd939, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_outter941 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter940, align 8
  %fadd945 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_outter941, i128 0, i128 %l.11, i128 %j.12, i128 %idx.13
  store i128 %fdouble923, i128* %fadd945, align 4
  br label %if.exit981

if.false910:                                      ; preds = %loop.body908
  %fadd946 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %sub949 = sub i128 %idP.3, 1
  %array_getter950 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd946, i128 0, i128 %curid.0, i128 %sub949
  %fadd951 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter950, align 8
  %struct_getter952 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd951, i32 0, i32 8
  %fp12multiplywithlineunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter952, align 8
  %array_getter956 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.out.read_output_outter, i128 0, i128 %l.11, i128 %j.12, i128 %idx.13
  %fadd957 = load i128, i128* %array_getter956, align 4
  %fadd958 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter961 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd958, i128 0, i128 %curid.0, i128 %idP.3
  %fadd962 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter961, align 8
  %struct_getter963 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd962, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_outter964 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter963, align 8
  %array_getter968 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_outter964, i128 0, i128 %l.11, i128 %j.12, i128 %idx.13
  %fadd969 = load i128, i128* %array_getter968, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd969, i128 %fadd957, i1* @constraint.885)
  %ptr_getter970 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter973 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %ptr_getter970, i128 0, i128 %curid.0, i128 %idP.3
  %fadd974 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter973, align 8
  %struct_getter975 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd974, i32 0, i32 5
  %fp12multiplywithlineunequalfp2.g.read_input_outter976 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter975, align 8
  %fadd980 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.g.read_input_outter976, i128 0, i128 %l.11, i128 %j.12, i128 %idx.13
  store i128 %fadd957, i128* %fadd980, align 4
  br label %if.exit981

if.exit981:                                       ; preds = %if.false910, %if.true909
  br label %loop.latch982

loop.latch982:                                    ; preds = %if.exit981
  %add984 = add i128 %idx.13, 1
  %slt987 = icmp slt i128 %add984, %millerloopfp2two.k.read_arg_inner
  br i1 %slt987, label %loop.body908, label %loop.exit988

loop.exit988:                                     ; preds = %loop.latch982
  br label %loop.latch989

loop.latch989:                                    ; preds = %loop.exit988
  %add991 = add i128 %j.12, 1
  %slt993 = icmp slt i128 %add991, 2
  br i1 %slt993, label %loop.body907, label %loop.exit994

loop.exit994:                                     ; preds = %loop.latch989
  br label %loop.latch995

loop.latch995:                                    ; preds = %loop.exit994
  %add997 = add i128 %l.11, 1
  %slt999 = icmp slt i128 %add997, 6
  br i1 %slt999, label %loop.body906, label %loop.exit1000

loop.exit1000:                                    ; preds = %loop.latch995
  br label %loop.body1001

loop.body1001:                                    ; preds = %loop.latch1081, %loop.exit1000
  %j.13 = phi i128 [ 0, %loop.exit1000 ], [ %add1083, %loop.latch1081 ]
  br label %loop.body1002

loop.body1002:                                    ; preds = %loop.latch1074, %loop.body1001
  %idx.14 = phi i128 [ 0, %loop.body1001 ], [ %add1076, %loop.latch1074 ]
  br label %loop.body1003

loop.body1003:                                    ; preds = %loop.latch1068, %loop.body1002
  %l.12 = phi i128 [ 0, %loop.body1002 ], [ %add1070, %loop.latch1068 ]
  %Pdouble1004 = load [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %array_getter1007 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %Pdouble1004, i128 0, i128 %i.1, i128 %idP.3
  %Pdouble1008 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter1007, align 8
  %struct_getter1009 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble1008, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter1010 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1009, align 8
  %array_getter1014 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter1010, i128 0, i128 %j.13, i128 %l.12, i128 %idx.14
  %Pdouble1015 = load i128, i128* %array_getter1014, align 4
  %fadd1016 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1019 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd1016, i128 0, i128 %curid.0, i128 %idP.3
  %fadd1020 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1019, align 8
  %struct_getter1021 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1020, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter1021, align 8
  %array_getter1025 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter, i128 0, i128 0, i128 %j.13, i128 %l.12, i128 %idx.14
  %fadd1026 = load i128, i128* %array_getter1025, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd1026, i128 %Pdouble1015, i1* @constraint.886)
  %ptr_getter1027 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1030 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %ptr_getter1027, i128 0, i128 %curid.0, i128 %idP.3
  %fadd1031 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1030, align 8
  %struct_getter1032 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1031, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter1033 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter1032, align 8
  %fadd1037 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter1033, i128 0, i128 0, i128 %j.13, i128 %l.12, i128 %idx.14
  store i128 %Pdouble1015, i128* %fadd1037, align 4
  %P1038 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.p.declare_input, align 8
  %array_getter1043 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P1038, i128 0, i128 %idP.3, i128 %j.13, i128 %l.12, i128 %idx.14
  %P1044 = load i128, i128* %array_getter1043, align 4
  %fadd1045 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1048 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd1045, i128 0, i128 %curid.0, i128 %idP.3
  %fadd1049 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1048, align 8
  %struct_getter1050 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1049, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter1051 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter1050, align 8
  %array_getter1055 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter1051, i128 0, i128 1, i128 %j.13, i128 %l.12, i128 %idx.14
  %fadd1056 = load i128, i128* %array_getter1055, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd1056, i128 %P1044, i1* @constraint.887)
  %ptr_getter1057 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1060 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %ptr_getter1057, i128 0, i128 %curid.0, i128 %idP.3
  %fadd1061 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1060, align 8
  %struct_getter1062 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1061, i32 0, i32 6
  %fp12multiplywithlineunequalfp2.p.read_input_outter1063 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter1062, align 8
  %fadd1067 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequalfp2.p.read_input_outter1063, i128 0, i128 1, i128 %j.13, i128 %l.12, i128 %idx.14
  store i128 %P1044, i128* %fadd1067, align 4
  br label %loop.latch1068

loop.latch1068:                                   ; preds = %loop.body1003
  %add1070 = add i128 %l.12, 1
  %slt1072 = icmp slt i128 %add1070, 2
  br i1 %slt1072, label %loop.body1003, label %loop.exit1073

loop.exit1073:                                    ; preds = %loop.latch1068
  br label %loop.latch1074

loop.latch1074:                                   ; preds = %loop.exit1073
  %add1076 = add i128 %idx.14, 1
  %slt1079 = icmp slt i128 %add1076, %millerloopfp2two.k.read_arg_inner
  br i1 %slt1079, label %loop.body1002, label %loop.exit1080

loop.exit1080:                                    ; preds = %loop.latch1074
  br label %loop.latch1081

loop.latch1081:                                   ; preds = %loop.exit1080
  %add1083 = add i128 %j.13, 1
  %slt1085 = icmp slt i128 %add1083, 2
  br i1 %slt1085, label %loop.body1001, label %loop.exit1086

loop.exit1086:                                    ; preds = %loop.latch1081
  br label %loop.body1087

loop.body1087:                                    ; preds = %loop.latch1122, %loop.exit1086
  %j.14 = phi i128 [ 0, %loop.exit1086 ], [ %add1124, %loop.latch1122 ]
  br label %loop.body1088

loop.body1088:                                    ; preds = %loop.latch1115, %loop.body1087
  %idx.15 = phi i128 [ 0, %loop.body1087 ], [ %add1117, %loop.latch1115 ]
  %Q1089 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2two.q.declare_input, align 8
  %array_getter1093 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %Q1089, i128 0, i128 %idP.3, i128 %j.14, i128 %idx.15
  %Q1094 = load i128, i128* %array_getter1093, align 4
  %fadd1095 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1098 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd1095, i128 0, i128 %curid.0, i128 %idP.3
  %fadd1099 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1098, align 8
  %struct_getter1100 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1099, i32 0, i32 7
  %fp12multiplywithlineunequalfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1100, align 8
  %array_getter1103 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp12multiplywithlineunequalfp2.q.read_input_outter, i128 0, i128 %j.14, i128 %idx.15
  %fadd1104 = load i128, i128* %array_getter1103, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fadd1104, i128 %Q1094, i1* @constraint.888)
  %ptr_getter1105 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1108 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %ptr_getter1105, i128 0, i128 %curid.0, i128 %idP.3
  %fadd1109 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1108, align 8
  %struct_getter1110 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1109, i32 0, i32 7
  %fp12multiplywithlineunequalfp2.q.read_input_outter1111 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter1110, align 8
  %fadd1114 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp12multiplywithlineunequalfp2.q.read_input_outter1111, i128 0, i128 %j.14, i128 %idx.15
  store i128 %Q1094, i128* %fadd1114, align 4
  br label %loop.latch1115

loop.latch1115:                                   ; preds = %loop.body1088
  %add1117 = add i128 %idx.15, 1
  %slt1120 = icmp slt i128 %add1117, %millerloopfp2two.k.read_arg_inner
  br i1 %slt1120, label %loop.body1088, label %loop.exit1121

loop.exit1121:                                    ; preds = %loop.latch1115
  br label %loop.latch1122

loop.latch1122:                                   ; preds = %loop.exit1121
  %add1124 = add i128 %j.14, 1
  %slt1126 = icmp slt i128 %add1124, 2
  br i1 %slt1126, label %loop.body1087, label %loop.exit1127

loop.exit1127:                                    ; preds = %loop.latch1122
  %call1131 = call %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %millerloopfp2two.n.read_arg_inner, i128 %millerloopfp2two.k.read_arg_inner, [256 x i128]* %millerloopfp2two.q.read_arg_inner)
  %ptr_getter1132 = load [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %Padd1135 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %ptr_getter1132, i128 0, i128 %curid.0, i128 %idP.3
  store %struct_template_circuit_ellipticcurveaddunequalfp2* %call1131, %struct_template_circuit_ellipticcurveaddunequalfp2** %Padd1135, align 8
  br label %loop.body1136

loop.body1136:                                    ; preds = %loop.latch1215, %loop.exit1127
  %j.15 = phi i128 [ 0, %loop.exit1127 ], [ %add1217, %loop.latch1215 ]
  br label %loop.body1137

loop.body1137:                                    ; preds = %loop.latch1208, %loop.body1136
  %idx.16 = phi i128 [ 0, %loop.body1136 ], [ %add1210, %loop.latch1208 ]
  br label %loop.body1138

loop.body1138:                                    ; preds = %loop.latch1202, %loop.body1137
  %l.13 = phi i128 [ 0, %loop.body1137 ], [ %add1204, %loop.latch1202 ]
  %Pdouble1139 = load [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble, align 8
  %array_getter1142 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]], [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]* %Pdouble1139, i128 0, i128 %i.1, i128 %idP.3
  %Pdouble1143 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter1142, align 8
  %struct_getter1144 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble1143, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter1145 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1144, align 8
  %array_getter1149 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter1145, i128 0, i128 %j.15, i128 %l.13, i128 %idx.16
  %Pdouble1150 = load i128, i128* %array_getter1149, align 4
  %Padd1151 = load [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %array_getter1154 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %Padd1151, i128 0, i128 %curid.0, i128 %idP.3
  %Padd1155 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1154, align 8
  %struct_getter1156 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1155, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1156, align 8
  %array_getter1160 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter, i128 0, i128 %j.15, i128 %l.13, i128 %idx.16
  %Padd1161 = load i128, i128* %array_getter1160, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd1161, i128 %Pdouble1150, i1* @constraint.889)
  %ptr_getter1162 = load [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %array_getter1165 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %ptr_getter1162, i128 0, i128 %curid.0, i128 %idP.3
  %Padd1166 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1165, align 8
  %struct_getter1167 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1166, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter1168 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1167, align 8
  %Padd1172 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter1168, i128 0, i128 %j.15, i128 %l.13, i128 %idx.16
  store i128 %Pdouble1150, i128* %Padd1172, align 4
  %P1173 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.p.declare_input, align 8
  %array_getter1178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %P1173, i128 0, i128 %idP.3, i128 %j.15, i128 %l.13, i128 %idx.16
  %P1179 = load i128, i128* %array_getter1178, align 4
  %Padd1180 = load [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %array_getter1183 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %Padd1180, i128 0, i128 %curid.0, i128 %idP.3
  %Padd1184 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1183, align 8
  %struct_getter1185 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1184, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1185, align 8
  %array_getter1189 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter, i128 0, i128 %j.15, i128 %l.13, i128 %idx.16
  %Padd1190 = load i128, i128* %array_getter1189, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Padd1190, i128 %P1179, i1* @constraint.890)
  %ptr_getter1191 = load [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %array_getter1194 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %ptr_getter1191, i128 0, i128 %curid.0, i128 %idP.3
  %Padd1195 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1194, align 8
  %struct_getter1196 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1195, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter1197 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1196, align 8
  %Padd1201 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter1197, i128 0, i128 %j.15, i128 %l.13, i128 %idx.16
  store i128 %P1179, i128* %Padd1201, align 4
  br label %loop.latch1202

loop.latch1202:                                   ; preds = %loop.body1138
  %add1204 = add i128 %l.13, 1
  %slt1206 = icmp slt i128 %add1204, 2
  br i1 %slt1206, label %loop.body1138, label %loop.exit1207

loop.exit1207:                                    ; preds = %loop.latch1202
  br label %loop.latch1208

loop.latch1208:                                   ; preds = %loop.exit1207
  %add1210 = add i128 %idx.16, 1
  %slt1213 = icmp slt i128 %add1210, %millerloopfp2two.k.read_arg_inner
  br i1 %slt1213, label %loop.body1137, label %loop.exit1214

loop.exit1214:                                    ; preds = %loop.latch1208
  br label %loop.latch1215

loop.latch1215:                                   ; preds = %loop.exit1214
  %add1217 = add i128 %j.15, 1
  %slt1219 = icmp slt i128 %add1217, 2
  br i1 %slt1219, label %loop.body1136, label %loop.exit1220

loop.exit1220:                                    ; preds = %loop.latch1215
  br label %loop.body1221

loop.body1221:                                    ; preds = %loop.latch1263, %loop.exit1220
  %j.16 = phi i128 [ 0, %loop.exit1220 ], [ %add1265, %loop.latch1263 ]
  br label %loop.body1222

loop.body1222:                                    ; preds = %loop.latch1256, %loop.body1221
  %idx.17 = phi i128 [ 0, %loop.body1221 ], [ %add1258, %loop.latch1256 ]
  br label %loop.body1223

loop.body1223:                                    ; preds = %loop.latch1250, %loop.body1222
  %l.14 = phi i128 [ 0, %loop.body1222 ], [ %add1252, %loop.latch1250 ]
  %Padd1224 = load [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]*, [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd, align 8
  %array_getter1227 = getelementptr inbounds [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]], [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]* %Padd1224, i128 0, i128 %curid.0, i128 %idP.3
  %Padd1228 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter1227, align 8
  %struct_getter1229 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd1228, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1229, align 8
  %array_getter1233 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter, i128 0, i128 %j.16, i128 %l.14, i128 %idx.17
  %Padd1234 = load i128, i128* %array_getter1233, align 4
  %R1235 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %array_getter1241 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R1235, i128 0, i128 %i.1, i128 %idP.3, i128 %j.16, i128 %l.14, i128 %idx.17
  %R1242 = load i128, i128* %array_getter1241, align 4
  call void @fn_intrinsic_utils_constraint(i128 %R1242, i128 %Padd1234, i1* @constraint.891)
  %ptr_getter1243 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %R1249 = getelementptr inbounds [256 x [256 x [256 x [256 x [256 x i128]]]]], [256 x [256 x [256 x [256 x [256 x i128]]]]]* %ptr_getter1243, i128 0, i128 %i.1, i128 %idP.3, i128 %j.16, i128 %l.14, i128 %idx.17
  store i128 %Padd1234, i128* %R1249, align 4
  br label %loop.latch1250

loop.latch1250:                                   ; preds = %loop.body1223
  %add1252 = add i128 %l.14, 1
  %slt1254 = icmp slt i128 %add1252, 2
  br i1 %slt1254, label %loop.body1223, label %loop.exit1255

loop.exit1255:                                    ; preds = %loop.latch1250
  br label %loop.latch1256

loop.latch1256:                                   ; preds = %loop.exit1255
  %add1258 = add i128 %idx.17, 1
  %slt1261 = icmp slt i128 %add1258, %millerloopfp2two.k.read_arg_inner
  br i1 %slt1261, label %loop.body1222, label %loop.exit1262

loop.exit1262:                                    ; preds = %loop.latch1256
  br label %loop.latch1263

loop.latch1263:                                   ; preds = %loop.exit1262
  %add1265 = add i128 %j.16, 1
  %slt1267 = icmp slt i128 %add1265, 2
  br i1 %slt1267, label %loop.body1221, label %loop.exit1268

loop.exit1268:                                    ; preds = %loop.latch1263
  br label %loop.latch1269

loop.latch1269:                                   ; preds = %loop.exit1268
  %add1271 = add i128 %idP.3, 1
  %slt1273 = icmp slt i128 %add1271, 2
  br i1 %slt1273, label %loop.body895, label %loop.exit1274

loop.exit1274:                                    ; preds = %loop.latch1269
  br label %loop.body1275

loop.body1275:                                    ; preds = %loop.latch1315, %loop.exit1274
  %l.15 = phi i128 [ 0, %loop.exit1274 ], [ %add1317, %loop.latch1315 ]
  br label %loop.body1276

loop.body1276:                                    ; preds = %loop.latch1309, %loop.body1275
  %j.17 = phi i128 [ 0, %loop.body1275 ], [ %add1311, %loop.latch1309 ]
  br label %loop.body1277

loop.body1277:                                    ; preds = %loop.latch1302, %loop.body1276
  %idx.18 = phi i128 [ 0, %loop.body1276 ], [ %add1304, %loop.latch1302 ]
  %fadd1278 = load [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]*, [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd, align 8
  %array_getter1280 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]], [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]* %fadd1278, i128 0, i128 %curid.0, i128 1
  %fadd1281 = load %struct_template_circuit_fp12multiplywithlineunequalfp2*, %struct_template_circuit_fp12multiplywithlineunequalfp2** %array_getter1280, align 8
  %struct_getter1282 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequalfp2, %struct_template_circuit_fp12multiplywithlineunequalfp2* %fadd1281, i32 0, i32 8
  %fp12multiplywithlineunequalfp2.out.read_output_outter1283 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter1282, align 8
  %array_getter1287 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequalfp2.out.read_output_outter1283, i128 0, i128 %l.15, i128 %j.17, i128 %idx.18
  %fadd1288 = load i128, i128* %array_getter1287, align 4
  %f1289 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %array_getter1294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f1289, i128 0, i128 %i.1, i128 %l.15, i128 %j.17, i128 %idx.18
  %f1295 = load i128, i128* %array_getter1294, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f1295, i128 %fadd1288, i1* @constraint.892)
  %ptr_getter1296 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %f1301 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %ptr_getter1296, i128 0, i128 %i.1, i128 %l.15, i128 %j.17, i128 %idx.18
  store i128 %fadd1288, i128* %f1301, align 4
  br label %loop.latch1302

loop.latch1302:                                   ; preds = %loop.body1277
  %add1304 = add i128 %idx.18, 1
  %slt1307 = icmp slt i128 %add1304, %millerloopfp2two.k.read_arg_inner
  br i1 %slt1307, label %loop.body1277, label %loop.exit1308

loop.exit1308:                                    ; preds = %loop.latch1302
  br label %loop.latch1309

loop.latch1309:                                   ; preds = %loop.exit1308
  %add1311 = add i128 %j.17, 1
  %slt1313 = icmp slt i128 %add1311, 2
  br i1 %slt1313, label %loop.body1276, label %loop.exit1314

loop.exit1314:                                    ; preds = %loop.latch1309
  br label %loop.latch1315

loop.latch1315:                                   ; preds = %loop.exit1314
  %add1317 = add i128 %l.15, 1
  %slt1319 = icmp slt i128 %add1317, 6
  br i1 %slt1319, label %loop.body1275, label %loop.exit1320

loop.exit1320:                                    ; preds = %loop.latch1315
  %add1322 = add i128 %curid.0, 1
  br label %if.exit1323

if.exit1323:                                      ; preds = %loop.exit1320, %loop.exit894
  %curid.1 = phi i128 [ %curid.0, %loop.exit894 ], [ %add1322, %loop.exit1320 ]
  br label %if.exit1324

if.exit1324:                                      ; preds = %if.exit1323, %loop.exit204
  %curid.2 = phi i128 [ %curid.0, %loop.exit204 ], [ %curid.1, %if.exit1323 ]
  br label %loop.latch1325

loop.latch1325:                                   ; preds = %if.exit1324
  %sub1327 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub1327, 0
  br i1 %sge, label %loop.body89, label %loop.exit1329

loop.exit1329:                                    ; preds = %loop.latch1325
  br label %loop.body1330

loop.body1330:                                    ; preds = %loop.latch1363, %loop.exit1329
  %l.16 = phi i128 [ 0, %loop.exit1329 ], [ %add1365, %loop.latch1363 ]
  br label %loop.body1331

loop.body1331:                                    ; preds = %loop.latch1357, %loop.body1330
  %j.18 = phi i128 [ 0, %loop.body1330 ], [ %add1359, %loop.latch1357 ]
  br label %loop.body1332

loop.body1332:                                    ; preds = %loop.latch1350, %loop.body1331
  %idx.19 = phi i128 [ 0, %loop.body1331 ], [ %add1352, %loop.latch1350 ]
  %f1333 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %array_getter1337 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %f1333, i128 0, i128 0, i128 %l.16, i128 %j.18, i128 %idx.19
  %f1338 = load i128, i128* %array_getter1337, align 4
  %out1339 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2two.out.declare_output, align 8
  %array_getter1343 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out1339, i128 0, i128 %l.16, i128 %j.18, i128 %idx.19
  %out1344 = load i128, i128* %array_getter1343, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out1344, i128 %f1338, i1* @constraint.893)
  %ptr_getter1345 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2two.out.declare_output, align 8
  %out1349 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter1345, i128 0, i128 %l.16, i128 %j.18, i128 %idx.19
  store i128 %f1338, i128* %out1349, align 4
  br label %loop.latch1350

loop.latch1350:                                   ; preds = %loop.body1332
  %add1352 = add i128 %idx.19, 1
  %slt1355 = icmp slt i128 %add1352, %millerloopfp2two.k.read_arg_inner
  br i1 %slt1355, label %loop.body1332, label %loop.exit1356

loop.exit1356:                                    ; preds = %loop.latch1350
  br label %loop.latch1357

loop.latch1357:                                   ; preds = %loop.exit1356
  %add1359 = add i128 %j.18, 1
  %slt1361 = icmp slt i128 %add1359, 2
  br i1 %slt1361, label %loop.body1331, label %loop.exit1362

loop.exit1362:                                    ; preds = %loop.latch1357
  br label %loop.latch1363

loop.latch1363:                                   ; preds = %loop.exit1362
  %add1365 = add i128 %l.16, 1
  %slt1367 = icmp slt i128 %add1365, 6
  br i1 %slt1367, label %loop.body1330, label %loop.exit1368

loop.exit1368:                                    ; preds = %loop.latch1363
  br label %arraydim

arraydim:                                         ; preds = %loop.exit1368
  %ptr_cast = bitcast [256 x [256 x %struct_template_circuit_ellipticcurvedoublefp2*]]** %Pdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 %BitLength.1, i128 2)
  %ptr_cast1369 = bitcast [256 x [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]]** %Padd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1369, i128 %SigBits.1, i128 2)
  %ptr_cast1370 = bitcast [256 x [256 x %struct_template_circuit_linefunctionequalfp2*]]** %line to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1370, i128 %BitLength.1, i128 2)
  %ptr_cast1371 = bitcast [256 x [256 x [256 x i128]]]** %millerloopfp2two.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1371, i128 6, i128 2, i128 %millerloopfp2two.k.read_arg_inner)
  %ptr_cast1372 = bitcast [256 x %struct_template_circuit_signedfp12multiplynocarry*]** %square to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1372, i128 %BitLength.1)
  %ptr_cast1373 = bitcast [256 x %struct_template_circuit_signedfp12multiplynocarryunequal*]** %nocarry to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1373, i128 %BitLength.1)
  %ptr_cast1374 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1374, i128 %BitLength.1, i128 6, i128 2, i128 %millerloopfp2two.k.read_arg_inner)
  %ptr_cast1375 = bitcast [256 x %struct_template_circuit_signedfp12carrymodp*]** %fdouble_0 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1375, i128 %BitLength.1)
  %ptr_cast1376 = bitcast [256 x [256 x [256 x i128]]]** %millerloopfp2two.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1376, i128 2, i128 2, i128 %millerloopfp2two.k.read_arg_inner)
  %ptr_cast1377 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1377, i128 2, i128 2, i128 2, i128 %millerloopfp2two.k.read_arg_inner)
  %ptr_cast1378 = bitcast [256 x %struct_template_circuit_fp12compress*]** %compress to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1378, i128 %BitLength.1)
  %ptr_cast1379 = bitcast [256 x i128]** %Bits to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1379, i128 250)
  %ptr_cast1380 = bitcast [256 x %struct_template_circuit_fp12multiply*]** %fdouble to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1380, i128 %BitLength.1)
  %ptr_cast1381 = bitcast [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1381, i128 %BitLength.1, i128 2, i128 2, i128 2, i128 %millerloopfp2two.k.read_arg_inner)
  %ptr_cast1382 = bitcast [256 x [256 x %struct_template_circuit_fp12multiplywithlineunequalfp2*]]** %fadd to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast1382, i128 %SigBits.1, i128 2)
  br label %exit

exit:                                             ; preds = %arraydim
  %R1383 = load [256 x [256 x [256 x [256 x [256 x i128]]]]]*, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.declare_inter, align 8
  %millerloopfp2two.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 7
  store [256 x [256 x [256 x [256 x [256 x i128]]]]]* %R1383, [256 x [256 x [256 x [256 x [256 x i128]]]]]** %millerloopfp2two.r.write_inter_inner, align 8
  %f1384 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.declare_inter, align 8
  %millerloopfp2two.f.write_inter_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 8
  store [256 x [256 x [256 x [256 x i128]]]]* %f1384, [256 x [256 x [256 x [256 x i128]]]]** %millerloopfp2two.f.write_inter_inner, align 8
  %out1385 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %millerloopfp2two.out.declare_output, align 8
  %millerloopfp2two.out.write_output_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %0, i32 0, i32 9
  store [256 x [256 x [256 x i128]]]* %out1385, [256 x [256 x [256 x i128]]]** %millerloopfp2two.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_millerloopfp2two* @fn_template_build_millerloopfp2two(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_millerloopfp2two = alloca %struct_template_circuit_millerloopfp2two, align 8
  %millerloopfp2two.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %struct_template_circuit_millerloopfp2two, i32 0, i32 0
  store i128 %0, i128* %millerloopfp2two.n.write_arg_inner, align 4
  %millerloopfp2two.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %struct_template_circuit_millerloopfp2two, i32 0, i32 1
  store i128 %1, i128* %millerloopfp2two.k.write_arg_inner, align 4
  %millerloopfp2two.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %struct_template_circuit_millerloopfp2two, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %millerloopfp2two.b.write_arg_inner, align 8
  %millerloopfp2two.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %struct_template_circuit_millerloopfp2two, i32 0, i32 3
  store i128 %3, i128* %millerloopfp2two.x.write_arg_inner, align 4
  %millerloopfp2two.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_millerloopfp2two, %struct_template_circuit_millerloopfp2two* %struct_template_circuit_millerloopfp2two, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %millerloopfp2two.q.write_arg_inner, align 8
  ret %struct_template_circuit_millerloopfp2two* %struct_template_circuit_millerloopfp2two
}

define void @fn_template_init_fp12cyclotomicexp(%struct_template_circuit_fp12cyclotomicexp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 0
  %fp12cyclotomicexp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 1
  %fp12cyclotomicexp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 2
  %fp12cyclotomicexp.e.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 3
  %fp12cyclotomicexp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %fp12cyclotomicexp.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_inner, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.in.declare_input, align 8
  %j5 = call i128 @fn_intrinsic_utils_init()
  %eps6 = call i128 @fn_intrinsic_utils_init()
  %mult = alloca [256 x %struct_template_circuit_fp12multiply*]*, align 8
  %mult7 = alloca [256 x %struct_template_circuit_fp12multiply*], align 8
  store [256 x %struct_template_circuit_fp12multiply*]* %mult7, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %fp12cyclotomicexp.first.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %first = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %first, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %fp12cyclotomicexp.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall8 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall8 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output, align 8
  %BITLENGTH9 = call i128 @fn_intrinsic_utils_init()
  %id10 = call i128 @fn_intrinsic_utils_init()
  %curid11 = call i128 @fn_intrinsic_utils_init()
  %i12 = call i128 @fn_intrinsic_utils_init()
  %pow2 = alloca [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, align 8
  %pow213 = alloca [256 x %struct_template_circuit_fp12cyclotomicsquare*], align 8
  store [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %pow213, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %Dpow2 = alloca [256 x %struct_template_circuit_fp12cyclotomicdecompress*]*, align 8
  %Dpow214 = alloca [256 x %struct_template_circuit_fp12cyclotomicdecompress*], align 8
  store [256 x %struct_template_circuit_fp12cyclotomicdecompress*]* %Dpow214, [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2, align 8
  %temp15 = call i128 @fn_intrinsic_utils_init()
  %sgt = icmp sgt i128 %fp12cyclotomicexp.e.read_arg_inner, 0
  call void @fn_intrinsic_utils_assert(i1 %sgt)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %BITLENGTH.0 = phi i128 [ 0, %entry ], [ %BITLENGTH.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %temp.0 = phi i128 [ %fp12cyclotomicexp.e.read_arg_inner, %entry ], [ %rshift, %loop.latch ]
  %ne = icmp ne i128 %temp.0, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BITLENGTH.1 = phi i128 [ %i.0, %if.true ], [ %BITLENGTH.0, %if.false ]
  %rshift = lshr i128 %temp.0, 1
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add24 = add i128 %BITLENGTH.1, 1
  %call = call %struct_template_circuit_fp12cyclotomiccompress* @fn_template_build_fp12cyclotomiccompress(i128 %fp12cyclotomicexp.n.read_arg_inner, i128 %fp12cyclotomicexp.k.read_arg_inner)
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch59, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add61, %loop.latch59 ]
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch53, %loop.body26
  %eps.0 = phi i128 [ 0, %loop.body26 ], [ %add55, %loop.latch53 ]
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch46, %loop.body27
  %j.0 = phi i128 [ 0, %loop.body27 ], [ %add48, %loop.latch46 ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %i.1, i128 %eps.0, i128 %j.0
  %in32 = load i128, i128* %array_getter, align 4
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %call, i32 0, i32 2
  %fp12cyclotomiccompress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter34, align 8
  %array_getter38 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomiccompress.in.read_input_outter, i128 0, i128 %i.1, i128 %eps.0, i128 %j.0
  %Cin39 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Cin39, i128 %in32, i1* @constraint.894)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %call, i32 0, i32 2
  %fp12cyclotomiccompress.in.read_input_outter41 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter40, align 8
  %Cin45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomiccompress.in.read_input_outter41, i128 0, i128 %i.1, i128 %eps.0, i128 %j.0
  store i128 %in32, i128* %Cin45, align 4
  br label %loop.latch46

loop.latch46:                                     ; preds = %loop.body28
  %add48 = add i128 %j.0, 1
  %slt51 = icmp slt i128 %add48, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt51, label %loop.body28, label %loop.exit52

loop.exit52:                                      ; preds = %loop.latch46
  br label %loop.latch53

loop.latch53:                                     ; preds = %loop.exit52
  %add55 = add i128 %eps.0, 1
  %slt57 = icmp slt i128 %add55, 2
  br i1 %slt57, label %loop.body27, label %loop.exit58

loop.exit58:                                      ; preds = %loop.latch53
  br label %loop.latch59

loop.latch59:                                     ; preds = %loop.exit58
  %add61 = add i128 %i.1, 1
  %slt63 = icmp slt i128 %add61, 6
  br i1 %slt63, label %loop.body26, label %loop.exit64

loop.exit64:                                      ; preds = %loop.latch59
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch520, %loop.exit64
  %curid.0 = phi i128 [ 0, %loop.exit64 ], [ %curid.1, %loop.latch520 ]
  %i.2 = phi i128 [ 0, %loop.exit64 ], [ %add522, %loop.latch520 ]
  %sgt73 = icmp sgt i128 %i.2, 0
  br i1 %sgt73, label %if.true70, label %if.false71

if.true70:                                        ; preds = %loop.body69
  %call76 = call %struct_template_circuit_fp12cyclotomicsquare* @fn_template_build_fp12cyclotomicsquare(i128 %fp12cyclotomicexp.n.read_arg_inner, i128 %fp12cyclotomicexp.k.read_arg_inner, [256 x i128]* %fp12cyclotomicexp.p.read_arg_inner)
  %ptr_getter77 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %pow279 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %ptr_getter77, i128 0, i128 %i.2
  store %struct_template_circuit_fp12cyclotomicsquare* %call76, %struct_template_circuit_fp12cyclotomicsquare** %pow279, align 8
  %eq = icmp eq i128 %i.2, 1
  br i1 %eq, label %if.true80, label %if.false81

if.false71:                                       ; preds = %loop.body69
  br label %if.exit186

if.true80:                                        ; preds = %if.true70
  br label %loop.body83

if.false81:                                       ; preds = %if.true70
  br label %loop.body132

loop.body83:                                      ; preds = %loop.latch126, %if.true80
  %id.0 = phi i128 [ 0, %if.true80 ], [ %add128, %loop.latch126 ]
  br label %loop.body84

loop.body84:                                      ; preds = %loop.latch120, %loop.body83
  %eps.1 = phi i128 [ 0, %loop.body83 ], [ %add122, %loop.latch120 ]
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch113, %loop.body84
  %j.1 = phi i128 [ 0, %loop.body84 ], [ %add115, %loop.latch113 ]
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_fp12cyclotomiccompress, %struct_template_circuit_fp12cyclotomiccompress* %call, i32 0, i32 3
  %fp12cyclotomiccompress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter87, align 8
  %array_getter91 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomiccompress.out.read_output_outter, i128 0, i128 %id.0, i128 %eps.1, i128 %j.1
  %Cin92 = load i128, i128* %array_getter91, align 4
  %pow293 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %array_getter95 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %pow293, i128 0, i128 %i.2
  %pow296 = load %struct_template_circuit_fp12cyclotomicsquare*, %struct_template_circuit_fp12cyclotomicsquare** %array_getter95, align 8
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %pow296, i32 0, i32 3
  %fp12cyclotomicsquare.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter97, align 8
  %array_getter101 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.in.read_input_outter, i128 0, i128 %id.0, i128 %eps.1, i128 %j.1
  %pow2102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow2102, i128 %Cin92, i1* @constraint.895)
  %ptr_getter103 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %array_getter105 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %ptr_getter103, i128 0, i128 %i.2
  %pow2106 = load %struct_template_circuit_fp12cyclotomicsquare*, %struct_template_circuit_fp12cyclotomicsquare** %array_getter105, align 8
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %pow2106, i32 0, i32 3
  %fp12cyclotomicsquare.in.read_input_outter108 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter107, align 8
  %pow2112 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.in.read_input_outter108, i128 0, i128 %id.0, i128 %eps.1, i128 %j.1
  store i128 %Cin92, i128* %pow2112, align 4
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.body85
  %add115 = add i128 %j.1, 1
  %slt118 = icmp slt i128 %add115, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt118, label %loop.body85, label %loop.exit119

loop.exit119:                                     ; preds = %loop.latch113
  br label %loop.latch120

loop.latch120:                                    ; preds = %loop.exit119
  %add122 = add i128 %eps.1, 1
  %slt124 = icmp slt i128 %add122, 2
  br i1 %slt124, label %loop.body84, label %loop.exit125

loop.exit125:                                     ; preds = %loop.latch120
  br label %loop.latch126

loop.latch126:                                    ; preds = %loop.exit125
  %add128 = add i128 %id.0, 1
  %slt130 = icmp slt i128 %add128, 4
  br i1 %slt130, label %loop.body83, label %loop.exit131

loop.exit131:                                     ; preds = %loop.latch126
  br label %if.exit185

loop.body132:                                     ; preds = %loop.latch179, %if.false81
  %id.1 = phi i128 [ 0, %if.false81 ], [ %add181, %loop.latch179 ]
  br label %loop.body133

loop.body133:                                     ; preds = %loop.latch173, %loop.body132
  %eps.2 = phi i128 [ 0, %loop.body132 ], [ %add175, %loop.latch173 ]
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch166, %loop.body133
  %j.2 = phi i128 [ 0, %loop.body133 ], [ %add168, %loop.latch166 ]
  %pow2135 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %sub = sub i128 %i.2, 1
  %array_getter137 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %pow2135, i128 0, i128 %sub
  %pow2138 = load %struct_template_circuit_fp12cyclotomicsquare*, %struct_template_circuit_fp12cyclotomicsquare** %array_getter137, align 8
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %pow2138, i32 0, i32 4
  %fp12cyclotomicsquare.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter139, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.out.read_output_outter, i128 0, i128 %id.1, i128 %eps.2, i128 %j.2
  %pow2144 = load i128, i128* %array_getter143, align 4
  %pow2145 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %array_getter147 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %pow2145, i128 0, i128 %i.2
  %pow2148 = load %struct_template_circuit_fp12cyclotomicsquare*, %struct_template_circuit_fp12cyclotomicsquare** %array_getter147, align 8
  %struct_getter149 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %pow2148, i32 0, i32 3
  %fp12cyclotomicsquare.in.read_input_outter150 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter149, align 8
  %array_getter154 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.in.read_input_outter150, i128 0, i128 %id.1, i128 %eps.2, i128 %j.2
  %pow2155 = load i128, i128* %array_getter154, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow2155, i128 %pow2144, i1* @constraint.896)
  %ptr_getter156 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %array_getter158 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %ptr_getter156, i128 0, i128 %i.2
  %pow2159 = load %struct_template_circuit_fp12cyclotomicsquare*, %struct_template_circuit_fp12cyclotomicsquare** %array_getter158, align 8
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %pow2159, i32 0, i32 3
  %fp12cyclotomicsquare.in.read_input_outter161 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter160, align 8
  %pow2165 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.in.read_input_outter161, i128 0, i128 %id.1, i128 %eps.2, i128 %j.2
  store i128 %pow2144, i128* %pow2165, align 4
  br label %loop.latch166

loop.latch166:                                    ; preds = %loop.body134
  %add168 = add i128 %j.2, 1
  %slt171 = icmp slt i128 %add168, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt171, label %loop.body134, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch166
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.exit172
  %add175 = add i128 %eps.2, 1
  %slt177 = icmp slt i128 %add175, 2
  br i1 %slt177, label %loop.body133, label %loop.exit178

loop.exit178:                                     ; preds = %loop.latch173
  br label %loop.latch179

loop.latch179:                                    ; preds = %loop.exit178
  %add181 = add i128 %id.1, 1
  %slt183 = icmp slt i128 %add181, 4
  br i1 %slt183, label %loop.body132, label %loop.exit184

loop.exit184:                                     ; preds = %loop.latch179
  br label %if.exit185

if.exit185:                                       ; preds = %loop.exit184, %loop.exit131
  br label %if.exit186

if.exit186:                                       ; preds = %if.exit185, %if.false71
  %rshift191 = lshr i128 %fp12cyclotomicexp.e.read_arg_inner, %i.2
  %and = and i128 %rshift191, 1
  %eq192 = icmp eq i128 %and, 1
  br i1 %eq192, label %if.true187, label %if.false188

if.true187:                                       ; preds = %if.exit186
  %sgt196 = icmp sgt i128 %i.2, 0
  br i1 %sgt196, label %if.true193, label %if.false194

if.false188:                                      ; preds = %if.exit186
  br label %if.exit519

if.true193:                                       ; preds = %if.true187
  %call200 = call %struct_template_circuit_fp12cyclotomicdecompress* @fn_template_build_fp12cyclotomicdecompress(i128 %fp12cyclotomicexp.n.read_arg_inner, i128 %fp12cyclotomicexp.k.read_arg_inner, [256 x i128]* %fp12cyclotomicexp.p.read_arg_inner)
  %ptr_getter201 = load [256 x %struct_template_circuit_fp12cyclotomicdecompress*]*, [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2, align 8
  %Dpow2203 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicdecompress*], [256 x %struct_template_circuit_fp12cyclotomicdecompress*]* %ptr_getter201, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12cyclotomicdecompress* %call200, %struct_template_circuit_fp12cyclotomicdecompress** %Dpow2203, align 8
  br label %loop.body204

if.false194:                                      ; preds = %if.true187
  br label %if.exit257

loop.body204:                                     ; preds = %loop.latch251, %if.true193
  %id.2 = phi i128 [ 0, %if.true193 ], [ %add253, %loop.latch251 ]
  br label %loop.body205

loop.body205:                                     ; preds = %loop.latch245, %loop.body204
  %eps.3 = phi i128 [ 0, %loop.body204 ], [ %add247, %loop.latch245 ]
  br label %loop.body206

loop.body206:                                     ; preds = %loop.latch238, %loop.body205
  %j.3 = phi i128 [ 0, %loop.body205 ], [ %add240, %loop.latch238 ]
  %pow2207 = load [256 x %struct_template_circuit_fp12cyclotomicsquare*]*, [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2, align 8
  %array_getter209 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicsquare*], [256 x %struct_template_circuit_fp12cyclotomicsquare*]* %pow2207, i128 0, i128 %i.2
  %pow2210 = load %struct_template_circuit_fp12cyclotomicsquare*, %struct_template_circuit_fp12cyclotomicsquare** %array_getter209, align 8
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicsquare, %struct_template_circuit_fp12cyclotomicsquare* %pow2210, i32 0, i32 4
  %fp12cyclotomicsquare.out.read_output_outter212 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter211, align 8
  %array_getter216 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicsquare.out.read_output_outter212, i128 0, i128 %id.2, i128 %eps.3, i128 %j.3
  %pow2217 = load i128, i128* %array_getter216, align 4
  %Dpow2218 = load [256 x %struct_template_circuit_fp12cyclotomicdecompress*]*, [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2, align 8
  %array_getter220 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicdecompress*], [256 x %struct_template_circuit_fp12cyclotomicdecompress*]* %Dpow2218, i128 0, i128 %curid.0
  %Dpow2221 = load %struct_template_circuit_fp12cyclotomicdecompress*, %struct_template_circuit_fp12cyclotomicdecompress** %array_getter220, align 8
  %struct_getter222 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %Dpow2221, i32 0, i32 3
  %fp12cyclotomicdecompress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter222, align 8
  %array_getter226 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicdecompress.in.read_input_outter, i128 0, i128 %id.2, i128 %eps.3, i128 %j.3
  %Dpow2227 = load i128, i128* %array_getter226, align 4
  call void @fn_intrinsic_utils_constraint(i128 %Dpow2227, i128 %pow2217, i1* @constraint.897)
  %ptr_getter228 = load [256 x %struct_template_circuit_fp12cyclotomicdecompress*]*, [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2, align 8
  %array_getter230 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicdecompress*], [256 x %struct_template_circuit_fp12cyclotomicdecompress*]* %ptr_getter228, i128 0, i128 %curid.0
  %Dpow2231 = load %struct_template_circuit_fp12cyclotomicdecompress*, %struct_template_circuit_fp12cyclotomicdecompress** %array_getter230, align 8
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %Dpow2231, i32 0, i32 3
  %fp12cyclotomicdecompress.in.read_input_outter233 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter232, align 8
  %Dpow2237 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicdecompress.in.read_input_outter233, i128 0, i128 %id.2, i128 %eps.3, i128 %j.3
  store i128 %pow2217, i128* %Dpow2237, align 4
  br label %loop.latch238

loop.latch238:                                    ; preds = %loop.body206
  %add240 = add i128 %j.3, 1
  %slt243 = icmp slt i128 %add240, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt243, label %loop.body206, label %loop.exit244

loop.exit244:                                     ; preds = %loop.latch238
  br label %loop.latch245

loop.latch245:                                    ; preds = %loop.exit244
  %add247 = add i128 %eps.3, 1
  %slt249 = icmp slt i128 %add247, 2
  br i1 %slt249, label %loop.body205, label %loop.exit250

loop.exit250:                                     ; preds = %loop.latch245
  br label %loop.latch251

loop.latch251:                                    ; preds = %loop.exit250
  %add253 = add i128 %id.2, 1
  %slt255 = icmp slt i128 %add253, 4
  br i1 %slt255, label %loop.body204, label %loop.exit256

loop.exit256:                                     ; preds = %loop.latch251
  br label %if.exit257

if.exit257:                                       ; preds = %loop.exit256, %if.false194
  %eq261 = icmp eq i128 %curid.0, 0
  br i1 %eq261, label %if.true258, label %if.false259

if.true258:                                       ; preds = %if.exit257
  %eq265 = icmp eq i128 %i.2, 0
  br i1 %eq265, label %if.true262, label %if.false263

if.false259:                                      ; preds = %if.exit257
  %call352 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12cyclotomicexp.n.read_arg_inner, i128 %fp12cyclotomicexp.k.read_arg_inner, [256 x i128]* %fp12cyclotomicexp.p.read_arg_inner)
  %ptr_getter353 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %mult355 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter353, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12multiply* %call352, %struct_template_circuit_fp12multiply** %mult355, align 8
  br label %loop.body356

if.true262:                                       ; preds = %if.true258
  br label %loop.body266

if.false263:                                      ; preds = %if.true258
  br label %loop.body305

loop.body266:                                     ; preds = %loop.latch299, %if.true262
  %id.3 = phi i128 [ 0, %if.true262 ], [ %add301, %loop.latch299 ]
  br label %loop.body267

loop.body267:                                     ; preds = %loop.latch293, %loop.body266
  %eps.4 = phi i128 [ 0, %loop.body266 ], [ %add295, %loop.latch293 ]
  br label %loop.body268

loop.body268:                                     ; preds = %loop.latch286, %loop.body267
  %j.4 = phi i128 [ 0, %loop.body267 ], [ %add288, %loop.latch286 ]
  %in269 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.in.declare_input, align 8
  %array_getter273 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in269, i128 0, i128 %id.3, i128 %eps.4, i128 %j.4
  %in274 = load i128, i128* %array_getter273, align 4
  %first275 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %array_getter279 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first275, i128 0, i128 %id.3, i128 %eps.4, i128 %j.4
  %first280 = load i128, i128* %array_getter279, align 4
  call void @fn_intrinsic_utils_constraint(i128 %first280, i128 %in274, i1* @constraint.898)
  %ptr_getter281 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %first285 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter281, i128 0, i128 %id.3, i128 %eps.4, i128 %j.4
  store i128 %in274, i128* %first285, align 4
  br label %loop.latch286

loop.latch286:                                    ; preds = %loop.body268
  %add288 = add i128 %j.4, 1
  %slt291 = icmp slt i128 %add288, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt291, label %loop.body268, label %loop.exit292

loop.exit292:                                     ; preds = %loop.latch286
  br label %loop.latch293

loop.latch293:                                    ; preds = %loop.exit292
  %add295 = add i128 %eps.4, 1
  %slt297 = icmp slt i128 %add295, 2
  br i1 %slt297, label %loop.body267, label %loop.exit298

loop.exit298:                                     ; preds = %loop.latch293
  br label %loop.latch299

loop.latch299:                                    ; preds = %loop.exit298
  %add301 = add i128 %id.3, 1
  %slt303 = icmp slt i128 %add301, 6
  br i1 %slt303, label %loop.body266, label %loop.exit304

loop.exit304:                                     ; preds = %loop.latch299
  br label %if.exit348

loop.body305:                                     ; preds = %loop.latch342, %if.false263
  %id.4 = phi i128 [ 0, %if.false263 ], [ %add344, %loop.latch342 ]
  br label %loop.body306

loop.body306:                                     ; preds = %loop.latch336, %loop.body305
  %eps.5 = phi i128 [ 0, %loop.body305 ], [ %add338, %loop.latch336 ]
  br label %loop.body307

loop.body307:                                     ; preds = %loop.latch329, %loop.body306
  %j.5 = phi i128 [ 0, %loop.body306 ], [ %add331, %loop.latch329 ]
  %Dpow2308 = load [256 x %struct_template_circuit_fp12cyclotomicdecompress*]*, [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2, align 8
  %array_getter310 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicdecompress*], [256 x %struct_template_circuit_fp12cyclotomicdecompress*]* %Dpow2308, i128 0, i128 %curid.0
  %Dpow2311 = load %struct_template_circuit_fp12cyclotomicdecompress*, %struct_template_circuit_fp12cyclotomicdecompress** %array_getter310, align 8
  %struct_getter312 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %Dpow2311, i32 0, i32 7
  %fp12cyclotomicdecompress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter312, align 8
  %array_getter316 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicdecompress.out.read_output_outter, i128 0, i128 %id.4, i128 %eps.5, i128 %j.5
  %Dpow2317 = load i128, i128* %array_getter316, align 4
  %first318 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %array_getter322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first318, i128 0, i128 %id.4, i128 %eps.5, i128 %j.5
  %first323 = load i128, i128* %array_getter322, align 4
  call void @fn_intrinsic_utils_constraint(i128 %first323, i128 %Dpow2317, i1* @constraint.899)
  %ptr_getter324 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %first328 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter324, i128 0, i128 %id.4, i128 %eps.5, i128 %j.5
  store i128 %Dpow2317, i128* %first328, align 4
  br label %loop.latch329

loop.latch329:                                    ; preds = %loop.body307
  %add331 = add i128 %j.5, 1
  %slt334 = icmp slt i128 %add331, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt334, label %loop.body307, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch329
  br label %loop.latch336

loop.latch336:                                    ; preds = %loop.exit335
  %add338 = add i128 %eps.5, 1
  %slt340 = icmp slt i128 %add338, 2
  br i1 %slt340, label %loop.body306, label %loop.exit341

loop.exit341:                                     ; preds = %loop.latch336
  br label %loop.latch342

loop.latch342:                                    ; preds = %loop.exit341
  %add344 = add i128 %id.4, 1
  %slt346 = icmp slt i128 %add344, 6
  br i1 %slt346, label %loop.body305, label %loop.exit347

loop.exit347:                                     ; preds = %loop.latch342
  br label %if.exit348

if.exit348:                                       ; preds = %loop.exit347, %loop.exit304
  br label %if.exit516

loop.body356:                                     ; preds = %loop.latch403, %if.false259
  %id.5 = phi i128 [ 0, %if.false259 ], [ %add405, %loop.latch403 ]
  br label %loop.body357

loop.body357:                                     ; preds = %loop.latch397, %loop.body356
  %eps.6 = phi i128 [ 0, %loop.body356 ], [ %add399, %loop.latch397 ]
  br label %loop.body358

loop.body358:                                     ; preds = %loop.latch390, %loop.body357
  %j.6 = phi i128 [ 0, %loop.body357 ], [ %add392, %loop.latch390 ]
  %Dpow2359 = load [256 x %struct_template_circuit_fp12cyclotomicdecompress*]*, [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2, align 8
  %array_getter361 = getelementptr inbounds [256 x %struct_template_circuit_fp12cyclotomicdecompress*], [256 x %struct_template_circuit_fp12cyclotomicdecompress*]* %Dpow2359, i128 0, i128 %curid.0
  %Dpow2362 = load %struct_template_circuit_fp12cyclotomicdecompress*, %struct_template_circuit_fp12cyclotomicdecompress** %array_getter361, align 8
  %struct_getter363 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicdecompress, %struct_template_circuit_fp12cyclotomicdecompress* %Dpow2362, i32 0, i32 7
  %fp12cyclotomicdecompress.out.read_output_outter364 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter363, align 8
  %array_getter368 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicdecompress.out.read_output_outter364, i128 0, i128 %id.5, i128 %eps.6, i128 %j.6
  %Dpow2369 = load i128, i128* %array_getter368, align 4
  %mult370 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter372 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult370, i128 0, i128 %curid.0
  %mult373 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter372, align 8
  %struct_getter374 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult373, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter374, align 8
  %array_getter378 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %id.5, i128 %eps.6, i128 %j.6
  %mult379 = load i128, i128* %array_getter378, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult379, i128 %Dpow2369, i1* @constraint.900)
  %ptr_getter380 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter382 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter380, i128 0, i128 %curid.0
  %mult383 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter382, align 8
  %struct_getter384 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult383, i32 0, i32 3
  %fp12multiply.a.read_input_outter385 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter384, align 8
  %mult389 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter385, i128 0, i128 %id.5, i128 %eps.6, i128 %j.6
  store i128 %Dpow2369, i128* %mult389, align 4
  br label %loop.latch390

loop.latch390:                                    ; preds = %loop.body358
  %add392 = add i128 %j.6, 1
  %slt395 = icmp slt i128 %add392, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt395, label %loop.body358, label %loop.exit396

loop.exit396:                                     ; preds = %loop.latch390
  br label %loop.latch397

loop.latch397:                                    ; preds = %loop.exit396
  %add399 = add i128 %eps.6, 1
  %slt401 = icmp slt i128 %add399, 2
  br i1 %slt401, label %loop.body357, label %loop.exit402

loop.exit402:                                     ; preds = %loop.latch397
  br label %loop.latch403

loop.latch403:                                    ; preds = %loop.exit402
  %add405 = add i128 %id.5, 1
  %slt407 = icmp slt i128 %add405, 6
  br i1 %slt407, label %loop.body356, label %loop.exit408

loop.exit408:                                     ; preds = %loop.latch403
  %eq412 = icmp eq i128 %curid.0, 1
  br i1 %eq412, label %if.true409, label %if.false410

if.true409:                                       ; preds = %loop.exit408
  br label %loop.body413

if.false410:                                      ; preds = %loop.exit408
  br label %loop.body461

loop.body413:                                     ; preds = %loop.latch455, %if.true409
  %id.6 = phi i128 [ 0, %if.true409 ], [ %add457, %loop.latch455 ]
  br label %loop.body414

loop.body414:                                     ; preds = %loop.latch449, %loop.body413
  %eps.7 = phi i128 [ 0, %loop.body413 ], [ %add451, %loop.latch449 ]
  br label %loop.body415

loop.body415:                                     ; preds = %loop.latch442, %loop.body414
  %j.7 = phi i128 [ 0, %loop.body414 ], [ %add444, %loop.latch442 ]
  %first416 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %array_getter420 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first416, i128 0, i128 %id.6, i128 %eps.7, i128 %j.7
  %first421 = load i128, i128* %array_getter420, align 4
  %mult422 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter424 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult422, i128 0, i128 %curid.0
  %mult425 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter424, align 8
  %struct_getter426 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult425, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter426, align 8
  %array_getter430 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %id.6, i128 %eps.7, i128 %j.7
  %mult431 = load i128, i128* %array_getter430, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult431, i128 %first421, i1* @constraint.901)
  %ptr_getter432 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter434 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter432, i128 0, i128 %curid.0
  %mult435 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter434, align 8
  %struct_getter436 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult435, i32 0, i32 4
  %fp12multiply.b.read_input_outter437 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter436, align 8
  %mult441 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter437, i128 0, i128 %id.6, i128 %eps.7, i128 %j.7
  store i128 %first421, i128* %mult441, align 4
  br label %loop.latch442

loop.latch442:                                    ; preds = %loop.body415
  %add444 = add i128 %j.7, 1
  %slt447 = icmp slt i128 %add444, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt447, label %loop.body415, label %loop.exit448

loop.exit448:                                     ; preds = %loop.latch442
  br label %loop.latch449

loop.latch449:                                    ; preds = %loop.exit448
  %add451 = add i128 %eps.7, 1
  %slt453 = icmp slt i128 %add451, 2
  br i1 %slt453, label %loop.body414, label %loop.exit454

loop.exit454:                                     ; preds = %loop.latch449
  br label %loop.latch455

loop.latch455:                                    ; preds = %loop.exit454
  %add457 = add i128 %id.6, 1
  %slt459 = icmp slt i128 %add457, 6
  br i1 %slt459, label %loop.body413, label %loop.exit460

loop.exit460:                                     ; preds = %loop.latch455
  br label %if.exit515

loop.body461:                                     ; preds = %loop.latch509, %if.false410
  %id.7 = phi i128 [ 0, %if.false410 ], [ %add511, %loop.latch509 ]
  br label %loop.body462

loop.body462:                                     ; preds = %loop.latch503, %loop.body461
  %eps.8 = phi i128 [ 0, %loop.body461 ], [ %add505, %loop.latch503 ]
  br label %loop.body463

loop.body463:                                     ; preds = %loop.latch496, %loop.body462
  %j.8 = phi i128 [ 0, %loop.body462 ], [ %add498, %loop.latch496 ]
  %mult464 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %sub466 = sub i128 %curid.0, 1
  %array_getter467 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult464, i128 0, i128 %sub466
  %mult468 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter467, align 8
  %struct_getter469 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult468, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter469, align 8
  %array_getter473 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %id.7, i128 %eps.8, i128 %j.8
  %mult474 = load i128, i128* %array_getter473, align 4
  %mult475 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter477 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult475, i128 0, i128 %curid.0
  %mult478 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter477, align 8
  %struct_getter479 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult478, i32 0, i32 4
  %fp12multiply.b.read_input_outter480 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter479, align 8
  %array_getter484 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter480, i128 0, i128 %id.7, i128 %eps.8, i128 %j.8
  %mult485 = load i128, i128* %array_getter484, align 4
  call void @fn_intrinsic_utils_constraint(i128 %mult485, i128 %mult474, i1* @constraint.902)
  %ptr_getter486 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter488 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %ptr_getter486, i128 0, i128 %curid.0
  %mult489 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter488, align 8
  %struct_getter490 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult489, i32 0, i32 4
  %fp12multiply.b.read_input_outter491 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter490, align 8
  %mult495 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter491, i128 0, i128 %id.7, i128 %eps.8, i128 %j.8
  store i128 %mult474, i128* %mult495, align 4
  br label %loop.latch496

loop.latch496:                                    ; preds = %loop.body463
  %add498 = add i128 %j.8, 1
  %slt501 = icmp slt i128 %add498, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt501, label %loop.body463, label %loop.exit502

loop.exit502:                                     ; preds = %loop.latch496
  br label %loop.latch503

loop.latch503:                                    ; preds = %loop.exit502
  %add505 = add i128 %eps.8, 1
  %slt507 = icmp slt i128 %add505, 2
  br i1 %slt507, label %loop.body462, label %loop.exit508

loop.exit508:                                     ; preds = %loop.latch503
  br label %loop.latch509

loop.latch509:                                    ; preds = %loop.exit508
  %add511 = add i128 %id.7, 1
  %slt513 = icmp slt i128 %add511, 6
  br i1 %slt513, label %loop.body461, label %loop.exit514

loop.exit514:                                     ; preds = %loop.latch509
  br label %if.exit515

if.exit515:                                       ; preds = %loop.exit514, %loop.exit460
  br label %if.exit516

if.exit516:                                       ; preds = %if.exit515, %if.exit348
  %add518 = add i128 %curid.0, 1
  br label %if.exit519

if.exit519:                                       ; preds = %if.exit516, %if.false188
  %curid.1 = phi i128 [ %add518, %if.exit516 ], [ %curid.0, %if.false188 ]
  br label %loop.latch520

loop.latch520:                                    ; preds = %if.exit519
  %add522 = add i128 %i.2, 1
  %slt525 = icmp slt i128 %add522, %add24
  br i1 %slt525, label %loop.body69, label %loop.exit526

loop.exit526:                                     ; preds = %loop.latch520
  %sub528 = sub i128 %curid.1, 1
  %eq532 = icmp eq i128 %sub528, 0
  br i1 %eq532, label %if.true529, label %if.false530

if.true529:                                       ; preds = %loop.exit526
  br label %loop.body533

if.false530:                                      ; preds = %loop.exit526
  br label %loop.body572

loop.body533:                                     ; preds = %loop.latch566, %if.true529
  %id.8 = phi i128 [ 0, %if.true529 ], [ %add568, %loop.latch566 ]
  br label %loop.body534

loop.body534:                                     ; preds = %loop.latch560, %loop.body533
  %eps.9 = phi i128 [ 0, %loop.body533 ], [ %add562, %loop.latch560 ]
  br label %loop.body535

loop.body535:                                     ; preds = %loop.latch553, %loop.body534
  %j.9 = phi i128 [ 0, %loop.body534 ], [ %add555, %loop.latch553 ]
  %first536 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %array_getter540 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first536, i128 0, i128 %id.8, i128 %eps.9, i128 %j.9
  %first541 = load i128, i128* %array_getter540, align 4
  %out542 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output, align 8
  %array_getter546 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out542, i128 0, i128 %id.8, i128 %eps.9, i128 %j.9
  %out547 = load i128, i128* %array_getter546, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out547, i128 %first541, i1* @constraint.903)
  %ptr_getter548 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output, align 8
  %out552 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter548, i128 0, i128 %id.8, i128 %eps.9, i128 %j.9
  store i128 %first541, i128* %out552, align 4
  br label %loop.latch553

loop.latch553:                                    ; preds = %loop.body535
  %add555 = add i128 %j.9, 1
  %slt558 = icmp slt i128 %add555, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt558, label %loop.body535, label %loop.exit559

loop.exit559:                                     ; preds = %loop.latch553
  br label %loop.latch560

loop.latch560:                                    ; preds = %loop.exit559
  %add562 = add i128 %eps.9, 1
  %slt564 = icmp slt i128 %add562, 2
  br i1 %slt564, label %loop.body534, label %loop.exit565

loop.exit565:                                     ; preds = %loop.latch560
  br label %loop.latch566

loop.latch566:                                    ; preds = %loop.exit565
  %add568 = add i128 %id.8, 1
  %slt570 = icmp slt i128 %add568, 6
  br i1 %slt570, label %loop.body533, label %loop.exit571

loop.exit571:                                     ; preds = %loop.latch566
  br label %if.exit616

loop.body572:                                     ; preds = %loop.latch610, %if.false530
  %id.9 = phi i128 [ 0, %if.false530 ], [ %add612, %loop.latch610 ]
  br label %loop.body573

loop.body573:                                     ; preds = %loop.latch604, %loop.body572
  %eps.10 = phi i128 [ 0, %loop.body572 ], [ %add606, %loop.latch604 ]
  br label %loop.body574

loop.body574:                                     ; preds = %loop.latch597, %loop.body573
  %j.10 = phi i128 [ 0, %loop.body573 ], [ %add599, %loop.latch597 ]
  %mult575 = load [256 x %struct_template_circuit_fp12multiply*]*, [256 x %struct_template_circuit_fp12multiply*]** %mult, align 8
  %array_getter577 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult575, i128 0, i128 %sub528
  %mult578 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter577, align 8
  %struct_getter579 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult578, i32 0, i32 5
  %fp12multiply.out.read_output_outter580 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter579, align 8
  %array_getter584 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter580, i128 0, i128 %id.9, i128 %eps.10, i128 %j.10
  %mult585 = load i128, i128* %array_getter584, align 4
  %out586 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output, align 8
  %array_getter590 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out586, i128 0, i128 %id.9, i128 %eps.10, i128 %j.10
  %out591 = load i128, i128* %array_getter590, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out591, i128 %mult585, i1* @constraint.904)
  %ptr_getter592 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output, align 8
  %out596 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter592, i128 0, i128 %id.9, i128 %eps.10, i128 %j.10
  store i128 %mult585, i128* %out596, align 4
  br label %loop.latch597

loop.latch597:                                    ; preds = %loop.body574
  %add599 = add i128 %j.10, 1
  %slt602 = icmp slt i128 %add599, %fp12cyclotomicexp.k.read_arg_inner
  br i1 %slt602, label %loop.body574, label %loop.exit603

loop.exit603:                                     ; preds = %loop.latch597
  br label %loop.latch604

loop.latch604:                                    ; preds = %loop.exit603
  %add606 = add i128 %eps.10, 1
  %slt608 = icmp slt i128 %add606, 2
  br i1 %slt608, label %loop.body573, label %loop.exit609

loop.exit609:                                     ; preds = %loop.latch604
  br label %loop.latch610

loop.latch610:                                    ; preds = %loop.exit609
  %add612 = add i128 %id.9, 1
  %slt614 = icmp slt i128 %add612, 6
  br i1 %slt614, label %loop.body572, label %loop.exit615

loop.exit615:                                     ; preds = %loop.latch610
  br label %if.exit616

if.exit616:                                       ; preds = %loop.exit615, %loop.exit571
  br label %arraydim

arraydim:                                         ; preds = %if.exit616
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %fp12cyclotomicexp.k.read_arg_inner)
  %ptr_cast617 = bitcast [256 x %struct_template_circuit_fp12cyclotomicdecompress*]** %Dpow2 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast617, i128 %add24)
  %ptr_cast618 = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast618, i128 6, i128 2, i128 %fp12cyclotomicexp.k.read_arg_inner)
  %ptr_cast619 = bitcast [256 x %struct_template_circuit_fp12cyclotomicsquare*]** %pow2 to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast619, i128 %add24)
  %ptr_cast620 = bitcast [256 x %struct_template_circuit_fp12multiply*]** %mult to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast620, i128 %add24)
  %ptr_cast621 = bitcast [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast621, i128 6, i128 2, i128 %fp12cyclotomicexp.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %first622 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.declare_inter, align 8
  %fp12cyclotomicexp.first.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %first622, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.first.write_inter_inner, align 8
  %out623 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.declare_output, align 8
  %fp12cyclotomicexp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out623, [256 x [256 x [256 x i128]]]** %fp12cyclotomicexp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12cyclotomicexp* @fn_template_build_fp12cyclotomicexp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_fp12cyclotomicexp = alloca %struct_template_circuit_fp12cyclotomicexp, align 8
  %fp12cyclotomicexp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %struct_template_circuit_fp12cyclotomicexp, i32 0, i32 0
  store i128 %0, i128* %fp12cyclotomicexp.n.write_arg_inner, align 4
  %fp12cyclotomicexp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %struct_template_circuit_fp12cyclotomicexp, i32 0, i32 1
  store i128 %1, i128* %fp12cyclotomicexp.k.write_arg_inner, align 4
  %fp12cyclotomicexp.e.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %struct_template_circuit_fp12cyclotomicexp, i32 0, i32 2
  store i128 %2, i128* %fp12cyclotomicexp.e.write_arg_inner, align 4
  %fp12cyclotomicexp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %struct_template_circuit_fp12cyclotomicexp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp12cyclotomicexp.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12cyclotomicexp* %struct_template_circuit_fp12cyclotomicexp
}

define void @fn_template_init_finalexphardpart(%struct_template_circuit_finalexphardpart* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %0, i32 0, i32 0
  %finalexphardpart.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %0, i32 0, i32 1
  %finalexphardpart.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %0, i32 0, i32 2
  %finalexphardpart.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %0, i32 0, i32 3
  %finalexphardpart.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %finalexphardpart.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %finalexphardpart.in.read_input_inner, [256 x [256 x [256 x i128]]]** %finalexphardpart.in.declare_input, align 8
  %id4 = call i128 @fn_intrinsic_utils_init()
  %eps5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %finalexphardpart.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %finalexphardpart.out.declare_output, align 8
  %x7 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @get_BLS12_381_parameter()
  %add = add i128 %call, 1
  %sdiv = sdiv i128 %add, 3
  %call11 = call %struct_template_circuit_fp12cyclotomicexp* @fn_template_build_fp12cyclotomicexp(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 %sdiv, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch41, %entry
  %id.0 = phi i128 [ 0, %entry ], [ %add43, %loop.latch41 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch35, %loop.body
  %eps.0 = phi i128 [ 0, %loop.body ], [ %add37, %loop.latch35 ]
  br label %loop.body13

loop.body13:                                      ; preds = %loop.latch, %loop.body12
  %j.0 = phi i128 [ 0, %loop.body12 ], [ %add32, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexphardpart.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %in17 = load i128, i128* %array_getter, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call11, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter19, align 8
  %array_getter23 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %pow124 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow124, i128 %in17, i1* @constraint.905)
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call11, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter26 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter25, align 8
  %pow130 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter26, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  store i128 %in17, i128* %pow130, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body13
  %add32 = add i128 %j.0, 1
  %slt = icmp slt i128 %add32, %finalexphardpart.k.read_arg_inner
  br i1 %slt, label %loop.body13, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch35

loop.latch35:                                     ; preds = %loop.exit
  %add37 = add i128 %eps.0, 1
  %slt39 = icmp slt i128 %add37, 2
  br i1 %slt39, label %loop.body12, label %loop.exit40

loop.exit40:                                      ; preds = %loop.latch35
  br label %loop.latch41

loop.latch41:                                     ; preds = %loop.exit40
  %add43 = add i128 %id.0, 1
  %slt45 = icmp slt i128 %add43, 6
  br i1 %slt45, label %loop.body, label %loop.exit46

loop.exit46:                                      ; preds = %loop.latch41
  %add50 = add i128 %call, 1
  %call52 = call %struct_template_circuit_fp12cyclotomicexp* @fn_template_build_fp12cyclotomicexp(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 %add50, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch91, %loop.exit46
  %id.1 = phi i128 [ 0, %loop.exit46 ], [ %add93, %loop.latch91 ]
  br label %loop.body54

loop.body54:                                      ; preds = %loop.latch85, %loop.body53
  %eps.1 = phi i128 [ 0, %loop.body53 ], [ %add87, %loop.latch85 ]
  br label %loop.body55

loop.body55:                                      ; preds = %loop.latch78, %loop.body54
  %j.1 = phi i128 [ 0, %loop.body54 ], [ %add80, %loop.latch78 ]
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call11, i32 0, i32 6
  %fp12cyclotomicexp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter57, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.out.read_output_outter, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %pow162 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call52, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter65 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter64, align 8
  %array_getter69 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter65, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %pow270 = load i128, i128* %array_getter69, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow270, i128 %pow162, i1* @constraint.906)
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call52, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter73 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter72, align 8
  %pow277 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter73, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  store i128 %pow162, i128* %pow277, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body55
  %add80 = add i128 %j.1, 1
  %slt83 = icmp slt i128 %add80, %finalexphardpart.k.read_arg_inner
  br i1 %slt83, label %loop.body55, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  br label %loop.latch85

loop.latch85:                                     ; preds = %loop.exit84
  %add87 = add i128 %eps.1, 1
  %slt89 = icmp slt i128 %add87, 2
  br i1 %slt89, label %loop.body54, label %loop.exit90

loop.exit90:                                      ; preds = %loop.latch85
  br label %loop.latch91

loop.latch91:                                     ; preds = %loop.exit90
  %add93 = add i128 %id.1, 1
  %slt95 = icmp slt i128 %add93, 6
  br i1 %slt95, label %loop.body53, label %loop.exit96

loop.exit96:                                      ; preds = %loop.latch91
  %call99 = call %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 6)
  br label %loop.body100

loop.body100:                                     ; preds = %loop.latch138, %loop.exit96
  %id.2 = phi i128 [ 0, %loop.exit96 ], [ %add140, %loop.latch138 ]
  br label %loop.body101

loop.body101:                                     ; preds = %loop.latch132, %loop.body100
  %eps.2 = phi i128 [ 0, %loop.body100 ], [ %add134, %loop.latch132 ]
  br label %loop.body102

loop.body102:                                     ; preds = %loop.latch125, %loop.body101
  %j.2 = phi i128 [ 0, %loop.body101 ], [ %add127, %loop.latch125 ]
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call52, i32 0, i32 6
  %fp12cyclotomicexp.out.read_output_outter105 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter104, align 8
  %array_getter109 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.out.read_output_outter105, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %pow2110 = load i128, i128* %array_getter109, align 4
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call99, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter112, align 8
  %array_getter116 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %pow3117 = load i128, i128* %array_getter116, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow3117, i128 %pow2110, i1* @constraint.907)
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call99, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter120 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter119, align 8
  %pow3124 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter120, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  store i128 %pow2110, i128* %pow3124, align 4
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.body102
  %add127 = add i128 %j.2, 1
  %slt130 = icmp slt i128 %add127, %finalexphardpart.k.read_arg_inner
  br i1 %slt130, label %loop.body102, label %loop.exit131

loop.exit131:                                     ; preds = %loop.latch125
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.exit131
  %add134 = add i128 %eps.2, 1
  %slt136 = icmp slt i128 %add134, 2
  br i1 %slt136, label %loop.body101, label %loop.exit137

loop.exit137:                                     ; preds = %loop.latch132
  br label %loop.latch138

loop.latch138:                                    ; preds = %loop.exit137
  %add140 = add i128 %id.2, 1
  %slt142 = icmp slt i128 %add140, 6
  br i1 %slt142, label %loop.body100, label %loop.exit143

loop.exit143:                                     ; preds = %loop.latch138
  %call148 = call %struct_template_circuit_fp12cyclotomicexp* @fn_template_build_fp12cyclotomicexp(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 %call, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch187, %loop.exit143
  %id.3 = phi i128 [ 0, %loop.exit143 ], [ %add189, %loop.latch187 ]
  br label %loop.body150

loop.body150:                                     ; preds = %loop.latch181, %loop.body149
  %eps.3 = phi i128 [ 0, %loop.body149 ], [ %add183, %loop.latch181 ]
  br label %loop.body151

loop.body151:                                     ; preds = %loop.latch174, %loop.body150
  %j.3 = phi i128 [ 0, %loop.body150 ], [ %add176, %loop.latch174 ]
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call99, i32 0, i32 4
  %fp12frobeniusmap.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter153, align 8
  %array_getter157 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.out.read_output_outter, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %pow3158 = load i128, i128* %array_getter157, align 4
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call148, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter161 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter160, align 8
  %array_getter165 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter161, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %pow4166 = load i128, i128* %array_getter165, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow4166, i128 %pow3158, i1* @constraint.908)
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call148, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter169 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter168, align 8
  %pow4173 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter169, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  store i128 %pow3158, i128* %pow4173, align 4
  br label %loop.latch174

loop.latch174:                                    ; preds = %loop.body151
  %add176 = add i128 %j.3, 1
  %slt179 = icmp slt i128 %add176, %finalexphardpart.k.read_arg_inner
  br i1 %slt179, label %loop.body151, label %loop.exit180

loop.exit180:                                     ; preds = %loop.latch174
  br label %loop.latch181

loop.latch181:                                    ; preds = %loop.exit180
  %add183 = add i128 %eps.3, 1
  %slt185 = icmp slt i128 %add183, 2
  br i1 %slt185, label %loop.body150, label %loop.exit186

loop.exit186:                                     ; preds = %loop.latch181
  br label %loop.latch187

loop.latch187:                                    ; preds = %loop.exit186
  %add189 = add i128 %id.3, 1
  %slt191 = icmp slt i128 %add189, 6
  br i1 %slt191, label %loop.body149, label %loop.exit192

loop.exit192:                                     ; preds = %loop.latch187
  %call195 = call %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 1)
  br label %loop.body196

loop.body196:                                     ; preds = %loop.latch235, %loop.exit192
  %id.4 = phi i128 [ 0, %loop.exit192 ], [ %add237, %loop.latch235 ]
  br label %loop.body197

loop.body197:                                     ; preds = %loop.latch229, %loop.body196
  %eps.4 = phi i128 [ 0, %loop.body196 ], [ %add231, %loop.latch229 ]
  br label %loop.body198

loop.body198:                                     ; preds = %loop.latch222, %loop.body197
  %j.4 = phi i128 [ 0, %loop.body197 ], [ %add224, %loop.latch222 ]
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call52, i32 0, i32 6
  %fp12cyclotomicexp.out.read_output_outter201 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter200, align 8
  %array_getter205 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.out.read_output_outter201, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %pow2206 = load i128, i128* %array_getter205, align 4
  %struct_getter208 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call195, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter209 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter208, align 8
  %array_getter213 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter209, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %pow5214 = load i128, i128* %array_getter213, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow5214, i128 %pow2206, i1* @constraint.909)
  %struct_getter216 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call195, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter217 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter216, align 8
  %pow5221 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter217, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  store i128 %pow2206, i128* %pow5221, align 4
  br label %loop.latch222

loop.latch222:                                    ; preds = %loop.body198
  %add224 = add i128 %j.4, 1
  %slt227 = icmp slt i128 %add224, %finalexphardpart.k.read_arg_inner
  br i1 %slt227, label %loop.body198, label %loop.exit228

loop.exit228:                                     ; preds = %loop.latch222
  br label %loop.latch229

loop.latch229:                                    ; preds = %loop.exit228
  %add231 = add i128 %eps.4, 1
  %slt233 = icmp slt i128 %add231, 2
  br i1 %slt233, label %loop.body197, label %loop.exit234

loop.exit234:                                     ; preds = %loop.latch229
  br label %loop.latch235

loop.latch235:                                    ; preds = %loop.exit234
  %add237 = add i128 %id.4, 1
  %slt239 = icmp slt i128 %add237, 6
  br i1 %slt239, label %loop.body196, label %loop.exit240

loop.exit240:                                     ; preds = %loop.latch235
  %call244 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body245

loop.body245:                                     ; preds = %loop.latch305, %loop.exit240
  %id.5 = phi i128 [ 0, %loop.exit240 ], [ %add307, %loop.latch305 ]
  br label %loop.body246

loop.body246:                                     ; preds = %loop.latch299, %loop.body245
  %eps.5 = phi i128 [ 0, %loop.body245 ], [ %add301, %loop.latch299 ]
  br label %loop.body247

loop.body247:                                     ; preds = %loop.latch292, %loop.body246
  %j.5 = phi i128 [ 0, %loop.body246 ], [ %add294, %loop.latch292 ]
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call148, i32 0, i32 6
  %fp12cyclotomicexp.out.read_output_outter250 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter249, align 8
  %array_getter254 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.out.read_output_outter250, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %pow4255 = load i128, i128* %array_getter254, align 4
  %struct_getter257 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter257, align 8
  %array_getter261 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %pow6262 = load i128, i128* %array_getter261, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow6262, i128 %pow4255, i1* @constraint.910)
  %struct_getter264 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 3
  %fp12multiply.a.read_input_outter265 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter264, align 8
  %pow6269 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter265, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  store i128 %pow4255, i128* %pow6269, align 4
  %struct_getter271 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call195, i32 0, i32 4
  %fp12frobeniusmap.out.read_output_outter272 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter271, align 8
  %array_getter276 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.out.read_output_outter272, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %pow5277 = load i128, i128* %array_getter276, align 4
  %struct_getter279 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter279, align 8
  %array_getter283 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %pow6284 = load i128, i128* %array_getter283, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow6284, i128 %pow5277, i1* @constraint.911)
  %struct_getter286 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 4
  %fp12multiply.b.read_input_outter287 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter286, align 8
  %pow6291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter287, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  store i128 %pow5277, i128* %pow6291, align 4
  br label %loop.latch292

loop.latch292:                                    ; preds = %loop.body247
  %add294 = add i128 %j.5, 1
  %slt297 = icmp slt i128 %add294, %finalexphardpart.k.read_arg_inner
  br i1 %slt297, label %loop.body247, label %loop.exit298

loop.exit298:                                     ; preds = %loop.latch292
  br label %loop.latch299

loop.latch299:                                    ; preds = %loop.exit298
  %add301 = add i128 %eps.5, 1
  %slt303 = icmp slt i128 %add301, 2
  br i1 %slt303, label %loop.body246, label %loop.exit304

loop.exit304:                                     ; preds = %loop.latch299
  br label %loop.latch305

loop.latch305:                                    ; preds = %loop.exit304
  %add307 = add i128 %id.5, 1
  %slt309 = icmp slt i128 %add307, 6
  br i1 %slt309, label %loop.body245, label %loop.exit310

loop.exit310:                                     ; preds = %loop.latch305
  %call315 = call %struct_template_circuit_fp12cyclotomicexp* @fn_template_build_fp12cyclotomicexp(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 %call, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body316

loop.body316:                                     ; preds = %loop.latch354, %loop.exit310
  %id.6 = phi i128 [ 0, %loop.exit310 ], [ %add356, %loop.latch354 ]
  br label %loop.body317

loop.body317:                                     ; preds = %loop.latch348, %loop.body316
  %eps.6 = phi i128 [ 0, %loop.body316 ], [ %add350, %loop.latch348 ]
  br label %loop.body318

loop.body318:                                     ; preds = %loop.latch341, %loop.body317
  %j.6 = phi i128 [ 0, %loop.body317 ], [ %add343, %loop.latch341 ]
  %struct_getter320 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter320, align 8
  %array_getter324 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  %pow6325 = load i128, i128* %array_getter324, align 4
  %struct_getter327 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call315, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter328 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter327, align 8
  %array_getter332 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter328, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  %pow7333 = load i128, i128* %array_getter332, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow7333, i128 %pow6325, i1* @constraint.912)
  %struct_getter335 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call315, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter336 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter335, align 8
  %pow7340 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter336, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  store i128 %pow6325, i128* %pow7340, align 4
  br label %loop.latch341

loop.latch341:                                    ; preds = %loop.body318
  %add343 = add i128 %j.6, 1
  %slt346 = icmp slt i128 %add343, %finalexphardpart.k.read_arg_inner
  br i1 %slt346, label %loop.body318, label %loop.exit347

loop.exit347:                                     ; preds = %loop.latch341
  br label %loop.latch348

loop.latch348:                                    ; preds = %loop.exit347
  %add350 = add i128 %eps.6, 1
  %slt352 = icmp slt i128 %add350, 2
  br i1 %slt352, label %loop.body317, label %loop.exit353

loop.exit353:                                     ; preds = %loop.latch348
  br label %loop.latch354

loop.latch354:                                    ; preds = %loop.exit353
  %add356 = add i128 %id.6, 1
  %slt358 = icmp slt i128 %add356, 6
  br i1 %slt358, label %loop.body316, label %loop.exit359

loop.exit359:                                     ; preds = %loop.latch354
  %call364 = call %struct_template_circuit_fp12cyclotomicexp* @fn_template_build_fp12cyclotomicexp(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 %call, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body365

loop.body365:                                     ; preds = %loop.latch404, %loop.exit359
  %id.7 = phi i128 [ 0, %loop.exit359 ], [ %add406, %loop.latch404 ]
  br label %loop.body366

loop.body366:                                     ; preds = %loop.latch398, %loop.body365
  %eps.7 = phi i128 [ 0, %loop.body365 ], [ %add400, %loop.latch398 ]
  br label %loop.body367

loop.body367:                                     ; preds = %loop.latch391, %loop.body366
  %j.7 = phi i128 [ 0, %loop.body366 ], [ %add393, %loop.latch391 ]
  %struct_getter369 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call315, i32 0, i32 6
  %fp12cyclotomicexp.out.read_output_outter370 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter369, align 8
  %array_getter374 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.out.read_output_outter370, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  %pow7375 = load i128, i128* %array_getter374, align 4
  %struct_getter377 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call364, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter378 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter377, align 8
  %array_getter382 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter378, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  %pow8383 = load i128, i128* %array_getter382, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow8383, i128 %pow7375, i1* @constraint.913)
  %struct_getter385 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call364, i32 0, i32 4
  %fp12cyclotomicexp.in.read_input_outter386 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter385, align 8
  %pow8390 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.in.read_input_outter386, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  store i128 %pow7375, i128* %pow8390, align 4
  br label %loop.latch391

loop.latch391:                                    ; preds = %loop.body367
  %add393 = add i128 %j.7, 1
  %slt396 = icmp slt i128 %add393, %finalexphardpart.k.read_arg_inner
  br i1 %slt396, label %loop.body367, label %loop.exit397

loop.exit397:                                     ; preds = %loop.latch391
  br label %loop.latch398

loop.latch398:                                    ; preds = %loop.exit397
  %add400 = add i128 %eps.7, 1
  %slt402 = icmp slt i128 %add400, 2
  br i1 %slt402, label %loop.body366, label %loop.exit403

loop.exit403:                                     ; preds = %loop.latch398
  br label %loop.latch404

loop.latch404:                                    ; preds = %loop.exit403
  %add406 = add i128 %id.7, 1
  %slt408 = icmp slt i128 %add406, 6
  br i1 %slt408, label %loop.body365, label %loop.exit409

loop.exit409:                                     ; preds = %loop.latch404
  %call412 = call %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 2)
  br label %loop.body413

loop.body413:                                     ; preds = %loop.latch452, %loop.exit409
  %id.8 = phi i128 [ 0, %loop.exit409 ], [ %add454, %loop.latch452 ]
  br label %loop.body414

loop.body414:                                     ; preds = %loop.latch446, %loop.body413
  %eps.8 = phi i128 [ 0, %loop.body413 ], [ %add448, %loop.latch446 ]
  br label %loop.body415

loop.body415:                                     ; preds = %loop.latch439, %loop.body414
  %j.8 = phi i128 [ 0, %loop.body414 ], [ %add441, %loop.latch439 ]
  %struct_getter417 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 5
  %fp12multiply.out.read_output_outter418 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter417, align 8
  %array_getter422 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter418, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  %pow6423 = load i128, i128* %array_getter422, align 4
  %struct_getter425 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call412, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter426 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter425, align 8
  %array_getter430 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter426, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  %pow9431 = load i128, i128* %array_getter430, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow9431, i128 %pow6423, i1* @constraint.914)
  %struct_getter433 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call412, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter434 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter433, align 8
  %pow9438 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter434, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  store i128 %pow6423, i128* %pow9438, align 4
  br label %loop.latch439

loop.latch439:                                    ; preds = %loop.body415
  %add441 = add i128 %j.8, 1
  %slt444 = icmp slt i128 %add441, %finalexphardpart.k.read_arg_inner
  br i1 %slt444, label %loop.body415, label %loop.exit445

loop.exit445:                                     ; preds = %loop.latch439
  br label %loop.latch446

loop.latch446:                                    ; preds = %loop.exit445
  %add448 = add i128 %eps.8, 1
  %slt450 = icmp slt i128 %add448, 2
  br i1 %slt450, label %loop.body414, label %loop.exit451

loop.exit451:                                     ; preds = %loop.latch446
  br label %loop.latch452

loop.latch452:                                    ; preds = %loop.exit451
  %add454 = add i128 %id.8, 1
  %slt456 = icmp slt i128 %add454, 6
  br i1 %slt456, label %loop.body413, label %loop.exit457

loop.exit457:                                     ; preds = %loop.latch452
  %call460 = call %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, i128 6)
  br label %loop.body461

loop.body461:                                     ; preds = %loop.latch500, %loop.exit457
  %id.9 = phi i128 [ 0, %loop.exit457 ], [ %add502, %loop.latch500 ]
  br label %loop.body462

loop.body462:                                     ; preds = %loop.latch494, %loop.body461
  %eps.9 = phi i128 [ 0, %loop.body461 ], [ %add496, %loop.latch494 ]
  br label %loop.body463

loop.body463:                                     ; preds = %loop.latch487, %loop.body462
  %j.9 = phi i128 [ 0, %loop.body462 ], [ %add489, %loop.latch487 ]
  %struct_getter465 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call244, i32 0, i32 5
  %fp12multiply.out.read_output_outter466 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter465, align 8
  %array_getter470 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter466, i128 0, i128 %id.9, i128 %eps.9, i128 %j.9
  %pow6471 = load i128, i128* %array_getter470, align 4
  %struct_getter473 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call460, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter474 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter473, align 8
  %array_getter478 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter474, i128 0, i128 %id.9, i128 %eps.9, i128 %j.9
  %pow10479 = load i128, i128* %array_getter478, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow10479, i128 %pow6471, i1* @constraint.915)
  %struct_getter481 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call460, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter482 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter481, align 8
  %pow10486 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter482, i128 0, i128 %id.9, i128 %eps.9, i128 %j.9
  store i128 %pow6471, i128* %pow10486, align 4
  br label %loop.latch487

loop.latch487:                                    ; preds = %loop.body463
  %add489 = add i128 %j.9, 1
  %slt492 = icmp slt i128 %add489, %finalexphardpart.k.read_arg_inner
  br i1 %slt492, label %loop.body463, label %loop.exit493

loop.exit493:                                     ; preds = %loop.latch487
  br label %loop.latch494

loop.latch494:                                    ; preds = %loop.exit493
  %add496 = add i128 %eps.9, 1
  %slt498 = icmp slt i128 %add496, 2
  br i1 %slt498, label %loop.body462, label %loop.exit499

loop.exit499:                                     ; preds = %loop.latch494
  br label %loop.latch500

loop.latch500:                                    ; preds = %loop.exit499
  %add502 = add i128 %id.9, 1
  %slt504 = icmp slt i128 %add502, 6
  br i1 %slt504, label %loop.body461, label %loop.exit505

loop.exit505:                                     ; preds = %loop.latch500
  %call509 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body510

loop.body510:                                     ; preds = %loop.latch572, %loop.exit505
  %id.10 = phi i128 [ 0, %loop.exit505 ], [ %add574, %loop.latch572 ]
  br label %loop.body511

loop.body511:                                     ; preds = %loop.latch566, %loop.body510
  %eps.10 = phi i128 [ 0, %loop.body510 ], [ %add568, %loop.latch566 ]
  br label %loop.body512

loop.body512:                                     ; preds = %loop.latch559, %loop.body511
  %j.10 = phi i128 [ 0, %loop.body511 ], [ %add561, %loop.latch559 ]
  %struct_getter514 = getelementptr inbounds %struct_template_circuit_fp12cyclotomicexp, %struct_template_circuit_fp12cyclotomicexp* %call364, i32 0, i32 6
  %fp12cyclotomicexp.out.read_output_outter515 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter514, align 8
  %array_getter519 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12cyclotomicexp.out.read_output_outter515, i128 0, i128 %id.10, i128 %eps.10, i128 %j.10
  %pow8520 = load i128, i128* %array_getter519, align 4
  %struct_getter522 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call509, i32 0, i32 3
  %fp12multiply.a.read_input_outter523 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter522, align 8
  %array_getter527 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter523, i128 0, i128 %id.10, i128 %eps.10, i128 %j.10
  %pow11528 = load i128, i128* %array_getter527, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow11528, i128 %pow8520, i1* @constraint.916)
  %struct_getter530 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call509, i32 0, i32 3
  %fp12multiply.a.read_input_outter531 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter530, align 8
  %pow11535 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter531, i128 0, i128 %id.10, i128 %eps.10, i128 %j.10
  store i128 %pow8520, i128* %pow11535, align 4
  %struct_getter537 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call412, i32 0, i32 4
  %fp12frobeniusmap.out.read_output_outter538 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter537, align 8
  %array_getter542 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.out.read_output_outter538, i128 0, i128 %id.10, i128 %eps.10, i128 %j.10
  %pow9543 = load i128, i128* %array_getter542, align 4
  %struct_getter545 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call509, i32 0, i32 4
  %fp12multiply.b.read_input_outter546 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter545, align 8
  %array_getter550 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter546, i128 0, i128 %id.10, i128 %eps.10, i128 %j.10
  %pow11551 = load i128, i128* %array_getter550, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow11551, i128 %pow9543, i1* @constraint.917)
  %struct_getter553 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call509, i32 0, i32 4
  %fp12multiply.b.read_input_outter554 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter553, align 8
  %pow11558 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter554, i128 0, i128 %id.10, i128 %eps.10, i128 %j.10
  store i128 %pow9543, i128* %pow11558, align 4
  br label %loop.latch559

loop.latch559:                                    ; preds = %loop.body512
  %add561 = add i128 %j.10, 1
  %slt564 = icmp slt i128 %add561, %finalexphardpart.k.read_arg_inner
  br i1 %slt564, label %loop.body512, label %loop.exit565

loop.exit565:                                     ; preds = %loop.latch559
  br label %loop.latch566

loop.latch566:                                    ; preds = %loop.exit565
  %add568 = add i128 %eps.10, 1
  %slt570 = icmp slt i128 %add568, 2
  br i1 %slt570, label %loop.body511, label %loop.exit571

loop.exit571:                                     ; preds = %loop.latch566
  br label %loop.latch572

loop.latch572:                                    ; preds = %loop.exit571
  %add574 = add i128 %id.10, 1
  %slt576 = icmp slt i128 %add574, 6
  br i1 %slt576, label %loop.body510, label %loop.exit577

loop.exit577:                                     ; preds = %loop.latch572
  %call581 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body582

loop.body582:                                     ; preds = %loop.latch644, %loop.exit577
  %id.11 = phi i128 [ 0, %loop.exit577 ], [ %add646, %loop.latch644 ]
  br label %loop.body583

loop.body583:                                     ; preds = %loop.latch638, %loop.body582
  %eps.11 = phi i128 [ 0, %loop.body582 ], [ %add640, %loop.latch638 ]
  br label %loop.body584

loop.body584:                                     ; preds = %loop.latch631, %loop.body583
  %j.11 = phi i128 [ 0, %loop.body583 ], [ %add633, %loop.latch631 ]
  %struct_getter586 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call460, i32 0, i32 4
  %fp12frobeniusmap.out.read_output_outter587 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter586, align 8
  %array_getter591 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.out.read_output_outter587, i128 0, i128 %id.11, i128 %eps.11, i128 %j.11
  %pow10592 = load i128, i128* %array_getter591, align 4
  %struct_getter594 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call581, i32 0, i32 3
  %fp12multiply.a.read_input_outter595 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter594, align 8
  %array_getter599 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter595, i128 0, i128 %id.11, i128 %eps.11, i128 %j.11
  %pow12600 = load i128, i128* %array_getter599, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow12600, i128 %pow10592, i1* @constraint.918)
  %struct_getter602 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call581, i32 0, i32 3
  %fp12multiply.a.read_input_outter603 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter602, align 8
  %pow12607 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter603, i128 0, i128 %id.11, i128 %eps.11, i128 %j.11
  store i128 %pow10592, i128* %pow12607, align 4
  %struct_getter609 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call509, i32 0, i32 5
  %fp12multiply.out.read_output_outter610 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter609, align 8
  %array_getter614 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter610, i128 0, i128 %id.11, i128 %eps.11, i128 %j.11
  %pow11615 = load i128, i128* %array_getter614, align 4
  %struct_getter617 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call581, i32 0, i32 4
  %fp12multiply.b.read_input_outter618 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter617, align 8
  %array_getter622 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter618, i128 0, i128 %id.11, i128 %eps.11, i128 %j.11
  %pow12623 = load i128, i128* %array_getter622, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow12623, i128 %pow11615, i1* @constraint.919)
  %struct_getter625 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call581, i32 0, i32 4
  %fp12multiply.b.read_input_outter626 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter625, align 8
  %pow12630 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter626, i128 0, i128 %id.11, i128 %eps.11, i128 %j.11
  store i128 %pow11615, i128* %pow12630, align 4
  br label %loop.latch631

loop.latch631:                                    ; preds = %loop.body584
  %add633 = add i128 %j.11, 1
  %slt636 = icmp slt i128 %add633, %finalexphardpart.k.read_arg_inner
  br i1 %slt636, label %loop.body584, label %loop.exit637

loop.exit637:                                     ; preds = %loop.latch631
  br label %loop.latch638

loop.latch638:                                    ; preds = %loop.exit637
  %add640 = add i128 %eps.11, 1
  %slt642 = icmp slt i128 %add640, 2
  br i1 %slt642, label %loop.body583, label %loop.exit643

loop.exit643:                                     ; preds = %loop.latch638
  br label %loop.latch644

loop.latch644:                                    ; preds = %loop.exit643
  %add646 = add i128 %id.11, 1
  %slt648 = icmp slt i128 %add646, 6
  br i1 %slt648, label %loop.body582, label %loop.exit649

loop.exit649:                                     ; preds = %loop.latch644
  %call653 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %finalexphardpart.n.read_arg_inner, i128 %finalexphardpart.k.read_arg_inner, [256 x i128]* %finalexphardpart.p.read_arg_inner)
  br label %loop.body654

loop.body654:                                     ; preds = %loop.latch714, %loop.exit649
  %id.12 = phi i128 [ 0, %loop.exit649 ], [ %add716, %loop.latch714 ]
  br label %loop.body655

loop.body655:                                     ; preds = %loop.latch708, %loop.body654
  %eps.12 = phi i128 [ 0, %loop.body654 ], [ %add710, %loop.latch708 ]
  br label %loop.body656

loop.body656:                                     ; preds = %loop.latch701, %loop.body655
  %j.12 = phi i128 [ 0, %loop.body655 ], [ %add703, %loop.latch701 ]
  %struct_getter658 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call581, i32 0, i32 5
  %fp12multiply.out.read_output_outter659 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter658, align 8
  %array_getter663 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter659, i128 0, i128 %id.12, i128 %eps.12, i128 %j.12
  %pow12664 = load i128, i128* %array_getter663, align 4
  %struct_getter666 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call653, i32 0, i32 3
  %fp12multiply.a.read_input_outter667 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter666, align 8
  %array_getter671 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter667, i128 0, i128 %id.12, i128 %eps.12, i128 %j.12
  %pow13672 = load i128, i128* %array_getter671, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow13672, i128 %pow12664, i1* @constraint.920)
  %struct_getter674 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call653, i32 0, i32 3
  %fp12multiply.a.read_input_outter675 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter674, align 8
  %pow13679 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter675, i128 0, i128 %id.12, i128 %eps.12, i128 %j.12
  store i128 %pow12664, i128* %pow13679, align 4
  %in680 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexphardpart.in.declare_input, align 8
  %array_getter684 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in680, i128 0, i128 %id.12, i128 %eps.12, i128 %j.12
  %in685 = load i128, i128* %array_getter684, align 4
  %struct_getter687 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call653, i32 0, i32 4
  %fp12multiply.b.read_input_outter688 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter687, align 8
  %array_getter692 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter688, i128 0, i128 %id.12, i128 %eps.12, i128 %j.12
  %pow13693 = load i128, i128* %array_getter692, align 4
  call void @fn_intrinsic_utils_constraint(i128 %pow13693, i128 %in685, i1* @constraint.921)
  %struct_getter695 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call653, i32 0, i32 4
  %fp12multiply.b.read_input_outter696 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter695, align 8
  %pow13700 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter696, i128 0, i128 %id.12, i128 %eps.12, i128 %j.12
  store i128 %in685, i128* %pow13700, align 4
  br label %loop.latch701

loop.latch701:                                    ; preds = %loop.body656
  %add703 = add i128 %j.12, 1
  %slt706 = icmp slt i128 %add703, %finalexphardpart.k.read_arg_inner
  br i1 %slt706, label %loop.body656, label %loop.exit707

loop.exit707:                                     ; preds = %loop.latch701
  br label %loop.latch708

loop.latch708:                                    ; preds = %loop.exit707
  %add710 = add i128 %eps.12, 1
  %slt712 = icmp slt i128 %add710, 2
  br i1 %slt712, label %loop.body655, label %loop.exit713

loop.exit713:                                     ; preds = %loop.latch708
  br label %loop.latch714

loop.latch714:                                    ; preds = %loop.exit713
  %add716 = add i128 %id.12, 1
  %slt718 = icmp slt i128 %add716, 6
  br i1 %slt718, label %loop.body654, label %loop.exit719

loop.exit719:                                     ; preds = %loop.latch714
  br label %loop.body720

loop.body720:                                     ; preds = %loop.latch755, %loop.exit719
  %id.13 = phi i128 [ 0, %loop.exit719 ], [ %add757, %loop.latch755 ]
  br label %loop.body721

loop.body721:                                     ; preds = %loop.latch749, %loop.body720
  %eps.13 = phi i128 [ 0, %loop.body720 ], [ %add751, %loop.latch749 ]
  br label %loop.body722

loop.body722:                                     ; preds = %loop.latch742, %loop.body721
  %j.13 = phi i128 [ 0, %loop.body721 ], [ %add744, %loop.latch742 ]
  %struct_getter724 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call653, i32 0, i32 5
  %fp12multiply.out.read_output_outter725 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter724, align 8
  %array_getter729 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter725, i128 0, i128 %id.13, i128 %eps.13, i128 %j.13
  %pow13730 = load i128, i128* %array_getter729, align 4
  %out731 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexphardpart.out.declare_output, align 8
  %array_getter735 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out731, i128 0, i128 %id.13, i128 %eps.13, i128 %j.13
  %out736 = load i128, i128* %array_getter735, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out736, i128 %pow13730, i1* @constraint.922)
  %ptr_getter737 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexphardpart.out.declare_output, align 8
  %out741 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter737, i128 0, i128 %id.13, i128 %eps.13, i128 %j.13
  store i128 %pow13730, i128* %out741, align 4
  br label %loop.latch742

loop.latch742:                                    ; preds = %loop.body722
  %add744 = add i128 %j.13, 1
  %slt747 = icmp slt i128 %add744, %finalexphardpart.k.read_arg_inner
  br i1 %slt747, label %loop.body722, label %loop.exit748

loop.exit748:                                     ; preds = %loop.latch742
  br label %loop.latch749

loop.latch749:                                    ; preds = %loop.exit748
  %add751 = add i128 %eps.13, 1
  %slt753 = icmp slt i128 %add751, 2
  br i1 %slt753, label %loop.body721, label %loop.exit754

loop.exit754:                                     ; preds = %loop.latch749
  br label %loop.latch755

loop.latch755:                                    ; preds = %loop.exit754
  %add757 = add i128 %id.13, 1
  %slt759 = icmp slt i128 %add757, 6
  br i1 %slt759, label %loop.body720, label %loop.exit760

loop.exit760:                                     ; preds = %loop.latch755
  br label %arraydim

arraydim:                                         ; preds = %loop.exit760
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %finalexphardpart.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %finalexphardpart.k.read_arg_inner)
  %ptr_cast761 = bitcast [256 x [256 x [256 x i128]]]** %finalexphardpart.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast761, i128 6, i128 2, i128 %finalexphardpart.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out762 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexphardpart.out.declare_output, align 8
  %finalexphardpart.out.write_output_inner = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out762, [256 x [256 x [256 x i128]]]** %finalexphardpart.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_finalexphardpart* @fn_template_build_finalexphardpart(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_finalexphardpart = alloca %struct_template_circuit_finalexphardpart, align 8
  %finalexphardpart.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %struct_template_circuit_finalexphardpart, i32 0, i32 0
  store i128 %0, i128* %finalexphardpart.n.write_arg_inner, align 4
  %finalexphardpart.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %struct_template_circuit_finalexphardpart, i32 0, i32 1
  store i128 %1, i128* %finalexphardpart.k.write_arg_inner, align 4
  %finalexphardpart.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %struct_template_circuit_finalexphardpart, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %finalexphardpart.p.write_arg_inner, align 8
  ret %struct_template_circuit_finalexphardpart* %struct_template_circuit_finalexphardpart
}

define void @fn_template_init_blsmillerloop(%struct_template_circuit_blsmillerloop* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %0, i32 0, i32 0
  %blsmillerloop.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %0, i32 0, i32 1
  %blsmillerloop.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %0, i32 0, i32 2
  %blsmillerloop.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %0, i32 0, i32 3
  %blsmillerloop.p.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %blsmillerloop.p.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %blsmillerloop.p.read_input_inner, [256 x [256 x i128]]** %blsmillerloop.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %0, i32 0, i32 4
  %blsmillerloop.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %blsmillerloop.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %blsmillerloop.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %blsmillerloop.q.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %idx6 = call i128 @fn_intrinsic_utils_init()
  %x7 = call i128 @fn_intrinsic_utils_init()
  %fx = alloca [256 x %struct_template_circuit_millerloop*]*, align 8
  %fx8 = alloca [256 x %struct_template_circuit_millerloop*], align 8
  store [256 x %struct_template_circuit_millerloop*]* %fx8, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %l9 = call i128 @fn_intrinsic_utils_init()
  %XI010 = call i128 @fn_intrinsic_utils_init()
  %blsmillerloop.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %blsmillerloop.out.declare_output, align 8
  %e11 = call i128 @fn_intrinsic_utils_init()
  %b12 = call i128 @fn_intrinsic_utils_init()
  %j13 = call i128 @fn_intrinsic_utils_init()
  %call = call i128 @get_BLS12_381_parameter()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch282, %entry
  %e.0 = phi i128 [ 0, %entry ], [ %add284, %loop.latch282 ]
  %call19 = call %struct_template_circuit_millerloop* @fn_template_build_millerloop(i128 %blsmillerloop.n.read_arg_inner, i128 %blsmillerloop.k.read_arg_inner, i128 4, i128 %call, [256 x i128]* %blsmillerloop.q.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %fx21 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter, i128 0, i128 %e.0
  store %struct_template_circuit_millerloop* %call19, %struct_template_circuit_millerloop** %fx21, align 8
  %eq = icmp eq i128 %e.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %loop.body23

if.false:                                         ; preds = %loop.body
  br label %loop.body127

loop.body23:                                      ; preds = %loop.latch84, %if.true
  %i.0 = phi i128 [ 0, %if.true ], [ %add86, %loop.latch84 ]
  br label %loop.body24

loop.body24:                                      ; preds = %loop.latch78, %loop.body23
  %j.0 = phi i128 [ 0, %loop.body23 ], [ %add80, %loop.latch78 ]
  br label %loop.body25

loop.body25:                                      ; preds = %loop.latch, %loop.body24
  %idx.0 = phi i128 [ 0, %loop.body24 ], [ %add, %loop.latch ]
  %eq29 = icmp eq i128 %i.0, 0
  %eq31 = icmp eq i128 %j.0, 0
  %and = and i1 %eq29, %eq31
  %eq33 = icmp eq i128 %idx.0, 0
  %and34 = and i1 %and, %eq33
  br i1 %and34, label %if.true26, label %if.false27

if.true26:                                        ; preds = %loop.body25
  %fx35 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx35, i128 0, i128 %e.0
  %fx37 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter, align 8
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx37, i32 0, i32 5
  %millerloop.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter38, align 8
  %array_getter42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %fx43 = load i128, i128* %array_getter42, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx43, i128 1, i1* @constraint.923)
  %ptr_getter44 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter46 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter44, i128 0, i128 %e.0
  %fx47 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter46, align 8
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx47, i32 0, i32 5
  %millerloop.in.read_input_outter49 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter48, align 8
  %fx53 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_outter49, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 1, i128* %fx53, align 4
  br label %if.exit

if.false27:                                       ; preds = %loop.body25
  %fx54 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter56 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx54, i128 0, i128 %e.0
  %fx57 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx57, i32 0, i32 5
  %millerloop.in.read_input_outter59 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter58, align 8
  %array_getter63 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_outter59, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %fx64 = load i128, i128* %array_getter63, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx64, i128 0, i1* @constraint.924)
  %ptr_getter65 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter67 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter65, i128 0, i128 %e.0
  %fx68 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter67, align 8
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx68, i32 0, i32 5
  %millerloop.in.read_input_outter70 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter69, align 8
  %fx74 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_outter70, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 0, i128* %fx74, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false27, %if.true26
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %blsmillerloop.k.read_arg_inner
  br i1 %slt, label %loop.body25, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.exit
  %add80 = add i128 %j.0, 1
  %slt82 = icmp slt i128 %add80, 2
  br i1 %slt82, label %loop.body24, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch78
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.exit83
  %add86 = add i128 %i.0, 1
  %slt88 = icmp slt i128 %add86, 6
  br i1 %slt88, label %loop.body23, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch84
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch121, %loop.exit89
  %j.1 = phi i128 [ 0, %loop.exit89 ], [ %add123, %loop.latch121 ]
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch114, %loop.body90
  %idx.1 = phi i128 [ 0, %loop.body90 ], [ %add116, %loop.latch114 ]
  %P = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %blsmillerloop.p.declare_input, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %j.1, i128 %idx.1
  %P95 = load i128, i128* %array_getter94, align 4
  %fx96 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter98 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx96, i128 0, i128 %e.0
  %fx99 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter98, align 8
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx99, i32 0, i32 6
  %millerloop.p.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter100, align 8
  %array_getter103 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloop.p.read_input_outter, i128 0, i128 %j.1, i128 %idx.1
  %fx104 = load i128, i128* %array_getter103, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx104, i128 %P95, i1* @constraint.925)
  %ptr_getter105 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter107 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter105, i128 0, i128 %e.0
  %fx108 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter107, align 8
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx108, i32 0, i32 6
  %millerloop.p.read_input_outter110 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter109, align 8
  %fx113 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloop.p.read_input_outter110, i128 0, i128 %j.1, i128 %idx.1
  store i128 %P95, i128* %fx113, align 4
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.body91
  %add116 = add i128 %idx.1, 1
  %slt119 = icmp slt i128 %add116, %blsmillerloop.k.read_arg_inner
  br i1 %slt119, label %loop.body91, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch114
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.exit120
  %add123 = add i128 %j.1, 1
  %slt125 = icmp slt i128 %add123, 2
  br i1 %slt125, label %loop.body90, label %loop.exit126

loop.exit126:                                     ; preds = %loop.latch121
  br label %if.exit224

loop.body127:                                     ; preds = %loop.latch174, %if.false
  %i.1 = phi i128 [ 0, %if.false ], [ %add176, %loop.latch174 ]
  br label %loop.body128

loop.body128:                                     ; preds = %loop.latch168, %loop.body127
  %j.2 = phi i128 [ 0, %loop.body127 ], [ %add170, %loop.latch168 ]
  br label %loop.body129

loop.body129:                                     ; preds = %loop.latch161, %loop.body128
  %idx.2 = phi i128 [ 0, %loop.body128 ], [ %add163, %loop.latch161 ]
  %fx130 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %sub = sub i128 %e.0, 1
  %array_getter132 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx130, i128 0, i128 %sub
  %fx133 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter132, align 8
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx133, i32 0, i32 10
  %millerloop.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter134, align 8
  %array_getter138 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.out.read_output_outter, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  %fx139 = load i128, i128* %array_getter138, align 4
  %fx140 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter142 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx140, i128 0, i128 %e.0
  %fx143 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter142, align 8
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx143, i32 0, i32 5
  %millerloop.in.read_input_outter145 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter144, align 8
  %array_getter149 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_outter145, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  %fx150 = load i128, i128* %array_getter149, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx150, i128 %fx139, i1* @constraint.926)
  %ptr_getter151 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter153 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter151, i128 0, i128 %e.0
  %fx154 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter153, align 8
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx154, i32 0, i32 5
  %millerloop.in.read_input_outter156 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter155, align 8
  %fx160 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.in.read_input_outter156, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  store i128 %fx139, i128* %fx160, align 4
  br label %loop.latch161

loop.latch161:                                    ; preds = %loop.body129
  %add163 = add i128 %idx.2, 1
  %slt166 = icmp slt i128 %add163, %blsmillerloop.k.read_arg_inner
  br i1 %slt166, label %loop.body129, label %loop.exit167

loop.exit167:                                     ; preds = %loop.latch161
  br label %loop.latch168

loop.latch168:                                    ; preds = %loop.exit167
  %add170 = add i128 %j.2, 1
  %slt172 = icmp slt i128 %add170, 2
  br i1 %slt172, label %loop.body128, label %loop.exit173

loop.exit173:                                     ; preds = %loop.latch168
  br label %loop.latch174

loop.latch174:                                    ; preds = %loop.exit173
  %add176 = add i128 %i.1, 1
  %slt178 = icmp slt i128 %add176, 6
  br i1 %slt178, label %loop.body127, label %loop.exit179

loop.exit179:                                     ; preds = %loop.latch174
  br label %loop.body180

loop.body180:                                     ; preds = %loop.latch218, %loop.exit179
  %j.3 = phi i128 [ 0, %loop.exit179 ], [ %add220, %loop.latch218 ]
  br label %loop.body181

loop.body181:                                     ; preds = %loop.latch211, %loop.body180
  %idx.3 = phi i128 [ 0, %loop.body180 ], [ %add213, %loop.latch211 ]
  %fx182 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %sub184 = sub i128 %e.0, 1
  %array_getter185 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx182, i128 0, i128 %sub184
  %fx186 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter185, align 8
  %struct_getter187 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx186, i32 0, i32 11
  %millerloop.xp.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter187, align 8
  %array_getter190 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloop.xp.read_output_outter, i128 0, i128 %j.3, i128 %idx.3
  %fx191 = load i128, i128* %array_getter190, align 4
  %fx192 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter194 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx192, i128 0, i128 %e.0
  %fx195 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter194, align 8
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx195, i32 0, i32 6
  %millerloop.p.read_input_outter197 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter196, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloop.p.read_input_outter197, i128 0, i128 %j.3, i128 %idx.3
  %fx201 = load i128, i128* %array_getter200, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx201, i128 %fx191, i1* @constraint.927)
  %ptr_getter202 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter204 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter202, i128 0, i128 %e.0
  %fx205 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter204, align 8
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx205, i32 0, i32 6
  %millerloop.p.read_input_outter207 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter206, align 8
  %fx210 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloop.p.read_input_outter207, i128 0, i128 %j.3, i128 %idx.3
  store i128 %fx191, i128* %fx210, align 4
  br label %loop.latch211

loop.latch211:                                    ; preds = %loop.body181
  %add213 = add i128 %idx.3, 1
  %slt216 = icmp slt i128 %add213, %blsmillerloop.k.read_arg_inner
  br i1 %slt216, label %loop.body181, label %loop.exit217

loop.exit217:                                     ; preds = %loop.latch211
  br label %loop.latch218

loop.latch218:                                    ; preds = %loop.exit217
  %add220 = add i128 %j.3, 1
  %slt222 = icmp slt i128 %add220, 2
  br i1 %slt222, label %loop.body180, label %loop.exit223

loop.exit223:                                     ; preds = %loop.latch218
  br label %if.exit224

if.exit224:                                       ; preds = %loop.exit223, %loop.exit126
  br label %loop.body225

loop.body225:                                     ; preds = %loop.latch276, %if.exit224
  %l.0 = phi i128 [ 0, %if.exit224 ], [ %add278, %loop.latch276 ]
  br label %loop.body226

loop.body226:                                     ; preds = %loop.latch270, %loop.body225
  %i.2 = phi i128 [ 0, %loop.body225 ], [ %add272, %loop.latch270 ]
  br label %loop.body227

loop.body227:                                     ; preds = %loop.latch264, %loop.body226
  %j.4 = phi i128 [ 0, %loop.body226 ], [ %add266, %loop.latch264 ]
  br label %loop.body228

loop.body228:                                     ; preds = %loop.latch257, %loop.body227
  %idx.4 = phi i128 [ 0, %loop.body227 ], [ %add259, %loop.latch257 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %blsmillerloop.q.declare_input, align 8
  %array_getter233 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 %l.0, i128 %i.2, i128 %j.4, i128 %idx.4
  %Q234 = load i128, i128* %array_getter233, align 4
  %fx235 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter237 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx235, i128 0, i128 %e.0
  %fx238 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter237, align 8
  %struct_getter239 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx238, i32 0, i32 7
  %millerloop.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter239, align 8
  %array_getter244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %millerloop.q.read_input_outter, i128 0, i128 %l.0, i128 %i.2, i128 %j.4, i128 %idx.4
  %fx245 = load i128, i128* %array_getter244, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx245, i128 %Q234, i1* @constraint.928)
  %ptr_getter246 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter248 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %ptr_getter246, i128 0, i128 %e.0
  %fx249 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter248, align 8
  %struct_getter250 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx249, i32 0, i32 7
  %millerloop.q.read_input_outter251 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter250, align 8
  %fx256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %millerloop.q.read_input_outter251, i128 0, i128 %l.0, i128 %i.2, i128 %j.4, i128 %idx.4
  store i128 %Q234, i128* %fx256, align 4
  br label %loop.latch257

loop.latch257:                                    ; preds = %loop.body228
  %add259 = add i128 %idx.4, 1
  %slt262 = icmp slt i128 %add259, %blsmillerloop.k.read_arg_inner
  br i1 %slt262, label %loop.body228, label %loop.exit263

loop.exit263:                                     ; preds = %loop.latch257
  br label %loop.latch264

loop.latch264:                                    ; preds = %loop.exit263
  %add266 = add i128 %j.4, 1
  %slt268 = icmp slt i128 %add266, 2
  br i1 %slt268, label %loop.body227, label %loop.exit269

loop.exit269:                                     ; preds = %loop.latch264
  br label %loop.latch270

loop.latch270:                                    ; preds = %loop.exit269
  %add272 = add i128 %i.2, 1
  %slt274 = icmp slt i128 %add272, 6
  br i1 %slt274, label %loop.body226, label %loop.exit275

loop.exit275:                                     ; preds = %loop.latch270
  br label %loop.latch276

loop.latch276:                                    ; preds = %loop.exit275
  %add278 = add i128 %l.0, 1
  %slt280 = icmp slt i128 %add278, 2
  br i1 %slt280, label %loop.body225, label %loop.exit281

loop.exit281:                                     ; preds = %loop.latch276
  br label %loop.latch282

loop.latch282:                                    ; preds = %loop.exit281
  %add284 = add i128 %e.0, 1
  %slt286 = icmp slt i128 %add284, 4
  br i1 %slt286, label %loop.body, label %loop.exit287

loop.exit287:                                     ; preds = %loop.latch282
  %call293 = call %struct_template_circuit_fp12multiplywithlineunequal* @fn_template_build_fp12multiplywithlineunequal(i128 %blsmillerloop.n.read_arg_inner, i128 %blsmillerloop.k.read_arg_inner, i128 %blsmillerloop.k.read_arg_inner, i128 %blsmillerloop.n.read_arg_inner, [256 x i128]* %blsmillerloop.q.read_arg_inner)
  br label %loop.body294

loop.body294:                                     ; preds = %loop.latch334, %loop.exit287
  %l.1 = phi i128 [ 0, %loop.exit287 ], [ %add336, %loop.latch334 ]
  br label %loop.body295

loop.body295:                                     ; preds = %loop.latch328, %loop.body294
  %j.5 = phi i128 [ 0, %loop.body294 ], [ %add330, %loop.latch328 ]
  br label %loop.body296

loop.body296:                                     ; preds = %loop.latch321, %loop.body295
  %idx.5 = phi i128 [ 0, %loop.body295 ], [ %add323, %loop.latch321 ]
  %fx297 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter298 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx297, i128 0, i128 3
  %fx299 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter298, align 8
  %struct_getter300 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx299, i32 0, i32 10
  %millerloop.out.read_output_outter301 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter300, align 8
  %array_getter305 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.out.read_output_outter301, i128 0, i128 %l.1, i128 %j.5, i128 %idx.5
  %fx306 = load i128, i128* %array_getter305, align 4
  %struct_getter308 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 5
  %fp12multiplywithlineunequal.g.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter308, align 8
  %array_getter312 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.g.read_input_outter, i128 0, i128 %l.1, i128 %j.5, i128 %idx.5
  %fx4l313 = load i128, i128* %array_getter312, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx4l313, i128 %fx306, i1* @constraint.929)
  %struct_getter315 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 5
  %fp12multiplywithlineunequal.g.read_input_outter316 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter315, align 8
  %fx4l320 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.g.read_input_outter316, i128 0, i128 %l.1, i128 %j.5, i128 %idx.5
  store i128 %fx306, i128* %fx4l320, align 4
  br label %loop.latch321

loop.latch321:                                    ; preds = %loop.body296
  %add323 = add i128 %idx.5, 1
  %slt326 = icmp slt i128 %add323, %blsmillerloop.k.read_arg_inner
  br i1 %slt326, label %loop.body296, label %loop.exit327

loop.exit327:                                     ; preds = %loop.latch321
  br label %loop.latch328

loop.latch328:                                    ; preds = %loop.exit327
  %add330 = add i128 %j.5, 1
  %slt332 = icmp slt i128 %add330, 2
  br i1 %slt332, label %loop.body295, label %loop.exit333

loop.exit333:                                     ; preds = %loop.latch328
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.exit333
  %add336 = add i128 %l.1, 1
  %slt338 = icmp slt i128 %add336, 6
  br i1 %slt338, label %loop.body294, label %loop.exit339

loop.exit339:                                     ; preds = %loop.latch334
  br label %loop.body340

loop.body340:                                     ; preds = %loop.latch388, %loop.exit339
  %j.6 = phi i128 [ 0, %loop.exit339 ], [ %add390, %loop.latch388 ]
  br label %loop.body341

loop.body341:                                     ; preds = %loop.latch381, %loop.body340
  %idx.6 = phi i128 [ 0, %loop.body340 ], [ %add383, %loop.latch381 ]
  %fx342 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter343 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx342, i128 0, i128 3
  %fx344 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter343, align 8
  %struct_getter345 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx344, i32 0, i32 11
  %millerloop.xp.read_output_outter346 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter345, align 8
  %array_getter349 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloop.xp.read_output_outter346, i128 0, i128 %j.6, i128 %idx.6
  %fx350 = load i128, i128* %array_getter349, align 4
  %struct_getter352 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter352, align 8
  %array_getter355 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter, i128 0, i128 0, i128 %j.6, i128 %idx.6
  %fx4l356 = load i128, i128* %array_getter355, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx4l356, i128 %fx350, i1* @constraint.930)
  %struct_getter358 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter359 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter358, align 8
  %fx4l362 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter359, i128 0, i128 0, i128 %j.6, i128 %idx.6
  store i128 %fx350, i128* %fx4l362, align 4
  %P363 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %blsmillerloop.p.declare_input, align 8
  %array_getter366 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P363, i128 0, i128 %j.6, i128 %idx.6
  %P367 = load i128, i128* %array_getter366, align 4
  %struct_getter369 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter370 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter369, align 8
  %array_getter373 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter370, i128 0, i128 1, i128 %j.6, i128 %idx.6
  %fx4l374 = load i128, i128* %array_getter373, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx4l374, i128 %P367, i1* @constraint.931)
  %struct_getter376 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 6
  %fp12multiplywithlineunequal.p.read_input_outter377 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter376, align 8
  %fx4l380 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.p.read_input_outter377, i128 0, i128 1, i128 %j.6, i128 %idx.6
  store i128 %P367, i128* %fx4l380, align 4
  br label %loop.latch381

loop.latch381:                                    ; preds = %loop.body341
  %add383 = add i128 %idx.6, 1
  %slt386 = icmp slt i128 %add383, %blsmillerloop.k.read_arg_inner
  br i1 %slt386, label %loop.body341, label %loop.exit387

loop.exit387:                                     ; preds = %loop.latch381
  br label %loop.latch388

loop.latch388:                                    ; preds = %loop.exit387
  %add390 = add i128 %j.6, 1
  %slt392 = icmp slt i128 %add390, 2
  br i1 %slt392, label %loop.body340, label %loop.exit393

loop.exit393:                                     ; preds = %loop.latch388
  br label %loop.body394

loop.body394:                                     ; preds = %loop.latch440, %loop.exit393
  %l.2 = phi i128 [ 0, %loop.exit393 ], [ %add442, %loop.latch440 ]
  br label %loop.body395

loop.body395:                                     ; preds = %loop.latch434, %loop.body394
  %i.3 = phi i128 [ 0, %loop.body394 ], [ %add436, %loop.latch434 ]
  br label %loop.body396

loop.body396:                                     ; preds = %loop.latch428, %loop.body395
  %j.7 = phi i128 [ 0, %loop.body395 ], [ %add430, %loop.latch428 ]
  br label %loop.body397

loop.body397:                                     ; preds = %loop.latch421, %loop.body396
  %idx.7 = phi i128 [ 0, %loop.body396 ], [ %add423, %loop.latch421 ]
  %Q398 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %blsmillerloop.q.declare_input, align 8
  %array_getter403 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q398, i128 0, i128 %l.2, i128 %i.3, i128 %j.7, i128 %idx.7
  %Q404 = load i128, i128* %array_getter403, align 4
  %struct_getter406 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 7
  %fp12multiplywithlineunequal.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter406, align 8
  %array_getter411 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequal.q.read_input_outter, i128 0, i128 %l.2, i128 %i.3, i128 %j.7, i128 %idx.7
  %fx4l412 = load i128, i128* %array_getter411, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fx4l412, i128 %Q404, i1* @constraint.932)
  %struct_getter414 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 7
  %fp12multiplywithlineunequal.q.read_input_outter415 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter414, align 8
  %fx4l420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %fp12multiplywithlineunequal.q.read_input_outter415, i128 0, i128 %l.2, i128 %i.3, i128 %j.7, i128 %idx.7
  store i128 %Q404, i128* %fx4l420, align 4
  br label %loop.latch421

loop.latch421:                                    ; preds = %loop.body397
  %add423 = add i128 %idx.7, 1
  %slt426 = icmp slt i128 %add423, %blsmillerloop.k.read_arg_inner
  br i1 %slt426, label %loop.body397, label %loop.exit427

loop.exit427:                                     ; preds = %loop.latch421
  br label %loop.latch428

loop.latch428:                                    ; preds = %loop.exit427
  %add430 = add i128 %j.7, 1
  %slt432 = icmp slt i128 %add430, 2
  br i1 %slt432, label %loop.body396, label %loop.exit433

loop.exit433:                                     ; preds = %loop.latch428
  br label %loop.latch434

loop.latch434:                                    ; preds = %loop.exit433
  %add436 = add i128 %i.3, 1
  %slt438 = icmp slt i128 %add436, 6
  br i1 %slt438, label %loop.body395, label %loop.exit439

loop.exit439:                                     ; preds = %loop.latch434
  br label %loop.latch440

loop.latch440:                                    ; preds = %loop.exit439
  %add442 = add i128 %l.2, 1
  %slt444 = icmp slt i128 %add442, 2
  br i1 %slt444, label %loop.body394, label %loop.exit445

loop.exit445:                                     ; preds = %loop.latch440
  %call449 = call %struct_template_circuit_fp12invert* @fn_template_build_fp12invert(i128 %blsmillerloop.n.read_arg_inner, i128 %blsmillerloop.k.read_arg_inner, [256 x i128]* %blsmillerloop.q.read_arg_inner)
  br label %loop.body450

loop.body450:                                     ; preds = %loop.latch490, %loop.exit445
  %i.4 = phi i128 [ 0, %loop.exit445 ], [ %add492, %loop.latch490 ]
  br label %loop.body451

loop.body451:                                     ; preds = %loop.latch484, %loop.body450
  %j.8 = phi i128 [ 0, %loop.body450 ], [ %add486, %loop.latch484 ]
  br label %loop.body452

loop.body452:                                     ; preds = %loop.latch477, %loop.body451
  %idx.8 = phi i128 [ 0, %loop.body451 ], [ %add479, %loop.latch477 ]
  %fx453 = load [256 x %struct_template_circuit_millerloop*]*, [256 x %struct_template_circuit_millerloop*]** %fx, align 8
  %array_getter454 = getelementptr inbounds [256 x %struct_template_circuit_millerloop*], [256 x %struct_template_circuit_millerloop*]* %fx453, i128 0, i128 1
  %fx455 = load %struct_template_circuit_millerloop*, %struct_template_circuit_millerloop** %array_getter454, align 8
  %struct_getter456 = getelementptr inbounds %struct_template_circuit_millerloop, %struct_template_circuit_millerloop* %fx455, i32 0, i32 10
  %millerloop.out.read_output_outter457 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter456, align 8
  %array_getter461 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloop.out.read_output_outter457, i128 0, i128 %i.4, i128 %j.8, i128 %idx.8
  %fx462 = load i128, i128* %array_getter461, align 4
  %struct_getter464 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %call449, i32 0, i32 3
  %fp12invert.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter464, align 8
  %array_getter468 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_outter, i128 0, i128 %i.4, i128 %j.8, i128 %idx.8
  %inv469 = load i128, i128* %array_getter468, align 4
  call void @fn_intrinsic_utils_constraint(i128 %inv469, i128 %fx462, i1* @constraint.933)
  %struct_getter471 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %call449, i32 0, i32 3
  %fp12invert.in.read_input_outter472 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter471, align 8
  %inv476 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_outter472, i128 0, i128 %i.4, i128 %j.8, i128 %idx.8
  store i128 %fx462, i128* %inv476, align 4
  br label %loop.latch477

loop.latch477:                                    ; preds = %loop.body452
  %add479 = add i128 %idx.8, 1
  %slt482 = icmp slt i128 %add479, %blsmillerloop.k.read_arg_inner
  br i1 %slt482, label %loop.body452, label %loop.exit483

loop.exit483:                                     ; preds = %loop.latch477
  br label %loop.latch484

loop.latch484:                                    ; preds = %loop.exit483
  %add486 = add i128 %j.8, 1
  %slt488 = icmp slt i128 %add486, 2
  br i1 %slt488, label %loop.body451, label %loop.exit489

loop.exit489:                                     ; preds = %loop.latch484
  br label %loop.latch490

loop.latch490:                                    ; preds = %loop.exit489
  %add492 = add i128 %i.4, 1
  %slt494 = icmp slt i128 %add492, 6
  br i1 %slt494, label %loop.body450, label %loop.exit495

loop.exit495:                                     ; preds = %loop.latch490
  %call499 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %blsmillerloop.n.read_arg_inner, i128 %blsmillerloop.k.read_arg_inner, [256 x i128]* %blsmillerloop.q.read_arg_inner)
  br label %loop.body500

loop.body500:                                     ; preds = %loop.latch558, %loop.exit495
  %i.5 = phi i128 [ 0, %loop.exit495 ], [ %add560, %loop.latch558 ]
  br label %loop.body501

loop.body501:                                     ; preds = %loop.latch552, %loop.body500
  %j.9 = phi i128 [ 0, %loop.body500 ], [ %add554, %loop.latch552 ]
  br label %loop.body502

loop.body502:                                     ; preds = %loop.latch545, %loop.body501
  %idx.9 = phi i128 [ 0, %loop.body501 ], [ %add547, %loop.latch545 ]
  %struct_getter504 = getelementptr inbounds %struct_template_circuit_fp12multiplywithlineunequal, %struct_template_circuit_fp12multiplywithlineunequal* %call293, i32 0, i32 8
  %fp12multiplywithlineunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter504, align 8
  %array_getter508 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiplywithlineunequal.out.read_output_outter, i128 0, i128 %i.5, i128 %j.9, i128 %idx.9
  %fx4l509 = load i128, i128* %array_getter508, align 4
  %struct_getter511 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call499, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter511, align 8
  %array_getter515 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %i.5, i128 %j.9, i128 %idx.9
  %fr516 = load i128, i128* %array_getter515, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fr516, i128 %fx4l509, i1* @constraint.934)
  %struct_getter518 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call499, i32 0, i32 3
  %fp12multiply.a.read_input_outter519 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter518, align 8
  %fr523 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter519, i128 0, i128 %i.5, i128 %j.9, i128 %idx.9
  store i128 %fx4l509, i128* %fr523, align 4
  %struct_getter525 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %call449, i32 0, i32 4
  %fp12invert.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter525, align 8
  %array_getter529 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.out.read_output_outter, i128 0, i128 %i.5, i128 %j.9, i128 %idx.9
  %inv530 = load i128, i128* %array_getter529, align 4
  %struct_getter532 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call499, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter532, align 8
  %array_getter536 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %i.5, i128 %j.9, i128 %idx.9
  %fr537 = load i128, i128* %array_getter536, align 4
  call void @fn_intrinsic_utils_constraint(i128 %fr537, i128 %inv530, i1* @constraint.935)
  %struct_getter539 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call499, i32 0, i32 4
  %fp12multiply.b.read_input_outter540 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter539, align 8
  %fr544 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter540, i128 0, i128 %i.5, i128 %j.9, i128 %idx.9
  store i128 %inv530, i128* %fr544, align 4
  br label %loop.latch545

loop.latch545:                                    ; preds = %loop.body502
  %add547 = add i128 %idx.9, 1
  %slt550 = icmp slt i128 %add547, %blsmillerloop.k.read_arg_inner
  br i1 %slt550, label %loop.body502, label %loop.exit551

loop.exit551:                                     ; preds = %loop.latch545
  br label %loop.latch552

loop.latch552:                                    ; preds = %loop.exit551
  %add554 = add i128 %j.9, 1
  %slt556 = icmp slt i128 %add554, 2
  br i1 %slt556, label %loop.body501, label %loop.exit557

loop.exit557:                                     ; preds = %loop.latch552
  br label %loop.latch558

loop.latch558:                                    ; preds = %loop.exit557
  %add560 = add i128 %i.5, 1
  %slt562 = icmp slt i128 %add560, 6
  br i1 %slt562, label %loop.body500, label %loop.exit563

loop.exit563:                                     ; preds = %loop.latch558
  br label %loop.body564

loop.body564:                                     ; preds = %loop.latch598, %loop.exit563
  %i.6 = phi i128 [ 0, %loop.exit563 ], [ %add600, %loop.latch598 ]
  br label %loop.body565

loop.body565:                                     ; preds = %loop.latch592, %loop.body564
  %j.10 = phi i128 [ 0, %loop.body564 ], [ %add594, %loop.latch592 ]
  br label %loop.body566

loop.body566:                                     ; preds = %loop.latch585, %loop.body565
  %idx.10 = phi i128 [ 0, %loop.body565 ], [ %add587, %loop.latch585 ]
  %struct_getter568 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call499, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter568, align 8
  %array_getter572 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %i.6, i128 %j.10, i128 %idx.10
  %fr573 = load i128, i128* %array_getter572, align 4
  %out574 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %blsmillerloop.out.declare_output, align 8
  %array_getter578 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out574, i128 0, i128 %i.6, i128 %j.10, i128 %idx.10
  %out579 = load i128, i128* %array_getter578, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out579, i128 %fr573, i1* @constraint.936)
  %ptr_getter580 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %blsmillerloop.out.declare_output, align 8
  %out584 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter580, i128 0, i128 %i.6, i128 %j.10, i128 %idx.10
  store i128 %fr573, i128* %out584, align 4
  br label %loop.latch585

loop.latch585:                                    ; preds = %loop.body566
  %add587 = add i128 %idx.10, 1
  %slt590 = icmp slt i128 %add587, %blsmillerloop.k.read_arg_inner
  br i1 %slt590, label %loop.body566, label %loop.exit591

loop.exit591:                                     ; preds = %loop.latch585
  br label %loop.latch592

loop.latch592:                                    ; preds = %loop.exit591
  %add594 = add i128 %j.10, 1
  %slt596 = icmp slt i128 %add594, 2
  br i1 %slt596, label %loop.body565, label %loop.exit597

loop.exit597:                                     ; preds = %loop.latch592
  br label %loop.latch598

loop.latch598:                                    ; preds = %loop.exit597
  %add600 = add i128 %i.6, 1
  %slt602 = icmp slt i128 %add600, 6
  br i1 %slt602, label %loop.body564, label %loop.exit603

loop.exit603:                                     ; preds = %loop.latch598
  br label %arraydim

arraydim:                                         ; preds = %loop.exit603
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %blsmillerloop.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %blsmillerloop.k.read_arg_inner)
  %ptr_cast604 = bitcast [256 x [256 x [256 x [256 x i128]]]]** %blsmillerloop.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast604, i128 2, i128 6, i128 2, i128 %blsmillerloop.k.read_arg_inner)
  %ptr_cast605 = bitcast [256 x [256 x i128]]** %blsmillerloop.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast605, i128 2, i128 %blsmillerloop.k.read_arg_inner)
  %ptr_cast606 = bitcast [256 x %struct_template_circuit_millerloop*]** %fx to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast606, i128 4)
  br label %exit

exit:                                             ; preds = %arraydim
  %out607 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %blsmillerloop.out.declare_output, align 8
  %blsmillerloop.out.write_output_inner = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out607, [256 x [256 x [256 x i128]]]** %blsmillerloop.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_blsmillerloop* @fn_template_build_blsmillerloop(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_blsmillerloop = alloca %struct_template_circuit_blsmillerloop, align 8
  %blsmillerloop.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %struct_template_circuit_blsmillerloop, i32 0, i32 0
  store i128 %0, i128* %blsmillerloop.n.write_arg_inner, align 4
  %blsmillerloop.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %struct_template_circuit_blsmillerloop, i32 0, i32 1
  store i128 %1, i128* %blsmillerloop.k.write_arg_inner, align 4
  %blsmillerloop.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %struct_template_circuit_blsmillerloop, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %blsmillerloop.q.write_arg_inner, align 8
  ret %struct_template_circuit_blsmillerloop* %struct_template_circuit_blsmillerloop
}

define void @fn_template_init_finalexpeasypart(%struct_template_circuit_finalexpeasypart* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %0, i32 0, i32 0
  %finalexpeasypart.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %0, i32 0, i32 1
  %finalexpeasypart.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %0, i32 0, i32 2
  %finalexpeasypart.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %0, i32 0, i32 3
  %finalexpeasypart.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %finalexpeasypart.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %finalexpeasypart.in.read_input_inner, [256 x [256 x [256 x i128]]]** %finalexpeasypart.in.declare_input, align 8
  %id4 = call i128 @fn_intrinsic_utils_init()
  %finalexpeasypart.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %finalexpeasypart.out.declare_output, align 8
  %eps5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %finalexpeasypart.n.read_arg_inner, i128 %finalexpeasypart.k.read_arg_inner, i128 6)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch37, %entry
  %id.0 = phi i128 [ 0, %entry ], [ %add39, %loop.latch37 ]
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch31, %loop.body
  %eps.0 = phi i128 [ 0, %loop.body ], [ %add33, %loop.latch31 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch, %loop.body9
  %j.0 = phi i128 [ 0, %loop.body9 ], [ %add, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexpeasypart.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %in14 = load i128, i128* %array_getter, align 4
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter16, align 8
  %array_getter20 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %f121 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f121, i128 %in14, i1* @constraint.937)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter23 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter22, align 8
  %f127 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter23, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  store i128 %in14, i128* %f127, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body10
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %finalexpeasypart.k.read_arg_inner
  br i1 %slt, label %loop.body10, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch31

loop.latch31:                                     ; preds = %loop.exit
  %add33 = add i128 %eps.0, 1
  %slt35 = icmp slt i128 %add33, 2
  br i1 %slt35, label %loop.body9, label %loop.exit36

loop.exit36:                                      ; preds = %loop.latch31
  br label %loop.latch37

loop.latch37:                                     ; preds = %loop.exit36
  %add39 = add i128 %id.0, 1
  %slt41 = icmp slt i128 %add39, 6
  br i1 %slt41, label %loop.body, label %loop.exit42

loop.exit42:                                      ; preds = %loop.latch37
  %call45 = call %struct_template_circuit_fp12invert* @fn_template_build_fp12invert(i128 %finalexpeasypart.n.read_arg_inner, i128 %finalexpeasypart.k.read_arg_inner, [256 x i128]* %finalexpeasypart.p.read_arg_inner)
  br label %loop.body46

loop.body46:                                      ; preds = %loop.latch82, %loop.exit42
  %id.1 = phi i128 [ 0, %loop.exit42 ], [ %add84, %loop.latch82 ]
  br label %loop.body47

loop.body47:                                      ; preds = %loop.latch76, %loop.body46
  %eps.1 = phi i128 [ 0, %loop.body46 ], [ %add78, %loop.latch76 ]
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch69, %loop.body47
  %j.1 = phi i128 [ 0, %loop.body47 ], [ %add71, %loop.latch69 ]
  %in49 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexpeasypart.in.declare_input, align 8
  %array_getter53 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in49, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %in54 = load i128, i128* %array_getter53, align 4
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %call45, i32 0, i32 3
  %fp12invert.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter56, align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_outter, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %f261 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f261, i128 %in54, i1* @constraint.938)
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %call45, i32 0, i32 3
  %fp12invert.in.read_input_outter64 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter63, align 8
  %f268 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_outter64, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  store i128 %in54, i128* %f268, align 4
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.body48
  %add71 = add i128 %j.1, 1
  %slt74 = icmp slt i128 %add71, %finalexpeasypart.k.read_arg_inner
  br i1 %slt74, label %loop.body48, label %loop.exit75

loop.exit75:                                      ; preds = %loop.latch69
  br label %loop.latch76

loop.latch76:                                     ; preds = %loop.exit75
  %add78 = add i128 %eps.1, 1
  %slt80 = icmp slt i128 %add78, 2
  br i1 %slt80, label %loop.body47, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch76
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.exit81
  %add84 = add i128 %id.1, 1
  %slt86 = icmp slt i128 %add84, 6
  br i1 %slt86, label %loop.body46, label %loop.exit87

loop.exit87:                                      ; preds = %loop.latch82
  %call91 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %finalexpeasypart.n.read_arg_inner, i128 %finalexpeasypart.k.read_arg_inner, [256 x i128]* %finalexpeasypart.p.read_arg_inner)
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch150, %loop.exit87
  %id.2 = phi i128 [ 0, %loop.exit87 ], [ %add152, %loop.latch150 ]
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch144, %loop.body92
  %eps.2 = phi i128 [ 0, %loop.body92 ], [ %add146, %loop.latch144 ]
  br label %loop.body94

loop.body94:                                      ; preds = %loop.latch137, %loop.body93
  %j.2 = phi i128 [ 0, %loop.body93 ], [ %add139, %loop.latch137 ]
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call, i32 0, i32 4
  %fp12frobeniusmap.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter96, align 8
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.out.read_output_outter, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %f1101 = load i128, i128* %array_getter100, align 4
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call91, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter103, align 8
  %array_getter107 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %f3108 = load i128, i128* %array_getter107, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f3108, i128 %f1101, i1* @constraint.939)
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call91, i32 0, i32 3
  %fp12multiply.a.read_input_outter111 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter110, align 8
  %f3115 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter111, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  store i128 %f1101, i128* %f3115, align 4
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %call45, i32 0, i32 4
  %fp12invert.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter117, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.out.read_output_outter, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %f2122 = load i128, i128* %array_getter121, align 4
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call91, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter124, align 8
  %array_getter128 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %f3129 = load i128, i128* %array_getter128, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f3129, i128 %f2122, i1* @constraint.940)
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call91, i32 0, i32 4
  %fp12multiply.b.read_input_outter132 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter131, align 8
  %f3136 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter132, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  store i128 %f2122, i128* %f3136, align 4
  br label %loop.latch137

loop.latch137:                                    ; preds = %loop.body94
  %add139 = add i128 %j.2, 1
  %slt142 = icmp slt i128 %add139, %finalexpeasypart.k.read_arg_inner
  br i1 %slt142, label %loop.body94, label %loop.exit143

loop.exit143:                                     ; preds = %loop.latch137
  br label %loop.latch144

loop.latch144:                                    ; preds = %loop.exit143
  %add146 = add i128 %eps.2, 1
  %slt148 = icmp slt i128 %add146, 2
  br i1 %slt148, label %loop.body93, label %loop.exit149

loop.exit149:                                     ; preds = %loop.latch144
  br label %loop.latch150

loop.latch150:                                    ; preds = %loop.exit149
  %add152 = add i128 %id.2, 1
  %slt154 = icmp slt i128 %add152, 6
  br i1 %slt154, label %loop.body92, label %loop.exit155

loop.exit155:                                     ; preds = %loop.latch150
  %call158 = call %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %finalexpeasypart.n.read_arg_inner, i128 %finalexpeasypart.k.read_arg_inner, i128 2)
  br label %loop.body159

loop.body159:                                     ; preds = %loop.latch197, %loop.exit155
  %id.3 = phi i128 [ 0, %loop.exit155 ], [ %add199, %loop.latch197 ]
  br label %loop.body160

loop.body160:                                     ; preds = %loop.latch191, %loop.body159
  %eps.3 = phi i128 [ 0, %loop.body159 ], [ %add193, %loop.latch191 ]
  br label %loop.body161

loop.body161:                                     ; preds = %loop.latch184, %loop.body160
  %j.3 = phi i128 [ 0, %loop.body160 ], [ %add186, %loop.latch184 ]
  %struct_getter163 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call91, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter163, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %f3168 = load i128, i128* %array_getter167, align 4
  %struct_getter170 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call158, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter171 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter170, align 8
  %array_getter175 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter171, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %f4176 = load i128, i128* %array_getter175, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f4176, i128 %f3168, i1* @constraint.941)
  %struct_getter178 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call158, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_outter179 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter178, align 8
  %f4183 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_outter179, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  store i128 %f3168, i128* %f4183, align 4
  br label %loop.latch184

loop.latch184:                                    ; preds = %loop.body161
  %add186 = add i128 %j.3, 1
  %slt189 = icmp slt i128 %add186, %finalexpeasypart.k.read_arg_inner
  br i1 %slt189, label %loop.body161, label %loop.exit190

loop.exit190:                                     ; preds = %loop.latch184
  br label %loop.latch191

loop.latch191:                                    ; preds = %loop.exit190
  %add193 = add i128 %eps.3, 1
  %slt195 = icmp slt i128 %add193, 2
  br i1 %slt195, label %loop.body160, label %loop.exit196

loop.exit196:                                     ; preds = %loop.latch191
  br label %loop.latch197

loop.latch197:                                    ; preds = %loop.exit196
  %add199 = add i128 %id.3, 1
  %slt201 = icmp slt i128 %add199, 6
  br i1 %slt201, label %loop.body159, label %loop.exit202

loop.exit202:                                     ; preds = %loop.latch197
  %call206 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %finalexpeasypart.n.read_arg_inner, i128 %finalexpeasypart.k.read_arg_inner, [256 x i128]* %finalexpeasypart.p.read_arg_inner)
  br label %loop.body207

loop.body207:                                     ; preds = %loop.latch269, %loop.exit202
  %id.4 = phi i128 [ 0, %loop.exit202 ], [ %add271, %loop.latch269 ]
  br label %loop.body208

loop.body208:                                     ; preds = %loop.latch263, %loop.body207
  %eps.4 = phi i128 [ 0, %loop.body207 ], [ %add265, %loop.latch263 ]
  br label %loop.body209

loop.body209:                                     ; preds = %loop.latch256, %loop.body208
  %j.4 = phi i128 [ 0, %loop.body208 ], [ %add258, %loop.latch256 ]
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call91, i32 0, i32 5
  %fp12multiply.out.read_output_outter212 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter211, align 8
  %array_getter216 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter212, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %f3217 = load i128, i128* %array_getter216, align 4
  %struct_getter219 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call206, i32 0, i32 3
  %fp12multiply.a.read_input_outter220 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter219, align 8
  %array_getter224 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter220, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %f5225 = load i128, i128* %array_getter224, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f5225, i128 %f3217, i1* @constraint.942)
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call206, i32 0, i32 3
  %fp12multiply.a.read_input_outter228 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter227, align 8
  %f5232 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter228, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  store i128 %f3217, i128* %f5232, align 4
  %struct_getter234 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %call158, i32 0, i32 4
  %fp12frobeniusmap.out.read_output_outter235 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter234, align 8
  %array_getter239 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.out.read_output_outter235, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %f4240 = load i128, i128* %array_getter239, align 4
  %struct_getter242 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call206, i32 0, i32 4
  %fp12multiply.b.read_input_outter243 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter242, align 8
  %array_getter247 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter243, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %f5248 = load i128, i128* %array_getter247, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f5248, i128 %f4240, i1* @constraint.943)
  %struct_getter250 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call206, i32 0, i32 4
  %fp12multiply.b.read_input_outter251 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter250, align 8
  %f5255 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter251, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  store i128 %f4240, i128* %f5255, align 4
  br label %loop.latch256

loop.latch256:                                    ; preds = %loop.body209
  %add258 = add i128 %j.4, 1
  %slt261 = icmp slt i128 %add258, %finalexpeasypart.k.read_arg_inner
  br i1 %slt261, label %loop.body209, label %loop.exit262

loop.exit262:                                     ; preds = %loop.latch256
  br label %loop.latch263

loop.latch263:                                    ; preds = %loop.exit262
  %add265 = add i128 %eps.4, 1
  %slt267 = icmp slt i128 %add265, 2
  br i1 %slt267, label %loop.body208, label %loop.exit268

loop.exit268:                                     ; preds = %loop.latch263
  br label %loop.latch269

loop.latch269:                                    ; preds = %loop.exit268
  %add271 = add i128 %id.4, 1
  %slt273 = icmp slt i128 %add271, 6
  br i1 %slt273, label %loop.body207, label %loop.exit274

loop.exit274:                                     ; preds = %loop.latch269
  br label %loop.body275

loop.body275:                                     ; preds = %loop.latch310, %loop.exit274
  %id.5 = phi i128 [ 0, %loop.exit274 ], [ %add312, %loop.latch310 ]
  br label %loop.body276

loop.body276:                                     ; preds = %loop.latch304, %loop.body275
  %eps.5 = phi i128 [ 0, %loop.body275 ], [ %add306, %loop.latch304 ]
  br label %loop.body277

loop.body277:                                     ; preds = %loop.latch297, %loop.body276
  %j.5 = phi i128 [ 0, %loop.body276 ], [ %add299, %loop.latch297 ]
  %struct_getter279 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call206, i32 0, i32 5
  %fp12multiply.out.read_output_outter280 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter279, align 8
  %array_getter284 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter280, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %f5285 = load i128, i128* %array_getter284, align 4
  %out286 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexpeasypart.out.declare_output, align 8
  %array_getter290 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out286, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %out291 = load i128, i128* %array_getter290, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out291, i128 %f5285, i1* @constraint.944)
  %ptr_getter292 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexpeasypart.out.declare_output, align 8
  %out296 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter292, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  store i128 %f5285, i128* %out296, align 4
  br label %loop.latch297

loop.latch297:                                    ; preds = %loop.body277
  %add299 = add i128 %j.5, 1
  %slt302 = icmp slt i128 %add299, %finalexpeasypart.k.read_arg_inner
  br i1 %slt302, label %loop.body277, label %loop.exit303

loop.exit303:                                     ; preds = %loop.latch297
  br label %loop.latch304

loop.latch304:                                    ; preds = %loop.exit303
  %add306 = add i128 %eps.5, 1
  %slt308 = icmp slt i128 %add306, 2
  br i1 %slt308, label %loop.body276, label %loop.exit309

loop.exit309:                                     ; preds = %loop.latch304
  br label %loop.latch310

loop.latch310:                                    ; preds = %loop.exit309
  %add312 = add i128 %id.5, 1
  %slt314 = icmp slt i128 %add312, 6
  br i1 %slt314, label %loop.body275, label %loop.exit315

loop.exit315:                                     ; preds = %loop.latch310
  br label %arraydim

arraydim:                                         ; preds = %loop.exit315
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %finalexpeasypart.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %finalexpeasypart.k.read_arg_inner)
  %ptr_cast316 = bitcast [256 x [256 x [256 x i128]]]** %finalexpeasypart.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast316, i128 6, i128 2, i128 %finalexpeasypart.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out317 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexpeasypart.out.declare_output, align 8
  %finalexpeasypart.out.write_output_inner = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out317, [256 x [256 x [256 x i128]]]** %finalexpeasypart.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_finalexpeasypart* @fn_template_build_finalexpeasypart(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_finalexpeasypart = alloca %struct_template_circuit_finalexpeasypart, align 8
  %finalexpeasypart.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %struct_template_circuit_finalexpeasypart, i32 0, i32 0
  store i128 %0, i128* %finalexpeasypart.n.write_arg_inner, align 4
  %finalexpeasypart.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %struct_template_circuit_finalexpeasypart, i32 0, i32 1
  store i128 %1, i128* %finalexpeasypart.k.write_arg_inner, align 4
  %finalexpeasypart.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %struct_template_circuit_finalexpeasypart, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %finalexpeasypart.p.write_arg_inner, align 8
  ret %struct_template_circuit_finalexpeasypart* %struct_template_circuit_finalexpeasypart
}

define void @fn_template_init_finalexponentiate(%struct_template_circuit_finalexponentiate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %0, i32 0, i32 0
  %finalexponentiate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %0, i32 0, i32 1
  %finalexponentiate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %0, i32 0, i32 2
  %finalexponentiate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %0, i32 0, i32 3
  %finalexponentiate.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %finalexponentiate.in.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %finalexponentiate.in.read_input_inner, [256 x [256 x [256 x i128]]]** %finalexponentiate.in.declare_input, align 8
  %finalexponentiate.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %finalexponentiate.out.declare_output, align 8
  %id4 = call i128 @fn_intrinsic_utils_init()
  %eps5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_finalexpeasypart* @fn_template_build_finalexpeasypart(i128 %finalexponentiate.n.read_arg_inner, i128 %finalexponentiate.k.read_arg_inner, [256 x i128]* %finalexponentiate.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch37, %entry
  %id.0 = phi i128 [ 0, %entry ], [ %add39, %loop.latch37 ]
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch31, %loop.body
  %eps.0 = phi i128 [ 0, %loop.body ], [ %add33, %loop.latch31 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch, %loop.body9
  %j.0 = phi i128 [ 0, %loop.body9 ], [ %add, %loop.latch ]
  %in = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexponentiate.in.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %in, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %in14 = load i128, i128* %array_getter, align 4
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %call, i32 0, i32 3
  %finalexpeasypart.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter16, align 8
  %array_getter20 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexpeasypart.in.read_input_outter, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %f121 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f121, i128 %in14, i1* @constraint.945)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %call, i32 0, i32 3
  %finalexpeasypart.in.read_input_outter23 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter22, align 8
  %f127 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexpeasypart.in.read_input_outter23, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  store i128 %in14, i128* %f127, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body10
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %finalexponentiate.k.read_arg_inner
  br i1 %slt, label %loop.body10, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch31

loop.latch31:                                     ; preds = %loop.exit
  %add33 = add i128 %eps.0, 1
  %slt35 = icmp slt i128 %add33, 2
  br i1 %slt35, label %loop.body9, label %loop.exit36

loop.exit36:                                      ; preds = %loop.latch31
  br label %loop.latch37

loop.latch37:                                     ; preds = %loop.exit36
  %add39 = add i128 %id.0, 1
  %slt41 = icmp slt i128 %add39, 6
  br i1 %slt41, label %loop.body, label %loop.exit42

loop.exit42:                                      ; preds = %loop.latch37
  %call46 = call %struct_template_circuit_finalexphardpart* @fn_template_build_finalexphardpart(i128 %finalexponentiate.n.read_arg_inner, i128 %finalexponentiate.k.read_arg_inner, [256 x i128]* %finalexponentiate.p.read_arg_inner)
  br label %loop.body47

loop.body47:                                      ; preds = %loop.latch84, %loop.exit42
  %id.1 = phi i128 [ 0, %loop.exit42 ], [ %add86, %loop.latch84 ]
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch78, %loop.body47
  %eps.1 = phi i128 [ 0, %loop.body47 ], [ %add80, %loop.latch78 ]
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch71, %loop.body48
  %j.1 = phi i128 [ 0, %loop.body48 ], [ %add73, %loop.latch71 ]
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_finalexpeasypart, %struct_template_circuit_finalexpeasypart* %call, i32 0, i32 4
  %finalexpeasypart.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter51, align 8
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexpeasypart.out.read_output_outter, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %f156 = load i128, i128* %array_getter55, align 4
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %call46, i32 0, i32 3
  %finalexphardpart.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter58, align 8
  %array_getter62 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexphardpart.in.read_input_outter, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %f63 = load i128, i128* %array_getter62, align 4
  call void @fn_intrinsic_utils_constraint(i128 %f63, i128 %f156, i1* @constraint.946)
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %call46, i32 0, i32 3
  %finalexphardpart.in.read_input_outter66 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter65, align 8
  %f70 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexphardpart.in.read_input_outter66, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  store i128 %f156, i128* %f70, align 4
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.body49
  %add73 = add i128 %j.1, 1
  %slt76 = icmp slt i128 %add73, %finalexponentiate.k.read_arg_inner
  br i1 %slt76, label %loop.body49, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch71
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.exit77
  %add80 = add i128 %eps.1, 1
  %slt82 = icmp slt i128 %add80, 2
  br i1 %slt82, label %loop.body48, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch78
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.exit83
  %add86 = add i128 %id.1, 1
  %slt88 = icmp slt i128 %add86, 6
  br i1 %slt88, label %loop.body47, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch84
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch124, %loop.exit89
  %id.2 = phi i128 [ 0, %loop.exit89 ], [ %add126, %loop.latch124 ]
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch118, %loop.body90
  %eps.2 = phi i128 [ 0, %loop.body90 ], [ %add120, %loop.latch118 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch111, %loop.body91
  %j.2 = phi i128 [ 0, %loop.body91 ], [ %add113, %loop.latch111 ]
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_finalexphardpart, %struct_template_circuit_finalexphardpart* %call46, i32 0, i32 4
  %finalexphardpart.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter94, align 8
  %array_getter98 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexphardpart.out.read_output_outter, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %f99 = load i128, i128* %array_getter98, align 4
  %out100 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexponentiate.out.declare_output, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out100, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %out105 = load i128, i128* %array_getter104, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out105, i128 %f99, i1* @constraint.947)
  %ptr_getter106 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexponentiate.out.declare_output, align 8
  %out110 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter106, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  store i128 %f99, i128* %out110, align 4
  br label %loop.latch111

loop.latch111:                                    ; preds = %loop.body92
  %add113 = add i128 %j.2, 1
  %slt116 = icmp slt i128 %add113, %finalexponentiate.k.read_arg_inner
  br i1 %slt116, label %loop.body92, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch111
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.exit117
  %add120 = add i128 %eps.2, 1
  %slt122 = icmp slt i128 %add120, 2
  br i1 %slt122, label %loop.body91, label %loop.exit123

loop.exit123:                                     ; preds = %loop.latch118
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.exit123
  %add126 = add i128 %id.2, 1
  %slt128 = icmp slt i128 %add126, 6
  br i1 %slt128, label %loop.body90, label %loop.exit129

loop.exit129:                                     ; preds = %loop.latch124
  br label %arraydim

arraydim:                                         ; preds = %loop.exit129
  %ptr_cast = bitcast [256 x [256 x [256 x i128]]]** %finalexponentiate.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 6, i128 2, i128 %finalexponentiate.k.read_arg_inner)
  %ptr_cast130 = bitcast [256 x [256 x [256 x i128]]]** %finalexponentiate.in.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast130, i128 6, i128 2, i128 %finalexponentiate.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out131 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %finalexponentiate.out.declare_output, align 8
  %finalexponentiate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out131, [256 x [256 x [256 x i128]]]** %finalexponentiate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_finalexponentiate* @fn_template_build_finalexponentiate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_finalexponentiate = alloca %struct_template_circuit_finalexponentiate, align 8
  %finalexponentiate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %struct_template_circuit_finalexponentiate, i32 0, i32 0
  store i128 %0, i128* %finalexponentiate.n.write_arg_inner, align 4
  %finalexponentiate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %struct_template_circuit_finalexponentiate, i32 0, i32 1
  store i128 %1, i128* %finalexponentiate.k.write_arg_inner, align 4
  %finalexponentiate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %struct_template_circuit_finalexponentiate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %finalexponentiate.p.write_arg_inner, align 8
  ret %struct_template_circuit_finalexponentiate* %struct_template_circuit_finalexponentiate
}

define void @fn_template_init_optimalatepairing(%struct_template_circuit_optimalatepairing* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 0
  %optimalatepairing.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 1
  %optimalatepairing.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 2
  %optimalatepairing.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 3
  %optimalatepairing.p.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %optimalatepairing.p.declare_input = alloca [256 x [256 x [256 x i128]]]*, align 8
  store [256 x [256 x [256 x i128]]]* %optimalatepairing.p.read_input_inner, [256 x [256 x [256 x i128]]]** %optimalatepairing.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 4
  %optimalatepairing.q.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %optimalatepairing.q.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %optimalatepairing.q.read_input_inner, [256 x [256 x i128]]** %optimalatepairing.q.declare_input, align 8
  %i5 = call i128 @fn_intrinsic_utils_init()
  %optimalatepairing.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %optimalatepairing.out.declare_output, align 8
  %idx6 = call i128 @fn_intrinsic_utils_init()
  %neg = alloca [256 x %struct_template_circuit_fpnegate*]*, align 8
  %neg7 = alloca [256 x %struct_template_circuit_fpnegate*], align 8
  store [256 x %struct_template_circuit_fpnegate*]* %neg7, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %j8 = call i128 @fn_intrinsic_utils_init()
  %x9 = call i128 @fn_intrinsic_utils_init()
  %optimalatepairing.negp.declare_inter = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %negP = bitcast i8* %malloccall10 to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %negP, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %call = call i128 @get_BLS12_381_parameter()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch80, %entry
  %j.0 = phi i128 [ 0, %entry ], [ %add82, %loop.latch80 ]
  %call15 = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %optimalatepairing.n.read_arg_inner, i128 %optimalatepairing.k.read_arg_inner, [256 x i128]* %optimalatepairing.q.read_arg_inner)
  %ptr_getter = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %neg17 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %ptr_getter, i128 0, i128 %j.0
  store %struct_template_circuit_fpnegate* %call15, %struct_template_circuit_fpnegate** %neg17, align 8
  br label %loop.body18

loop.body18:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %P = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 1, i128 %j.0, i128 %idx.0
  %P21 = load i128, i128* %array_getter, align 4
  %neg22 = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %array_getter24 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg22, i128 0, i128 %j.0
  %neg25 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter24, align 8
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg25, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %idx.0
  %neg29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_utils_constraint(i128 %neg29, i128 %P21, i1* @constraint.948)
  %ptr_getter30 = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %array_getter32 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %ptr_getter30, i128 0, i128 %j.0
  %neg33 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter32, align 8
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg33, i32 0, i32 3
  %fpnegate.in.read_input_outter35 = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %neg37 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter35, i128 0, i128 %idx.0
  store i128 %P21, i128* %neg37, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body18
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %optimalatepairing.k.read_arg_inner
  br i1 %slt, label %loop.body18, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch73, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add75, %loop.latch73 ]
  %P42 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.p.declare_input, align 8
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P42, i128 0, i128 0, i128 %j.0, i128 %idx.1
  %P46 = load i128, i128* %array_getter45, align 4
  %negP47 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %negP47, i128 0, i128 0, i128 %j.0, i128 %idx.1
  %negP51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_utils_constraint(i128 %negP51, i128 %P46, i1* @constraint.949)
  %ptr_getter52 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %negP55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter52, i128 0, i128 0, i128 %j.0, i128 %idx.1
  store i128 %P46, i128* %negP55, align 4
  %neg56 = load [256 x %struct_template_circuit_fpnegate*]*, [256 x %struct_template_circuit_fpnegate*]** %neg, align 8
  %array_getter58 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg56, i128 0, i128 %j.0
  %neg59 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter58, align 8
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg59, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter60, align 8
  %array_getter62 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %idx.1
  %neg63 = load i128, i128* %array_getter62, align 4
  %negP64 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %array_getter67 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %negP64, i128 0, i128 1, i128 %j.0, i128 %idx.1
  %negP68 = load i128, i128* %array_getter67, align 4
  call void @fn_intrinsic_utils_constraint(i128 %negP68, i128 %neg63, i1* @constraint.950)
  %ptr_getter69 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %negP72 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter69, i128 0, i128 1, i128 %j.0, i128 %idx.1
  store i128 %neg63, i128* %negP72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.body41
  %add75 = add i128 %idx.1, 1
  %slt78 = icmp slt i128 %add75, %optimalatepairing.k.read_arg_inner
  br i1 %slt78, label %loop.body41, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.exit79
  %add82 = add i128 %j.0, 1
  %slt84 = icmp slt i128 %add82, 2
  br i1 %slt84, label %loop.body, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch80
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 4, i128 4, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %call90 = call %struct_template_circuit_millerloopfp2* @fn_template_build_millerloopfp2(i128 %optimalatepairing.n.read_arg_inner, i128 %optimalatepairing.k.read_arg_inner, [256 x i128]* %const_inline_array, i128 %call, [256 x i128]* %optimalatepairing.q.read_arg_inner)
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch127, %loop.exit85
  %i.0 = phi i128 [ 0, %loop.exit85 ], [ %add129, %loop.latch127 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch121, %loop.body91
  %j.1 = phi i128 [ 0, %loop.body91 ], [ %add123, %loop.latch121 ]
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch114, %loop.body92
  %idx.2 = phi i128 [ 0, %loop.body92 ], [ %add116, %loop.latch114 ]
  %negP94 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %array_getter98 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %negP94, i128 0, i128 %i.0, i128 %j.1, i128 %idx.2
  %negP99 = load i128, i128* %array_getter98, align 4
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %call90, i32 0, i32 5
  %millerloopfp2.p.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter101, align 8
  %array_getter105 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloopfp2.p.read_input_outter, i128 0, i128 %i.0, i128 %j.1, i128 %idx.2
  %miller106 = load i128, i128* %array_getter105, align 4
  call void @fn_intrinsic_utils_constraint(i128 %miller106, i128 %negP99, i1* @constraint.951)
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %call90, i32 0, i32 5
  %millerloopfp2.p.read_input_outter109 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter108, align 8
  %miller113 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloopfp2.p.read_input_outter109, i128 0, i128 %i.0, i128 %j.1, i128 %idx.2
  store i128 %negP99, i128* %miller113, align 4
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.body93
  %add116 = add i128 %idx.2, 1
  %slt119 = icmp slt i128 %add116, %optimalatepairing.k.read_arg_inner
  br i1 %slt119, label %loop.body93, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch114
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.exit120
  %add123 = add i128 %j.1, 1
  %slt125 = icmp slt i128 %add123, 2
  br i1 %slt125, label %loop.body92, label %loop.exit126

loop.exit126:                                     ; preds = %loop.latch121
  br label %loop.latch127

loop.latch127:                                    ; preds = %loop.exit126
  %add129 = add i128 %i.0, 1
  %slt131 = icmp slt i128 %add129, 2
  br i1 %slt131, label %loop.body91, label %loop.exit132

loop.exit132:                                     ; preds = %loop.latch127
  br label %loop.body133

loop.body133:                                     ; preds = %loop.latch158, %loop.exit132
  %i.1 = phi i128 [ 0, %loop.exit132 ], [ %add160, %loop.latch158 ]
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch151, %loop.body133
  %idx.3 = phi i128 [ 0, %loop.body133 ], [ %add153, %loop.latch151 ]
  %Q = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %optimalatepairing.q.declare_input, align 8
  %array_getter137 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %Q, i128 0, i128 %i.1, i128 %idx.3
  %Q138 = load i128, i128* %array_getter137, align 4
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %call90, i32 0, i32 6
  %millerloopfp2.q.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter140, align 8
  %array_getter143 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloopfp2.q.read_input_outter, i128 0, i128 %i.1, i128 %idx.3
  %miller144 = load i128, i128* %array_getter143, align 4
  call void @fn_intrinsic_utils_constraint(i128 %miller144, i128 %Q138, i1* @constraint.952)
  %struct_getter146 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %call90, i32 0, i32 6
  %millerloopfp2.q.read_input_outter147 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter146, align 8
  %miller150 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %millerloopfp2.q.read_input_outter147, i128 0, i128 %i.1, i128 %idx.3
  store i128 %Q138, i128* %miller150, align 4
  br label %loop.latch151

loop.latch151:                                    ; preds = %loop.body134
  %add153 = add i128 %idx.3, 1
  %slt156 = icmp slt i128 %add153, %optimalatepairing.k.read_arg_inner
  br i1 %slt156, label %loop.body134, label %loop.exit157

loop.exit157:                                     ; preds = %loop.latch151
  br label %loop.latch158

loop.latch158:                                    ; preds = %loop.exit157
  %add160 = add i128 %i.1, 1
  %slt162 = icmp slt i128 %add160, 2
  br i1 %slt162, label %loop.body133, label %loop.exit163

loop.exit163:                                     ; preds = %loop.latch158
  %call167 = call %struct_template_circuit_finalexponentiate* @fn_template_build_finalexponentiate(i128 %optimalatepairing.n.read_arg_inner, i128 %optimalatepairing.k.read_arg_inner, [256 x i128]* %optimalatepairing.q.read_arg_inner)
  br label %loop.body168

loop.body168:                                     ; preds = %loop.latch205, %loop.exit163
  %i.2 = phi i128 [ 0, %loop.exit163 ], [ %add207, %loop.latch205 ]
  br label %loop.body169

loop.body169:                                     ; preds = %loop.latch199, %loop.body168
  %j.2 = phi i128 [ 0, %loop.body168 ], [ %add201, %loop.latch199 ]
  br label %loop.body170

loop.body170:                                     ; preds = %loop.latch192, %loop.body169
  %idx.4 = phi i128 [ 0, %loop.body169 ], [ %add194, %loop.latch192 ]
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_millerloopfp2, %struct_template_circuit_millerloopfp2* %call90, i32 0, i32 9
  %millerloopfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter172, align 8
  %array_getter176 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %millerloopfp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.4
  %miller177 = load i128, i128* %array_getter176, align 4
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %call167, i32 0, i32 3
  %finalexponentiate.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter179, align 8
  %array_getter183 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexponentiate.in.read_input_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.4
  %finalexp184 = load i128, i128* %array_getter183, align 4
  call void @fn_intrinsic_utils_constraint(i128 %finalexp184, i128 %miller177, i1* @constraint.953)
  %struct_getter186 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %call167, i32 0, i32 3
  %finalexponentiate.in.read_input_outter187 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter186, align 8
  %finalexp191 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexponentiate.in.read_input_outter187, i128 0, i128 %i.2, i128 %j.2, i128 %idx.4
  store i128 %miller177, i128* %finalexp191, align 4
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.body170
  %add194 = add i128 %idx.4, 1
  %slt197 = icmp slt i128 %add194, %optimalatepairing.k.read_arg_inner
  br i1 %slt197, label %loop.body170, label %loop.exit198

loop.exit198:                                     ; preds = %loop.latch192
  br label %loop.latch199

loop.latch199:                                    ; preds = %loop.exit198
  %add201 = add i128 %j.2, 1
  %slt203 = icmp slt i128 %add201, 2
  br i1 %slt203, label %loop.body169, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch199
  br label %loop.latch205

loop.latch205:                                    ; preds = %loop.exit204
  %add207 = add i128 %i.2, 1
  %slt209 = icmp slt i128 %add207, 6
  br i1 %slt209, label %loop.body168, label %loop.exit210

loop.exit210:                                     ; preds = %loop.latch205
  br label %loop.body211

loop.body211:                                     ; preds = %loop.latch245, %loop.exit210
  %i.3 = phi i128 [ 0, %loop.exit210 ], [ %add247, %loop.latch245 ]
  br label %loop.body212

loop.body212:                                     ; preds = %loop.latch239, %loop.body211
  %j.3 = phi i128 [ 0, %loop.body211 ], [ %add241, %loop.latch239 ]
  br label %loop.body213

loop.body213:                                     ; preds = %loop.latch232, %loop.body212
  %idx.5 = phi i128 [ 0, %loop.body212 ], [ %add234, %loop.latch232 ]
  %struct_getter215 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %call167, i32 0, i32 4
  %finalexponentiate.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter215, align 8
  %array_getter219 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexponentiate.out.read_output_outter, i128 0, i128 %i.3, i128 %j.3, i128 %idx.5
  %finalexp220 = load i128, i128* %array_getter219, align 4
  %out221 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.out.declare_output, align 8
  %array_getter225 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out221, i128 0, i128 %i.3, i128 %j.3, i128 %idx.5
  %out226 = load i128, i128* %array_getter225, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out226, i128 %finalexp220, i1* @constraint.954)
  %ptr_getter227 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.out.declare_output, align 8
  %out231 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter227, i128 0, i128 %i.3, i128 %j.3, i128 %idx.5
  store i128 %finalexp220, i128* %out231, align 4
  br label %loop.latch232

loop.latch232:                                    ; preds = %loop.body213
  %add234 = add i128 %idx.5, 1
  %slt237 = icmp slt i128 %add234, %optimalatepairing.k.read_arg_inner
  br i1 %slt237, label %loop.body213, label %loop.exit238

loop.exit238:                                     ; preds = %loop.latch232
  br label %loop.latch239

loop.latch239:                                    ; preds = %loop.exit238
  %add241 = add i128 %j.3, 1
  %slt243 = icmp slt i128 %add241, 2
  br i1 %slt243, label %loop.body212, label %loop.exit244

loop.exit244:                                     ; preds = %loop.latch239
  br label %loop.latch245

loop.latch245:                                    ; preds = %loop.exit244
  %add247 = add i128 %i.3, 1
  %slt249 = icmp slt i128 %add247, 6
  br i1 %slt249, label %loop.body211, label %loop.exit250

loop.exit250:                                     ; preds = %loop.latch245
  br label %arraydim

arraydim:                                         ; preds = %loop.exit250
  %ptr_cast = bitcast [256 x [256 x i128]]** %optimalatepairing.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 %optimalatepairing.k.read_arg_inner)
  %ptr_cast251 = bitcast [256 x [256 x [256 x i128]]]** %optimalatepairing.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast251, i128 6, i128 2, i128 %optimalatepairing.k.read_arg_inner)
  %ptr_cast252 = bitcast [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast252, i128 2, i128 2, i128 %optimalatepairing.k.read_arg_inner)
  %ptr_cast253 = bitcast [256 x %struct_template_circuit_fpnegate*]** %neg to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast253, i128 2)
  %ptr_cast254 = bitcast [256 x [256 x [256 x i128]]]** %optimalatepairing.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast254, i128 2, i128 2, i128 %optimalatepairing.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %negP255 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.declare_inter, align 8
  %optimalatepairing.negp.write_inter_inner = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %negP255, [256 x [256 x [256 x i128]]]** %optimalatepairing.negp.write_inter_inner, align 8
  %out256 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %optimalatepairing.out.declare_output, align 8
  %optimalatepairing.out.write_output_inner = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out256, [256 x [256 x [256 x i128]]]** %optimalatepairing.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_optimalatepairing* @fn_template_build_optimalatepairing(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_optimalatepairing = alloca %struct_template_circuit_optimalatepairing, align 8
  %optimalatepairing.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %struct_template_circuit_optimalatepairing, i32 0, i32 0
  store i128 %0, i128* %optimalatepairing.n.write_arg_inner, align 4
  %optimalatepairing.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %struct_template_circuit_optimalatepairing, i32 0, i32 1
  store i128 %1, i128* %optimalatepairing.k.write_arg_inner, align 4
  %optimalatepairing.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_optimalatepairing, %struct_template_circuit_optimalatepairing* %struct_template_circuit_optimalatepairing, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %optimalatepairing.q.write_arg_inner, align 8
  ret %struct_template_circuit_optimalatepairing* %struct_template_circuit_optimalatepairing
}

define void @fn_template_init_tatepairing(%struct_template_circuit_tatepairing* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %0, i32 0, i32 0
  %tatepairing.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %0, i32 0, i32 1
  %tatepairing.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %0, i32 0, i32 2
  %tatepairing.q.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %0, i32 0, i32 3
  %tatepairing.p.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %tatepairing.p.declare_input = alloca [256 x [256 x i128]]*, align 8
  store [256 x [256 x i128]]* %tatepairing.p.read_input_inner, [256 x [256 x i128]]** %tatepairing.p.declare_input, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %0, i32 0, i32 4
  %tatepairing.q.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %tatepairing.q.declare_input = alloca [256 x [256 x [256 x [256 x i128]]]]*, align 8
  store [256 x [256 x [256 x [256 x i128]]]]* %tatepairing.q.read_input_inner, [256 x [256 x [256 x [256 x i128]]]]** %tatepairing.q.declare_input, align 8
  %idx5 = call i128 @fn_intrinsic_utils_init()
  %j6 = call i128 @fn_intrinsic_utils_init()
  %i7 = call i128 @fn_intrinsic_utils_init()
  %tatepairing.out.declare_output = alloca [256 x [256 x [256 x i128]]]*, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %tatepairing.out.declare_output, align 8
  %l8 = call i128 @fn_intrinsic_utils_init()
  %call = call %struct_template_circuit_blsmillerloop* @fn_template_build_blsmillerloop(i128 %tatepairing.n.read_arg_inner, i128 %tatepairing.k.read_arg_inner, [256 x i128]* %tatepairing.q.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch30, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add32, %loop.latch30 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %P = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %tatepairing.p.declare_input, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %i.0, i128 %idx.0
  %P15 = load i128, i128* %array_getter, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %call, i32 0, i32 3
  %blsmillerloop.p.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter17, align 8
  %array_getter20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %blsmillerloop.p.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %miller21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_utils_constraint(i128 %miller21, i128 %P15, i1* @constraint.955)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %call, i32 0, i32 3
  %blsmillerloop.p.read_input_outter23 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter22, align 8
  %miller26 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %blsmillerloop.p.read_input_outter23, i128 0, i128 %i.0, i128 %idx.0
  store i128 %P15, i128* %miller26, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %tatepairing.k.read_arg_inner
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch30

loop.latch30:                                     ; preds = %loop.exit
  %add32 = add i128 %i.0, 1
  %slt34 = icmp slt i128 %add32, 2
  br i1 %slt34, label %loop.body, label %loop.exit35

loop.exit35:                                      ; preds = %loop.latch30
  br label %loop.body36

loop.body36:                                      ; preds = %loop.latch81, %loop.exit35
  %i.1 = phi i128 [ 0, %loop.exit35 ], [ %add83, %loop.latch81 ]
  br label %loop.body37

loop.body37:                                      ; preds = %loop.latch75, %loop.body36
  %l.0 = phi i128 [ 0, %loop.body36 ], [ %add77, %loop.latch75 ]
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch69, %loop.body37
  %j.0 = phi i128 [ 0, %loop.body37 ], [ %add71, %loop.latch69 ]
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch62, %loop.body38
  %idx.1 = phi i128 [ 0, %loop.body38 ], [ %add64, %loop.latch62 ]
  %Q = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %tatepairing.q.declare_input, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %Q, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.1
  %Q45 = load i128, i128* %array_getter44, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %call, i32 0, i32 4
  %blsmillerloop.q.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter47, align 8
  %array_getter52 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %blsmillerloop.q.read_input_outter, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.1
  %miller53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_utils_constraint(i128 %miller53, i128 %Q45, i1* @constraint.956)
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %call, i32 0, i32 4
  %blsmillerloop.q.read_input_outter56 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter55, align 8
  %miller61 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %blsmillerloop.q.read_input_outter56, i128 0, i128 %i.1, i128 %l.0, i128 %j.0, i128 %idx.1
  store i128 %Q45, i128* %miller61, align 4
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.body39
  %add64 = add i128 %idx.1, 1
  %slt67 = icmp slt i128 %add64, %tatepairing.k.read_arg_inner
  br i1 %slt67, label %loop.body39, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch62
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.exit68
  %add71 = add i128 %j.0, 1
  %slt73 = icmp slt i128 %add71, 2
  br i1 %slt73, label %loop.body38, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch69
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.exit74
  %add77 = add i128 %l.0, 1
  %slt79 = icmp slt i128 %add77, 6
  br i1 %slt79, label %loop.body37, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch75
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.exit80
  %add83 = add i128 %i.1, 1
  %slt85 = icmp slt i128 %add83, 2
  br i1 %slt85, label %loop.body36, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch81
  %call90 = call %struct_template_circuit_finalexponentiate* @fn_template_build_finalexponentiate(i128 %tatepairing.n.read_arg_inner, i128 %tatepairing.k.read_arg_inner, [256 x i128]* %tatepairing.q.read_arg_inner)
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch128, %loop.exit86
  %i.2 = phi i128 [ 0, %loop.exit86 ], [ %add130, %loop.latch128 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch122, %loop.body91
  %j.1 = phi i128 [ 0, %loop.body91 ], [ %add124, %loop.latch122 ]
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch115, %loop.body92
  %idx.2 = phi i128 [ 0, %loop.body92 ], [ %add117, %loop.latch115 ]
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_blsmillerloop, %struct_template_circuit_blsmillerloop* %call, i32 0, i32 5
  %blsmillerloop.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter95, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %blsmillerloop.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %miller100 = load i128, i128* %array_getter99, align 4
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %call90, i32 0, i32 3
  %finalexponentiate.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter102, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexponentiate.in.read_input_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %finalexp107 = load i128, i128* %array_getter106, align 4
  call void @fn_intrinsic_utils_constraint(i128 %finalexp107, i128 %miller100, i1* @constraint.957)
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %call90, i32 0, i32 3
  %finalexponentiate.in.read_input_outter110 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter109, align 8
  %finalexp114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexponentiate.in.read_input_outter110, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %miller100, i128* %finalexp114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body93
  %add117 = add i128 %idx.2, 1
  %slt120 = icmp slt i128 %add117, %tatepairing.k.read_arg_inner
  br i1 %slt120, label %loop.body93, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.exit121
  %add124 = add i128 %j.1, 1
  %slt126 = icmp slt i128 %add124, 2
  br i1 %slt126, label %loop.body92, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch122
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %i.2, 1
  %slt132 = icmp slt i128 %add130, 6
  br i1 %slt132, label %loop.body91, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch128
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch168, %loop.exit133
  %i.3 = phi i128 [ 0, %loop.exit133 ], [ %add170, %loop.latch168 ]
  br label %loop.body135

loop.body135:                                     ; preds = %loop.latch162, %loop.body134
  %j.2 = phi i128 [ 0, %loop.body134 ], [ %add164, %loop.latch162 ]
  br label %loop.body136

loop.body136:                                     ; preds = %loop.latch155, %loop.body135
  %idx.3 = phi i128 [ 0, %loop.body135 ], [ %add157, %loop.latch155 ]
  %struct_getter138 = getelementptr inbounds %struct_template_circuit_finalexponentiate, %struct_template_circuit_finalexponentiate* %call90, i32 0, i32 4
  %finalexponentiate.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter138, align 8
  %array_getter142 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %finalexponentiate.out.read_output_outter, i128 0, i128 %i.3, i128 %j.2, i128 %idx.3
  %finalexp143 = load i128, i128* %array_getter142, align 4
  %out144 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %tatepairing.out.declare_output, align 8
  %array_getter148 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out144, i128 0, i128 %i.3, i128 %j.2, i128 %idx.3
  %out149 = load i128, i128* %array_getter148, align 4
  call void @fn_intrinsic_utils_constraint(i128 %out149, i128 %finalexp143, i1* @constraint.958)
  %ptr_getter150 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %tatepairing.out.declare_output, align 8
  %out154 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ptr_getter150, i128 0, i128 %i.3, i128 %j.2, i128 %idx.3
  store i128 %finalexp143, i128* %out154, align 4
  br label %loop.latch155

loop.latch155:                                    ; preds = %loop.body136
  %add157 = add i128 %idx.3, 1
  %slt160 = icmp slt i128 %add157, %tatepairing.k.read_arg_inner
  br i1 %slt160, label %loop.body136, label %loop.exit161

loop.exit161:                                     ; preds = %loop.latch155
  br label %loop.latch162

loop.latch162:                                    ; preds = %loop.exit161
  %add164 = add i128 %j.2, 1
  %slt166 = icmp slt i128 %add164, 2
  br i1 %slt166, label %loop.body135, label %loop.exit167

loop.exit167:                                     ; preds = %loop.latch162
  br label %loop.latch168

loop.latch168:                                    ; preds = %loop.exit167
  %add170 = add i128 %i.3, 1
  %slt172 = icmp slt i128 %add170, 6
  br i1 %slt172, label %loop.body134, label %loop.exit173

loop.exit173:                                     ; preds = %loop.latch168
  br label %arraydim

arraydim:                                         ; preds = %loop.exit173
  %ptr_cast = bitcast [256 x [256 x [256 x [256 x i128]]]]** %tatepairing.q.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast, i128 2, i128 6, i128 2, i128 %tatepairing.k.read_arg_inner)
  %ptr_cast174 = bitcast [256 x [256 x i128]]** %tatepairing.p.declare_input to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast174, i128 2, i128 %tatepairing.k.read_arg_inner)
  %ptr_cast175 = bitcast [256 x [256 x [256 x i128]]]** %tatepairing.out.declare_output to i128*
  call void (i128*, ...) @fn_intrinsic_utils_arraydim(i128* %ptr_cast175, i128 6, i128 2, i128 %tatepairing.k.read_arg_inner)
  br label %exit

exit:                                             ; preds = %arraydim
  %out176 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %tatepairing.out.declare_output, align 8
  %tatepairing.out.write_output_inner = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out176, [256 x [256 x [256 x i128]]]** %tatepairing.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_tatepairing* @fn_template_build_tatepairing(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_tatepairing = alloca %struct_template_circuit_tatepairing, align 8
  %tatepairing.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %struct_template_circuit_tatepairing, i32 0, i32 0
  store i128 %0, i128* %tatepairing.n.write_arg_inner, align 4
  %tatepairing.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %struct_template_circuit_tatepairing, i32 0, i32 1
  store i128 %1, i128* %tatepairing.k.write_arg_inner, align 4
  %tatepairing.q.write_arg_inner = getelementptr inbounds %struct_template_circuit_tatepairing, %struct_template_circuit_tatepairing* %struct_template_circuit_tatepairing, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %tatepairing.q.write_arg_inner, align 8
  ret %struct_template_circuit_tatepairing* %struct_template_circuit_tatepairing
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare noalias i8* @malloc(i32)

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #1 = { argmemonly nofree nounwind willreturn }
