; ModuleID = './auditing/curve_fp2.ll'
source_filename = "/Users/hongbo/code/circom-pairing/circuits/curve_fp2.circom"

%struct_template_circuit_and = type { i128, i128, i128 }
%struct_template_circuit_bigmultshortlong2d = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_xor = type { i128, i128, i128 }
%struct_template_circuit_nor = type { i128, i128, i128 }
%struct_template_circuit_bits2num = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_nand = type { i128, i128, i128 }
%struct_template_circuit_iszero = type { i128, i128, i128 }
%struct_template_circuit_bigmultshortlongunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_bigmultshortlong = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_num2bits = type { i128, i128, [256 x i128]* }
%struct_template_circuit_signedfp2multiplynocarryunequal = type { i128, i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_modsum = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_split = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_bigiszero = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_not = type { i128, i128 }
%struct_template_circuit_binsum = type { i128, i128, [256 x [256 x i128]]*, [256 x i128]* }
%struct_template_circuit_bigmultshortlong2dunequal = type { i128, i128, i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_checkcarrytozero = type { i128, i128, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedfp12scalarmultiplynocarry = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_rangecheck2d = type { i128, i128, [256 x [256 x i128]]* }
%struct_template_circuit_modsumfour = type { i128, i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_or = type { i128, i128, i128 }
%struct_template_circuit_isequal = type { [256 x i128]*, i128 }
%struct_template_circuit_compconstant = type { i128, [256 x i128]*, [256 x i128]*, i128, i128 }
%struct_template_circuit_checkcarrymodp = type { i128, i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedfp2multiplynocarry = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_splitthree = type { i128, i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_multiand = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_lessthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_bigisequal = type { i128, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_num2bitsneg = type { i128, i128, [256 x i128]* }
%struct_template_circuit_greaterthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_signedfp12fp2multiplynocarry = type { i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_modsumthree = type { i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_signedfp12scalarmultiplynocarryunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp12fp2multiplynocarryunequal = type { i128, i128, i128, i128, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_modprod = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_forceequalifenabled = type { i128, [256 x i128]* }
%struct_template_circuit_bigadd = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_lesseqthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_signedfp12multiplynocarryunequal = type { i128, i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp12multiplynocarry = type { i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_aliascheck = type { [256 x i128]* }
%struct_template_circuit_longtoshortnoendcarry = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_greatereqthan = type { i128, [256 x i128]*, i128 }
%struct_template_circuit_bits2num_strict = type { [256 x i128]*, i128 }
%struct_template_circuit_bigmult = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_biglessthan = type { i128, i128, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_fpisequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_modsubthree = type { i128, i128, i128, i128, i128, i128, i128 }
%struct_template_circuit_num2bits_strict = type { i128, [256 x i128]* }
%struct_template_circuit_signedfpcarrymodp = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_modsub = type { i128, i128, i128, i128, i128 }
%struct_template_circuit_fp2iszero = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_fpsgn0 = type { i128, i128, [256 x i128]*, [256 x i128]*, i128, i128 }
%struct_template_circuit_signedfp12carrymodp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_bigsub = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_bigmod2 = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp2sgn0 = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128, i128 }
%struct_template_circuit_bigaddmodp = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_bigmod = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedcheckcarrymodtozero = type { i128, i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_bigsubmodp = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_signedfp2carrymodp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fpiszero = type { i128, i128, [256 x i128]*, [256 x i128]*, i128 }
%struct_template_circuit_fp2isequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_bigmodinv = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fpnegate = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fpadd = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp2negate = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_primereduce = type { i128, i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fpsubtract = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, i128, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_bigmultmodp = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_fp2conjugate = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp2add = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_pointoncurve = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]* }
%struct_template_circuit_fpmultiply = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x i128]* }
%struct_template_circuit_pointoncurvefp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointonlinefp2 = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x [256 x i128]]]]* }
%struct_template_circuit_ellipticcurvefunction = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp12add = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurveaddunequalfp2 = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp2frobeniusmap = type { i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_pointontangentfp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x [256 x i128]]]]* }
%struct_template_circuit_fp2compress = type { i128, i128, i128, [256 x i128]*, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_pointonline = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12compress = type { i128, i128, i128, [256 x i128]*, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_pointontangent = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvedoublefp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvedouble = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp2subtract = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_signedfp2compresscarry = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurveaddunequal = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurveadd = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128, [256 x [256 x i128]]*, i128, i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_signedfp2multiplynocarrycompressthree = type { i128, i128, [256 x i128]*, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp6invert = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_signedfp2multiplynocarrycompress = type { i128, i128, [256 x i128]*, i128, i128, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurveaddfp2 = type { i128, i128, [256 x i128]*, [256 x i128]*, [256 x i128]*, [256 x [256 x [256 x i128]]]*, i128, [256 x [256 x [256 x i128]]]*, i128, i128, i128, i128, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]*, i128 }
%struct_template_circuit_fp2multiply = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_signedfp12multiplynocarrycompress = type { i128, i128, [256 x i128]*, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2 = type { i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12frobeniusmap = type { i128, i128, i128, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvescalarmultiply = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, i128, [256 x [256 x [256 x i128]]]*, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, i128 }
%struct_template_circuit_signedfp2divide = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_ellipticcurvescalarmultiplyunequal = type { i128, i128, i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp2multiplythree = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp12multiply = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12square = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_ellipticcurvescalarmultiplyfp2 = type { i128, i128, [256 x i128]*, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, i128, [256 x [256 x [256 x [256 x i128]]]]*, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, i128 }
%struct_template_circuit_fp2invert = type { i128, i128, [256 x i128]*, [256 x [256 x i128]]*, [256 x [256 x i128]]* }
%struct_template_circuit_fp12exp = type { i128, i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }
%struct_template_circuit_fp12invert = type { i128, i128, [256 x i128]*, [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]* }

@constraint = external global i1
@constraint.1 = external global i1
@constraint.2 = external global i1
@constraint.3 = external global i1
@constraint.4 = external global i1
@constraint.5 = external global i1
@constraint.6 = external global i1
@constraint.7 = external global i1
@constraint.8 = external global i1
@constraint.9 = external global i1
@constraint.10 = external global i1
@constraint.11 = external global i1
@constraint.12 = external global i1
@constraint.13 = external global i1
@constraint.14 = external global i1
@constraint.15 = external global i1
@constraint.16 = external global i1
@constraint.17 = external global i1
@constraint.18 = external global i1
@constraint.19 = external global i1
@constraint.20 = external global i1
@constraint.21 = external global i1
@constraint.22 = external global i1
@constraint.23 = external global i1
@constraint.24 = external global i1
@constraint.25 = external global i1
@constraint.26 = external global i1
@constraint.27 = external global i1
@constraint.28 = external global i1
@constraint.29 = external global i1
@constraint.30 = external global i1
@constraint.31 = external global i1
@constraint.32 = external global i1
@constraint.33 = external global i1
@constraint.34 = external global i1
@constraint.35 = external global i1
@constraint.36 = external global i1
@constraint.37 = external global i1
@constraint.38 = external global i1
@constraint.39 = external global i1
@constraint.40 = external global i1
@constraint.41 = external global i1
@constraint.42 = external global i1
@constraint.43 = external global i1
@constraint.44 = external global i1
@constraint.45 = external global i1
@constraint.46 = external global i1
@constraint.47 = external global i1
@constraint.48 = external global i1
@constraint.49 = external global i1
@constraint.50 = external global i1
@constraint.51 = external global i1
@constraint.52 = external global i1
@constraint.53 = external global i1
@constraint.54 = external global i1
@constraint.55 = external global i1
@constraint.56 = external global i1
@constraint.57 = external global i1
@constraint.58 = external global i1
@constraint.59 = external global i1
@constraint.60 = external global i1
@constraint.61 = external global i1
@constraint.62 = external global i1
@constraint.63 = external global i1
@constraint.64 = external global i1
@constraint.65 = external global i1
@constraint.66 = external global i1
@constraint.67 = external global i1
@constraint.68 = external global i1
@constraint.69 = external global i1
@constraint.70 = external global i1
@constraint.71 = external global i1
@constraint.72 = external global i1
@constraint.73 = external global i1
@constraint.74 = external global i1
@constraint.75 = external global i1
@constraint.76 = external global i1
@constraint.77 = external global i1
@constraint.78 = external global i1
@constraint.79 = external global i1
@constraint.80 = external global i1
@constraint.81 = external global i1
@constraint.82 = external global i1
@constraint.83 = external global i1
@constraint.84 = external global i1
@constraint.85 = external global i1
@constraint.86 = external global i1
@constraint.87 = external global i1
@constraint.88 = external global i1
@constraint.89 = external global i1
@constraint.90 = external global i1
@constraint.91 = external global i1
@constraint.92 = external global i1
@constraint.93 = external global i1
@constraint.94 = external global i1
@constraint.95 = external global i1
@constraint.96 = external global i1
@constraint.97 = external global i1
@constraint.98 = external global i1
@constraint.99 = external global i1
@constraint.100 = external global i1
@constraint.101 = external global i1
@constraint.102 = external global i1
@constraint.103 = external global i1
@constraint.104 = external global i1
@constraint.105 = external global i1
@constraint.106 = external global i1
@constraint.107 = external global i1
@constraint.108 = external global i1
@constraint.109 = external global i1
@constraint.110 = external global i1
@constraint.111 = external global i1
@constraint.112 = external global i1
@constraint.113 = external global i1
@constraint.114 = external global i1
@constraint.115 = external global i1
@constraint.116 = external global i1
@constraint.117 = external global i1
@constraint.118 = external global i1
@constraint.119 = external global i1
@constraint.120 = external global i1
@constraint.121 = external global i1
@constraint.122 = external global i1
@constraint.123 = external global i1
@constraint.124 = external global i1
@constraint.125 = external global i1
@constraint.126 = external global i1
@constraint.127 = external global i1
@constraint.128 = external global i1
@constraint.129 = external global i1
@constraint.130 = external global i1
@constraint.131 = external global i1
@constraint.132 = external global i1
@constraint.133 = external global i1
@constraint.134 = external global i1
@constraint.135 = external global i1
@constraint.136 = external global i1
@constraint.137 = external global i1
@constraint.138 = external global i1
@constraint.139 = external global i1
@constraint.140 = external global i1
@constraint.141 = external global i1
@constraint.142 = external global i1
@constraint.143 = external global i1
@constraint.144 = external global i1
@constraint.145 = external global i1
@constraint.146 = external global i1
@constraint.147 = external global i1
@constraint.148 = external global i1
@constraint.149 = external global i1
@constraint.150 = external global i1
@constraint.151 = external global i1
@constraint.152 = external global i1
@constraint.153 = external global i1
@constraint.154 = external global i1
@constraint.155 = external global i1
@constraint.156 = external global i1
@constraint.157 = external global i1
@constraint.158 = external global i1
@constraint.159 = external global i1
@constraint.160 = external global i1
@constraint.161 = external global i1
@constraint.162 = external global i1
@constraint.163 = external global i1
@constraint.164 = external global i1
@constraint.165 = external global i1
@constraint.166 = external global i1
@constraint.167 = external global i1
@constraint.168 = external global i1
@constraint.169 = external global i1
@constraint.170 = external global i1
@constraint.171 = external global i1
@constraint.172 = external global i1
@constraint.173 = external global i1
@constraint.174 = external global i1
@constraint.175 = external global i1
@constraint.176 = external global i1
@constraint.177 = external global i1
@constraint.178 = external global i1
@constraint.179 = external global i1
@constraint.180 = external global i1
@constraint.181 = external global i1
@constraint.182 = external global i1
@constraint.183 = external global i1
@constraint.184 = external global i1
@constraint.185 = external global i1
@constraint.186 = external global i1
@constraint.187 = external global i1
@constraint.188 = external global i1
@constraint.189 = external global i1
@constraint.190 = external global i1
@constraint.191 = external global i1
@constraint.192 = external global i1
@constraint.193 = external global i1
@constraint.194 = external global i1
@constraint.195 = external global i1
@constraint.196 = external global i1
@constraint.197 = external global i1
@constraint.198 = external global i1
@constraint.199 = external global i1
@constraint.200 = external global i1
@constraint.201 = external global i1
@constraint.202 = external global i1
@constraint.203 = external global i1
@constraint.204 = external global i1
@constraint.205 = external global i1
@constraint.206 = external global i1
@constraint.207 = external global i1
@constraint.208 = external global i1
@constraint.209 = external global i1
@constraint.210 = external global i1
@constraint.211 = external global i1
@constraint.212 = external global i1
@constraint.213 = external global i1
@constraint.214 = external global i1
@constraint.215 = external global i1
@constraint.216 = external global i1
@constraint.217 = external global i1
@constraint.218 = external global i1
@constraint.219 = external global i1
@constraint.220 = external global i1
@constraint.221 = external global i1
@constraint.222 = external global i1
@constraint.223 = external global i1
@constraint.224 = external global i1
@constraint.225 = external global i1
@constraint.226 = external global i1
@constraint.227 = external global i1
@constraint.228 = external global i1
@constraint.229 = external global i1
@constraint.230 = external global i1
@constraint.231 = external global i1
@constraint.232 = external global i1
@constraint.233 = external global i1
@constraint.234 = external global i1
@constraint.235 = external global i1
@constraint.236 = external global i1
@constraint.237 = external global i1
@constraint.238 = external global i1
@constraint.239 = external global i1
@constraint.240 = external global i1
@constraint.241 = external global i1
@constraint.242 = external global i1
@constraint.243 = external global i1
@constraint.244 = external global i1
@constraint.245 = external global i1
@constraint.246 = external global i1
@constraint.247 = external global i1
@constraint.248 = external global i1
@constraint.249 = external global i1
@constraint.250 = external global i1
@constraint.251 = external global i1
@constraint.252 = external global i1
@constraint.253 = external global i1
@constraint.254 = external global i1
@constraint.255 = external global i1
@constraint.256 = external global i1
@constraint.257 = external global i1
@constraint.258 = external global i1
@constraint.259 = external global i1
@constraint.260 = external global i1
@constraint.261 = external global i1
@constraint.262 = external global i1
@constraint.263 = external global i1
@constraint.264 = external global i1
@constraint.265 = external global i1
@constraint.266 = external global i1
@constraint.267 = external global i1
@constraint.268 = external global i1
@constraint.269 = external global i1
@constraint.270 = external global i1
@constraint.271 = external global i1
@constraint.272 = external global i1
@constraint.273 = external global i1
@constraint.274 = external global i1
@constraint.275 = external global i1
@constraint.276 = external global i1
@constraint.277 = external global i1
@constraint.278 = external global i1
@constraint.279 = external global i1
@constraint.280 = external global i1
@constraint.281 = external global i1
@constraint.282 = external global i1
@constraint.283 = external global i1
@constraint.284 = external global i1
@constraint.285 = external global i1
@constraint.286 = external global i1
@constraint.287 = external global i1
@constraint.288 = external global i1
@constraint.289 = external global i1
@constraint.290 = external global i1
@constraint.291 = external global i1
@constraint.292 = external global i1
@constraint.293 = external global i1
@constraint.294 = external global i1
@constraint.295 = external global i1
@constraint.296 = external global i1
@constraint.297 = external global i1
@constraint.298 = external global i1
@constraint.299 = external global i1
@constraint.300 = external global i1
@constraint.301 = external global i1
@constraint.302 = external global i1
@constraint.303 = external global i1
@constraint.304 = external global i1
@constraint.305 = external global i1
@constraint.306 = external global i1
@constraint.307 = external global i1
@constraint.308 = external global i1
@constraint.309 = external global i1
@constraint.310 = external global i1
@constraint.311 = external global i1
@constraint.312 = external global i1
@constraint.313 = external global i1
@constraint.314 = external global i1
@constraint.315 = external global i1
@constraint.316 = external global i1
@constraint.317 = external global i1
@constraint.318 = external global i1
@constraint.319 = external global i1
@constraint.320 = external global i1
@constraint.321 = external global i1
@constraint.322 = external global i1
@constraint.323 = external global i1
@constraint.324 = external global i1
@constraint.325 = external global i1
@constraint.326 = external global i1
@constraint.327 = external global i1
@constraint.328 = external global i1
@constraint.329 = external global i1
@constraint.330 = external global i1
@constraint.331 = external global i1
@constraint.332 = external global i1
@constraint.333 = external global i1
@constraint.334 = external global i1
@constraint.335 = external global i1
@constraint.336 = external global i1
@constraint.337 = external global i1
@constraint.338 = external global i1
@constraint.339 = external global i1
@constraint.340 = external global i1
@constraint.341 = external global i1
@constraint.342 = external global i1
@constraint.343 = external global i1
@constraint.344 = external global i1
@constraint.345 = external global i1
@constraint.346 = external global i1
@constraint.347 = external global i1
@constraint.348 = external global i1
@constraint.349 = external global i1
@constraint.350 = external global i1
@constraint.351 = external global i1
@constraint.352 = external global i1
@constraint.353 = external global i1
@constraint.354 = external global i1
@constraint.355 = external global i1
@constraint.356 = external global i1
@constraint.357 = external global i1
@constraint.358 = external global i1
@constraint.359 = external global i1
@constraint.360 = external global i1
@constraint.361 = external global i1
@constraint.362 = external global i1
@constraint.363 = external global i1
@constraint.364 = external global i1
@constraint.365 = external global i1
@constraint.366 = external global i1
@constraint.367 = external global i1
@constraint.368 = external global i1
@constraint.369 = external global i1
@constraint.370 = external global i1
@constraint.371 = external global i1
@constraint.372 = external global i1
@constraint.373 = external global i1
@constraint.374 = external global i1
@constraint.375 = external global i1
@constraint.376 = external global i1
@constraint.377 = external global i1
@constraint.378 = external global i1
@constraint.379 = external global i1
@constraint.380 = external global i1
@constraint.381 = external global i1
@constraint.382 = external global i1
@constraint.383 = external global i1
@constraint.384 = external global i1
@constraint.385 = external global i1
@constraint.386 = external global i1
@constraint.387 = external global i1
@constraint.388 = external global i1
@constraint.389 = external global i1
@constraint.390 = external global i1
@constraint.391 = external global i1
@constraint.392 = external global i1
@constraint.393 = external global i1
@constraint.394 = external global i1
@constraint.395 = external global i1
@constraint.396 = external global i1
@constraint.397 = external global i1
@constraint.398 = external global i1
@constraint.399 = external global i1
@constraint.400 = external global i1
@constraint.401 = external global i1
@constraint.402 = external global i1
@constraint.403 = external global i1
@constraint.404 = external global i1
@constraint.405 = external global i1
@constraint.406 = external global i1
@constraint.407 = external global i1
@constraint.408 = external global i1
@constraint.409 = external global i1
@constraint.410 = external global i1
@constraint.411 = external global i1
@constraint.412 = external global i1
@constraint.413 = external global i1
@constraint.414 = external global i1
@constraint.415 = external global i1
@constraint.416 = external global i1
@constraint.417 = external global i1
@constraint.418 = external global i1
@constraint.419 = external global i1
@constraint.420 = external global i1
@constraint.421 = external global i1
@constraint.422 = external global i1
@constraint.423 = external global i1
@constraint.424 = external global i1
@constraint.425 = external global i1
@constraint.426 = external global i1
@constraint.427 = external global i1
@constraint.428 = external global i1
@constraint.429 = external global i1
@constraint.430 = external global i1
@constraint.431 = external global i1
@constraint.432 = external global i1
@constraint.433 = external global i1
@constraint.434 = external global i1
@constraint.435 = external global i1
@constraint.436 = external global i1
@constraint.437 = external global i1
@constraint.438 = external global i1
@constraint.439 = external global i1
@constraint.440 = external global i1
@constraint.441 = external global i1
@constraint.442 = external global i1
@constraint.443 = external global i1
@constraint.444 = external global i1
@constraint.445 = external global i1
@constraint.446 = external global i1
@constraint.447 = external global i1
@constraint.448 = external global i1
@constraint.449 = external global i1
@constraint.450 = external global i1
@constraint.451 = external global i1
@constraint.452 = external global i1
@constraint.453 = external global i1
@constraint.454 = external global i1
@constraint.455 = external global i1
@constraint.456 = external global i1
@constraint.457 = external global i1
@constraint.458 = external global i1
@constraint.459 = external global i1
@constraint.460 = external global i1
@constraint.461 = external global i1
@constraint.462 = external global i1
@constraint.463 = external global i1
@constraint.464 = external global i1
@constraint.465 = external global i1
@constraint.466 = external global i1
@constraint.467 = external global i1
@constraint.468 = external global i1
@constraint.469 = external global i1
@constraint.470 = external global i1
@constraint.471 = external global i1
@constraint.472 = external global i1
@constraint.473 = external global i1
@constraint.474 = external global i1
@constraint.475 = external global i1
@constraint.476 = external global i1
@constraint.477 = external global i1
@constraint.478 = external global i1
@constraint.479 = external global i1
@constraint.480 = external global i1
@constraint.481 = external global i1
@constraint.482 = external global i1
@constraint.483 = external global i1
@constraint.484 = external global i1
@constraint.485 = external global i1
@constraint.486 = external global i1
@constraint.487 = external global i1
@constraint.488 = external global i1
@constraint.489 = external global i1
@constraint.490 = external global i1
@constraint.491 = external global i1
@constraint.492 = external global i1
@constraint.493 = external global i1
@constraint.494 = external global i1
@constraint.495 = external global i1
@constraint.496 = external global i1
@constraint.497 = external global i1
@constraint.498 = external global i1
@constraint.499 = external global i1
@constraint.500 = external global i1
@constraint.501 = external global i1
@constraint.502 = external global i1
@constraint.503 = external global i1
@constraint.504 = external global i1
@constraint.505 = external global i1
@constraint.506 = external global i1
@constraint.507 = external global i1
@constraint.508 = external global i1
@constraint.509 = external global i1
@constraint.510 = external global i1
@constraint.511 = external global i1
@constraint.512 = external global i1
@constraint.513 = external global i1
@constraint.514 = external global i1
@constraint.515 = external global i1
@constraint.516 = external global i1
@constraint.517 = external global i1
@constraint.518 = external global i1
@constraint.519 = external global i1
@constraint.520 = external global i1
@constraint.521 = external global i1
@constraint.522 = external global i1
@constraint.523 = external global i1
@constraint.524 = external global i1
@constraint.525 = external global i1
@constraint.526 = external global i1
@constraint.527 = external global i1
@constraint.528 = external global i1
@constraint.529 = external global i1
@constraint.530 = external global i1
@constraint.531 = external global i1
@constraint.532 = external global i1
@constraint.533 = external global i1
@constraint.534 = external global i1
@constraint.535 = external global i1
@constraint.536 = external global i1
@constraint.537 = external global i1
@constraint.538 = external global i1
@constraint.539 = external global i1
@constraint.540 = external global i1
@constraint.541 = external global i1
@constraint.542 = external global i1
@constraint.543 = external global i1
@constraint.544 = external global i1
@constraint.545 = external global i1
@constraint.546 = external global i1
@constraint.547 = external global i1
@constraint.548 = external global i1
@constraint.549 = external global i1
@constraint.550 = external global i1
@constraint.551 = external global i1
@constraint.552 = external global i1
@constraint.553 = external global i1
@constraint.554 = external global i1
@constraint.555 = external global i1
@constraint.556 = external global i1
@constraint.557 = external global i1
@constraint.558 = external global i1
@constraint.559 = external global i1
@constraint.560 = external global i1
@constraint.561 = external global i1
@constraint.562 = external global i1
@constraint.563 = external global i1
@constraint.564 = external global i1
@constraint.565 = external global i1
@constraint.566 = external global i1
@constraint.567 = external global i1
@constraint.568 = external global i1
@constraint.569 = external global i1
@constraint.570 = external global i1
@constraint.571 = external global i1
@constraint.572 = external global i1
@constraint.573 = external global i1
@constraint.574 = external global i1
@constraint.575 = external global i1
@constraint.576 = external global i1
@constraint.577 = external global i1
@constraint.578 = external global i1
@constraint.579 = external global i1
@constraint.580 = external global i1
@constraint.581 = external global i1
@constraint.582 = external global i1
@constraint.583 = external global i1
@constraint.584 = external global i1
@constraint.585 = external global i1
@constraint.586 = external global i1
@constraint.587 = external global i1
@constraint.588 = external global i1
@constraint.589 = external global i1
@constraint.590 = external global i1
@constraint.591 = external global i1
@constraint.592 = external global i1
@constraint.593 = external global i1
@constraint.594 = external global i1
@constraint.595 = external global i1
@constraint.596 = external global i1
@constraint.597 = external global i1
@constraint.598 = external global i1
@constraint.599 = external global i1
@constraint.600 = external global i1
@constraint.601 = external global i1
@constraint.602 = external global i1
@constraint.603 = external global i1
@constraint.604 = external global i1
@constraint.605 = external global i1
@constraint.606 = external global i1
@constraint.607 = external global i1
@constraint.608 = external global i1
@constraint.609 = external global i1
@constraint.610 = external global i1
@constraint.611 = external global i1
@constraint.612 = external global i1
@constraint.613 = external global i1
@constraint.614 = external global i1
@constraint.615 = external global i1
@constraint.616 = external global i1
@constraint.617 = external global i1
@constraint.618 = external global i1
@constraint.619 = external global i1
@constraint.620 = external global i1
@constraint.621 = external global i1
@constraint.622 = external global i1
@constraint.623 = external global i1
@constraint.624 = external global i1
@constraint.625 = external global i1
@constraint.626 = external global i1
@constraint.627 = external global i1
@constraint.628 = external global i1
@constraint.629 = external global i1
@constraint.630 = external global i1
@constraint.631 = external global i1
@constraint.632 = external global i1
@constraint.633 = external global i1
@constraint.634 = external global i1
@constraint.635 = external global i1
@constraint.636 = external global i1
@constraint.637 = external global i1
@constraint.638 = external global i1
@constraint.639 = external global i1
@constraint.640 = external global i1
@constraint.641 = external global i1
@constraint.642 = external global i1
@constraint.643 = external global i1
@constraint.644 = external global i1
@constraint.645 = external global i1
@constraint.646 = external global i1
@constraint.647 = external global i1
@constraint.648 = external global i1
@constraint.649 = external global i1
@constraint.650 = external global i1
@constraint.651 = external global i1

define void @fn_intrinsic_add_constraint(i128 %0, i128 %1, i1* %2) {
entry:
  %constraint = icmp eq i128 %0, %1
  store i1 %constraint, i1* %2, align 1
  ret void
}

define i128 @fn_intrinsic_inline_switch(i1 %0, i128 %1, i128 %2) {
entry:
  br i1 %0, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  ret i128 %1

if.false:                                         ; preds = %entry
  ret i128 %2
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare fp128 @llvm.powi.f128.i32(fp128, i32) #0

define i128 @fn_intrinsic_inline_powi(i128 %0, i128 %1) {
entry:
  %inline_powi.base = uitofp i128 %0 to fp128
  %inline_powi.power = trunc i128 %1 to i32
  %inline_powi.cal = call fp128 @llvm.powi.f128.i32(fp128 %inline_powi.base, i32 %inline_powi.power)
  %inline_powi.ret = fptoui fp128 %inline_powi.cal to i128
  ret i128 %inline_powi.ret
}

define i128 @fn_intrinsic_inline_init() {
entry:
  ret i128 0
}

define i128 @max(i128 %0, i128 %1) {
entry:
  %sgt = icmp sgt i128 %0, %1
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  ret i128 %0

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false
  ret i128 %1
}

define [256 x i128]* @signed_long_to_short(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %MAXL1 = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %X5 = call i128 @fn_intrinsic_inline_init()
  %borrow6 = call i128 @fn_intrinsic_inline_init()
  %carry7 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array8 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a10 = load i128, i128* %array_getter, align 4
  %temp12 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.0
  store i128 %a10, i128* %temp12, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch20, %loop.exit
  %i.1 = phi i128 [ %1, %loop.exit ], [ %add22, %loop.latch20 ]
  %temp19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.1
  store i128 0, i128* %temp19, align 4
  br label %loop.latch20

loop.latch20:                                     ; preds = %loop.body16
  %add22 = add i128 %i.1, 1
  %sle = icmp sle i128 %add22, 50
  br i1 %sle, label %loop.body16, label %loop.exit25

loop.exit25:                                      ; preds = %loop.latch20
  %lshift = shl i128 1, %0
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch83, %loop.exit25
  %i.2 = phi i128 [ 0, %loop.exit25 ], [ %add85, %loop.latch83 ]
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp30 = load i128, i128* %array_getter29, align 4
  %sge = icmp sge i128 %temp30, 0
  br i1 %sge, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body26
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp34 = load i128, i128* %array_getter33, align 4
  %mod = srem i128 %temp34, %lshift
  %out38 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  store i128 %mod, i128* %out38, align 4
  %add41 = add i128 %i.2, 1
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add41
  %temp43 = load i128, i128* %array_getter42, align 4
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp47 = load i128, i128* %array_getter46, align 4
  %sdiv = sdiv i128 %temp47, %lshift
  %add49 = add i128 %temp43, %sdiv
  %add52 = add i128 %i.2, 1
  %temp53 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add52
  store i128 %add49, i128* %temp53, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body26
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp57 = load i128, i128* %array_getter56, align 4
  %neg = sub i128 0, %temp57
  %add59 = add i128 %neg, %lshift
  %sub = sub i128 %add59, 1
  %sdiv61 = sdiv i128 %sub, %lshift
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.2
  %temp65 = load i128, i128* %array_getter64, align 4
  %mul = mul i128 %sdiv61, %lshift
  %add68 = add i128 %temp65, %mul
  %out71 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  store i128 %add68, i128* %out71, align 4
  %add74 = add i128 %i.2, 1
  %array_getter75 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add74
  %temp76 = load i128, i128* %array_getter75, align 4
  %sub78 = sub i128 %temp76, %sdiv61
  %add81 = add i128 %i.2, 1
  %temp82 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add81
  store i128 %sub78, i128* %temp82, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch83

loop.latch83:                                     ; preds = %if.exit
  %add85 = add i128 %i.2, 1
  %slt88 = icmp slt i128 %add85, 50
  br i1 %slt88, label %loop.body26, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch83
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 50
  %temp95 = load i128, i128* %array_getter94, align 4
  %sge96 = icmp sge i128 %temp95, 0
  br i1 %sge96, label %if.true90, label %if.false91

if.true90:                                        ; preds = %loop.exit89
  %out99 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 50
  store i128 0, i128* %out99, align 4
  ret [256 x i128]* %uniform_array

if.false91:                                       ; preds = %loop.exit89
  br label %if.exit101

if.exit101:                                       ; preds = %if.false91
  br label %loop.body102

loop.body102:                                     ; preds = %loop.latch110, %if.exit101
  %i.3 = phi i128 [ 0, %if.exit101 ], [ %add112, %loop.latch110 ]
  %array_getter105 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.3
  %a106 = load i128, i128* %array_getter105, align 4
  %temp109 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.3
  store i128 %a106, i128* %temp109, align 4
  br label %loop.latch110

loop.latch110:                                    ; preds = %loop.body102
  %add112 = add i128 %i.3, 1
  %slt115 = icmp slt i128 %add112, %1
  br i1 %slt115, label %loop.body102, label %loop.exit116

loop.exit116:                                     ; preds = %loop.latch110
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch122, %loop.exit116
  %i.4 = phi i128 [ %1, %loop.exit116 ], [ %add124, %loop.latch122 ]
  %temp121 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.4
  store i128 0, i128* %temp121, align 4
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.body118
  %add124 = add i128 %i.4, 1
  %sle127 = icmp sle i128 %add124, 50
  br i1 %sle127, label %loop.body118, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch122
  br label %loop.body129

loop.body129:                                     ; preds = %loop.latch198, %loop.exit128
  %i.5 = phi i128 [ 0, %loop.exit128 ], [ %add200, %loop.latch198 ]
  %array_getter134 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp135 = load i128, i128* %array_getter134, align 4
  %slt136 = icmp slt i128 %temp135, 0
  br i1 %slt136, label %if.true130, label %if.false131

if.true130:                                       ; preds = %loop.body129
  %array_getter139 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp140 = load i128, i128* %array_getter139, align 4
  %neg141 = sub i128 0, %temp140
  %sdiv143 = sdiv i128 %neg141, %lshift
  %array_getter146 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp147 = load i128, i128* %array_getter146, align 4
  %mul150 = mul i128 %sdiv143, %lshift
  %add151 = add i128 %temp147, %mul150
  %out154 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 %add151, i128* %out154, align 4
  %add157 = add i128 %i.5, 1
  %array_getter158 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add157
  %temp159 = load i128, i128* %array_getter158, align 4
  %sub161 = sub i128 %temp159, %sdiv143
  %add164 = add i128 %i.5, 1
  %temp165 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add164
  store i128 %sub161, i128* %temp165, align 4
  br label %if.exit197

if.false131:                                      ; preds = %loop.body129
  %array_getter168 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp169 = load i128, i128* %array_getter168, align 4
  %add171 = add i128 %temp169, %lshift
  %sub172 = sub i128 %add171, 1
  %sdiv174 = sdiv i128 %sub172, %lshift
  %array_getter177 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.5
  %temp178 = load i128, i128* %array_getter177, align 4
  %mul181 = mul i128 %sdiv174, %lshift
  %sub182 = sub i128 %temp178, %mul181
  %out185 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 %sub182, i128* %out185, align 4
  %add188 = add i128 %i.5, 1
  %array_getter189 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add188
  %temp190 = load i128, i128* %array_getter189, align 4
  %add192 = add i128 %temp190, %sdiv174
  %add195 = add i128 %i.5, 1
  %temp196 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %add195
  store i128 %add192, i128* %temp196, align 4
  br label %if.exit197

if.exit197:                                       ; preds = %if.false131, %if.true130
  br label %loop.latch198

loop.latch198:                                    ; preds = %if.exit197
  %add200 = add i128 %i.5, 1
  %slt203 = icmp slt i128 %add200, 50
  br i1 %slt203, label %loop.body129, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch198
  %out207 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 50
  store i128 1, i128* %out207, align 4
  ret [256 x i128]* %uniform_array
}

define [256 x i128]* @get_BLS12_381_prime(i128 %0, i128 %1) {
entry:
  %uniform_array = alloca [256 x i128], align 8
  %eq = icmp eq i128 %0, 96
  %eq2 = icmp eq i128 %1, 4
  %and = and i1 %eq, %eq2
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 13402431019052935850, i128 17775978365956444830, i128 7239337961543745430, i128 4143283732999879072, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %p.0 = phi [256 x i128]* [ %const_inline_array, %if.true ], [ %uniform_array, %if.false ]
  %eq6 = icmp eq i128 %0, 77
  %eq8 = icmp eq i128 %1, 5
  %and9 = and i1 %eq6, %eq8
  br i1 %and9, label %if.true3, label %if.false4

if.true3:                                         ; preds = %if.exit
  %const_inline_array10 = alloca [256 x i128], align 8
  store [256 x i128] [i128 13402431016077871786, i128 12763471136632971302, i128 16232292306918877561, i128 7820104214415738342, i128 1233603221149820497, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array10, align 4
  br label %if.exit11

if.false4:                                        ; preds = %if.exit
  br label %if.exit11

if.exit11:                                        ; preds = %if.false4, %if.true3
  %p.1 = phi [256 x i128]* [ %const_inline_array10, %if.true3 ], [ %p.0, %if.false4 ]
  %eq15 = icmp eq i128 %0, 55
  %eq17 = icmp eq i128 %1, 7
  %and18 = and i1 %eq15, %eq17
  br i1 %and18, label %if.true12, label %if.false13

if.true12:                                        ; preds = %if.exit11
  %const_inline_array19 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231467, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array19, align 4
  br label %if.exit20

if.false13:                                       ; preds = %if.exit11
  br label %if.exit20

if.exit20:                                        ; preds = %if.false13, %if.true12
  %p.2 = phi [256 x i128]* [ %const_inline_array19, %if.true12 ], [ %p.1, %if.false13 ]
  ret [256 x i128]* %p.2
}

define void @fn_template_init_and(%struct_template_circuit_and* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 0
  %and.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 1
  %and.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 %and.a.read_input_inner, %and.b.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %mul, i1* @constraint)
  %and.out.write_output_inner = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 2
  store i128 %mul, i128* %and.out.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 2
  %and.out.read_output_inner = load i128, i128* %struct_getter4, align 4
  br label %exit

exit:                                             ; preds = %entry
  %and.out.write_output_inner6 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %0, i32 0, i32 2
  store i128 %and.out.read_output_inner, i128* %and.out.write_output_inner6, align 4
  ret void
}

define %struct_template_circuit_and* @fn_template_build_and() {
entry:
  %struct_template_circuit_and = alloca %struct_template_circuit_and, align 8
  ret %struct_template_circuit_and* %struct_template_circuit_and
}

define void @fn_template_init_bigmultshortlong2d(%struct_template_circuit_bigmultshortlong2d* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 0
  %bigmultshortlong2d.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 1
  %bigmultshortlong2d.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 2
  %bigmultshortlong2d.l.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %deg27 = call i128 @fn_intrinsic_inline_init()
  %i18 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %j29 = call i128 @fn_intrinsic_inline_init()
  %i210 = call i128 @fn_intrinsic_inline_init()
  %j112 = call i128 @fn_intrinsic_inline_init()
  %deg113 = call i128 @fn_intrinsic_inline_init()
  %i14 = call i128 @fn_intrinsic_inline_init()
  %j15 = call i128 @fn_intrinsic_inline_init()
  %k216 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch25, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add27, %loop.latch25 ]
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %prod_val22 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.0, i128 %j.0
  store i128 0, i128* %prod_val22, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body19
  %add = add i128 %j.0, 1
  %mul = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %slt = icmp slt i128 %add, %sub
  br i1 %slt, label %loop.body19, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch25

loop.latch25:                                     ; preds = %loop.exit
  %add27 = add i128 %i.0, 1
  %mul29 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub30 = sub i128 %mul29, 1
  %slt31 = icmp slt i128 %add27, %sub30
  br i1 %slt31, label %loop.body, label %loop.exit32

loop.exit32:                                      ; preds = %loop.latch25
  br label %loop.body33

loop.body33:                                      ; preds = %loop.latch82, %loop.exit32
  %i1.0 = phi i128 [ 0, %loop.exit32 ], [ %add84, %loop.latch82 ]
  br label %loop.body34

loop.body34:                                      ; preds = %loop.latch75, %loop.body33
  %i2.0 = phi i128 [ 0, %loop.body33 ], [ %add77, %loop.latch75 ]
  br label %loop.body35

loop.body35:                                      ; preds = %loop.latch68, %loop.body34
  %j1.0 = phi i128 [ 0, %loop.body34 ], [ %add70, %loop.latch68 ]
  br label %loop.body36

loop.body36:                                      ; preds = %loop.latch61, %loop.body35
  %j2.0 = phi i128 [ 0, %loop.body35 ], [ %add63, %loop.latch61 ]
  %add39 = add i128 %i1.0, %i2.0
  %add42 = add i128 %j1.0, %j2.0
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add39, i128 %add42
  %prod_val46 = load i128, i128* %array_getter, align 4
  %array_getter49 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_inner, i128 0, i128 %i1.0, i128 %j1.0
  %a50 = load i128, i128* %array_getter49, align 4
  %array_getter53 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_inner, i128 0, i128 %i2.0, i128 %j2.0
  %b54 = load i128, i128* %array_getter53, align 4
  %mul55 = mul i128 %a50, %b54
  %add56 = add i128 %prod_val46, %mul55
  %prod_val60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add39, i128 %add42
  store i128 %add56, i128* %prod_val60, align 4
  br label %loop.latch61

loop.latch61:                                     ; preds = %loop.body36
  %add63 = add i128 %j2.0, 1
  %slt66 = icmp slt i128 %add63, %bigmultshortlong2d.k.read_arg_inner
  br i1 %slt66, label %loop.body36, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch61
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit67
  %add70 = add i128 %j1.0, 1
  %slt73 = icmp slt i128 %add70, %bigmultshortlong2d.k.read_arg_inner
  br i1 %slt73, label %loop.body35, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch68
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.exit74
  %add77 = add i128 %i2.0, 1
  %slt80 = icmp slt i128 %add77, %bigmultshortlong2d.l.read_arg_inner
  br i1 %slt80, label %loop.body34, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch75
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.exit81
  %add84 = add i128 %i1.0, 1
  %slt87 = icmp slt i128 %add84, %bigmultshortlong2d.l.read_arg_inner
  br i1 %slt87, label %loop.body33, label %loop.exit88

loop.exit88:                                      ; preds = %loop.latch82
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch109, %loop.exit88
  %i.1 = phi i128 [ 0, %loop.exit88 ], [ %add111, %loop.latch109 ]
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch100, %loop.body89
  %j.1 = phi i128 [ 0, %loop.body89 ], [ %add102, %loop.latch100 ]
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.1, i128 %j.1
  %prod_val95 = load i128, i128* %array_getter94, align 4
  %out99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  store i128 %prod_val95, i128* %out99, align 4
  br label %loop.latch100

loop.latch100:                                    ; preds = %loop.body90
  %add102 = add i128 %j.1, 1
  %mul105 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub106 = sub i128 %mul105, 1
  %slt107 = icmp slt i128 %add102, %sub106
  br i1 %slt107, label %loop.body90, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch100
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.exit108
  %add111 = add i128 %i.1, 1
  %mul114 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub115 = sub i128 %mul114, 1
  %slt116 = icmp slt i128 %add111, %sub115
  br i1 %slt116, label %loop.body89, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch109
  %mul119 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub120 = sub i128 %mul119, 1
  %mul122 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub123 = sub i128 %mul122, 1
  %sgt = icmp sgt i128 %sub120, %sub123
  %mul125 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub126 = sub i128 %mul125, 1
  %mul128 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub129 = sub i128 %mul128, 1
  %inline_switch = call i128 @fn_intrinsic_inline_switch(i1 %sgt, i128 %sub126, i128 %sub129)
  %uniform_array130 = alloca [256 x [256 x i128]], align 8
  br label %loop.body131

loop.body131:                                     ; preds = %loop.latch148, %loop.exit117
  %i.2 = phi i128 [ 0, %loop.exit117 ], [ %add150, %loop.latch148 ]
  br label %loop.body132

loop.body132:                                     ; preds = %loop.latch141, %loop.body131
  %j.2 = phi i128 [ 0, %loop.body131 ], [ %add143, %loop.latch141 ]
  %pow135 = call i128 @fn_intrinsic_inline_powi(i128 %i.2, i128 %j.2)
  %pow140 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %i.2, i128 %j.2
  store i128 %pow135, i128* %pow140, align 4
  br label %loop.latch141

loop.latch141:                                    ; preds = %loop.body132
  %add143 = add i128 %j.2, 1
  %slt146 = icmp slt i128 %add143, %inline_switch
  br i1 %slt146, label %loop.body132, label %loop.exit147

loop.exit147:                                     ; preds = %loop.latch141
  br label %loop.latch148

loop.latch148:                                    ; preds = %loop.exit147
  %add150 = add i128 %i.2, 1
  %slt153 = icmp slt i128 %add150, %inline_switch
  br i1 %slt153, label %loop.body131, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch148
  %uniform_array155 = alloca [256 x [256 x i128]], align 8
  %uniform_array156 = alloca [256 x [256 x i128]], align 8
  %uniform_array157 = alloca [256 x [256 x i128]], align 8
  br label %loop.body158

loop.body158:                                     ; preds = %loop.latch300, %loop.exit154
  %i.3 = phi i128 [ 0, %loop.exit154 ], [ %add302, %loop.latch300 ]
  br label %loop.body159

loop.body159:                                     ; preds = %loop.latch291, %loop.body158
  %j.3 = phi i128 [ 0, %loop.body158 ], [ %add293, %loop.latch291 ]
  %a_poly163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array155, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %a_poly163, align 4
  %b_poly167 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array156, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %b_poly167, align 4
  %out_poly171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array157, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %out_poly171, align 4
  br label %loop.body172

loop.body172:                                     ; preds = %loop.latch236, %loop.body159
  %deg1.0 = phi i128 [ 0, %loop.body159 ], [ %add238, %loop.latch236 ]
  br label %loop.body173

loop.body173:                                     ; preds = %loop.latch229, %loop.body172
  %deg2.0 = phi i128 [ 0, %loop.body172 ], [ %add231, %loop.latch229 ]
  %array_getter177 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array155, i128 0, i128 %i.3, i128 %j.3
  %a_poly178 = load i128, i128* %array_getter177, align 4
  %array_getter182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_inner, i128 0, i128 %deg1.0, i128 %deg2.0
  %a183 = load i128, i128* %array_getter182, align 4
  %array_getter188 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %i.3, i128 %deg1.0
  %pow189 = load i128, i128* %array_getter188, align 4
  %mul190 = mul i128 %a183, %pow189
  %array_getter194 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %j.3, i128 %deg2.0
  %pow195 = load i128, i128* %array_getter194, align 4
  %mul196 = mul i128 %mul190, %pow195
  %add197 = add i128 %a_poly178, %mul196
  %a_poly201 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array155, i128 0, i128 %i.3, i128 %j.3
  store i128 %add197, i128* %a_poly201, align 4
  %array_getter205 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array156, i128 0, i128 %i.3, i128 %j.3
  %b_poly206 = load i128, i128* %array_getter205, align 4
  %array_getter210 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_inner, i128 0, i128 %deg1.0, i128 %deg2.0
  %b211 = load i128, i128* %array_getter210, align 4
  %array_getter215 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %i.3, i128 %deg1.0
  %pow216 = load i128, i128* %array_getter215, align 4
  %mul217 = mul i128 %b211, %pow216
  %array_getter221 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %j.3, i128 %deg2.0
  %pow222 = load i128, i128* %array_getter221, align 4
  %mul223 = mul i128 %mul217, %pow222
  %add224 = add i128 %b_poly206, %mul223
  %b_poly228 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array156, i128 0, i128 %i.3, i128 %j.3
  store i128 %add224, i128* %b_poly228, align 4
  br label %loop.latch229

loop.latch229:                                    ; preds = %loop.body173
  %add231 = add i128 %deg2.0, 1
  %slt234 = icmp slt i128 %add231, %bigmultshortlong2d.k.read_arg_inner
  br i1 %slt234, label %loop.body173, label %loop.exit235

loop.exit235:                                     ; preds = %loop.latch229
  br label %loop.latch236

loop.latch236:                                    ; preds = %loop.exit235
  %add238 = add i128 %deg1.0, 1
  %slt241 = icmp slt i128 %add238, %bigmultshortlong2d.l.read_arg_inner
  br i1 %slt241, label %loop.body172, label %loop.exit242

loop.exit242:                                     ; preds = %loop.latch236
  br label %loop.body243

loop.body243:                                     ; preds = %loop.latch282, %loop.exit242
  %deg1.1 = phi i128 [ 0, %loop.exit242 ], [ %add284, %loop.latch282 ]
  br label %loop.body244

loop.body244:                                     ; preds = %loop.latch273, %loop.body243
  %deg2.1 = phi i128 [ 0, %loop.body243 ], [ %add275, %loop.latch273 ]
  %array_getter248 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array157, i128 0, i128 %i.3, i128 %j.3
  %out_poly249 = load i128, i128* %array_getter248, align 4
  %array_getter253 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %deg1.1, i128 %deg2.1
  %out254 = load i128, i128* %array_getter253, align 4
  %array_getter258 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %i.3, i128 %deg1.1
  %pow259 = load i128, i128* %array_getter258, align 4
  %mul260 = mul i128 %out254, %pow259
  %array_getter265 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array130, i128 0, i128 %j.3, i128 %deg2.1
  %pow266 = load i128, i128* %array_getter265, align 4
  %mul267 = mul i128 %mul260, %pow266
  %add268 = add i128 %out_poly249, %mul267
  %out_poly272 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array157, i128 0, i128 %i.3, i128 %j.3
  store i128 %add268, i128* %out_poly272, align 4
  br label %loop.latch273

loop.latch273:                                    ; preds = %loop.body244
  %add275 = add i128 %deg2.1, 1
  %mul278 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub279 = sub i128 %mul278, 1
  %slt280 = icmp slt i128 %add275, %sub279
  br i1 %slt280, label %loop.body244, label %loop.exit281

loop.exit281:                                     ; preds = %loop.latch273
  br label %loop.latch282

loop.latch282:                                    ; preds = %loop.exit281
  %add284 = add i128 %deg1.1, 1
  %mul287 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub288 = sub i128 %mul287, 1
  %slt289 = icmp slt i128 %add284, %sub288
  br i1 %slt289, label %loop.body243, label %loop.exit290

loop.exit290:                                     ; preds = %loop.latch282
  br label %loop.latch291

loop.latch291:                                    ; preds = %loop.exit290
  %add293 = add i128 %j.3, 1
  %mul296 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub297 = sub i128 %mul296, 1
  %slt298 = icmp slt i128 %add293, %sub297
  br i1 %slt298, label %loop.body159, label %loop.exit299

loop.exit299:                                     ; preds = %loop.latch291
  br label %loop.latch300

loop.latch300:                                    ; preds = %loop.exit299
  %add302 = add i128 %i.3, 1
  %mul305 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub306 = sub i128 %mul305, 1
  %slt307 = icmp slt i128 %add302, %sub306
  br i1 %slt307, label %loop.body158, label %loop.exit308

loop.exit308:                                     ; preds = %loop.latch300
  br label %loop.body309

loop.body309:                                     ; preds = %loop.latch336, %loop.exit308
  %i.4 = phi i128 [ 0, %loop.exit308 ], [ %add338, %loop.latch336 ]
  br label %loop.body310

loop.body310:                                     ; preds = %loop.latch327, %loop.body309
  %j.4 = phi i128 [ 0, %loop.body309 ], [ %add329, %loop.latch327 ]
  %array_getter314 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array157, i128 0, i128 %i.4, i128 %j.4
  %out_poly315 = load i128, i128* %array_getter314, align 4
  %array_getter319 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array155, i128 0, i128 %i.4, i128 %j.4
  %a_poly320 = load i128, i128* %array_getter319, align 4
  %array_getter324 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array156, i128 0, i128 %i.4, i128 %j.4
  %b_poly325 = load i128, i128* %array_getter324, align 4
  %mul326 = mul i128 %a_poly320, %b_poly325
  call void @fn_intrinsic_add_constraint(i128 %out_poly315, i128 %mul326, i1* @constraint.1)
  br label %loop.latch327

loop.latch327:                                    ; preds = %loop.body310
  %add329 = add i128 %j.4, 1
  %mul332 = mul i128 2, %bigmultshortlong2d.k.read_arg_inner
  %sub333 = sub i128 %mul332, 1
  %slt334 = icmp slt i128 %add329, %sub333
  br i1 %slt334, label %loop.body310, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch327
  br label %loop.latch336

loop.latch336:                                    ; preds = %loop.exit335
  %add338 = add i128 %i.4, 1
  %mul341 = mul i128 2, %bigmultshortlong2d.l.read_arg_inner
  %sub342 = sub i128 %mul341, 1
  %slt343 = icmp slt i128 %add338, %sub342
  br i1 %slt343, label %loop.body309, label %loop.exit344

loop.exit344:                                     ; preds = %loop.latch336
  br label %exit

exit:                                             ; preds = %loop.exit344
  %bigmultshortlong2d.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %bigmultshortlong2d.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_bigmultshortlong2d = alloca %struct_template_circuit_bigmultshortlong2d, align 8
  %bigmultshortlong2d.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlong2d.n.write_arg_inner, align 4
  %bigmultshortlong2d.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlong2d.k.write_arg_inner, align 4
  %bigmultshortlong2d.l.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlong2d.l.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlong2d* %struct_template_circuit_bigmultshortlong2d
}

define [2 x i128]* @SplitFn(i128 %0, i128 %1, i128 %2) {
entry:
  %var_inline_array = alloca [2 x i128], align 8
  %lshift = shl i128 1, %1
  %mod = srem i128 %0, %lshift
  %var_inline_array1 = getelementptr inbounds [2 x i128], [2 x i128]* %var_inline_array, i128 0, i128 0
  store i128 %mod, i128* %var_inline_array1, align 4
  %lshift4 = shl i128 1, %1
  %sdiv = sdiv i128 %0, %lshift4
  %lshift5 = shl i128 1, %2
  %mod6 = srem i128 %sdiv, %lshift5
  %var_inline_array7 = getelementptr inbounds [2 x i128], [2 x i128]* %var_inline_array, i128 0, i128 1
  store i128 %mod6, i128* %var_inline_array7, align 4
  ret [2 x i128]* %var_inline_array
}

define i128 @long_gt(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %sub = sub i128 %1, 1
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ %sub, %entry ], [ %sub19, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a3 = load i128, i128* %array_getter, align 4
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b6 = load i128, i128* %array_getter5, align 4
  %sgt = icmp sgt i128 %a3, %b6
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  ret i128 1

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter11, align 4
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b16 = load i128, i128* %array_getter15, align 4
  %slt = icmp slt i128 %a12, %b16
  br i1 %slt, label %if.true7, label %if.false8

if.true7:                                         ; preds = %if.exit
  ret i128 0

if.false8:                                        ; preds = %if.exit
  br label %if.exit17

if.exit17:                                        ; preds = %if.false8
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit17
  %sub19 = sub i128 %i.0, 1
  %sge = icmp sge i128 %sub19, 0
  br i1 %sge, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 0
}

define [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array4 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add106, %loop.latch ]
  %eq = icmp eq i128 %i.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a9 = load i128, i128* %array_getter, align 4
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b12 = load i128, i128* %array_getter11, align 4
  %sge = icmp sge i128 %a9, %b12
  br i1 %sge, label %if.true6, label %if.false7

if.false:                                         ; preds = %loop.body
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a46 = load i128, i128* %array_getter45, align 4
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b50 = load i128, i128* %array_getter49, align 4
  %sub53 = sub i128 %i.0, 1
  %array_getter54 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %sub53
  %borrow55 = load i128, i128* %array_getter54, align 4
  %add56 = add i128 %b50, %borrow55
  %sge57 = icmp sge i128 %a46, %add56
  br i1 %sge57, label %if.true41, label %if.false42

if.true6:                                         ; preds = %if.true
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a16 = load i128, i128* %array_getter15, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b20 = load i128, i128* %array_getter19, align 4
  %sub = sub i128 %a16, %b20
  %diff22 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sub, i128* %diff22, align 4
  %borrow25 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 0, i128* %borrow25, align 4
  br label %if.exit

if.false7:                                        ; preds = %if.true
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a29 = load i128, i128* %array_getter28, align 4
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b33 = load i128, i128* %array_getter32, align 4
  %sub34 = sub i128 %a29, %b33
  %lshift = shl i128 1, %0
  %add = add i128 %sub34, %lshift
  %diff37 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add, i128* %diff37, align 4
  %borrow40 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 1, i128* %borrow40, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false7, %if.true6
  br label %if.exit104

if.true41:                                        ; preds = %if.false
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a61 = load i128, i128* %array_getter60, align 4
  %array_getter64 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b65 = load i128, i128* %array_getter64, align 4
  %sub66 = sub i128 %a61, %b65
  %sub69 = sub i128 %i.0, 1
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %sub69
  %borrow71 = load i128, i128* %array_getter70, align 4
  %sub72 = sub i128 %sub66, %borrow71
  %diff75 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sub72, i128* %diff75, align 4
  %borrow78 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 0, i128* %borrow78, align 4
  br label %if.exit103

if.false42:                                       ; preds = %if.false
  %lshift80 = shl i128 1, %0
  %array_getter83 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a84 = load i128, i128* %array_getter83, align 4
  %add85 = add i128 %lshift80, %a84
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b89 = load i128, i128* %array_getter88, align 4
  %sub90 = sub i128 %add85, %b89
  %sub93 = sub i128 %i.0, 1
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %sub93
  %borrow95 = load i128, i128* %array_getter94, align 4
  %sub96 = sub i128 %sub90, %borrow95
  %diff99 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sub96, i128* %diff99, align 4
  %borrow102 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array4, i128 0, i128 %i.0
  store i128 1, i128* %borrow102, align 4
  br label %if.exit103

if.exit103:                                       ; preds = %if.false42, %if.true41
  br label %if.exit104

if.exit104:                                       ; preds = %if.exit103, %if.exit
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit104
  %add106 = add i128 %i.0, 1
  %slt = icmp slt i128 %add106, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x i128]* %uniform_array
}

define void @fn_template_init_xor(%struct_template_circuit_xor* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 0
  %xor.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 1
  %xor.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %xor.a.read_input_inner, %xor.b.read_input_inner
  %mul = mul i128 2, %xor.a.read_input_inner
  %mul4 = mul i128 %mul, %xor.b.read_input_inner
  %sub = sub i128 %add, %mul4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.2)
  %xor.out.write_output_inner = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 2
  store i128 %sub, i128* %xor.out.write_output_inner, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 2
  %xor.out.read_output_inner = load i128, i128* %struct_getter7, align 4
  br label %exit

exit:                                             ; preds = %entry
  %xor.out.write_output_inner9 = getelementptr inbounds %struct_template_circuit_xor, %struct_template_circuit_xor* %0, i32 0, i32 2
  store i128 %xor.out.read_output_inner, i128* %xor.out.write_output_inner9, align 4
  ret void
}

define %struct_template_circuit_xor* @fn_template_build_xor() {
entry:
  %struct_template_circuit_xor = alloca %struct_template_circuit_xor, align 8
  ret %struct_template_circuit_xor* %struct_template_circuit_xor
}

define [256 x [256 x [256 x i128]]]* @get_roots_of_unity(i128 %0, i128 %1) {
entry:
  %idx1 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %roots4 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0, i128 %idx.0
  store i128 0, i128* %roots4, align 4
  %roots7 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1, i128 %idx.0
  store i128 0, i128* %roots7, align 4
  %roots10 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 0, i128 %idx.0
  store i128 0, i128* %roots10, align 4
  %roots13 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1, i128 %idx.0
  store i128 0, i128* %roots13, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %roots17 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %roots17, align 4
  %roots19 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0
  store i128 1, i128* %roots19, align 4
  %eq = icmp eq i128 %0, 55
  %eq21 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq21
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.exit
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 4649817190157321, i128 14178090100713872, i128 25898210532243870, i128 6361890036890480, i128 6755281389607612, i128 401348527762810, i128 470331148861392, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %roots23 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 0
  %2 = bitcast [256 x i128]* %roots23 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array24 = alloca [256 x i128], align 8
  store [256 x i128] [i128 4649817190157321, i128 14178090100713872, i128 25898210532243870, i128 6361890036890480, i128 6755281389607612, i128 401348527762810, i128 470331148861392, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array24, align 4
  %roots26 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 1
  %4 = bitcast [256 x i128]* %roots26 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array27 = alloca [256 x i128], align 8
  store [256 x i128] [i128 4649817190157321, i128 14178090100713872, i128 25898210532243870, i128 6361890036890480, i128 6755281389607612, i128 401348527762810, i128 470331148861392, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array27, align 4
  %roots29 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 0
  %6 = bitcast [256 x i128]* %roots29 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array30 = alloca [256 x i128], align 8
  store [256 x i128] [i128 31097504852074146, i128 21847832108733923, i128 11215546103677201, i128 1564033941097252, i128 9796175148277139, i128 23041766052141807, i128 1359550313685033, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array30, align 4
  %roots32 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 1
  %8 = bitcast [256 x i128]* %roots32 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %loop.exit
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define [256 x i128]* @long_add(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %carry1 = call i128 @fn_intrinsic_inline_init()
  %i2 = call i128 @fn_intrinsic_inline_init()
  %sumAndCarry = alloca [256 x i128]*, align 8
  %sumAndCarry4 = alloca [256 x i128], align 8
  store [256 x i128]* %sumAndCarry4, [256 x i128]** %sumAndCarry, align 8
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %carry.0 = phi i128 [ 0, %entry ], [ %sumAndCarry20, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add22, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a6 = load i128, i128* %array_getter, align 4
  %array_getter8 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b9 = load i128, i128* %array_getter8, align 4
  %add = add i128 %a6, %b9
  %add11 = add i128 %add, %carry.0
  %call = call [2 x i128]* @SplitFn(i128 %add11, i128 %0, i128 %0)
  %memcpy_ptr = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %4 = bitcast [256 x i128]** %memcpy_ptr to i8*
  %5 = bitcast [2 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry13 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter14 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry13, i128 0, i128 0
  %sumAndCarry15 = load i128, i128* %array_getter14, align 4
  %sum17 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry15, i128* %sum17, align 4
  %sumAndCarry18 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry18, i128 0, i128 1
  %sumAndCarry20 = load i128, i128* %array_getter19, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add22 = add i128 %i.0, 1
  %slt = icmp slt i128 %add22, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sum27 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %1
  store i128 %sumAndCarry20, i128* %sum27, align 4
  ret [256 x i128]* %uniform_array
}

define i128 @nbits(i128 %0) {
entry:
  %n1 = call i128 @fn_intrinsic_inline_init()
  %r2 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %n.0 = phi i128 [ 1, %entry ], [ %mul, %loop.latch ]
  %r.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %add = add i128 %r.0, 1
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %mul = mul i128 %n.0, 2
  %sub = sub i128 %mul, 1
  %slt = icmp slt i128 %sub, %0
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 %add
}

define i128 @get_fp_sgn0([256 x i128]* %0) {
entry:
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %0, i128 0, i128 0
  %a1 = load i128, i128* %array_getter, align 4
  %mod = srem i128 %a1, 2
  ret i128 %mod
}

define [3 x i128]* @SplitThreeFn(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %var_inline_array = alloca [3 x i128], align 8
  %lshift = shl i128 1, %1
  %mod = srem i128 %0, %lshift
  %var_inline_array1 = getelementptr inbounds [3 x i128], [3 x i128]* %var_inline_array, i128 0, i128 0
  store i128 %mod, i128* %var_inline_array1, align 4
  %lshift4 = shl i128 1, %1
  %sdiv = sdiv i128 %0, %lshift4
  %lshift5 = shl i128 1, %2
  %mod6 = srem i128 %sdiv, %lshift5
  %var_inline_array7 = getelementptr inbounds [3 x i128], [3 x i128]* %var_inline_array, i128 0, i128 1
  store i128 %mod6, i128* %var_inline_array7, align 4
  %add = add i128 %1, %2
  %lshift11 = shl i128 1, %add
  %sdiv12 = sdiv i128 %0, %lshift11
  %lshift13 = shl i128 1, %3
  %mod14 = srem i128 %sdiv12, %lshift13
  %var_inline_array15 = getelementptr inbounds [3 x i128], [3 x i128]* %var_inline_array, i128 0, i128 2
  store i128 %mod14, i128* %var_inline_array15, align 4
  ret [3 x i128]* %var_inline_array
}

define void @fn_template_init_nor(%struct_template_circuit_nor* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 0
  %nor.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 1
  %nor.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 %nor.a.read_input_inner, %nor.b.read_input_inner
  %add = add i128 %mul, 1
  %sub = sub i128 %add, %nor.a.read_input_inner
  %sub4 = sub i128 %sub, %nor.b.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub4, i1* @constraint.3)
  %nor.out.write_output_inner = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 2
  store i128 %sub4, i128* %nor.out.write_output_inner, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 2
  %nor.out.read_output_inner = load i128, i128* %struct_getter7, align 4
  br label %exit

exit:                                             ; preds = %entry
  %nor.out.write_output_inner9 = getelementptr inbounds %struct_template_circuit_nor, %struct_template_circuit_nor* %0, i32 0, i32 2
  store i128 %nor.out.read_output_inner, i128* %nor.out.write_output_inner9, align 4
  ret void
}

define %struct_template_circuit_nor* @fn_template_build_nor() {
entry:
  %struct_template_circuit_nor = alloca %struct_template_circuit_nor, align 8
  ret %struct_template_circuit_nor* %struct_template_circuit_nor
}

define i128 @long_is_zero(i128 %0, [256 x i128]* %1) {
entry:
  %idx1 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %1, i128 0, i128 %idx.0
  %a3 = load i128, i128* %array_getter, align 4
  %ne = icmp ne i128 %a3, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  ret i128 0

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %0
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 1
}

define void @fn_template_init_bits2num(%struct_template_circuit_bits2num* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 0
  %bits2num.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 1
  %bits2num.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %e22 = call i128 @fn_intrinsic_inline_init()
  %lc13 = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %out = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %e2.0 = phi i128 [ 1, %entry ], [ %add11, %loop.latch ]
  %lc1.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add13, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_inner, i128 0, i128 %i.0
  %in7 = load i128, i128* %array_getter, align 4
  %mul = mul i128 %in7, %e2.0
  %add = add i128 %lc1.0, %mul
  %add11 = add i128 %e2.0, %e2.0
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add13 = add i128 %i.0, 1
  %slt = icmp slt i128 %add13, %bits2num.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %add, i1* @constraint.4)
  %bits2num.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 2
  store i128 %add, i128* %bits2num.out.write_output_inner, align 4
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 2
  %bits2num.out.read_output_inner = load i128, i128* %struct_getter18, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %bits2num.out.write_output_inner20 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %0, i32 0, i32 2
  store i128 %bits2num.out.read_output_inner, i128* %bits2num.out.write_output_inner20, align 4
  ret void
}

define %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 %0) {
entry:
  %struct_template_circuit_bits2num = alloca %struct_template_circuit_bits2num, align 8
  %bits2num.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %struct_template_circuit_bits2num, i32 0, i32 0
  store i128 %0, i128* %bits2num.n.write_arg_inner, align 4
  ret %struct_template_circuit_bits2num* %struct_template_circuit_bits2num
}

define [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %temp1 = call i128 @fn_intrinsic_inline_init()
  %i3 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %out5 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %out5, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 50
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch33, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add35, %loop.latch33 ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %out11 = load i128, i128* %array_getter, align 4
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.1
  %b14 = load i128, i128* %array_getter13, align 4
  %mul = mul i128 %2, %b14
  %add15 = add i128 %out11, %mul
  %lshift = shl i128 1, %0
  %mod = srem i128 %add15, %lshift
  %out19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  store i128 %mod, i128* %out19, align 4
  %add22 = add i128 %i.1, 1
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add22
  %out24 = load i128, i128* %array_getter23, align 4
  %lshift27 = shl i128 1, %0
  %sdiv = sdiv i128 %add15, %lshift27
  %add28 = add i128 %out24, %sdiv
  %add31 = add i128 %i.1, 1
  %out32 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add31
  store i128 %add28, i128* %out32, align 4
  br label %loop.latch33

loop.latch33:                                     ; preds = %loop.body8
  %add35 = add i128 %i.1, 1
  %slt37 = icmp slt i128 %add35, %1
  br i1 %slt37, label %loop.body8, label %loop.exit38

loop.exit38:                                      ; preds = %loop.latch33
  ret [256 x i128]* %uniform_array
}

define void @fn_template_init_nand(%struct_template_circuit_nand* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 0
  %nand.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 1
  %nand.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 %nand.a.read_input_inner, %nand.b.read_input_inner
  %sub = sub i128 1, %mul
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.5)
  %nand.out.write_output_inner = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 2
  store i128 %sub, i128* %nand.out.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 2
  %nand.out.read_output_inner = load i128, i128* %struct_getter4, align 4
  br label %exit

exit:                                             ; preds = %entry
  %nand.out.write_output_inner6 = getelementptr inbounds %struct_template_circuit_nand, %struct_template_circuit_nand* %0, i32 0, i32 2
  store i128 %nand.out.read_output_inner, i128* %nand.out.write_output_inner6, align 4
  ret void
}

define %struct_template_circuit_nand* @fn_template_build_nand() {
entry:
  %struct_template_circuit_nand = alloca %struct_template_circuit_nand, align 8
  ret %struct_template_circuit_nand* %struct_template_circuit_nand
}

define [256 x [256 x [256 x [256 x i128]]]]* @get_Fp12_frobenius(i128 %0, i128 %1) {
entry:
  %uniform_array = alloca [256 x [256 x [256 x [256 x i128]]]], align 8
  %eq = icmp eq i128 %0, 96
  %eq2 = icmp eq i128 %1, 4
  %and = and i1 %eq, %eq2
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %coeff3 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3, align 4
  %coeff5 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff5, align 4
  %coeff7 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff7, align 4
  %coeff9 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff9, align 4
  %coeff11 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff11, align 4
  %coeff13 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff13, align 4
  %coeff15 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff15, align 4
  %coeff17 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff17, align 4
  %coeff19 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 0
  store i128 1, i128* %coeff19, align 4
  %coeff21 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 1
  store i128 0, i128* %coeff21, align 4
  %coeff23 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 2
  store i128 0, i128* %coeff23, align 4
  %coeff25 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 3
  store i128 0, i128* %coeff25, align 4
  %coeff27 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff27, align 4
  %coeff29 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff29, align 4
  %coeff31 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff31, align 4
  %coeff33 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff33, align 4
  %coeff35 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff35, align 4
  %coeff37 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff37, align 4
  %coeff39 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff39, align 4
  %coeff41 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff41, align 4
  %coeff43 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff43, align 4
  %coeff45 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff45, align 4
  %coeff47 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff47, align 4
  %coeff49 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff49, align 4
  %coeff51 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff51, align 4
  %coeff53 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff53, align 4
  %coeff55 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff55, align 4
  %coeff57 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff57, align 4
  %coeff59 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff59, align 4
  %coeff61 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff61, align 4
  %coeff63 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff63, align 4
  %coeff65 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff65, align 4
  %coeff67 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff67, align 4
  %coeff69 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff69, align 4
  %coeff71 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff71, align 4
  %coeff73 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff73, align 4
  %coeff75 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff75, align 4
  %coeff77 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff77, align 4
  %coeff79 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff79, align 4
  %coeff81 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff81, align 4
  %coeff83 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 0
  store i128 1, i128* %coeff83, align 4
  %coeff85 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 1
  store i128 0, i128* %coeff85, align 4
  %coeff87 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 2
  store i128 0, i128* %coeff87, align 4
  %coeff89 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 3
  store i128 0, i128* %coeff89, align 4
  %coeff91 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff91, align 4
  %coeff93 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff93, align 4
  %coeff95 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff95, align 4
  %coeff97 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff97, align 4
  %coeff99 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff99, align 4
  %coeff101 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff101, align 4
  %coeff103 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff103, align 4
  %coeff105 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff105, align 4
  %coeff107 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff107, align 4
  %coeff109 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff109, align 4
  %coeff111 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff111, align 4
  %coeff113 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff113, align 4
  %coeff115 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 0
  store i128 10162220749080420597, i128* %coeff115, align 4
  %coeff117 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 1
  store i128 9564161016340867348, i128* %coeff117, align 4
  %coeff119 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 2
  store i128 1141103942305410158, i128* %coeff119, align 4
  %coeff121 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 3
  store i128 196758051849933427, i128* %coeff121, align 4
  %coeff123 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 0
  store i128 3240210269972515253, i128* %coeff123, align 4
  %coeff125 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 1
  store i128 8211817353910544778, i128* %coeff125, align 4
  %coeff127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 2
  store i128 6098234019238335271, i128* %coeff127, align 4
  %coeff129 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 3
  store i128 3946525681149945645, i128* %coeff129, align 4
  %coeff131 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff131, align 4
  %coeff133 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff133, align 4
  %coeff135 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff135, align 4
  %coeff137 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff137, align 4
  %coeff139 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 0
  store i128 10087218741710072489, i128* %coeff139, align 4
  %coeff141 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 1
  store i128 1132760428998381904, i128* %coeff141, align 4
  %coeff143 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 2
  store i128 12253596937043474777, i128* %coeff143, align 4
  %coeff145 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 3
  store i128 4143283731404378736, i128* %coeff145, align 4
  %coeff147 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff147, align 4
  %coeff149 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff149, align 4
  %coeff151 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff151, align 4
  %coeff153 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff153, align 4
  %coeff155 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff155, align 4
  %coeff157 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff157, align 4
  %coeff159 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff159, align 4
  %coeff161 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff161, align 4
  %coeff163 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff163, align 4
  %coeff165 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff165, align 4
  %coeff167 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff167, align 4
  %coeff169 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff169, align 4
  %coeff171 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff171, align 4
  %coeff173 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff173, align 4
  %coeff175 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff175, align 4
  %coeff177 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff177, align 4
  %coeff179 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 0
  store i128 11175958356731299912, i128* %coeff179, align 4
  %coeff181 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 1
  store i128 10276094391070563771, i128* %coeff181, align 4
  %coeff183 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 2
  store i128 17552803892972843059, i128* %coeff183, align 4
  %coeff185 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 3
  store i128 88488527846361668, i128* %coeff185, align 4
  %coeff187 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 0
  store i128 2226472662321635938, i128* %coeff187, align 4
  %coeff189 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 1
  store i128 7499883979180848355, i128* %coeff189, align 4
  %coeff191 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 2
  store i128 8133278146575421281, i128* %coeff191, align 4
  %coeff193 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 3
  store i128 4054795205153517403, i128* %coeff193, align 4
  %coeff195 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff195, align 4
  %coeff197 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff197, align 4
  %coeff199 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff199, align 4
  %coeff201 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff201, align 4
  %coeff203 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff203, align 4
  %coeff205 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff205, align 4
  %coeff207 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff207, align 4
  %coeff209 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff209, align 4
  %coeff211 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff211, align 4
  %coeff213 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff213, align 4
  %coeff215 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff215, align 4
  %coeff217 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 3
  store i128 1595500335, i128* %coeff217, align 4
  %coeff219 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff219, align 4
  %coeff221 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff221, align 4
  %coeff223 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff223, align 4
  %coeff225 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff225, align 4
  %coeff227 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff227, align 4
  %coeff229 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff229, align 4
  %coeff231 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff231, align 4
  %coeff233 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 3
  store i128 1595500335, i128* %coeff233, align 4
  %coeff235 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff235, align 4
  %coeff237 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff237, align 4
  %coeff239 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff239, align 4
  %coeff241 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff241, align 4
  %coeff243 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff243, align 4
  %coeff245 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff245, align 4
  %coeff247 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff247, align 4
  %coeff249 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff249, align 4
  %coeff251 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff251, align 4
  %coeff253 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff253, align 4
  %coeff255 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff255, align 4
  %coeff257 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff257, align 4
  %coeff259 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff259, align 4
  %coeff261 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff261, align 4
  %coeff263 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff263, align 4
  %coeff265 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff265, align 4
  %coeff267 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff267, align 4
  %coeff269 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff269, align 4
  %coeff271 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff271, align 4
  %coeff273 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff273, align 4
  %coeff275 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff275, align 4
  %coeff277 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff277, align 4
  %coeff279 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff279, align 4
  %coeff281 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff281, align 4
  %coeff283 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff283, align 4
  %coeff285 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff285, align 4
  %coeff287 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff287, align 4
  %coeff289 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff289, align 4
  %coeff291 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff291, align 4
  %coeff293 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff293, align 4
  %coeff295 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff295, align 4
  %coeff297 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff297, align 4
  %coeff299 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff299, align 4
  %coeff301 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff301, align 4
  %coeff303 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff303, align 4
  %coeff305 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff305, align 4
  %coeff307 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff307, align 4
  %coeff309 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff309, align 4
  %coeff311 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff311, align 4
  %coeff313 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff313, align 4
  %coeff315 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff315, align 4
  %coeff317 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff317, align 4
  %coeff319 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff319, align 4
  %coeff321 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff321, align 4
  %coeff323 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff323, align 4
  %coeff325 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff325, align 4
  %coeff327 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff327, align 4
  %coeff329 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff329, align 4
  %coeff331 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff331, align 4
  %coeff333 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff333, align 4
  %coeff335 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff335, align 4
  %coeff337 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff337, align 4
  %coeff339 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff339, align 4
  %coeff341 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff341, align 4
  %coeff343 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff343, align 4
  %coeff345 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff345, align 4
  %coeff347 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff347, align 4
  %coeff349 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff349, align 4
  %coeff351 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff351, align 4
  %coeff353 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff353, align 4
  %coeff355 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff355, align 4
  %coeff357 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff357, align 4
  %coeff359 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff359, align 4
  %coeff361 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff361, align 4
  %coeff363 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff363, align 4
  %coeff365 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff365, align 4
  %coeff367 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff367, align 4
  %coeff369 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff369, align 4
  %coeff371 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff371, align 4
  %coeff373 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff373, align 4
  %coeff375 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff375, align 4
  %coeff377 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff377, align 4
  %coeff379 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff379, align 4
  %coeff381 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff381, align 4
  %coeff383 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff383, align 4
  %coeff385 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff385, align 4
  %coeff387 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff387, align 4
  %coeff389 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff389, align 4
  %coeff391 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff391, align 4
  %coeff393 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff393, align 4
  %coeff395 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff395, align 4
  %coeff397 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff397, align 4
  %coeff399 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff399, align 4
  %coeff401 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff401, align 4
  %coeff403 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff403, align 4
  %coeff405 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff405, align 4
  %coeff407 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff407, align 4
  %coeff409 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 3
  store i128 1595500335, i128* %coeff409, align 4
  %coeff411 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff411, align 4
  %coeff413 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff413, align 4
  %coeff415 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff415, align 4
  %coeff417 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff417, align 4
  %coeff419 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff419, align 4
  %coeff421 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff421, align 4
  %coeff423 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff423, align 4
  %coeff425 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff425, align 4
  %coeff427 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff427, align 4
  %coeff429 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff429, align 4
  %coeff431 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff431, align 4
  %coeff433 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff433, align 4
  %coeff435 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff435, align 4
  %coeff437 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff437, align 4
  %coeff439 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff439, align 4
  %coeff441 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff441, align 4
  %coeff443 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff443, align 4
  %coeff445 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff445, align 4
  %coeff447 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff447, align 4
  %coeff449 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff449, align 4
  %coeff451 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff451, align 4
  %coeff453 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff453, align 4
  %coeff455 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff455, align 4
  %coeff457 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff457, align 4
  %coeff459 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff459, align 4
  %coeff461 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff461, align 4
  %coeff463 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff463, align 4
  %coeff465 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff465, align 4
  %coeff467 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff467, align 4
  %coeff469 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff469, align 4
  %coeff471 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff471, align 4
  %coeff473 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff473, align 4
  %coeff475 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff475, align 4
  %coeff477 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff477, align 4
  %coeff479 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff479, align 4
  %coeff481 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff481, align 4
  %coeff483 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff483, align 4
  %coeff485 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff485, align 4
  %coeff487 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff487, align 4
  %coeff489 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff489, align 4
  %coeff491 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff491, align 4
  %coeff493 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff493, align 4
  %coeff495 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff495, align 4
  %coeff497 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff497, align 4
  %coeff499 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 0
  store i128 2226472662321635938, i128* %coeff499, align 4
  %coeff501 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 1
  store i128 7499883979180848355, i128* %coeff501, align 4
  %coeff503 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 2
  store i128 8133278146575421281, i128* %coeff503, align 4
  %coeff505 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 3
  store i128 4054795205153517403, i128* %coeff505, align 4
  %coeff507 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 0
  store i128 11175958356731299912, i128* %coeff507, align 4
  %coeff509 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 1
  store i128 10276094391070563771, i128* %coeff509, align 4
  %coeff511 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 2
  store i128 17552803892972843059, i128* %coeff511, align 4
  %coeff513 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 3
  store i128 88488527846361668, i128* %coeff513, align 4
  %coeff515 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff515, align 4
  %coeff517 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff517, align 4
  %coeff519 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff519, align 4
  %coeff521 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff521, align 4
  %coeff523 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 0
  store i128 3315212277342863360, i128* %coeff523, align 4
  %coeff525 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 1
  store i128 16643217941253030222, i128* %coeff525, align 4
  %coeff527 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 2
  store i128 13432485102504789563, i128* %coeff527, align 4
  %coeff529 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 3
  store i128 1595500335, i128* %coeff529, align 4
  %coeff531 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff531, align 4
  %coeff533 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff533, align 4
  %coeff535 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff535, align 4
  %coeff537 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff537, align 4
  %coeff539 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff539, align 4
  %coeff541 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff541, align 4
  %coeff543 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff543, align 4
  %coeff545 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff545, align 4
  %coeff547 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff547, align 4
  %coeff549 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff549, align 4
  %coeff551 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff551, align 4
  %coeff553 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff553, align 4
  %coeff555 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff555, align 4
  %coeff557 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff557, align 4
  %coeff559 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff559, align 4
  %coeff561 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff561, align 4
  %coeff563 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 0
  store i128 3240210269972515253, i128* %coeff563, align 4
  %coeff565 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 1
  store i128 8211817353910544778, i128* %coeff565, align 4
  %coeff567 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 2
  store i128 6098234019238335271, i128* %coeff567, align 4
  %coeff569 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 3
  store i128 3946525681149945645, i128* %coeff569, align 4
  %coeff571 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 0
  store i128 10162220749080420597, i128* %coeff571, align 4
  %coeff573 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 1
  store i128 9564161016340867348, i128* %coeff573, align 4
  %coeff575 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 2
  store i128 1141103942305410158, i128* %coeff575, align 4
  %coeff577 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 3
  store i128 196758051849933427, i128* %coeff577, align 4
  %coeff579 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff579, align 4
  %coeff581 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff581, align 4
  %coeff583 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff583, align 4
  %coeff585 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff585, align 4
  %coeff587 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff587, align 4
  %coeff589 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff589, align 4
  %coeff591 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff591, align 4
  %coeff593 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff593, align 4
  %coeff595 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff595, align 4
  %coeff597 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff597, align 4
  %coeff599 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff599, align 4
  %coeff601 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff601, align 4
  %coeff603 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff603, align 4
  %coeff605 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff605, align 4
  %coeff607 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff607, align 4
  %coeff609 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff609, align 4
  %coeff611 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff611, align 4
  %coeff613 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff613, align 4
  %coeff615 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff615, align 4
  %coeff617 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff617, align 4
  %coeff619 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff619, align 4
  %coeff621 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff621, align 4
  %coeff623 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff623, align 4
  %coeff625 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff625, align 4
  %coeff627 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff627, align 4
  %coeff629 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff629, align 4
  %coeff631 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff631, align 4
  %coeff633 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff633, align 4
  %coeff635 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff635, align 4
  %coeff637 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff637, align 4
  %coeff639 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff639, align 4
  %coeff641 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff641, align 4
  %coeff643 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff643, align 4
  %coeff645 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff645, align 4
  %coeff647 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff647, align 4
  %coeff649 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff649, align 4
  %coeff651 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff651, align 4
  %coeff653 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff653, align 4
  %coeff655 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff655, align 4
  %coeff657 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff657, align 4
  %coeff659 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff659, align 4
  %coeff661 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff661, align 4
  %coeff663 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff663, align 4
  %coeff665 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff665, align 4
  %coeff667 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff667, align 4
  %coeff669 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff669, align 4
  %coeff671 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff671, align 4
  %coeff673 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff673, align 4
  %coeff675 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff675, align 4
  %coeff677 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff677, align 4
  %coeff679 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff679, align 4
  %coeff681 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff681, align 4
  %coeff683 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff683, align 4
  %coeff685 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff685, align 4
  %coeff687 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff687, align 4
  %coeff689 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff689, align 4
  %coeff691 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 0
  store i128 3240210269972515253, i128* %coeff691, align 4
  %coeff693 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 1
  store i128 8211817353910544778, i128* %coeff693, align 4
  %coeff695 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 2
  store i128 6098234019238335271, i128* %coeff695, align 4
  %coeff697 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 3
  store i128 3946525681149945645, i128* %coeff697, align 4
  %coeff699 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 0
  store i128 10162220749080420597, i128* %coeff699, align 4
  %coeff701 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 1
  store i128 9564161016340867348, i128* %coeff701, align 4
  %coeff703 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 2
  store i128 1141103942305410158, i128* %coeff703, align 4
  %coeff705 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 3
  store i128 196758051849933427, i128* %coeff705, align 4
  %coeff707 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff707, align 4
  %coeff709 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff709, align 4
  %coeff711 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff711, align 4
  %coeff713 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff713, align 4
  %coeff715 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 0
  store i128 10087218741710072489, i128* %coeff715, align 4
  %coeff717 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 1
  store i128 1132760428998381904, i128* %coeff717, align 4
  %coeff719 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 2
  store i128 12253596937043474777, i128* %coeff719, align 4
  %coeff721 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 3
  store i128 4143283731404378736, i128* %coeff721, align 4
  %coeff723 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff723, align 4
  %coeff725 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff725, align 4
  %coeff727 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff727, align 4
  %coeff729 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff729, align 4
  %coeff731 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff731, align 4
  %coeff733 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff733, align 4
  %coeff735 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff735, align 4
  %coeff737 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff737, align 4
  %coeff739 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff739, align 4
  %coeff741 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff741, align 4
  %coeff743 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff743, align 4
  %coeff745 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff745, align 4
  %coeff747 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff747, align 4
  %coeff749 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff749, align 4
  %coeff751 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff751, align 4
  %coeff753 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff753, align 4
  %coeff755 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 0
  store i128 2226472662321635938, i128* %coeff755, align 4
  %coeff757 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 1
  store i128 7499883979180848355, i128* %coeff757, align 4
  %coeff759 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 2
  store i128 8133278146575421281, i128* %coeff759, align 4
  %coeff761 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 3
  store i128 4054795205153517403, i128* %coeff761, align 4
  %coeff763 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 0
  store i128 11175958356731299912, i128* %coeff763, align 4
  %coeff765 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 1
  store i128 10276094391070563771, i128* %coeff765, align 4
  %coeff767 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 2
  store i128 17552803892972843059, i128* %coeff767, align 4
  %coeff769 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 3
  store i128 88488527846361668, i128* %coeff769, align 4
  %coeff771 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff771, align 4
  %coeff773 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff773, align 4
  %coeff775 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff775, align 4
  %coeff777 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff777, align 4
  %coeff779 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff779, align 4
  %coeff781 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff781, align 4
  %coeff783 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff783, align 4
  %coeff785 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff785, align 4
  %coeff787 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff787, align 4
  %coeff789 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff789, align 4
  %coeff791 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff791, align 4
  %coeff793 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff793, align 4
  %coeff795 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff795, align 4
  %coeff797 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff797, align 4
  %coeff799 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff799, align 4
  %coeff801 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff801, align 4
  %coeff803 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff803, align 4
  %coeff805 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff805, align 4
  %coeff807 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff807, align 4
  %coeff809 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 3
  store i128 1595500335, i128* %coeff809, align 4
  %coeff811 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff811, align 4
  %coeff813 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff813, align 4
  %coeff815 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff815, align 4
  %coeff817 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff817, align 4
  %coeff819 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff819, align 4
  %coeff821 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff821, align 4
  %coeff823 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff823, align 4
  %coeff825 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff825, align 4
  %coeff827 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff827, align 4
  %coeff829 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff829, align 4
  %coeff831 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff831, align 4
  %coeff833 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff833, align 4
  %coeff835 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff835, align 4
  %coeff837 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff837, align 4
  %coeff839 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff839, align 4
  %coeff841 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff841, align 4
  %coeff843 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff843, align 4
  %coeff845 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff845, align 4
  %coeff847 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff847, align 4
  %coeff849 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff849, align 4
  %coeff851 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff851, align 4
  %coeff853 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff853, align 4
  %coeff855 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff855, align 4
  %coeff857 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 3
  store i128 1595500335, i128* %coeff857, align 4
  %coeff859 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff859, align 4
  %coeff861 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff861, align 4
  %coeff863 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff863, align 4
  %coeff865 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff865, align 4
  %coeff867 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff867, align 4
  %coeff869 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff869, align 4
  %coeff871 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff871, align 4
  %coeff873 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff873, align 4
  %coeff875 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff875, align 4
  %coeff877 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff877, align 4
  %coeff879 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff879, align 4
  %coeff881 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff881, align 4
  %coeff883 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff883, align 4
  %coeff885 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff885, align 4
  %coeff887 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff887, align 4
  %coeff889 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff889, align 4
  %coeff891 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff891, align 4
  %coeff893 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff893, align 4
  %coeff895 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff895, align 4
  %coeff897 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff897, align 4
  %coeff899 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff899, align 4
  %coeff901 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff901, align 4
  %coeff903 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff903, align 4
  %coeff905 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff905, align 4
  %coeff907 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff907, align 4
  %coeff909 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff909, align 4
  %coeff911 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff911, align 4
  %coeff913 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff913, align 4
  %coeff915 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 0
  store i128 14416168626703815165, i128* %coeff915, align 4
  %coeff917 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 1
  store i128 41167666976589638, i128* %coeff917, align 4
  %coeff919 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 2
  store i128 5204293838501626716, i128* %coeff919, align 4
  %coeff921 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 3
  store i128 4035014208996307313, i128* %coeff921, align 4
  %coeff923 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff923, align 4
  %coeff925 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff925, align 4
  %coeff927 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff927, align 4
  %coeff929 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff929, align 4
  %coeff931 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff931, align 4
  %coeff933 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff933, align 4
  %coeff935 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff935, align 4
  %coeff937 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff937, align 4
  %coeff939 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff939, align 4
  %coeff941 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff941, align 4
  %coeff943 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff943, align 4
  %coeff945 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff945, align 4
  %coeff947 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff947, align 4
  %coeff949 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff949, align 4
  %coeff951 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff951, align 4
  %coeff953 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff953, align 4
  %coeff955 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 0
  store i128 14416168626703815165, i128* %coeff955, align 4
  %coeff957 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 1
  store i128 41167666976589638, i128* %coeff957, align 4
  %coeff959 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 2
  store i128 5204293838501626716, i128* %coeff959, align 4
  %coeff961 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 3
  store i128 4035014208996307313, i128* %coeff961, align 4
  %coeff963 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff963, align 4
  %coeff965 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff965, align 4
  %coeff967 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff967, align 4
  %coeff969 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff969, align 4
  %coeff971 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff971, align 4
  %coeff973 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff973, align 4
  %coeff975 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff975, align 4
  %coeff977 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff977, align 4
  %coeff979 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 0
  store i128 10087218741710072490, i128* %coeff979, align 4
  %coeff981 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff981, align 4
  %coeff983 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff983, align 4
  %coeff985 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff985, align 4
  %coeff987 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff987, align 4
  %coeff989 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff989, align 4
  %coeff991 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff991, align 4
  %coeff993 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff993, align 4
  %coeff995 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 0
  store i128 10087218741710072489, i128* %coeff995, align 4
  %coeff997 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 1
  store i128 1132760428998381904, i128* %coeff997, align 4
  %coeff999 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 2
  store i128 12253596937043474777, i128* %coeff999, align 4
  %coeff1001 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 3
  store i128 4143283731404378736, i128* %coeff1001, align 4
  %coeff1003 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1003, align 4
  %coeff1005 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1005, align 4
  %coeff1007 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1007, align 4
  %coeff1009 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1009, align 4
  %coeff1011 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 0
  store i128 13402431019052935849, i128* %coeff1011, align 4
  %coeff1013 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 1
  store i128 17775978365956444830, i128* %coeff1013, align 4
  %coeff1015 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 2
  store i128 7239337961543745430, i128* %coeff1015, align 4
  %coeff1017 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 3
  store i128 4143283732999879072, i128* %coeff1017, align 4
  %coeff1019 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1019, align 4
  %coeff1021 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1021, align 4
  %coeff1023 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1023, align 4
  %coeff1025 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1025, align 4
  %coeff1027 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 0
  store i128 3315212277342863360, i128* %coeff1027, align 4
  %coeff1029 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff1029, align 4
  %coeff1031 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff1031, align 4
  %coeff1033 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff1033, align 4
  %coeff1035 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1035, align 4
  %coeff1037 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1037, align 4
  %coeff1039 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1039, align 4
  %coeff1041 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1041, align 4
  %coeff1043 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff1043, align 4
  %coeff1045 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff1045, align 4
  %coeff1047 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff1047, align 4
  %coeff1049 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 3
  store i128 1595500335, i128* %coeff1049, align 4
  %coeff1051 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1051, align 4
  %coeff1053 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1053, align 4
  %coeff1055 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1055, align 4
  %coeff1057 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1057, align 4
  %coeff1059 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1059, align 4
  %coeff1061 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1061, align 4
  %coeff1063 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1063, align 4
  %coeff1065 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1065, align 4
  %coeff1067 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1067, align 4
  %coeff1069 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1069, align 4
  %coeff1071 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1071, align 4
  %coeff1073 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1073, align 4
  %coeff1075 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 0
  store i128 11175958356731299912, i128* %coeff1075, align 4
  %coeff1077 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 1
  store i128 10276094391070563771, i128* %coeff1077, align 4
  %coeff1079 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 2
  store i128 17552803892972843059, i128* %coeff1079, align 4
  %coeff1081 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 3
  store i128 88488527846361668, i128* %coeff1081, align 4
  %coeff1083 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 0
  store i128 2226472662321635938, i128* %coeff1083, align 4
  %coeff1085 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 1
  store i128 7499883979180848355, i128* %coeff1085, align 4
  %coeff1087 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 2
  store i128 8133278146575421281, i128* %coeff1087, align 4
  %coeff1089 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 3
  store i128 4054795205153517403, i128* %coeff1089, align 4
  %coeff1091 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1091, align 4
  %coeff1093 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1093, align 4
  %coeff1095 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1095, align 4
  %coeff1097 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1097, align 4
  %coeff1099 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 0
  store i128 3315212277342863360, i128* %coeff1099, align 4
  %coeff1101 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 1
  store i128 16643217941253030222, i128* %coeff1101, align 4
  %coeff1103 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 2
  store i128 13432485102504789563, i128* %coeff1103, align 4
  %coeff1105 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 3
  store i128 1595500335, i128* %coeff1105, align 4
  %coeff1107 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 0
  store i128 17433006466058672300, i128* %coeff1107, align 4
  %coeff1109 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 1
  store i128 17734810703274822488, i128* %coeff1109, align 4
  %coeff1111 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 2
  store i128 2035044127337086009, i128* %coeff1111, align 4
  %coeff1113 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 3
  store i128 108269524003571758, i128* %coeff1113, align 4
  %coeff1115 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 0
  store i128 17433006466058672300, i128* %coeff1115, align 4
  %coeff1117 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 1
  store i128 17734810703274822488, i128* %coeff1117, align 4
  %coeff1119 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 2
  store i128 2035044127337086009, i128* %coeff1119, align 4
  %coeff1121 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 3
  store i128 108269524003571758, i128* %coeff1121, align 4
  %coeff1123 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 0
  store i128 3315212277342863361, i128* %coeff1123, align 4
  %coeff1125 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 1
  store i128 16643217941253030222, i128* %coeff1125, align 4
  %coeff1127 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 2
  store i128 13432485102504789563, i128* %coeff1127, align 4
  %coeff1129 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 3
  store i128 1595500335, i128* %coeff1129, align 4
  %coeff1131 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1131, align 4
  %coeff1133 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1133, align 4
  %coeff1135 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1135, align 4
  %coeff1137 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1137, align 4
  %coeff1139 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 0
  store i128 10162220749080420597, i128* %coeff1139, align 4
  %coeff1141 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 1
  store i128 9564161016340867348, i128* %coeff1141, align 4
  %coeff1143 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 2
  store i128 1141103942305410158, i128* %coeff1143, align 4
  %coeff1145 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 3
  store i128 196758051849933427, i128* %coeff1145, align 4
  %coeff1147 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 0
  store i128 3240210269972515253, i128* %coeff1147, align 4
  %coeff1149 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 1
  store i128 8211817353910544778, i128* %coeff1149, align 4
  %coeff1151 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 2
  store i128 6098234019238335271, i128* %coeff1151, align 4
  %coeff1153 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 3
  store i128 3946525681149945645, i128* %coeff1153, align 4
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %eq1157 = icmp eq i128 %0, 77
  %eq1159 = icmp eq i128 %1, 5
  %and1160 = and i1 %eq1157, %eq1159
  br i1 %and1160, label %if.true1154, label %if.false1155

if.true1154:                                      ; preds = %if.exit
  %coeff1162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1162, align 4
  %coeff1164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1164, align 4
  %coeff1166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1166, align 4
  %coeff1168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1168, align 4
  %coeff1170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1170, align 4
  %coeff1172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1172, align 4
  %coeff1174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1174, align 4
  %coeff1176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1176, align 4
  %coeff1178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1178, align 4
  %coeff1180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1180, align 4
  %coeff1182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 0
  store i128 1, i128* %coeff1182, align 4
  %coeff1184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 1
  store i128 0, i128* %coeff1184, align 4
  %coeff1186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 2
  store i128 0, i128* %coeff1186, align 4
  %coeff1188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 3
  store i128 0, i128* %coeff1188, align 4
  %coeff1190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 4
  store i128 0, i128* %coeff1190, align 4
  %coeff1192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1192, align 4
  %coeff1194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1194, align 4
  %coeff1196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1196, align 4
  %coeff1198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1198, align 4
  %coeff1200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1200, align 4
  %coeff1202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff1202, align 4
  %coeff1204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1204, align 4
  %coeff1206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1206, align 4
  %coeff1208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1208, align 4
  %coeff1210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1210, align 4
  %coeff1212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1212, align 4
  %coeff1214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1214, align 4
  %coeff1216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1216, align 4
  %coeff1218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1218, align 4
  %coeff1220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1220, align 4
  %coeff1222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff1222, align 4
  %coeff1224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff1224, align 4
  %coeff1226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff1226, align 4
  %coeff1228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff1228, align 4
  %coeff1230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff1230, align 4
  %coeff1232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1232, align 4
  %coeff1234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1234, align 4
  %coeff1236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1236, align 4
  %coeff1238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1238, align 4
  %coeff1240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1240, align 4
  %coeff1242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff1242, align 4
  %coeff1244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff1244, align 4
  %coeff1246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff1246, align 4
  %coeff1248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff1248, align 4
  %coeff1250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff1250, align 4
  %coeff1252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1252, align 4
  %coeff1254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1254, align 4
  %coeff1256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1256, align 4
  %coeff1258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1258, align 4
  %coeff1260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1260, align 4
  %coeff1262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 0
  store i128 1, i128* %coeff1262, align 4
  %coeff1264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 1
  store i128 0, i128* %coeff1264, align 4
  %coeff1266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 2
  store i128 0, i128* %coeff1266, align 4
  %coeff1268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 3
  store i128 0, i128* %coeff1268, align 4
  %coeff1270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 4
  store i128 0, i128* %coeff1270, align 4
  %coeff1272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1272, align 4
  %coeff1274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1274, align 4
  %coeff1276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1276, align 4
  %coeff1278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1278, align 4
  %coeff1280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff1280, align 4
  %coeff1282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1282, align 4
  %coeff1284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1284, align 4
  %coeff1286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1286, align 4
  %coeff1288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1288, align 4
  %coeff1290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1290, align 4
  %coeff1292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1292, align 4
  %coeff1294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1294, align 4
  %coeff1296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1296, align 4
  %coeff1298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1298, align 4
  %coeff1300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1300, align 4
  %coeff1302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 0
  store i128 10162220747404304629, i128* %coeff1302, align 4
  %coeff1304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 1
  store i128 14855039761456506129, i128* %coeff1304, align 4
  %coeff1306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 2
  store i128 3411428196565980464, i128* %coeff1306, align 4
  %coeff1308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 3
  store i128 7512101048188645252, i128* %coeff1308, align 4
  %coeff1310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 4
  store i128 5565305834980146611, i128* %coeff1310, align 4
  %coeff1312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 0
  store i128 3240210268673567157, i128* %coeff1312, align 4
  %coeff1314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 1
  store i128 16355175448886016788, i128* %coeff1314, align 4
  %coeff1316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 2
  store i128 12820864110352905289, i128* %coeff1316, align 4
  %coeff1318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 3
  store i128 308003166227093089, i128* %coeff1318, align 4
  %coeff1320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 4
  store i128 14115041459879225501, i128* %coeff1320, align 4
  %coeff1322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1322, align 4
  %coeff1324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1324, align 4
  %coeff1326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1326, align 4
  %coeff1328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1328, align 4
  %coeff1330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1330, align 4
  %coeff1332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 0
  store i128 10087218740379830953, i128* %coeff1332, align 4
  %coeff1334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 1
  store i128 18219880333079910417, i128* %coeff1334, align 4
  %coeff1336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 2
  store i128 6730265852384016549, i128* %coeff1336, align 4
  %coeff1338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 3
  store i128 920891278224531339, i128* %coeff1338, align 4
  %coeff1340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 4
  store i128 1233603221149818976, i128* %coeff1340, align 4
  %coeff1342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff1342, align 4
  %coeff1344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff1344, align 4
  %coeff1346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff1346, align 4
  %coeff1348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff1348, align 4
  %coeff1350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff1350, align 4
  %coeff1352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff1352, align 4
  %coeff1354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff1354, align 4
  %coeff1356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff1356, align 4
  %coeff1358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff1358, align 4
  %coeff1360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff1360, align 4
  %coeff1362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff1362, align 4
  %coeff1364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1364, align 4
  %coeff1366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1366, align 4
  %coeff1368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1368, align 4
  %coeff1370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1370, align 4
  %coeff1372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1372, align 4
  %coeff1374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1374, align 4
  %coeff1376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1376, align 4
  %coeff1378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1378, align 4
  %coeff1380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1380, align 4
  %coeff1382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 0
  store i128 11175958356102187080, i128* %coeff1382, align 4
  %coeff1384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 1
  store i128 3113730970175488220, i128* %coeff1384, align 4
  %coeff1386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 2
  store i128 208286685198802022, i128* %coeff1386, align 4
  %coeff1388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 3
  store i128 15461248674371682336, i128* %coeff1388, align 4
  %coeff1390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 4
  store i128 3241905720840261199, i128* %coeff1390, align 4
  %coeff1392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 0
  store i128 2226472659975684706, i128* %coeff1392, align 4
  %coeff1394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 1
  store i128 9649740166457483082, i128* %coeff1394, align 4
  %coeff1396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 2
  store i128 16024005621720083731, i128* %coeff1396, align 4
  %coeff1398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 3
  store i128 10805599613753607620, i128* %coeff1398, align 4
  %coeff1400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 4
  store i128 16438441574019110913, i128* %coeff1400, align 4
  %coeff1402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1402, align 4
  %coeff1404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1404, align 4
  %coeff1406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1406, align 4
  %coeff1408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1408, align 4
  %coeff1410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1410, align 4
  %coeff1412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1412, align 4
  %coeff1414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1414, align 4
  %coeff1416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1416, align 4
  %coeff1418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1418, align 4
  %coeff1420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1420, align 4
  %coeff1422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff1422, align 4
  %coeff1424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1424, align 4
  %coeff1426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1426, align 4
  %coeff1428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1428, align 4
  %coeff1430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 4
  store i128 1521, i128* %coeff1430, align 4
  %coeff1432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1432, align 4
  %coeff1434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1434, align 4
  %coeff1436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1436, align 4
  %coeff1438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1438, align 4
  %coeff1440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1440, align 4
  %coeff1442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff1442, align 4
  %coeff1444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1444, align 4
  %coeff1446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1446, align 4
  %coeff1448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1448, align 4
  %coeff1450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 4
  store i128 1521, i128* %coeff1450, align 4
  %coeff1452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1452, align 4
  %coeff1454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1454, align 4
  %coeff1456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1456, align 4
  %coeff1458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1458, align 4
  %coeff1460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1460, align 4
  %coeff1462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1462, align 4
  %coeff1464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1464, align 4
  %coeff1466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1466, align 4
  %coeff1468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1468, align 4
  %coeff1470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1470, align 4
  %coeff1472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1472, align 4
  %coeff1474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1474, align 4
  %coeff1476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1476, align 4
  %coeff1478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1478, align 4
  %coeff1480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1480, align 4
  %coeff1482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff1482, align 4
  %coeff1484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1484, align 4
  %coeff1486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1486, align 4
  %coeff1488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1488, align 4
  %coeff1490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1490, align 4
  %coeff1492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1492, align 4
  %coeff1494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1494, align 4
  %coeff1496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1496, align 4
  %coeff1498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1498, align 4
  %coeff1500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1500, align 4
  %coeff1502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff1502, align 4
  %coeff1504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1504, align 4
  %coeff1506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1506, align 4
  %coeff1508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1508, align 4
  %coeff1510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1510, align 4
  %coeff1512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1512, align 4
  %coeff1514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1514, align 4
  %coeff1516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1516, align 4
  %coeff1518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1518, align 4
  %coeff1520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff1520, align 4
  %coeff1522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1522, align 4
  %coeff1524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1524, align 4
  %coeff1526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1526, align 4
  %coeff1528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1528, align 4
  %coeff1530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1530, align 4
  %coeff1532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1532, align 4
  %coeff1534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1534, align 4
  %coeff1536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1536, align 4
  %coeff1538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1538, align 4
  %coeff1540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1540, align 4
  %coeff1542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff1542, align 4
  %coeff1544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff1544, align 4
  %coeff1546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff1546, align 4
  %coeff1548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff1548, align 4
  %coeff1550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff1550, align 4
  %coeff1552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff1552, align 4
  %coeff1554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff1554, align 4
  %coeff1556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff1556, align 4
  %coeff1558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff1558, align 4
  %coeff1560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff1560, align 4
  %coeff1562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1562, align 4
  %coeff1564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1564, align 4
  %coeff1566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1566, align 4
  %coeff1568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1568, align 4
  %coeff1570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1570, align 4
  %coeff1572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff1572, align 4
  %coeff1574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1574, align 4
  %coeff1576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1576, align 4
  %coeff1578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1578, align 4
  %coeff1580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1580, align 4
  %coeff1582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff1582, align 4
  %coeff1584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff1584, align 4
  %coeff1586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff1586, align 4
  %coeff1588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff1588, align 4
  %coeff1590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff1590, align 4
  %coeff1592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff1592, align 4
  %coeff1594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff1594, align 4
  %coeff1596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff1596, align 4
  %coeff1598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff1598, align 4
  %coeff1600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff1600, align 4
  %coeff1602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1602, align 4
  %coeff1604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1604, align 4
  %coeff1606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1606, align 4
  %coeff1608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1608, align 4
  %coeff1610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1610, align 4
  %coeff1612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1612, align 4
  %coeff1614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1614, align 4
  %coeff1616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1616, align 4
  %coeff1618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1618, align 4
  %coeff1620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1620, align 4
  %coeff1622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff1622, align 4
  %coeff1624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff1624, align 4
  %coeff1626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff1626, align 4
  %coeff1628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff1628, align 4
  %coeff1630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff1630, align 4
  %coeff1632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff1632, align 4
  %coeff1634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff1634, align 4
  %coeff1636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff1636, align 4
  %coeff1638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff1638, align 4
  %coeff1640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff1640, align 4
  %coeff1642 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1642, align 4
  %coeff1644 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1644, align 4
  %coeff1646 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1646, align 4
  %coeff1648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1648, align 4
  %coeff1650 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1650, align 4
  %coeff1652 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1652, align 4
  %coeff1654 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1654, align 4
  %coeff1656 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1656, align 4
  %coeff1658 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1658, align 4
  %coeff1660 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1660, align 4
  %coeff1662 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff1662, align 4
  %coeff1664 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1664, align 4
  %coeff1666 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1666, align 4
  %coeff1668 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1668, align 4
  %coeff1670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 4
  store i128 1521, i128* %coeff1670, align 4
  %coeff1672 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1672, align 4
  %coeff1674 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1674, align 4
  %coeff1676 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1676, align 4
  %coeff1678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1678, align 4
  %coeff1680 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1680, align 4
  %coeff1682 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff1682, align 4
  %coeff1684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1684, align 4
  %coeff1686 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1686, align 4
  %coeff1688 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1688, align 4
  %coeff1690 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1690, align 4
  %coeff1692 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1692, align 4
  %coeff1694 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1694, align 4
  %coeff1696 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1696, align 4
  %coeff1698 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1698, align 4
  %coeff1700 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1700, align 4
  %coeff1702 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff1702, align 4
  %coeff1704 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff1704, align 4
  %coeff1706 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff1706, align 4
  %coeff1708 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff1708, align 4
  %coeff1710 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff1710, align 4
  %coeff1712 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1712, align 4
  %coeff1714 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1714, align 4
  %coeff1716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1716, align 4
  %coeff1718 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1718, align 4
  %coeff1720 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1720, align 4
  %coeff1722 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff1722, align 4
  %coeff1724 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1724, align 4
  %coeff1726 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1726, align 4
  %coeff1728 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1728, align 4
  %coeff1730 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff1730, align 4
  %coeff1732 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1732, align 4
  %coeff1734 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1734, align 4
  %coeff1736 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1736, align 4
  %coeff1738 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1738, align 4
  %coeff1740 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1740, align 4
  %coeff1742 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff1742, align 4
  %coeff1744 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff1744, align 4
  %coeff1746 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff1746, align 4
  %coeff1748 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff1748, align 4
  %coeff1750 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff1750, align 4
  %coeff1752 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1752, align 4
  %coeff1754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1754, align 4
  %coeff1756 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1756, align 4
  %coeff1758 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1758, align 4
  %coeff1760 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff1760, align 4
  %coeff1762 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1762, align 4
  %coeff1764 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1764, align 4
  %coeff1766 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1766, align 4
  %coeff1768 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1768, align 4
  %coeff1770 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1770, align 4
  %coeff1772 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1772, align 4
  %coeff1774 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1774, align 4
  %coeff1776 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1776, align 4
  %coeff1778 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1778, align 4
  %coeff1780 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1780, align 4
  %coeff1782 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 0
  store i128 2226472659975684706, i128* %coeff1782, align 4
  %coeff1784 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 1
  store i128 9649740166457483082, i128* %coeff1784, align 4
  %coeff1786 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 2
  store i128 16024005621720083731, i128* %coeff1786, align 4
  %coeff1788 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 3
  store i128 10805599613753607620, i128* %coeff1788, align 4
  %coeff1790 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 4
  store i128 16438441574019110913, i128* %coeff1790, align 4
  %coeff1792 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 0
  store i128 11175958356102187080, i128* %coeff1792, align 4
  %coeff1794 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 1
  store i128 3113730970175488220, i128* %coeff1794, align 4
  %coeff1796 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 2
  store i128 208286685198802022, i128* %coeff1796, align 4
  %coeff1798 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 3
  store i128 15461248674371682336, i128* %coeff1798, align 4
  %coeff1800 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 4
  store i128 3241905720840261199, i128* %coeff1800, align 4
  %coeff1802 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff1802, align 4
  %coeff1804 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1804, align 4
  %coeff1806 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1806, align 4
  %coeff1808 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1808, align 4
  %coeff1810 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1810, align 4
  %coeff1812 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 0
  store i128 3315212275698040832, i128* %coeff1812, align 4
  %coeff1814 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 1
  store i128 12990334877262620692, i128* %coeff1814, align 4
  %coeff1816 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 2
  store i128 9502026454534869203, i128* %coeff1816, align 4
  %coeff1818 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 3
  store i128 6899212936191207002, i128* %coeff1818, align 4
  %coeff1820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 4
  store i128 1521, i128* %coeff1820, align 4
  %coeff1822 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff1822, align 4
  %coeff1824 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff1824, align 4
  %coeff1826 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff1826, align 4
  %coeff1828 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff1828, align 4
  %coeff1830 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff1830, align 4
  %coeff1832 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff1832, align 4
  %coeff1834 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff1834, align 4
  %coeff1836 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff1836, align 4
  %coeff1838 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff1838, align 4
  %coeff1840 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff1840, align 4
  %coeff1842 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff1842, align 4
  %coeff1844 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff1844, align 4
  %coeff1846 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff1846, align 4
  %coeff1848 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff1848, align 4
  %coeff1850 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff1850, align 4
  %coeff1852 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1852, align 4
  %coeff1854 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1854, align 4
  %coeff1856 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1856, align 4
  %coeff1858 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1858, align 4
  %coeff1860 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1860, align 4
  %coeff1862 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 0
  store i128 3240210268673567157, i128* %coeff1862, align 4
  %coeff1864 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 1
  store i128 16355175448886016788, i128* %coeff1864, align 4
  %coeff1866 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 2
  store i128 12820864110352905289, i128* %coeff1866, align 4
  %coeff1868 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 3
  store i128 308003166227093089, i128* %coeff1868, align 4
  %coeff1870 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 4
  store i128 14115041459879225501, i128* %coeff1870, align 4
  %coeff1872 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 0
  store i128 10162220747404304629, i128* %coeff1872, align 4
  %coeff1874 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 1
  store i128 14855039761456506129, i128* %coeff1874, align 4
  %coeff1876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 2
  store i128 3411428196565980464, i128* %coeff1876, align 4
  %coeff1878 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 3
  store i128 7512101048188645252, i128* %coeff1878, align 4
  %coeff1880 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 4
  store i128 5565305834980146611, i128* %coeff1880, align 4
  %coeff1882 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff1882, align 4
  %coeff1884 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff1884, align 4
  %coeff1886 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff1886, align 4
  %coeff1888 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff1888, align 4
  %coeff1890 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff1890, align 4
  %coeff1892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff1892, align 4
  %coeff1894 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff1894, align 4
  %coeff1896 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff1896, align 4
  %coeff1898 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff1898, align 4
  %coeff1900 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff1900, align 4
  %coeff1902 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1902, align 4
  %coeff1904 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1904, align 4
  %coeff1906 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1906, align 4
  %coeff1908 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1908, align 4
  %coeff1910 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1910, align 4
  %coeff1912 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff1912, align 4
  %coeff1914 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff1914, align 4
  %coeff1916 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff1916, align 4
  %coeff1918 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff1918, align 4
  %coeff1920 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff1920, align 4
  %coeff1922 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff1922, align 4
  %coeff1924 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff1924, align 4
  %coeff1926 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff1926, align 4
  %coeff1928 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff1928, align 4
  %coeff1930 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff1930, align 4
  %coeff1932 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff1932, align 4
  %coeff1934 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff1934, align 4
  %coeff1936 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff1936, align 4
  %coeff1938 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff1938, align 4
  %coeff1940 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff1940, align 4
  %coeff1942 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1942, align 4
  %coeff1944 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1944, align 4
  %coeff1946 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1946, align 4
  %coeff1948 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1948, align 4
  %coeff1950 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1950, align 4
  %coeff1952 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff1952, align 4
  %coeff1954 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff1954, align 4
  %coeff1956 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff1956, align 4
  %coeff1958 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff1958, align 4
  %coeff1960 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff1960, align 4
  %coeff1962 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff1962, align 4
  %coeff1964 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff1964, align 4
  %coeff1966 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff1966, align 4
  %coeff1968 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff1968, align 4
  %coeff1970 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff1970, align 4
  %coeff1972 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff1972, align 4
  %coeff1974 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff1974, align 4
  %coeff1976 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff1976, align 4
  %coeff1978 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff1978, align 4
  %coeff1980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff1980, align 4
  %coeff1982 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff1982, align 4
  %coeff1984 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff1984, align 4
  %coeff1986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff1986, align 4
  %coeff1988 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff1988, align 4
  %coeff1990 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff1990, align 4
  %coeff1992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff1992, align 4
  %coeff1994 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff1994, align 4
  %coeff1996 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff1996, align 4
  %coeff1998 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff1998, align 4
  %coeff2000 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2000, align 4
  %coeff2002 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2002, align 4
  %coeff2004 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2004, align 4
  %coeff2006 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2006, align 4
  %coeff2008 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2008, align 4
  %coeff2010 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2010, align 4
  %coeff2012 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2012, align 4
  %coeff2014 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2014, align 4
  %coeff2016 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2016, align 4
  %coeff2018 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2018, align 4
  %coeff2020 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2020, align 4
  %coeff2022 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 0
  store i128 3240210268673567157, i128* %coeff2022, align 4
  %coeff2024 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 1
  store i128 16355175448886016788, i128* %coeff2024, align 4
  %coeff2026 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 2
  store i128 12820864110352905289, i128* %coeff2026, align 4
  %coeff2028 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 3
  store i128 308003166227093089, i128* %coeff2028, align 4
  %coeff2030 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 4
  store i128 14115041459879225501, i128* %coeff2030, align 4
  %coeff2032 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 0
  store i128 10162220747404304629, i128* %coeff2032, align 4
  %coeff2034 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 1
  store i128 14855039761456506129, i128* %coeff2034, align 4
  %coeff2036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 2
  store i128 3411428196565980464, i128* %coeff2036, align 4
  %coeff2038 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 3
  store i128 7512101048188645252, i128* %coeff2038, align 4
  %coeff2040 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 4
  store i128 5565305834980146611, i128* %coeff2040, align 4
  %coeff2042 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2042, align 4
  %coeff2044 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2044, align 4
  %coeff2046 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2046, align 4
  %coeff2048 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2048, align 4
  %coeff2050 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2050, align 4
  %coeff2052 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 0
  store i128 10087218740379830953, i128* %coeff2052, align 4
  %coeff2054 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 1
  store i128 18219880333079910417, i128* %coeff2054, align 4
  %coeff2056 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 2
  store i128 6730265852384016549, i128* %coeff2056, align 4
  %coeff2058 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 3
  store i128 920891278224531339, i128* %coeff2058, align 4
  %coeff2060 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 4
  store i128 1233603221149818976, i128* %coeff2060, align 4
  %coeff2062 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff2062, align 4
  %coeff2064 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff2064, align 4
  %coeff2066 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff2066, align 4
  %coeff2068 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff2068, align 4
  %coeff2070 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff2070, align 4
  %coeff2072 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff2072, align 4
  %coeff2074 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff2074, align 4
  %coeff2076 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff2076, align 4
  %coeff2078 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff2078, align 4
  %coeff2080 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff2080, align 4
  %coeff2082 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff2082, align 4
  %coeff2084 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2084, align 4
  %coeff2086 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2086, align 4
  %coeff2088 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2088, align 4
  %coeff2090 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2090, align 4
  %coeff2092 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2092, align 4
  %coeff2094 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2094, align 4
  %coeff2096 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2096, align 4
  %coeff2098 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2098, align 4
  %coeff2100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2100, align 4
  %coeff2102 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 0
  store i128 2226472659975684706, i128* %coeff2102, align 4
  %coeff2104 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 1
  store i128 9649740166457483082, i128* %coeff2104, align 4
  %coeff2106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 2
  store i128 16024005621720083731, i128* %coeff2106, align 4
  %coeff2108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 3
  store i128 10805599613753607620, i128* %coeff2108, align 4
  %coeff2110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 4
  store i128 16438441574019110913, i128* %coeff2110, align 4
  %coeff2112 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 0
  store i128 11175958356102187080, i128* %coeff2112, align 4
  %coeff2114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 1
  store i128 3113730970175488220, i128* %coeff2114, align 4
  %coeff2116 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 2
  store i128 208286685198802022, i128* %coeff2116, align 4
  %coeff2118 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 3
  store i128 15461248674371682336, i128* %coeff2118, align 4
  %coeff2120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 4
  store i128 3241905720840261199, i128* %coeff2120, align 4
  %coeff2122 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2122, align 4
  %coeff2124 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2124, align 4
  %coeff2126 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2126, align 4
  %coeff2128 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2128, align 4
  %coeff2130 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2130, align 4
  %coeff2132 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2132, align 4
  %coeff2134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2134, align 4
  %coeff2136 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2136, align 4
  %coeff2138 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2138, align 4
  %coeff2140 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2140, align 4
  %coeff2142 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff2142, align 4
  %coeff2144 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2144, align 4
  %coeff2146 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2146, align 4
  %coeff2148 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2148, align 4
  %coeff2150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2150, align 4
  %coeff2152 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2152, align 4
  %coeff2154 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2154, align 4
  %coeff2156 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2156, align 4
  %coeff2158 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2158, align 4
  %coeff2160 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2160, align 4
  %coeff2162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff2162, align 4
  %coeff2164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2164, align 4
  %coeff2166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2166, align 4
  %coeff2168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2168, align 4
  %coeff2170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 4
  store i128 1521, i128* %coeff2170, align 4
  %coeff2172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff2172, align 4
  %coeff2174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2174, align 4
  %coeff2176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2176, align 4
  %coeff2178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2178, align 4
  %coeff2180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2180, align 4
  %coeff2182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff2182, align 4
  %coeff2184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff2184, align 4
  %coeff2186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff2186, align 4
  %coeff2188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff2188, align 4
  %coeff2190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff2190, align 4
  %coeff2192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff2192, align 4
  %coeff2194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff2194, align 4
  %coeff2196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff2196, align 4
  %coeff2198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff2198, align 4
  %coeff2200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff2200, align 4
  %coeff2202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff2202, align 4
  %coeff2204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2204, align 4
  %coeff2206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2206, align 4
  %coeff2208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2208, align 4
  %coeff2210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2210, align 4
  %coeff2212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2212, align 4
  %coeff2214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2214, align 4
  %coeff2216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2216, align 4
  %coeff2218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2218, align 4
  %coeff2220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2220, align 4
  %coeff2222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff2222, align 4
  %coeff2224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2224, align 4
  %coeff2226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2226, align 4
  %coeff2228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2228, align 4
  %coeff2230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 4
  store i128 1521, i128* %coeff2230, align 4
  %coeff2232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2232, align 4
  %coeff2234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2234, align 4
  %coeff2236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2236, align 4
  %coeff2238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2238, align 4
  %coeff2240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2240, align 4
  %coeff2242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2242, align 4
  %coeff2244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2244, align 4
  %coeff2246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2246, align 4
  %coeff2248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2248, align 4
  %coeff2250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2250, align 4
  %coeff2252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2252, align 4
  %coeff2254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2254, align 4
  %coeff2256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2256, align 4
  %coeff2258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2258, align 4
  %coeff2260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2260, align 4
  %coeff2262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff2262, align 4
  %coeff2264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff2264, align 4
  %coeff2266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff2266, align 4
  %coeff2268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff2268, align 4
  %coeff2270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff2270, align 4
  %coeff2272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff2272, align 4
  %coeff2274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff2274, align 4
  %coeff2276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff2276, align 4
  %coeff2278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff2278, align 4
  %coeff2280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff2280, align 4
  %coeff2282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2282, align 4
  %coeff2284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2284, align 4
  %coeff2286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2286, align 4
  %coeff2288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2288, align 4
  %coeff2290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2290, align 4
  %coeff2292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff2292, align 4
  %coeff2294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2294, align 4
  %coeff2296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2296, align 4
  %coeff2298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2298, align 4
  %coeff2300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2300, align 4
  %coeff2302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 0
  store i128 14416168624775746045, i128* %coeff2302, align 4
  %coeff2304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 1
  store i128 1022162345351945202, i128* %coeff2304, align 4
  %coeff2306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 2
  store i128 13029150795551707312, i128* %coeff2306, align 4
  %coeff2308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 3
  store i128 15769251840598767233, i128* %coeff2308, align 4
  %coeff2310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 4
  store i128 17356947180719486701, i128* %coeff2310, align 4
  %coeff2312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff2312, align 4
  %coeff2314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff2314, align 4
  %coeff2316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff2316, align 4
  %coeff2318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff2318, align 4
  %coeff2320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff2320, align 4
  %coeff2322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff2322, align 4
  %coeff2324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff2324, align 4
  %coeff2326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff2326, align 4
  %coeff2328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff2328, align 4
  %coeff2330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff2330, align 4
  %coeff2332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2332, align 4
  %coeff2334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2334, align 4
  %coeff2336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2336, align 4
  %coeff2338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2338, align 4
  %coeff2340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2340, align 4
  %coeff2342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff2342, align 4
  %coeff2344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff2344, align 4
  %coeff2346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff2346, align 4
  %coeff2348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff2348, align 4
  %coeff2350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff2350, align 4
  %coeff2352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 0
  store i128 14416168624775746045, i128* %coeff2352, align 4
  %coeff2354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 1
  store i128 1022162345351945202, i128* %coeff2354, align 4
  %coeff2356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 2
  store i128 13029150795551707312, i128* %coeff2356, align 4
  %coeff2358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 3
  store i128 15769251840598767233, i128* %coeff2358, align 4
  %coeff2360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 4
  store i128 17356947180719486701, i128* %coeff2360, align 4
  %coeff2362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2362, align 4
  %coeff2364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2364, align 4
  %coeff2366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2366, align 4
  %coeff2368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2368, align 4
  %coeff2370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2370, align 4
  %coeff2372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2372, align 4
  %coeff2374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2374, align 4
  %coeff2376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2376, align 4
  %coeff2378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2378, align 4
  %coeff2380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2380, align 4
  %coeff2382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 0
  store i128 10087218740379830954, i128* %coeff2382, align 4
  %coeff2384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2384, align 4
  %coeff2386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2386, align 4
  %coeff2388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2388, align 4
  %coeff2390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2390, align 4
  %coeff2392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2392, align 4
  %coeff2394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2394, align 4
  %coeff2396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2396, align 4
  %coeff2398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2398, align 4
  %coeff2400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2400, align 4
  %coeff2402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 0
  store i128 10087218740379830953, i128* %coeff2402, align 4
  %coeff2404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 1
  store i128 18219880333079910417, i128* %coeff2404, align 4
  %coeff2406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 2
  store i128 6730265852384016549, i128* %coeff2406, align 4
  %coeff2408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 3
  store i128 920891278224531339, i128* %coeff2408, align 4
  %coeff2410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 4
  store i128 1233603221149818976, i128* %coeff2410, align 4
  %coeff2412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff2412, align 4
  %coeff2414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2414, align 4
  %coeff2416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2416, align 4
  %coeff2418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2418, align 4
  %coeff2420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2420, align 4
  %coeff2422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 0
  store i128 13402431016077871785, i128* %coeff2422, align 4
  %coeff2424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 1
  store i128 12763471136632971302, i128* %coeff2424, align 4
  %coeff2426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 2
  store i128 16232292306918877561, i128* %coeff2426, align 4
  %coeff2428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 3
  store i128 7820104214415738342, i128* %coeff2428, align 4
  %coeff2430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 4
  store i128 1233603221149820497, i128* %coeff2430, align 4
  %coeff2432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff2432, align 4
  %coeff2434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff2434, align 4
  %coeff2436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff2436, align 4
  %coeff2438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff2438, align 4
  %coeff2440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff2440, align 4
  %coeff2442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 0
  store i128 3315212275698040832, i128* %coeff2442, align 4
  %coeff2444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2444, align 4
  %coeff2446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2446, align 4
  %coeff2448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2448, align 4
  %coeff2450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff2450, align 4
  %coeff2452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2452, align 4
  %coeff2454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2454, align 4
  %coeff2456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2456, align 4
  %coeff2458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2458, align 4
  %coeff2460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2460, align 4
  %coeff2462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff2462, align 4
  %coeff2464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2464, align 4
  %coeff2466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2466, align 4
  %coeff2468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2468, align 4
  %coeff2470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 4
  store i128 1521, i128* %coeff2470, align 4
  %coeff2472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2472, align 4
  %coeff2474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2474, align 4
  %coeff2476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2476, align 4
  %coeff2478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2478, align 4
  %coeff2480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2480, align 4
  %coeff2482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2482, align 4
  %coeff2484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2484, align 4
  %coeff2486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2486, align 4
  %coeff2488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2488, align 4
  %coeff2490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2490, align 4
  %coeff2492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2492, align 4
  %coeff2494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2494, align 4
  %coeff2496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2496, align 4
  %coeff2498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2498, align 4
  %coeff2500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2500, align 4
  %coeff2502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 0
  store i128 11175958356102187080, i128* %coeff2502, align 4
  %coeff2504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 1
  store i128 3113730970175488220, i128* %coeff2504, align 4
  %coeff2506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 2
  store i128 208286685198802022, i128* %coeff2506, align 4
  %coeff2508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 3
  store i128 15461248674371682336, i128* %coeff2508, align 4
  %coeff2510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 4
  store i128 3241905720840261199, i128* %coeff2510, align 4
  %coeff2512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 0
  store i128 2226472659975684706, i128* %coeff2512, align 4
  %coeff2514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 1
  store i128 9649740166457483082, i128* %coeff2514, align 4
  %coeff2516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 2
  store i128 16024005621720083731, i128* %coeff2516, align 4
  %coeff2518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 3
  store i128 10805599613753607620, i128* %coeff2518, align 4
  %coeff2520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 4
  store i128 16438441574019110913, i128* %coeff2520, align 4
  %coeff2522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2522, align 4
  %coeff2524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2524, align 4
  %coeff2526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2526, align 4
  %coeff2528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2528, align 4
  %coeff2530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2530, align 4
  %coeff2532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 0
  store i128 3315212275698040832, i128* %coeff2532, align 4
  %coeff2534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 1
  store i128 12990334877262620692, i128* %coeff2534, align 4
  %coeff2536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 2
  store i128 9502026454534869203, i128* %coeff2536, align 4
  %coeff2538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 3
  store i128 6899212936191207002, i128* %coeff2538, align 4
  %coeff2540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 4
  store i128 1521, i128* %coeff2540, align 4
  %coeff2542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 0
  store i128 17433006465011677356, i128* %coeff2542, align 4
  %coeff2544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 1
  store i128 11741308791281026100, i128* %coeff2544, align 4
  %coeff2546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 2
  store i128 3203141511367178441, i128* %coeff2546, align 4
  %coeff2548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 3
  store i128 10497596447526522723, i128* %coeff2548, align 4
  %coeff2550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 4
  store i128 2323400114139885411, i128* %coeff2550, align 4
  %coeff2552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 0
  store i128 17433006465011677356, i128* %coeff2552, align 4
  %coeff2554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 1
  store i128 11741308791281026100, i128* %coeff2554, align 4
  %coeff2556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 2
  store i128 3203141511367178441, i128* %coeff2556, align 4
  %coeff2558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 3
  store i128 10497596447526522723, i128* %coeff2558, align 4
  %coeff2560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 4
  store i128 2323400114139885411, i128* %coeff2560, align 4
  %coeff2562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 0
  store i128 3315212275698040833, i128* %coeff2562, align 4
  %coeff2564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 1
  store i128 12990334877262620692, i128* %coeff2564, align 4
  %coeff2566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 2
  store i128 9502026454534869203, i128* %coeff2566, align 4
  %coeff2568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 3
  store i128 6899212936191207002, i128* %coeff2568, align 4
  %coeff2570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 4
  store i128 1521, i128* %coeff2570, align 4
  %coeff2572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2572, align 4
  %coeff2574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2574, align 4
  %coeff2576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2576, align 4
  %coeff2578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2578, align 4
  %coeff2580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2580, align 4
  %coeff2582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 0
  store i128 10162220747404304629, i128* %coeff2582, align 4
  %coeff2584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 1
  store i128 14855039761456506129, i128* %coeff2584, align 4
  %coeff2586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 2
  store i128 3411428196565980464, i128* %coeff2586, align 4
  %coeff2588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 3
  store i128 7512101048188645252, i128* %coeff2588, align 4
  %coeff2590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 4
  store i128 5565305834980146611, i128* %coeff2590, align 4
  %coeff2592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 0
  store i128 3240210268673567157, i128* %coeff2592, align 4
  %coeff2594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 1
  store i128 16355175448886016788, i128* %coeff2594, align 4
  %coeff2596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 2
  store i128 12820864110352905289, i128* %coeff2596, align 4
  %coeff2598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 3
  store i128 308003166227093089, i128* %coeff2598, align 4
  %coeff2600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 4
  store i128 14115041459879225501, i128* %coeff2600, align 4
  br label %if.exit2601

if.false1155:                                     ; preds = %if.exit
  br label %if.exit2601

if.exit2601:                                      ; preds = %if.false1155, %if.true1154
  %eq2605 = icmp eq i128 %0, 55
  %eq2607 = icmp eq i128 %1, 7
  %and2608 = and i1 %eq2605, %eq2607
  br i1 %and2608, label %if.true2602, label %if.false2603

if.true2602:                                      ; preds = %if.exit2601
  %coeff2610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2610, align 4
  %coeff2612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2612, align 4
  %coeff2614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2614, align 4
  %coeff2616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2616, align 4
  %coeff2618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2618, align 4
  %coeff2620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff2620, align 4
  %coeff2622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff2622, align 4
  %coeff2624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2624, align 4
  %coeff2626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2626, align 4
  %coeff2628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2628, align 4
  %coeff2630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2630, align 4
  %coeff2632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2632, align 4
  %coeff2634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff2634, align 4
  %coeff2636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff2636, align 4
  %coeff2638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 0
  store i128 1, i128* %coeff2638, align 4
  %coeff2640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 1
  store i128 0, i128* %coeff2640, align 4
  %coeff2642 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 2
  store i128 0, i128* %coeff2642, align 4
  %coeff2644 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 3
  store i128 0, i128* %coeff2644, align 4
  %coeff2646 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 4
  store i128 0, i128* %coeff2646, align 4
  %coeff2648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 5
  store i128 0, i128* %coeff2648, align 4
  %coeff2650 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0, i128 6
  store i128 0, i128* %coeff2650, align 4
  %coeff2652 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2652, align 4
  %coeff2654 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2654, align 4
  %coeff2656 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2656, align 4
  %coeff2658 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2658, align 4
  %coeff2660 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2660, align 4
  %coeff2662 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff2662, align 4
  %coeff2664 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff2664, align 4
  %coeff2666 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff2666, align 4
  %coeff2668 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2668, align 4
  %coeff2670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2670, align 4
  %coeff2672 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2672, align 4
  %coeff2674 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2674, align 4
  %coeff2676 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff2676, align 4
  %coeff2678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff2678, align 4
  %coeff2680 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff2680, align 4
  %coeff2682 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff2682, align 4
  %coeff2684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff2684, align 4
  %coeff2686 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff2686, align 4
  %coeff2688 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff2688, align 4
  %coeff2690 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff2690, align 4
  %coeff2692 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff2692, align 4
  %coeff2694 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff2694, align 4
  %coeff2696 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff2696, align 4
  %coeff2698 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff2698, align 4
  %coeff2700 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff2700, align 4
  %coeff2702 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff2702, align 4
  %coeff2704 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 5
  store i128 0, i128* %coeff2704, align 4
  %coeff2706 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0, i128 6
  store i128 0, i128* %coeff2706, align 4
  %coeff2708 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff2708, align 4
  %coeff2710 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff2710, align 4
  %coeff2712 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff2712, align 4
  %coeff2714 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff2714, align 4
  %coeff2716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff2716, align 4
  %coeff2718 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff2718, align 4
  %coeff2720 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff2720, align 4
  %coeff2722 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff2722, align 4
  %coeff2724 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff2724, align 4
  %coeff2726 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff2726, align 4
  %coeff2728 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff2728, align 4
  %coeff2730 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff2730, align 4
  %coeff2732 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 5
  store i128 0, i128* %coeff2732, align 4
  %coeff2734 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff2734, align 4
  %coeff2736 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2736, align 4
  %coeff2738 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2738, align 4
  %coeff2740 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2740, align 4
  %coeff2742 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2742, align 4
  %coeff2744 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2744, align 4
  %coeff2746 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff2746, align 4
  %coeff2748 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff2748, align 4
  %coeff2750 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 0
  store i128 1, i128* %coeff2750, align 4
  %coeff2752 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 1
  store i128 0, i128* %coeff2752, align 4
  %coeff2754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 2
  store i128 0, i128* %coeff2754, align 4
  %coeff2756 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 3
  store i128 0, i128* %coeff2756, align 4
  %coeff2758 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 4
  store i128 0, i128* %coeff2758, align 4
  %coeff2760 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 5
  store i128 0, i128* %coeff2760, align 4
  %coeff2762 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 0, i128 6
  store i128 0, i128* %coeff2762, align 4
  %coeff2764 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff2764, align 4
  %coeff2766 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff2766, align 4
  %coeff2768 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff2768, align 4
  %coeff2770 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff2770, align 4
  %coeff2772 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff2772, align 4
  %coeff2774 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff2774, align 4
  %coeff2776 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff2776, align 4
  %coeff2778 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2778, align 4
  %coeff2780 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2780, align 4
  %coeff2782 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2782, align 4
  %coeff2784 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2784, align 4
  %coeff2786 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2786, align 4
  %coeff2788 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff2788, align 4
  %coeff2790 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff2790, align 4
  %coeff2792 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2792, align 4
  %coeff2794 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2794, align 4
  %coeff2796 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2796, align 4
  %coeff2798 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2798, align 4
  %coeff2800 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2800, align 4
  %coeff2802 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff2802, align 4
  %coeff2804 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff2804, align 4
  %coeff2806 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 0
  store i128 2099988056465336, i128* %coeff2806, align 4
  %coeff2808 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 1
  store i128 20964146866715418, i128* %coeff2808, align 4
  %coeff2810 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 2
  store i128 26479447919286778, i128* %coeff2810, align 4
  %coeff2812 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 3
  store i128 28687334188327454, i128* %coeff2812, align 4
  %coeff2814 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 4
  store i128 18245231482781651, i128* %coeff2814, align 4
  %coeff2816 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 5
  store i128 21665078698214405, i128* %coeff2816, align 4
  %coeff2818 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0, i128 6
  store i128 1760545476751041, i128* %coeff2818, align 4
  %coeff2820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 0
  store i128 33647333985766131, i128* %coeff2820, align 4
  %coeff2822 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 1
  store i128 15061775342732377, i128* %coeff2822, align 4
  %coeff2824 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 2
  store i128 10634308716634293, i128* %coeff2824, align 4
  %coeff2826 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 3
  store i128 15267386808624246, i128* %coeff2826, align 4
  %coeff2828 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 4
  store i128 34335022074067067, i128* %coeff2828, align 4
  %coeff2830 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 5
  store i128 1778035881690211, i128* %coeff2830, align 4
  %coeff2832 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1, i128 6
  store i128 69335985795384, i128* %coeff2832, align 4
  %coeff2834 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff2834, align 4
  %coeff2836 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff2836, align 4
  %coeff2838 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff2838, align 4
  %coeff2840 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff2840, align 4
  %coeff2842 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff2842, align 4
  %coeff2844 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff2844, align 4
  %coeff2846 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff2846, align 4
  %coeff2848 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 0
  store i128 35184372088875692, i128* %coeff2848, align 4
  %coeff2850 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 1
  store i128 22472499736345367, i128* %coeff2850, align 4
  %coeff2852 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 2
  store i128 5698637743850064, i128* %coeff2852, align 4
  %coeff2854 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 3
  store i128 21300661132716363, i128* %coeff2854, align 4
  %coeff2856 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 4
  store i128 21929049149954008, i128* %coeff2856, align 4
  %coeff2858 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 5
  store i128 23430044241153146, i128* %coeff2858, align 4
  %coeff2860 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1, i128 6
  store i128 1829881462546425, i128* %coeff2860, align 4
  %coeff2862 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff2862, align 4
  %coeff2864 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff2864, align 4
  %coeff2866 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff2866, align 4
  %coeff2868 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff2868, align 4
  %coeff2870 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff2870, align 4
  %coeff2872 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 5
  store i128 401348527762810, i128* %coeff2872, align 4
  %coeff2874 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0, i128 6
  store i128 470331148861392, i128* %coeff2874, align 4
  %coeff2876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff2876, align 4
  %coeff2878 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff2878, align 4
  %coeff2880 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff2880, align 4
  %coeff2882 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff2882, align 4
  %coeff2884 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff2884, align 4
  %coeff2886 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 5
  store i128 401348527762810, i128* %coeff2886, align 4
  %coeff2888 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1, i128 6
  store i128 470331148861392, i128* %coeff2888, align 4
  %coeff2890 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff2890, align 4
  %coeff2892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff2892, align 4
  %coeff2894 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff2894, align 4
  %coeff2896 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff2896, align 4
  %coeff2898 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff2898, align 4
  %coeff2900 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff2900, align 4
  %coeff2902 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff2902, align 4
  %coeff2904 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff2904, align 4
  %coeff2906 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff2906, align 4
  %coeff2908 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff2908, align 4
  %coeff2910 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff2910, align 4
  %coeff2912 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff2912, align 4
  %coeff2914 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff2914, align 4
  %coeff2916 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff2916, align 4
  %coeff2918 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 0
  store i128 7031280223355158, i128* %coeff2918, align 4
  %coeff2920 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 1
  store i128 35145111776945462, i128* %coeff2920, align 4
  %coeff2922 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 2
  store i128 15263901815609576, i128* %coeff2922, align 4
  %coeff2924 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 3
  store i128 27123300247230202, i128* %coeff2924, align 4
  %coeff2926 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 4
  store i128 8449056334504512, i128* %coeff2926, align 4
  %coeff2928 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 5
  store i128 34652109665036566, i128* %coeff2928, align 4
  %coeff2930 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 0, i128 6
  store i128 400995163066007, i128* %coeff2930, align 4
  %coeff2932 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 0
  store i128 28716041818876309, i128* %coeff2932, align 4
  %coeff2934 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 1
  store i128 880810432502333, i128* %coeff2934, align 4
  %coeff2936 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 2
  store i128 21849854820311495, i128* %coeff2936, align 4
  %coeff2938 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 3
  store i128 16831420749721498, i128* %coeff2938, align 4
  %coeff2940 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 4
  store i128 8102400203380238, i128* %coeff2940, align 4
  %coeff2942 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 5
  store i128 24819801933832019, i128* %coeff2942, align 4
  %coeff2944 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 5, i128 1, i128 6
  store i128 1428886299480417, i128* %coeff2944, align 4
  %coeff2946 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff2946, align 4
  %coeff2948 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff2948, align 4
  %coeff2950 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff2950, align 4
  %coeff2952 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff2952, align 4
  %coeff2954 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff2954, align 4
  %coeff2956 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff2956, align 4
  %coeff2958 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff2958, align 4
  %coeff2960 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff2960, align 4
  %coeff2962 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff2962, align 4
  %coeff2964 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff2964, align 4
  %coeff2966 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff2966, align 4
  %coeff2968 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff2968, align 4
  %coeff2970 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff2970, align 4
  %coeff2972 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff2972, align 4
  %coeff2974 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 0
  store i128 562949953355775, i128* %coeff2974, align 4
  %coeff2976 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff2976, align 4
  %coeff2978 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff2978, align 4
  %coeff2980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff2980, align 4
  %coeff2982 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff2982, align 4
  %coeff2984 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 5
  store i128 13070338751470, i128* %coeff2984, align 4
  %coeff2986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0, i128 6
  store i128 0, i128* %coeff2986, align 4
  %coeff2988 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff2988, align 4
  %coeff2990 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff2990, align 4
  %coeff2992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff2992, align 4
  %coeff2994 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff2994, align 4
  %coeff2996 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff2996, align 4
  %coeff2998 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff2998, align 4
  %coeff3000 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff3000, align 4
  %coeff3002 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 0
  store i128 562949953355774, i128* %coeff3002, align 4
  %coeff3004 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3004, align 4
  %coeff3006 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3006, align 4
  %coeff3008 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3008, align 4
  %coeff3010 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3010, align 4
  %coeff3012 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3012, align 4
  %coeff3014 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3014, align 4
  %coeff3016 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff3016, align 4
  %coeff3018 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3018, align 4
  %coeff3020 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3020, align 4
  %coeff3022 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3022, align 4
  %coeff3024 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3024, align 4
  %coeff3026 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3026, align 4
  %coeff3028 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3028, align 4
  %coeff3030 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3030, align 4
  %coeff3032 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3032, align 4
  %coeff3034 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3034, align 4
  %coeff3036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3036, align 4
  %coeff3038 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3038, align 4
  %coeff3040 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3040, align 4
  %coeff3042 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3042, align 4
  %coeff3044 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff3044, align 4
  %coeff3046 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff3046, align 4
  %coeff3048 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff3048, align 4
  %coeff3050 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff3050, align 4
  %coeff3052 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff3052, align 4
  %coeff3054 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff3054, align 4
  %coeff3056 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff3056, align 4
  %coeff3058 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3058, align 4
  %coeff3060 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3060, align 4
  %coeff3062 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3062, align 4
  %coeff3064 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3064, align 4
  %coeff3066 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3066, align 4
  %coeff3068 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3068, align 4
  %coeff3070 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3070, align 4
  %coeff3072 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3072, align 4
  %coeff3074 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3074, align 4
  %coeff3076 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3076, align 4
  %coeff3078 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3078, align 4
  %coeff3080 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3080, align 4
  %coeff3082 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3082, align 4
  %coeff3084 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3084, align 4
  %coeff3086 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff3086, align 4
  %coeff3088 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3088, align 4
  %coeff3090 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3090, align 4
  %coeff3092 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3092, align 4
  %coeff3094 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3094, align 4
  %coeff3096 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3096, align 4
  %coeff3098 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3098, align 4
  %coeff3100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff3100, align 4
  %coeff3102 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff3102, align 4
  %coeff3104 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff3104, align 4
  %coeff3106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff3106, align 4
  %coeff3108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff3108, align 4
  %coeff3110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff3110, align 4
  %coeff3112 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff3112, align 4
  %coeff3114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3114, align 4
  %coeff3116 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3116, align 4
  %coeff3118 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3118, align 4
  %coeff3120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3120, align 4
  %coeff3122 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3122, align 4
  %coeff3124 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3124, align 4
  %coeff3126 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3126, align 4
  %coeff3128 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3128, align 4
  %coeff3130 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3130, align 4
  %coeff3132 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3132, align 4
  %coeff3134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3134, align 4
  %coeff3136 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3136, align 4
  %coeff3138 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3138, align 4
  %coeff3140 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3140, align 4
  %coeff3142 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff3142, align 4
  %coeff3144 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff3144, align 4
  %coeff3146 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff3146, align 4
  %coeff3148 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff3148, align 4
  %coeff3150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff3150, align 4
  %coeff3152 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff3152, align 4
  %coeff3154 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff3154, align 4
  %coeff3156 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff3156, align 4
  %coeff3158 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff3158, align 4
  %coeff3160 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff3160, align 4
  %coeff3162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff3162, align 4
  %coeff3164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff3164, align 4
  %coeff3166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 5
  store i128 401348527762810, i128* %coeff3166, align 4
  %coeff3168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1, i128 6
  store i128 470331148861392, i128* %coeff3168, align 4
  %coeff3170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff3170, align 4
  %coeff3172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3172, align 4
  %coeff3174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3174, align 4
  %coeff3176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3176, align 4
  %coeff3178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3178, align 4
  %coeff3180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3180, align 4
  %coeff3182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3182, align 4
  %coeff3184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff3184, align 4
  %coeff3186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3186, align 4
  %coeff3188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3188, align 4
  %coeff3190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3190, align 4
  %coeff3192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3192, align 4
  %coeff3194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3194, align 4
  %coeff3196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3196, align 4
  %coeff3198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff3198, align 4
  %coeff3200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff3200, align 4
  %coeff3202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff3202, align 4
  %coeff3204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff3204, align 4
  %coeff3206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff3206, align 4
  %coeff3208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff3208, align 4
  %coeff3210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff3210, align 4
  %coeff3212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff3212, align 4
  %coeff3214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff3214, align 4
  %coeff3216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff3216, align 4
  %coeff3218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff3218, align 4
  %coeff3220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff3220, align 4
  %coeff3222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff3222, align 4
  %coeff3224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff3224, align 4
  %coeff3226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3226, align 4
  %coeff3228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3228, align 4
  %coeff3230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3230, align 4
  %coeff3232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3232, align 4
  %coeff3234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3234, align 4
  %coeff3236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3236, align 4
  %coeff3238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3238, align 4
  %coeff3240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3240, align 4
  %coeff3242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3242, align 4
  %coeff3244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3244, align 4
  %coeff3246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3246, align 4
  %coeff3248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3248, align 4
  %coeff3250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3250, align 4
  %coeff3252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3252, align 4
  %coeff3254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff3254, align 4
  %coeff3256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff3256, align 4
  %coeff3258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff3258, align 4
  %coeff3260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff3260, align 4
  %coeff3262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff3262, align 4
  %coeff3264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 5
  store i128 401348527762810, i128* %coeff3264, align 4
  %coeff3266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 0, i128 6
  store i128 470331148861392, i128* %coeff3266, align 4
  %coeff3268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff3268, align 4
  %coeff3270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff3270, align 4
  %coeff3272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff3272, align 4
  %coeff3274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff3274, align 4
  %coeff3276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff3276, align 4
  %coeff3278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff3278, align 4
  %coeff3280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 5, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff3280, align 4
  %coeff3282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3282, align 4
  %coeff3284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3284, align 4
  %coeff3286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3286, align 4
  %coeff3288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3288, align 4
  %coeff3290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3290, align 4
  %coeff3292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3292, align 4
  %coeff3294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3294, align 4
  %coeff3296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3296, align 4
  %coeff3298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3298, align 4
  %coeff3300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3300, align 4
  %coeff3302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3302, align 4
  %coeff3304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3304, align 4
  %coeff3306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3306, align 4
  %coeff3308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3308, align 4
  %coeff3310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 0
  store i128 562949953355774, i128* %coeff3310, align 4
  %coeff3312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3312, align 4
  %coeff3314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3314, align 4
  %coeff3316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3316, align 4
  %coeff3318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3318, align 4
  %coeff3320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3320, align 4
  %coeff3322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 0, i128 6
  store i128 0, i128* %coeff3322, align 4
  %coeff3324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff3324, align 4
  %coeff3326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff3326, align 4
  %coeff3328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff3328, align 4
  %coeff3330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff3330, align 4
  %coeff3332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff3332, align 4
  %coeff3334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff3334, align 4
  %coeff3336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff3336, align 4
  %coeff3338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3338, align 4
  %coeff3340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3340, align 4
  %coeff3342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3342, align 4
  %coeff3344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3344, align 4
  %coeff3346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3346, align 4
  %coeff3348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3348, align 4
  %coeff3350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3350, align 4
  %coeff3352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff3352, align 4
  %coeff3354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3354, align 4
  %coeff3356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3356, align 4
  %coeff3358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3358, align 4
  %coeff3360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3360, align 4
  %coeff3362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3362, align 4
  %coeff3364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3364, align 4
  %coeff3366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff3366, align 4
  %coeff3368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff3368, align 4
  %coeff3370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff3370, align 4
  %coeff3372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff3372, align 4
  %coeff3374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff3374, align 4
  %coeff3376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 5
  store i128 0, i128* %coeff3376, align 4
  %coeff3378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 0, i128 6
  store i128 0, i128* %coeff3378, align 4
  %coeff3380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff3380, align 4
  %coeff3382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff3382, align 4
  %coeff3384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff3384, align 4
  %coeff3386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff3386, align 4
  %coeff3388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff3388, align 4
  %coeff3390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff3390, align 4
  %coeff3392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff3392, align 4
  %coeff3394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 0
  store i128 562949953355774, i128* %coeff3394, align 4
  %coeff3396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3396, align 4
  %coeff3398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3398, align 4
  %coeff3400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3400, align 4
  %coeff3402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3402, align 4
  %coeff3404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3404, align 4
  %coeff3406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff3406, align 4
  %coeff3408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3408, align 4
  %coeff3410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3410, align 4
  %coeff3412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3412, align 4
  %coeff3414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3414, align 4
  %coeff3416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3416, align 4
  %coeff3418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3418, align 4
  %coeff3420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3420, align 4
  %coeff3422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3422, align 4
  %coeff3424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3424, align 4
  %coeff3426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3426, align 4
  %coeff3428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3428, align 4
  %coeff3430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3430, align 4
  %coeff3432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3432, align 4
  %coeff3434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3434, align 4
  %coeff3436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff3436, align 4
  %coeff3438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff3438, align 4
  %coeff3440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff3440, align 4
  %coeff3442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff3442, align 4
  %coeff3444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff3444, align 4
  %coeff3446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff3446, align 4
  %coeff3448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 4, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff3448, align 4
  %coeff3450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3450, align 4
  %coeff3452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3452, align 4
  %coeff3454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3454, align 4
  %coeff3456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3456, align 4
  %coeff3458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3458, align 4
  %coeff3460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3460, align 4
  %coeff3462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3462, align 4
  %coeff3464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3464, align 4
  %coeff3466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3466, align 4
  %coeff3468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3468, align 4
  %coeff3470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3470, align 4
  %coeff3472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3472, align 4
  %coeff3474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3474, align 4
  %coeff3476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3476, align 4
  %coeff3478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 0
  store i128 28716041818876309, i128* %coeff3478, align 4
  %coeff3480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 1
  store i128 880810432502333, i128* %coeff3480, align 4
  %coeff3482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 2
  store i128 21849854820311495, i128* %coeff3482, align 4
  %coeff3484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 3
  store i128 16831420749721498, i128* %coeff3484, align 4
  %coeff3486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 4
  store i128 8102400203380238, i128* %coeff3486, align 4
  %coeff3488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 5
  store i128 24819801933832019, i128* %coeff3488, align 4
  %coeff3490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 0, i128 6
  store i128 1428886299480417, i128* %coeff3490, align 4
  %coeff3492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 0
  store i128 7031280223355158, i128* %coeff3492, align 4
  %coeff3494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 1
  store i128 35145111776945462, i128* %coeff3494, align 4
  %coeff3496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 2
  store i128 15263901815609576, i128* %coeff3496, align 4
  %coeff3498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 3
  store i128 27123300247230202, i128* %coeff3498, align 4
  %coeff3500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 4
  store i128 8449056334504512, i128* %coeff3500, align 4
  %coeff3502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 5
  store i128 34652109665036566, i128* %coeff3502, align 4
  %coeff3504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 1, i128 1, i128 6
  store i128 400995163066007, i128* %coeff3504, align 4
  %coeff3506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff3506, align 4
  %coeff3508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3508, align 4
  %coeff3510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3510, align 4
  %coeff3512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3512, align 4
  %coeff3514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3514, align 4
  %coeff3516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3516, align 4
  %coeff3518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3518, align 4
  %coeff3520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 0
  store i128 562949953355774, i128* %coeff3520, align 4
  %coeff3522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 1
  store i128 13553422473102428, i128* %coeff3522, align 4
  %coeff3524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 2
  store i128 31415118892071007, i128* %coeff3524, align 4
  %coeff3526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 3
  store i128 22654059864235337, i128* %coeff3526, align 4
  %coeff3528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 4
  store i128 30651204406894710, i128* %coeff3528, align 4
  %coeff3530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 5
  store i128 13070338751470, i128* %coeff3530, align 4
  %coeff3532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3532, align 4
  %coeff3534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff3534, align 4
  %coeff3536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff3536, align 4
  %coeff3538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff3538, align 4
  %coeff3540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff3540, align 4
  %coeff3542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff3542, align 4
  %coeff3544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 5
  store i128 401348527762810, i128* %coeff3544, align 4
  %coeff3546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 0, i128 6
  store i128 470331148861392, i128* %coeff3546, align 4
  %coeff3548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff3548, align 4
  %coeff3550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff3550, align 4
  %coeff3552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff3552, align 4
  %coeff3554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff3554, align 4
  %coeff3556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff3556, align 4
  %coeff3558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 5
  store i128 401348527762810, i128* %coeff3558, align 4
  %coeff3560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 3, i128 1, i128 6
  store i128 470331148861392, i128* %coeff3560, align 4
  %coeff3562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 0
  store i128 562949953355775, i128* %coeff3562, align 4
  %coeff3564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff3564, align 4
  %coeff3566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff3566, align 4
  %coeff3568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff3568, align 4
  %coeff3570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff3570, align 4
  %coeff3572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff3572, align 4
  %coeff3574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff3574, align 4
  %coeff3576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3576, align 4
  %coeff3578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3578, align 4
  %coeff3580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3580, align 4
  %coeff3582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3582, align 4
  %coeff3584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3584, align 4
  %coeff3586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3586, align 4
  %coeff3588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3588, align 4
  %coeff3590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 0
  store i128 33647333985766131, i128* %coeff3590, align 4
  %coeff3592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 1
  store i128 15061775342732377, i128* %coeff3592, align 4
  %coeff3594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 2
  store i128 10634308716634293, i128* %coeff3594, align 4
  %coeff3596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 3
  store i128 15267386808624246, i128* %coeff3596, align 4
  %coeff3598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 4
  store i128 34335022074067067, i128* %coeff3598, align 4
  %coeff3600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 5
  store i128 1778035881690211, i128* %coeff3600, align 4
  %coeff3602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 0, i128 6
  store i128 69335985795384, i128* %coeff3602, align 4
  %coeff3604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 0
  store i128 2099988056465336, i128* %coeff3604, align 4
  %coeff3606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 1
  store i128 20964146866715418, i128* %coeff3606, align 4
  %coeff3608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 2
  store i128 26479447919286778, i128* %coeff3608, align 4
  %coeff3610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 3
  store i128 28687334188327454, i128* %coeff3610, align 4
  %coeff3612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 4
  store i128 18245231482781651, i128* %coeff3612, align 4
  %coeff3614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 5
  store i128 21665078698214405, i128* %coeff3614, align 4
  %coeff3616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 5, i128 5, i128 1, i128 6
  store i128 1760545476751041, i128* %coeff3616, align 4
  %coeff3618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3618, align 4
  %coeff3620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3620, align 4
  %coeff3622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3622, align 4
  %coeff3624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3624, align 4
  %coeff3626 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3626, align 4
  %coeff3628 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3628, align 4
  %coeff3630 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3630, align 4
  %coeff3632 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3632, align 4
  %coeff3634 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3634, align 4
  %coeff3636 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3636, align 4
  %coeff3638 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3638, align 4
  %coeff3640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3640, align 4
  %coeff3642 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3642, align 4
  %coeff3644 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3644, align 4
  %coeff3646 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3646, align 4
  %coeff3648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3648, align 4
  %coeff3650 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3650, align 4
  %coeff3652 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3652, align 4
  %coeff3654 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3654, align 4
  %coeff3656 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3656, align 4
  %coeff3658 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3658, align 4
  %coeff3660 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff3660, align 4
  %coeff3662 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff3662, align 4
  %coeff3664 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff3664, align 4
  %coeff3666 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff3666, align 4
  %coeff3668 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff3668, align 4
  %coeff3670 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff3670, align 4
  %coeff3672 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff3672, align 4
  %coeff3674 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 0
  store i128 1, i128* %coeff3674, align 4
  %coeff3676 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3676, align 4
  %coeff3678 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3678, align 4
  %coeff3680 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3680, align 4
  %coeff3682 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3682, align 4
  %coeff3684 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3684, align 4
  %coeff3686 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3686, align 4
  %coeff3688 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff3688, align 4
  %coeff3690 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff3690, align 4
  %coeff3692 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff3692, align 4
  %coeff3694 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff3694, align 4
  %coeff3696 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff3696, align 4
  %coeff3698 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff3698, align 4
  %coeff3700 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff3700, align 4
  %coeff3702 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3702, align 4
  %coeff3704 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3704, align 4
  %coeff3706 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3706, align 4
  %coeff3708 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3708, align 4
  %coeff3710 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3710, align 4
  %coeff3712 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3712, align 4
  %coeff3714 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3714, align 4
  %coeff3716 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff3716, align 4
  %coeff3718 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff3718, align 4
  %coeff3720 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff3720, align 4
  %coeff3722 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff3722, align 4
  %coeff3724 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff3724, align 4
  %coeff3726 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff3726, align 4
  %coeff3728 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff3728, align 4
  %coeff3730 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 0
  store i128 1, i128* %coeff3730, align 4
  %coeff3732 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 1
  store i128 0, i128* %coeff3732, align 4
  %coeff3734 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 2
  store i128 0, i128* %coeff3734, align 4
  %coeff3736 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 3
  store i128 0, i128* %coeff3736, align 4
  %coeff3738 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 4
  store i128 0, i128* %coeff3738, align 4
  %coeff3740 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 5
  store i128 0, i128* %coeff3740, align 4
  %coeff3742 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff3742, align 4
  %coeff3744 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3744, align 4
  %coeff3746 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3746, align 4
  %coeff3748 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3748, align 4
  %coeff3750 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3750, align 4
  %coeff3752 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3752, align 4
  %coeff3754 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3754, align 4
  %coeff3756 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3756, align 4
  %coeff3758 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff3758, align 4
  %coeff3760 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff3760, align 4
  %coeff3762 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff3762, align 4
  %coeff3764 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff3764, align 4
  %coeff3766 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff3766, align 4
  %coeff3768 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff3768, align 4
  %coeff3770 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3770, align 4
  %coeff3772 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff3772, align 4
  %coeff3774 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff3774, align 4
  %coeff3776 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff3776, align 4
  %coeff3778 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff3778, align 4
  %coeff3780 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff3780, align 4
  %coeff3782 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff3782, align 4
  %coeff3784 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 6, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff3784, align 4
  %coeff3786 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3786, align 4
  %coeff3788 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3788, align 4
  %coeff3790 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3790, align 4
  %coeff3792 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3792, align 4
  %coeff3794 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3794, align 4
  %coeff3796 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3796, align 4
  %coeff3798 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3798, align 4
  %coeff3800 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3800, align 4
  %coeff3802 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3802, align 4
  %coeff3804 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3804, align 4
  %coeff3806 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3806, align 4
  %coeff3808 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3808, align 4
  %coeff3810 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3810, align 4
  %coeff3812 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3812, align 4
  %coeff3814 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 0
  store i128 33647333985766131, i128* %coeff3814, align 4
  %coeff3816 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 1
  store i128 15061775342732377, i128* %coeff3816, align 4
  %coeff3818 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 2
  store i128 10634308716634293, i128* %coeff3818, align 4
  %coeff3820 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 3
  store i128 15267386808624246, i128* %coeff3820, align 4
  %coeff3822 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 4
  store i128 34335022074067067, i128* %coeff3822, align 4
  %coeff3824 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 5
  store i128 1778035881690211, i128* %coeff3824, align 4
  %coeff3826 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 0, i128 6
  store i128 69335985795384, i128* %coeff3826, align 4
  %coeff3828 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 0
  store i128 2099988056465336, i128* %coeff3828, align 4
  %coeff3830 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 1
  store i128 20964146866715418, i128* %coeff3830, align 4
  %coeff3832 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 2
  store i128 26479447919286778, i128* %coeff3832, align 4
  %coeff3834 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 3
  store i128 28687334188327454, i128* %coeff3834, align 4
  %coeff3836 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 4
  store i128 18245231482781651, i128* %coeff3836, align 4
  %coeff3838 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 5
  store i128 21665078698214405, i128* %coeff3838, align 4
  %coeff3840 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 1, i128 1, i128 6
  store i128 1760545476751041, i128* %coeff3840, align 4
  %coeff3842 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff3842, align 4
  %coeff3844 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff3844, align 4
  %coeff3846 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff3846, align 4
  %coeff3848 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff3848, align 4
  %coeff3850 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff3850, align 4
  %coeff3852 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff3852, align 4
  %coeff3854 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff3854, align 4
  %coeff3856 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 0
  store i128 35184372088875692, i128* %coeff3856, align 4
  %coeff3858 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 1
  store i128 22472499736345367, i128* %coeff3858, align 4
  %coeff3860 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 2
  store i128 5698637743850064, i128* %coeff3860, align 4
  %coeff3862 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 3
  store i128 21300661132716363, i128* %coeff3862, align 4
  %coeff3864 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 4
  store i128 21929049149954008, i128* %coeff3864, align 4
  %coeff3866 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 5
  store i128 23430044241153146, i128* %coeff3866, align 4
  %coeff3868 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 2, i128 1, i128 6
  store i128 1829881462546425, i128* %coeff3868, align 4
  %coeff3870 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff3870, align 4
  %coeff3872 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff3872, align 4
  %coeff3874 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff3874, align 4
  %coeff3876 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff3876, align 4
  %coeff3878 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff3878, align 4
  %coeff3880 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff3880, align 4
  %coeff3882 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff3882, align 4
  %coeff3884 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff3884, align 4
  %coeff3886 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff3886, align 4
  %coeff3888 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff3888, align 4
  %coeff3890 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff3890, align 4
  %coeff3892 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff3892, align 4
  %coeff3894 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff3894, align 4
  %coeff3896 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 3, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff3896, align 4
  %coeff3898 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff3898, align 4
  %coeff3900 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3900, align 4
  %coeff3902 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3902, align 4
  %coeff3904 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3904, align 4
  %coeff3906 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3906, align 4
  %coeff3908 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3908, align 4
  %coeff3910 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3910, align 4
  %coeff3912 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff3912, align 4
  %coeff3914 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff3914, align 4
  %coeff3916 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff3916, align 4
  %coeff3918 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff3918, align 4
  %coeff3920 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff3920, align 4
  %coeff3922 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff3922, align 4
  %coeff3924 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff3924, align 4
  %coeff3926 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 0
  store i128 28716041818876309, i128* %coeff3926, align 4
  %coeff3928 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 1
  store i128 880810432502333, i128* %coeff3928, align 4
  %coeff3930 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 2
  store i128 21849854820311495, i128* %coeff3930, align 4
  %coeff3932 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 3
  store i128 16831420749721498, i128* %coeff3932, align 4
  %coeff3934 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 4
  store i128 8102400203380238, i128* %coeff3934, align 4
  %coeff3936 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 5
  store i128 24819801933832019, i128* %coeff3936, align 4
  %coeff3938 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 0, i128 6
  store i128 1428886299480417, i128* %coeff3938, align 4
  %coeff3940 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 0
  store i128 7031280223355158, i128* %coeff3940, align 4
  %coeff3942 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 1
  store i128 35145111776945462, i128* %coeff3942, align 4
  %coeff3944 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 2
  store i128 15263901815609576, i128* %coeff3944, align 4
  %coeff3946 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 3
  store i128 27123300247230202, i128* %coeff3946, align 4
  %coeff3948 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 4
  store i128 8449056334504512, i128* %coeff3948, align 4
  %coeff3950 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 5
  store i128 34652109665036566, i128* %coeff3950, align 4
  %coeff3952 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 7, i128 5, i128 1, i128 6
  store i128 400995163066007, i128* %coeff3952, align 4
  %coeff3954 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff3954, align 4
  %coeff3956 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff3956, align 4
  %coeff3958 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff3958, align 4
  %coeff3960 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff3960, align 4
  %coeff3962 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff3962, align 4
  %coeff3964 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff3964, align 4
  %coeff3966 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff3966, align 4
  %coeff3968 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff3968, align 4
  %coeff3970 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff3970, align 4
  %coeff3972 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff3972, align 4
  %coeff3974 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff3974, align 4
  %coeff3976 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff3976, align 4
  %coeff3978 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff3978, align 4
  %coeff3980 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff3980, align 4
  %coeff3982 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff3982, align 4
  %coeff3984 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff3984, align 4
  %coeff3986 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff3986, align 4
  %coeff3988 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff3988, align 4
  %coeff3990 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff3990, align 4
  %coeff3992 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff3992, align 4
  %coeff3994 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff3994, align 4
  %coeff3996 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff3996, align 4
  %coeff3998 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff3998, align 4
  %coeff4000 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff4000, align 4
  %coeff4002 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff4002, align 4
  %coeff4004 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff4004, align 4
  %coeff4006 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff4006, align 4
  %coeff4008 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff4008, align 4
  %coeff4010 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 0
  store i128 562949953355774, i128* %coeff4010, align 4
  %coeff4012 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4012, align 4
  %coeff4014 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4014, align 4
  %coeff4016 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4016, align 4
  %coeff4018 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4018, align 4
  %coeff4020 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4020, align 4
  %coeff4022 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff4022, align 4
  %coeff4024 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff4024, align 4
  %coeff4026 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff4026, align 4
  %coeff4028 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff4028, align 4
  %coeff4030 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff4030, align 4
  %coeff4032 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff4032, align 4
  %coeff4034 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff4034, align 4
  %coeff4036 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4036, align 4
  %coeff4038 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 0
  store i128 1, i128* %coeff4038, align 4
  %coeff4040 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 1
  store i128 0, i128* %coeff4040, align 4
  %coeff4042 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 2
  store i128 0, i128* %coeff4042, align 4
  %coeff4044 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 3
  store i128 0, i128* %coeff4044, align 4
  %coeff4046 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 4
  store i128 0, i128* %coeff4046, align 4
  %coeff4048 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 5
  store i128 0, i128* %coeff4048, align 4
  %coeff4050 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 0, i128 6
  store i128 0, i128* %coeff4050, align 4
  %coeff4052 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff4052, align 4
  %coeff4054 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff4054, align 4
  %coeff4056 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff4056, align 4
  %coeff4058 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff4058, align 4
  %coeff4060 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff4060, align 4
  %coeff4062 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff4062, align 4
  %coeff4064 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff4064, align 4
  %coeff4066 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff4066, align 4
  %coeff4068 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4068, align 4
  %coeff4070 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4070, align 4
  %coeff4072 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4072, align 4
  %coeff4074 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4074, align 4
  %coeff4076 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4076, align 4
  %coeff4078 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4078, align 4
  %coeff4080 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4080, align 4
  %coeff4082 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4082, align 4
  %coeff4084 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4084, align 4
  %coeff4086 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4086, align 4
  %coeff4088 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4088, align 4
  %coeff4090 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4090, align 4
  %coeff4092 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4092, align 4
  %coeff4094 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 0
  store i128 562949953355774, i128* %coeff4094, align 4
  %coeff4096 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4096, align 4
  %coeff4098 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4098, align 4
  %coeff4100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4100, align 4
  %coeff4102 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4102, align 4
  %coeff4104 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4104, align 4
  %coeff4106 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 0, i128 6
  store i128 0, i128* %coeff4106, align 4
  %coeff4108 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff4108, align 4
  %coeff4110 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff4110, align 4
  %coeff4112 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff4112, align 4
  %coeff4114 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff4114, align 4
  %coeff4116 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff4116, align 4
  %coeff4118 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff4118, align 4
  %coeff4120 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 8, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff4120, align 4
  %coeff4122 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff4122, align 4
  %coeff4124 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff4124, align 4
  %coeff4126 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff4126, align 4
  %coeff4128 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff4128, align 4
  %coeff4130 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff4130, align 4
  %coeff4132 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff4132, align 4
  %coeff4134 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff4134, align 4
  %coeff4136 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff4136, align 4
  %coeff4138 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff4138, align 4
  %coeff4140 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff4140, align 4
  %coeff4142 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff4142, align 4
  %coeff4144 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff4144, align 4
  %coeff4146 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff4146, align 4
  %coeff4148 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff4148, align 4
  %coeff4150 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff4150, align 4
  %coeff4152 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff4152, align 4
  %coeff4154 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff4154, align 4
  %coeff4156 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff4156, align 4
  %coeff4158 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff4158, align 4
  %coeff4160 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 5
  store i128 401348527762810, i128* %coeff4160, align 4
  %coeff4162 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 0, i128 6
  store i128 470331148861392, i128* %coeff4162, align 4
  %coeff4164 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff4164, align 4
  %coeff4166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff4166, align 4
  %coeff4168 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff4168, align 4
  %coeff4170 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff4170, align 4
  %coeff4172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff4172, align 4
  %coeff4174 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff4174, align 4
  %coeff4176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 1, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff4176, align 4
  %coeff4178 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff4178, align 4
  %coeff4180 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff4180, align 4
  %coeff4182 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff4182, align 4
  %coeff4184 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff4184, align 4
  %coeff4186 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff4186, align 4
  %coeff4188 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff4188, align 4
  %coeff4190 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff4190, align 4
  %coeff4192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 0
  store i128 1, i128* %coeff4192, align 4
  %coeff4194 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff4194, align 4
  %coeff4196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff4196, align 4
  %coeff4198 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff4198, align 4
  %coeff4200 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff4200, align 4
  %coeff4202 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff4202, align 4
  %coeff4204 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4204, align 4
  %coeff4206 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 0
  store i128 4649817190157321, i128* %coeff4206, align 4
  %coeff4208 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 1
  store i128 14178090100713872, i128* %coeff4208, align 4
  %coeff4210 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 2
  store i128 25898210532243870, i128* %coeff4210, align 4
  %coeff4212 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 3
  store i128 6361890036890480, i128* %coeff4212, align 4
  %coeff4214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 4
  store i128 6755281389607612, i128* %coeff4214, align 4
  %coeff4216 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 5
  store i128 401348527762810, i128* %coeff4216, align 4
  %coeff4218 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 0, i128 6
  store i128 470331148861392, i128* %coeff4218, align 4
  %coeff4220 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff4220, align 4
  %coeff4222 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff4222, align 4
  %coeff4224 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff4224, align 4
  %coeff4226 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff4226, align 4
  %coeff4228 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff4228, align 4
  %coeff4230 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 5
  store i128 401348527762810, i128* %coeff4230, align 4
  %coeff4232 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 3, i128 1, i128 6
  store i128 470331148861392, i128* %coeff4232, align 4
  %coeff4234 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff4234, align 4
  %coeff4236 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff4236, align 4
  %coeff4238 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff4238, align 4
  %coeff4240 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff4240, align 4
  %coeff4242 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff4242, align 4
  %coeff4244 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff4244, align 4
  %coeff4246 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4246, align 4
  %coeff4248 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4248, align 4
  %coeff4250 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4250, align 4
  %coeff4252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4252, align 4
  %coeff4254 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4254, align 4
  %coeff4256 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4256, align 4
  %coeff4258 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4258, align 4
  %coeff4260 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4260, align 4
  %coeff4262 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff4262, align 4
  %coeff4264 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff4264, align 4
  %coeff4266 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff4266, align 4
  %coeff4268 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff4268, align 4
  %coeff4270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff4270, align 4
  %coeff4272 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff4272, align 4
  %coeff4274 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff4274, align 4
  %coeff4276 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 0
  store i128 4649817190157321, i128* %coeff4276, align 4
  %coeff4278 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 1
  store i128 14178090100713872, i128* %coeff4278, align 4
  %coeff4280 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 2
  store i128 25898210532243870, i128* %coeff4280, align 4
  %coeff4282 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 3
  store i128 6361890036890480, i128* %coeff4282, align 4
  %coeff4284 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 4
  store i128 6755281389607612, i128* %coeff4284, align 4
  %coeff4286 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 5
  store i128 401348527762810, i128* %coeff4286, align 4
  %coeff4288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 9, i128 5, i128 1, i128 6
  store i128 470331148861392, i128* %coeff4288, align 4
  %coeff4290 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff4290, align 4
  %coeff4292 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff4292, align 4
  %coeff4294 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff4294, align 4
  %coeff4296 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff4296, align 4
  %coeff4298 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff4298, align 4
  %coeff4300 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff4300, align 4
  %coeff4302 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff4302, align 4
  %coeff4304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff4304, align 4
  %coeff4306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff4306, align 4
  %coeff4308 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff4308, align 4
  %coeff4310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff4310, align 4
  %coeff4312 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff4312, align 4
  %coeff4314 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff4314, align 4
  %coeff4316 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff4316, align 4
  %coeff4318 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 0
  store i128 35184372088875693, i128* %coeff4318, align 4
  %coeff4320 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4320, align 4
  %coeff4322 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4322, align 4
  %coeff4324 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4324, align 4
  %coeff4326 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4326, align 4
  %coeff4328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4328, align 4
  %coeff4330 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4330, align 4
  %coeff4332 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 0
  store i128 0, i128* %coeff4332, align 4
  %coeff4334 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 1
  store i128 0, i128* %coeff4334, align 4
  %coeff4336 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 2
  store i128 0, i128* %coeff4336, align 4
  %coeff4338 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 3
  store i128 0, i128* %coeff4338, align 4
  %coeff4340 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 4
  store i128 0, i128* %coeff4340, align 4
  %coeff4342 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 5
  store i128 0, i128* %coeff4342, align 4
  %coeff4344 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 1, i128 1, i128 6
  store i128 0, i128* %coeff4344, align 4
  %coeff4346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 0
  store i128 35184372088875692, i128* %coeff4346, align 4
  %coeff4348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 1
  store i128 22472499736345367, i128* %coeff4348, align 4
  %coeff4350 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 2
  store i128 5698637743850064, i128* %coeff4350, align 4
  %coeff4352 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 3
  store i128 21300661132716363, i128* %coeff4352, align 4
  %coeff4354 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 4
  store i128 21929049149954008, i128* %coeff4354, align 4
  %coeff4356 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 5
  store i128 23430044241153146, i128* %coeff4356, align 4
  %coeff4358 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4358, align 4
  %coeff4360 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 0
  store i128 0, i128* %coeff4360, align 4
  %coeff4362 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 1
  store i128 0, i128* %coeff4362, align 4
  %coeff4364 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 2
  store i128 0, i128* %coeff4364, align 4
  %coeff4366 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 3
  store i128 0, i128* %coeff4366, align 4
  %coeff4368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 4
  store i128 0, i128* %coeff4368, align 4
  %coeff4370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 5
  store i128 0, i128* %coeff4370, align 4
  %coeff4372 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4372, align 4
  %coeff4374 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 0
  store i128 35747322042231466, i128* %coeff4374, align 4
  %coeff4376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 1
  store i128 36025922209447795, i128* %coeff4376, align 4
  %coeff4378 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 2
  store i128 1084959616957103, i128* %coeff4378, align 4
  %coeff4380 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 3
  store i128 7925923977987733, i128* %coeff4380, align 4
  %coeff4382 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 4
  store i128 16551456537884751, i128* %coeff4382, align 4
  %coeff4384 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 5
  store i128 23443114579904617, i128* %coeff4384, align 4
  %coeff4386 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 0, i128 6
  store i128 1829881462546425, i128* %coeff4386, align 4
  %coeff4388 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 0
  store i128 0, i128* %coeff4388, align 4
  %coeff4390 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 1
  store i128 0, i128* %coeff4390, align 4
  %coeff4392 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 2
  store i128 0, i128* %coeff4392, align 4
  %coeff4394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 3
  store i128 0, i128* %coeff4394, align 4
  %coeff4396 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 4
  store i128 0, i128* %coeff4396, align 4
  %coeff4398 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 5
  store i128 0, i128* %coeff4398, align 4
  %coeff4400 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 3, i128 1, i128 6
  store i128 0, i128* %coeff4400, align 4
  %coeff4402 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 0
  store i128 562949953355774, i128* %coeff4402, align 4
  %coeff4404 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4404, align 4
  %coeff4406 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4406, align 4
  %coeff4408 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4408, align 4
  %coeff4410 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4410, align 4
  %coeff4412 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4412, align 4
  %coeff4414 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff4414, align 4
  %coeff4416 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4416, align 4
  %coeff4418 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4418, align 4
  %coeff4420 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4420, align 4
  %coeff4422 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4422, align 4
  %coeff4424 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4424, align 4
  %coeff4426 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4426, align 4
  %coeff4428 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4428, align 4
  %coeff4430 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 0
  store i128 562949953355775, i128* %coeff4430, align 4
  %coeff4432 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4432, align 4
  %coeff4434 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4434, align 4
  %coeff4436 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4436, align 4
  %coeff4438 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4438, align 4
  %coeff4440 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4440, align 4
  %coeff4442 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 0, i128 6
  store i128 0, i128* %coeff4442, align 4
  %coeff4444 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 0
  store i128 0, i128* %coeff4444, align 4
  %coeff4446 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 1
  store i128 0, i128* %coeff4446, align 4
  %coeff4448 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 2
  store i128 0, i128* %coeff4448, align 4
  %coeff4450 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 3
  store i128 0, i128* %coeff4450, align 4
  %coeff4452 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 4
  store i128 0, i128* %coeff4452, align 4
  %coeff4454 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 5
  store i128 0, i128* %coeff4454, align 4
  %coeff4456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 10, i128 5, i128 1, i128 6
  store i128 0, i128* %coeff4456, align 4
  %coeff4458 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 0
  store i128 1, i128* %coeff4458, align 4
  %coeff4460 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 1
  store i128 0, i128* %coeff4460, align 4
  %coeff4462 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 2
  store i128 0, i128* %coeff4462, align 4
  %coeff4464 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 3
  store i128 0, i128* %coeff4464, align 4
  %coeff4466 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 4
  store i128 0, i128* %coeff4466, align 4
  %coeff4468 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 5
  store i128 0, i128* %coeff4468, align 4
  %coeff4470 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 0, i128 6
  store i128 0, i128* %coeff4470, align 4
  %coeff4472 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 0
  store i128 0, i128* %coeff4472, align 4
  %coeff4474 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 1
  store i128 0, i128* %coeff4474, align 4
  %coeff4476 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 2
  store i128 0, i128* %coeff4476, align 4
  %coeff4478 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 3
  store i128 0, i128* %coeff4478, align 4
  %coeff4480 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 4
  store i128 0, i128* %coeff4480, align 4
  %coeff4482 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 5
  store i128 0, i128* %coeff4482, align 4
  %coeff4484 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 0, i128 1, i128 6
  store i128 0, i128* %coeff4484, align 4
  %coeff4486 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 0
  store i128 7031280223355158, i128* %coeff4486, align 4
  %coeff4488 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 1
  store i128 35145111776945462, i128* %coeff4488, align 4
  %coeff4490 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 2
  store i128 15263901815609576, i128* %coeff4490, align 4
  %coeff4492 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 3
  store i128 27123300247230202, i128* %coeff4492, align 4
  %coeff4494 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 4
  store i128 8449056334504512, i128* %coeff4494, align 4
  %coeff4496 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 5
  store i128 34652109665036566, i128* %coeff4496, align 4
  %coeff4498 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 0, i128 6
  store i128 400995163066007, i128* %coeff4498, align 4
  %coeff4500 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 0
  store i128 28716041818876309, i128* %coeff4500, align 4
  %coeff4502 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 1
  store i128 880810432502333, i128* %coeff4502, align 4
  %coeff4504 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 2
  store i128 21849854820311495, i128* %coeff4504, align 4
  %coeff4506 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 3
  store i128 16831420749721498, i128* %coeff4506, align 4
  %coeff4508 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 4
  store i128 8102400203380238, i128* %coeff4508, align 4
  %coeff4510 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 5
  store i128 24819801933832019, i128* %coeff4510, align 4
  %coeff4512 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 1, i128 1, i128 6
  store i128 1428886299480417, i128* %coeff4512, align 4
  %coeff4514 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 0
  store i128 0, i128* %coeff4514, align 4
  %coeff4516 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 1
  store i128 0, i128* %coeff4516, align 4
  %coeff4518 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 2
  store i128 0, i128* %coeff4518, align 4
  %coeff4520 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 3
  store i128 0, i128* %coeff4520, align 4
  %coeff4522 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 4
  store i128 0, i128* %coeff4522, align 4
  %coeff4524 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 5
  store i128 0, i128* %coeff4524, align 4
  %coeff4526 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 0, i128 6
  store i128 0, i128* %coeff4526, align 4
  %coeff4528 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 0
  store i128 562949953355774, i128* %coeff4528, align 4
  %coeff4530 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 1
  store i128 13553422473102428, i128* %coeff4530, align 4
  %coeff4532 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 2
  store i128 31415118892071007, i128* %coeff4532, align 4
  %coeff4534 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 3
  store i128 22654059864235337, i128* %coeff4534, align 4
  %coeff4536 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 4
  store i128 30651204406894710, i128* %coeff4536, align 4
  %coeff4538 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 5
  store i128 13070338751470, i128* %coeff4538, align 4
  %coeff4540 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 2, i128 1, i128 6
  store i128 0, i128* %coeff4540, align 4
  %coeff4542 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 0
  store i128 31097504852074146, i128* %coeff4542, align 4
  %coeff4544 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 1
  store i128 21847832108733923, i128* %coeff4544, align 4
  %coeff4546 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 2
  store i128 11215546103677201, i128* %coeff4546, align 4
  %coeff4548 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 3
  store i128 1564033941097252, i128* %coeff4548, align 4
  %coeff4550 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 4
  store i128 9796175148277139, i128* %coeff4550, align 4
  %coeff4552 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 5
  store i128 23041766052141807, i128* %coeff4552, align 4
  %coeff4554 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 0, i128 6
  store i128 1359550313685033, i128* %coeff4554, align 4
  %coeff4556 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 0
  store i128 31097504852074146, i128* %coeff4556, align 4
  %coeff4558 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 1
  store i128 21847832108733923, i128* %coeff4558, align 4
  %coeff4560 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 2
  store i128 11215546103677201, i128* %coeff4560, align 4
  %coeff4562 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 3
  store i128 1564033941097252, i128* %coeff4562, align 4
  %coeff4564 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 4
  store i128 9796175148277139, i128* %coeff4564, align 4
  %coeff4566 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 5
  store i128 23041766052141807, i128* %coeff4566, align 4
  %coeff4568 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 3, i128 1, i128 6
  store i128 1359550313685033, i128* %coeff4568, align 4
  %coeff4570 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 0
  store i128 562949953355775, i128* %coeff4570, align 4
  %coeff4572 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 1
  store i128 13553422473102428, i128* %coeff4572, align 4
  %coeff4574 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 2
  store i128 31415118892071007, i128* %coeff4574, align 4
  %coeff4576 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 3
  store i128 22654059864235337, i128* %coeff4576, align 4
  %coeff4578 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 4
  store i128 30651204406894710, i128* %coeff4578, align 4
  %coeff4580 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 5
  store i128 13070338751470, i128* %coeff4580, align 4
  %coeff4582 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 0, i128 6
  store i128 0, i128* %coeff4582, align 4
  %coeff4584 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 0
  store i128 0, i128* %coeff4584, align 4
  %coeff4586 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 1
  store i128 0, i128* %coeff4586, align 4
  %coeff4588 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 2
  store i128 0, i128* %coeff4588, align 4
  %coeff4590 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 3
  store i128 0, i128* %coeff4590, align 4
  %coeff4592 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 4
  store i128 0, i128* %coeff4592, align 4
  %coeff4594 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 5
  store i128 0, i128* %coeff4594, align 4
  %coeff4596 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 4, i128 1, i128 6
  store i128 0, i128* %coeff4596, align 4
  %coeff4598 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 0
  store i128 2099988056465336, i128* %coeff4598, align 4
  %coeff4600 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 1
  store i128 20964146866715418, i128* %coeff4600, align 4
  %coeff4602 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 2
  store i128 26479447919286778, i128* %coeff4602, align 4
  %coeff4604 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 3
  store i128 28687334188327454, i128* %coeff4604, align 4
  %coeff4606 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 4
  store i128 18245231482781651, i128* %coeff4606, align 4
  %coeff4608 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 5
  store i128 21665078698214405, i128* %coeff4608, align 4
  %coeff4610 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 0, i128 6
  store i128 1760545476751041, i128* %coeff4610, align 4
  %coeff4612 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 0
  store i128 33647333985766131, i128* %coeff4612, align 4
  %coeff4614 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 1
  store i128 15061775342732377, i128* %coeff4614, align 4
  %coeff4616 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 2
  store i128 10634308716634293, i128* %coeff4616, align 4
  %coeff4618 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 3
  store i128 15267386808624246, i128* %coeff4618, align 4
  %coeff4620 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 4
  store i128 34335022074067067, i128* %coeff4620, align 4
  %coeff4622 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 5
  store i128 1778035881690211, i128* %coeff4622, align 4
  %coeff4624 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 11, i128 5, i128 1, i128 6
  store i128 69335985795384, i128* %coeff4624, align 4
  br label %if.exit4625

if.false2603:                                     ; preds = %if.exit2601
  br label %if.exit4625

if.exit4625:                                      ; preds = %if.false2603, %if.true2602
  ret [256 x [256 x [256 x [256 x i128]]]]* %uniform_array
}

define [256 x [256 x [256 x i128]]]* @get_generator_G2(i128 %0, i128 %1) {
entry:
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 95420233661880, i128 1773856045391785, i128 5044075188989616, i128 23082975677810779, i128 22805092780977487, i128 23121359448368568, i128 161253150172098, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %g22 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0
  %2 = bitcast [256 x i128]* %g22 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array3 = alloca [256 x i128], align 8
  store [256 x i128] [i128 12522360964131710, i128 27624298323292107, i128 31369054948478259, i128 20553930357265165, i128 32921944760061193, i128 30416570139545860, i128 1398625365433447, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array3, align 4
  %g25 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1
  %4 = bitcast [256 x i128]* %g25 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array6 = alloca [256 x i128], align 8
  store [256 x i128] [i128 5440959206139905, i128 5515662923731907, i128 10491004233861355, i128 28691331721860307, i128 27955817036233384, i128 18631882631076677, i128 907600843284315, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array6, align 4
  %g28 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 0
  %6 = bitcast [256 x i128]* %g28 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array9 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11548582681213374, i128 7404909498155861, i128 12768329608264924, i128 12731371725497493, i128 11463081752430568, i128 7184576637437304, i128 424072857758157, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array9, align 4
  %g211 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1
  %8 = bitcast [256 x i128]* %g211 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define i128 @min(i128 %0, i128 %1) {
entry:
  %slt = icmp slt i128 %0, %1
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  ret i128 %0

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false
  ret i128 %1
}

define i128 @get_fp2_sgn0(i128 %0, [256 x [256 x i128]]* %1) {
entry:
  %z1 = call i128 @fn_intrinsic_inline_init()
  %sgn02 = call i128 @fn_intrinsic_inline_init()
  %sgn13 = call i128 @fn_intrinsic_inline_init()
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0, i128 0
  %a4 = load i128, i128* %array_getter, align 4
  %mod = srem i128 %a4, 2
  %array_getter6 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 1, i128 0
  %a7 = load i128, i128* %array_getter6, align 4
  %mod8 = srem i128 %a7, 2
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0
  %a11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a11, [256 x i128]* %spice_inline_array, align 4
  %call = call i128 @long_is_zero(i128 %0, [256 x i128]* %spice_inline_array)
  %and = and i128 %call, %mod8
  %or = or i128 %mod, %and
  ret i128 %or
}

define void @fn_template_init_iszero(%struct_template_circuit_iszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 0
  %iszero.in.read_input_inner = load i128, i128* %struct_getter, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %inv = call i128 @fn_intrinsic_inline_init()
  %ne = icmp ne i128 %iszero.in.read_input_inner, 0
  %sdiv = sdiv i128 1, %iszero.in.read_input_inner
  %inline_switch = call i128 @fn_intrinsic_inline_switch(i1 %ne, i128 %sdiv, i128 0)
  %iszero.inv.write_inter_inner = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 1
  store i128 %inline_switch, i128* %iszero.inv.write_inter_inner, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 1
  %iszero.inv.read_inter_inner = load i128, i128* %struct_getter3, align 4
  %neg = sub i128 0, %iszero.in.read_input_inner
  %mul = mul i128 %neg, %iszero.inv.read_inter_inner
  %add = add i128 %mul, 1
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %add, i1* @constraint.6)
  %iszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 2
  store i128 %add, i128* %iszero.out.write_output_inner, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 2
  %iszero.out.read_output_inner = load i128, i128* %struct_getter9, align 4
  %mul12 = mul i128 %iszero.in.read_input_inner, %iszero.out.read_output_inner
  call void @fn_intrinsic_add_constraint(i128 %mul12, i128 0, i1* @constraint.7)
  br label %exit

exit:                                             ; preds = %entry
  %iszero.inv.write_inter_inner14 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 1
  store i128 %iszero.inv.read_inter_inner, i128* %iszero.inv.write_inter_inner14, align 4
  %iszero.out.write_output_inner16 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %0, i32 0, i32 2
  store i128 %iszero.out.read_output_inner, i128* %iszero.out.write_output_inner16, align 4
  ret void
}

define %struct_template_circuit_iszero* @fn_template_build_iszero() {
entry:
  %struct_template_circuit_iszero = alloca %struct_template_circuit_iszero, align 8
  ret %struct_template_circuit_iszero* %struct_template_circuit_iszero
}

define void @fn_template_init_bigmultshortlongunequal(%struct_template_circuit_bigmultshortlongunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 0
  %bigmultshortlongunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 1
  %bigmultshortlongunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 2
  %bigmultshortlongunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 3
  %bigmultshortlongunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %i7 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %j10 = call i128 @fn_intrinsic_inline_init()
  %k213 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %prod_val15 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %prod_val15, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %add18 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub = sub i128 %add18, 1
  %slt = icmp slt i128 %add, %sub
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch45, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add47, %loop.latch45 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch38, %loop.body19
  %j.0 = phi i128 [ 0, %loop.body19 ], [ %add40, %loop.latch38 ]
  %add24 = add i128 %i.1, %j.0
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add24
  %prod_val25 = load i128, i128* %array_getter, align 4
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_inner, i128 0, i128 %i.1
  %a28 = load i128, i128* %array_getter27, align 4
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_inner, i128 0, i128 %j.0
  %b31 = load i128, i128* %array_getter30, align 4
  %mul = mul i128 %a28, %b31
  %add32 = add i128 %prod_val25, %mul
  %add36 = add i128 %i.1, %j.0
  %prod_val37 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add36
  store i128 %add32, i128* %prod_val37, align 4
  br label %loop.latch38

loop.latch38:                                     ; preds = %loop.body20
  %add40 = add i128 %j.0, 1
  %slt43 = icmp slt i128 %add40, %bigmultshortlongunequal.kb.read_arg_inner
  br i1 %slt43, label %loop.body20, label %loop.exit44

loop.exit44:                                      ; preds = %loop.latch38
  br label %loop.latch45

loop.latch45:                                     ; preds = %loop.exit44
  %add47 = add i128 %i.1, 1
  %slt50 = icmp slt i128 %add47, %bigmultshortlongunequal.ka.read_arg_inner
  br i1 %slt50, label %loop.body19, label %loop.exit51

loop.exit51:                                      ; preds = %loop.latch45
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch60, %loop.exit51
  %i.2 = phi i128 [ 0, %loop.exit51 ], [ %add62, %loop.latch60 ]
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  %prod_val56 = load i128, i128* %array_getter55, align 4
  %out59 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  store i128 %prod_val56, i128* %out59, align 4
  br label %loop.latch60

loop.latch60:                                     ; preds = %loop.body52
  %add62 = add i128 %i.2, 1
  %add66 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub67 = sub i128 %add66, 1
  %slt68 = icmp slt i128 %add62, %sub67
  br i1 %slt68, label %loop.body52, label %loop.exit69

loop.exit69:                                      ; preds = %loop.latch60
  %add72 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub73 = sub i128 %add72, 1
  %uniform_array74 = alloca [256 x [256 x i128]], align 8
  br label %loop.body75

loop.body75:                                      ; preds = %loop.latch91, %loop.exit69
  %i.3 = phi i128 [ 0, %loop.exit69 ], [ %add93, %loop.latch91 ]
  br label %loop.body76

loop.body76:                                      ; preds = %loop.latch84, %loop.body75
  %j.1 = phi i128 [ 0, %loop.body75 ], [ %add86, %loop.latch84 ]
  %pow79 = call i128 @fn_intrinsic_inline_powi(i128 %i.3, i128 %j.1)
  %pow83 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array74, i128 0, i128 %i.3, i128 %j.1
  store i128 %pow79, i128* %pow83, align 4
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.body76
  %add86 = add i128 %j.1, 1
  %slt89 = icmp slt i128 %add86, %sub73
  br i1 %slt89, label %loop.body76, label %loop.exit90

loop.exit90:                                      ; preds = %loop.latch84
  br label %loop.latch91

loop.latch91:                                     ; preds = %loop.exit90
  %add93 = add i128 %i.3, 1
  %slt96 = icmp slt i128 %add93, %sub73
  br i1 %slt96, label %loop.body75, label %loop.exit97

loop.exit97:                                      ; preds = %loop.latch91
  %uniform_array98 = alloca [256 x i128], align 8
  %uniform_array99 = alloca [256 x i128], align 8
  %uniform_array100 = alloca [256 x i128], align 8
  br label %loop.body101

loop.body101:                                     ; preds = %loop.latch192, %loop.exit97
  %i.4 = phi i128 [ 0, %loop.exit97 ], [ %add194, %loop.latch192 ]
  %out_poly104 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array100, i128 0, i128 %i.4
  store i128 0, i128* %out_poly104, align 4
  %a_poly107 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array98, i128 0, i128 %i.4
  store i128 0, i128* %a_poly107, align 4
  %b_poly110 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array99, i128 0, i128 %i.4
  store i128 0, i128* %b_poly110, align 4
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch130, %loop.body101
  %j.2 = phi i128 [ 0, %loop.body101 ], [ %add132, %loop.latch130 ]
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array100, i128 0, i128 %i.4
  %out_poly115 = load i128, i128* %array_getter114, align 4
  %array_getter118 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %j.2
  %out119 = load i128, i128* %array_getter118, align 4
  %array_getter123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array74, i128 0, i128 %i.4, i128 %j.2
  %pow124 = load i128, i128* %array_getter123, align 4
  %mul125 = mul i128 %out119, %pow124
  %add126 = add i128 %out_poly115, %mul125
  %out_poly129 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array100, i128 0, i128 %i.4
  store i128 %add126, i128* %out_poly129, align 4
  br label %loop.latch130

loop.latch130:                                    ; preds = %loop.body111
  %add132 = add i128 %j.2, 1
  %add136 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub137 = sub i128 %add136, 1
  %slt138 = icmp slt i128 %add132, %sub137
  br i1 %slt138, label %loop.body111, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch130
  br label %loop.body140

loop.body140:                                     ; preds = %loop.latch159, %loop.exit139
  %j.3 = phi i128 [ 0, %loop.exit139 ], [ %add161, %loop.latch159 ]
  %array_getter143 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array98, i128 0, i128 %i.4
  %a_poly144 = load i128, i128* %array_getter143, align 4
  %array_getter147 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_inner, i128 0, i128 %j.3
  %a148 = load i128, i128* %array_getter147, align 4
  %array_getter152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array74, i128 0, i128 %i.4, i128 %j.3
  %pow153 = load i128, i128* %array_getter152, align 4
  %mul154 = mul i128 %a148, %pow153
  %add155 = add i128 %a_poly144, %mul154
  %a_poly158 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array98, i128 0, i128 %i.4
  store i128 %add155, i128* %a_poly158, align 4
  br label %loop.latch159

loop.latch159:                                    ; preds = %loop.body140
  %add161 = add i128 %j.3, 1
  %slt164 = icmp slt i128 %add161, %bigmultshortlongunequal.ka.read_arg_inner
  br i1 %slt164, label %loop.body140, label %loop.exit165

loop.exit165:                                     ; preds = %loop.latch159
  br label %loop.body166

loop.body166:                                     ; preds = %loop.latch185, %loop.exit165
  %j.4 = phi i128 [ 0, %loop.exit165 ], [ %add187, %loop.latch185 ]
  %array_getter169 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array99, i128 0, i128 %i.4
  %b_poly170 = load i128, i128* %array_getter169, align 4
  %array_getter173 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_inner, i128 0, i128 %j.4
  %b174 = load i128, i128* %array_getter173, align 4
  %array_getter178 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array74, i128 0, i128 %i.4, i128 %j.4
  %pow179 = load i128, i128* %array_getter178, align 4
  %mul180 = mul i128 %b174, %pow179
  %add181 = add i128 %b_poly170, %mul180
  %b_poly184 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array99, i128 0, i128 %i.4
  store i128 %add181, i128* %b_poly184, align 4
  br label %loop.latch185

loop.latch185:                                    ; preds = %loop.body166
  %add187 = add i128 %j.4, 1
  %slt190 = icmp slt i128 %add187, %bigmultshortlongunequal.kb.read_arg_inner
  br i1 %slt190, label %loop.body166, label %loop.exit191

loop.exit191:                                     ; preds = %loop.latch185
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.exit191
  %add194 = add i128 %i.4, 1
  %add198 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub199 = sub i128 %add198, 1
  %slt200 = icmp slt i128 %add194, %sub199
  br i1 %slt200, label %loop.body101, label %loop.exit201

loop.exit201:                                     ; preds = %loop.latch192
  br label %loop.body202

loop.body202:                                     ; preds = %loop.latch216, %loop.exit201
  %i.5 = phi i128 [ 0, %loop.exit201 ], [ %add218, %loop.latch216 ]
  %array_getter205 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array100, i128 0, i128 %i.5
  %out_poly206 = load i128, i128* %array_getter205, align 4
  %array_getter209 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array98, i128 0, i128 %i.5
  %a_poly210 = load i128, i128* %array_getter209, align 4
  %array_getter213 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array99, i128 0, i128 %i.5
  %b_poly214 = load i128, i128* %array_getter213, align 4
  %mul215 = mul i128 %a_poly210, %b_poly214
  call void @fn_intrinsic_add_constraint(i128 %out_poly206, i128 %mul215, i1* @constraint.8)
  br label %loop.latch216

loop.latch216:                                    ; preds = %loop.body202
  %add218 = add i128 %i.5, 1
  %add222 = add i128 %bigmultshortlongunequal.ka.read_arg_inner, %bigmultshortlongunequal.kb.read_arg_inner
  %sub223 = sub i128 %add222, 1
  %slt224 = icmp slt i128 %add218, %sub223
  br i1 %slt224, label %loop.body202, label %loop.exit225

loop.exit225:                                     ; preds = %loop.latch216
  br label %exit

exit:                                             ; preds = %loop.exit225
  %bigmultshortlongunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %0, i32 0, i32 6
  store [256 x i128]* %out, [256 x i128]** %bigmultshortlongunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_bigmultshortlongunequal = alloca %struct_template_circuit_bigmultshortlongunequal, align 8
  %bigmultshortlongunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlongunequal.n.write_arg_inner, align 4
  %bigmultshortlongunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlongunequal.ka.write_arg_inner, align 4
  %bigmultshortlongunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlongunequal.kb.write_arg_inner, align 4
  %bigmultshortlongunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal, i32 0, i32 3
  store i128 %3, i128* %bigmultshortlongunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlongunequal* %struct_template_circuit_bigmultshortlongunequal
}

define void @fn_template_init_bigmultshortlong(%struct_template_circuit_bigmultshortlong* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 0
  %bigmultshortlong.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 1
  %bigmultshortlong.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 2
  %bigmultshortlong.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 3
  %bigmultshortlong.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 4
  %bigmultshortlong.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %k26 = call i128 @fn_intrinsic_inline_init()
  %a_idx8 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %j12 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch73, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add75, %loop.latch73 ]
  %prod_val15 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %prod_val15, align 4
  %slt = icmp slt i128 %i.0, %bigmultshortlong.k.read_arg_inner
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %loop.body17

if.false:                                         ; preds = %loop.body
  %sub37 = sub i128 %i.0, %bigmultshortlong.k.read_arg_inner
  %add38 = add i128 %sub37, 1
  br label %loop.body39

loop.body17:                                      ; preds = %loop.latch, %if.true
  %a_idx.0 = phi i128 [ 0, %if.true ], [ %add32, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val20 = load i128, i128* %array_getter, align 4
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_inner, i128 0, i128 %a_idx.0
  %a23 = load i128, i128* %array_getter22, align 4
  %sub = sub i128 %i.0, %a_idx.0
  %array_getter26 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_inner, i128 0, i128 %sub
  %b27 = load i128, i128* %array_getter26, align 4
  %mul = mul i128 %a23, %b27
  %add = add i128 %prod_val20, %mul
  %prod_val30 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add, i128* %prod_val30, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body17
  %add32 = add i128 %a_idx.0, 1
  %sle = icmp sle i128 %add32, %i.0
  br i1 %sle, label %loop.body17, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %if.exit

loop.body39:                                      ; preds = %loop.latch59, %if.false
  %a_idx.1 = phi i128 [ %add38, %if.false ], [ %add61, %loop.latch59 ]
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val43 = load i128, i128* %array_getter42, align 4
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_inner, i128 0, i128 %a_idx.1
  %a47 = load i128, i128* %array_getter46, align 4
  %sub51 = sub i128 %i.0, %a_idx.1
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_inner, i128 0, i128 %sub51
  %b53 = load i128, i128* %array_getter52, align 4
  %mul54 = mul i128 %a47, %b53
  %add55 = add i128 %prod_val43, %mul54
  %prod_val58 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add55, i128* %prod_val58, align 4
  br label %loop.latch59

loop.latch59:                                     ; preds = %loop.body39
  %add61 = add i128 %a_idx.1, 1
  %slt64 = icmp slt i128 %add61, %bigmultshortlong.k.read_arg_inner
  br i1 %slt64, label %loop.body39, label %loop.exit65

loop.exit65:                                      ; preds = %loop.latch59
  br label %if.exit

if.exit:                                          ; preds = %loop.exit65, %loop.exit
  %array_getter68 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val69 = load i128, i128* %array_getter68, align 4
  %out72 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %prod_val69, i128* %out72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %if.exit
  %add75 = add i128 %i.0, 1
  %mul78 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub79 = sub i128 %mul78, 1
  %slt80 = icmp slt i128 %add75, %sub79
  br i1 %slt80, label %loop.body, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch73
  %mul83 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub84 = sub i128 %mul83, 1
  %uniform_array85 = alloca [256 x [256 x i128]], align 8
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch102, %loop.exit81
  %i.1 = phi i128 [ 0, %loop.exit81 ], [ %add104, %loop.latch102 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch95, %loop.body86
  %j.0 = phi i128 [ 0, %loop.body86 ], [ %add97, %loop.latch95 ]
  %pow90 = call i128 @fn_intrinsic_inline_powi(i128 %i.1, i128 %j.0)
  %pow94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %i.1, i128 %j.0
  store i128 %pow90, i128* %pow94, align 4
  br label %loop.latch95

loop.latch95:                                     ; preds = %loop.body87
  %add97 = add i128 %j.0, 1
  %slt100 = icmp slt i128 %add97, %sub84
  br i1 %slt100, label %loop.body87, label %loop.exit101

loop.exit101:                                     ; preds = %loop.latch95
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.exit101
  %add104 = add i128 %i.1, 1
  %slt107 = icmp slt i128 %add104, %sub84
  br i1 %slt107, label %loop.body86, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch102
  %uniform_array109 = alloca [256 x i128], align 8
  %uniform_array110 = alloca [256 x i128], align 8
  %uniform_array111 = alloca [256 x i128], align 8
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch194, %loop.exit108
  %i.2 = phi i128 [ 0, %loop.exit108 ], [ %add196, %loop.latch194 ]
  %out_poly115 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array111, i128 0, i128 %i.2
  store i128 0, i128* %out_poly115, align 4
  %a_poly118 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array109, i128 0, i128 %i.2
  store i128 0, i128* %a_poly118, align 4
  %b_poly121 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array110, i128 0, i128 %i.2
  store i128 0, i128* %b_poly121, align 4
  br label %loop.body122

loop.body122:                                     ; preds = %loop.latch141, %loop.body112
  %j.1 = phi i128 [ 0, %loop.body112 ], [ %add143, %loop.latch141 ]
  %array_getter125 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array111, i128 0, i128 %i.2
  %out_poly126 = load i128, i128* %array_getter125, align 4
  %array_getter129 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %j.1
  %out130 = load i128, i128* %array_getter129, align 4
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %i.2, i128 %j.1
  %pow135 = load i128, i128* %array_getter134, align 4
  %mul136 = mul i128 %out130, %pow135
  %add137 = add i128 %out_poly126, %mul136
  %out_poly140 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array111, i128 0, i128 %i.2
  store i128 %add137, i128* %out_poly140, align 4
  br label %loop.latch141

loop.latch141:                                    ; preds = %loop.body122
  %add143 = add i128 %j.1, 1
  %mul146 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub147 = sub i128 %mul146, 1
  %slt148 = icmp slt i128 %add143, %sub147
  br i1 %slt148, label %loop.body122, label %loop.exit149

loop.exit149:                                     ; preds = %loop.latch141
  br label %loop.body150

loop.body150:                                     ; preds = %loop.latch187, %loop.exit149
  %j.2 = phi i128 [ 0, %loop.exit149 ], [ %add189, %loop.latch187 ]
  %array_getter153 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array109, i128 0, i128 %i.2
  %a_poly154 = load i128, i128* %array_getter153, align 4
  %array_getter157 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_inner, i128 0, i128 %j.2
  %a158 = load i128, i128* %array_getter157, align 4
  %array_getter162 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %i.2, i128 %j.2
  %pow163 = load i128, i128* %array_getter162, align 4
  %mul164 = mul i128 %a158, %pow163
  %add165 = add i128 %a_poly154, %mul164
  %a_poly168 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array109, i128 0, i128 %i.2
  store i128 %add165, i128* %a_poly168, align 4
  %array_getter171 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array110, i128 0, i128 %i.2
  %b_poly172 = load i128, i128* %array_getter171, align 4
  %array_getter175 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_inner, i128 0, i128 %j.2
  %b176 = load i128, i128* %array_getter175, align 4
  %array_getter180 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array85, i128 0, i128 %i.2, i128 %j.2
  %pow181 = load i128, i128* %array_getter180, align 4
  %mul182 = mul i128 %b176, %pow181
  %add183 = add i128 %b_poly172, %mul182
  %b_poly186 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array110, i128 0, i128 %i.2
  store i128 %add183, i128* %b_poly186, align 4
  br label %loop.latch187

loop.latch187:                                    ; preds = %loop.body150
  %add189 = add i128 %j.2, 1
  %slt192 = icmp slt i128 %add189, %bigmultshortlong.k.read_arg_inner
  br i1 %slt192, label %loop.body150, label %loop.exit193

loop.exit193:                                     ; preds = %loop.latch187
  br label %loop.latch194

loop.latch194:                                    ; preds = %loop.exit193
  %add196 = add i128 %i.2, 1
  %mul199 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub200 = sub i128 %mul199, 1
  %slt201 = icmp slt i128 %add196, %sub200
  br i1 %slt201, label %loop.body112, label %loop.exit202

loop.exit202:                                     ; preds = %loop.latch194
  br label %loop.body203

loop.body203:                                     ; preds = %loop.latch217, %loop.exit202
  %i.3 = phi i128 [ 0, %loop.exit202 ], [ %add219, %loop.latch217 ]
  %array_getter206 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array111, i128 0, i128 %i.3
  %out_poly207 = load i128, i128* %array_getter206, align 4
  %array_getter210 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array109, i128 0, i128 %i.3
  %a_poly211 = load i128, i128* %array_getter210, align 4
  %array_getter214 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array110, i128 0, i128 %i.3
  %b_poly215 = load i128, i128* %array_getter214, align 4
  %mul216 = mul i128 %a_poly211, %b_poly215
  call void @fn_intrinsic_add_constraint(i128 %out_poly207, i128 %mul216, i1* @constraint.9)
  br label %loop.latch217

loop.latch217:                                    ; preds = %loop.body203
  %add219 = add i128 %i.3, 1
  %mul222 = mul i128 2, %bigmultshortlong.k.read_arg_inner
  %sub223 = sub i128 %mul222, 1
  %slt224 = icmp slt i128 %add219, %sub223
  br i1 %slt224, label %loop.body203, label %loop.exit225

loop.exit225:                                     ; preds = %loop.latch217
  br label %exit

exit:                                             ; preds = %loop.exit225
  %bigmultshortlong.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %0, i32 0, i32 5
  store [256 x i128]* %out, [256 x i128]** %bigmultshortlong.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_bigmultshortlong = alloca %struct_template_circuit_bigmultshortlong, align 8
  %bigmultshortlong.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlong.n.write_arg_inner, align 4
  %bigmultshortlong.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlong.k.write_arg_inner, align 4
  %bigmultshortlong.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlong.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlong* %struct_template_circuit_bigmultshortlong
}

define [256 x [256 x i128]]* @signed_Fp2_mult_w6(i128 %0, [256 x [256 x i128]]* %1, i128 %2) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add25, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0, i128 %i.0
  %a4 = load i128, i128* %array_getter, align 4
  %mul = mul i128 %a4, %2
  %array_getter7 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 1, i128 %i.0
  %a8 = load i128, i128* %array_getter7, align 4
  %sub = sub i128 %mul, %a8
  %out10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.0
  store i128 %sub, i128* %out10, align 4
  %array_getter13 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 0, i128 %i.0
  %a14 = load i128, i128* %array_getter13, align 4
  %array_getter17 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %1, i128 0, i128 1, i128 %i.0
  %a18 = load i128, i128* %array_getter17, align 4
  %mul20 = mul i128 %a18, %2
  %add = add i128 %a14, %mul20
  %out23 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %i.0
  store i128 %add, i128* %out23, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add25 = add i128 %i.0, 1
  %slt = icmp slt i128 %add25, %0
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x i128]]* %uniform_array
}

define i128 @short_div_norm(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %qhat2 = call i128 @fn_intrinsic_inline_init()
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %1
  %a3 = load i128, i128* %array_getter, align 4
  %lshift = shl i128 1, %0
  %mul = mul i128 %a3, %lshift
  %sub = sub i128 %1, 1
  %array_getter6 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %sub
  %a7 = load i128, i128* %array_getter6, align 4
  %add = add i128 %mul, %a7
  %sub9 = sub i128 %1, 1
  %array_getter10 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub9
  %b11 = load i128, i128* %array_getter10, align 4
  %sdiv = sdiv i128 %add, %b11
  %lshift14 = shl i128 1, %0
  %sub15 = sub i128 %lshift14, 1
  %sgt = icmp sgt i128 %sdiv, %sub15
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %lshift17 = shl i128 1, %0
  %sub18 = sub i128 %lshift17, 1
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %qhat.0 = phi i128 [ %sub18, %if.true ], [ %sdiv, %if.false ]
  %call = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %qhat.0, [256 x i128]* %3)
  %add27 = add i128 %1, 1
  %call30 = call i128 @long_gt(i128 %0, i128 %add27, [256 x i128]* %call, [256 x i128]* %2)
  %eq = icmp eq i128 %call30, 1
  br i1 %eq, label %if.true23, label %if.false24

if.true23:                                        ; preds = %if.exit
  %add33 = add i128 %1, 1
  %call36 = call [256 x i128]* @long_sub(i128 %0, i128 %add33, [256 x i128]* %call, [256 x i128]* %3)
  %add41 = add i128 %1, 1
  %call44 = call i128 @long_gt(i128 %0, i128 %add41, [256 x i128]* %call36, [256 x i128]* %2)
  %eq45 = icmp eq i128 %call44, 1
  br i1 %eq45, label %if.true37, label %if.false38

if.false24:                                       ; preds = %if.exit
  ret i128 %qhat.0

if.true37:                                        ; preds = %if.true23
  %sub47 = sub i128 %qhat.0, 2
  ret i128 %sub47

if.false38:                                       ; preds = %if.true23
  %sub49 = sub i128 %qhat.0, 1
  ret i128 %sub49
}

define void @fn_template_init_num2bits(%struct_template_circuit_num2bits* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %0, i32 0, i32 0
  %num2bits.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %0, i32 0, i32 1
  %num2bits.in.read_input_inner = load i128, i128* %struct_getter1, align 4
  %e22 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i3 = call i128 @fn_intrinsic_inline_init()
  %lc14 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %e2.0 = phi i128 [ 1, %entry ], [ %add24, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add26, %loop.latch ]
  %lc1.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %rshift = lshr i128 %num2bits.in.read_input_inner, %i.0
  %and = and i128 %rshift, 1
  %out7 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %and, i128* %out7, align 4
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out10 = load i128, i128* %array_getter, align 4
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out14 = load i128, i128* %array_getter13, align 4
  %sub = sub i128 %out14, 1
  %mul = mul i128 %out10, %sub
  call void @fn_intrinsic_add_constraint(i128 %mul, i128 0, i1* @constraint.10)
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out19 = load i128, i128* %array_getter18, align 4
  %mul21 = mul i128 %out19, %e2.0
  %add = add i128 %lc1.0, %mul21
  %add24 = add i128 %e2.0, %e2.0
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add26 = add i128 %i.0, 1
  %slt = icmp slt i128 %add26, %num2bits.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  call void @fn_intrinsic_add_constraint(i128 %add, i128 %num2bits.in.read_input_inner, i1* @constraint.11)
  br label %exit

exit:                                             ; preds = %loop.exit
  %num2bits.out.write_output_inner = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %0, i32 0, i32 2
  store [256 x i128]* %out, [256 x i128]** %num2bits.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %0) {
entry:
  %struct_template_circuit_num2bits = alloca %struct_template_circuit_num2bits, align 8
  %num2bits.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %struct_template_circuit_num2bits, i32 0, i32 0
  store i128 %0, i128* %num2bits.n.write_arg_inner, align 4
  ret %struct_template_circuit_num2bits* %struct_template_circuit_num2bits
}

define void @fn_template_init_signedfp2multiplynocarryunequal(%struct_template_circuit_signedfp2multiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 0
  %signedfp2multiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 1
  %signedfp2multiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 2
  %signedfp2multiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 3
  %signedfp2multiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %l6 = call i128 @fn_intrinsic_inline_init()
  %ab7 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  %j8 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i9 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch75, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add77, %loop.latch75 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch69, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add71, %loop.latch69 ]
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp2multiplynocarryunequal.n.read_arg_inner, i128 %signedfp2multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp2multiplynocarryunequal.kb.read_arg_inner, i128 %signedfp2multiplynocarryunequal.m_out.read_arg_inner)
  %ab13 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call, %struct_template_circuit_bigmultshortlongunequal** %ab13, align 8
  br label %loop.body14

loop.body14:                                      ; preds = %loop.latch, %loop.body10
  %l.0 = phi i128 [ 0, %loop.body10 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_inner, i128 0, i128 %i.0, i128 %l.0
  %a17 = load i128, i128* %array_getter, align 4
  %array_getter21 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 %i.0, i128 %j.0
  %ab22 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter21, align 8
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab22, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %l.0
  %ab26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab26, i128 %a17, i1* @constraint.12)
  %array_getter30 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 %i.0, i128 %j.0
  %ab31 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter30, align 8
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab31, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter33 = load [256 x i128]*, [256 x i128]** %struct_getter32, align 8
  %ab35 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter33, i128 0, i128 %l.0
  store i128 %a17, i128* %ab35, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body14
  %add = add i128 %l.0, 1
  %slt = icmp slt i128 %add, %signedfp2multiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body14, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch62, %loop.exit
  %l.1 = phi i128 [ 0, %loop.exit ], [ %add64, %loop.latch62 ]
  %array_getter42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_inner, i128 0, i128 %j.0, i128 %l.1
  %b43 = load i128, i128* %array_getter42, align 4
  %array_getter47 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 %i.0, i128 %j.0
  %ab48 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab48, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %l.1
  %ab52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab52, i128 %b43, i1* @constraint.13)
  %array_getter56 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 %i.0, i128 %j.0
  %ab57 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab57, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %ab61 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter59, i128 0, i128 %l.1
  store i128 %b43, i128* %ab61, align 4
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.body39
  %add64 = add i128 %l.1, 1
  %slt67 = icmp slt i128 %add64, %signedfp2multiplynocarryunequal.kb.read_arg_inner
  br i1 %slt67, label %loop.body39, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch62
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.exit68
  %add71 = add i128 %j.0, 1
  %slt73 = icmp slt i128 %add71, 2
  br i1 %slt73, label %loop.body10, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch69
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.exit74
  %add77 = add i128 %i.0, 1
  %slt79 = icmp slt i128 %add77, 2
  br i1 %slt79, label %loop.body, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch75
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch128, %loop.exit80
  %j.1 = phi i128 [ 0, %loop.exit80 ], [ %add130, %loop.latch128 ]
  %array_getter83 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 0, i128 0
  %ab84 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter83, align 8
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab84, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter85, align 8
  %array_getter87 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %j.1
  %ab88 = load i128, i128* %array_getter87, align 4
  %array_getter90 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 1, i128 1
  %ab91 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter90, align 8
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab91, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter93 = load [256 x i128]*, [256 x i128]** %struct_getter92, align 8
  %array_getter95 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter93, i128 0, i128 %j.1
  %ab96 = load i128, i128* %array_getter95, align 4
  %sub = sub i128 %ab88, %ab96
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %j.1
  %out100 = load i128, i128* %array_getter99, align 4
  call void @fn_intrinsic_add_constraint(i128 %out100, i128 %sub, i1* @constraint.14)
  %out103 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %j.1
  store i128 %sub, i128* %out103, align 4
  %array_getter105 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 0, i128 1
  %ab106 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter105, align 8
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab106, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter108 = load [256 x i128]*, [256 x i128]** %struct_getter107, align 8
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter108, i128 0, i128 %j.1
  %ab111 = load i128, i128* %array_getter110, align 4
  %array_getter113 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab7, i128 0, i128 1, i128 0
  %ab114 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter113, align 8
  %struct_getter115 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab114, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter116 = load [256 x i128]*, [256 x i128]** %struct_getter115, align 8
  %array_getter118 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter116, i128 0, i128 %j.1
  %ab119 = load i128, i128* %array_getter118, align 4
  %add120 = add i128 %ab111, %ab119
  %array_getter123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %j.1
  %out124 = load i128, i128* %array_getter123, align 4
  call void @fn_intrinsic_add_constraint(i128 %out124, i128 %add120, i1* @constraint.15)
  %out127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %j.1
  store i128 %add120, i128* %out127, align 4
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.body81
  %add130 = add i128 %j.1, 1
  %add134 = add i128 %signedfp2multiplynocarryunequal.ka.read_arg_inner, %signedfp2multiplynocarryunequal.kb.read_arg_inner
  %sub135 = sub i128 %add134, 1
  %slt136 = icmp slt i128 %add130, %sub135
  br i1 %slt136, label %loop.body81, label %loop.exit137

loop.exit137:                                     ; preds = %loop.latch128
  br label %exit

exit:                                             ; preds = %loop.exit137
  %signedfp2multiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp2multiplynocarryunequal = alloca %struct_template_circuit_signedfp2multiplynocarryunequal, align 8
  %signedfp2multiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp2multiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp2multiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp2multiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp2multiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp2multiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarryunequal* %struct_template_circuit_signedfp2multiplynocarryunequal
}

define i128 @get_BLS12_381_parameter() {
entry:
  ret i128 15132376222941642752
}

define void @fn_template_init_modsum(%struct_template_circuit_modsum* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 0
  %modsum.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 1
  %modsum.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 2
  %modsum.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %carry = call i128 @fn_intrinsic_inline_init()
  %sum = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %modsum.n.read_arg_inner, 1
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add)
  %add3 = add i128 %modsum.a.read_input_inner, %modsum.b.read_input_inner
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter5, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %add3, i1* @constraint.16)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %add3, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %modsum.n.read_arg_inner
  %n2b9 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry, i128 %n2b9, i1* @constraint.17)
  %modsum.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 4
  store i128 %n2b9, i128* %modsum.carry.write_output_inner, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 4
  %modsum.carry.read_output_inner = load i128, i128* %struct_getter13, align 4
  %add16 = add i128 %modsum.a.read_input_inner, %modsum.b.read_input_inner
  %lshift = shl i128 1, %modsum.n.read_arg_inner
  %mul = mul i128 %modsum.carry.read_output_inner, %lshift
  %sub = sub i128 %add16, %mul
  call void @fn_intrinsic_add_constraint(i128 %sum, i128 %sub, i1* @constraint.18)
  %modsum.sum.write_output_inner = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 3
  store i128 %sub, i128* %modsum.sum.write_output_inner, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 3
  %modsum.sum.read_output_inner = load i128, i128* %struct_getter22, align 4
  br label %exit

exit:                                             ; preds = %entry
  %modsum.sum.write_output_inner24 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 3
  store i128 %modsum.sum.read_output_inner, i128* %modsum.sum.write_output_inner24, align 4
  %modsum.carry.write_output_inner26 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %0, i32 0, i32 4
  store i128 %modsum.carry.read_output_inner, i128* %modsum.carry.write_output_inner26, align 4
  ret void
}

define %struct_template_circuit_modsum* @fn_template_build_modsum(i128 %0) {
entry:
  %struct_template_circuit_modsum = alloca %struct_template_circuit_modsum, align 8
  %modsum.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %struct_template_circuit_modsum, i32 0, i32 0
  store i128 %0, i128* %modsum.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsum* %struct_template_circuit_modsum
}

define void @fn_template_init_split(%struct_template_circuit_split* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 0
  %split.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 1
  %split.m.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 2
  %split.in.read_input_inner = load i128, i128* %struct_getter2, align 4
  %big = call i128 @fn_intrinsic_inline_init()
  %small = call i128 @fn_intrinsic_inline_init()
  %lshift = shl i128 1, %split.n.read_arg_inner
  %mod = srem i128 %split.in.read_input_inner, %lshift
  %split.small.write_output_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 3
  store i128 %mod, i128* %split.small.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 3
  %split.small.read_output_inner = load i128, i128* %struct_getter4, align 4
  %lshift7 = shl i128 1, %split.n.read_arg_inner
  %sdiv = sdiv i128 %split.in.read_input_inner, %lshift7
  %split.big.write_output_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 4
  store i128 %sdiv, i128* %split.big.write_output_inner, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 4
  %split.big.read_output_inner = load i128, i128* %struct_getter10, align 4
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %split.n.read_arg_inner)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter14, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %split.small.read_output_inner, i1* @constraint.19)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %split.small.read_output_inner, i128* %num2bits.in.write_input_outter, align 4
  %call16 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %split.m.read_arg_inner)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call16, i32 0, i32 1
  %num2bits.in.read_input_outter20 = load i128, i128* %struct_getter19, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter20, i128 %split.big.read_output_inner, i1* @constraint.20)
  %num2bits.in.write_input_outter22 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call16, i32 0, i32 1
  store i128 %split.big.read_output_inner, i128* %num2bits.in.write_input_outter22, align 4
  %lshift27 = shl i128 1, %split.n.read_arg_inner
  %mul = mul i128 %split.big.read_output_inner, %lshift27
  %add = add i128 %split.small.read_output_inner, %mul
  call void @fn_intrinsic_add_constraint(i128 %split.in.read_input_inner, i128 %add, i1* @constraint.21)
  br label %exit

exit:                                             ; preds = %entry
  %split.small.write_output_inner29 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 3
  store i128 %split.small.read_output_inner, i128* %split.small.write_output_inner29, align 4
  %split.big.write_output_inner31 = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %0, i32 0, i32 4
  store i128 %split.big.read_output_inner, i128* %split.big.write_output_inner31, align 4
  ret void
}

define %struct_template_circuit_split* @fn_template_build_split(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_split = alloca %struct_template_circuit_split, align 8
  %split.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %struct_template_circuit_split, i32 0, i32 0
  store i128 %0, i128* %split.n.write_arg_inner, align 4
  %split.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_split, %struct_template_circuit_split* %struct_template_circuit_split, i32 0, i32 1
  store i128 %1, i128* %split.m.write_arg_inner, align 4
  ret %struct_template_circuit_split* %struct_template_circuit_split
}

define void @fn_template_init_bigiszero(%struct_template_circuit_bigiszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 0
  %bigiszero.k.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 1
  %bigiszero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %total2 = call i128 @fn_intrinsic_inline_init()
  %i3 = call i128 @fn_intrinsic_inline_init()
  %out = call i128 @fn_intrinsic_inline_init()
  %isZeros4 = alloca [256 x %struct_template_circuit_iszero*], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %total.0 = phi i128 [ %bigiszero.k.read_arg_inner, %entry ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %isZeros6 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %isZeros4, i128 0, i128 %i.0
  store %struct_template_circuit_iszero* %call, %struct_template_circuit_iszero** %isZeros6, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_inner, i128 0, i128 %i.0
  %in8 = load i128, i128* %array_getter, align 4
  %array_getter11 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %isZeros4, i128 0, i128 %i.0
  %isZeros12 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter11, align 8
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros12, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter13, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %in8, i1* @constraint.22)
  %array_getter16 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %isZeros4, i128 0, i128 %i.0
  %isZeros17 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter16, align 8
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros17, i32 0, i32 0
  store i128 %in8, i128* %iszero.in.write_input_outter, align 4
  %array_getter21 = getelementptr inbounds [256 x %struct_template_circuit_iszero*], [256 x %struct_template_circuit_iszero*]* %isZeros4, i128 0, i128 %i.0
  %isZeros22 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter21, align 8
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros22, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  %sub = sub i128 %total.0, %iszero.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigiszero.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call27 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call27, i32 0, i32 0
  %iszero.in.read_input_outter31 = load i128, i128* %struct_getter30, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter31, i128 %sub, i1* @constraint.23)
  %iszero.in.write_input_outter33 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call27, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter33, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call27, i32 0, i32 2
  %iszero.out.read_output_outter36 = load i128, i128* %struct_getter35, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %iszero.out.read_output_outter36, i1* @constraint.24)
  %bigiszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 2
  store i128 %iszero.out.read_output_outter36, i128* %bigiszero.out.write_output_inner, align 4
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 2
  %bigiszero.out.read_output_inner = load i128, i128* %struct_getter40, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %bigiszero.out.write_output_inner42 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %0, i32 0, i32 2
  store i128 %bigiszero.out.read_output_inner, i128* %bigiszero.out.write_output_inner42, align 4
  ret void
}

define %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %0) {
entry:
  %struct_template_circuit_bigiszero = alloca %struct_template_circuit_bigiszero, align 8
  %bigiszero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %struct_template_circuit_bigiszero, i32 0, i32 0
  store i128 %0, i128* %bigiszero.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigiszero* %struct_template_circuit_bigiszero
}

define void @fn_template_init_not(%struct_template_circuit_not* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 0
  %not.in.read_input_inner = load i128, i128* %struct_getter, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %add = add i128 1, %not.in.read_input_inner
  %mul = mul i128 2, %not.in.read_input_inner
  %sub = sub i128 %add, %mul
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.25)
  %not.out.write_output_inner = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 1
  store i128 %sub, i128* %not.out.write_output_inner, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 1
  %not.out.read_output_inner = load i128, i128* %struct_getter4, align 4
  br label %exit

exit:                                             ; preds = %entry
  %not.out.write_output_inner6 = getelementptr inbounds %struct_template_circuit_not, %struct_template_circuit_not* %0, i32 0, i32 1
  store i128 %not.out.read_output_inner, i128* %not.out.write_output_inner6, align 4
  ret void
}

define %struct_template_circuit_not* @fn_template_build_not() {
entry:
  %struct_template_circuit_not = alloca %struct_template_circuit_not, align 8
  ret %struct_template_circuit_not* %struct_template_circuit_not
}

define void @fn_template_init_binsum(%struct_template_circuit_binsum* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 0
  %binsum.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 1
  %binsum.ops.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 2
  %binsum.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter2, align 8
  %k3 = call i128 @fn_intrinsic_inline_init()
  %lin4 = call i128 @fn_intrinsic_inline_init()
  %e25 = call i128 @fn_intrinsic_inline_init()
  %j6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %lout7 = call i128 @fn_intrinsic_inline_init()
  %nout8 = call i128 @fn_intrinsic_inline_init()
  %pow = call i128 @fn_intrinsic_inline_powi(i128 2, i128 %binsum.n.read_arg_inner)
  %sub = sub i128 %pow, 1
  %mul = mul i128 %sub, %binsum.ops.read_arg_inner
  %call = call i128 @nbits(i128 %mul)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch23, %entry
  %lin.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch23 ]
  %k.0 = phi i128 [ 0, %entry ], [ %add25, %loop.latch23 ]
  %e2.0 = phi i128 [ 1, %entry ], [ %add22, %loop.latch23 ]
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch, %loop.body
  %lin.1 = phi i128 [ %lin.0, %loop.body ], [ %add, %loop.latch ]
  %j.0 = phi i128 [ 0, %loop.body ], [ %add17, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %binsum.in.read_input_inner, i128 0, i128 %j.0, i128 %k.0
  %in13 = load i128, i128* %array_getter, align 4
  %mul15 = mul i128 %in13, %e2.0
  %add = add i128 %lin.1, %mul15
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body9
  %add17 = add i128 %j.0, 1
  %slt = icmp slt i128 %add17, %binsum.ops.read_arg_inner
  br i1 %slt, label %loop.body9, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add22 = add i128 %e2.0, %e2.0
  br label %loop.latch23

loop.latch23:                                     ; preds = %loop.exit
  %add25 = add i128 %k.0, 1
  %slt28 = icmp slt i128 %add25, %binsum.n.read_arg_inner
  br i1 %slt28, label %loop.body, label %loop.exit29

loop.exit29:                                      ; preds = %loop.latch23
  br label %loop.body30

loop.body30:                                      ; preds = %loop.latch56, %loop.exit29
  %k.1 = phi i128 [ 0, %loop.exit29 ], [ %add58, %loop.latch56 ]
  %e2.1 = phi i128 [ 1, %loop.exit29 ], [ %add55, %loop.latch56 ]
  %lout.0 = phi i128 [ 0, %loop.exit29 ], [ %add52, %loop.latch56 ]
  %rshift = lshr i128 %add, %k.1
  %and = and i128 %rshift, 1
  %out34 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %k.1
  store i128 %and, i128* %out34, align 4
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %k.1
  %out38 = load i128, i128* %array_getter37, align 4
  %array_getter41 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %k.1
  %out42 = load i128, i128* %array_getter41, align 4
  %sub43 = sub i128 %out42, 1
  %mul44 = mul i128 %out38, %sub43
  call void @fn_intrinsic_add_constraint(i128 %mul44, i128 0, i1* @constraint.26)
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %k.1
  %out49 = load i128, i128* %array_getter48, align 4
  %mul51 = mul i128 %out49, %e2.1
  %add52 = add i128 %lout.0, %mul51
  %add55 = add i128 %e2.1, %e2.1
  br label %loop.latch56

loop.latch56:                                     ; preds = %loop.body30
  %add58 = add i128 %k.1, 1
  %slt61 = icmp slt i128 %add58, %call
  br i1 %slt61, label %loop.body30, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch56
  call void @fn_intrinsic_add_constraint(i128 %add, i128 %add52, i1* @constraint.27)
  br label %exit

exit:                                             ; preds = %loop.exit62
  %binsum.out.write_output_inner = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %0, i32 0, i32 3
  store [256 x i128]* %out, [256 x i128]** %binsum.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_binsum* @fn_template_build_binsum(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_binsum = alloca %struct_template_circuit_binsum, align 8
  %binsum.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %struct_template_circuit_binsum, i32 0, i32 0
  store i128 %0, i128* %binsum.n.write_arg_inner, align 4
  %binsum.ops.write_arg_inner = getelementptr inbounds %struct_template_circuit_binsum, %struct_template_circuit_binsum* %struct_template_circuit_binsum, i32 0, i32 1
  store i128 %1, i128* %binsum.ops.write_arg_inner, align 4
  ret %struct_template_circuit_binsum* %struct_template_circuit_binsum
}

define void @fn_template_init_bigmultshortlong2dunequal(%struct_template_circuit_bigmultshortlong2dunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 0
  %bigmultshortlong2dunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 1
  %bigmultshortlong2dunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 2
  %bigmultshortlong2dunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 3
  %bigmultshortlong2dunequal.la.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 4
  %bigmultshortlong2dunequal.lb.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %k28 = call i128 @fn_intrinsic_inline_init()
  %deg110 = call i128 @fn_intrinsic_inline_init()
  %i111 = call i128 @fn_intrinsic_inline_init()
  %j12 = call i128 @fn_intrinsic_inline_init()
  %i14 = call i128 @fn_intrinsic_inline_init()
  %deg215 = call i128 @fn_intrinsic_inline_init()
  %i217 = call i128 @fn_intrinsic_inline_init()
  %j118 = call i128 @fn_intrinsic_inline_init()
  %j220 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch28, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add30, %loop.latch28 ]
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %prod_val24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.0, i128 %j.0
  store i128 0, i128* %prod_val24, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body21
  %add = add i128 %j.0, 1
  %add27 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub = sub i128 %add27, 1
  %slt = icmp slt i128 %add, %sub
  br i1 %slt, label %loop.body21, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch28

loop.latch28:                                     ; preds = %loop.exit
  %add30 = add i128 %i.0, 1
  %add32 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub33 = sub i128 %add32, 1
  %slt34 = icmp slt i128 %add30, %sub33
  br i1 %slt34, label %loop.body, label %loop.exit35

loop.exit35:                                      ; preds = %loop.latch28
  br label %loop.body36

loop.body36:                                      ; preds = %loop.latch84, %loop.exit35
  %i1.0 = phi i128 [ 0, %loop.exit35 ], [ %add86, %loop.latch84 ]
  br label %loop.body37

loop.body37:                                      ; preds = %loop.latch77, %loop.body36
  %i2.0 = phi i128 [ 0, %loop.body36 ], [ %add79, %loop.latch77 ]
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch70, %loop.body37
  %j1.0 = phi i128 [ 0, %loop.body37 ], [ %add72, %loop.latch70 ]
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch63, %loop.body38
  %j2.0 = phi i128 [ 0, %loop.body38 ], [ %add65, %loop.latch63 ]
  %add42 = add i128 %i1.0, %i2.0
  %add45 = add i128 %j1.0, %j2.0
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add42, i128 %add45
  %prod_val49 = load i128, i128* %array_getter, align 4
  %array_getter52 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_inner, i128 0, i128 %i1.0, i128 %j1.0
  %a53 = load i128, i128* %array_getter52, align 4
  %array_getter56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_inner, i128 0, i128 %i2.0, i128 %j2.0
  %b57 = load i128, i128* %array_getter56, align 4
  %mul = mul i128 %a53, %b57
  %add58 = add i128 %prod_val49, %mul
  %prod_val62 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add42, i128 %add45
  store i128 %add58, i128* %prod_val62, align 4
  br label %loop.latch63

loop.latch63:                                     ; preds = %loop.body39
  %add65 = add i128 %j2.0, 1
  %slt68 = icmp slt i128 %add65, %bigmultshortlong2dunequal.kb.read_arg_inner
  br i1 %slt68, label %loop.body39, label %loop.exit69

loop.exit69:                                      ; preds = %loop.latch63
  br label %loop.latch70

loop.latch70:                                     ; preds = %loop.exit69
  %add72 = add i128 %j1.0, 1
  %slt75 = icmp slt i128 %add72, %bigmultshortlong2dunequal.ka.read_arg_inner
  br i1 %slt75, label %loop.body38, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch70
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.exit76
  %add79 = add i128 %i2.0, 1
  %slt82 = icmp slt i128 %add79, %bigmultshortlong2dunequal.lb.read_arg_inner
  br i1 %slt82, label %loop.body37, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch77
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.exit83
  %add86 = add i128 %i1.0, 1
  %slt89 = icmp slt i128 %add86, %bigmultshortlong2dunequal.la.read_arg_inner
  br i1 %slt89, label %loop.body36, label %loop.exit90

loop.exit90:                                      ; preds = %loop.latch84
  br label %loop.body91

loop.body91:                                      ; preds = %loop.latch112, %loop.exit90
  %i.1 = phi i128 [ 0, %loop.exit90 ], [ %add114, %loop.latch112 ]
  br label %loop.body92

loop.body92:                                      ; preds = %loop.latch102, %loop.body91
  %j.1 = phi i128 [ 0, %loop.body91 ], [ %add104, %loop.latch102 ]
  %array_getter96 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.1, i128 %j.1
  %prod_val97 = load i128, i128* %array_getter96, align 4
  %out101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  store i128 %prod_val97, i128* %out101, align 4
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.body92
  %add104 = add i128 %j.1, 1
  %add108 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub109 = sub i128 %add108, 1
  %slt110 = icmp slt i128 %add104, %sub109
  br i1 %slt110, label %loop.body92, label %loop.exit111

loop.exit111:                                     ; preds = %loop.latch102
  br label %loop.latch112

loop.latch112:                                    ; preds = %loop.exit111
  %add114 = add i128 %i.1, 1
  %add118 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub119 = sub i128 %add118, 1
  %slt120 = icmp slt i128 %add114, %sub119
  br i1 %slt120, label %loop.body91, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch112
  %add124 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub125 = sub i128 %add124, 1
  %add128 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub129 = sub i128 %add128, 1
  %sgt = icmp sgt i128 %sub125, %sub129
  %add132 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub133 = sub i128 %add132, 1
  %add136 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub137 = sub i128 %add136, 1
  %inline_switch = call i128 @fn_intrinsic_inline_switch(i1 %sgt, i128 %sub133, i128 %sub137)
  %uniform_array138 = alloca [256 x [256 x i128]], align 8
  br label %loop.body139

loop.body139:                                     ; preds = %loop.latch156, %loop.exit121
  %i.2 = phi i128 [ 0, %loop.exit121 ], [ %add158, %loop.latch156 ]
  br label %loop.body140

loop.body140:                                     ; preds = %loop.latch148, %loop.body139
  %j.2 = phi i128 [ 0, %loop.body139 ], [ %add150, %loop.latch148 ]
  %pow143 = call i128 @fn_intrinsic_inline_powi(i128 %i.2, i128 %j.2)
  %pow147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %i.2, i128 %j.2
  store i128 %pow143, i128* %pow147, align 4
  br label %loop.latch148

loop.latch148:                                    ; preds = %loop.body140
  %add150 = add i128 %j.2, 1
  %slt154 = icmp slt i128 %add150, %inline_switch
  br i1 %slt154, label %loop.body140, label %loop.exit155

loop.exit155:                                     ; preds = %loop.latch148
  br label %loop.latch156

loop.latch156:                                    ; preds = %loop.exit155
  %add158 = add i128 %i.2, 1
  %slt161 = icmp slt i128 %add158, %inline_switch
  br i1 %slt161, label %loop.body139, label %loop.exit162

loop.exit162:                                     ; preds = %loop.latch156
  %uniform_array163 = alloca [256 x [256 x i128]], align 8
  %uniform_array164 = alloca [256 x [256 x i128]], align 8
  %uniform_array165 = alloca [256 x [256 x i128]], align 8
  br label %loop.body166

loop.body166:                                     ; preds = %loop.latch318, %loop.exit162
  %i.3 = phi i128 [ 0, %loop.exit162 ], [ %add320, %loop.latch318 ]
  br label %loop.body167

loop.body167:                                     ; preds = %loop.latch308, %loop.body166
  %j.3 = phi i128 [ 0, %loop.body166 ], [ %add310, %loop.latch308 ]
  %a_poly171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array163, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %a_poly171, align 4
  %b_poly175 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array164, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %b_poly175, align 4
  %out_poly179 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array165, i128 0, i128 %i.3, i128 %j.3
  store i128 0, i128* %out_poly179, align 4
  br label %loop.body180

loop.body180:                                     ; preds = %loop.latch298, %loop.body167
  %deg1.0 = phi i128 [ 0, %loop.body167 ], [ %add300, %loop.latch298 ]
  %slt183 = icmp slt i128 %deg1.0, %bigmultshortlong2dunequal.la.read_arg_inner
  br i1 %slt183, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body180
  br label %loop.body184

if.false:                                         ; preds = %loop.body180
  br label %if.exit

loop.body184:                                     ; preds = %loop.latch212, %if.true
  %deg2.0 = phi i128 [ 0, %if.true ], [ %add214, %loop.latch212 ]
  %array_getter188 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array163, i128 0, i128 %i.3, i128 %j.3
  %a_poly189 = load i128, i128* %array_getter188, align 4
  %array_getter193 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_inner, i128 0, i128 %deg1.0, i128 %deg2.0
  %a194 = load i128, i128* %array_getter193, align 4
  %array_getter198 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %i.3, i128 %deg1.0
  %pow199 = load i128, i128* %array_getter198, align 4
  %mul200 = mul i128 %a194, %pow199
  %array_getter204 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %j.3, i128 %deg2.0
  %pow205 = load i128, i128* %array_getter204, align 4
  %mul206 = mul i128 %mul200, %pow205
  %add207 = add i128 %a_poly189, %mul206
  %a_poly211 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array163, i128 0, i128 %i.3, i128 %j.3
  store i128 %add207, i128* %a_poly211, align 4
  br label %loop.latch212

loop.latch212:                                    ; preds = %loop.body184
  %add214 = add i128 %deg2.0, 1
  %slt217 = icmp slt i128 %add214, %bigmultshortlong2dunequal.ka.read_arg_inner
  br i1 %slt217, label %loop.body184, label %loop.exit218

loop.exit218:                                     ; preds = %loop.latch212
  br label %if.exit

if.exit:                                          ; preds = %loop.exit218, %if.false
  %slt223 = icmp slt i128 %deg1.0, %bigmultshortlong2dunequal.lb.read_arg_inner
  br i1 %slt223, label %if.true219, label %if.false220

if.true219:                                       ; preds = %if.exit
  br label %loop.body224

if.false220:                                      ; preds = %if.exit
  br label %if.exit259

loop.body224:                                     ; preds = %loop.latch252, %if.true219
  %deg2.1 = phi i128 [ 0, %if.true219 ], [ %add254, %loop.latch252 ]
  %array_getter228 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array164, i128 0, i128 %i.3, i128 %j.3
  %b_poly229 = load i128, i128* %array_getter228, align 4
  %array_getter233 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_inner, i128 0, i128 %deg1.0, i128 %deg2.1
  %b234 = load i128, i128* %array_getter233, align 4
  %array_getter238 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %i.3, i128 %deg1.0
  %pow239 = load i128, i128* %array_getter238, align 4
  %mul240 = mul i128 %b234, %pow239
  %array_getter244 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %j.3, i128 %deg2.1
  %pow245 = load i128, i128* %array_getter244, align 4
  %mul246 = mul i128 %mul240, %pow245
  %add247 = add i128 %b_poly229, %mul246
  %b_poly251 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array164, i128 0, i128 %i.3, i128 %j.3
  store i128 %add247, i128* %b_poly251, align 4
  br label %loop.latch252

loop.latch252:                                    ; preds = %loop.body224
  %add254 = add i128 %deg2.1, 1
  %slt257 = icmp slt i128 %add254, %bigmultshortlong2dunequal.kb.read_arg_inner
  br i1 %slt257, label %loop.body224, label %loop.exit258

loop.exit258:                                     ; preds = %loop.latch252
  br label %if.exit259

if.exit259:                                       ; preds = %loop.exit258, %if.false220
  br label %loop.body260

loop.body260:                                     ; preds = %loop.latch288, %if.exit259
  %deg2.2 = phi i128 [ 0, %if.exit259 ], [ %add290, %loop.latch288 ]
  %array_getter264 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array165, i128 0, i128 %i.3, i128 %j.3
  %out_poly265 = load i128, i128* %array_getter264, align 4
  %array_getter269 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %deg1.0, i128 %deg2.2
  %out270 = load i128, i128* %array_getter269, align 4
  %array_getter274 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %i.3, i128 %deg1.0
  %pow275 = load i128, i128* %array_getter274, align 4
  %mul276 = mul i128 %out270, %pow275
  %array_getter280 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array138, i128 0, i128 %j.3, i128 %deg2.2
  %pow281 = load i128, i128* %array_getter280, align 4
  %mul282 = mul i128 %mul276, %pow281
  %add283 = add i128 %out_poly265, %mul282
  %out_poly287 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array165, i128 0, i128 %i.3, i128 %j.3
  store i128 %add283, i128* %out_poly287, align 4
  br label %loop.latch288

loop.latch288:                                    ; preds = %loop.body260
  %add290 = add i128 %deg2.2, 1
  %add294 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub295 = sub i128 %add294, 1
  %slt296 = icmp slt i128 %add290, %sub295
  br i1 %slt296, label %loop.body260, label %loop.exit297

loop.exit297:                                     ; preds = %loop.latch288
  br label %loop.latch298

loop.latch298:                                    ; preds = %loop.exit297
  %add300 = add i128 %deg1.0, 1
  %add304 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub305 = sub i128 %add304, 1
  %slt306 = icmp slt i128 %add300, %sub305
  br i1 %slt306, label %loop.body180, label %loop.exit307

loop.exit307:                                     ; preds = %loop.latch298
  br label %loop.latch308

loop.latch308:                                    ; preds = %loop.exit307
  %add310 = add i128 %j.3, 1
  %add314 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub315 = sub i128 %add314, 1
  %slt316 = icmp slt i128 %add310, %sub315
  br i1 %slt316, label %loop.body167, label %loop.exit317

loop.exit317:                                     ; preds = %loop.latch308
  br label %loop.latch318

loop.latch318:                                    ; preds = %loop.exit317
  %add320 = add i128 %i.3, 1
  %add324 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub325 = sub i128 %add324, 1
  %slt326 = icmp slt i128 %add320, %sub325
  br i1 %slt326, label %loop.body166, label %loop.exit327

loop.exit327:                                     ; preds = %loop.latch318
  br label %loop.body328

loop.body328:                                     ; preds = %loop.latch356, %loop.exit327
  %i.4 = phi i128 [ 0, %loop.exit327 ], [ %add358, %loop.latch356 ]
  br label %loop.body329

loop.body329:                                     ; preds = %loop.latch346, %loop.body328
  %j.4 = phi i128 [ 0, %loop.body328 ], [ %add348, %loop.latch346 ]
  %array_getter333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array165, i128 0, i128 %i.4, i128 %j.4
  %out_poly334 = load i128, i128* %array_getter333, align 4
  %array_getter338 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array163, i128 0, i128 %i.4, i128 %j.4
  %a_poly339 = load i128, i128* %array_getter338, align 4
  %array_getter343 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array164, i128 0, i128 %i.4, i128 %j.4
  %b_poly344 = load i128, i128* %array_getter343, align 4
  %mul345 = mul i128 %a_poly339, %b_poly344
  call void @fn_intrinsic_add_constraint(i128 %out_poly334, i128 %mul345, i1* @constraint.28)
  br label %loop.latch346

loop.latch346:                                    ; preds = %loop.body329
  %add348 = add i128 %j.4, 1
  %add352 = add i128 %bigmultshortlong2dunequal.ka.read_arg_inner, %bigmultshortlong2dunequal.kb.read_arg_inner
  %sub353 = sub i128 %add352, 1
  %slt354 = icmp slt i128 %add348, %sub353
  br i1 %slt354, label %loop.body329, label %loop.exit355

loop.exit355:                                     ; preds = %loop.latch346
  br label %loop.latch356

loop.latch356:                                    ; preds = %loop.exit355
  %add358 = add i128 %i.4, 1
  %add362 = add i128 %bigmultshortlong2dunequal.la.read_arg_inner, %bigmultshortlong2dunequal.lb.read_arg_inner
  %sub363 = sub i128 %add362, 1
  %slt364 = icmp slt i128 %add358, %sub363
  br i1 %slt364, label %loop.body328, label %loop.exit365

loop.exit365:                                     ; preds = %loop.latch356
  br label %exit

exit:                                             ; preds = %loop.exit365
  %bigmultshortlong2dunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %bigmultshortlong2dunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %0, i128 %1, i128 %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_bigmultshortlong2dunequal = alloca %struct_template_circuit_bigmultshortlong2dunequal, align 8
  %bigmultshortlong2dunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 0
  store i128 %0, i128* %bigmultshortlong2dunequal.n.write_arg_inner, align 4
  %bigmultshortlong2dunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 1
  store i128 %1, i128* %bigmultshortlong2dunequal.ka.write_arg_inner, align 4
  %bigmultshortlong2dunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 2
  store i128 %2, i128* %bigmultshortlong2dunequal.kb.write_arg_inner, align 4
  %bigmultshortlong2dunequal.la.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 3
  store i128 %3, i128* %bigmultshortlong2dunequal.la.write_arg_inner, align 4
  %bigmultshortlong2dunequal.lb.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal, i32 0, i32 4
  store i128 %4, i128* %bigmultshortlong2dunequal.lb.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultshortlong2dunequal* %struct_template_circuit_bigmultshortlong2dunequal
}

define i128 @is_equal_Fp2(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %idx2 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch13, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add15, %loop.latch13 ]
  br label %loop.body3

loop.body3:                                       ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 %i.0, i128 %idx.0
  %a6 = load i128, i128* %array_getter, align 4
  %array_getter9 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %i.0, i128 %idx.0
  %b10 = load i128, i128* %array_getter9, align 4
  %ne = icmp ne i128 %a6, %b10
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body3
  ret i128 0

if.false:                                         ; preds = %loop.body3
  br label %if.exit

if.exit:                                          ; preds = %if.false
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body3, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch13

loop.latch13:                                     ; preds = %loop.exit
  %add15 = add i128 %i.0, 1
  %slt17 = icmp slt i128 %add15, 2
  br i1 %slt17, label %loop.body, label %loop.exit18

loop.exit18:                                      ; preds = %loop.latch13
  ret i128 1
}

define void @fn_template_init_checkcarrytozero(%struct_template_circuit_checkcarrytozero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 0
  %checkcarrytozero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 1
  %checkcarrytozero.m.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 2
  %checkcarrytozero.k.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 3
  %checkcarrytozero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %EPSILON4 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %carry = bitcast i8* %malloccall to [256 x i128]*
  %carryRangeChecks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add82, %loop.latch ]
  %add = add i128 %checkcarrytozero.m.read_arg_inner, 1
  %sub = sub i128 %add, %checkcarrytozero.n.read_arg_inner
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %sub)
  %carryRangeChecks9 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %carryRangeChecks5, i128 0, i128 %i.0
  store %struct_template_circuit_num2bits* %call, %struct_template_circuit_num2bits** %carryRangeChecks9, align 8
  %eq = icmp eq i128 %i.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_inner, i128 0, i128 %i.0
  %in12 = load i128, i128* %array_getter, align 4
  %lshift = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %sdiv = sdiv i128 %in12, %lshift
  %carry16 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %i.0
  store i128 %sdiv, i128* %carry16, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_inner, i128 0, i128 %i.0
  %in20 = load i128, i128* %array_getter19, align 4
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %i.0
  %carry24 = load i128, i128* %array_getter23, align 4
  %lshift26 = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %mul = mul i128 %carry24, %lshift26
  call void @fn_intrinsic_add_constraint(i128 %in20, i128 %mul, i1* @constraint.29)
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_inner, i128 0, i128 %i.0
  %in30 = load i128, i128* %array_getter29, align 4
  %sub33 = sub i128 %i.0, 1
  %array_getter34 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %sub33
  %carry35 = load i128, i128* %array_getter34, align 4
  %add36 = add i128 %in30, %carry35
  %lshift38 = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %sdiv39 = sdiv i128 %add36, %lshift38
  %carry42 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %i.0
  store i128 %sdiv39, i128* %carry42, align 4
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_inner, i128 0, i128 %i.0
  %in46 = load i128, i128* %array_getter45, align 4
  %sub49 = sub i128 %i.0, 1
  %array_getter50 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %sub49
  %carry51 = load i128, i128* %array_getter50, align 4
  %add52 = add i128 %in46, %carry51
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %i.0
  %carry56 = load i128, i128* %array_getter55, align 4
  %lshift58 = shl i128 1, %checkcarrytozero.n.read_arg_inner
  %mul59 = mul i128 %carry56, %lshift58
  call void @fn_intrinsic_add_constraint(i128 %add52, i128 %mul59, i1* @constraint.30)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %array_getter62 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %i.0
  %carry63 = load i128, i128* %array_getter62, align 4
  %add66 = add i128 %checkcarrytozero.m.read_arg_inner, 1
  %sub68 = sub i128 %add66, %checkcarrytozero.n.read_arg_inner
  %sub69 = sub i128 %sub68, 1
  %lshift70 = shl i128 1, %sub69
  %add71 = add i128 %carry63, %lshift70
  %array_getter74 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %carryRangeChecks5, i128 0, i128 %i.0
  %carryRangeChecks75 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter74, align 8
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %carryRangeChecks75, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %add71, i1* @constraint.31)
  %array_getter79 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %carryRangeChecks5, i128 0, i128 %i.0
  %carryRangeChecks80 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter79, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %carryRangeChecks80, i32 0, i32 1
  store i128 %add71, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add82 = add i128 %i.0, 1
  %sub84 = sub i128 %checkcarrytozero.k.read_arg_inner, 1
  %slt = icmp slt i128 %add82, %sub84
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub87 = sub i128 %checkcarrytozero.k.read_arg_inner, 1
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_inner, i128 0, i128 %sub87
  %in89 = load i128, i128* %array_getter88, align 4
  %sub92 = sub i128 %checkcarrytozero.k.read_arg_inner, 2
  %array_getter93 = getelementptr inbounds [256 x i128], [256 x i128]* %carry, i128 0, i128 %sub92
  %carry94 = load i128, i128* %array_getter93, align 4
  %add95 = add i128 %in89, %carry94
  call void @fn_intrinsic_add_constraint(i128 %add95, i128 0, i1* @constraint.32)
  br label %exit

exit:                                             ; preds = %loop.exit
  %checkcarrytozero.carry.write_inter_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %0, i32 0, i32 4
  store [256 x i128]* %carry, [256 x i128]** %checkcarrytozero.carry.write_inter_inner, align 8
  ret void
}

define %struct_template_circuit_checkcarrytozero* @fn_template_build_checkcarrytozero(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_checkcarrytozero = alloca %struct_template_circuit_checkcarrytozero, align 8
  %checkcarrytozero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero, i32 0, i32 0
  store i128 %0, i128* %checkcarrytozero.n.write_arg_inner, align 4
  %checkcarrytozero.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero, i32 0, i32 1
  store i128 %1, i128* %checkcarrytozero.m.write_arg_inner, align 4
  %checkcarrytozero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero, i32 0, i32 2
  store i128 %2, i128* %checkcarrytozero.k.write_arg_inner, align 4
  ret %struct_template_circuit_checkcarrytozero* %struct_template_circuit_checkcarrytozero
}

define [256 x [256 x [256 x i128]]]* @get_etas(i128 %0, i128 %1) {
entry:
  %call = call [256 x i128]* @get_BLS12_381_prime(i128 %0, i128 %1)
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %eq = icmp eq i128 %0, 55
  %eq5 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq5
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 15111404105178256, i128 12179658998385743, i128 23072200951145993, i128 9032482684664404, i128 23305776986956055, i128 5290624451499435, i128 464473045539356, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %etas6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0
  %2 = bitcast [256 x i128]* %etas6 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array7 = alloca [256 x i128], align 8
  store [256 x i128] [i128 12283190417025461, i128 20834464198811383, i128 18619727854230373, i128 19507968258096915, i128 5803508121078619, i128 11236708505185735, i128 568856440213905, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array7, align 4
  %etas9 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1
  %4 = bitcast [256 x i128]* %etas9 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array10 = alloca [256 x i128], align 8
  store [256 x i128] [i128 25832285470060055, i128 4957529455978525, i128 11309477484109628, i128 34786223745332771, i128 32011200050324214, i128 11140434959259260, i128 752550210394889, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array10, align 4
  %etas12 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 0
  %6 = bitcast [256 x i128]* %etas12 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array13 = alloca [256 x i128], align 8
  store [256 x i128] [i128 17831328741298113, i128 28196239014888719, i128 105869995940733, i128 9669258860454335, i128 12680438922771573, i128 19435555960961745, i128 748772277207452, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array13, align 4
  %etas15 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 1
  %8 = bitcast [256 x i128]* %etas15 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 1
  %etas20 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %etas20, [256 x i128]* %spice_inline_array, align 4
  %call21 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %spice_inline_array)
  %etas23 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 0
  %10 = bitcast [256 x i128]* %etas23 to i8*
  %11 = bitcast [256 x i128]* %call21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter25 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0, i128 0
  %etas26 = load [256 x i128], [256 x i128]* %array_getter25, align 4
  %spice_inline_array27 = alloca [256 x i128], align 8
  store [256 x i128] %etas26, [256 x i128]* %spice_inline_array27, align 4
  %etas29 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 1, i128 1
  %12 = bitcast [256 x i128]* %etas29 to i8*
  %13 = bitcast [256 x i128]* %spice_inline_array27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter34 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 1
  %etas35 = load [256 x i128], [256 x i128]* %array_getter34, align 4
  %spice_inline_array36 = alloca [256 x i128], align 8
  store [256 x i128] %etas35, [256 x i128]* %spice_inline_array36, align 4
  %call37 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %spice_inline_array36)
  %etas39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 0
  %14 = bitcast [256 x i128]* %etas39 to i8*
  %15 = bitcast [256 x i128]* %call37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter41 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2, i128 0
  %etas42 = load [256 x i128], [256 x i128]* %array_getter41, align 4
  %spice_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] %etas42, [256 x i128]* %spice_inline_array43, align 4
  %etas45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 3, i128 1
  %16 = bitcast [256 x i128]* %etas45 to i8*
  %17 = bitcast [256 x i128]* %spice_inline_array43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_signedfp12scalarmultiplynocarry(%struct_template_circuit_signedfp12scalarmultiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 0
  %signedfp12scalarmultiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 1
  %signedfp12scalarmultiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 2
  %signedfp12scalarmultiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 3
  %signedfp12scalarmultiplynocarry.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 4
  %signedfp12scalarmultiplynocarry.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %ab6 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %j7 = call i128 @fn_intrinsic_inline_init()
  %idx8 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch66, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add68, %loop.latch66 ]
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch60, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add62, %loop.latch60 ]
  %call = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedfp12scalarmultiplynocarry.n.read_arg_inner, i128 %signedfp12scalarmultiplynocarry.k.read_arg_inner, i128 %signedfp12scalarmultiplynocarry.m_out.read_arg_inner)
  %ab12 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlong* %call, %struct_template_circuit_bigmultshortlong** %ab12, align 8
  br label %loop.body13

loop.body13:                                      ; preds = %loop.latch, %loop.body9
  %idx.0 = phi i128 [ 0, %loop.body9 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarry.a.read_input_inner, i128 0, i128 %idx.0
  %a15 = load i128, i128* %array_getter, align 4
  %array_getter19 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab20 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter19, align 8
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab20, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %idx.0
  %ab24 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab24, i128 %a15, i1* @constraint.33)
  %array_getter28 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab29 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter28, align 8
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab29, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %ab33 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter31, i128 0, i128 %idx.0
  store i128 %a15, i128* %ab33, align 4
  %array_getter37 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarry.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b38 = load i128, i128* %array_getter37, align 4
  %array_getter42 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab43 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter42, align 8
  %struct_getter44 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab43, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter44, align 8
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %idx.0
  %ab47 = load i128, i128* %array_getter46, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab47, i128 %b38, i1* @constraint.34)
  %array_getter51 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab52 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter51, align 8
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab52, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter54 = load [256 x i128]*, [256 x i128]** %struct_getter53, align 8
  %ab56 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter54, i128 0, i128 %idx.0
  store i128 %b38, i128* %ab56, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body13
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12scalarmultiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body13, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch60

loop.latch60:                                     ; preds = %loop.exit
  %add62 = add i128 %j.0, 1
  %slt64 = icmp slt i128 %add62, 2
  br i1 %slt64, label %loop.body9, label %loop.exit65

loop.exit65:                                      ; preds = %loop.latch60
  br label %loop.latch66

loop.latch66:                                     ; preds = %loop.exit65
  %add68 = add i128 %i.0, 1
  %slt70 = icmp slt i128 %add68, 6
  br i1 %slt70, label %loop.body, label %loop.exit71

loop.exit71:                                      ; preds = %loop.latch66
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch108, %loop.exit71
  %i.1 = phi i128 [ 0, %loop.exit71 ], [ %add110, %loop.latch108 ]
  br label %loop.body73

loop.body73:                                      ; preds = %loop.latch102, %loop.body72
  %j.1 = phi i128 [ 0, %loop.body72 ], [ %add104, %loop.latch102 ]
  br label %loop.body74

loop.body74:                                      ; preds = %loop.latch95, %loop.body73
  %idx.1 = phi i128 [ 0, %loop.body73 ], [ %add97, %loop.latch95 ]
  %array_getter78 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.1, i128 %j.1
  %ab79 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter78, align 8
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab79, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter80, align 8
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %idx.1
  %ab83 = load i128, i128* %array_getter82, align 4
  %array_getter88 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %out89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_add_constraint(i128 %out89, i128 %ab83, i1* @constraint.35)
  %out94 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %ab83, i128* %out94, align 4
  br label %loop.latch95

loop.latch95:                                     ; preds = %loop.body74
  %add97 = add i128 %idx.1, 1
  %mul = mul i128 2, %signedfp12scalarmultiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %slt100 = icmp slt i128 %add97, %sub
  br i1 %slt100, label %loop.body74, label %loop.exit101

loop.exit101:                                     ; preds = %loop.latch95
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.exit101
  %add104 = add i128 %j.1, 1
  %slt106 = icmp slt i128 %add104, 2
  br i1 %slt106, label %loop.body73, label %loop.exit107

loop.exit107:                                     ; preds = %loop.latch102
  br label %loop.latch108

loop.latch108:                                    ; preds = %loop.exit107
  %add110 = add i128 %i.1, 1
  %slt112 = icmp slt i128 %add110, 6
  br i1 %slt112, label %loop.body72, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch108
  br label %exit

exit:                                             ; preds = %loop.exit113
  %signedfp12scalarmultiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12scalarmultiplynocarry* @fn_template_build_signedfp12scalarmultiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp12scalarmultiplynocarry = alloca %struct_template_circuit_signedfp12scalarmultiplynocarry, align 8
  %signedfp12scalarmultiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12scalarmultiplynocarry.n.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12scalarmultiplynocarry.k.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarry, %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp12scalarmultiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12scalarmultiplynocarry* %struct_template_circuit_signedfp12scalarmultiplynocarry
}

define [256 x i128]* @long_add4(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4, [256 x i128]* %5) {
entry:
  %carry1 = call i128 @fn_intrinsic_inline_init()
  %i3 = call i128 @fn_intrinsic_inline_init()
  %sumAndCarry = alloca [256 x i128]*, align 8
  %sumAndCarry4 = alloca [256 x i128], align 8
  store [256 x i128]* %sumAndCarry4, [256 x i128]** %sumAndCarry, align 8
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %carry.0 = phi i128 [ 0, %entry ], [ %sumAndCarry28, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add30, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a6 = load i128, i128* %array_getter, align 4
  %array_getter8 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %b9 = load i128, i128* %array_getter8, align 4
  %add = add i128 %a6, %b9
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %c12 = load i128, i128* %array_getter11, align 4
  %add13 = add i128 %add, %c12
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %5, i128 0, i128 %i.0
  %d16 = load i128, i128* %array_getter15, align 4
  %add17 = add i128 %add13, %d16
  %add19 = add i128 %add17, %carry.0
  %call = call [2 x i128]* @SplitFn(i128 %add19, i128 %0, i128 %0)
  %memcpy_ptr = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %6 = bitcast [256 x i128]** %memcpy_ptr to i8*
  %7 = bitcast [2 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry21 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry21, i128 0, i128 0
  %sumAndCarry23 = load i128, i128* %array_getter22, align 4
  %sum25 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry23, i128* %sum25, align 4
  %sumAndCarry26 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry26, i128 0, i128 1
  %sumAndCarry28 = load i128, i128* %array_getter27, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add30 = add i128 %i.0, 1
  %slt = icmp slt i128 %add30, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sum35 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %1
  store i128 %sumAndCarry28, i128* %sum35, align 4
  ret [256 x i128]* %uniform_array
}

define i128 @short_div(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %ret3 = call i128 @fn_intrinsic_inline_init()
  %scale4 = call i128 @fn_intrinsic_inline_init()
  %lshift = shl i128 1, %0
  %sub = sub i128 %1, 1
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub
  %b5 = load i128, i128* %array_getter, align 4
  %add = add i128 1, %b5
  %sdiv = sdiv i128 %lshift, %add
  %add8 = add i128 %1, 1
  %call = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %add8, i128 %sdiv, [256 x i128]* %2)
  %call14 = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %sdiv, [256 x i128]* %3)
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %call14, i128 0, i128 %1
  %norm_b18 = load i128, i128* %array_getter17, align 4
  %ne = icmp ne i128 %norm_b18, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %add21 = add i128 %1, 1
  %call24 = call i128 @short_div_norm(i128 %0, i128 %add21, [256 x i128]* %call, [256 x i128]* %call14)
  br label %if.exit

if.false:                                         ; preds = %entry
  %call29 = call i128 @short_div_norm(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %call14)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %ret.0 = phi i128 [ %call24, %if.true ], [ %call29, %if.false ]
  ret i128 %ret.0
}

define void @fn_template_init_rangecheck2d(%struct_template_circuit_rangecheck2d* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %0, i32 0, i32 0
  %rangecheck2d.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %0, i32 0, i32 1
  %rangecheck2d.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %0, i32 0, i32 2
  %rangecheck2d.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter2, align 8
  %eps3 = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %range_checks5 = alloca [256 x [256 x %struct_template_circuit_num2bits*]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch26, %entry
  %eps.0 = phi i128 [ 0, %entry ], [ %add28, %loop.latch26 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %rangecheck2d.n.read_arg_inner)
  %range_checks9 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %range_checks5, i128 0, i128 %eps.0, i128 %i.0
  store %struct_template_circuit_num2bits* %call, %struct_template_circuit_num2bits** %range_checks9, align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_inner, i128 0, i128 %eps.0, i128 %i.0
  %in12 = load i128, i128* %array_getter, align 4
  %array_getter16 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %range_checks5, i128 0, i128 %eps.0, i128 %i.0
  %range_checks17 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter16, align 8
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks17, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter18, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %in12, i1* @constraint.36)
  %array_getter22 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %range_checks5, i128 0, i128 %eps.0, i128 %i.0
  %range_checks23 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter22, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks23, i32 0, i32 1
  store i128 %in12, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body6
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %rangecheck2d.k.read_arg_inner
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch26

loop.latch26:                                     ; preds = %loop.exit
  %add28 = add i128 %eps.0, 1
  %slt30 = icmp slt i128 %add28, 2
  br i1 %slt30, label %loop.body, label %loop.exit31

loop.exit31:                                      ; preds = %loop.latch26
  br label %exit

exit:                                             ; preds = %loop.exit31
  ret void
}

define %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_rangecheck2d = alloca %struct_template_circuit_rangecheck2d, align 8
  %rangecheck2d.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %struct_template_circuit_rangecheck2d, i32 0, i32 0
  store i128 %0, i128* %rangecheck2d.n.write_arg_inner, align 4
  %rangecheck2d.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %struct_template_circuit_rangecheck2d, i32 0, i32 1
  store i128 %1, i128* %rangecheck2d.k.write_arg_inner, align 4
  ret %struct_template_circuit_rangecheck2d* %struct_template_circuit_rangecheck2d
}

define [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %call = call i128 @long_gt(i128 %0, i128 %1, [256 x i128]* %3, [256 x i128]* %2)
  %eq = icmp eq i128 %call, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %call7 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %3)
  %call8 = call [256 x i128]* @long_add(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %call7)
  ret [256 x i128]* %call8

if.false:                                         ; preds = %entry
  %call13 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  ret [256 x i128]* %call13
}

define void @fn_template_init_modsumfour(%struct_template_circuit_modsumfour* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 0
  %modsumfour.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 1
  %modsumfour.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 2
  %modsumfour.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 3
  %modsumfour.c.read_input_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 4
  %modsumfour.d.read_input_inner = load i128, i128* %struct_getter4, align 4
  %sum = call i128 @fn_intrinsic_inline_init()
  %carry = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %modsumfour.n.read_arg_inner, 2
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add)
  %add5 = add i128 %modsumfour.a.read_input_inner, %modsumfour.b.read_input_inner
  %add6 = add i128 %add5, %modsumfour.c.read_input_inner
  %add7 = add i128 %add6, %modsumfour.d.read_input_inner
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter9, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %add7, i1* @constraint.37)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %add7, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter11, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %modsumfour.n.read_arg_inner
  %n2b13 = load i128, i128* %array_getter, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter16 = load [256 x i128]*, [256 x i128]** %struct_getter15, align 8
  %add18 = add i128 %modsumfour.n.read_arg_inner, 1
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter16, i128 0, i128 %add18
  %n2b20 = load i128, i128* %array_getter19, align 4
  %mul = mul i128 2, %n2b20
  %add21 = add i128 %n2b13, %mul
  call void @fn_intrinsic_add_constraint(i128 %carry, i128 %add21, i1* @constraint.38)
  %modsumfour.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 6
  store i128 %add21, i128* %modsumfour.carry.write_output_inner, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 6
  %modsumfour.carry.read_output_inner = load i128, i128* %struct_getter25, align 4
  %add28 = add i128 %modsumfour.a.read_input_inner, %modsumfour.b.read_input_inner
  %add30 = add i128 %add28, %modsumfour.c.read_input_inner
  %add32 = add i128 %add30, %modsumfour.d.read_input_inner
  %lshift = shl i128 1, %modsumfour.n.read_arg_inner
  %mul35 = mul i128 %modsumfour.carry.read_output_inner, %lshift
  %sub = sub i128 %add32, %mul35
  call void @fn_intrinsic_add_constraint(i128 %sum, i128 %sub, i1* @constraint.39)
  %modsumfour.sum.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 5
  store i128 %sub, i128* %modsumfour.sum.write_output_inner, align 4
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 5
  %modsumfour.sum.read_output_inner = load i128, i128* %struct_getter39, align 4
  br label %exit

exit:                                             ; preds = %entry
  %modsumfour.sum.write_output_inner41 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 5
  store i128 %modsumfour.sum.read_output_inner, i128* %modsumfour.sum.write_output_inner41, align 4
  %modsumfour.carry.write_output_inner43 = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %0, i32 0, i32 6
  store i128 %modsumfour.carry.read_output_inner, i128* %modsumfour.carry.write_output_inner43, align 4
  ret void
}

define %struct_template_circuit_modsumfour* @fn_template_build_modsumfour(i128 %0) {
entry:
  %struct_template_circuit_modsumfour = alloca %struct_template_circuit_modsumfour, align 8
  %modsumfour.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsumfour, %struct_template_circuit_modsumfour* %struct_template_circuit_modsumfour, i32 0, i32 0
  store i128 %0, i128* %modsumfour.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsumfour* %struct_template_circuit_modsumfour
}

define void @fn_template_init_or(%struct_template_circuit_or* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 0
  %or.a.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 1
  %or.b.read_input_inner = load i128, i128* %struct_getter1, align 4
  %out = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %or.a.read_input_inner, %or.b.read_input_inner
  %mul = mul i128 %or.a.read_input_inner, %or.b.read_input_inner
  %sub = sub i128 %add, %mul
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.40)
  %or.out.write_output_inner = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 2
  store i128 %sub, i128* %or.out.write_output_inner, align 4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 2
  %or.out.read_output_inner = load i128, i128* %struct_getter6, align 4
  br label %exit

exit:                                             ; preds = %entry
  %or.out.write_output_inner8 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %0, i32 0, i32 2
  store i128 %or.out.read_output_inner, i128* %or.out.write_output_inner8, align 4
  ret void
}

define %struct_template_circuit_or* @fn_template_build_or() {
entry:
  %struct_template_circuit_or = alloca %struct_template_circuit_or, align 8
  ret %struct_template_circuit_or* %struct_template_circuit_or
}

define void @fn_template_init_isequal(%struct_template_circuit_isequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 0
  %isequal.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_inner, i128 0, i128 1
  %in1 = load i128, i128* %array_getter, align 4
  %array_getter3 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_inner, i128 0, i128 0
  %in4 = load i128, i128* %array_getter3, align 4
  %sub = sub i128 %in1, %in4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter6, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.41)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter8, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %iszero.out.read_output_outter, i1* @constraint.42)
  %isequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 1
  store i128 %iszero.out.read_output_outter, i128* %isequal.out.write_output_inner, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 1
  %isequal.out.read_output_inner = load i128, i128* %struct_getter12, align 4
  br label %exit

exit:                                             ; preds = %entry
  %isequal.out.write_output_inner14 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %0, i32 0, i32 1
  store i128 %isequal.out.read_output_inner, i128* %isequal.out.write_output_inner14, align 4
  ret void
}

define %struct_template_circuit_isequal* @fn_template_build_isequal() {
entry:
  %struct_template_circuit_isequal = alloca %struct_template_circuit_isequal, align 8
  ret %struct_template_circuit_isequal* %struct_template_circuit_isequal
}

define void @fn_template_init_compconstant(%struct_template_circuit_compconstant* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 0
  %compconstant.ct.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 1
  %compconstant.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %parts = bitcast i8* %malloccall to [256 x i128]*
  %out = call i128 @fn_intrinsic_inline_init()
  %b2 = call i128 @fn_intrinsic_inline_init()
  %i3 = call i128 @fn_intrinsic_inline_init()
  %slsb4 = call i128 @fn_intrinsic_inline_init()
  %smsb5 = call i128 @fn_intrinsic_inline_init()
  %cmsb6 = call i128 @fn_intrinsic_inline_init()
  %sout = call i128 @fn_intrinsic_inline_init()
  %clsb7 = call i128 @fn_intrinsic_inline_init()
  %a8 = call i128 @fn_intrinsic_inline_init()
  %e9 = call i128 @fn_intrinsic_inline_init()
  %sum10 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add138, %loop.latch ]
  %b.0 = phi i128 [ poison, %entry ], [ %sub131, %loop.latch ]
  %a.0 = phi i128 [ 1, %entry ], [ %add134, %loop.latch ]
  %e.0 = phi i128 [ 1, %entry ], [ %mul136, %loop.latch ]
  %sum.0 = phi i128 [ 0, %entry ], [ %add128, %loop.latch ]
  %mul = mul i128 %i.0, 2
  %rshift = lshr i128 %compconstant.ct.read_arg_inner, %mul
  %and = and i128 %rshift, 1
  %mul14 = mul i128 %i.0, 2
  %add = add i128 %mul14, 1
  %rshift15 = lshr i128 %compconstant.ct.read_arg_inner, %add
  %and16 = and i128 %rshift15, 1
  %mul18 = mul i128 %i.0, 2
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %compconstant.in.read_input_inner, i128 0, i128 %mul18
  %in19 = load i128, i128* %array_getter, align 4
  %mul22 = mul i128 %i.0, 2
  %add23 = add i128 %mul22, 1
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %compconstant.in.read_input_inner, i128 0, i128 %add23
  %in25 = load i128, i128* %array_getter24, align 4
  %eq = icmp eq i128 %and16, 0
  %eq28 = icmp eq i128 %and, 0
  %and29 = and i1 %eq, %eq28
  br i1 %and29, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %neg = sub i128 0, %b.0
  %mul32 = mul i128 %neg, %in25
  %mul34 = mul i128 %mul32, %in19
  %mul37 = mul i128 %b.0, %in25
  %add38 = add i128 %mul34, %mul37
  %mul41 = mul i128 %b.0, %in19
  %add42 = add i128 %add38, %mul41
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  %parts46 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_add_constraint(i128 %parts46, i128 %add42, i1* @constraint.43)
  %parts48 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  store i128 %add42, i128* %parts48, align 4
  br label %if.exit122

if.false:                                         ; preds = %loop.body
  %eq52 = icmp eq i128 %and16, 0
  %eq54 = icmp eq i128 %and, 1
  %and55 = and i1 %eq52, %eq54
  br i1 %and55, label %if.true49, label %if.false50

if.true49:                                        ; preds = %if.false
  %mul58 = mul i128 %a.0, %in25
  %mul60 = mul i128 %mul58, %in19
  %mul63 = mul i128 %a.0, %in19
  %sub = sub i128 %mul60, %mul63
  %mul66 = mul i128 %b.0, %in25
  %add67 = add i128 %sub, %mul66
  %mul70 = mul i128 %a.0, %in25
  %sub71 = sub i128 %add67, %mul70
  %add73 = add i128 %sub71, %a.0
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  %parts77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %parts77, i128 %add73, i1* @constraint.44)
  %parts80 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  store i128 %add73, i128* %parts80, align 4
  br label %if.exit121

if.false50:                                       ; preds = %if.false
  %eq84 = icmp eq i128 %and16, 1
  %eq86 = icmp eq i128 %and, 0
  %and87 = and i1 %eq84, %eq86
  br i1 %and87, label %if.true81, label %if.false82

if.true81:                                        ; preds = %if.false50
  %mul90 = mul i128 %b.0, %in25
  %mul92 = mul i128 %mul90, %in19
  %mul95 = mul i128 %a.0, %in25
  %sub96 = sub i128 %mul92, %mul95
  %add98 = add i128 %sub96, %a.0
  %array_getter101 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  %parts102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_add_constraint(i128 %parts102, i128 %add98, i1* @constraint.45)
  %parts105 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  store i128 %add98, i128* %parts105, align 4
  br label %if.exit

if.false82:                                       ; preds = %if.false50
  %neg107 = sub i128 0, %a.0
  %mul109 = mul i128 %neg107, %in25
  %mul111 = mul i128 %mul109, %in19
  %add113 = add i128 %mul111, %a.0
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  %parts117 = load i128, i128* %array_getter116, align 4
  call void @fn_intrinsic_add_constraint(i128 %parts117, i128 %add113, i1* @constraint.46)
  %parts120 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  store i128 %add113, i128* %parts120, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false82, %if.true81
  br label %if.exit121

if.exit121:                                       ; preds = %if.exit, %if.true49
  br label %if.exit122

if.exit122:                                       ; preds = %if.exit121, %if.true
  %array_getter126 = getelementptr inbounds [256 x i128], [256 x i128]* %parts, i128 0, i128 %i.0
  %parts127 = load i128, i128* %array_getter126, align 4
  %add128 = add i128 %sum.0, %parts127
  %sub131 = sub i128 %b.0, %e.0
  %add134 = add i128 %a.0, %e.0
  %mul136 = mul i128 %e.0, 2
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit122
  %add138 = add i128 %i.0, 1
  %slt = icmp slt i128 %add138, 127
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  call void @fn_intrinsic_add_constraint(i128 %sout, i128 %add128, i1* @constraint.47)
  %compconstant.sout.write_inter_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 3
  store i128 %add128, i128* %compconstant.sout.write_inter_inner, align 4
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 3
  %compconstant.sout.read_inter_inner = load i128, i128* %struct_getter144, align 4
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 135)
  %struct_getter147 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter147, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %compconstant.sout.read_inter_inner, i1* @constraint.48)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %compconstant.sout.read_inter_inner, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter150 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter150, align 8
  %array_getter151 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 127
  %num2bits152 = load i128, i128* %array_getter151, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %num2bits152, i1* @constraint.49)
  %compconstant.out.write_output_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 4
  store i128 %num2bits152, i128* %compconstant.out.write_output_inner, align 4
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 4
  %compconstant.out.read_output_inner = load i128, i128* %struct_getter156, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %compconstant.parts.write_inter_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 2
  store [256 x i128]* %parts, [256 x i128]** %compconstant.parts.write_inter_inner, align 8
  %compconstant.sout.write_inter_inner159 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 3
  store i128 %compconstant.sout.read_inter_inner, i128* %compconstant.sout.write_inter_inner159, align 4
  %compconstant.out.write_output_inner161 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %0, i32 0, i32 4
  store i128 %compconstant.out.read_output_inner, i128* %compconstant.out.write_output_inner161, align 4
  ret void
}

define %struct_template_circuit_compconstant* @fn_template_build_compconstant(i128 %0) {
entry:
  %struct_template_circuit_compconstant = alloca %struct_template_circuit_compconstant, align 8
  %compconstant.ct.write_arg_inner = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %struct_template_circuit_compconstant, i32 0, i32 0
  store i128 %0, i128* %compconstant.ct.write_arg_inner, align 4
  ret %struct_template_circuit_compconstant* %struct_template_circuit_compconstant
}

define [256 x [256 x [256 x [256 x i128]]]]* @get_iso3_coeffs(i128 %0, i128 %1) {
entry:
  %uniform_array = alloca [256 x [256 x [256 x [256 x i128]]]], align 8
  %eq = icmp eq i128 %0, 55
  %eq2 = icmp eq i128 %1, 7
  %and = and i1 %eq, %eq2
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 15950248680265686, i128 32024958503631044, i128 4244301805875352, i128 29783714120969249, i128 35703698803053471, i128 29228779030399226, i128 406640325010316, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %coeffs3 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 0
  %2 = bitcast [256 x i128]* %coeffs3 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array4 = alloca [256 x i128], align 8
  store [256 x i128] [i128 15950248680265686, i128 32024958503631044, i128 4244301805875352, i128 29783714120969249, i128 35703698803053471, i128 29228779030399226, i128 406640325010316, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array4, align 4
  %coeffs6 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 0, i128 1
  %4 = bitcast [256 x i128]* %coeffs6 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array7 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array7, align 4
  %coeffs9 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 0
  %6 = bitcast [256 x i128]* %coeffs9 to i8*
  %7 = bitcast [256 x i128]* %const_inline_array7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array10 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11821949021832986, i128 24017281472965197, i128 12732905417626058, i128 17293548324979811, i128 35053502371232479, i128 15628743053269744, i128 1219920975030950, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array10, align 4
  %coeffs12 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 1, i128 1
  %8 = bitcast [256 x i128]* %coeffs12 to i8*
  %9 = bitcast [256 x i128]* %const_inline_array10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array13 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11821949021832990, i128 24017281472965197, i128 12732905417626058, i128 17293548324979811, i128 35053502371232479, i128 15628743053269744, i128 1219920975030950, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array13, align 4
  %coeffs15 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 0
  %10 = bitcast [256 x i128]* %coeffs15 to i8*
  %11 = bitcast [256 x i128]* %const_inline_array13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] [i128 23925373020398477, i128 12008640736482598, i128 24380851218295013, i128 26661172671971889, i128 17526751185616239, i128 7814371526634872, i128 609960487515475, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array16, align 4
  %coeffs18 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 2, i128 1
  %12 = bitcast [256 x i128]* %coeffs18 to i8*
  %13 = bitcast [256 x i128]* %const_inline_array16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array19 = alloca [256 x i128], align 8
  store [256 x i128] [i128 27772197702098641, i128 20013442957632273, i128 16977207223501411, i128 11048465426985092, i128 34728404155321983, i128 8828725064705003, i128 1626561300041267, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array19, align 4
  %coeffs21 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 0
  %14 = bitcast [256 x i128]* %coeffs21 to i8*
  %15 = bitcast [256 x i128]* %const_inline_array19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array22 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array22, align 4
  %coeffs24 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 0, i128 3, i128 1
  %16 = bitcast [256 x i128]* %coeffs24 to i8*
  %17 = bitcast [256 x i128]* %const_inline_array22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array25 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array25, align 4
  %coeffs27 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 0
  %18 = bitcast [256 x i128]* %coeffs27 to i8*
  %19 = bitcast [256 x i128]* %const_inline_array25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array28 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231395, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array28, align 4
  %coeffs30 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 0, i128 1
  %20 = bitcast [256 x i128]* %coeffs30 to i8*
  %21 = bitcast [256 x i128]* %const_inline_array28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array31 = alloca [256 x i128], align 8
  store [256 x i128] [i128 12, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array31, align 4
  %coeffs33 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 0
  %22 = bitcast [256 x i128]* %coeffs33 to i8*
  %23 = bitcast [256 x i128]* %const_inline_array31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array34 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231455, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array34, align 4
  %coeffs36 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 1, i128 1
  %24 = bitcast [256 x i128]* %coeffs36 to i8*
  %25 = bitcast [256 x i128]* %const_inline_array34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array37 = alloca [256 x i128], align 8
  store [256 x i128] [i128 1, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array37, align 4
  %coeffs39 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 0
  %26 = bitcast [256 x i128]* %coeffs39 to i8*
  %27 = bitcast [256 x i128]* %const_inline_array37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array40 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array40, align 4
  %coeffs42 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 2, i128 1
  %28 = bitcast [256 x i128]* %coeffs42 to i8*
  %29 = bitcast [256 x i128]* %const_inline_array40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array43, align 4
  %coeffs45 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 0
  %30 = bitcast [256 x i128]* %coeffs45 to i8*
  %31 = bitcast [256 x i128]* %const_inline_array43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array46 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array46, align 4
  %coeffs48 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 1, i128 3, i128 1
  %32 = bitcast [256 x i128]* %coeffs48 to i8*
  %33 = bitcast [256 x i128]* %const_inline_array46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array49 = alloca [256 x i128], align 8
  store [256 x i128] [i128 22455448142010118, i128 21348055796076581, i128 27572038961197616, i128 1120560719995342, i128 22827171220970826, i128 11095397727559917, i128 1491014525037828, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array49, align 4
  %coeffs51 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 0
  %34 = bitcast [256 x i128]* %coeffs51 to i8*
  %35 = bitcast [256 x i128]* %const_inline_array49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array52 = alloca [256 x i128], align 8
  store [256 x i128] [i128 22455448142010118, i128 21348055796076581, i128 27572038961197616, i128 1120560719995342, i128 22827171220970826, i128 11095397727559917, i128 1491014525037828, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array52, align 4
  %coeffs54 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 0, i128 1
  %36 = bitcast [256 x i128]* %coeffs54 to i8*
  %37 = bitcast [256 x i128]* %const_inline_array52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array55 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array55, align 4
  %coeffs57 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 0
  %38 = bitcast [256 x i128]* %coeffs57 to i8*
  %39 = bitcast [256 x i128]* %const_inline_array55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array58 = alloca [256 x i128], align 8
  store [256 x i128] [i128 15950248680265662, i128 32024958503631044, i128 4244301805875352, i128 29783714120969249, i128 35703698803053471, i128 29228779030399226, i128 406640325010316, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array58, align 4
  %coeffs60 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 1, i128 1
  %40 = bitcast [256 x i128]* %coeffs60 to i8*
  %41 = bitcast [256 x i128]* %const_inline_array58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array61 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11821949021832988, i128 24017281472965197, i128 12732905417626058, i128 17293548324979811, i128 35053502371232479, i128 15628743053269744, i128 1219920975030950, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array61, align 4
  %coeffs63 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 0
  %42 = bitcast [256 x i128]* %coeffs63 to i8*
  %43 = bitcast [256 x i128]* %const_inline_array61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array64 = alloca [256 x i128], align 8
  store [256 x i128] [i128 23925373020398479, i128 12008640736482598, i128 24380851218295013, i128 26661172671971889, i128 17526751185616239, i128 7814371526634872, i128 609960487515475, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array64, align 4
  %coeffs66 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 2, i128 1
  %44 = bitcast [256 x i128]* %coeffs66 to i8*
  %45 = bitcast [256 x i128]* %const_inline_array64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array67 = alloca [256 x i128], align 8
  store [256 x i128] [i128 14480323801877264, i128 5335576544261059, i128 7435489548777956, i128 4243102168992702, i128 4975321819444090, i128 32509805231324272, i128 1287694362532669, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array67, align 4
  %coeffs69 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 0
  %46 = bitcast [256 x i128]* %coeffs69 to i8*
  %47 = bitcast [256 x i128]* %const_inline_array67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array70 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array70, align 4
  %coeffs72 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 2, i128 3, i128 1
  %48 = bitcast [256 x i128]* %coeffs72 to i8*
  %49 = bitcast [256 x i128]* %const_inline_array70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array73 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231035, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array73, align 4
  %coeffs75 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 0
  %50 = bitcast [256 x i128]* %coeffs75 to i8*
  %51 = bitcast [256 x i128]* %const_inline_array73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array76 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231035, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array76, align 4
  %coeffs78 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 0, i128 1
  %52 = bitcast [256 x i128]* %coeffs78 to i8*
  %53 = bitcast [256 x i128]* %const_inline_array76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array79 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array79, align 4
  %coeffs81 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 0
  %54 = bitcast [256 x i128]* %coeffs81 to i8*
  %55 = bitcast [256 x i128]* %const_inline_array79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array82 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231251, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array82, align 4
  %coeffs84 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 1, i128 1
  %56 = bitcast [256 x i128]* %coeffs84 to i8*
  %57 = bitcast [256 x i128]* %const_inline_array82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array85 = alloca [256 x i128], align 8
  store [256 x i128] [i128 18, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array85, align 4
  %coeffs87 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 0
  %58 = bitcast [256 x i128]* %coeffs87 to i8*
  %59 = bitcast [256 x i128]* %const_inline_array85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array88 = alloca [256 x i128], align 8
  store [256 x i128] [i128 35747322042231449, i128 36025922209447795, i128 1084959616957103, i128 7925923977987733, i128 16551456537884751, i128 23443114579904617, i128 1829881462546425, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array88, align 4
  %coeffs90 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 2, i128 1
  %60 = bitcast [256 x i128]* %coeffs90 to i8*
  %61 = bitcast [256 x i128]* %const_inline_array88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array91 = alloca [256 x i128], align 8
  store [256 x i128] [i128 1, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array91, align 4
  %coeffs93 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 0
  %62 = bitcast [256 x i128]* %coeffs93 to i8*
  %63 = bitcast [256 x i128]* %const_inline_array91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array94 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array94, align 4
  %coeffs96 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %uniform_array, i128 0, i128 3, i128 3, i128 1
  %64 = bitcast [256 x i128]* %coeffs96 to i8*
  %65 = bitcast [256 x i128]* %const_inline_array94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %entry
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  ret [256 x [256 x [256 x [256 x i128]]]]* %uniform_array
}

define [256 x [256 x i128]]* @get_generator_G1(i128 %0, i128 %1) {
entry:
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] [i128 16589478066046651, i128 22658679592837110, i128 35004527604248919, i128 16789302793630161, i128 7530538873701625, i128 32234187716135413, i128 1684953952445941, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array, align 4
  %g12 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %2 = bitcast [256 x i128]* %g12 to i8*
  %3 = bitcast [256 x i128]* %const_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %const_inline_array3 = alloca [256 x i128], align 8
  store [256 x i128] [i128 11860609209853921, i128 4091579406338073, i128 12578493816062195, i128 13088963032438982, i128 24961455755233629, i128 8501508834176643, i128 612415636564648, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0, i128 0], [256 x i128]* %const_inline_array3, align 4
  %g15 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %4 = bitcast [256 x i128]* %g15 to i8*
  %5 = bitcast [256 x i128]* %const_inline_array3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 %2, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %4) {
entry:
  %i11 = call i128 @fn_intrinsic_inline_init()
  %j3 = call i128 @fn_intrinsic_inline_init()
  %j15 = call i128 @fn_intrinsic_inline_init()
  %j26 = call i128 @fn_intrinsic_inline_init()
  %i27 = call i128 @fn_intrinsic_inline_init()
  %i10 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch18, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add20, %loop.latch18 ]
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %prod_val15 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %j.0, i128 %i.0
  store i128 0, i128* %prod_val15, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add = add i128 %j.0, 1
  %mul = mul i128 2, %2
  %sub = sub i128 %mul, 1
  %slt = icmp slt i128 %add, %sub
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch18

loop.latch18:                                     ; preds = %loop.exit
  %add20 = add i128 %i.0, 1
  %mul22 = mul i128 2, %1
  %sub23 = sub i128 %mul22, 1
  %slt24 = icmp slt i128 %add20, %sub23
  br i1 %slt24, label %loop.body, label %loop.exit25

loop.exit25:                                      ; preds = %loop.latch18
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch77, %loop.exit25
  %i1.0 = phi i128 [ 0, %loop.exit25 ], [ %add79, %loop.latch77 ]
  br label %loop.body27

loop.body27:                                      ; preds = %loop.latch70, %loop.body26
  %i2.0 = phi i128 [ 0, %loop.body26 ], [ %add72, %loop.latch70 ]
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch63, %loop.body27
  %j1.0 = phi i128 [ 0, %loop.body27 ], [ %add65, %loop.latch63 ]
  br label %loop.body29

loop.body29:                                      ; preds = %loop.latch56, %loop.body28
  %j2.0 = phi i128 [ 0, %loop.body28 ], [ %add58, %loop.latch56 ]
  %add33 = add i128 %j1.0, %j2.0
  %add36 = add i128 %i1.0, %i2.0
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add33, i128 %add36
  %prod_val37 = load i128, i128* %array_getter, align 4
  %array_getter40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %j1.0, i128 %i1.0
  %a41 = load i128, i128* %array_getter40, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %4, i128 0, i128 %j2.0, i128 %i2.0
  %b45 = load i128, i128* %array_getter44, align 4
  %mul46 = mul i128 %a41, %b45
  %add47 = add i128 %prod_val37, %mul46
  %add51 = add i128 %j1.0, %j2.0
  %add54 = add i128 %i1.0, %i2.0
  %prod_val55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %add51, i128 %add54
  store i128 %add47, i128* %prod_val55, align 4
  br label %loop.latch56

loop.latch56:                                     ; preds = %loop.body29
  %add58 = add i128 %j2.0, 1
  %slt61 = icmp slt i128 %add58, %2
  br i1 %slt61, label %loop.body29, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch56
  br label %loop.latch63

loop.latch63:                                     ; preds = %loop.exit62
  %add65 = add i128 %j1.0, 1
  %slt68 = icmp slt i128 %add65, %2
  br i1 %slt68, label %loop.body28, label %loop.exit69

loop.exit69:                                      ; preds = %loop.latch63
  br label %loop.latch70

loop.latch70:                                     ; preds = %loop.exit69
  %add72 = add i128 %i2.0, 1
  %slt75 = icmp slt i128 %add72, %1
  br i1 %slt75, label %loop.body27, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch70
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.exit76
  %add79 = add i128 %i1.0, 1
  %slt82 = icmp slt i128 %add79, %1
  br i1 %slt82, label %loop.body26, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch77
  %uniform_array84 = alloca [256 x [256 x i128]], align 8
  %uniform_array85 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch108, %loop.exit83
  %j.1 = phi i128 [ 0, %loop.exit83 ], [ %add110, %loop.latch108 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch99, %loop.body86
  %i.1 = phi i128 [ 0, %loop.body86 ], [ %add101, %loop.latch99 ]
  %array_getter91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %j.1, i128 %i.1
  %prod_val92 = load i128, i128* %array_getter91, align 4
  %call = call [3 x i128]* @SplitThreeFn(i128 %prod_val92, i128 %0, i128 %0, i128 %0)
  %split98 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.1, i128 %i.1
  %5 = bitcast [256 x i128]* %split98 to i8*
  %6 = bitcast [3 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([3 x i128]* getelementptr ([3 x i128], [3 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.body87
  %add101 = add i128 %i.1, 1
  %mul104 = mul i128 2, %1
  %sub105 = sub i128 %mul104, 1
  %slt106 = icmp slt i128 %add101, %sub105
  br i1 %slt106, label %loop.body87, label %loop.exit107

loop.exit107:                                     ; preds = %loop.latch99
  br label %loop.latch108

loop.latch108:                                    ; preds = %loop.exit107
  %add110 = add i128 %j.1, 1
  %mul113 = mul i128 2, %2
  %sub114 = sub i128 %mul113, 1
  %slt115 = icmp slt i128 %add110, %sub114
  br i1 %slt115, label %loop.body86, label %loop.exit116

loop.exit116:                                     ; preds = %loop.latch108
  %uniform_array117 = alloca [256 x [256 x i128]], align 8
  %uniform_array118 = alloca [256 x [256 x i128]], align 8
  br label %loop.body119

loop.body119:                                     ; preds = %loop.latch257, %loop.exit116
  %j.2 = phi i128 [ 0, %loop.exit116 ], [ %add259, %loop.latch257 ]
  %carry122 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array117, i128 0, i128 %j.2, i128 0
  store i128 0, i128* %carry122, align 4
  %array_getter125 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 0, i128 0
  %split126 = load i128, i128* %array_getter125, align 4
  %out129 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array84, i128 0, i128 %j.2, i128 0
  store i128 %split126, i128* %out129, align 4
  %mul131 = mul i128 2, %1
  %sub132 = sub i128 %mul131, 1
  %sgt = icmp sgt i128 %sub132, 1
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body119
  %array_getter135 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 0, i128 1
  %split136 = load i128, i128* %array_getter135, align 4
  %array_getter140 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 1, i128 0
  %split141 = load i128, i128* %array_getter140, align 4
  %add142 = add i128 %split136, %split141
  %call145 = call [2 x i128]* @SplitFn(i128 %add142, i128 %0, i128 %0)
  %sumAndCarry148 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2
  %7 = bitcast [256 x i128]* %sumAndCarry148 to i8*
  %8 = bitcast [2 x i128]* %call145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %array_getter151 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 0
  %sumAndCarry152 = load i128, i128* %array_getter151, align 4
  %out155 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array84, i128 0, i128 %j.2, i128 1
  store i128 %sumAndCarry152, i128* %out155, align 4
  %array_getter158 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 1
  %sumAndCarry159 = load i128, i128* %array_getter158, align 4
  %carry162 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array117, i128 0, i128 %j.2, i128 1
  store i128 %sumAndCarry159, i128* %carry162, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body119
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %mul166 = mul i128 2, %1
  %sub167 = sub i128 %mul166, 1
  %sgt168 = icmp sgt i128 %sub167, 2
  br i1 %sgt168, label %if.true163, label %if.false164

if.true163:                                       ; preds = %if.exit
  br label %loop.body169

if.false164:                                      ; preds = %if.exit
  br label %if.exit256

loop.body169:                                     ; preds = %loop.latch218, %if.true163
  %i.2 = phi i128 [ 2, %if.true163 ], [ %add220, %loop.latch218 ]
  %array_getter173 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 %i.2, i128 0
  %split174 = load i128, i128* %array_getter173, align 4
  %sub178 = sub i128 %i.2, 1
  %array_getter179 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 %sub178, i128 1
  %split180 = load i128, i128* %array_getter179, align 4
  %add181 = add i128 %split174, %split180
  %sub185 = sub i128 %i.2, 2
  %array_getter186 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 %sub185, i128 2
  %split187 = load i128, i128* %array_getter186, align 4
  %add188 = add i128 %add181, %split187
  %sub192 = sub i128 %i.2, 1
  %array_getter193 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array117, i128 0, i128 %j.2, i128 %sub192
  %carry194 = load i128, i128* %array_getter193, align 4
  %add195 = add i128 %add188, %carry194
  %call198 = call [2 x i128]* @SplitFn(i128 %add195, i128 %0, i128 %0)
  %sumAndCarry201 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2
  %9 = bitcast [256 x i128]* %sumAndCarry201 to i8*
  %10 = bitcast [2 x i128]* %call198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %array_getter204 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 0
  %sumAndCarry205 = load i128, i128* %array_getter204, align 4
  %out209 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array84, i128 0, i128 %j.2, i128 %i.2
  store i128 %sumAndCarry205, i128* %out209, align 4
  %array_getter212 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array118, i128 0, i128 %j.2, i128 1
  %sumAndCarry213 = load i128, i128* %array_getter212, align 4
  %carry217 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array117, i128 0, i128 %j.2, i128 %i.2
  store i128 %sumAndCarry213, i128* %carry217, align 4
  br label %loop.latch218

loop.latch218:                                    ; preds = %loop.body169
  %add220 = add i128 %i.2, 1
  %mul223 = mul i128 2, %1
  %sub224 = sub i128 %mul223, 1
  %slt225 = icmp slt i128 %add220, %sub224
  br i1 %slt225, label %loop.body169, label %loop.exit226

loop.exit226:                                     ; preds = %loop.latch218
  %mul230 = mul i128 2, %1
  %sub231 = sub i128 %mul230, 2
  %array_getter232 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 %sub231, i128 1
  %split233 = load i128, i128* %array_getter232, align 4
  %mul237 = mul i128 2, %1
  %sub238 = sub i128 %mul237, 3
  %array_getter239 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array85, i128 0, i128 %j.2, i128 %sub238, i128 2
  %split240 = load i128, i128* %array_getter239, align 4
  %add241 = add i128 %split233, %split240
  %mul245 = mul i128 2, %1
  %sub246 = sub i128 %mul245, 2
  %array_getter247 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array117, i128 0, i128 %j.2, i128 %sub246
  %carry248 = load i128, i128* %array_getter247, align 4
  %add249 = add i128 %add241, %carry248
  %mul253 = mul i128 2, %1
  %sub254 = sub i128 %mul253, 1
  %out255 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array84, i128 0, i128 %j.2, i128 %sub254
  store i128 %add249, i128* %out255, align 4
  br label %if.exit256

if.exit256:                                       ; preds = %loop.exit226, %if.false164
  br label %loop.latch257

loop.latch257:                                    ; preds = %if.exit256
  %add259 = add i128 %j.2, 1
  %mul262 = mul i128 2, %2
  %sub263 = sub i128 %mul262, 1
  %slt264 = icmp slt i128 %add259, %sub263
  br i1 %slt264, label %loop.body119, label %loop.exit265

loop.exit265:                                     ; preds = %loop.latch257
  ret [256 x [256 x i128]]* %uniform_array84
}

define void @fn_template_init_checkcarrymodp(%struct_template_circuit_checkcarrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 0
  %checkcarrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 1
  %checkcarrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 2
  %checkcarrymodp.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 3
  %checkcarrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 4
  %checkcarrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 5
  %checkcarrymodp.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 6
  %checkcarrymodp.x.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %0, i32 0, i32 7
  %checkcarrymodp.y.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %i8 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %checkcarrymodp.n.read_arg_inner, i128 %checkcarrymodp.k.read_arg_inner, i128 %checkcarrymodp.m.read_arg_inner, i128 %checkcarrymodp.overflow.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.p.read_arg_inner, i128 0, i128 %i.0
  %p10 = load i128, i128* %array_getter, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter12, align 8
  %array_getter14 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.0
  %pX15 = load i128, i128* %array_getter14, align 4
  call void @fn_intrinsic_add_constraint(i128 %pX15, i128 %p10, i1* @constraint.50)
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter17 = load [256 x i128]*, [256 x i128]** %struct_getter16, align 8
  %pX19 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter17, i128 0, i128 %i.0
  store i128 %p10, i128* %pX19, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %checkcarrymodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body23

loop.body23:                                      ; preds = %loop.latch37, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add39, %loop.latch37 ]
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_inner, i128 0, i128 %i.1
  %X26 = load i128, i128* %array_getter25, align 4
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.1
  %pX31 = load i128, i128* %array_getter30, align 4
  call void @fn_intrinsic_add_constraint(i128 %pX31, i128 %X26, i1* @constraint.51)
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter34 = load [256 x i128]*, [256 x i128]** %struct_getter33, align 8
  %pX36 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter34, i128 0, i128 %i.1
  store i128 %X26, i128* %pX36, align 4
  br label %loop.latch37

loop.latch37:                                     ; preds = %loop.body23
  %add39 = add i128 %i.1, 1
  %slt42 = icmp slt i128 %add39, %checkcarrymodp.m.read_arg_inner
  br i1 %slt42, label %loop.body23, label %loop.exit43

loop.exit43:                                      ; preds = %loop.latch37
  %add46 = add i128 %checkcarrymodp.overflow.read_arg_inner, 1
  %add49 = add i128 %checkcarrymodp.k.read_arg_inner, %checkcarrymodp.m.read_arg_inner
  %sub = sub i128 %add49, 1
  %call50 = call %struct_template_circuit_checkcarrytozero* @fn_template_build_checkcarrytozero(i128 %checkcarrymodp.n.read_arg_inner, i128 %add46, i128 %sub)
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch75, %loop.exit43
  %i.2 = phi i128 [ 0, %loop.exit43 ], [ %add77, %loop.latch75 ]
  %array_getter53 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_inner, i128 0, i128 %i.2
  %in54 = load i128, i128* %array_getter53, align 4
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.2
  %pX59 = load i128, i128* %array_getter58, align 4
  %sub60 = sub i128 %in54, %pX59
  %array_getter62 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_inner, i128 0, i128 %i.2
  %Y63 = load i128, i128* %array_getter62, align 4
  %sub64 = sub i128 %sub60, %Y63
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call50, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter66, align 8
  %array_getter68 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter, i128 0, i128 %i.2
  %carry_check69 = load i128, i128* %array_getter68, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry_check69, i128 %sub64, i1* @constraint.52)
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call50, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter72 = load [256 x i128]*, [256 x i128]** %struct_getter71, align 8
  %carry_check74 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter72, i128 0, i128 %i.2
  store i128 %sub64, i128* %carry_check74, align 4
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.body51
  %add77 = add i128 %i.2, 1
  %slt80 = icmp slt i128 %add77, %checkcarrymodp.k.read_arg_inner
  br i1 %slt80, label %loop.body51, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch75
  br label %loop.body83

loop.body83:                                      ; preds = %loop.latch101, %loop.exit81
  %i.3 = phi i128 [ %checkcarrymodp.k.read_arg_inner, %loop.exit81 ], [ %add103, %loop.latch101 ]
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter86 = load [256 x i128]*, [256 x i128]** %struct_getter85, align 8
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter86, i128 0, i128 %i.3
  %pX89 = load i128, i128* %array_getter88, align 4
  %neg = sub i128 0, %pX89
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call50, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter92 = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %array_getter94 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter92, i128 0, i128 %i.3
  %carry_check95 = load i128, i128* %array_getter94, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry_check95, i128 %neg, i1* @constraint.53)
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_checkcarrytozero, %struct_template_circuit_checkcarrytozero* %call50, i32 0, i32 3
  %checkcarrytozero.in.read_input_outter98 = load [256 x i128]*, [256 x i128]** %struct_getter97, align 8
  %carry_check100 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrytozero.in.read_input_outter98, i128 0, i128 %i.3
  store i128 %neg, i128* %carry_check100, align 4
  br label %loop.latch101

loop.latch101:                                    ; preds = %loop.body83
  %add103 = add i128 %i.3, 1
  %add107 = add i128 %checkcarrymodp.k.read_arg_inner, %checkcarrymodp.m.read_arg_inner
  %sub108 = sub i128 %add107, 1
  %slt109 = icmp slt i128 %add103, %sub108
  br i1 %slt109, label %loop.body83, label %loop.exit110

loop.exit110:                                     ; preds = %loop.latch101
  br label %exit

exit:                                             ; preds = %loop.exit110
  ret void
}

define %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_checkcarrymodp = alloca %struct_template_circuit_checkcarrymodp, align 8
  %checkcarrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 0
  store i128 %0, i128* %checkcarrymodp.n.write_arg_inner, align 4
  %checkcarrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 1
  store i128 %1, i128* %checkcarrymodp.k.write_arg_inner, align 4
  %checkcarrymodp.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 2
  store i128 %2, i128* %checkcarrymodp.m.write_arg_inner, align 4
  %checkcarrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 3
  store i128 %3, i128* %checkcarrymodp.overflow.write_arg_inner, align 4
  %checkcarrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %checkcarrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_checkcarrymodp* %struct_template_circuit_checkcarrymodp
}

define i128 @log_ceil(i128 %0) {
entry:
  %n_temp1 = call i128 @fn_intrinsic_inline_init()
  %i2 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %n_temp.0 = phi i128 [ %0, %entry ], [ %sdiv, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %eq = icmp eq i128 %n_temp.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  ret i128 %i.0

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false
  %sdiv = sdiv i128 %n_temp.0, 2
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret i128 254
}

define void @fn_template_init_signedfp2multiplynocarry(%struct_template_circuit_signedfp2multiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 0
  %signedfp2multiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 1
  %signedfp2multiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 2
  %signedfp2multiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %j5 = call i128 @fn_intrinsic_inline_init()
  %i6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %call = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %signedfp2multiplynocarry.n.read_arg_inner, i128 %signedfp2multiplynocarry.k.read_arg_inner, i128 %signedfp2multiplynocarry.k.read_arg_inner, i128 %signedfp2multiplynocarry.m_out.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch42, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add44, %loop.latch42 ]
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %a11 = load i128, i128* %array_getter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter13, align 8
  %array_getter16 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %mult17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult17, i128 %a11, i1* @constraint.54)
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter19 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter18, align 8
  %mult22 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter19, i128 0, i128 %i.0, i128 %j.0
  store i128 %a11, i128* %mult22, align 4
  %array_getter25 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %b26 = load i128, i128* %array_getter25, align 4
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter28, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %mult32 = load i128, i128* %array_getter31, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult32, i128 %b26, i1* @constraint.55)
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter35 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter34, align 8
  %mult38 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter35, i128 0, i128 %i.0, i128 %j.0
  store i128 %b26, i128* %mult38, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body8
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %signedfp2multiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body8, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch42

loop.latch42:                                     ; preds = %loop.exit
  %add44 = add i128 %i.0, 1
  %slt46 = icmp slt i128 %add44, 2
  br i1 %slt46, label %loop.body, label %loop.exit47

loop.exit47:                                      ; preds = %loop.latch42
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch72, %loop.exit47
  %i.1 = phi i128 [ 0, %loop.exit47 ], [ %add74, %loop.latch72 ]
  br label %loop.body49

loop.body49:                                      ; preds = %loop.latch65, %loop.body48
  %j.1 = phi i128 [ 0, %loop.body48 ], [ %add67, %loop.latch65 ]
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter51, align 8
  %array_getter54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1
  %mult55 = load i128, i128* %array_getter54, align 4
  %array_getter59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  %out60 = load i128, i128* %array_getter59, align 4
  call void @fn_intrinsic_add_constraint(i128 %out60, i128 %mult55, i1* @constraint.56)
  %out64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  store i128 %mult55, i128* %out64, align 4
  br label %loop.latch65

loop.latch65:                                     ; preds = %loop.body49
  %add67 = add i128 %j.1, 1
  %mul = mul i128 2, %signedfp2multiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %slt70 = icmp slt i128 %add67, %sub
  br i1 %slt70, label %loop.body49, label %loop.exit71

loop.exit71:                                      ; preds = %loop.latch65
  br label %loop.latch72

loop.latch72:                                     ; preds = %loop.exit71
  %add74 = add i128 %i.1, 1
  %slt76 = icmp slt i128 %add74, 2
  br i1 %slt76, label %loop.body48, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch72
  br label %exit

exit:                                             ; preds = %loop.exit77
  %signedfp2multiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp2multiplynocarry = alloca %struct_template_circuit_signedfp2multiplynocarry, align 8
  %signedfp2multiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarry.n.write_arg_inner, align 4
  %signedfp2multiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarry.k.write_arg_inner, align 4
  %signedfp2multiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp2multiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarry* %struct_template_circuit_signedfp2multiplynocarry
}

define void @fn_template_init_splitthree(%struct_template_circuit_splitthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 0
  %splitthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 1
  %splitthree.m.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 2
  %splitthree.k.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 3
  %splitthree.in.read_input_inner = load i128, i128* %struct_getter3, align 4
  %small = call i128 @fn_intrinsic_inline_init()
  %big = call i128 @fn_intrinsic_inline_init()
  %medium = call i128 @fn_intrinsic_inline_init()
  %lshift = shl i128 1, %splitthree.n.read_arg_inner
  %mod = srem i128 %splitthree.in.read_input_inner, %lshift
  %splitthree.small.write_output_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 4
  store i128 %mod, i128* %splitthree.small.write_output_inner, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 4
  %splitthree.small.read_output_inner = load i128, i128* %struct_getter5, align 4
  %lshift8 = shl i128 1, %splitthree.n.read_arg_inner
  %sdiv = sdiv i128 %splitthree.in.read_input_inner, %lshift8
  %lshift9 = shl i128 1, %splitthree.m.read_arg_inner
  %mod10 = srem i128 %sdiv, %lshift9
  %splitthree.medium.write_output_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 5
  store i128 %mod10, i128* %splitthree.medium.write_output_inner, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 5
  %splitthree.medium.read_output_inner = load i128, i128* %struct_getter13, align 4
  %add = add i128 %splitthree.n.read_arg_inner, %splitthree.m.read_arg_inner
  %lshift17 = shl i128 1, %add
  %sdiv18 = sdiv i128 %splitthree.in.read_input_inner, %lshift17
  %splitthree.big.write_output_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 6
  store i128 %sdiv18, i128* %splitthree.big.write_output_inner, align 4
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 6
  %splitthree.big.read_output_inner = load i128, i128* %struct_getter21, align 4
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %splitthree.n.read_arg_inner)
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter25, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %splitthree.small.read_output_inner, i1* @constraint.57)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %splitthree.small.read_output_inner, i128* %num2bits.in.write_input_outter, align 4
  %call28 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %splitthree.m.read_arg_inner)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call28, i32 0, i32 1
  %num2bits.in.read_input_outter32 = load i128, i128* %struct_getter31, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter32, i128 %splitthree.medium.read_output_inner, i1* @constraint.58)
  %num2bits.in.write_input_outter34 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call28, i32 0, i32 1
  store i128 %splitthree.medium.read_output_inner, i128* %num2bits.in.write_input_outter34, align 4
  %call35 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %splitthree.k.read_arg_inner)
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call35, i32 0, i32 1
  %num2bits.in.read_input_outter39 = load i128, i128* %struct_getter38, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter39, i128 %splitthree.big.read_output_inner, i1* @constraint.59)
  %num2bits.in.write_input_outter41 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call35, i32 0, i32 1
  store i128 %splitthree.big.read_output_inner, i128* %num2bits.in.write_input_outter41, align 4
  %lshift46 = shl i128 1, %splitthree.n.read_arg_inner
  %mul = mul i128 %splitthree.medium.read_output_inner, %lshift46
  %add47 = add i128 %splitthree.small.read_output_inner, %mul
  %add51 = add i128 %splitthree.n.read_arg_inner, %splitthree.m.read_arg_inner
  %lshift52 = shl i128 1, %add51
  %mul53 = mul i128 %splitthree.big.read_output_inner, %lshift52
  %add54 = add i128 %add47, %mul53
  call void @fn_intrinsic_add_constraint(i128 %splitthree.in.read_input_inner, i128 %add54, i1* @constraint.60)
  br label %exit

exit:                                             ; preds = %entry
  %splitthree.small.write_output_inner56 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 4
  store i128 %splitthree.small.read_output_inner, i128* %splitthree.small.write_output_inner56, align 4
  %splitthree.medium.write_output_inner58 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 5
  store i128 %splitthree.medium.read_output_inner, i128* %splitthree.medium.write_output_inner58, align 4
  %splitthree.big.write_output_inner60 = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %0, i32 0, i32 6
  store i128 %splitthree.big.read_output_inner, i128* %splitthree.big.write_output_inner60, align 4
  ret void
}

define %struct_template_circuit_splitthree* @fn_template_build_splitthree(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_splitthree = alloca %struct_template_circuit_splitthree, align 8
  %splitthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %struct_template_circuit_splitthree, i32 0, i32 0
  store i128 %0, i128* %splitthree.n.write_arg_inner, align 4
  %splitthree.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %struct_template_circuit_splitthree, i32 0, i32 1
  store i128 %1, i128* %splitthree.m.write_arg_inner, align 4
  %splitthree.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_splitthree, %struct_template_circuit_splitthree* %struct_template_circuit_splitthree, i32 0, i32 2
  store i128 %2, i128* %splitthree.k.write_arg_inner, align 4
  ret %struct_template_circuit_splitthree* %struct_template_circuit_splitthree
}

define void @fn_template_init_multiand(%struct_template_circuit_multiand* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 0
  %multiand.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 1
  %multiand.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %i2 = call i128 @fn_intrinsic_inline_init()
  %ands3 = alloca [256 x %struct_template_circuit_multiand*], align 8
  %n14 = call i128 @fn_intrinsic_inline_init()
  %n25 = call i128 @fn_intrinsic_inline_init()
  %eq = icmp eq i128 %multiand.n.read_arg_inner, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner, i128 0, i128 0
  %in6 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %in6, i1* @constraint.61)
  %multiand.out.write_output_inner = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %in6, i128* %multiand.out.write_output_inner, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  %multiand.out.read_output_inner = load i128, i128* %struct_getter9, align 4
  br label %if.exit132

if.false:                                         ; preds = %entry
  %eq13 = icmp eq i128 %multiand.n.read_arg_inner, 2
  br i1 %eq13, label %if.true10, label %if.false11

if.true10:                                        ; preds = %if.false
  %call = call %struct_template_circuit_and* @fn_template_build_and()
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner, i128 0, i128 0
  %in16 = load i128, i128* %array_getter15, align 4
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 0
  %and.a.read_input_outter = load i128, i128* %struct_getter18, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.a.read_input_outter, i128 %in16, i1* @constraint.62)
  %and.a.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 0
  store i128 %in16, i128* %and.a.write_input_outter, align 4
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner, i128 0, i128 1
  %in22 = load i128, i128* %array_getter21, align 4
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 1
  %and.b.read_input_outter = load i128, i128* %struct_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.b.read_input_outter, i128 %in22, i1* @constraint.63)
  %and.b.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 1
  store i128 %in22, i128* %and.b.write_input_outter, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call, i32 0, i32 2
  %and.out.read_output_outter = load i128, i128* %struct_getter27, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %and.out.read_output_outter, i1* @constraint.64)
  %multiand.out.write_output_inner30 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %and.out.read_output_outter, i128* %multiand.out.write_output_inner30, align 4
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  %multiand.out.read_output_inner33 = load i128, i128* %struct_getter32, align 4
  br label %if.exit

if.false11:                                       ; preds = %if.false
  %call34 = call %struct_template_circuit_and* @fn_template_build_and()
  %sdiv = sdiv i128 %multiand.n.read_arg_inner, 2
  %sdiv38 = sdiv i128 %multiand.n.read_arg_inner, 2
  %sub = sub i128 %multiand.n.read_arg_inner, %sdiv38
  %call40 = call %struct_template_circuit_multiand* @fn_template_build_multiand(i128 %sdiv)
  %ands42 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 0
  store %struct_template_circuit_multiand* %call40, %struct_template_circuit_multiand** %ands42, align 8
  %call44 = call %struct_template_circuit_multiand* @fn_template_build_multiand(i128 %sub)
  %ands46 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 1
  store %struct_template_circuit_multiand* %call44, %struct_template_circuit_multiand** %ands46, align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %if.false11
  %i.0 = phi i128 [ 0, %if.false11 ], [ %add, %loop.latch ]
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner, i128 0, i128 %i.0
  %in50 = load i128, i128* %array_getter49, align 4
  %array_getter52 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 0
  %ands53 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter52, align 8
  %ptr_cast = bitcast %struct_template_circuit_multiand* %ands53 to %struct_template_circuit_multiand*
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast, i32 0, i32 1
  %multiand.in.read_input_inner55 = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner55, i128 0, i128 %i.0
  %ands58 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %ands58, i128 %in50, i1* @constraint.65)
  %array_getter60 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 0
  %ands61 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter60, align 8
  %ptr_cast62 = bitcast %struct_template_circuit_multiand* %ands61 to %struct_template_circuit_multiand*
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast62, i32 0, i32 1
  %multiand.in.read_input_inner64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %ands66 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner64, i128 0, i128 %i.0
  store i128 %in50, i128* %ands66, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %sdiv
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body70

loop.body70:                                      ; preds = %loop.latch94, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add96, %loop.latch94 ]
  %add74 = add i128 %sdiv, %i.1
  %array_getter75 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner, i128 0, i128 %add74
  %in76 = load i128, i128* %array_getter75, align 4
  %array_getter78 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 1
  %ands79 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter78, align 8
  %ptr_cast80 = bitcast %struct_template_circuit_multiand* %ands79 to %struct_template_circuit_multiand*
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast80, i32 0, i32 1
  %multiand.in.read_input_inner82 = load [256 x i128]*, [256 x i128]** %struct_getter81, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner82, i128 0, i128 %i.1
  %ands85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_add_constraint(i128 %ands85, i128 %in76, i1* @constraint.66)
  %array_getter87 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 1
  %ands88 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter87, align 8
  %ptr_cast89 = bitcast %struct_template_circuit_multiand* %ands88 to %struct_template_circuit_multiand*
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast89, i32 0, i32 1
  %multiand.in.read_input_inner91 = load [256 x i128]*, [256 x i128]** %struct_getter90, align 8
  %ands93 = getelementptr inbounds [256 x i128], [256 x i128]* %multiand.in.read_input_inner91, i128 0, i128 %i.1
  store i128 %in76, i128* %ands93, align 4
  br label %loop.latch94

loop.latch94:                                     ; preds = %loop.body70
  %add96 = add i128 %i.1, 1
  %slt99 = icmp slt i128 %add96, %sub
  br i1 %slt99, label %loop.body70, label %loop.exit100

loop.exit100:                                     ; preds = %loop.latch94
  %array_getter102 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 0
  %ands103 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter102, align 8
  %ptr_cast104 = bitcast %struct_template_circuit_multiand* %ands103 to %struct_template_circuit_multiand*
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast104, i32 0, i32 2
  %multiand.out.read_output_inner106 = load i128, i128* %struct_getter105, align 4
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call34, i32 0, i32 0
  %and.a.read_input_outter109 = load i128, i128* %struct_getter108, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.a.read_input_outter109, i128 %multiand.out.read_output_inner106, i1* @constraint.67)
  %and.a.write_input_outter111 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call34, i32 0, i32 0
  store i128 %multiand.out.read_output_inner106, i128* %and.a.write_input_outter111, align 4
  %array_getter113 = getelementptr inbounds [256 x %struct_template_circuit_multiand*], [256 x %struct_template_circuit_multiand*]* %ands3, i128 0, i128 1
  %ands114 = load %struct_template_circuit_multiand*, %struct_template_circuit_multiand** %array_getter113, align 8
  %ptr_cast115 = bitcast %struct_template_circuit_multiand* %ands114 to %struct_template_circuit_multiand*
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %ptr_cast115, i32 0, i32 2
  %multiand.out.read_output_inner117 = load i128, i128* %struct_getter116, align 4
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call34, i32 0, i32 1
  %and.b.read_input_outter120 = load i128, i128* %struct_getter119, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.b.read_input_outter120, i128 %multiand.out.read_output_inner117, i1* @constraint.68)
  %and.b.write_input_outter122 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call34, i32 0, i32 1
  store i128 %multiand.out.read_output_inner117, i128* %and.b.write_input_outter122, align 4
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %call34, i32 0, i32 2
  %and.out.read_output_outter125 = load i128, i128* %struct_getter124, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %and.out.read_output_outter125, i1* @constraint.69)
  %multiand.out.write_output_inner128 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %and.out.read_output_outter125, i128* %multiand.out.write_output_inner128, align 4
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  %multiand.out.read_output_inner131 = load i128, i128* %struct_getter130, align 4
  br label %if.exit

if.exit:                                          ; preds = %loop.exit100, %if.true10
  %multiand.out.declare_output.0 = phi i128 [ %multiand.out.read_output_inner33, %if.true10 ], [ %multiand.out.read_output_inner131, %loop.exit100 ]
  br label %if.exit132

if.exit132:                                       ; preds = %if.exit, %if.true
  %multiand.out.declare_output.1 = phi i128 [ %multiand.out.read_output_inner, %if.true ], [ %multiand.out.declare_output.0, %if.exit ]
  br label %exit

exit:                                             ; preds = %if.exit132
  %multiand.out.write_output_inner134 = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %0, i32 0, i32 2
  store i128 %multiand.out.declare_output.1, i128* %multiand.out.write_output_inner134, align 4
  ret void
}

define %struct_template_circuit_multiand* @fn_template_build_multiand(i128 %0) {
entry:
  %struct_template_circuit_multiand = alloca %struct_template_circuit_multiand, align 8
  %multiand.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_multiand, %struct_template_circuit_multiand* %struct_template_circuit_multiand, i32 0, i32 0
  store i128 %0, i128* %multiand.n.write_arg_inner, align 4
  ret %struct_template_circuit_multiand* %struct_template_circuit_multiand
}

define [256 x i128]* @long_add_unequal(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %carry3 = call i128 @fn_intrinsic_inline_init()
  %sumAndCarry = alloca [256 x i128]*, align 8
  %sumAndCarry4 = alloca [256 x i128], align 8
  store [256 x i128]* %sumAndCarry4, [256 x i128]** %sumAndCarry, align 8
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add42, %loop.latch ]
  %carry.0 = phi i128 [ 0, %entry ], [ %carry.1, %loop.latch ]
  %slt = icmp slt i128 %i.0, %2
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %a7 = load i128, i128* %array_getter, align 4
  %array_getter9 = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %b10 = load i128, i128* %array_getter9, align 4
  %add = add i128 %a7, %b10
  %add12 = add i128 %add, %carry.0
  %call = call [2 x i128]* @SplitFn(i128 %add12, i128 %0, i128 %0)
  %memcpy_ptr = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %5 = bitcast [256 x i128]** %memcpy_ptr to i8*
  %6 = bitcast [2 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry14 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry14, i128 0, i128 0
  %sumAndCarry16 = load i128, i128* %array_getter15, align 4
  %sum18 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry16, i128* %sum18, align 4
  %sumAndCarry19 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry19, i128 0, i128 1
  %sumAndCarry21 = load i128, i128* %array_getter20, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %a25 = load i128, i128* %array_getter24, align 4
  %add27 = add i128 %a25, %carry.0
  %call30 = call [2 x i128]* @SplitFn(i128 %add27, i128 %0, i128 %0)
  %memcpy_ptr31 = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %7 = bitcast [256 x i128]** %memcpy_ptr31 to i8*
  %8 = bitcast [2 x i128]* %call30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry32 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry32, i128 0, i128 0
  %sumAndCarry34 = load i128, i128* %array_getter33, align 4
  %sum37 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %sumAndCarry34, i128* %sum37, align 4
  %sumAndCarry38 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter39 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry38, i128 0, i128 1
  %sumAndCarry40 = load i128, i128* %array_getter39, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %carry.1 = phi i128 [ %sumAndCarry21, %if.true ], [ %sumAndCarry40, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add42 = add i128 %i.0, 1
  %slt44 = icmp slt i128 %add42, %1
  br i1 %slt44, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sum48 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %1
  store i128 %carry.1, i128* %sum48, align 4
  ret [256 x i128]* %uniform_array
}

define [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i3 = call i128 @fn_intrinsic_inline_init()
  %sumAndCarry = alloca [256 x i128]*, align 8
  %sumAndCarry5 = alloca [256 x i128], align 8
  store [256 x i128]* %sumAndCarry5, [256 x i128]** %sumAndCarry, align 8
  %a_idx6 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch60, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add62, %loop.latch60 ]
  %prod_val9 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %prod_val9, align 4
  %slt = icmp slt i128 %i.0, %1
  br i1 %slt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %loop.body11

if.false:                                         ; preds = %loop.body
  %sub31 = sub i128 %i.0, %1
  %add32 = add i128 %sub31, 1
  br label %loop.body33

loop.body11:                                      ; preds = %loop.latch, %if.true
  %a_idx.0 = phi i128 [ 0, %if.true ], [ %add26, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val14 = load i128, i128* %array_getter, align 4
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %a_idx.0
  %a17 = load i128, i128* %array_getter16, align 4
  %sub = sub i128 %i.0, %a_idx.0
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub
  %b21 = load i128, i128* %array_getter20, align 4
  %mul = mul i128 %a17, %b21
  %add = add i128 %prod_val14, %mul
  %prod_val24 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add, i128* %prod_val24, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add26 = add i128 %a_idx.0, 1
  %sle = icmp sle i128 %add26, %i.0
  br i1 %sle, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %if.exit

loop.body33:                                      ; preds = %loop.latch53, %if.false
  %a_idx.1 = phi i128 [ %add32, %if.false ], [ %add55, %loop.latch53 ]
  %array_getter36 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %prod_val37 = load i128, i128* %array_getter36, align 4
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %a_idx.1
  %a41 = load i128, i128* %array_getter40, align 4
  %sub45 = sub i128 %i.0, %a_idx.1
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %sub45
  %b47 = load i128, i128* %array_getter46, align 4
  %mul48 = mul i128 %a41, %b47
  %add49 = add i128 %prod_val37, %mul48
  %prod_val52 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %add49, i128* %prod_val52, align 4
  br label %loop.latch53

loop.latch53:                                     ; preds = %loop.body33
  %add55 = add i128 %a_idx.1, 1
  %slt58 = icmp slt i128 %add55, %1
  br i1 %slt58, label %loop.body33, label %loop.exit59

loop.exit59:                                      ; preds = %loop.latch53
  br label %if.exit

if.exit:                                          ; preds = %loop.exit59, %loop.exit
  br label %loop.latch60

loop.latch60:                                     ; preds = %if.exit
  %add62 = add i128 %i.0, 1
  %mul65 = mul i128 2, %1
  %sub66 = sub i128 %mul65, 1
  %slt67 = icmp slt i128 %add62, %sub66
  br i1 %slt67, label %loop.body, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch60
  %uniform_array69 = alloca [256 x i128], align 8
  %uniform_array70 = alloca [256 x [256 x i128]], align 8
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch81, %loop.exit68
  %i.1 = phi i128 [ 0, %loop.exit68 ], [ %add83, %loop.latch81 ]
  %array_getter74 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %prod_val75 = load i128, i128* %array_getter74, align 4
  %call = call [3 x i128]* @SplitThreeFn(i128 %prod_val75, i128 %0, i128 %0, i128 %0)
  %split80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %i.1
  %4 = bitcast [256 x i128]* %split80 to i8*
  %5 = bitcast [3 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([3 x i128]* getelementptr ([3 x i128], [3 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.body71
  %add83 = add i128 %i.1, 1
  %mul86 = mul i128 2, %1
  %sub87 = sub i128 %mul86, 1
  %slt88 = icmp slt i128 %add83, %sub87
  br i1 %slt88, label %loop.body71, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch81
  %uniform_array90 = alloca [256 x i128], align 8
  %carry92 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 0
  store i128 0, i128* %carry92, align 4
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 0, i128 0
  %split95 = load i128, i128* %array_getter94, align 4
  %out97 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 0
  store i128 %split95, i128* %out97, align 4
  %mul101 = mul i128 2, %1
  %sub102 = sub i128 %mul101, 1
  %sgt = icmp sgt i128 %sub102, 1
  br i1 %sgt, label %if.true98, label %if.false99

if.true98:                                        ; preds = %loop.exit89
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 0, i128 1
  %split105 = load i128, i128* %array_getter104, align 4
  %array_getter107 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 1, i128 0
  %split108 = load i128, i128* %array_getter107, align 4
  %add109 = add i128 %split105, %split108
  %call112 = call [2 x i128]* @SplitFn(i128 %add109, i128 %0, i128 %0)
  %memcpy_ptr = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %6 = bitcast [256 x i128]** %memcpy_ptr to i8*
  %7 = bitcast [2 x i128]* %call112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry113 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry113, i128 0, i128 0
  %sumAndCarry115 = load i128, i128* %array_getter114, align 4
  %out117 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 1
  store i128 %sumAndCarry115, i128* %out117, align 4
  %sumAndCarry118 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter119 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry118, i128 0, i128 1
  %sumAndCarry120 = load i128, i128* %array_getter119, align 4
  %carry122 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 1
  store i128 %sumAndCarry120, i128* %carry122, align 4
  br label %if.exit123

if.false99:                                       ; preds = %loop.exit89
  br label %if.exit123

if.exit123:                                       ; preds = %if.false99, %if.true98
  %mul127 = mul i128 2, %1
  %sub128 = sub i128 %mul127, 1
  %sgt129 = icmp sgt i128 %sub128, 2
  br i1 %sgt129, label %if.true124, label %if.false125

if.true124:                                       ; preds = %if.exit123
  br label %loop.body130

if.false125:                                      ; preds = %if.exit123
  br label %if.exit203

loop.body130:                                     ; preds = %loop.latch169, %if.true124
  %i.2 = phi i128 [ 2, %if.true124 ], [ %add171, %loop.latch169 ]
  %array_getter133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %i.2, i128 0
  %split134 = load i128, i128* %array_getter133, align 4
  %sub137 = sub i128 %i.2, 1
  %array_getter138 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub137, i128 1
  %split139 = load i128, i128* %array_getter138, align 4
  %add140 = add i128 %split134, %split139
  %sub143 = sub i128 %i.2, 2
  %array_getter144 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub143, i128 2
  %split145 = load i128, i128* %array_getter144, align 4
  %add146 = add i128 %add140, %split145
  %sub149 = sub i128 %i.2, 1
  %array_getter150 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 %sub149
  %carry151 = load i128, i128* %array_getter150, align 4
  %add152 = add i128 %add146, %carry151
  %call155 = call [2 x i128]* @SplitFn(i128 %add152, i128 %0, i128 %0)
  %memcpy_ptr156 = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %8 = bitcast [256 x i128]** %memcpy_ptr156 to i8*
  %9 = bitcast [2 x i128]* %call155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry157 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter158 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry157, i128 0, i128 0
  %sumAndCarry159 = load i128, i128* %array_getter158, align 4
  %out162 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 %i.2
  store i128 %sumAndCarry159, i128* %out162, align 4
  %sumAndCarry163 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter164 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry163, i128 0, i128 1
  %sumAndCarry165 = load i128, i128* %array_getter164, align 4
  %carry168 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 %i.2
  store i128 %sumAndCarry165, i128* %carry168, align 4
  br label %loop.latch169

loop.latch169:                                    ; preds = %loop.body130
  %add171 = add i128 %i.2, 1
  %mul174 = mul i128 2, %1
  %sub175 = sub i128 %mul174, 1
  %slt176 = icmp slt i128 %add171, %sub175
  br i1 %slt176, label %loop.body130, label %loop.exit177

loop.exit177:                                     ; preds = %loop.latch169
  %mul180 = mul i128 2, %1
  %sub181 = sub i128 %mul180, 2
  %array_getter182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub181, i128 1
  %split183 = load i128, i128* %array_getter182, align 4
  %mul186 = mul i128 2, %1
  %sub187 = sub i128 %mul186, 3
  %array_getter188 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array70, i128 0, i128 %sub187, i128 2
  %split189 = load i128, i128* %array_getter188, align 4
  %add190 = add i128 %split183, %split189
  %mul193 = mul i128 2, %1
  %sub194 = sub i128 %mul193, 2
  %array_getter195 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array90, i128 0, i128 %sub194
  %carry196 = load i128, i128* %array_getter195, align 4
  %add197 = add i128 %add190, %carry196
  %mul200 = mul i128 2, %1
  %sub201 = sub i128 %mul200, 1
  %out202 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array69, i128 0, i128 %sub201
  store i128 %add197, i128* %out202, align 4
  br label %if.exit203

if.exit203:                                       ; preds = %loop.exit177, %if.false125
  ret [256 x i128]* %uniform_array69
}

define void @fn_template_init_lessthan(%struct_template_circuit_lessthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 0
  %lessthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 1
  %lessthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %lessthan.n.read_arg_inner, 1
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_inner, i128 0, i128 0
  %in2 = load i128, i128* %array_getter, align 4
  %lshift = shl i128 1, %lessthan.n.read_arg_inner
  %add4 = add i128 %in2, %lshift
  %array_getter6 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_inner, i128 0, i128 1
  %in7 = load i128, i128* %array_getter6, align 4
  %sub = sub i128 %add4, %in7
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter9, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %sub, i1* @constraint.70)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %sub, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter11, align 8
  %array_getter13 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %lessthan.n.read_arg_inner
  %n2b14 = load i128, i128* %array_getter13, align 4
  %sub15 = sub i128 1, %n2b14
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub15, i1* @constraint.71)
  %lessthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 2
  store i128 %sub15, i128* %lessthan.out.write_output_inner, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 2
  %lessthan.out.read_output_inner = load i128, i128* %struct_getter19, align 4
  br label %exit

exit:                                             ; preds = %entry
  %lessthan.out.write_output_inner21 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_inner, i128* %lessthan.out.write_output_inner21, align 4
  ret void
}

define %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %0) {
entry:
  %struct_template_circuit_lessthan = alloca %struct_template_circuit_lessthan, align 8
  %lessthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %struct_template_circuit_lessthan, i32 0, i32 0
  store i128 %0, i128* %lessthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_lessthan* %struct_template_circuit_lessthan
}

define void @fn_template_init_bigisequal(%struct_template_circuit_bigisequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 0
  %bigisequal.k.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 1
  %bigisequal.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 2
  %bigisequal.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %total3 = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %isEquals5 = alloca [256 x %struct_template_circuit_isequal*], align 8
  %out = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %total.0 = phi i128 [ %bigisequal.k.read_arg_inner, %entry ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %isEquals7 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals5, i128 0, i128 %i.0
  store %struct_template_circuit_isequal* %call, %struct_template_circuit_isequal** %isEquals7, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigisequal.a.read_input_inner, i128 0, i128 %i.0
  %a9 = load i128, i128* %array_getter, align 4
  %array_getter12 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals5, i128 0, i128 %i.0
  %isEquals13 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter12, align 8
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals13, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %isEquals16 = load i128, i128* %array_getter15, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEquals16, i128 %a9, i1* @constraint.72)
  %array_getter19 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals5, i128 0, i128 %i.0
  %isEquals20 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter19, align 8
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals20, i32 0, i32 0
  %isequal.in.read_input_outter22 = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %isEquals23 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter22, i128 0, i128 0
  store i128 %a9, i128* %isEquals23, align 4
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %bigisequal.b.read_input_inner, i128 0, i128 %i.0
  %b26 = load i128, i128* %array_getter25, align 4
  %array_getter29 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals5, i128 0, i128 %i.0
  %isEquals30 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter29, align 8
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals30, i32 0, i32 0
  %isequal.in.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter32, i128 0, i128 1
  %isEquals34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEquals34, i128 %b26, i1* @constraint.73)
  %array_getter37 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals5, i128 0, i128 %i.0
  %isEquals38 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter37, align 8
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals38, i32 0, i32 0
  %isequal.in.read_input_outter40 = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %isEquals41 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter40, i128 0, i128 1
  store i128 %b26, i128* %isEquals41, align 4
  %array_getter45 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEquals5, i128 0, i128 %i.0
  %isEquals46 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter45, align 8
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals46, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter47, align 4
  %sub = sub i128 %total.0, %isequal.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigisequal.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call51 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call51, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter54, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.74)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call51, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call51, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %iszero.out.read_output_outter, i1* @constraint.75)
  %bigisequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 3
  store i128 %iszero.out.read_output_outter, i128* %bigisequal.out.write_output_inner, align 4
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 3
  %bigisequal.out.read_output_inner = load i128, i128* %struct_getter61, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %bigisequal.out.write_output_inner63 = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %0, i32 0, i32 3
  store i128 %bigisequal.out.read_output_inner, i128* %bigisequal.out.write_output_inner63, align 4
  ret void
}

define %struct_template_circuit_bigisequal* @fn_template_build_bigisequal(i128 %0) {
entry:
  %struct_template_circuit_bigisequal = alloca %struct_template_circuit_bigisequal, align 8
  %bigisequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigisequal, %struct_template_circuit_bigisequal* %struct_template_circuit_bigisequal, i32 0, i32 0
  store i128 %0, i128* %bigisequal.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigisequal* %struct_template_circuit_bigisequal
}

define void @fn_template_init_num2bitsneg(%struct_template_circuit_num2bitsneg* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %0, i32 0, i32 0
  %num2bitsneg.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %0, i32 0, i32 1
  %num2bitsneg.in.read_input_inner = load i128, i128* %struct_getter1, align 4
  %lc12 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %neg3 = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %eq = icmp eq i128 %num2bitsneg.n.read_arg_inner, 0
  %pow = call i128 @fn_intrinsic_inline_powi(i128 2, i128 %num2bitsneg.n.read_arg_inner)
  %sub = sub i128 %pow, %num2bitsneg.in.read_input_inner
  %inline_switch = call i128 @fn_intrinsic_inline_switch(i1 %eq, i128 0, i128 %sub)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %lc1.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add27, %loop.latch ]
  %rshift = lshr i128 %inline_switch, %i.0
  %and = and i128 %rshift, 1
  %out9 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %and, i128* %out9, align 4
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out12 = load i128, i128* %array_getter, align 4
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out16 = load i128, i128* %array_getter15, align 4
  %sub17 = sub i128 %out16, 1
  %mul = mul i128 %out12, %sub17
  call void @fn_intrinsic_add_constraint(i128 %mul, i128 0, i1* @constraint.76)
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out22 = load i128, i128* %array_getter21, align 4
  %pow24 = call i128 @fn_intrinsic_inline_powi(i128 2, i128 %i.0)
  %mul25 = mul i128 %out22, %pow24
  %add = add i128 %lc1.0, %mul25
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add27 = add i128 %i.0, 1
  %slt = icmp slt i128 %add27, %num2bitsneg.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter32, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %num2bitsneg.in.read_input_inner, i1* @constraint.77)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  store i128 %num2bitsneg.in.read_input_inner, i128* %iszero.in.write_input_outter, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter36, align 4
  %pow38 = call i128 @fn_intrinsic_inline_powi(i128 2, i128 %num2bitsneg.n.read_arg_inner)
  %mul39 = mul i128 %iszero.out.read_output_outter, %pow38
  %add40 = add i128 %add, %mul39
  %pow42 = call i128 @fn_intrinsic_inline_powi(i128 2, i128 %num2bitsneg.n.read_arg_inner)
  %sub44 = sub i128 %pow42, %num2bitsneg.in.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %add40, i128 %sub44, i1* @constraint.78)
  br label %exit

exit:                                             ; preds = %loop.exit
  %num2bitsneg.out.write_output_inner = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %0, i32 0, i32 2
  store [256 x i128]* %out, [256 x i128]** %num2bitsneg.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_num2bitsneg* @fn_template_build_num2bitsneg(i128 %0) {
entry:
  %struct_template_circuit_num2bitsneg = alloca %struct_template_circuit_num2bitsneg, align 8
  %num2bitsneg.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_num2bitsneg, %struct_template_circuit_num2bitsneg* %struct_template_circuit_num2bitsneg, i32 0, i32 0
  store i128 %0, i128* %num2bitsneg.n.write_arg_inner, align 4
  ret %struct_template_circuit_num2bitsneg* %struct_template_circuit_num2bitsneg
}

define void @fn_template_init_greaterthan(%struct_template_circuit_greaterthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 0
  %greaterthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 1
  %greaterthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %greaterthan.n.read_arg_inner)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %greaterthan.in.read_input_inner, i128 0, i128 1
  %in2 = load i128, i128* %array_getter, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter5, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt6, i128 %in2, i1* @constraint.79)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %in2, i128* %lt9, align 4
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %greaterthan.in.read_input_inner, i128 0, i128 0
  %in12 = load i128, i128* %array_getter11, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter15, i128 0, i128 1
  %lt17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt17, i128 %in12, i1* @constraint.80)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %lt21 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter20, i128 0, i128 1
  store i128 %in12, i128* %lt21, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %lessthan.out.read_output_outter, i1* @constraint.81)
  %greaterthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_outter, i128* %greaterthan.out.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 2
  %greaterthan.out.read_output_inner = load i128, i128* %struct_getter27, align 4
  br label %exit

exit:                                             ; preds = %entry
  %greaterthan.out.write_output_inner29 = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %0, i32 0, i32 2
  store i128 %greaterthan.out.read_output_inner, i128* %greaterthan.out.write_output_inner29, align 4
  ret void
}

define %struct_template_circuit_greaterthan* @fn_template_build_greaterthan(i128 %0) {
entry:
  %struct_template_circuit_greaterthan = alloca %struct_template_circuit_greaterthan, align 8
  %greaterthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_greaterthan, %struct_template_circuit_greaterthan* %struct_template_circuit_greaterthan, i32 0, i32 0
  store i128 %0, i128* %greaterthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_greaterthan* %struct_template_circuit_greaterthan
}

define void @fn_template_init_signedfp12fp2multiplynocarry(%struct_template_circuit_signedfp12fp2multiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 0
  %signedfp12fp2multiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 1
  %signedfp12fp2multiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 2
  %signedfp12fp2multiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 3
  %signedfp12fp2multiplynocarry.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 4
  %signedfp12fp2multiplynocarry.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %j5 = call i128 @fn_intrinsic_inline_init()
  %ab6 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]], align 8
  %abi7 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlong*]], align 8
  %i8 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %idx9 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch131, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add133, %loop.latch131 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch125, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add127, %loop.latch125 ]
  %call = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedfp12fp2multiplynocarry.n.read_arg_inner, i128 %signedfp12fp2multiplynocarry.k.read_arg_inner, i128 %signedfp12fp2multiplynocarry.m_out.read_arg_inner)
  %ab13 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlong* %call, %struct_template_circuit_bigmultshortlong** %ab13, align 8
  %call17 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %signedfp12fp2multiplynocarry.n.read_arg_inner, i128 %signedfp12fp2multiplynocarry.k.read_arg_inner, i128 %signedfp12fp2multiplynocarry.m_out.read_arg_inner)
  %abi21 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlong* %call17, %struct_template_circuit_bigmultshortlong** %abi21, align 8
  br label %loop.body22

loop.body22:                                      ; preds = %loop.latch, %loop.body10
  %idx.0 = phi i128 [ 0, %loop.body10 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp12fp2multiplynocarry.a.read_input_inner, i128 0, i128 0, i128 %idx.0
  %a24 = load i128, i128* %array_getter, align 4
  %array_getter28 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab29 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter28, align 8
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab29, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %idx.0
  %ab33 = load i128, i128* %array_getter32, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab33, i128 %a24, i1* @constraint.82)
  %array_getter37 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab38 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter37, align 8
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab38, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter40 = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %ab42 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter40, i128 0, i128 %idx.0
  store i128 %a24, i128* %ab42, align 4
  %array_getter46 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12fp2multiplynocarry.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b47 = load i128, i128* %array_getter46, align 4
  %array_getter51 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab52 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter51, align 8
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab52, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter53, align 8
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %idx.0
  %ab56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab56, i128 %b47, i1* @constraint.83)
  %array_getter60 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab61 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter60, align 8
  %struct_getter62 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab61, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter63 = load [256 x i128]*, [256 x i128]** %struct_getter62, align 8
  %ab65 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter63, i128 0, i128 %idx.0
  store i128 %b47, i128* %ab65, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body22
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12fp2multiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body22, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch118, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add120, %loop.latch118 ]
  %array_getter72 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp12fp2multiplynocarry.a.read_input_inner, i128 0, i128 1, i128 %idx.1
  %a73 = load i128, i128* %array_getter72, align 4
  %array_getter77 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.0, i128 %j.0
  %abi78 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter77, align 8
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi78, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter80, i128 0, i128 %idx.1
  %abi83 = load i128, i128* %array_getter82, align 4
  call void @fn_intrinsic_add_constraint(i128 %abi83, i128 %a73, i1* @constraint.84)
  %array_getter87 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.0, i128 %j.0
  %abi88 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter87, align 8
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi88, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter90 = load [256 x i128]*, [256 x i128]** %struct_getter89, align 8
  %abi92 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter90, i128 0, i128 %idx.1
  store i128 %a73, i128* %abi92, align 4
  %array_getter97 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12fp2multiplynocarry.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b98 = load i128, i128* %array_getter97, align 4
  %array_getter102 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.0, i128 %j.0
  %abi103 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter102, align 8
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi103, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter105 = load [256 x i128]*, [256 x i128]** %struct_getter104, align 8
  %array_getter107 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter105, i128 0, i128 %idx.1
  %abi108 = load i128, i128* %array_getter107, align 4
  call void @fn_intrinsic_add_constraint(i128 %abi108, i128 %b98, i1* @constraint.85)
  %array_getter112 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.0, i128 %j.0
  %abi113 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter112, align 8
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi113, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter115 = load [256 x i128]*, [256 x i128]** %struct_getter114, align 8
  %abi117 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter115, i128 0, i128 %idx.1
  store i128 %b98, i128* %abi117, align 4
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.body69
  %add120 = add i128 %idx.1, 1
  %slt123 = icmp slt i128 %add120, %signedfp12fp2multiplynocarry.k.read_arg_inner
  br i1 %slt123, label %loop.body69, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.exit124
  %add127 = add i128 %j.0, 1
  %slt129 = icmp slt i128 %add127, 2
  br i1 %slt129, label %loop.body10, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch125
  br label %loop.latch131

loop.latch131:                                    ; preds = %loop.exit130
  %add133 = add i128 %i.0, 1
  %slt135 = icmp slt i128 %add133, 6
  br i1 %slt135, label %loop.body, label %loop.exit136

loop.exit136:                                     ; preds = %loop.latch131
  br label %loop.body137

loop.body137:                                     ; preds = %loop.latch201, %loop.exit136
  %i.1 = phi i128 [ 0, %loop.exit136 ], [ %add203, %loop.latch201 ]
  br label %loop.body138

loop.body138:                                     ; preds = %loop.latch193, %loop.body137
  %idx.2 = phi i128 [ 0, %loop.body137 ], [ %add195, %loop.latch193 ]
  %array_getter141 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.1, i128 0
  %ab142 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter141, align 8
  %struct_getter143 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab142, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter143, align 8
  %array_getter145 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %idx.2
  %ab146 = load i128, i128* %array_getter145, align 4
  %array_getter149 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.1, i128 1
  %abi150 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter149, align 8
  %struct_getter151 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi150, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter152 = load [256 x i128]*, [256 x i128]** %struct_getter151, align 8
  %array_getter154 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter152, i128 0, i128 %idx.2
  %abi155 = load i128, i128* %array_getter154, align 4
  %sub = sub i128 %ab146, %abi155
  %array_getter159 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 0, i128 %idx.2
  %out160 = load i128, i128* %array_getter159, align 4
  call void @fn_intrinsic_add_constraint(i128 %out160, i128 %sub, i1* @constraint.86)
  %out164 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 0, i128 %idx.2
  store i128 %sub, i128* %out164, align 4
  %array_getter167 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %abi7, i128 0, i128 %i.1, i128 0
  %abi168 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter167, align 8
  %struct_getter169 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %abi168, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter170 = load [256 x i128]*, [256 x i128]** %struct_getter169, align 8
  %array_getter172 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter170, i128 0, i128 %idx.2
  %abi173 = load i128, i128* %array_getter172, align 4
  %array_getter176 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlong*]], [256 x [256 x %struct_template_circuit_bigmultshortlong*]]* %ab6, i128 0, i128 %i.1, i128 1
  %ab177 = load %struct_template_circuit_bigmultshortlong*, %struct_template_circuit_bigmultshortlong** %array_getter176, align 8
  %struct_getter178 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %ab177, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter179 = load [256 x i128]*, [256 x i128]** %struct_getter178, align 8
  %array_getter181 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter179, i128 0, i128 %idx.2
  %ab182 = load i128, i128* %array_getter181, align 4
  %add183 = add i128 %abi173, %ab182
  %array_getter187 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 1, i128 %idx.2
  %out188 = load i128, i128* %array_getter187, align 4
  call void @fn_intrinsic_add_constraint(i128 %out188, i128 %add183, i1* @constraint.87)
  %out192 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 1, i128 %idx.2
  store i128 %add183, i128* %out192, align 4
  br label %loop.latch193

loop.latch193:                                    ; preds = %loop.body138
  %add195 = add i128 %idx.2, 1
  %mul = mul i128 2, %signedfp12fp2multiplynocarry.k.read_arg_inner
  %sub198 = sub i128 %mul, 1
  %slt199 = icmp slt i128 %add195, %sub198
  br i1 %slt199, label %loop.body138, label %loop.exit200

loop.exit200:                                     ; preds = %loop.latch193
  br label %loop.latch201

loop.latch201:                                    ; preds = %loop.exit200
  %add203 = add i128 %i.1, 1
  %slt205 = icmp slt i128 %add203, 6
  br i1 %slt205, label %loop.body137, label %loop.exit206

loop.exit206:                                     ; preds = %loop.latch201
  br label %exit

exit:                                             ; preds = %loop.exit206
  %signedfp12fp2multiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12fp2multiplynocarry* @fn_template_build_signedfp12fp2multiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp12fp2multiplynocarry = alloca %struct_template_circuit_signedfp12fp2multiplynocarry, align 8
  %signedfp12fp2multiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12fp2multiplynocarry.n.write_arg_inner, align 4
  %signedfp12fp2multiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12fp2multiplynocarry.k.write_arg_inner, align 4
  %signedfp12fp2multiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarry, %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp12fp2multiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12fp2multiplynocarry* %struct_template_circuit_signedfp12fp2multiplynocarry
}

define void @fn_template_init_modsumthree(%struct_template_circuit_modsumthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 0
  %modsumthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 1
  %modsumthree.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 2
  %modsumthree.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 3
  %modsumthree.c.read_input_inner = load i128, i128* %struct_getter3, align 4
  %sum = call i128 @fn_intrinsic_inline_init()
  %carry = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %modsumthree.n.read_arg_inner, 2
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add)
  %add4 = add i128 %modsumthree.a.read_input_inner, %modsumthree.b.read_input_inner
  %add5 = add i128 %add4, %modsumthree.c.read_input_inner
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter7, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %add5, i1* @constraint.88)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %add5, i128* %num2bits.in.write_input_outter, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %modsumthree.n.read_arg_inner
  %n2b11 = load i128, i128* %array_getter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter14 = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %add16 = add i128 %modsumthree.n.read_arg_inner, 1
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter14, i128 0, i128 %add16
  %n2b18 = load i128, i128* %array_getter17, align 4
  %mul = mul i128 2, %n2b18
  %add19 = add i128 %n2b11, %mul
  call void @fn_intrinsic_add_constraint(i128 %carry, i128 %add19, i1* @constraint.89)
  %modsumthree.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 5
  store i128 %add19, i128* %modsumthree.carry.write_output_inner, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 5
  %modsumthree.carry.read_output_inner = load i128, i128* %struct_getter23, align 4
  %add26 = add i128 %modsumthree.a.read_input_inner, %modsumthree.b.read_input_inner
  %add28 = add i128 %add26, %modsumthree.c.read_input_inner
  %lshift = shl i128 1, %modsumthree.n.read_arg_inner
  %mul31 = mul i128 %modsumthree.carry.read_output_inner, %lshift
  %sub = sub i128 %add28, %mul31
  call void @fn_intrinsic_add_constraint(i128 %sum, i128 %sub, i1* @constraint.90)
  %modsumthree.sum.write_output_inner = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 4
  store i128 %sub, i128* %modsumthree.sum.write_output_inner, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 4
  %modsumthree.sum.read_output_inner = load i128, i128* %struct_getter35, align 4
  br label %exit

exit:                                             ; preds = %entry
  %modsumthree.sum.write_output_inner37 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 4
  store i128 %modsumthree.sum.read_output_inner, i128* %modsumthree.sum.write_output_inner37, align 4
  %modsumthree.carry.write_output_inner39 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %0, i32 0, i32 5
  store i128 %modsumthree.carry.read_output_inner, i128* %modsumthree.carry.write_output_inner39, align 4
  ret void
}

define %struct_template_circuit_modsumthree* @fn_template_build_modsumthree(i128 %0) {
entry:
  %struct_template_circuit_modsumthree = alloca %struct_template_circuit_modsumthree, align 8
  %modsumthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %struct_template_circuit_modsumthree, i32 0, i32 0
  store i128 %0, i128* %modsumthree.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsumthree* %struct_template_circuit_modsumthree
}

define void @fn_template_init_signedfp12scalarmultiplynocarryunequal(%struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 0
  %signedfp12scalarmultiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 1
  %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 2
  %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 3
  %signedfp12scalarmultiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 4
  %signedfp12scalarmultiplynocarryunequal.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 5
  %signedfp12scalarmultiplynocarryunequal.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %j6 = call i128 @fn_intrinsic_inline_init()
  %idx7 = call i128 @fn_intrinsic_inline_init()
  %ab8 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  %i9 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch75, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add77, %loop.latch75 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch69, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add71, %loop.latch69 ]
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp12scalarmultiplynocarryunequal.n.read_arg_inner, i128 %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner, i128 %signedfp12scalarmultiplynocarryunequal.m_out.read_arg_inner)
  %ab13 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call, %struct_template_circuit_bigmultshortlongunequal** %ab13, align 8
  br label %loop.body14

loop.body14:                                      ; preds = %loop.latch, %loop.body10
  %idx.0 = phi i128 [ 0, %loop.body10 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %signedfp12scalarmultiplynocarryunequal.a.read_input_inner, i128 0, i128 %idx.0
  %a16 = load i128, i128* %array_getter, align 4
  %array_getter20 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, i128 0, i128 %i.0, i128 %j.0
  %ab21 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter20, align 8
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab21, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %idx.0
  %ab25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab25, i128 %a16, i1* @constraint.91)
  %array_getter29 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, i128 0, i128 %i.0, i128 %j.0
  %ab30 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter29, align 8
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab30, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %ab34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter32, i128 0, i128 %idx.0
  store i128 %a16, i128* %ab34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body14
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body14, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch62, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add64, %loop.latch62 ]
  %array_getter42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12scalarmultiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b43 = load i128, i128* %array_getter42, align 4
  %array_getter47 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, i128 0, i128 %i.0, i128 %j.0
  %ab48 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter47, align 8
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab48, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %idx.1
  %ab52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab52, i128 %b43, i1* @constraint.92)
  %array_getter56 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, i128 0, i128 %i.0, i128 %j.0
  %ab57 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab57, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %ab61 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter59, i128 0, i128 %idx.1
  store i128 %b43, i128* %ab61, align 4
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.body38
  %add64 = add i128 %idx.1, 1
  %slt67 = icmp slt i128 %add64, %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner
  br i1 %slt67, label %loop.body38, label %loop.exit68

loop.exit68:                                      ; preds = %loop.latch62
  br label %loop.latch69

loop.latch69:                                     ; preds = %loop.exit68
  %add71 = add i128 %j.0, 1
  %slt73 = icmp slt i128 %add71, 2
  br i1 %slt73, label %loop.body10, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch69
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.exit74
  %add77 = add i128 %i.0, 1
  %slt79 = icmp slt i128 %add77, 6
  br i1 %slt79, label %loop.body, label %loop.exit80

loop.exit80:                                      ; preds = %loop.latch75
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch119, %loop.exit80
  %i.1 = phi i128 [ 0, %loop.exit80 ], [ %add121, %loop.latch119 ]
  br label %loop.body82

loop.body82:                                      ; preds = %loop.latch113, %loop.body81
  %j.1 = phi i128 [ 0, %loop.body81 ], [ %add115, %loop.latch113 ]
  br label %loop.body83

loop.body83:                                      ; preds = %loop.latch104, %loop.body82
  %idx.2 = phi i128 [ 0, %loop.body82 ], [ %add106, %loop.latch104 ]
  %array_getter87 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab8, i128 0, i128 %i.1, i128 %j.1
  %ab88 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter87, align 8
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab88, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter89, align 8
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %idx.2
  %ab92 = load i128, i128* %array_getter91, align 4
  %array_getter97 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  %out98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_add_constraint(i128 %out98, i128 %ab92, i1* @constraint.93)
  %out103 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.2
  store i128 %ab92, i128* %out103, align 4
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.body83
  %add106 = add i128 %idx.2, 1
  %add110 = add i128 %signedfp12scalarmultiplynocarryunequal.ka.read_arg_inner, %signedfp12scalarmultiplynocarryunequal.kb.read_arg_inner
  %sub = sub i128 %add110, 1
  %slt111 = icmp slt i128 %add106, %sub
  br i1 %slt111, label %loop.body83, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch104
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.exit112
  %add115 = add i128 %j.1, 1
  %slt117 = icmp slt i128 %add115, 2
  br i1 %slt117, label %loop.body82, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch113
  br label %loop.latch119

loop.latch119:                                    ; preds = %loop.exit118
  %add121 = add i128 %i.1, 1
  %slt123 = icmp slt i128 %add121, 6
  br i1 %slt123, label %loop.body81, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch119
  br label %exit

exit:                                             ; preds = %loop.exit124
  %signedfp12scalarmultiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12scalarmultiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* @fn_template_build_signedfp12scalarmultiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp12scalarmultiplynocarryunequal = alloca %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, align 8
  %signedfp12scalarmultiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp12scalarmultiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp12scalarmultiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp12scalarmultiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp12scalarmultiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp12scalarmultiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12scalarmultiplynocarryunequal* %struct_template_circuit_signedfp12scalarmultiplynocarryunequal
}

define void @fn_template_init_signedfp12fp2multiplynocarryunequal(%struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 0
  %signedfp12fp2multiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 1
  %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 2
  %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 3
  %signedfp12fp2multiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 4
  %signedfp12fp2multiplynocarryunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 5
  %signedfp12fp2multiplynocarryunequal.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %ab6 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  %i7 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %abi8 = alloca [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], align 8
  %idx9 = call i128 @fn_intrinsic_inline_init()
  %j10 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch133, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add135, %loop.latch133 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch127, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add129, %loop.latch127 ]
  %call = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp12fp2multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.m_out.read_arg_inner)
  %ab14 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call, %struct_template_circuit_bigmultshortlongunequal** %ab14, align 8
  %call19 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %signedfp12fp2multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner, i128 %signedfp12fp2multiplynocarryunequal.m_out.read_arg_inner)
  %abi23 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_bigmultshortlongunequal* %call19, %struct_template_circuit_bigmultshortlongunequal** %abi23, align 8
  br label %loop.body24

loop.body24:                                      ; preds = %loop.latch, %loop.body11
  %idx.0 = phi i128 [ 0, %loop.body11 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp12fp2multiplynocarryunequal.a.read_input_inner, i128 0, i128 0, i128 %idx.0
  %a26 = load i128, i128* %array_getter, align 4
  %array_getter30 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab31 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter30, align 8
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab31, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter32, align 8
  %array_getter34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %idx.0
  %ab35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab35, i128 %a26, i1* @constraint.94)
  %array_getter39 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab40 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter39, align 8
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab40, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter42 = load [256 x i128]*, [256 x i128]** %struct_getter41, align 8
  %ab44 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter42, i128 0, i128 %idx.0
  store i128 %a26, i128* %ab44, align 4
  %array_getter47 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp12fp2multiplynocarryunequal.a.read_input_inner, i128 0, i128 1, i128 %idx.0
  %a48 = load i128, i128* %array_getter47, align 4
  %array_getter52 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.0, i128 %j.0
  %abi53 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter52, align 8
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi53, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter55 = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter55, i128 0, i128 %idx.0
  %abi58 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %abi58, i128 %a48, i1* @constraint.95)
  %array_getter62 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.0, i128 %j.0
  %abi63 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter62, align 8
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi63, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter65 = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %abi67 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter65, i128 0, i128 %idx.0
  store i128 %a48, i128* %abi67, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body24
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body24, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch120, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add122, %loop.latch120 ]
  %array_getter75 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12fp2multiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b76 = load i128, i128* %array_getter75, align 4
  %array_getter80 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab81 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter80, align 8
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab81, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter82, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %idx.1
  %ab85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab85, i128 %b76, i1* @constraint.96)
  %array_getter89 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.0, i128 %j.0
  %ab90 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter89, align 8
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab90, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter92 = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %ab94 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter92, i128 0, i128 %idx.1
  store i128 %b76, i128* %ab94, align 4
  %array_getter99 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12fp2multiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %b100 = load i128, i128* %array_getter99, align 4
  %array_getter104 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.0, i128 %j.0
  %abi105 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter104, align 8
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi105, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter107 = load [256 x i128]*, [256 x i128]** %struct_getter106, align 8
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter107, i128 0, i128 %idx.1
  %abi110 = load i128, i128* %array_getter109, align 4
  call void @fn_intrinsic_add_constraint(i128 %abi110, i128 %b100, i1* @constraint.97)
  %array_getter114 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.0, i128 %j.0
  %abi115 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter114, align 8
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi115, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter117 = load [256 x i128]*, [256 x i128]** %struct_getter116, align 8
  %abi119 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter117, i128 0, i128 %idx.1
  store i128 %b100, i128* %abi119, align 4
  br label %loop.latch120

loop.latch120:                                    ; preds = %loop.body71
  %add122 = add i128 %idx.1, 1
  %slt125 = icmp slt i128 %add122, %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner
  br i1 %slt125, label %loop.body71, label %loop.exit126

loop.exit126:                                     ; preds = %loop.latch120
  br label %loop.latch127

loop.latch127:                                    ; preds = %loop.exit126
  %add129 = add i128 %j.0, 1
  %slt131 = icmp slt i128 %add129, 2
  br i1 %slt131, label %loop.body11, label %loop.exit132

loop.exit132:                                     ; preds = %loop.latch127
  br label %loop.latch133

loop.latch133:                                    ; preds = %loop.exit132
  %add135 = add i128 %i.0, 1
  %slt137 = icmp slt i128 %add135, 6
  br i1 %slt137, label %loop.body, label %loop.exit138

loop.exit138:                                     ; preds = %loop.latch133
  br label %loop.body139

loop.body139:                                     ; preds = %loop.latch205, %loop.exit138
  %i.1 = phi i128 [ 0, %loop.exit138 ], [ %add207, %loop.latch205 ]
  br label %loop.body140

loop.body140:                                     ; preds = %loop.latch195, %loop.body139
  %idx.2 = phi i128 [ 0, %loop.body139 ], [ %add197, %loop.latch195 ]
  %array_getter143 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.1, i128 0
  %ab144 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter143, align 8
  %struct_getter145 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab144, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter145, align 8
  %array_getter147 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %idx.2
  %ab148 = load i128, i128* %array_getter147, align 4
  %array_getter151 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.1, i128 1
  %abi152 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter151, align 8
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi152, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter154 = load [256 x i128]*, [256 x i128]** %struct_getter153, align 8
  %array_getter156 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter154, i128 0, i128 %idx.2
  %abi157 = load i128, i128* %array_getter156, align 4
  %sub = sub i128 %ab148, %abi157
  %array_getter161 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 0, i128 %idx.2
  %out162 = load i128, i128* %array_getter161, align 4
  call void @fn_intrinsic_add_constraint(i128 %out162, i128 %sub, i1* @constraint.98)
  %out166 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 0, i128 %idx.2
  store i128 %sub, i128* %out166, align 4
  %array_getter169 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %abi8, i128 0, i128 %i.1, i128 0
  %abi170 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter169, align 8
  %struct_getter171 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %abi170, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter172 = load [256 x i128]*, [256 x i128]** %struct_getter171, align 8
  %array_getter174 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter172, i128 0, i128 %idx.2
  %abi175 = load i128, i128* %array_getter174, align 4
  %array_getter178 = getelementptr inbounds [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]], [256 x [256 x %struct_template_circuit_bigmultshortlongunequal*]]* %ab6, i128 0, i128 %i.1, i128 1
  %ab179 = load %struct_template_circuit_bigmultshortlongunequal*, %struct_template_circuit_bigmultshortlongunequal** %array_getter178, align 8
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %ab179, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter181 = load [256 x i128]*, [256 x i128]** %struct_getter180, align 8
  %array_getter183 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter181, i128 0, i128 %idx.2
  %ab184 = load i128, i128* %array_getter183, align 4
  %add185 = add i128 %abi175, %ab184
  %array_getter189 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 1, i128 %idx.2
  %out190 = load i128, i128* %array_getter189, align 4
  call void @fn_intrinsic_add_constraint(i128 %out190, i128 %add185, i1* @constraint.99)
  %out194 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 1, i128 %idx.2
  store i128 %add185, i128* %out194, align 4
  br label %loop.latch195

loop.latch195:                                    ; preds = %loop.body140
  %add197 = add i128 %idx.2, 1
  %add201 = add i128 %signedfp12fp2multiplynocarryunequal.ka.read_arg_inner, %signedfp12fp2multiplynocarryunequal.kb.read_arg_inner
  %sub202 = sub i128 %add201, 1
  %slt203 = icmp slt i128 %add197, %sub202
  br i1 %slt203, label %loop.body140, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch195
  br label %loop.latch205

loop.latch205:                                    ; preds = %loop.exit204
  %add207 = add i128 %i.1, 1
  %slt209 = icmp slt i128 %add207, 6
  br i1 %slt209, label %loop.body139, label %loop.exit210

loop.exit210:                                     ; preds = %loop.latch205
  br label %exit

exit:                                             ; preds = %loop.exit210
  %signedfp12fp2multiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12fp2multiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12fp2multiplynocarryunequal* @fn_template_build_signedfp12fp2multiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp12fp2multiplynocarryunequal = alloca %struct_template_circuit_signedfp12fp2multiplynocarryunequal, align 8
  %signedfp12fp2multiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp12fp2multiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp12fp2multiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp12fp2multiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp12fp2multiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp12fp2multiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp12fp2multiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12fp2multiplynocarryunequal, %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp12fp2multiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12fp2multiplynocarryunequal* %struct_template_circuit_signedfp12fp2multiplynocarryunequal
}

define void @fn_template_init_modprod(%struct_template_circuit_modprod* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 0
  %modprod.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 1
  %modprod.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 2
  %modprod.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %i3 = call i128 @fn_intrinsic_inline_init()
  %prod = call i128 @fn_intrinsic_inline_init()
  %carry = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 2, %modprod.n.read_arg_inner
  %call = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %mul)
  %mul4 = mul i128 %modprod.a.read_input_inner, %modprod.b.read_input_inner
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter6, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %mul4, i1* @constraint.100)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 1
  store i128 %mul4, i128* %num2bits.in.write_input_outter, align 4
  %call8 = call %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 %modprod.n.read_arg_inner)
  %call10 = call %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 %modprod.n.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add44, %loop.latch ]
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter12, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %i.0
  %n2b14 = load i128, i128* %array_getter, align 4
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call8, i32 0, i32 1
  %bits2num.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter16, align 8
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter, i128 0, i128 %i.0
  %b2n119 = load i128, i128* %array_getter18, align 4
  call void @fn_intrinsic_add_constraint(i128 %b2n119, i128 %n2b14, i1* @constraint.101)
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call8, i32 0, i32 1
  %bits2num.in.read_input_outter22 = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %b2n124 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter22, i128 0, i128 %i.0
  store i128 %n2b14, i128* %b2n124, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call, i32 0, i32 2
  %num2bits.out.read_output_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %add = add i128 %i.0, %modprod.n.read_arg_inner
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter27, i128 0, i128 %add
  %n2b31 = load i128, i128* %array_getter30, align 4
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call10, i32 0, i32 1
  %bits2num.in.read_input_outter34 = load [256 x i128]*, [256 x i128]** %struct_getter33, align 8
  %array_getter36 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter34, i128 0, i128 %i.0
  %b2n237 = load i128, i128* %array_getter36, align 4
  call void @fn_intrinsic_add_constraint(i128 %b2n237, i128 %n2b31, i1* @constraint.102)
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call10, i32 0, i32 1
  %bits2num.in.read_input_outter40 = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %b2n242 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter40, i128 0, i128 %i.0
  store i128 %n2b31, i128* %b2n242, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add44 = add i128 %i.0, 1
  %slt = icmp slt i128 %add44, %modprod.n.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call8, i32 0, i32 2
  %bits2num.out.read_output_outter = load i128, i128* %struct_getter48, align 4
  call void @fn_intrinsic_add_constraint(i128 %prod, i128 %bits2num.out.read_output_outter, i1* @constraint.103)
  %modprod.prod.write_output_inner = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 3
  store i128 %bits2num.out.read_output_outter, i128* %modprod.prod.write_output_inner, align 4
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 3
  %modprod.prod.read_output_inner = load i128, i128* %struct_getter52, align 4
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call10, i32 0, i32 2
  %bits2num.out.read_output_outter55 = load i128, i128* %struct_getter54, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry, i128 %bits2num.out.read_output_outter55, i1* @constraint.104)
  %modprod.carry.write_output_inner = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 4
  store i128 %bits2num.out.read_output_outter55, i128* %modprod.carry.write_output_inner, align 4
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 4
  %modprod.carry.read_output_inner = load i128, i128* %struct_getter59, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %modprod.prod.write_output_inner61 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 3
  store i128 %modprod.prod.read_output_inner, i128* %modprod.prod.write_output_inner61, align 4
  %modprod.carry.write_output_inner63 = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %0, i32 0, i32 4
  store i128 %modprod.carry.read_output_inner, i128* %modprod.carry.write_output_inner63, align 4
  ret void
}

define %struct_template_circuit_modprod* @fn_template_build_modprod(i128 %0) {
entry:
  %struct_template_circuit_modprod = alloca %struct_template_circuit_modprod, align 8
  %modprod.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modprod, %struct_template_circuit_modprod* %struct_template_circuit_modprod, i32 0, i32 0
  store i128 %0, i128* %modprod.n.write_arg_inner, align 4
  ret %struct_template_circuit_modprod* %struct_template_circuit_modprod
}

define void @fn_template_init_forceequalifenabled(%struct_template_circuit_forceequalifenabled* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_forceequalifenabled, %struct_template_circuit_forceequalifenabled* %0, i32 0, i32 0
  %forceequalifenabled.enabled.read_input_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_forceequalifenabled, %struct_template_circuit_forceequalifenabled* %0, i32 0, i32 1
  %forceequalifenabled.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %call = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %forceequalifenabled.in.read_input_inner, i128 0, i128 1
  %in2 = load i128, i128* %array_getter, align 4
  %array_getter4 = getelementptr inbounds [256 x i128], [256 x i128]* %forceequalifenabled.in.read_input_inner, i128 0, i128 0
  %in5 = load i128, i128* %array_getter4, align 4
  %sub = sub i128 %in2, %in5
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter7, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.105)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter9, align 4
  %sub10 = sub i128 1, %iszero.out.read_output_outter
  %mul = mul i128 %sub10, %forceequalifenabled.enabled.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %mul, i128 0, i1* @constraint.106)
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

define %struct_template_circuit_forceequalifenabled* @fn_template_build_forceequalifenabled() {
entry:
  %struct_template_circuit_forceequalifenabled = alloca %struct_template_circuit_forceequalifenabled, align 8
  ret %struct_template_circuit_forceequalifenabled* %struct_template_circuit_forceequalifenabled
}

define void @fn_template_init_bigadd(%struct_template_circuit_bigadd* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 0
  %bigadd.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 1
  %bigadd.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 2
  %bigadd.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 3
  %bigadd.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i4 = call i128 @fn_intrinsic_inline_init()
  %unit5 = alloca [256 x %struct_template_circuit_modsumthree*], align 8
  %call = call %struct_template_circuit_modsum* @fn_template_build_modsum(i128 %bigadd.n.read_arg_inner)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_inner, i128 0, i128 0
  %a6 = load i128, i128* %array_getter, align 4
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 1
  %modsum.a.read_input_outter = load i128, i128* %struct_getter8, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsum.a.read_input_outter, i128 %a6, i1* @constraint.107)
  %modsum.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 1
  store i128 %a6, i128* %modsum.a.write_input_outter, align 4
  %array_getter9 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_inner, i128 0, i128 0
  %b10 = load i128, i128* %array_getter9, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 2
  %modsum.b.read_input_outter = load i128, i128* %struct_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsum.b.read_input_outter, i128 %b10, i1* @constraint.108)
  %modsum.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 2
  store i128 %b10, i128* %modsum.b.write_input_outter, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 3
  %modsum.sum.read_output_outter = load i128, i128* %struct_getter15, align 4
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  %out18 = load i128, i128* %array_getter17, align 4
  call void @fn_intrinsic_add_constraint(i128 %out18, i128 %modsum.sum.read_output_outter, i1* @constraint.109)
  %out20 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  store i128 %modsum.sum.read_output_outter, i128* %out20, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %call22 = call %struct_template_circuit_modsumthree* @fn_template_build_modsumthree(i128 %bigadd.n.read_arg_inner)
  %sub = sub i128 %i.0, 1
  %unit25 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub
  store %struct_template_circuit_modsumthree* %call22, %struct_template_circuit_modsumthree** %unit25, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_inner, i128 0, i128 %i.0
  %a29 = load i128, i128* %array_getter28, align 4
  %sub32 = sub i128 %i.0, 1
  %array_getter33 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub32
  %unit34 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter33, align 8
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit34, i32 0, i32 1
  %modsumthree.a.read_input_outter = load i128, i128* %struct_getter35, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsumthree.a.read_input_outter, i128 %a29, i1* @constraint.110)
  %sub38 = sub i128 %i.0, 1
  %array_getter39 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub38
  %unit40 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter39, align 8
  %modsumthree.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit40, i32 0, i32 1
  store i128 %a29, i128* %modsumthree.a.write_input_outter, align 4
  %array_getter43 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_inner, i128 0, i128 %i.0
  %b44 = load i128, i128* %array_getter43, align 4
  %sub47 = sub i128 %i.0, 1
  %array_getter48 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub47
  %unit49 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter48, align 8
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit49, i32 0, i32 2
  %modsumthree.b.read_input_outter = load i128, i128* %struct_getter50, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsumthree.b.read_input_outter, i128 %b44, i1* @constraint.111)
  %sub53 = sub i128 %i.0, 1
  %array_getter54 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub53
  %unit55 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter54, align 8
  %modsumthree.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit55, i32 0, i32 2
  store i128 %b44, i128* %modsumthree.b.write_input_outter, align 4
  %eq = icmp eq i128 %i.0, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_modsum, %struct_template_circuit_modsum* %call, i32 0, i32 4
  %modsum.carry.read_output_outter = load i128, i128* %struct_getter58, align 4
  %sub61 = sub i128 %i.0, 1
  %array_getter62 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub61
  %unit63 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter62, align 8
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit63, i32 0, i32 3
  %modsumthree.c.read_input_outter = load i128, i128* %struct_getter64, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsumthree.c.read_input_outter, i128 %modsum.carry.read_output_outter, i1* @constraint.112)
  %sub67 = sub i128 %i.0, 1
  %array_getter68 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub67
  %unit69 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter68, align 8
  %modsumthree.c.write_input_outter = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit69, i32 0, i32 3
  store i128 %modsum.carry.read_output_outter, i128* %modsumthree.c.write_input_outter, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %sub72 = sub i128 %i.0, 2
  %array_getter73 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub72
  %unit74 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter73, align 8
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit74, i32 0, i32 5
  %modsumthree.carry.read_output_outter = load i128, i128* %struct_getter75, align 4
  %sub78 = sub i128 %i.0, 1
  %array_getter79 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub78
  %unit80 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter79, align 8
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit80, i32 0, i32 3
  %modsumthree.c.read_input_outter82 = load i128, i128* %struct_getter81, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsumthree.c.read_input_outter82, i128 %modsumthree.carry.read_output_outter, i1* @constraint.113)
  %sub85 = sub i128 %i.0, 1
  %array_getter86 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub85
  %unit87 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter86, align 8
  %modsumthree.c.write_input_outter88 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit87, i32 0, i32 3
  store i128 %modsumthree.carry.read_output_outter, i128* %modsumthree.c.write_input_outter88, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %sub91 = sub i128 %i.0, 1
  %array_getter92 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub91
  %unit93 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter92, align 8
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit93, i32 0, i32 4
  %modsumthree.sum.read_output_outter = load i128, i128* %struct_getter94, align 4
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_add_constraint(i128 %out98, i128 %modsumthree.sum.read_output_outter, i1* @constraint.114)
  %out101 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %modsumthree.sum.read_output_outter, i128* %out101, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigadd.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub106 = sub i128 %bigadd.k.read_arg_inner, 2
  %array_getter107 = getelementptr inbounds [256 x %struct_template_circuit_modsumthree*], [256 x %struct_template_circuit_modsumthree*]* %unit5, i128 0, i128 %sub106
  %unit108 = load %struct_template_circuit_modsumthree*, %struct_template_circuit_modsumthree** %array_getter107, align 8
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_modsumthree, %struct_template_circuit_modsumthree* %unit108, i32 0, i32 5
  %modsumthree.carry.read_output_outter110 = load i128, i128* %struct_getter109, align 4
  %array_getter113 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %bigadd.k.read_arg_inner
  %out114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_add_constraint(i128 %out114, i128 %modsumthree.carry.read_output_outter110, i1* @constraint.115)
  %out117 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %bigadd.k.read_arg_inner
  store i128 %modsumthree.carry.read_output_outter110, i128* %out117, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %bigadd.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %0, i32 0, i32 4
  store [256 x i128]* %out, [256 x i128]** %bigadd.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigadd = alloca %struct_template_circuit_bigadd, align 8
  %bigadd.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %struct_template_circuit_bigadd, i32 0, i32 0
  store i128 %0, i128* %bigadd.n.write_arg_inner, align 4
  %bigadd.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %struct_template_circuit_bigadd, i32 0, i32 1
  store i128 %1, i128* %bigadd.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigadd* %struct_template_circuit_bigadd
}

define void @fn_template_init_lesseqthan(%struct_template_circuit_lesseqthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 0
  %lesseqthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 1
  %lesseqthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %lesseqthan.n.read_arg_inner)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %lesseqthan.in.read_input_inner, i128 0, i128 0
  %in2 = load i128, i128* %array_getter, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter5, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt6, i128 %in2, i1* @constraint.116)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %in2, i128* %lt9, align 4
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %lesseqthan.in.read_input_inner, i128 0, i128 1
  %in12 = load i128, i128* %array_getter11, align 4
  %add = add i128 %in12, 1
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter15, i128 0, i128 1
  %lt17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt17, i128 %add, i1* @constraint.117)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %lt21 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter20, i128 0, i128 1
  store i128 %add, i128* %lt21, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %lessthan.out.read_output_outter, i1* @constraint.118)
  %lesseqthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_outter, i128* %lesseqthan.out.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 2
  %lesseqthan.out.read_output_inner = load i128, i128* %struct_getter27, align 4
  br label %exit

exit:                                             ; preds = %entry
  %lesseqthan.out.write_output_inner29 = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %0, i32 0, i32 2
  store i128 %lesseqthan.out.read_output_inner, i128* %lesseqthan.out.write_output_inner29, align 4
  ret void
}

define %struct_template_circuit_lesseqthan* @fn_template_build_lesseqthan(i128 %0) {
entry:
  %struct_template_circuit_lesseqthan = alloca %struct_template_circuit_lesseqthan, align 8
  %lesseqthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_lesseqthan, %struct_template_circuit_lesseqthan* %struct_template_circuit_lesseqthan, i32 0, i32 0
  store i128 %0, i128* %lesseqthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_lesseqthan* %struct_template_circuit_lesseqthan
}

define [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %j3 = call i128 @fn_intrinsic_inline_init()
  %i6 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array8 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %a10 = load i128, i128* %array_getter, align 4
  %remainder12 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array8, i128 0, i128 %i.0
  store i128 %a10, i128* %remainder12, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %add15 = add i128 %2, %1
  %slt = icmp slt i128 %add, %add15
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %uniform_array16 = alloca [256 x i128], align 8
  br label %loop.body18

loop.body18:                                      ; preds = %loop.latch117, %loop.exit
  %i.1 = phi i128 [ %2, %loop.exit ], [ %sub119, %loop.latch117 ]
  %remainder.0 = phi [256 x i128]* [ %uniform_array8, %loop.exit ], [ %call116, %loop.latch117 ]
  %eq = icmp eq i128 %i.1, %2
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body18
  %dividend23 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %1
  store i128 0, i128* %dividend23, align 4
  %sub = sub i128 %1, 1
  br label %loop.body25

if.false:                                         ; preds = %loop.body18
  br label %loop.body41

loop.body25:                                      ; preds = %loop.latch35, %if.true
  %j.0 = phi i128 [ %sub, %if.true ], [ %sub37, %loop.latch35 ]
  %add29 = add i128 %j.0, %2
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %remainder.0, i128 0, i128 %add29
  %remainder31 = load i128, i128* %array_getter30, align 4
  %dividend34 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %j.0
  store i128 %remainder31, i128* %dividend34, align 4
  br label %loop.latch35

loop.latch35:                                     ; preds = %loop.body25
  %sub37 = sub i128 %j.0, 1
  %sge = icmp sge i128 %sub37, 0
  br i1 %sge, label %loop.body25, label %loop.exit39

loop.exit39:                                      ; preds = %loop.latch35
  br label %if.exit

loop.body41:                                      ; preds = %loop.latch51, %if.false
  %j.1 = phi i128 [ %1, %if.false ], [ %sub53, %loop.latch51 ]
  %add45 = add i128 %j.1, %i.1
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %remainder.0, i128 0, i128 %add45
  %remainder47 = load i128, i128* %array_getter46, align 4
  %dividend50 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %j.1
  store i128 %remainder47, i128* %dividend50, align 4
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.body41
  %sub53 = sub i128 %j.1, 1
  %sge55 = icmp sge i128 %sub53, 0
  br i1 %sge55, label %loop.body41, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  br label %if.exit

if.exit:                                          ; preds = %loop.exit56, %loop.exit39
  %call = call i128 @short_div(i128 %0, i128 %1, [256 x i128]* %uniform_array16, [256 x i128]* %4)
  %out61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.1
  store i128 %call, i128* %out61, align 4
  %array_getter66 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.1
  %out67 = load i128, i128* %array_getter66, align 4
  %call69 = call [256 x i128]* @long_scalar_mult(i128 %0, i128 %1, i128 %out67, [256 x i128]* %4)
  %uniform_array70 = alloca [256 x i128], align 8
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch75, %if.exit
  %j.2 = phi i128 [ 0, %if.exit ], [ %add77, %loop.latch75 ]
  %subtrahend74 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array70, i128 0, i128 %j.2
  store i128 0, i128* %subtrahend74, align 4
  br label %loop.latch75

loop.latch75:                                     ; preds = %loop.body71
  %add77 = add i128 %j.2, 1
  %add81 = add i128 %2, %1
  %slt82 = icmp slt i128 %add77, %add81
  br i1 %slt82, label %loop.body71, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch75
  br label %loop.body84

loop.body84:                                      ; preds = %loop.latch104, %loop.exit83
  %j.3 = phi i128 [ 0, %loop.exit83 ], [ %add106, %loop.latch104 ]
  %add89 = add i128 %i.1, %j.3
  %add92 = add i128 %2, %1
  %slt93 = icmp slt i128 %add89, %add92
  br i1 %slt93, label %if.true85, label %if.false86

if.true85:                                        ; preds = %loop.body84
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %call69, i128 0, i128 %j.3
  %mult_shift97 = load i128, i128* %array_getter96, align 4
  %add101 = add i128 %i.1, %j.3
  %subtrahend102 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array70, i128 0, i128 %add101
  store i128 %mult_shift97, i128* %subtrahend102, align 4
  br label %if.exit103

if.false86:                                       ; preds = %loop.body84
  br label %if.exit103

if.exit103:                                       ; preds = %if.false86, %if.true85
  br label %loop.latch104

loop.latch104:                                    ; preds = %if.exit103
  %add106 = add i128 %j.3, 1
  %sle = icmp sle i128 %add106, %1
  br i1 %sle, label %loop.body84, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch104
  %add113 = add i128 %2, %1
  %call116 = call [256 x i128]* @long_sub(i128 %0, i128 %add113, [256 x i128]* %remainder.0, [256 x i128]* %uniform_array70)
  br label %loop.latch117

loop.latch117:                                    ; preds = %loop.exit109
  %sub119 = sub i128 %i.1, 1
  %sge121 = icmp sge i128 %sub119, 0
  br i1 %sge121, label %loop.body18, label %loop.exit122

loop.exit122:                                     ; preds = %loop.latch117
  br label %loop.body123

loop.body123:                                     ; preds = %loop.latch131, %loop.exit122
  %i.2 = phi i128 [ 0, %loop.exit122 ], [ %add133, %loop.latch131 ]
  %array_getter126 = getelementptr inbounds [256 x i128], [256 x i128]* %call116, i128 0, i128 %i.2
  %remainder127 = load i128, i128* %array_getter126, align 4
  %out130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %i.2
  store i128 %remainder127, i128* %out130, align 4
  br label %loop.latch131

loop.latch131:                                    ; preds = %loop.body123
  %add133 = add i128 %i.2, 1
  %slt136 = icmp slt i128 %add133, %1
  br i1 %slt136, label %loop.body123, label %loop.exit137

loop.exit137:                                     ; preds = %loop.latch131
  %out140 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %1
  store i128 0, i128* %out140, align 4
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_signedfp12multiplynocarryunequal(%struct_template_circuit_signedfp12multiplynocarryunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 0
  %signedfp12multiplynocarryunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 1
  %signedfp12multiplynocarryunequal.ka.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 2
  %signedfp12multiplynocarryunequal.kb.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 3
  %signedfp12multiplynocarryunequal.m_out.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall6 to [256 x [256 x [256 x i128]]]*
  %l7 = call i128 @fn_intrinsic_inline_init()
  %XI08 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %i10 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  %call18 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  %call24 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  %call30 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %signedfp12multiplynocarryunequal.n.read_arg_inner, i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, i128 %signedfp12multiplynocarryunequal.kb.read_arg_inner, i128 6, i128 6)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch181, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add183, %loop.latch181 ]
  br label %loop.body31

loop.body31:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.0
  %a34 = load i128, i128* %array_getter, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %a0b040 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_add_constraint(i128 %a0b040, i128 %a34, i1* @constraint.119)
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter42 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter41, align 8
  %a0b045 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter42, i128 0, i128 %i.0, i128 %j.0
  store i128 %a34, i128* %a0b045, align 4
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.0
  %a50 = load i128, i128* %array_getter49, align 4
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call18, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter52, align 8
  %array_getter56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter53, i128 0, i128 %i.0, i128 %j.0
  %a0b157 = load i128, i128* %array_getter56, align 4
  call void @fn_intrinsic_add_constraint(i128 %a0b157, i128 %a50, i1* @constraint.120)
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call18, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter60 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter59, align 8
  %a0b163 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter60, i128 0, i128 %i.0, i128 %j.0
  store i128 %a50, i128* %a0b163, align 4
  %array_getter67 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.0
  %a68 = load i128, i128* %array_getter67, align 4
  %struct_getter70 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call24, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter71 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter70, align 8
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter71, i128 0, i128 %i.0, i128 %j.0
  %a1b075 = load i128, i128* %array_getter74, align 4
  call void @fn_intrinsic_add_constraint(i128 %a1b075, i128 %a68, i1* @constraint.121)
  %struct_getter77 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call24, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter78 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter77, align 8
  %a1b081 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter78, i128 0, i128 %i.0, i128 %j.0
  store i128 %a68, i128* %a1b081, align 4
  %array_getter85 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.0
  %a86 = load i128, i128* %array_getter85, align 4
  %struct_getter88 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call30, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter89 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter88, align 8
  %array_getter92 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter89, i128 0, i128 %i.0, i128 %j.0
  %a1b193 = load i128, i128* %array_getter92, align 4
  call void @fn_intrinsic_add_constraint(i128 %a1b193, i128 %a86, i1* @constraint.122)
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call30, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter96 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter95, align 8
  %a1b199 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter96, i128 0, i128 %i.0, i128 %j.0
  store i128 %a86, i128* %a1b199, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body31
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %signedfp12multiplynocarryunequal.ka.read_arg_inner
  br i1 %slt, label %loop.body31, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body103

loop.body103:                                     ; preds = %loop.latch174, %loop.exit
  %j.1 = phi i128 [ 0, %loop.exit ], [ %add176, %loop.latch174 ]
  %array_getter106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.1
  %b107 = load i128, i128* %array_getter106, align 4
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter109, align 8
  %array_getter112 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.1
  %a0b0113 = load i128, i128* %array_getter112, align 4
  call void @fn_intrinsic_add_constraint(i128 %a0b0113, i128 %b107, i1* @constraint.123)
  %struct_getter115 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter116 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter115, align 8
  %a0b0119 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter116, i128 0, i128 %i.0, i128 %j.1
  store i128 %b107, i128* %a0b0119, align 4
  %array_getter123 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.1
  %b124 = load i128, i128* %array_getter123, align 4
  %struct_getter126 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call24, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter127 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter126, align 8
  %array_getter130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter127, i128 0, i128 %i.0, i128 %j.1
  %a1b0131 = load i128, i128* %array_getter130, align 4
  call void @fn_intrinsic_add_constraint(i128 %a1b0131, i128 %b124, i1* @constraint.124)
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call24, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter134 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter133, align 8
  %a1b0137 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter134, i128 0, i128 %i.0, i128 %j.1
  store i128 %b124, i128* %a1b0137, align 4
  %array_getter141 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.1
  %b142 = load i128, i128* %array_getter141, align 4
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call18, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter145 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter144, align 8
  %array_getter148 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter145, i128 0, i128 %i.0, i128 %j.1
  %a0b1149 = load i128, i128* %array_getter148, align 4
  call void @fn_intrinsic_add_constraint(i128 %a0b1149, i128 %b142, i1* @constraint.125)
  %struct_getter151 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call18, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter152 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter151, align 8
  %a0b1155 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter152, i128 0, i128 %i.0, i128 %j.1
  store i128 %b142, i128* %a0b1155, align 4
  %array_getter159 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.1
  %b160 = load i128, i128* %array_getter159, align 4
  %struct_getter162 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call30, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter163 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter162, align 8
  %array_getter166 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter163, i128 0, i128 %i.0, i128 %j.1
  %a1b1167 = load i128, i128* %array_getter166, align 4
  call void @fn_intrinsic_add_constraint(i128 %a1b1167, i128 %b160, i1* @constraint.126)
  %struct_getter169 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call30, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter170 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter169, align 8
  %a1b1173 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter170, i128 0, i128 %i.0, i128 %j.1
  store i128 %b160, i128* %a1b1173, align 4
  br label %loop.latch174

loop.latch174:                                    ; preds = %loop.body103
  %add176 = add i128 %j.1, 1
  %slt179 = icmp slt i128 %add176, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  br i1 %slt179, label %loop.body103, label %loop.exit180

loop.exit180:                                     ; preds = %loop.latch174
  br label %loop.latch181

loop.latch181:                                    ; preds = %loop.exit180
  %add183 = add i128 %i.0, 1
  %slt186 = icmp slt i128 %add183, 6
  br i1 %slt186, label %loop.body, label %loop.exit187

loop.exit187:                                     ; preds = %loop.latch181
  br label %loop.body188

loop.body188:                                     ; preds = %loop.latch246, %loop.exit187
  %i.1 = phi i128 [ 0, %loop.exit187 ], [ %add248, %loop.latch246 ]
  br label %loop.body189

loop.body189:                                     ; preds = %loop.latch236, %loop.body188
  %j.2 = phi i128 [ 0, %loop.body188 ], [ %add238, %loop.latch236 ]
  %struct_getter191 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter191, align 8
  %array_getter194 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.2
  %a0b0195 = load i128, i128* %array_getter194, align 4
  %struct_getter197 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call30, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter198 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter197, align 8
  %array_getter201 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter198, i128 0, i128 %i.1, i128 %j.2
  %a1b1202 = load i128, i128* %array_getter201, align 4
  %sub = sub i128 %a0b0195, %a1b1202
  %array_getter206 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.1, i128 0, i128 %j.2
  %X207 = load i128, i128* %array_getter206, align 4
  call void @fn_intrinsic_add_constraint(i128 %X207, i128 %sub, i1* @constraint.127)
  %X211 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.1, i128 0, i128 %j.2
  store i128 %sub, i128* %X211, align 4
  %struct_getter213 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call18, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter214 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter213, align 8
  %array_getter217 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter214, i128 0, i128 %i.1, i128 %j.2
  %a0b1218 = load i128, i128* %array_getter217, align 4
  %struct_getter220 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call24, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter221 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter220, align 8
  %array_getter224 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter221, i128 0, i128 %i.1, i128 %j.2
  %a1b0225 = load i128, i128* %array_getter224, align 4
  %add226 = add i128 %a0b1218, %a1b0225
  %array_getter230 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.1, i128 1, i128 %j.2
  %X231 = load i128, i128* %array_getter230, align 4
  call void @fn_intrinsic_add_constraint(i128 %X231, i128 %add226, i1* @constraint.128)
  %X235 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.1, i128 1, i128 %j.2
  store i128 %add226, i128* %X235, align 4
  br label %loop.latch236

loop.latch236:                                    ; preds = %loop.body189
  %add238 = add i128 %j.2, 1
  %add242 = add i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  %sub243 = sub i128 %add242, 1
  %slt244 = icmp slt i128 %add238, %sub243
  br i1 %slt244, label %loop.body189, label %loop.exit245

loop.exit245:                                     ; preds = %loop.latch236
  br label %loop.latch246

loop.latch246:                                    ; preds = %loop.exit245
  %add248 = add i128 %i.1, 1
  %mul = mul i128 2, 6
  %sub251 = sub i128 %mul, 1
  %slt252 = icmp slt i128 %add248, %sub251
  br i1 %slt252, label %loop.body188, label %loop.exit253

loop.exit253:                                     ; preds = %loop.latch246
  br label %loop.body254

loop.body254:                                     ; preds = %loop.latch360, %loop.exit253
  %i.2 = phi i128 [ 0, %loop.exit253 ], [ %add362, %loop.latch360 ]
  br label %loop.body255

loop.body255:                                     ; preds = %loop.latch350, %loop.body254
  %j.3 = phi i128 [ 0, %loop.body254 ], [ %add352, %loop.latch350 ]
  %sub258 = sub i128 6, 1
  %slt259 = icmp slt i128 %i.2, %sub258
  br i1 %slt259, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body255
  %array_getter263 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.2, i128 0, i128 %j.3
  %X264 = load i128, i128* %array_getter263, align 4
  %add268 = add i128 6, %i.2
  %array_getter270 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %add268, i128 0, i128 %j.3
  %X271 = load i128, i128* %array_getter270, align 4
  %mul273 = mul i128 %X271, 1
  %add274 = add i128 %X264, %mul273
  %add278 = add i128 6, %i.2
  %array_getter280 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %add278, i128 1, i128 %j.3
  %X281 = load i128, i128* %array_getter280, align 4
  %sub282 = sub i128 %add274, %X281
  %array_getter286 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 0, i128 %j.3
  %out287 = load i128, i128* %array_getter286, align 4
  call void @fn_intrinsic_add_constraint(i128 %out287, i128 %sub282, i1* @constraint.129)
  %out291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 0, i128 %j.3
  store i128 %sub282, i128* %out291, align 4
  %array_getter295 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.2, i128 1, i128 %j.3
  %X296 = load i128, i128* %array_getter295, align 4
  %add300 = add i128 6, %i.2
  %array_getter302 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %add300, i128 0, i128 %j.3
  %X303 = load i128, i128* %array_getter302, align 4
  %add304 = add i128 %X296, %X303
  %add308 = add i128 6, %i.2
  %array_getter310 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %add308, i128 1, i128 %j.3
  %X311 = load i128, i128* %array_getter310, align 4
  %add312 = add i128 %add304, %X311
  %array_getter316 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 1, i128 %j.3
  %out317 = load i128, i128* %array_getter316, align 4
  call void @fn_intrinsic_add_constraint(i128 %out317, i128 %add312, i1* @constraint.130)
  %out321 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 1, i128 %j.3
  store i128 %add312, i128* %out321, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body255
  %array_getter325 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.2, i128 0, i128 %j.3
  %X326 = load i128, i128* %array_getter325, align 4
  %array_getter330 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 0, i128 %j.3
  %out331 = load i128, i128* %array_getter330, align 4
  call void @fn_intrinsic_add_constraint(i128 %out331, i128 %X326, i1* @constraint.131)
  %out335 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 0, i128 %j.3
  store i128 %X326, i128* %out335, align 4
  %array_getter339 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.2, i128 1, i128 %j.3
  %X340 = load i128, i128* %array_getter339, align 4
  %array_getter344 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 1, i128 %j.3
  %out345 = load i128, i128* %array_getter344, align 4
  call void @fn_intrinsic_add_constraint(i128 %out345, i128 %X340, i1* @constraint.132)
  %out349 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 1, i128 %j.3
  store i128 %X340, i128* %out349, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch350

loop.latch350:                                    ; preds = %if.exit
  %add352 = add i128 %j.3, 1
  %add356 = add i128 %signedfp12multiplynocarryunequal.ka.read_arg_inner, %signedfp12multiplynocarryunequal.kb.read_arg_inner
  %sub357 = sub i128 %add356, 1
  %slt358 = icmp slt i128 %add352, %sub357
  br i1 %slt358, label %loop.body255, label %loop.exit359

loop.exit359:                                     ; preds = %loop.latch350
  br label %loop.latch360

loop.latch360:                                    ; preds = %loop.exit359
  %add362 = add i128 %i.2, 1
  %slt365 = icmp slt i128 %add362, 6
  br i1 %slt365, label %loop.body254, label %loop.exit366

loop.exit366:                                     ; preds = %loop.latch360
  br label %exit

exit:                                             ; preds = %loop.exit366
  %signedfp12multiplynocarryunequal.x.write_inter_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %X, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.x.write_inter_inner, align 8
  %signedfp12multiplynocarryunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarryunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %0, i128 %1, i128 %2, i128 %3) {
entry:
  %struct_template_circuit_signedfp12multiplynocarryunequal = alloca %struct_template_circuit_signedfp12multiplynocarryunequal, align 8
  %signedfp12multiplynocarryunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 0
  store i128 %0, i128* %signedfp12multiplynocarryunequal.n.write_arg_inner, align 4
  %signedfp12multiplynocarryunequal.ka.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 1
  store i128 %1, i128* %signedfp12multiplynocarryunequal.ka.write_arg_inner, align 4
  %signedfp12multiplynocarryunequal.kb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 2
  store i128 %2, i128* %signedfp12multiplynocarryunequal.kb.write_arg_inner, align 4
  %signedfp12multiplynocarryunequal.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal, i32 0, i32 3
  store i128 %3, i128* %signedfp12multiplynocarryunequal.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12multiplynocarryunequal* %struct_template_circuit_signedfp12multiplynocarryunequal
}

define void @fn_template_init_signedfp12multiplynocarry(%struct_template_circuit_signedfp12multiplynocarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 0
  %signedfp12multiplynocarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 1
  %signedfp12multiplynocarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 2
  %signedfp12multiplynocarry.m_out.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %j5 = call i128 @fn_intrinsic_inline_init()
  %l6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %idx7 = call i128 @fn_intrinsic_inline_init()
  %i8 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_signedfp12multiplynocarryunequal* @fn_template_build_signedfp12multiplynocarryunequal(i128 %signedfp12multiplynocarry.n.read_arg_inner, i128 %signedfp12multiplynocarry.k.read_arg_inner, i128 %signedfp12multiplynocarry.k.read_arg_inner, i128 %signedfp12multiplynocarry.m_out.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch57, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add59, %loop.latch57 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch51, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add53, %loop.latch51 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch, %loop.body10
  %idx.0 = phi i128 [ 0, %loop.body10 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %a15 = load i128, i128* %array_getter, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter17, align 8
  %array_getter21 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %mult22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult22, i128 %a15, i1* @constraint.133)
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 4
  %signedfp12multiplynocarryunequal.a.read_input_outter24 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter23, align 8
  %mult28 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.a.read_input_outter24, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %a15, i128* %mult28, align 4
  %array_getter32 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b33 = load i128, i128* %array_getter32, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter35, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %mult40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult40, i128 %b33, i1* @constraint.134)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 5
  %signedfp12multiplynocarryunequal.b.read_input_outter43 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter42, align 8
  %mult47 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.b.read_input_outter43, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %b33, i128* %mult47, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %signedfp12multiplynocarry.k.read_arg_inner
  br i1 %slt, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.exit
  %add53 = add i128 %j.0, 1
  %slt55 = icmp slt i128 %add53, 2
  br i1 %slt55, label %loop.body10, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  br label %loop.latch57

loop.latch57:                                     ; preds = %loop.exit56
  %add59 = add i128 %i.0, 1
  %slt62 = icmp slt i128 %add59, 6
  br i1 %slt62, label %loop.body, label %loop.exit63

loop.exit63:                                      ; preds = %loop.latch57
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch98, %loop.exit63
  %i.1 = phi i128 [ 0, %loop.exit63 ], [ %add100, %loop.latch98 ]
  br label %loop.body65

loop.body65:                                      ; preds = %loop.latch92, %loop.body64
  %j.1 = phi i128 [ 0, %loop.body64 ], [ %add94, %loop.latch92 ]
  br label %loop.body66

loop.body66:                                      ; preds = %loop.latch85, %loop.body65
  %idx.1 = phi i128 [ 0, %loop.body65 ], [ %add87, %loop.latch85 ]
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarryunequal, %struct_template_circuit_signedfp12multiplynocarryunequal* %call, i32 0, i32 7
  %signedfp12multiplynocarryunequal.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter68, align 8
  %array_getter72 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %mult73 = load i128, i128* %array_getter72, align 4
  %array_getter78 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %out79 = load i128, i128* %array_getter78, align 4
  call void @fn_intrinsic_add_constraint(i128 %out79, i128 %mult73, i1* @constraint.135)
  %out84 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %mult73, i128* %out84, align 4
  br label %loop.latch85

loop.latch85:                                     ; preds = %loop.body66
  %add87 = add i128 %idx.1, 1
  %mul = mul i128 2, %signedfp12multiplynocarry.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %slt90 = icmp slt i128 %add87, %sub
  br i1 %slt90, label %loop.body66, label %loop.exit91

loop.exit91:                                      ; preds = %loop.latch85
  br label %loop.latch92

loop.latch92:                                     ; preds = %loop.exit91
  %add94 = add i128 %j.1, 1
  %slt96 = icmp slt i128 %add94, 2
  br i1 %slt96, label %loop.body65, label %loop.exit97

loop.exit97:                                      ; preds = %loop.latch92
  br label %loop.latch98

loop.latch98:                                     ; preds = %loop.exit97
  %add100 = add i128 %i.1, 1
  %slt103 = icmp slt i128 %add100, 6
  br i1 %slt103, label %loop.body64, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch98
  br label %exit

exit:                                             ; preds = %loop.exit104
  %signedfp12multiplynocarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_signedfp12multiplynocarry = alloca %struct_template_circuit_signedfp12multiplynocarry, align 8
  %signedfp12multiplynocarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry, i32 0, i32 0
  store i128 %0, i128* %signedfp12multiplynocarry.n.write_arg_inner, align 4
  %signedfp12multiplynocarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry, i32 0, i32 1
  store i128 %1, i128* %signedfp12multiplynocarry.k.write_arg_inner, align 4
  %signedfp12multiplynocarry.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry, i32 0, i32 2
  store i128 %2, i128* %signedfp12multiplynocarry.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12multiplynocarry* %struct_template_circuit_signedfp12multiplynocarry
}

define [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %call = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  ret [256 x [256 x i128]]* %call
}

define void @fn_template_init_aliascheck(%struct_template_circuit_aliascheck* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %0, i32 0, i32 0
  %aliascheck.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter, align 8
  %i1 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_compconstant* @fn_template_build_compconstant(i128 -1)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_inner, i128 0, i128 %i.0
  %in3 = load i128, i128* %array_getter, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %call, i32 0, i32 1
  %compconstant.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %array_getter7 = getelementptr inbounds [256 x i128], [256 x i128]* %compconstant.in.read_input_outter, i128 0, i128 %i.0
  %compConstant8 = load i128, i128* %array_getter7, align 4
  call void @fn_intrinsic_add_constraint(i128 %compConstant8, i128 %in3, i1* @constraint.136)
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %call, i32 0, i32 1
  %compconstant.in.read_input_outter10 = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %compConstant12 = getelementptr inbounds [256 x i128], [256 x i128]* %compconstant.in.read_input_outter10, i128 0, i128 %i.0
  store i128 %in3, i128* %compConstant12, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_compconstant, %struct_template_circuit_compconstant* %call, i32 0, i32 4
  %compconstant.out.read_output_outter = load i128, i128* %struct_getter16, align 4
  call void @fn_intrinsic_add_constraint(i128 %compconstant.out.read_output_outter, i128 0, i1* @constraint.137)
  br label %exit

exit:                                             ; preds = %loop.exit
  ret void
}

define %struct_template_circuit_aliascheck* @fn_template_build_aliascheck() {
entry:
  %struct_template_circuit_aliascheck = alloca %struct_template_circuit_aliascheck, align 8
  ret %struct_template_circuit_aliascheck* %struct_template_circuit_aliascheck
}

define void @fn_template_init_longtoshortnoendcarry(%struct_template_circuit_longtoshortnoendcarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 0
  %longtoshortnoendcarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 1
  %longtoshortnoendcarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 2
  %longtoshortnoendcarry.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %i3 = call i128 @fn_intrinsic_inline_init()
  %outRangeChecks4 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %runningCarryRangeChecks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %runningCarry = bitcast i8* %malloccall to [256 x i128]*
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall7 to [256 x i128]*
  %sumAndCarry = alloca [256 x i128]*, align 8
  %sumAndCarry9 = alloca [256 x i128], align 8
  store [256 x i128]* %sumAndCarry9, [256 x i128]** %sumAndCarry, align 8
  %uniform_array = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_inner, i128 0, i128 %i.0
  %in11 = load i128, i128* %array_getter, align 4
  %call = call [3 x i128]* @SplitThreeFn(i128 %in11, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner)
  %split15 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.0
  %1 = bitcast [256 x i128]* %split15 to i8*
  %2 = bitcast [3 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 ptrtoint ([3 x i128]* getelementptr ([3 x i128], [3 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %longtoshortnoendcarry.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %uniform_array18 = alloca [256 x i128], align 8
  %carry20 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 0
  store i128 0, i128* %carry20, align 4
  %array_getter22 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 0
  %split23 = load i128, i128* %array_getter22, align 4
  %out25 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  store i128 %split23, i128* %out25, align 4
  %sgt = icmp sgt i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  br i1 %sgt, label %if.true, label %if.false

if.true:                                          ; preds = %loop.exit
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 1
  %split29 = load i128, i128* %array_getter28, align 4
  %array_getter31 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 0
  %split32 = load i128, i128* %array_getter31, align 4
  %add33 = add i128 %split29, %split32
  %call36 = call [2 x i128]* @SplitFn(i128 %add33, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner)
  %memcpy_ptr = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %3 = bitcast [256 x i128]** %memcpy_ptr to i8*
  %4 = bitcast [2 x i128]* %call36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry37 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry37, i128 0, i128 0
  %sumAndCarry39 = load i128, i128* %array_getter38, align 4
  %out41 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 1
  store i128 %sumAndCarry39, i128* %out41, align 4
  %sumAndCarry42 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter43 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry42, i128 0, i128 1
  %sumAndCarry44 = load i128, i128* %array_getter43, align 4
  %carry46 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 1
  store i128 %sumAndCarry44, i128* %carry46, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.exit
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %sgt50 = icmp sgt i128 %longtoshortnoendcarry.k.read_arg_inner, 2
  br i1 %sgt50, label %if.true47, label %if.false48

if.true47:                                        ; preds = %if.exit
  br label %loop.body51

if.false48:                                       ; preds = %if.exit
  br label %if.exit116

loop.body51:                                      ; preds = %loop.latch89, %if.true47
  %i.1 = phi i128 [ 2, %if.true47 ], [ %add91, %loop.latch89 ]
  %array_getter54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.1, i128 0
  %split55 = load i128, i128* %array_getter54, align 4
  %sub = sub i128 %i.1, 1
  %array_getter58 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %sub, i128 1
  %split59 = load i128, i128* %array_getter58, align 4
  %add60 = add i128 %split55, %split59
  %sub63 = sub i128 %i.1, 2
  %array_getter64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %sub63, i128 2
  %split65 = load i128, i128* %array_getter64, align 4
  %add66 = add i128 %add60, %split65
  %sub69 = sub i128 %i.1, 1
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %sub69
  %carry71 = load i128, i128* %array_getter70, align 4
  %add72 = add i128 %add66, %carry71
  %call75 = call [2 x i128]* @SplitFn(i128 %add72, i128 %longtoshortnoendcarry.n.read_arg_inner, i128 %longtoshortnoendcarry.n.read_arg_inner)
  %memcpy_ptr76 = getelementptr inbounds [256 x i128]*, [256 x i128]** %sumAndCarry, i128 0
  %5 = bitcast [256 x i128]** %memcpy_ptr76 to i8*
  %6 = bitcast [2 x i128]* %call75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([2 x i128]* getelementptr ([2 x i128], [2 x i128]* null, i32 1) to i64), i1 false)
  %sumAndCarry77 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter78 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry77, i128 0, i128 0
  %sumAndCarry79 = load i128, i128* %array_getter78, align 4
  %out82 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.1
  store i128 %sumAndCarry79, i128* %out82, align 4
  %sumAndCarry83 = load [256 x i128]*, [256 x i128]** %sumAndCarry, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %sumAndCarry83, i128 0, i128 1
  %sumAndCarry85 = load i128, i128* %array_getter84, align 4
  %carry88 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %i.1
  store i128 %sumAndCarry85, i128* %carry88, align 4
  br label %loop.latch89

loop.latch89:                                     ; preds = %loop.body51
  %add91 = add i128 %i.1, 1
  %slt94 = icmp slt i128 %add91, %longtoshortnoendcarry.k.read_arg_inner
  br i1 %slt94, label %loop.body51, label %loop.exit95

loop.exit95:                                      ; preds = %loop.latch89
  %sub98 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %sub98, i128 1
  %split100 = load i128, i128* %array_getter99, align 4
  %sub103 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 2
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %sub103, i128 2
  %split105 = load i128, i128* %array_getter104, align 4
  %add106 = add i128 %split100, %split105
  %sub109 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %sub109
  %carry111 = load i128, i128* %array_getter110, align 4
  %add112 = add i128 %add106, %carry111
  %out115 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %longtoshortnoendcarry.k.read_arg_inner
  store i128 %add112, i128* %out115, align 4
  br label %if.exit116

if.exit116:                                       ; preds = %loop.exit95, %if.false48
  br label %loop.body117

loop.body117:                                     ; preds = %loop.latch136, %if.exit116
  %i.2 = phi i128 [ 0, %if.exit116 ], [ %add138, %loop.latch136 ]
  %call119 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %longtoshortnoendcarry.n.read_arg_inner)
  %outRangeChecks122 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %outRangeChecks4, i128 0, i128 %i.2
  store %struct_template_circuit_num2bits* %call119, %struct_template_circuit_num2bits** %outRangeChecks122, align 8
  %array_getter125 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  %out126 = load i128, i128* %array_getter125, align 4
  %array_getter129 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %outRangeChecks4, i128 0, i128 %i.2
  %outRangeChecks130 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter129, align 8
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks130, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter131, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %out126, i1* @constraint.138)
  %array_getter134 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %outRangeChecks4, i128 0, i128 %i.2
  %outRangeChecks135 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter134, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks135, i32 0, i32 1
  store i128 %out126, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.body117
  %add138 = add i128 %i.2, 1
  %add141 = add i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %slt142 = icmp slt i128 %add138, %add141
  br i1 %slt142, label %loop.body117, label %loop.exit143

loop.exit143:                                     ; preds = %loop.latch136
  %array_getter145 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_inner, i128 0, i128 0
  %in146 = load i128, i128* %array_getter145, align 4
  %array_getter148 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  %out149 = load i128, i128* %array_getter148, align 4
  %sub150 = sub i128 %in146, %out149
  %lshift = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %sdiv = sdiv i128 %sub150, %lshift
  %runningCarry153 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 0
  store i128 %sdiv, i128* %runningCarry153, align 4
  %call156 = call i128 @log_ceil(i128 %longtoshortnoendcarry.k.read_arg_inner)
  %add157 = add i128 %longtoshortnoendcarry.n.read_arg_inner, %call156
  %call158 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add157)
  %runningCarryRangeChecks160 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, i128 0, i128 0
  store %struct_template_circuit_num2bits* %call158, %struct_template_circuit_num2bits** %runningCarryRangeChecks160, align 8
  %array_getter162 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 0
  %runningCarry163 = load i128, i128* %array_getter162, align 4
  %array_getter165 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, i128 0, i128 0
  %runningCarryRangeChecks166 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter165, align 8
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks166, i32 0, i32 1
  %num2bits.in.read_input_outter168 = load i128, i128* %struct_getter167, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter168, i128 %runningCarry163, i1* @constraint.139)
  %array_getter170 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, i128 0, i128 0
  %runningCarryRangeChecks171 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter170, align 8
  %num2bits.in.write_input_outter172 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks171, i32 0, i32 1
  store i128 %runningCarry163, i128* %num2bits.in.write_input_outter172, align 4
  %array_getter174 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 0
  %runningCarry175 = load i128, i128* %array_getter174, align 4
  %lshift177 = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %mul = mul i128 %runningCarry175, %lshift177
  %array_getter179 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_inner, i128 0, i128 0
  %in180 = load i128, i128* %array_getter179, align 4
  %array_getter182 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  %out183 = load i128, i128* %array_getter182, align 4
  %sub184 = sub i128 %in180, %out183
  call void @fn_intrinsic_add_constraint(i128 %mul, i128 %sub184, i1* @constraint.140)
  br label %loop.body185

loop.body185:                                     ; preds = %loop.latch252, %loop.exit143
  %i.3 = phi i128 [ 1, %loop.exit143 ], [ %add254, %loop.latch252 ]
  %array_getter188 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_inner, i128 0, i128 %i.3
  %in189 = load i128, i128* %array_getter188, align 4
  %array_getter192 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  %out193 = load i128, i128* %array_getter192, align 4
  %sub194 = sub i128 %in189, %out193
  %sub197 = sub i128 %i.3, 1
  %array_getter198 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 %sub197
  %runningCarry199 = load i128, i128* %array_getter198, align 4
  %add200 = add i128 %sub194, %runningCarry199
  %lshift202 = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %sdiv203 = sdiv i128 %add200, %lshift202
  %runningCarry206 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 %i.3
  store i128 %sdiv203, i128* %runningCarry206, align 4
  %call209 = call i128 @log_ceil(i128 %longtoshortnoendcarry.k.read_arg_inner)
  %add210 = add i128 %longtoshortnoendcarry.n.read_arg_inner, %call209
  %call211 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add210)
  %runningCarryRangeChecks214 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, i128 0, i128 %i.3
  store %struct_template_circuit_num2bits* %call211, %struct_template_circuit_num2bits** %runningCarryRangeChecks214, align 8
  %array_getter217 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 %i.3
  %runningCarry218 = load i128, i128* %array_getter217, align 4
  %array_getter221 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, i128 0, i128 %i.3
  %runningCarryRangeChecks222 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter221, align 8
  %struct_getter223 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks222, i32 0, i32 1
  %num2bits.in.read_input_outter224 = load i128, i128* %struct_getter223, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter224, i128 %runningCarry218, i1* @constraint.141)
  %array_getter227 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %runningCarryRangeChecks5, i128 0, i128 %i.3
  %runningCarryRangeChecks228 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter227, align 8
  %num2bits.in.write_input_outter229 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %runningCarryRangeChecks228, i32 0, i32 1
  store i128 %runningCarry218, i128* %num2bits.in.write_input_outter229, align 4
  %array_getter232 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 %i.3
  %runningCarry233 = load i128, i128* %array_getter232, align 4
  %lshift235 = shl i128 1, %longtoshortnoendcarry.n.read_arg_inner
  %mul236 = mul i128 %runningCarry233, %lshift235
  %array_getter239 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_inner, i128 0, i128 %i.3
  %in240 = load i128, i128* %array_getter239, align 4
  %array_getter243 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  %out244 = load i128, i128* %array_getter243, align 4
  %sub245 = sub i128 %in240, %out244
  %sub248 = sub i128 %i.3, 1
  %array_getter249 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 %sub248
  %runningCarry250 = load i128, i128* %array_getter249, align 4
  %add251 = add i128 %sub245, %runningCarry250
  call void @fn_intrinsic_add_constraint(i128 %mul236, i128 %add251, i1* @constraint.142)
  br label %loop.latch252

loop.latch252:                                    ; preds = %loop.body185
  %add254 = add i128 %i.3, 1
  %slt257 = icmp slt i128 %add254, %longtoshortnoendcarry.k.read_arg_inner
  br i1 %slt257, label %loop.body185, label %loop.exit258

loop.exit258:                                     ; preds = %loop.latch252
  %sub261 = sub i128 %longtoshortnoendcarry.k.read_arg_inner, 1
  %array_getter262 = getelementptr inbounds [256 x i128], [256 x i128]* %runningCarry, i128 0, i128 %sub261
  %runningCarry263 = load i128, i128* %array_getter262, align 4
  %array_getter266 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %longtoshortnoendcarry.k.read_arg_inner
  %out267 = load i128, i128* %array_getter266, align 4
  call void @fn_intrinsic_add_constraint(i128 %runningCarry263, i128 %out267, i1* @constraint.143)
  br label %exit

exit:                                             ; preds = %loop.exit258
  %longtoshortnoendcarry.runningcarry.write_inter_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 3
  store [256 x i128]* %runningCarry, [256 x i128]** %longtoshortnoendcarry.runningcarry.write_inter_inner, align 8
  %longtoshortnoendcarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %0, i32 0, i32 4
  store [256 x i128]* %out, [256 x i128]** %longtoshortnoendcarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_longtoshortnoendcarry* @fn_template_build_longtoshortnoendcarry(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_longtoshortnoendcarry = alloca %struct_template_circuit_longtoshortnoendcarry, align 8
  %longtoshortnoendcarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %struct_template_circuit_longtoshortnoendcarry, i32 0, i32 0
  store i128 %0, i128* %longtoshortnoendcarry.n.write_arg_inner, align 4
  %longtoshortnoendcarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %struct_template_circuit_longtoshortnoendcarry, i32 0, i32 1
  store i128 %1, i128* %longtoshortnoendcarry.k.write_arg_inner, align 4
  ret %struct_template_circuit_longtoshortnoendcarry* %struct_template_circuit_longtoshortnoendcarry
}

define [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a2 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a2, [256 x i128]* %spice_inline_array, align 4
  %array_getter3 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 0
  %b4 = load [256 x i128], [256 x i128]* %array_getter3, align 4
  %spice_inline_array5 = alloca [256 x i128], align 8
  store [256 x i128] %b4, [256 x i128]* %spice_inline_array5, align 4
  %call = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array5, [256 x i128]* %4)
  %out6 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %5 = bitcast [256 x i128]* %out6 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] %a11, [256 x i128]* %spice_inline_array12, align 4
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 1
  %b15 = load [256 x i128], [256 x i128]* %array_getter14, align 4
  %spice_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] %b15, [256 x i128]* %spice_inline_array16, align 4
  %call18 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array12, [256 x i128]* %spice_inline_array16, [256 x i128]* %4)
  %out20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %7 = bitcast [256 x i128]* %out20 to i8*
  %8 = bitcast [256 x i128]* %call18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_diff(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %2, [256 x [256 x [256 x i128]]]* %3, [256 x i128]* %4) {
entry:
  %i2 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0
  %a4 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a4, [256 x [256 x i128]]* %spice_inline_array, align 4
  %array_getter6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0
  %b7 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter6, align 4
  %spice_inline_array8 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b7, [256 x [256 x i128]]* %spice_inline_array8, align 4
  %call = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array8, [256 x i128]* %4)
  %out10 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.0
  %5 = bitcast [256 x [256 x i128]]* %out10 to i8*
  %6 = bitcast [256 x [256 x i128]]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 6
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_greatereqthan(%struct_template_circuit_greatereqthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 0
  %greatereqthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 1
  %greatereqthan.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter1, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %greatereqthan.n.read_arg_inner)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %greatereqthan.in.read_input_inner, i128 0, i128 1
  %in2 = load i128, i128* %array_getter, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter5 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt6 = load i128, i128* %array_getter5, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt6, i128 %in2, i1* @constraint.144)
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter8 = load [256 x i128]*, [256 x i128]** %struct_getter7, align 8
  %lt9 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter8, i128 0, i128 0
  store i128 %in2, i128* %lt9, align 4
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %greatereqthan.in.read_input_inner, i128 0, i128 0
  %in12 = load i128, i128* %array_getter11, align 4
  %add = add i128 %in12, 1
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter15, i128 0, i128 1
  %lt17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt17, i128 %add, i1* @constraint.145)
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter20 = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %lt21 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter20, i128 0, i128 1
  store i128 %add, i128* %lt21, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %lessthan.out.read_output_outter, i1* @constraint.146)
  %greatereqthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 2
  store i128 %lessthan.out.read_output_outter, i128* %greatereqthan.out.write_output_inner, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 2
  %greatereqthan.out.read_output_inner = load i128, i128* %struct_getter27, align 4
  br label %exit

exit:                                             ; preds = %entry
  %greatereqthan.out.write_output_inner29 = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %0, i32 0, i32 2
  store i128 %greatereqthan.out.read_output_inner, i128* %greatereqthan.out.write_output_inner29, align 4
  ret void
}

define %struct_template_circuit_greatereqthan* @fn_template_build_greatereqthan(i128 %0) {
entry:
  %struct_template_circuit_greatereqthan = alloca %struct_template_circuit_greatereqthan, align 8
  %greatereqthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_greatereqthan, %struct_template_circuit_greatereqthan* %struct_template_circuit_greatereqthan, i32 0, i32 0
  store i128 %0, i128* %greatereqthan.n.write_arg_inner, align 4
  ret %struct_template_circuit_greatereqthan* %struct_template_circuit_greatereqthan
}

define void @fn_template_init_bits2num_strict(%struct_template_circuit_bits2num_strict* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 0
  %bits2num_strict.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter, align 8
  %i1 = call i128 @fn_intrinsic_inline_init()
  %out = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_aliascheck* @fn_template_build_aliascheck()
  %call2 = call %struct_template_circuit_bits2num* @fn_template_build_bits2num(i128 254)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num_strict.in.read_input_inner, i128 0, i128 %i.0
  %in4 = load i128, i128* %array_getter, align 4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call2, i32 0, i32 1
  %bits2num.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %array_getter8 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter, i128 0, i128 %i.0
  %b2n9 = load i128, i128* %array_getter8, align 4
  call void @fn_intrinsic_add_constraint(i128 %b2n9, i128 %in4, i1* @constraint.147)
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call2, i32 0, i32 1
  %bits2num.in.read_input_outter11 = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %b2n13 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num.in.read_input_outter11, i128 0, i128 %i.0
  store i128 %in4, i128* %b2n13, align 4
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %bits2num_strict.in.read_input_inner, i128 0, i128 %i.0
  %in17 = load i128, i128* %array_getter16, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter, i128 0, i128 %i.0
  %aliasCheck22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_add_constraint(i128 %aliasCheck22, i128 %in17, i1* @constraint.148)
  %struct_getter24 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter25 = load [256 x i128]*, [256 x i128]** %struct_getter24, align 8
  %aliasCheck27 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter25, i128 0, i128 %i.0
  store i128 %in17, i128* %aliasCheck27, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bits2num, %struct_template_circuit_bits2num* %call2, i32 0, i32 2
  %bits2num.out.read_output_outter = load i128, i128* %struct_getter31, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %bits2num.out.read_output_outter, i1* @constraint.149)
  %bits2num_strict.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 1
  store i128 %bits2num.out.read_output_outter, i128* %bits2num_strict.out.write_output_inner, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 1
  %bits2num_strict.out.read_output_inner = load i128, i128* %struct_getter35, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %bits2num_strict.out.write_output_inner37 = getelementptr inbounds %struct_template_circuit_bits2num_strict, %struct_template_circuit_bits2num_strict* %0, i32 0, i32 1
  store i128 %bits2num_strict.out.read_output_inner, i128* %bits2num_strict.out.write_output_inner37, align 4
  ret void
}

define %struct_template_circuit_bits2num_strict* @fn_template_build_bits2num_strict() {
entry:
  %struct_template_circuit_bits2num_strict = alloca %struct_template_circuit_bits2num_strict, align 8
  ret %struct_template_circuit_bits2num_strict* %struct_template_circuit_bits2num_strict
}

define [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %carry2 = call i128 @fn_intrinsic_inline_init()
  %Y_is_zero4 = call i128 @fn_intrinsic_inline_init()
  %i6 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %call = call [256 x i128]* @signed_long_to_short(i128 %0, i128 %1, [256 x i128]* %3)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 50
  %a_short9 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %a_short9, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  %call13 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %2, [256 x i128]* %call, [256 x i128]* %4)
  br label %if.exit131

if.false:                                         ; preds = %entry
  %uniform_array14 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %if.false
  %i.0 = phi i128 [ 0, %if.false ], [ %add, %loop.latch ]
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 %i.0
  %a_short18 = load i128, i128* %array_getter17, align 4
  %neg = sub i128 0, %a_short18
  %a_pos20 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array14, i128 0, i128 %i.0
  store i128 %neg, i128* %a_pos20, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %add25 = add i128 %1, %2
  %slt = icmp slt i128 %add, %add25
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call31 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %2, [256 x i128]* %uniform_array14, [256 x i128]* %4)
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch39, %loop.exit
  %Y_is_zero.0 = phi i128 [ 1, %loop.exit ], [ %Y_is_zero.1, %loop.latch39 ]
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add41, %loop.latch39 ]
  %array_getter37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 1, i128 %i.1
  %X38 = load i128, i128* %array_getter37, align 4
  %ne = icmp ne i128 %X38, 0
  br i1 %ne, label %if.true33, label %if.false34

if.true33:                                        ; preds = %loop.body32
  br label %if.exit

if.false34:                                       ; preds = %loop.body32
  br label %if.exit

if.exit:                                          ; preds = %if.false34, %if.true33
  %Y_is_zero.1 = phi i128 [ 0, %if.true33 ], [ %Y_is_zero.0, %if.false34 ]
  br label %loop.latch39

loop.latch39:                                     ; preds = %if.exit
  %add41 = add i128 %i.1, 1
  %slt44 = icmp slt i128 %add41, %1
  br i1 %slt44, label %loop.body32, label %loop.exit45

loop.exit45:                                      ; preds = %loop.latch39
  %eq49 = icmp eq i128 %Y_is_zero.1, 1
  br i1 %eq49, label %if.true46, label %if.false47

if.true46:                                        ; preds = %loop.exit45
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 1
  %X52 = load [256 x i128], [256 x i128]* %array_getter51, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %X52, [256 x i128]* %spice_inline_array, align 4
  %out54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %5 = bitcast [256 x i128]* %out54 to i8*
  %6 = bitcast [256 x i128]* %spice_inline_array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit114

if.false47:                                       ; preds = %loop.exit45
  %array_getter59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 1
  %X60 = load [256 x i128], [256 x i128]* %array_getter59, align 4
  %spice_inline_array61 = alloca [256 x i128], align 8
  store [256 x i128] %X60, [256 x i128]* %spice_inline_array61, align 4
  %call62 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %spice_inline_array61)
  %out64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %7 = bitcast [256 x i128]* %out64 to i8*
  %8 = bitcast [256 x i128]* %call62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter66 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 0
  %X67 = load i128, i128* %array_getter66, align 4
  %add68 = add i128 %X67, 1
  %X70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 0
  store i128 %add68, i128* %X70, align 4
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 0
  %X75 = load i128, i128* %array_getter74, align 4
  %lshift = shl i128 1, %0
  %sge = icmp sge i128 %X75, %lshift
  br i1 %sge, label %if.true71, label %if.false72

if.true71:                                        ; preds = %if.false47
  br label %loop.body77

if.false72:                                       ; preds = %if.false47
  br label %if.exit113

loop.body77:                                      ; preds = %loop.latch105, %if.true71
  %i.2 = phi i128 [ 0, %if.true71 ], [ %add107, %loop.latch105 ]
  %array_getter80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.2
  %X81 = load i128, i128* %array_getter80, align 4
  %lshift83 = shl i128 1, %0
  %sdiv = sdiv i128 %X81, %lshift83
  %add86 = add i128 %i.2, 1
  %array_getter87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %add86
  %X88 = load i128, i128* %array_getter87, align 4
  %add90 = add i128 %X88, %sdiv
  %add93 = add i128 %i.2, 1
  %X94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %add93
  store i128 %add90, i128* %X94, align 4
  %array_getter97 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.2
  %X98 = load i128, i128* %array_getter97, align 4
  %lshift101 = shl i128 1, %0
  %mul = mul i128 %sdiv, %lshift101
  %sub = sub i128 %X98, %mul
  %X104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.2
  store i128 %sub, i128* %X104, align 4
  br label %loop.latch105

loop.latch105:                                    ; preds = %loop.body77
  %add107 = add i128 %i.2, 1
  %sub110 = sub i128 %2, 1
  %slt111 = icmp slt i128 %add107, %sub110
  br i1 %slt111, label %loop.body77, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch105
  br label %if.exit113

if.exit113:                                       ; preds = %loop.exit112, %if.false72
  br label %if.exit114

if.exit114:                                       ; preds = %if.exit113, %if.true46
  br label %loop.body115

loop.body115:                                     ; preds = %loop.latch124, %if.exit114
  %i.3 = phi i128 [ 0, %if.exit114 ], [ %add126, %loop.latch124 ]
  %array_getter118 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call31, i128 0, i128 0, i128 %i.3
  %X119 = load i128, i128* %array_getter118, align 4
  %neg120 = sub i128 0, %X119
  %out123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.3
  store i128 %neg120, i128* %out123, align 4
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.body115
  %add126 = add i128 %i.3, 1
  %slt129 = icmp slt i128 %add126, %2
  br i1 %slt129, label %loop.body115, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch124
  br label %if.exit131

if.exit131:                                       ; preds = %loop.exit130, %if.true
  %out.0 = phi [256 x [256 x i128]]* [ %call13, %if.true ], [ %uniform_array, %loop.exit130 ]
  ret [256 x [256 x i128]]* %out.0
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %2, [256 x [256 x [256 x i128]]]* %3, [256 x i128]* %4) {
entry:
  %l10 = call i128 @fn_intrinsic_inline_init()
  %i14 = call i128 @fn_intrinsic_inline_init()
  %j23 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array27 = alloca [256 x [256 x i128]], align 8
  %uniform_array28 = alloca [256 x [256 x i128]], align 8
  %uniform_array29 = alloca [256 x [256 x i128]], align 8
  %uniform_array30 = alloca [256 x [256 x i128]], align 8
  %uniform_array31 = alloca [256 x [256 x i128]], align 8
  %uniform_array32 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch68, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add70, %loop.latch68 ]
  br label %loop.body33

loop.body33:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0, i128 0, i128 %j.0
  %a36 = load i128, i128* %array_getter, align 4
  %a039 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %i.0, i128 %j.0
  store i128 %a36, i128* %a039, align 4
  %array_getter43 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0, i128 1, i128 %j.0
  %a44 = load i128, i128* %array_getter43, align 4
  %a148 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array27, i128 0, i128 %i.0, i128 %j.0
  store i128 %a44, i128* %a148, align 4
  %array_getter51 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0, i128 0, i128 %j.0
  %b52 = load i128, i128* %array_getter51, align 4
  %b056 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array28, i128 0, i128 %i.0, i128 %j.0
  store i128 %b52, i128* %b056, align 4
  %array_getter60 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0, i128 1, i128 %j.0
  %b61 = load i128, i128* %array_getter60, align 4
  %b165 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array29, i128 0, i128 %i.0, i128 %j.0
  store i128 %b61, i128* %b165, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body33
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body33, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit
  %add70 = add i128 %i.0, 1
  %slt73 = icmp slt i128 %add70, 6
  br i1 %slt73, label %loop.body, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch68
  br label %loop.body75

loop.body75:                                      ; preds = %loop.latch96, %loop.exit74
  %i.1 = phi i128 [ 0, %loop.exit74 ], [ %add98, %loop.latch96 ]
  %array_getter79 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array28, i128 0, i128 %i.1
  %b080 = load [256 x i128], [256 x i128]* %array_getter79, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %b080, [256 x i128]* %spice_inline_array, align 4
  %call = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %spice_inline_array)
  %neg_b083 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array30, i128 0, i128 %i.1
  %5 = bitcast [256 x i128]* %neg_b083 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter89 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array29, i128 0, i128 %i.1
  %b190 = load [256 x i128], [256 x i128]* %array_getter89, align 4
  %spice_inline_array91 = alloca [256 x i128], align 8
  store [256 x i128] %b190, [256 x i128]* %spice_inline_array91, align 4
  %call92 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %4, [256 x i128]* %spice_inline_array91)
  %neg_b195 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array31, i128 0, i128 %i.1
  %7 = bitcast [256 x i128]* %neg_b195 to i8*
  %8 = bitcast [256 x i128]* %call92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch96

loop.latch96:                                     ; preds = %loop.body75
  %add98 = add i128 %i.1, 1
  %slt101 = icmp slt i128 %add98, 6
  br i1 %slt101, label %loop.body75, label %loop.exit102

loop.exit102:                                     ; preds = %loop.latch96
  %uniform_array103 = alloca [256 x [256 x i128]], align 8
  %uniform_array104 = alloca [256 x [256 x i128]], align 8
  %uniform_array105 = alloca [256 x [256 x i128]], align 8
  %call111 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %uniform_array28)
  %call117 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array27, [256 x [256 x i128]]* %uniform_array31)
  %call123 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %uniform_array29)
  %call129 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array27, [256 x [256 x i128]]* %uniform_array28)
  %call135 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %uniform_array31)
  %call141 = call [256 x [256 x i128]]* @prod2D(i128 %0, i128 %1, i128 6, [256 x [256 x i128]]* %uniform_array27, [256 x [256 x i128]]* %uniform_array30)
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch193, %loop.exit102
  %i.2 = phi i128 [ 0, %loop.exit102 ], [ %add195, %loop.latch193 ]
  %mul = mul i128 2, %1
  %array_getter147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call111, i128 0, i128 %i.2
  %a0b0_var148 = load [256 x i128], [256 x i128]* %array_getter147, align 4
  %spice_inline_array149 = alloca [256 x i128], align 8
  store [256 x i128] %a0b0_var148, [256 x i128]* %spice_inline_array149, align 4
  %array_getter152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call117, i128 0, i128 %i.2
  %a1b1_neg153 = load [256 x i128], [256 x i128]* %array_getter152, align 4
  %spice_inline_array154 = alloca [256 x i128], align 8
  store [256 x i128] %a1b1_neg153, [256 x i128]* %spice_inline_array154, align 4
  %call155 = call [256 x i128]* @long_add(i128 %0, i128 %mul, [256 x i128]* %spice_inline_array149, [256 x i128]* %spice_inline_array154)
  %real_init158 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array103, i128 0, i128 %i.2
  %9 = bitcast [256 x i128]* %real_init158 to i8*
  %10 = bitcast [256 x i128]* %call155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul161 = mul i128 2, %1
  %array_getter164 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call123, i128 0, i128 %i.2
  %a0b1_var165 = load [256 x i128], [256 x i128]* %array_getter164, align 4
  %spice_inline_array166 = alloca [256 x i128], align 8
  store [256 x i128] %a0b1_var165, [256 x i128]* %spice_inline_array166, align 4
  %array_getter169 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call129, i128 0, i128 %i.2
  %a1b0_var170 = load [256 x i128], [256 x i128]* %array_getter169, align 4
  %spice_inline_array171 = alloca [256 x i128], align 8
  store [256 x i128] %a1b0_var170, [256 x i128]* %spice_inline_array171, align 4
  %call172 = call [256 x i128]* @long_add(i128 %0, i128 %mul161, [256 x i128]* %spice_inline_array166, [256 x i128]* %spice_inline_array171)
  %imag_init175 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array104, i128 0, i128 %i.2
  %11 = bitcast [256 x i128]* %imag_init175 to i8*
  %12 = bitcast [256 x i128]* %call172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul178 = mul i128 2, %1
  %array_getter181 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call135, i128 0, i128 %i.2
  %a0b1_neg182 = load [256 x i128], [256 x i128]* %array_getter181, align 4
  %spice_inline_array183 = alloca [256 x i128], align 8
  store [256 x i128] %a0b1_neg182, [256 x i128]* %spice_inline_array183, align 4
  %array_getter186 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call141, i128 0, i128 %i.2
  %a1b0_neg187 = load [256 x i128], [256 x i128]* %array_getter186, align 4
  %spice_inline_array188 = alloca [256 x i128], align 8
  store [256 x i128] %a1b0_neg187, [256 x i128]* %spice_inline_array188, align 4
  %call189 = call [256 x i128]* @long_add(i128 %0, i128 %mul178, [256 x i128]* %spice_inline_array183, [256 x i128]* %spice_inline_array188)
  %imag_init_neg192 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array105, i128 0, i128 %i.2
  %13 = bitcast [256 x i128]* %imag_init_neg192 to i8*
  %14 = bitcast [256 x i128]* %call189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch193

loop.latch193:                                    ; preds = %loop.body142
  %add195 = add i128 %i.2, 1
  %mul198 = mul i128 2, 6
  %sub = sub i128 %mul198, 1
  %slt199 = icmp slt i128 %add195, %sub
  br i1 %slt199, label %loop.body142, label %loop.exit200

loop.exit200:                                     ; preds = %loop.latch193
  %uniform_array201 = alloca [256 x [256 x i128]], align 8
  %uniform_array202 = alloca [256 x [256 x i128]], align 8
  %uniform_array203 = alloca [256 x [256 x i128]], align 8
  %uniform_array204 = alloca [256 x [256 x i128]], align 8
  %uniform_array205 = alloca [256 x i128], align 8
  br label %loop.body206

loop.body206:                                     ; preds = %loop.latch210, %loop.exit200
  %i.3 = phi i128 [ 0, %loop.exit200 ], [ %add212, %loop.latch210 ]
  %zeros209 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array205, i128 0, i128 %i.3
  store i128 0, i128* %zeros209, align 4
  br label %loop.latch210

loop.latch210:                                    ; preds = %loop.body206
  %add212 = add i128 %i.3, 1
  %slt214 = icmp slt i128 %add212, 50
  br i1 %slt214, label %loop.body206, label %loop.exit215

loop.exit215:                                     ; preds = %loop.latch210
  br label %loop.body216

loop.body216:                                     ; preds = %loop.latch284, %loop.exit215
  %i.4 = phi i128 [ 0, %loop.exit215 ], [ %add286, %loop.latch284 ]
  %sub219 = sub i128 6, 1
  %eq = icmp eq i128 %i.4, %sub219
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body216
  %mul222 = mul i128 2, %1
  %add223 = add i128 %mul222, 1
  %call226 = call [256 x i128]* @long_add(i128 %0, i128 %add223, [256 x i128]* %uniform_array205, [256 x i128]* %uniform_array205)
  %real_carry229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array201, i128 0, i128 %i.4
  %15 = bitcast [256 x i128]* %real_carry229 to i8*
  %16 = bitcast [256 x i128]* %call226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul232 = mul i128 2, %1
  %add233 = add i128 %mul232, 1
  %call236 = call [256 x i128]* @long_add(i128 %0, i128 %add233, [256 x i128]* %uniform_array205, [256 x i128]* %uniform_array205)
  %imag_carry239 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array202, i128 0, i128 %i.4
  %17 = bitcast [256 x i128]* %imag_carry239 to i8*
  %18 = bitcast [256 x i128]* %call236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %loop.body216
  %mul242 = mul i128 2, %1
  %add243 = add i128 %mul242, 1
  %add247 = add i128 %i.4, 6
  %array_getter248 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array103, i128 0, i128 %add247
  %real_init249 = load [256 x i128], [256 x i128]* %array_getter248, align 4
  %spice_inline_array250 = alloca [256 x i128], align 8
  store [256 x i128] %real_init249, [256 x i128]* %spice_inline_array250, align 4
  %add254 = add i128 %i.4, 6
  %array_getter255 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array105, i128 0, i128 %add254
  %imag_init_neg256 = load [256 x i128], [256 x i128]* %array_getter255, align 4
  %spice_inline_array257 = alloca [256 x i128], align 8
  store [256 x i128] %imag_init_neg256, [256 x i128]* %spice_inline_array257, align 4
  %call258 = call [256 x i128]* @long_add(i128 %0, i128 %add243, [256 x i128]* %spice_inline_array250, [256 x i128]* %spice_inline_array257)
  %real_carry261 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array201, i128 0, i128 %i.4
  %19 = bitcast [256 x i128]* %real_carry261 to i8*
  %20 = bitcast [256 x i128]* %call258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul264 = mul i128 2, %1
  %add265 = add i128 %mul264, 1
  %add269 = add i128 %i.4, 6
  %array_getter270 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array104, i128 0, i128 %add269
  %imag_init271 = load [256 x i128], [256 x i128]* %array_getter270, align 4
  %spice_inline_array272 = alloca [256 x i128], align 8
  store [256 x i128] %imag_init271, [256 x i128]* %spice_inline_array272, align 4
  %add276 = add i128 %i.4, 6
  %array_getter277 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array103, i128 0, i128 %add276
  %real_init278 = load [256 x i128], [256 x i128]* %array_getter277, align 4
  %spice_inline_array279 = alloca [256 x i128], align 8
  store [256 x i128] %real_init278, [256 x i128]* %spice_inline_array279, align 4
  %call280 = call [256 x i128]* @long_add(i128 %0, i128 %add265, [256 x i128]* %spice_inline_array272, [256 x i128]* %spice_inline_array279)
  %imag_carry283 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array202, i128 0, i128 %i.4
  %21 = bitcast [256 x i128]* %imag_carry283 to i8*
  %22 = bitcast [256 x i128]* %call280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch284

loop.latch284:                                    ; preds = %if.exit
  %add286 = add i128 %i.4, 1
  %slt289 = icmp slt i128 %add286, 6
  br i1 %slt289, label %loop.body216, label %loop.exit290

loop.exit290:                                     ; preds = %loop.latch284
  br label %loop.body291

loop.body291:                                     ; preds = %loop.latch334, %loop.exit290
  %i.5 = phi i128 [ 0, %loop.exit290 ], [ %add336, %loop.latch334 ]
  %mul294 = mul i128 2, %1
  %add295 = add i128 %mul294, 2
  %mul297 = mul i128 2, %1
  %add298 = add i128 %mul297, 1
  %array_getter301 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array201, i128 0, i128 %i.5
  %real_carry302 = load [256 x i128], [256 x i128]* %array_getter301, align 4
  %spice_inline_array303 = alloca [256 x i128], align 8
  store [256 x i128] %real_carry302, [256 x i128]* %spice_inline_array303, align 4
  %array_getter306 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array103, i128 0, i128 %i.5
  %real_init307 = load [256 x i128], [256 x i128]* %array_getter306, align 4
  %spice_inline_array308 = alloca [256 x i128], align 8
  store [256 x i128] %real_init307, [256 x i128]* %spice_inline_array308, align 4
  %call309 = call [256 x i128]* @long_add_unequal(i128 %0, i128 %add295, i128 %add298, [256 x i128]* %spice_inline_array303, [256 x i128]* %spice_inline_array308)
  %real_final312 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array203, i128 0, i128 %i.5
  %23 = bitcast [256 x i128]* %real_final312 to i8*
  %24 = bitcast [256 x i128]* %call309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %mul315 = mul i128 2, %1
  %add316 = add i128 %mul315, 2
  %mul318 = mul i128 2, %1
  %add319 = add i128 %mul318, 1
  %array_getter322 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array202, i128 0, i128 %i.5
  %imag_carry323 = load [256 x i128], [256 x i128]* %array_getter322, align 4
  %spice_inline_array324 = alloca [256 x i128], align 8
  store [256 x i128] %imag_carry323, [256 x i128]* %spice_inline_array324, align 4
  %array_getter327 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array104, i128 0, i128 %i.5
  %imag_init328 = load [256 x i128], [256 x i128]* %array_getter327, align 4
  %spice_inline_array329 = alloca [256 x i128], align 8
  store [256 x i128] %imag_init328, [256 x i128]* %spice_inline_array329, align 4
  %call330 = call [256 x i128]* @long_add_unequal(i128 %0, i128 %add316, i128 %add319, [256 x i128]* %spice_inline_array324, [256 x i128]* %spice_inline_array329)
  %imag_final333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array204, i128 0, i128 %i.5
  %25 = bitcast [256 x i128]* %imag_final333 to i8*
  %26 = bitcast [256 x i128]* %call330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch334

loop.latch334:                                    ; preds = %loop.body291
  %add336 = add i128 %i.5, 1
  %slt339 = icmp slt i128 %add336, 6
  br i1 %slt339, label %loop.body291, label %loop.exit340

loop.exit340:                                     ; preds = %loop.latch334
  %uniform_array341 = alloca [256 x [256 x [256 x i128]]], align 8
  %uniform_array342 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body343

loop.body343:                                     ; preds = %loop.latch372, %loop.exit340
  %i.6 = phi i128 [ 0, %loop.exit340 ], [ %add374, %loop.latch372 ]
  %add347 = add i128 %1, 3
  %array_getter350 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array203, i128 0, i128 %i.6
  %real_final351 = load [256 x i128], [256 x i128]* %array_getter350, align 4
  %spice_inline_array352 = alloca [256 x i128], align 8
  store [256 x i128] %real_final351, [256 x i128]* %spice_inline_array352, align 4
  %call354 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %add347, [256 x i128]* %spice_inline_array352, [256 x i128]* %4)
  %XYreal_temp357 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array341, i128 0, i128 %i.6
  %27 = bitcast [256 x [256 x i128]]* %XYreal_temp357 to i8*
  %28 = bitcast [256 x [256 x i128]]* %call354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  %add361 = add i128 %1, 3
  %array_getter364 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array204, i128 0, i128 %i.6
  %imag_final365 = load [256 x i128], [256 x i128]* %array_getter364, align 4
  %spice_inline_array366 = alloca [256 x i128], align 8
  store [256 x i128] %imag_final365, [256 x i128]* %spice_inline_array366, align 4
  %call368 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %add361, [256 x i128]* %spice_inline_array366, [256 x i128]* %4)
  %XYimag_temp371 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array342, i128 0, i128 %i.6
  %29 = bitcast [256 x [256 x i128]]* %XYimag_temp371 to i8*
  %30 = bitcast [256 x [256 x i128]]* %call368 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch372

loop.latch372:                                    ; preds = %loop.body343
  %add374 = add i128 %i.6, 1
  %slt377 = icmp slt i128 %add374, 6
  br i1 %slt377, label %loop.body343, label %loop.exit378

loop.exit378:                                     ; preds = %loop.latch372
  br label %loop.body379

loop.body379:                                     ; preds = %loop.latch406, %loop.exit378
  %i.7 = phi i128 [ 0, %loop.exit378 ], [ %add408, %loop.latch406 ]
  br label %loop.body380

loop.body380:                                     ; preds = %loop.latch399, %loop.body379
  %j.1 = phi i128 [ 0, %loop.body379 ], [ %add401, %loop.latch399 ]
  %array_getter384 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array341, i128 0, i128 %i.7, i128 1, i128 %j.1
  %XYreal_temp385 = load i128, i128* %array_getter384, align 4
  %out389 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array32, i128 0, i128 %i.7, i128 0, i128 %j.1
  store i128 %XYreal_temp385, i128* %out389, align 4
  %array_getter393 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array342, i128 0, i128 %i.7, i128 1, i128 %j.1
  %XYimag_temp394 = load i128, i128* %array_getter393, align 4
  %out398 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array32, i128 0, i128 %i.7, i128 1, i128 %j.1
  store i128 %XYimag_temp394, i128* %out398, align 4
  br label %loop.latch399

loop.latch399:                                    ; preds = %loop.body380
  %add401 = add i128 %j.1, 1
  %slt404 = icmp slt i128 %add401, %1
  br i1 %slt404, label %loop.body380, label %loop.exit405

loop.exit405:                                     ; preds = %loop.latch399
  br label %loop.latch406

loop.latch406:                                    ; preds = %loop.exit405
  %add408 = add i128 %i.7, 1
  %slt411 = icmp slt i128 %add408, 6
  br i1 %slt411, label %loop.body379, label %loop.exit412

loop.exit412:                                     ; preds = %loop.latch406
  ret [256 x [256 x [256 x i128]]]* %uniform_array32
}

define void @fn_template_init_bigmult(%struct_template_circuit_bigmult* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 0
  %bigmult.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 1
  %bigmult.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 2
  %bigmult.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 3
  %bigmult.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %LOGK4 = call i128 @fn_intrinsic_inline_init()
  %i5 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %call = call i128 @log_ceil(i128 %bigmult.k.read_arg_inner)
  %mul = mul i128 2, %bigmult.n.read_arg_inner
  %add = add i128 %mul, %call
  %call9 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %bigmult.n.read_arg_inner, i128 %bigmult.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add35, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_inner, i128 0, i128 %i.0
  %a11 = load i128, i128* %array_getter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call9, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %mult16 = load i128, i128* %array_getter15, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult16, i128 %a11, i1* @constraint.150)
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call9, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %mult20 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter18, i128 0, i128 %i.0
  store i128 %a11, i128* %mult20, align 4
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_inner, i128 0, i128 %i.0
  %b23 = load i128, i128* %array_getter22, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call9, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %mult28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult28, i128 %b23, i1* @constraint.151)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call9, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %mult33 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter31, i128 0, i128 %i.0
  store i128 %b23, i128* %mult33, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add35 = add i128 %i.0, 1
  %slt = icmp slt i128 %add35, %bigmult.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul40 = mul i128 2, %bigmult.k.read_arg_inner
  %sub = sub i128 %mul40, 1
  %call41 = call %struct_template_circuit_longtoshortnoendcarry* @fn_template_build_longtoshortnoendcarry(i128 %bigmult.n.read_arg_inner, i128 %sub)
  br label %loop.body42

loop.body42:                                      ; preds = %loop.latch58, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add60, %loop.latch58 ]
  %struct_getter44 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call9, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter44, align 8
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %mult47 = load i128, i128* %array_getter46, align 4
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %call41, i32 0, i32 2
  %longtoshortnoendcarry.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_outter, i128 0, i128 %i.1
  %longshort52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_add_constraint(i128 %longshort52, i128 %mult47, i1* @constraint.152)
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %call41, i32 0, i32 2
  %longtoshortnoendcarry.in.read_input_outter55 = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %longshort57 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.in.read_input_outter55, i128 0, i128 %i.1
  store i128 %mult47, i128* %longshort57, align 4
  br label %loop.latch58

loop.latch58:                                     ; preds = %loop.body42
  %add60 = add i128 %i.1, 1
  %mul63 = mul i128 2, %bigmult.k.read_arg_inner
  %sub64 = sub i128 %mul63, 1
  %slt65 = icmp slt i128 %add60, %sub64
  br i1 %slt65, label %loop.body42, label %loop.exit66

loop.exit66:                                      ; preds = %loop.latch58
  br label %loop.body67

loop.body67:                                      ; preds = %loop.latch80, %loop.exit66
  %i.2 = phi i128 [ 0, %loop.exit66 ], [ %add82, %loop.latch80 ]
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_longtoshortnoendcarry, %struct_template_circuit_longtoshortnoendcarry* %call41, i32 0, i32 4
  %longtoshortnoendcarry.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %longtoshortnoendcarry.out.read_output_outter, i128 0, i128 %i.2
  %longshort72 = load i128, i128* %array_getter71, align 4
  %array_getter75 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  %out76 = load i128, i128* %array_getter75, align 4
  call void @fn_intrinsic_add_constraint(i128 %out76, i128 %longshort72, i1* @constraint.153)
  %out79 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  store i128 %longshort72, i128* %out79, align 4
  br label %loop.latch80

loop.latch80:                                     ; preds = %loop.body67
  %add82 = add i128 %i.2, 1
  %mul85 = mul i128 2, %bigmult.k.read_arg_inner
  %slt86 = icmp slt i128 %add82, %mul85
  br i1 %slt86, label %loop.body67, label %loop.exit87

loop.exit87:                                      ; preds = %loop.latch80
  br label %exit

exit:                                             ; preds = %loop.exit87
  %bigmult.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %0, i32 0, i32 4
  store [256 x i128]* %out, [256 x i128]** %bigmult.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmult = alloca %struct_template_circuit_bigmult, align 8
  %bigmult.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %struct_template_circuit_bigmult, i32 0, i32 0
  store i128 %0, i128* %bigmult.n.write_arg_inner, align 4
  %bigmult.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %struct_template_circuit_bigmult, i32 0, i32 1
  store i128 %1, i128* %bigmult.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmult* %struct_template_circuit_bigmult
}

define [256 x i128]* @mod_exp(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %i3 = call i128 @fn_intrinsic_inline_init()
  %bitlength6 = call i128 @fn_intrinsic_inline_init()
  %j7 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch33, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add35, %loop.latch33 ]
  %bitlength.0 = phi i128 [ 0, %entry ], [ %bitlength.2, %loop.latch33 ]
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch, %loop.body
  %bitlength.1 = phi i128 [ %bitlength.0, %loop.body ], [ %bitlength.2, %loop.latch ]
  %j.0 = phi i128 [ 0, %loop.body ], [ %add30, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %e10 = load i128, i128* %array_getter, align 4
  %rshift = lshr i128 %e10, %j.0
  %and = and i128 %rshift, 1
  %mul = mul i128 %0, %i.0
  %add = add i128 %j.0, %mul
  %eBits14 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add
  store i128 %and, i128* %eBits14, align 4
  %mul19 = mul i128 %0, %i.0
  %add20 = add i128 %j.0, %mul19
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add20
  %eBits22 = load i128, i128* %array_getter21, align 4
  %eq = icmp eq i128 %eBits22, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body8
  %mul26 = mul i128 %0, %i.0
  %add27 = add i128 %j.0, %mul26
  %add28 = add i128 %add27, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body8
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %bitlength.2 = phi i128 [ %add28, %if.true ], [ %bitlength.1, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add30 = add i128 %j.0, 1
  %slt = icmp slt i128 %add30, %0
  br i1 %slt, label %loop.body8, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch33

loop.latch33:                                     ; preds = %loop.exit
  %add35 = add i128 %i.0, 1
  %slt37 = icmp slt i128 %add35, %1
  br i1 %slt37, label %loop.body, label %loop.exit38

loop.exit38:                                      ; preds = %loop.latch33
  %uniform_array39 = alloca [256 x i128], align 8
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch44, %loop.exit38
  %i.1 = phi i128 [ 0, %loop.exit38 ], [ %add46, %loop.latch44 ]
  %out43 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array39, i128 0, i128 %i.1
  store i128 0, i128* %out43, align 4
  br label %loop.latch44

loop.latch44:                                     ; preds = %loop.body40
  %add46 = add i128 %i.1, 1
  %slt48 = icmp slt i128 %add46, 50
  br i1 %slt48, label %loop.body40, label %loop.exit49

loop.exit49:                                      ; preds = %loop.latch44
  %out51 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array39, i128 0, i128 0
  store i128 1, i128* %out51, align 4
  %sub = sub i128 %bitlength.2, 1
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch94, %loop.exit49
  %out.0 = phi [256 x i128]* [ %uniform_array39, %loop.exit49 ], [ %out.2, %loop.latch94 ]
  %i.2 = phi i128 [ %sub, %loop.exit49 ], [ %sub96, %loop.latch94 ]
  %array_getter58 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  %eBits59 = load i128, i128* %array_getter58, align 4
  %eq60 = icmp eq i128 %eBits59, 1
  br i1 %eq60, label %if.true54, label %if.false55

if.true54:                                        ; preds = %loop.body53
  %uniform_array61 = alloca [256 x i128], align 8
  %call = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %out.0, [256 x i128]* %2)
  %uniform_array65 = alloca [256 x [256 x i128]], align 8
  %call69 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %3)
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call69, i128 0, i128 1
  %temp272 = load [256 x i128], [256 x i128]* %array_getter71, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %temp272, [256 x i128]* %spice_inline_array, align 4
  br label %if.exit73

if.false55:                                       ; preds = %loop.body53
  br label %if.exit73

if.exit73:                                        ; preds = %if.false55, %if.true54
  %out.1 = phi [256 x i128]* [ %spice_inline_array, %if.true54 ], [ %out.0, %if.false55 ]
  %sgt = icmp sgt i128 %i.2, 0
  br i1 %sgt, label %if.true74, label %if.false75

if.true74:                                        ; preds = %if.exit73
  %uniform_array77 = alloca [256 x i128], align 8
  %call82 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %out.1, [256 x i128]* %out.1)
  %uniform_array83 = alloca [256 x [256 x i128]], align 8
  %call88 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call82, [256 x i128]* %3)
  %array_getter90 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call88, i128 0, i128 1
  %temp291 = load [256 x i128], [256 x i128]* %array_getter90, align 4
  %spice_inline_array92 = alloca [256 x i128], align 8
  store [256 x i128] %temp291, [256 x i128]* %spice_inline_array92, align 4
  br label %if.exit93

if.false75:                                       ; preds = %if.exit73
  br label %if.exit93

if.exit93:                                        ; preds = %if.false75, %if.true74
  %out.2 = phi [256 x i128]* [ %spice_inline_array92, %if.true74 ], [ %out.1, %if.false75 ]
  br label %loop.latch94

loop.latch94:                                     ; preds = %if.exit93
  %sub96 = sub i128 %i.2, 1
  %sge = icmp sge i128 %sub96, 0
  br i1 %sge, label %loop.body53, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch94
  ret [256 x i128]* %out.2
}

define void @fn_template_init_biglessthan(%struct_template_circuit_biglessthan* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 0
  %biglessthan.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 1
  %biglessthan.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 2
  %biglessthan.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 3
  %biglessthan.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %eq4 = alloca [256 x %struct_template_circuit_isequal*], align 8
  %eq_ands5 = alloca [256 x %struct_template_circuit_and*], align 8
  %lt6 = alloca [256 x %struct_template_circuit_lessthan*], align 8
  %ands7 = alloca [256 x %struct_template_circuit_and*], align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %i8 = call i128 @fn_intrinsic_inline_init()
  %ors9 = alloca [256 x %struct_template_circuit_or*], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %biglessthan.n.read_arg_inner)
  %lt11 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %i.0
  store %struct_template_circuit_lessthan* %call, %struct_template_circuit_lessthan** %lt11, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_inner, i128 0, i128 %i.0
  %a13 = load i128, i128* %array_getter, align 4
  %array_getter16 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %i.0
  %lt17 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter16, align 8
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt17, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt20 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt20, i128 %a13, i1* @constraint.154)
  %array_getter23 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %i.0
  %lt24 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter23, align 8
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt24, i32 0, i32 1
  %lessthan.in.read_input_outter26 = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %lt27 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter26, i128 0, i128 0
  store i128 %a13, i128* %lt27, align 4
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_inner, i128 0, i128 %i.0
  %b30 = load i128, i128* %array_getter29, align 4
  %array_getter33 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %i.0
  %lt34 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter33, align 8
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt34, i32 0, i32 1
  %lessthan.in.read_input_outter36 = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter36, i128 0, i128 1
  %lt38 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt38, i128 %b30, i1* @constraint.155)
  %array_getter41 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %i.0
  %lt42 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter41, align 8
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt42, i32 0, i32 1
  %lessthan.in.read_input_outter44 = load [256 x i128]*, [256 x i128]** %struct_getter43, align 8
  %lt45 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter44, i128 0, i128 1
  store i128 %b30, i128* %lt45, align 4
  %call46 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %eq49 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %i.0
  store %struct_template_circuit_isequal* %call46, %struct_template_circuit_isequal** %eq49, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_inner, i128 0, i128 %i.0
  %a53 = load i128, i128* %array_getter52, align 4
  %array_getter56 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %i.0
  %eq57 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq57, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %array_getter59 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %eq60 = load i128, i128* %array_getter59, align 4
  call void @fn_intrinsic_add_constraint(i128 %eq60, i128 %a53, i1* @constraint.156)
  %array_getter63 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %i.0
  %eq64 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter63, align 8
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq64, i32 0, i32 0
  %isequal.in.read_input_outter66 = load [256 x i128]*, [256 x i128]** %struct_getter65, align 8
  %eq67 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter66, i128 0, i128 0
  store i128 %a53, i128* %eq67, align 4
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_inner, i128 0, i128 %i.0
  %b71 = load i128, i128* %array_getter70, align 4
  %array_getter74 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %i.0
  %eq75 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter74, align 8
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq75, i32 0, i32 0
  %isequal.in.read_input_outter77 = load [256 x i128]*, [256 x i128]** %struct_getter76, align 8
  %array_getter78 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter77, i128 0, i128 1
  %eq79 = load i128, i128* %array_getter78, align 4
  call void @fn_intrinsic_add_constraint(i128 %eq79, i128 %b71, i1* @constraint.157)
  %array_getter82 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %i.0
  %eq83 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter82, align 8
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq83, i32 0, i32 0
  %isequal.in.read_input_outter85 = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %eq86 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter85, i128 0, i128 1
  store i128 %b71, i128* %eq86, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %biglessthan.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %biglessthan.k.read_arg_inner, 2
  br label %loop.body90

loop.body90:                                      ; preds = %loop.latch307, %loop.exit
  %i.1 = phi i128 [ %sub, %loop.exit ], [ %sub309, %loop.latch307 ]
  %call91 = call %struct_template_circuit_and* @fn_template_build_and()
  %ands94 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  store %struct_template_circuit_and* %call91, %struct_template_circuit_and** %ands94, align 8
  %call95 = call %struct_template_circuit_and* @fn_template_build_and()
  %eq_ands98 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  store %struct_template_circuit_and* %call95, %struct_template_circuit_and** %eq_ands98, align 8
  %call99 = call %struct_template_circuit_or* @fn_template_build_or()
  %ors102 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  store %struct_template_circuit_or* %call99, %struct_template_circuit_or** %ors102, align 8
  %sub105 = sub i128 %biglessthan.k.read_arg_inner, 2
  %eq106 = icmp eq i128 %i.1, %sub105
  br i1 %eq106, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body90
  %sub109 = sub i128 %biglessthan.k.read_arg_inner, 1
  %array_getter110 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %sub109
  %eq111 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter110, align 8
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq111, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter112, align 4
  %array_getter115 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands116 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter115, align 8
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands116, i32 0, i32 0
  %and.a.read_input_outter = load i128, i128* %struct_getter117, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.a.read_input_outter, i128 %isequal.out.read_output_outter, i1* @constraint.158)
  %array_getter120 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands121 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter120, align 8
  %and.a.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands121, i32 0, i32 0
  store i128 %isequal.out.read_output_outter, i128* %and.a.write_input_outter, align 4
  %sub124 = sub i128 %biglessthan.k.read_arg_inner, 2
  %array_getter125 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %sub124
  %lt126 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter125, align 8
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt126, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter127, align 4
  %array_getter130 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands131 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter130, align 8
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands131, i32 0, i32 1
  %and.b.read_input_outter = load i128, i128* %struct_getter132, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.b.read_input_outter, i128 %lessthan.out.read_output_outter, i1* @constraint.159)
  %array_getter135 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands136 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter135, align 8
  %and.b.write_input_outter = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands136, i32 0, i32 1
  store i128 %lessthan.out.read_output_outter, i128* %and.b.write_input_outter, align 4
  %sub139 = sub i128 %biglessthan.k.read_arg_inner, 1
  %array_getter140 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %sub139
  %eq141 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter140, align 8
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq141, i32 0, i32 1
  %isequal.out.read_output_outter143 = load i128, i128* %struct_getter142, align 4
  %array_getter146 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands147 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter146, align 8
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands147, i32 0, i32 0
  %and.a.read_input_outter149 = load i128, i128* %struct_getter148, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.a.read_input_outter149, i128 %isequal.out.read_output_outter143, i1* @constraint.160)
  %array_getter152 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands153 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter152, align 8
  %and.a.write_input_outter154 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands153, i32 0, i32 0
  store i128 %isequal.out.read_output_outter143, i128* %and.a.write_input_outter154, align 4
  %sub157 = sub i128 %biglessthan.k.read_arg_inner, 2
  %array_getter158 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %sub157
  %eq159 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter158, align 8
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq159, i32 0, i32 1
  %isequal.out.read_output_outter161 = load i128, i128* %struct_getter160, align 4
  %array_getter164 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands165 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter164, align 8
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands165, i32 0, i32 1
  %and.b.read_input_outter167 = load i128, i128* %struct_getter166, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.b.read_input_outter167, i128 %isequal.out.read_output_outter161, i1* @constraint.161)
  %array_getter170 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands171 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter170, align 8
  %and.b.write_input_outter172 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands171, i32 0, i32 1
  store i128 %isequal.out.read_output_outter161, i128* %and.b.write_input_outter172, align 4
  %sub175 = sub i128 %biglessthan.k.read_arg_inner, 1
  %array_getter176 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %sub175
  %lt177 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter176, align 8
  %struct_getter178 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt177, i32 0, i32 2
  %lessthan.out.read_output_outter179 = load i128, i128* %struct_getter178, align 4
  %array_getter182 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors183 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter182, align 8
  %struct_getter184 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors183, i32 0, i32 0
  %or.a.read_input_outter = load i128, i128* %struct_getter184, align 4
  call void @fn_intrinsic_add_constraint(i128 %or.a.read_input_outter, i128 %lessthan.out.read_output_outter179, i1* @constraint.162)
  %array_getter187 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors188 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter187, align 8
  %or.a.write_input_outter = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors188, i32 0, i32 0
  store i128 %lessthan.out.read_output_outter179, i128* %or.a.write_input_outter, align 4
  %array_getter191 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands192 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter191, align 8
  %struct_getter193 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands192, i32 0, i32 2
  %and.out.read_output_outter = load i128, i128* %struct_getter193, align 4
  %array_getter196 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors197 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter196, align 8
  %struct_getter198 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors197, i32 0, i32 1
  %or.b.read_input_outter = load i128, i128* %struct_getter198, align 4
  call void @fn_intrinsic_add_constraint(i128 %or.b.read_input_outter, i128 %and.out.read_output_outter, i1* @constraint.163)
  %array_getter201 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors202 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter201, align 8
  %or.b.write_input_outter = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors202, i32 0, i32 1
  store i128 %and.out.read_output_outter, i128* %or.b.write_input_outter, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body90
  %add205 = add i128 %i.1, 1
  %array_getter206 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %add205
  %eq_ands207 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter206, align 8
  %struct_getter208 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands207, i32 0, i32 2
  %and.out.read_output_outter209 = load i128, i128* %struct_getter208, align 4
  %array_getter212 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands213 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter212, align 8
  %struct_getter214 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands213, i32 0, i32 0
  %and.a.read_input_outter215 = load i128, i128* %struct_getter214, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.a.read_input_outter215, i128 %and.out.read_output_outter209, i1* @constraint.164)
  %array_getter218 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands219 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter218, align 8
  %and.a.write_input_outter220 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands219, i32 0, i32 0
  store i128 %and.out.read_output_outter209, i128* %and.a.write_input_outter220, align 4
  %array_getter223 = getelementptr inbounds [256 x %struct_template_circuit_lessthan*], [256 x %struct_template_circuit_lessthan*]* %lt6, i128 0, i128 %i.1
  %lt224 = load %struct_template_circuit_lessthan*, %struct_template_circuit_lessthan** %array_getter223, align 8
  %struct_getter225 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %lt224, i32 0, i32 2
  %lessthan.out.read_output_outter226 = load i128, i128* %struct_getter225, align 4
  %array_getter229 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands230 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter229, align 8
  %struct_getter231 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands230, i32 0, i32 1
  %and.b.read_input_outter232 = load i128, i128* %struct_getter231, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.b.read_input_outter232, i128 %lessthan.out.read_output_outter226, i1* @constraint.165)
  %array_getter235 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands236 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter235, align 8
  %and.b.write_input_outter237 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands236, i32 0, i32 1
  store i128 %lessthan.out.read_output_outter226, i128* %and.b.write_input_outter237, align 4
  %add240 = add i128 %i.1, 1
  %array_getter241 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %add240
  %eq_ands242 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter241, align 8
  %struct_getter243 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands242, i32 0, i32 2
  %and.out.read_output_outter244 = load i128, i128* %struct_getter243, align 4
  %array_getter247 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands248 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter247, align 8
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands248, i32 0, i32 0
  %and.a.read_input_outter250 = load i128, i128* %struct_getter249, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.a.read_input_outter250, i128 %and.out.read_output_outter244, i1* @constraint.166)
  %array_getter253 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands254 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter253, align 8
  %and.a.write_input_outter255 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands254, i32 0, i32 0
  store i128 %and.out.read_output_outter244, i128* %and.a.write_input_outter255, align 4
  %array_getter258 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %eq4, i128 0, i128 %i.1
  %eq259 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter258, align 8
  %struct_getter260 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %eq259, i32 0, i32 1
  %isequal.out.read_output_outter261 = load i128, i128* %struct_getter260, align 4
  %array_getter264 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands265 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter264, align 8
  %struct_getter266 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands265, i32 0, i32 1
  %and.b.read_input_outter267 = load i128, i128* %struct_getter266, align 4
  call void @fn_intrinsic_add_constraint(i128 %and.b.read_input_outter267, i128 %isequal.out.read_output_outter261, i1* @constraint.167)
  %array_getter270 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %eq_ands5, i128 0, i128 %i.1
  %eq_ands271 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter270, align 8
  %and.b.write_input_outter272 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %eq_ands271, i32 0, i32 1
  store i128 %isequal.out.read_output_outter261, i128* %and.b.write_input_outter272, align 4
  %add275 = add i128 %i.1, 1
  %array_getter276 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %add275
  %ors277 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter276, align 8
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors277, i32 0, i32 2
  %or.out.read_output_outter = load i128, i128* %struct_getter278, align 4
  %array_getter281 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors282 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter281, align 8
  %struct_getter283 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors282, i32 0, i32 0
  %or.a.read_input_outter284 = load i128, i128* %struct_getter283, align 4
  call void @fn_intrinsic_add_constraint(i128 %or.a.read_input_outter284, i128 %or.out.read_output_outter, i1* @constraint.168)
  %array_getter287 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors288 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter287, align 8
  %or.a.write_input_outter289 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors288, i32 0, i32 0
  store i128 %or.out.read_output_outter, i128* %or.a.write_input_outter289, align 4
  %array_getter292 = getelementptr inbounds [256 x %struct_template_circuit_and*], [256 x %struct_template_circuit_and*]* %ands7, i128 0, i128 %i.1
  %ands293 = load %struct_template_circuit_and*, %struct_template_circuit_and** %array_getter292, align 8
  %struct_getter294 = getelementptr inbounds %struct_template_circuit_and, %struct_template_circuit_and* %ands293, i32 0, i32 2
  %and.out.read_output_outter295 = load i128, i128* %struct_getter294, align 4
  %array_getter298 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors299 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter298, align 8
  %struct_getter300 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors299, i32 0, i32 1
  %or.b.read_input_outter301 = load i128, i128* %struct_getter300, align 4
  call void @fn_intrinsic_add_constraint(i128 %or.b.read_input_outter301, i128 %and.out.read_output_outter295, i1* @constraint.169)
  %array_getter304 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 %i.1
  %ors305 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter304, align 8
  %or.b.write_input_outter306 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors305, i32 0, i32 1
  store i128 %and.out.read_output_outter295, i128* %or.b.write_input_outter306, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch307

loop.latch307:                                    ; preds = %if.exit
  %sub309 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub309, 0
  br i1 %sge, label %loop.body90, label %loop.exit311

loop.exit311:                                     ; preds = %loop.latch307
  %array_getter313 = getelementptr inbounds [256 x %struct_template_circuit_or*], [256 x %struct_template_circuit_or*]* %ors9, i128 0, i128 0
  %ors314 = load %struct_template_circuit_or*, %struct_template_circuit_or** %array_getter313, align 8
  %struct_getter315 = getelementptr inbounds %struct_template_circuit_or, %struct_template_circuit_or* %ors314, i32 0, i32 2
  %or.out.read_output_outter316 = load i128, i128* %struct_getter315, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %or.out.read_output_outter316, i1* @constraint.170)
  %biglessthan.out.write_output_inner = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 4
  store i128 %or.out.read_output_outter316, i128* %biglessthan.out.write_output_inner, align 4
  %struct_getter320 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 4
  %biglessthan.out.read_output_inner = load i128, i128* %struct_getter320, align 4
  br label %exit

exit:                                             ; preds = %loop.exit311
  %biglessthan.out.write_output_inner322 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %0, i32 0, i32 4
  store i128 %biglessthan.out.read_output_inner, i128* %biglessthan.out.write_output_inner322, align 4
  ret void
}

define %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_biglessthan = alloca %struct_template_circuit_biglessthan, align 8
  %biglessthan.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %struct_template_circuit_biglessthan, i32 0, i32 0
  store i128 %0, i128* %biglessthan.n.write_arg_inner, align 4
  %biglessthan.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %struct_template_circuit_biglessthan, i32 0, i32 1
  store i128 %1, i128* %biglessthan.k.write_arg_inner, align 4
  ret %struct_template_circuit_biglessthan* %struct_template_circuit_biglessthan
}

define void @fn_template_init_fpisequal(%struct_template_circuit_fpisequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 0
  %fpisequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 1
  %fpisequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 2
  %fpisequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 3
  %fpisequal.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %lt4 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %isEqual5 = alloca [256 x %struct_template_circuit_isequal*], align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %idx7 = call i128 @fn_intrinsic_inline_init()
  %sum8 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch58, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add60, %loop.latch58 ]
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpisequal.n.read_arg_inner, i128 %fpisequal.k.read_arg_inner)
  %lt10 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %i.0
  store %struct_template_circuit_biglessthan* %call, %struct_template_circuit_biglessthan** %lt10, align 8
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %in14 = load i128, i128* %array_getter, align 4
  %array_getter17 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %i.0
  %lt18 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter17, align 8
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt18, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %idx.0
  %lt22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt22, i128 %in14, i1* @constraint.171)
  %array_getter25 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %i.0
  %lt26 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter25, align 8
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt26, i32 0, i32 2
  %biglessthan.a.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %lt30 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter28, i128 0, i128 %idx.0
  store i128 %in14, i128* %lt30, align 4
  %array_getter32 = getelementptr inbounds [256 x i128], [256 x i128]* %fpisequal.p.read_arg_inner, i128 0, i128 %idx.0
  %p33 = load i128, i128* %array_getter32, align 4
  %array_getter36 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %i.0
  %lt37 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter36, align 8
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt37, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %idx.0
  %lt41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt41, i128 %p33, i1* @constraint.172)
  %array_getter44 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %i.0
  %lt45 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt45, i32 0, i32 3
  %biglessthan.b.read_input_outter47 = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %lt49 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter47, i128 0, i128 %idx.0
  store i128 %p33, i128* %lt49, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fpisequal.k.read_arg_inner
  br i1 %slt, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %array_getter55 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %i.0
  %lt56 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter55, align 8
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt56, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.173)
  br label %loop.latch58

loop.latch58:                                     ; preds = %loop.exit
  %add60 = add i128 %i.0, 1
  %slt62 = icmp slt i128 %add60, 2
  br i1 %slt62, label %loop.body, label %loop.exit63

loop.exit63:                                      ; preds = %loop.latch58
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch113, %loop.exit63
  %i.1 = phi i128 [ 0, %loop.exit63 ], [ %add115, %loop.latch113 ]
  %sum.0 = phi i128 [ 0, %loop.exit63 ], [ %add112, %loop.latch113 ]
  %call65 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %isEqual68 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %i.1
  store %struct_template_circuit_isequal* %call65, %struct_template_circuit_isequal** %isEqual68, align 8
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_inner, i128 0, i128 0, i128 %i.1
  %in72 = load i128, i128* %array_getter71, align 4
  %array_getter75 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %i.1
  %isEqual76 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter75, align 8
  %struct_getter77 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual76, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter77, align 8
  %array_getter78 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %isEqual79 = load i128, i128* %array_getter78, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEqual79, i128 %in72, i1* @constraint.174)
  %array_getter82 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %i.1
  %isEqual83 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter82, align 8
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual83, i32 0, i32 0
  %isequal.in.read_input_outter85 = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %isEqual86 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter85, i128 0, i128 0
  store i128 %in72, i128* %isEqual86, align 4
  %array_getter89 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_inner, i128 0, i128 1, i128 %i.1
  %in90 = load i128, i128* %array_getter89, align 4
  %array_getter93 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %i.1
  %isEqual94 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter93, align 8
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual94, i32 0, i32 0
  %isequal.in.read_input_outter96 = load [256 x i128]*, [256 x i128]** %struct_getter95, align 8
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter96, i128 0, i128 1
  %isEqual98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEqual98, i128 %in90, i1* @constraint.175)
  %array_getter101 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %i.1
  %isEqual102 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter101, align 8
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual102, i32 0, i32 0
  %isequal.in.read_input_outter104 = load [256 x i128]*, [256 x i128]** %struct_getter103, align 8
  %isEqual105 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter104, i128 0, i128 1
  store i128 %in90, i128* %isEqual105, align 4
  %array_getter109 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %i.1
  %isEqual110 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter109, align 8
  %struct_getter111 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual110, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter111, align 4
  %add112 = add i128 %sum.0, %isequal.out.read_output_outter
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.body64
  %add115 = add i128 %i.1, 1
  %slt118 = icmp slt i128 %add115, %fpisequal.k.read_arg_inner
  br i1 %slt118, label %loop.body64, label %loop.exit119

loop.exit119:                                     ; preds = %loop.latch113
  %call120 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %isEqual123 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %fpisequal.k.read_arg_inner
  store %struct_template_circuit_isequal* %call120, %struct_template_circuit_isequal** %isEqual123, align 8
  %array_getter127 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual128 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter127, align 8
  %struct_getter129 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual128, i32 0, i32 0
  %isequal.in.read_input_outter130 = load [256 x i128]*, [256 x i128]** %struct_getter129, align 8
  %array_getter131 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter130, i128 0, i128 0
  %isEqual132 = load i128, i128* %array_getter131, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEqual132, i128 %add112, i1* @constraint.176)
  %array_getter135 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual136 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter135, align 8
  %struct_getter137 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual136, i32 0, i32 0
  %isequal.in.read_input_outter138 = load [256 x i128]*, [256 x i128]** %struct_getter137, align 8
  %isEqual139 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter138, i128 0, i128 0
  store i128 %add112, i128* %isEqual139, align 4
  %array_getter143 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual144 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter143, align 8
  %struct_getter145 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual144, i32 0, i32 0
  %isequal.in.read_input_outter146 = load [256 x i128]*, [256 x i128]** %struct_getter145, align 8
  %array_getter147 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter146, i128 0, i128 1
  %isEqual148 = load i128, i128* %array_getter147, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEqual148, i128 %fpisequal.k.read_arg_inner, i1* @constraint.177)
  %array_getter151 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual152 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter151, align 8
  %struct_getter153 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual152, i32 0, i32 0
  %isequal.in.read_input_outter154 = load [256 x i128]*, [256 x i128]** %struct_getter153, align 8
  %isEqual155 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter154, i128 0, i128 1
  store i128 %fpisequal.k.read_arg_inner, i128* %isEqual155, align 4
  %array_getter158 = getelementptr inbounds [256 x %struct_template_circuit_isequal*], [256 x %struct_template_circuit_isequal*]* %isEqual5, i128 0, i128 %fpisequal.k.read_arg_inner
  %isEqual159 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter158, align 8
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEqual159, i32 0, i32 1
  %isequal.out.read_output_outter161 = load i128, i128* %struct_getter160, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %isequal.out.read_output_outter161, i1* @constraint.178)
  %fpisequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 4
  store i128 %isequal.out.read_output_outter161, i128* %fpisequal.out.write_output_inner, align 4
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 4
  %fpisequal.out.read_output_inner = load i128, i128* %struct_getter165, align 4
  br label %exit

exit:                                             ; preds = %loop.exit119
  %fpisequal.out.write_output_inner167 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %0, i32 0, i32 4
  store i128 %fpisequal.out.read_output_inner, i128* %fpisequal.out.write_output_inner167, align 4
  ret void
}

define %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpisequal = alloca %struct_template_circuit_fpisequal, align 8
  %fpisequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal, i32 0, i32 0
  store i128 %0, i128* %fpisequal.n.write_arg_inner, align 4
  %fpisequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal, i32 0, i32 1
  store i128 %1, i128* %fpisequal.k.write_arg_inner, align 4
  %fpisequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpisequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpisequal* %struct_template_circuit_fpisequal
}

define void @fn_template_init_modsubthree(%struct_template_circuit_modsubthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 0
  %modsubthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 1
  %modsubthree.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 2
  %modsubthree.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 3
  %modsubthree.c.read_input_inner = load i128, i128* %struct_getter3, align 4
  %borrow = call i128 @fn_intrinsic_inline_init()
  %b_plus_c = call i128 @fn_intrinsic_inline_init()
  %out = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %modsubthree.b.read_input_inner, %modsubthree.c.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %b_plus_c, i128 %add, i1* @constraint.179)
  %modsubthree.b_plus_c.write_inter_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 4
  store i128 %add, i128* %modsubthree.b_plus_c.write_inter_inner, align 4
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 4
  %modsubthree.b_plus_c.read_inter_inner = load i128, i128* %struct_getter6, align 4
  %add7 = add i128 %modsubthree.n.read_arg_inner, 1
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %add7)
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt10 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt10, i128 %modsubthree.a.read_input_inner, i1* @constraint.180)
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter13 = load [256 x i128]*, [256 x i128]** %struct_getter12, align 8
  %lt14 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter13, i128 0, i128 0
  store i128 %modsubthree.a.read_input_inner, i128* %lt14, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter18, i128 0, i128 1
  %lt20 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt20, i128 %modsubthree.b_plus_c.read_inter_inner, i1* @constraint.181)
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter23 = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %lt24 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter23, i128 0, i128 1
  store i128 %modsubthree.b_plus_c.read_inter_inner, i128* %lt24, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter26, align 4
  call void @fn_intrinsic_add_constraint(i128 %borrow, i128 %lessthan.out.read_output_outter, i1* @constraint.182)
  %modsubthree.borrow.write_output_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 6
  store i128 %lessthan.out.read_output_outter, i128* %modsubthree.borrow.write_output_inner, align 4
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 6
  %modsubthree.borrow.read_output_inner = load i128, i128* %struct_getter30, align 4
  %lshift = shl i128 1, %modsubthree.n.read_arg_inner
  %mul = mul i128 %modsubthree.borrow.read_output_inner, %lshift
  %add34 = add i128 %mul, %modsubthree.a.read_input_inner
  %sub = sub i128 %add34, %modsubthree.b_plus_c.read_inter_inner
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.183)
  %modsubthree.out.write_output_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 5
  store i128 %sub, i128* %modsubthree.out.write_output_inner, align 4
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 5
  %modsubthree.out.read_output_inner = load i128, i128* %struct_getter39, align 4
  br label %exit

exit:                                             ; preds = %entry
  %modsubthree.b_plus_c.write_inter_inner41 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 4
  store i128 %modsubthree.b_plus_c.read_inter_inner, i128* %modsubthree.b_plus_c.write_inter_inner41, align 4
  %modsubthree.out.write_output_inner43 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 5
  store i128 %modsubthree.out.read_output_inner, i128* %modsubthree.out.write_output_inner43, align 4
  %modsubthree.borrow.write_output_inner45 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %0, i32 0, i32 6
  store i128 %modsubthree.borrow.read_output_inner, i128* %modsubthree.borrow.write_output_inner45, align 4
  ret void
}

define %struct_template_circuit_modsubthree* @fn_template_build_modsubthree(i128 %0) {
entry:
  %struct_template_circuit_modsubthree = alloca %struct_template_circuit_modsubthree, align 8
  %modsubthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %struct_template_circuit_modsubthree, i32 0, i32 0
  store i128 %0, i128* %modsubthree.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsubthree* %struct_template_circuit_modsubthree
}

define void @fn_template_init_num2bits_strict(%struct_template_circuit_num2bits_strict* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_num2bits_strict, %struct_template_circuit_num2bits_strict* %0, i32 0, i32 0
  %num2bits_strict.in.read_input_inner = load i128, i128* %struct_getter, align 4
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i1 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_aliascheck* @fn_template_build_aliascheck()
  %call2 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 254)
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter4, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %num2bits_strict.in.read_input_inner, i1* @constraint.184)
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 1
  store i128 %num2bits_strict.in.read_input_inner, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 2
  %num2bits.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter, i128 0, i128 %i.0
  %n2b8 = load i128, i128* %array_getter, align 4
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out12 = load i128, i128* %array_getter11, align 4
  call void @fn_intrinsic_add_constraint(i128 %out12, i128 %n2b8, i1* @constraint.185)
  %out15 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %n2b8, i128* %out15, align 4
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %call2, i32 0, i32 2
  %num2bits.out.read_output_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %num2bits.out.read_output_outter18, i128 0, i128 %i.0
  %n2b21 = load i128, i128* %array_getter20, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter, i128 0, i128 %i.0
  %aliasCheck26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_add_constraint(i128 %aliasCheck26, i128 %n2b21, i1* @constraint.186)
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_aliascheck, %struct_template_circuit_aliascheck* %call, i32 0, i32 0
  %aliascheck.in.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %aliasCheck31 = getelementptr inbounds [256 x i128], [256 x i128]* %aliascheck.in.read_input_outter29, i128 0, i128 %i.0
  store i128 %n2b21, i128* %aliasCheck31, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %exit

exit:                                             ; preds = %loop.exit
  %num2bits_strict.out.write_output_inner = getelementptr inbounds %struct_template_circuit_num2bits_strict, %struct_template_circuit_num2bits_strict* %0, i32 0, i32 1
  store [256 x i128]* %out, [256 x i128]** %num2bits_strict.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_num2bits_strict* @fn_template_build_num2bits_strict() {
entry:
  %struct_template_circuit_num2bits_strict = alloca %struct_template_circuit_num2bits_strict, align 8
  ret %struct_template_circuit_num2bits_strict* %struct_template_circuit_num2bits_strict
}

define void @fn_template_init_signedfpcarrymodp(%struct_template_circuit_signedfpcarrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 0
  %signedfpcarrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 1
  %signedfpcarrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 2
  %signedfpcarrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 3
  %signedfpcarrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %X_range_checks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %m6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x i128]*
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall7 to [256 x i128]*
  %i8 = call i128 @fn_intrinsic_inline_init()
  %range_checks10 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %add = add i128 %signedfpcarrymodp.overflow.read_arg_inner, %signedfpcarrymodp.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedfpcarrymodp.n.read_arg_inner
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedfpcarrymodp.n.read_arg_inner, i128 %signedfpcarrymodp.k.read_arg_inner, i128 %sdiv, [256 x i128]* %signedfpcarrymodp.in.read_input_inner, [256 x i128]* %signedfpcarrymodp.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add38, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 1, i128 %i.0
  %Xvar16 = load i128, i128* %array_getter, align 4
  %out18 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %Xvar16, i128* %out18, align 4
  %call20 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %signedfpcarrymodp.n.read_arg_inner)
  %range_checks23 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks10, i128 0, i128 %i.0
  store %struct_template_circuit_num2bits* %call20, %struct_template_circuit_num2bits** %range_checks23, align 8
  %array_getter26 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out27 = load i128, i128* %array_getter26, align 4
  %array_getter30 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks10, i128 0, i128 %i.0
  %range_checks31 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter30, align 8
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks31, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter32, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %out27, i1* @constraint.187)
  %array_getter35 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks10, i128 0, i128 %i.0
  %range_checks36 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter35, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks36, i32 0, i32 1
  store i128 %out27, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add38 = add i128 %i.0, 1
  %slt = icmp slt i128 %add38, %signedfpcarrymodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch72, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add74, %loop.latch72 ]
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 0, i128 %i.1
  %Xvar45 = load i128, i128* %array_getter44, align 4
  %X48 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.1
  store i128 %Xvar45, i128* %X48, align 4
  %add50 = add i128 %signedfpcarrymodp.n.read_arg_inner, 1
  %call51 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add50)
  %X_range_checks54 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks5, i128 0, i128 %i.1
  store %struct_template_circuit_num2bits* %call51, %struct_template_circuit_num2bits** %X_range_checks54, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.1
  %X58 = load i128, i128* %array_getter57, align 4
  %lshift = shl i128 1, %signedfpcarrymodp.n.read_arg_inner
  %add60 = add i128 %X58, %lshift
  %array_getter63 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks5, i128 0, i128 %i.1
  %X_range_checks64 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter63, align 8
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks64, i32 0, i32 1
  %num2bits.in.read_input_outter66 = load i128, i128* %struct_getter65, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter66, i128 %add60, i1* @constraint.188)
  %array_getter69 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks5, i128 0, i128 %i.1
  %X_range_checks70 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter69, align 8
  %num2bits.in.write_input_outter71 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks70, i32 0, i32 1
  store i128 %add60, i128* %num2bits.in.write_input_outter71, align 4
  br label %loop.latch72

loop.latch72:                                     ; preds = %loop.body41
  %add74 = add i128 %i.1, 1
  %slt77 = icmp slt i128 %add74, %sdiv
  br i1 %slt77, label %loop.body41, label %loop.exit78

loop.exit78:                                      ; preds = %loop.latch72
  %call84 = call %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %signedfpcarrymodp.n.read_arg_inner, i128 %signedfpcarrymodp.k.read_arg_inner, i128 %sdiv, i128 %signedfpcarrymodp.overflow.read_arg_inner, [256 x i128]* %signedfpcarrymodp.p.read_arg_inner)
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch114, %loop.exit78
  %i.2 = phi i128 [ 0, %loop.exit78 ], [ %add116, %loop.latch114 ]
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_inner, i128 0, i128 %i.2
  %in89 = load i128, i128* %array_getter88, align 4
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call84, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %array_getter93 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter, i128 0, i128 %i.2
  %mod_check94 = load i128, i128* %array_getter93, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check94, i128 %in89, i1* @constraint.189)
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call84, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter97 = load [256 x i128]*, [256 x i128]** %struct_getter96, align 8
  %mod_check99 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter97, i128 0, i128 %i.2
  store i128 %in89, i128* %mod_check99, align 4
  %array_getter102 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  %out103 = load i128, i128* %array_getter102, align 4
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call84, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter105, align 8
  %array_getter107 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter, i128 0, i128 %i.2
  %mod_check108 = load i128, i128* %array_getter107, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check108, i128 %out103, i1* @constraint.190)
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call84, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter111 = load [256 x i128]*, [256 x i128]** %struct_getter110, align 8
  %mod_check113 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter111, i128 0, i128 %i.2
  store i128 %out103, i128* %mod_check113, align 4
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.body85
  %add116 = add i128 %i.2, 1
  %slt119 = icmp slt i128 %add116, %signedfpcarrymodp.k.read_arg_inner
  br i1 %slt119, label %loop.body85, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch114
  br label %loop.body121

loop.body121:                                     ; preds = %loop.latch136, %loop.exit120
  %i.3 = phi i128 [ 0, %loop.exit120 ], [ %add138, %loop.latch136 ]
  %array_getter124 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.3
  %X125 = load i128, i128* %array_getter124, align 4
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call84, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter127, align 8
  %array_getter129 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter, i128 0, i128 %i.3
  %mod_check130 = load i128, i128* %array_getter129, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check130, i128 %X125, i1* @constraint.191)
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call84, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter133 = load [256 x i128]*, [256 x i128]** %struct_getter132, align 8
  %mod_check135 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter133, i128 0, i128 %i.3
  store i128 %X125, i128* %mod_check135, align 4
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.body121
  %add138 = add i128 %i.3, 1
  %slt141 = icmp slt i128 %add138, %sdiv
  br i1 %slt141, label %loop.body121, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %exit

exit:                                             ; preds = %loop.exit142
  %signedfpcarrymodp.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 5
  store [256 x i128]* %X, [256 x i128]** %signedfpcarrymodp.x.write_output_inner, align 8
  %signedfpcarrymodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %0, i32 0, i32 6
  store [256 x i128]* %out, [256 x i128]** %signedfpcarrymodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedfpcarrymodp = alloca %struct_template_circuit_signedfpcarrymodp, align 8
  %signedfpcarrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 0
  store i128 %0, i128* %signedfpcarrymodp.n.write_arg_inner, align 4
  %signedfpcarrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 1
  store i128 %1, i128* %signedfpcarrymodp.k.write_arg_inner, align 4
  %signedfpcarrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 2
  store i128 %2, i128* %signedfpcarrymodp.overflow.write_arg_inner, align 4
  %signedfpcarrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedfpcarrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfpcarrymodp* %struct_template_circuit_signedfpcarrymodp
}

define void @fn_template_init_modsub(%struct_template_circuit_modsub* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 0
  %modsub.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 1
  %modsub.a.read_input_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 2
  %modsub.b.read_input_inner = load i128, i128* %struct_getter2, align 4
  %borrow = call i128 @fn_intrinsic_inline_init()
  %out = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_lessthan* @fn_template_build_lessthan(i128 %modsub.n.read_arg_inner)
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter, i128 0, i128 0
  %lt5 = load i128, i128* %array_getter, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt5, i128 %modsub.a.read_input_inner, i1* @constraint.192)
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter7 = load [256 x i128]*, [256 x i128]** %struct_getter6, align 8
  %lt8 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter7, i128 0, i128 0
  store i128 %modsub.a.read_input_inner, i128* %lt8, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter11 = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter11, i128 0, i128 1
  %lt13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt13, i128 %modsub.b.read_input_inner, i1* @constraint.193)
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 1
  %lessthan.in.read_input_outter16 = load [256 x i128]*, [256 x i128]** %struct_getter15, align 8
  %lt17 = getelementptr inbounds [256 x i128], [256 x i128]* %lessthan.in.read_input_outter16, i128 0, i128 1
  store i128 %modsub.b.read_input_inner, i128* %lt17, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_lessthan, %struct_template_circuit_lessthan* %call, i32 0, i32 2
  %lessthan.out.read_output_outter = load i128, i128* %struct_getter19, align 4
  call void @fn_intrinsic_add_constraint(i128 %borrow, i128 %lessthan.out.read_output_outter, i1* @constraint.194)
  %modsub.borrow.write_output_inner = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 4
  store i128 %lessthan.out.read_output_outter, i128* %modsub.borrow.write_output_inner, align 4
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 4
  %modsub.borrow.read_output_inner = load i128, i128* %struct_getter23, align 4
  %lshift = shl i128 1, %modsub.n.read_arg_inner
  %mul = mul i128 %modsub.borrow.read_output_inner, %lshift
  %add = add i128 %mul, %modsub.a.read_input_inner
  %sub = sub i128 %add, %modsub.b.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.195)
  %modsub.out.write_output_inner = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 3
  store i128 %sub, i128* %modsub.out.write_output_inner, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 3
  %modsub.out.read_output_inner = load i128, i128* %struct_getter31, align 4
  br label %exit

exit:                                             ; preds = %entry
  %modsub.out.write_output_inner33 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 3
  store i128 %modsub.out.read_output_inner, i128* %modsub.out.write_output_inner33, align 4
  %modsub.borrow.write_output_inner35 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %0, i32 0, i32 4
  store i128 %modsub.borrow.read_output_inner, i128* %modsub.borrow.write_output_inner35, align 4
  ret void
}

define %struct_template_circuit_modsub* @fn_template_build_modsub(i128 %0) {
entry:
  %struct_template_circuit_modsub = alloca %struct_template_circuit_modsub, align 8
  %modsub.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %struct_template_circuit_modsub, i32 0, i32 0
  store i128 %0, i128* %modsub.n.write_arg_inner, align 4
  ret %struct_template_circuit_modsub* %struct_template_circuit_modsub
}

define [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %call = call [256 x i128]* @long_add(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  %call6 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 1, [256 x i128]* %call, [256 x i128]* %4)
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call6, i128 0, i128 1
  %temp8 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %temp8, [256 x i128]* %spice_inline_array, align 4
  ret [256 x i128]* %spice_inline_array
}

define void @fn_template_init_fp2iszero(%struct_template_circuit_fp2iszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 0
  %fp2iszero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 1
  %fp2iszero.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 2
  %fp2iszero.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 3
  %fp2iszero.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %lt4 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  %isZeros5 = alloca [256 x [256 x %struct_template_circuit_iszero*]], align 8
  %total6 = call i128 @fn_intrinsic_inline_init()
  %j7 = call i128 @fn_intrinsic_inline_init()
  %i8 = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 2, %fp2iszero.k.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch87, %entry
  %total.0 = phi i128 [ %mul, %entry ], [ %sub, %loop.latch87 ]
  %j.0 = phi i128 [ 0, %entry ], [ %add89, %loop.latch87 ]
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fp2iszero.n.read_arg_inner, i128 %fp2iszero.k.read_arg_inner)
  %lt11 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %j.0
  store %struct_template_circuit_biglessthan* %call, %struct_template_circuit_biglessthan** %lt11, align 8
  br label %loop.body12

loop.body12:                                      ; preds = %loop.latch, %loop.body
  %total.1 = phi i128 [ %total.0, %loop.body ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2iszero.in.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %in15 = load i128, i128* %array_getter, align 4
  %array_getter18 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %j.0
  %lt19 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter18, align 8
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt19, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter20, align 8
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lt23 = load i128, i128* %array_getter22, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt23, i128 %in15, i1* @constraint.196)
  %array_getter26 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %j.0
  %lt27 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter26, align 8
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt27, i32 0, i32 2
  %biglessthan.a.read_input_outter29 = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %lt31 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter29, i128 0, i128 %i.0
  store i128 %in15, i128* %lt31, align 4
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %fp2iszero.p.read_arg_inner, i128 0, i128 %i.0
  %p34 = load i128, i128* %array_getter33, align 4
  %array_getter37 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %j.0
  %lt38 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter37, align 8
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt38, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %array_getter41 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lt42 = load i128, i128* %array_getter41, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt42, i128 %p34, i1* @constraint.197)
  %array_getter45 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %j.0
  %lt46 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter45, align 8
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt46, i32 0, i32 3
  %biglessthan.b.read_input_outter48 = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %lt50 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter48, i128 0, i128 %i.0
  store i128 %p34, i128* %lt50, align 4
  %call51 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %isZeros55 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros5, i128 0, i128 %j.0, i128 %i.0
  store %struct_template_circuit_iszero* %call51, %struct_template_circuit_iszero** %isZeros55, align 8
  %array_getter59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2iszero.in.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %in60 = load i128, i128* %array_getter59, align 4
  %array_getter64 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros5, i128 0, i128 %j.0, i128 %i.0
  %isZeros65 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter64, align 8
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros65, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %in60, i1* @constraint.198)
  %array_getter70 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros5, i128 0, i128 %j.0, i128 %i.0
  %isZeros71 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter70, align 8
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros71, i32 0, i32 0
  store i128 %in60, i128* %iszero.in.write_input_outter, align 4
  %array_getter76 = getelementptr inbounds [256 x [256 x %struct_template_circuit_iszero*]], [256 x [256 x %struct_template_circuit_iszero*]]* %isZeros5, i128 0, i128 %j.0, i128 %i.0
  %isZeros77 = load %struct_template_circuit_iszero*, %struct_template_circuit_iszero** %array_getter76, align 8
  %struct_getter78 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %isZeros77, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter78, align 4
  %sub = sub i128 %total.1, %iszero.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body12
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2iszero.k.read_arg_inner
  br i1 %slt, label %loop.body12, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %array_getter84 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lt4, i128 0, i128 %j.0
  %lt85 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter84, align 8
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lt85, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter86, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.199)
  br label %loop.latch87

loop.latch87:                                     ; preds = %loop.exit
  %add89 = add i128 %j.0, 1
  %slt91 = icmp slt i128 %add89, 2
  br i1 %slt91, label %loop.body, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch87
  %call93 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call93, i32 0, i32 0
  %iszero.in.read_input_outter97 = load i128, i128* %struct_getter96, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter97, i128 %sub, i1* @constraint.200)
  %iszero.in.write_input_outter99 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call93, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter99, align 4
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call93, i32 0, i32 2
  %iszero.out.read_output_outter102 = load i128, i128* %struct_getter101, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %iszero.out.read_output_outter102, i1* @constraint.201)
  %fp2iszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 4
  store i128 %iszero.out.read_output_outter102, i128* %fp2iszero.out.write_output_inner, align 4
  %struct_getter106 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 4
  %fp2iszero.out.read_output_inner = load i128, i128* %struct_getter106, align 4
  br label %exit

exit:                                             ; preds = %loop.exit92
  %fp2iszero.out.write_output_inner108 = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %0, i32 0, i32 4
  store i128 %fp2iszero.out.read_output_inner, i128* %fp2iszero.out.write_output_inner108, align 4
  ret void
}

define %struct_template_circuit_fp2iszero* @fn_template_build_fp2iszero(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2iszero = alloca %struct_template_circuit_fp2iszero, align 8
  %fp2iszero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero, i32 0, i32 0
  store i128 %0, i128* %fp2iszero.n.write_arg_inner, align 4
  %fp2iszero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero, i32 0, i32 1
  store i128 %1, i128* %fp2iszero.k.write_arg_inner, align 4
  %fp2iszero.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2iszero, %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2iszero.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2iszero* %struct_template_circuit_fp2iszero
}

define void @fn_template_init_fpsgn0(%struct_template_circuit_fpsgn0* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 0
  %fpsgn0.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 1
  %fpsgn0.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 2
  %fpsgn0.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 3
  %fpsgn0.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %div = call i128 @fn_intrinsic_inline_init()
  %r4 = call i128 @fn_intrinsic_inline_init()
  %i5 = call i128 @fn_intrinsic_inline_init()
  %q6 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpsgn0.n.read_arg_inner, i128 %fpsgn0.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_inner, i128 0, i128 %i.0
  %in8 = load i128, i128* %array_getter, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lt13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt13, i128 %in8, i1* @constraint.202)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %lt17 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter15, i128 0, i128 %i.0
  store i128 %in8, i128* %lt17, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.p.read_arg_inner, i128 0, i128 %i.0
  %p20 = load i128, i128* %array_getter19, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lt25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt25, i128 %p20, i1* @constraint.203)
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %lt30 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter28, i128 0, i128 %i.0
  store i128 %p20, i128* %lt30, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fpsgn0.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter35, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.204)
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_inner, i128 0, i128 0
  %in38 = load i128, i128* %array_getter37, align 4
  %mod = srem i128 %in38, 2
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_inner, i128 0, i128 0
  %in41 = load i128, i128* %array_getter40, align 4
  %sub = sub i128 %in41, %mod
  %sdiv = sdiv i128 %sub, 2
  %fpsgn0.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 5
  store i128 %mod, i128* %fpsgn0.out.write_output_inner, align 4
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 5
  %fpsgn0.out.read_output_inner = load i128, i128* %struct_getter46, align 4
  %fpsgn0.div.write_inter_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 4
  store i128 %sdiv, i128* %fpsgn0.div.write_inter_inner, align 4
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 4
  %fpsgn0.div.read_inter_inner = load i128, i128* %struct_getter50, align 4
  %sub53 = sub i128 1, %fpsgn0.out.read_output_inner
  %mul = mul i128 %fpsgn0.out.read_output_inner, %sub53
  call void @fn_intrinsic_add_constraint(i128 %mul, i128 0, i1* @constraint.205)
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_inner, i128 0, i128 0
  %in56 = load i128, i128* %array_getter55, align 4
  %mul58 = mul i128 2, %fpsgn0.div.read_inter_inner
  %add60 = add i128 %mul58, %fpsgn0.out.read_output_inner
  call void @fn_intrinsic_add_constraint(i128 %in56, i128 %add60, i1* @constraint.206)
  br label %exit

exit:                                             ; preds = %loop.exit
  %fpsgn0.div.write_inter_inner62 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 4
  store i128 %fpsgn0.div.read_inter_inner, i128* %fpsgn0.div.write_inter_inner62, align 4
  %fpsgn0.out.write_output_inner64 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %0, i32 0, i32 5
  store i128 %fpsgn0.out.read_output_inner, i128* %fpsgn0.out.write_output_inner64, align 4
  ret void
}

define %struct_template_circuit_fpsgn0* @fn_template_build_fpsgn0(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpsgn0 = alloca %struct_template_circuit_fpsgn0, align 8
  %fpsgn0.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0, i32 0, i32 0
  store i128 %0, i128* %fpsgn0.n.write_arg_inner, align 4
  %fpsgn0.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0, i32 0, i32 1
  store i128 %1, i128* %fpsgn0.k.write_arg_inner, align 4
  %fpsgn0.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpsgn0.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpsgn0* %struct_template_circuit_fpsgn0
}

define void @fn_template_init_signedfp12carrymodp(%struct_template_circuit_signedfp12carrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 0
  %signedfp12carrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 1
  %signedfp12carrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 2
  %signedfp12carrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 3
  %signedfp12carrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %m5 = call i128 @fn_intrinsic_inline_init()
  %l6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %i7 = call i128 @fn_intrinsic_inline_init()
  %malloccall8 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall8 to [256 x [256 x [256 x i128]]]*
  %j9 = call i128 @fn_intrinsic_inline_init()
  %idx10 = call i128 @fn_intrinsic_inline_init()
  %carry11 = alloca [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], align 8
  %add = add i128 %signedfp12carrymodp.overflow.read_arg_inner, %signedfp12carrymodp.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedfp12carrymodp.n.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch108, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add110, %loop.latch108 ]
  br label %loop.body13

loop.body13:                                      ; preds = %loop.latch102, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add104, %loop.latch102 ]
  %call = call %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %signedfp12carrymodp.n.read_arg_inner, i128 %signedfp12carrymodp.k.read_arg_inner, i128 %signedfp12carrymodp.overflow.read_arg_inner, [256 x i128]* %signedfp12carrymodp.p.read_arg_inner)
  %carry18 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry11, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_signedfpcarrymodp* %call, %struct_template_circuit_signedfpcarrymodp** %carry18, align 8
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch, %loop.body13
  %idx.0 = phi i128 [ 0, %loop.body13 ], [ %add43, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %in23 = load i128, i128* %array_getter, align 4
  %array_getter27 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry11, i128 0, i128 %i.0, i128 %j.0
  %carry28 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter27, align 8
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry28, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter29, align 8
  %array_getter31 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter, i128 0, i128 %idx.0
  %carry32 = load i128, i128* %array_getter31, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry32, i128 %in23, i1* @constraint.207)
  %array_getter36 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry11, i128 0, i128 %i.0, i128 %j.0
  %carry37 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter36, align 8
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry37, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter39 = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %carry41 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter39, i128 0, i128 %idx.0
  store i128 %in23, i128* %carry41, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body19
  %add43 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add43, %signedfp12carrymodp.k.read_arg_inner
  br i1 %slt, label %loop.body19, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body46

loop.body46:                                      ; preds = %loop.latch67, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add69, %loop.latch67 ]
  %array_getter50 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry11, i128 0, i128 %i.0, i128 %j.0
  %carry51 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter50, align 8
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry51, i32 0, i32 5
  %signedfpcarrymodp.x.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter52, align 8
  %array_getter54 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.x.read_output_outter, i128 0, i128 %idx.1
  %carry55 = load i128, i128* %array_getter54, align 4
  %array_getter60 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  %X61 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_add_constraint(i128 %X61, i128 %carry55, i1* @constraint.208)
  %X66 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %X, i128 0, i128 %i.0, i128 %j.0, i128 %idx.1
  store i128 %carry55, i128* %X66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body46
  %add69 = add i128 %idx.1, 1
  %slt72 = icmp slt i128 %add69, %sdiv
  br i1 %slt72, label %loop.body46, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  br label %loop.body74

loop.body74:                                      ; preds = %loop.latch95, %loop.exit73
  %idx.2 = phi i128 [ 0, %loop.exit73 ], [ %add97, %loop.latch95 ]
  %array_getter78 = getelementptr inbounds [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]], [256 x [256 x %struct_template_circuit_signedfpcarrymodp*]]* %carry11, i128 0, i128 %i.0, i128 %j.0
  %carry79 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter78, align 8
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry79, i32 0, i32 6
  %signedfpcarrymodp.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter80, align 8
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.out.read_output_outter, i128 0, i128 %idx.2
  %carry83 = load i128, i128* %array_getter82, align 4
  %array_getter88 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 %j.0, i128 %idx.2
  %out89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_add_constraint(i128 %out89, i128 %carry83, i1* @constraint.209)
  %out94 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 %j.0, i128 %idx.2
  store i128 %carry83, i128* %out94, align 4
  br label %loop.latch95

loop.latch95:                                     ; preds = %loop.body74
  %add97 = add i128 %idx.2, 1
  %slt100 = icmp slt i128 %add97, %signedfp12carrymodp.k.read_arg_inner
  br i1 %slt100, label %loop.body74, label %loop.exit101

loop.exit101:                                     ; preds = %loop.latch95
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.exit101
  %add104 = add i128 %j.0, 1
  %slt106 = icmp slt i128 %add104, 2
  br i1 %slt106, label %loop.body13, label %loop.exit107

loop.exit107:                                     ; preds = %loop.latch102
  br label %loop.latch108

loop.latch108:                                    ; preds = %loop.exit107
  %add110 = add i128 %i.0, 1
  %slt113 = icmp slt i128 %add110, 6
  br i1 %slt113, label %loop.body, label %loop.exit114

loop.exit114:                                     ; preds = %loop.latch108
  br label %exit

exit:                                             ; preds = %loop.exit114
  %signedfp12carrymodp.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %X, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.x.write_output_inner, align 8
  %signedfp12carrymodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12carrymodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedfp12carrymodp = alloca %struct_template_circuit_signedfp12carrymodp, align 8
  %signedfp12carrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 0
  store i128 %0, i128* %signedfp12carrymodp.n.write_arg_inner, align 4
  %signedfp12carrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 1
  store i128 %1, i128* %signedfp12carrymodp.k.write_arg_inner, align 4
  %signedfp12carrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 2
  store i128 %2, i128* %signedfp12carrymodp.overflow.write_arg_inner, align 4
  %signedfp12carrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedfp12carrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp12carrymodp* %struct_template_circuit_signedfp12carrymodp
}

define void @fn_template_init_bigsub(%struct_template_circuit_bigsub* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 0
  %bigsub.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 1
  %bigsub.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 2
  %bigsub.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 3
  %bigsub.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %underflow = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %unit5 = alloca [256 x %struct_template_circuit_modsubthree*], align 8
  %call = call %struct_template_circuit_modsub* @fn_template_build_modsub(i128 %bigsub.n.read_arg_inner)
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_inner, i128 0, i128 0
  %a6 = load i128, i128* %array_getter, align 4
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 1
  %modsub.a.read_input_outter = load i128, i128* %struct_getter8, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsub.a.read_input_outter, i128 %a6, i1* @constraint.210)
  %modsub.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 1
  store i128 %a6, i128* %modsub.a.write_input_outter, align 4
  %array_getter9 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_inner, i128 0, i128 0
  %b10 = load i128, i128* %array_getter9, align 4
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 2
  %modsub.b.read_input_outter = load i128, i128* %struct_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsub.b.read_input_outter, i128 %b10, i1* @constraint.211)
  %modsub.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 2
  store i128 %b10, i128* %modsub.b.write_input_outter, align 4
  %struct_getter15 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 3
  %modsub.out.read_output_outter = load i128, i128* %struct_getter15, align 4
  %array_getter17 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  %out18 = load i128, i128* %array_getter17, align 4
  call void @fn_intrinsic_add_constraint(i128 %out18, i128 %modsub.out.read_output_outter, i1* @constraint.212)
  %out20 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 0
  store i128 %modsub.out.read_output_outter, i128* %out20, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %call22 = call %struct_template_circuit_modsubthree* @fn_template_build_modsubthree(i128 %bigsub.n.read_arg_inner)
  %sub = sub i128 %i.0, 1
  %unit25 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub
  store %struct_template_circuit_modsubthree* %call22, %struct_template_circuit_modsubthree** %unit25, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_inner, i128 0, i128 %i.0
  %a29 = load i128, i128* %array_getter28, align 4
  %sub32 = sub i128 %i.0, 1
  %array_getter33 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub32
  %unit34 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter33, align 8
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit34, i32 0, i32 1
  %modsubthree.a.read_input_outter = load i128, i128* %struct_getter35, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsubthree.a.read_input_outter, i128 %a29, i1* @constraint.213)
  %sub38 = sub i128 %i.0, 1
  %array_getter39 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub38
  %unit40 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter39, align 8
  %modsubthree.a.write_input_outter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit40, i32 0, i32 1
  store i128 %a29, i128* %modsubthree.a.write_input_outter, align 4
  %array_getter43 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_inner, i128 0, i128 %i.0
  %b44 = load i128, i128* %array_getter43, align 4
  %sub47 = sub i128 %i.0, 1
  %array_getter48 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub47
  %unit49 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter48, align 8
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit49, i32 0, i32 2
  %modsubthree.b.read_input_outter = load i128, i128* %struct_getter50, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsubthree.b.read_input_outter, i128 %b44, i1* @constraint.214)
  %sub53 = sub i128 %i.0, 1
  %array_getter54 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub53
  %unit55 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter54, align 8
  %modsubthree.b.write_input_outter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit55, i32 0, i32 2
  store i128 %b44, i128* %modsubthree.b.write_input_outter, align 4
  %eq = icmp eq i128 %i.0, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_modsub, %struct_template_circuit_modsub* %call, i32 0, i32 4
  %modsub.borrow.read_output_outter = load i128, i128* %struct_getter58, align 4
  %sub61 = sub i128 %i.0, 1
  %array_getter62 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub61
  %unit63 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter62, align 8
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit63, i32 0, i32 3
  %modsubthree.c.read_input_outter = load i128, i128* %struct_getter64, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsubthree.c.read_input_outter, i128 %modsub.borrow.read_output_outter, i1* @constraint.215)
  %sub67 = sub i128 %i.0, 1
  %array_getter68 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub67
  %unit69 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter68, align 8
  %modsubthree.c.write_input_outter = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit69, i32 0, i32 3
  store i128 %modsub.borrow.read_output_outter, i128* %modsubthree.c.write_input_outter, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body
  %sub72 = sub i128 %i.0, 2
  %array_getter73 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub72
  %unit74 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter73, align 8
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit74, i32 0, i32 6
  %modsubthree.borrow.read_output_outter = load i128, i128* %struct_getter75, align 4
  %sub78 = sub i128 %i.0, 1
  %array_getter79 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub78
  %unit80 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter79, align 8
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit80, i32 0, i32 3
  %modsubthree.c.read_input_outter82 = load i128, i128* %struct_getter81, align 4
  call void @fn_intrinsic_add_constraint(i128 %modsubthree.c.read_input_outter82, i128 %modsubthree.borrow.read_output_outter, i1* @constraint.216)
  %sub85 = sub i128 %i.0, 1
  %array_getter86 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub85
  %unit87 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter86, align 8
  %modsubthree.c.write_input_outter88 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit87, i32 0, i32 3
  store i128 %modsubthree.borrow.read_output_outter, i128* %modsubthree.c.write_input_outter88, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %sub91 = sub i128 %i.0, 1
  %array_getter92 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub91
  %unit93 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter92, align 8
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit93, i32 0, i32 5
  %modsubthree.out.read_output_outter = load i128, i128* %struct_getter94, align 4
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  %out98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_add_constraint(i128 %out98, i128 %modsubthree.out.read_output_outter, i1* @constraint.217)
  %out101 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %modsubthree.out.read_output_outter, i128* %out101, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigsub.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub106 = sub i128 %bigsub.k.read_arg_inner, 2
  %array_getter107 = getelementptr inbounds [256 x %struct_template_circuit_modsubthree*], [256 x %struct_template_circuit_modsubthree*]* %unit5, i128 0, i128 %sub106
  %unit108 = load %struct_template_circuit_modsubthree*, %struct_template_circuit_modsubthree** %array_getter107, align 8
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_modsubthree, %struct_template_circuit_modsubthree* %unit108, i32 0, i32 6
  %modsubthree.borrow.read_output_outter110 = load i128, i128* %struct_getter109, align 4
  call void @fn_intrinsic_add_constraint(i128 %underflow, i128 %modsubthree.borrow.read_output_outter110, i1* @constraint.218)
  %bigsub.underflow.write_output_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 5
  store i128 %modsubthree.borrow.read_output_outter110, i128* %bigsub.underflow.write_output_inner, align 4
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 5
  %bigsub.underflow.read_output_inner = load i128, i128* %struct_getter114, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %bigsub.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 4
  store [256 x i128]* %out, [256 x i128]** %bigsub.out.write_output_inner, align 8
  %bigsub.underflow.write_output_inner117 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %0, i32 0, i32 5
  store i128 %bigsub.underflow.read_output_inner, i128* %bigsub.underflow.write_output_inner117, align 4
  ret void
}

define %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigsub = alloca %struct_template_circuit_bigsub, align 8
  %bigsub.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %struct_template_circuit_bigsub, i32 0, i32 0
  store i128 %0, i128* %bigsub.n.write_arg_inner, align 4
  %bigsub.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %struct_template_circuit_bigsub, i32 0, i32 1
  store i128 %1, i128* %bigsub.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigsub* %struct_template_circuit_bigsub
}

define void @fn_template_init_bigmod2(%struct_template_circuit_bigmod2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 0
  %bigmod2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 1
  %bigmod2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 2
  %bigmod2.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 3
  %bigmod2.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 4
  %bigmod2.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %div = bitcast i8* %malloccall to [256 x i128]*
  %div_range_checks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %mod_range_checks6 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %i7 = call i128 @fn_intrinsic_inline_init()
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %mod = bitcast i8* %malloccall9 to [256 x i128]*
  %sub = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %call = call [256 x [256 x i128]]* @long_div2(i128 %bigmod2.n.read_arg_inner, i128 %bigmod2.k.read_arg_inner, i128 %sub, [256 x i128]* %bigmod2.a.read_input_inner, [256 x i128]* %bigmod2.b.read_input_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add17, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 1, i128 %i.0
  %longdiv13 = load i128, i128* %array_getter, align 4
  %mod15 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.0
  store i128 %longdiv13, i128* %mod15, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add17 = add i128 %i.0, 1
  %slt = icmp slt i128 %add17, %bigmod2.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch28, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add30, %loop.latch28 ]
  %array_getter23 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 0, i128 %i.1
  %longdiv24 = load i128, i128* %array_getter23, align 4
  %div27 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.1
  store i128 %longdiv24, i128* %div27, align 4
  br label %loop.latch28

loop.latch28:                                     ; preds = %loop.body20
  %add30 = add i128 %i.1, 1
  %sub34 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %sle = icmp sle i128 %add30, %sub34
  br i1 %sle, label %loop.body20, label %loop.exit35

loop.exit35:                                      ; preds = %loop.latch28
  br label %loop.body36

loop.body36:                                      ; preds = %loop.latch55, %loop.exit35
  %i.2 = phi i128 [ 0, %loop.exit35 ], [ %add57, %loop.latch55 ]
  %call38 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod2.n.read_arg_inner)
  %div_range_checks41 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks5, i128 0, i128 %i.2
  store %struct_template_circuit_num2bits* %call38, %struct_template_circuit_num2bits** %div_range_checks41, align 8
  %array_getter44 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.2
  %div45 = load i128, i128* %array_getter44, align 4
  %array_getter48 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks5, i128 0, i128 %i.2
  %div_range_checks49 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter48, align 8
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks49, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter50, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %div45, i1* @constraint.219)
  %array_getter53 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks5, i128 0, i128 %i.2
  %div_range_checks54 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter53, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks54, i32 0, i32 1
  store i128 %div45, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.body36
  %add57 = add i128 %i.2, 1
  %sub61 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %sle62 = icmp sle i128 %add57, %sub61
  br i1 %sle62, label %loop.body36, label %loop.exit63

loop.exit63:                                      ; preds = %loop.latch55
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch85, %loop.exit63
  %i.3 = phi i128 [ 0, %loop.exit63 ], [ %add87, %loop.latch85 ]
  %call66 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod2.n.read_arg_inner)
  %mod_range_checks69 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks6, i128 0, i128 %i.3
  store %struct_template_circuit_num2bits* %call66, %struct_template_circuit_num2bits** %mod_range_checks69, align 8
  %array_getter72 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.3
  %mod73 = load i128, i128* %array_getter72, align 4
  %array_getter76 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks6, i128 0, i128 %i.3
  %mod_range_checks77 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter76, align 8
  %struct_getter78 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks77, i32 0, i32 1
  %num2bits.in.read_input_outter79 = load i128, i128* %struct_getter78, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter79, i128 %mod73, i1* @constraint.220)
  %array_getter82 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks6, i128 0, i128 %i.3
  %mod_range_checks83 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter82, align 8
  %num2bits.in.write_input_outter84 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks83, i32 0, i32 1
  store i128 %mod73, i128* %num2bits.in.write_input_outter84, align 4
  br label %loop.latch85

loop.latch85:                                     ; preds = %loop.body64
  %add87 = add i128 %i.3, 1
  %slt90 = icmp slt i128 %add87, %bigmod2.k.read_arg_inner
  br i1 %slt90, label %loop.body64, label %loop.exit91

loop.exit91:                                      ; preds = %loop.latch85
  %sub95 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %add96 = add i128 %sub95, 1
  %call97 = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmod2.n.read_arg_inner, i128 %add96)
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch127, %loop.exit91
  %i.4 = phi i128 [ 0, %loop.exit91 ], [ %add129, %loop.latch127 ]
  %array_getter101 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.4
  %div102 = load i128, i128* %array_getter101, align 4
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter104, align 8
  %array_getter106 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.4
  %mul107 = load i128, i128* %array_getter106, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul107, i128 %div102, i1* @constraint.221)
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 2
  %bigmult.a.read_input_outter110 = load [256 x i128]*, [256 x i128]** %struct_getter109, align 8
  %mul112 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter110, i128 0, i128 %i.4
  store i128 %div102, i128* %mul112, align 4
  %array_getter115 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod2.b.read_input_inner, i128 0, i128 %i.4
  %b116 = load i128, i128* %array_getter115, align 4
  %struct_getter118 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter118, align 8
  %array_getter120 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.4
  %mul121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul121, i128 %b116, i1* @constraint.222)
  %struct_getter123 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 3
  %bigmult.b.read_input_outter124 = load [256 x i128]*, [256 x i128]** %struct_getter123, align 8
  %mul126 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter124, i128 0, i128 %i.4
  store i128 %b116, i128* %mul126, align 4
  br label %loop.latch127

loop.latch127:                                    ; preds = %loop.body98
  %add129 = add i128 %i.4, 1
  %slt132 = icmp slt i128 %add129, %bigmod2.k.read_arg_inner
  br i1 %slt132, label %loop.body98, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch127
  br label %loop.body135

loop.body135:                                     ; preds = %loop.latch162, %loop.exit133
  %i.5 = phi i128 [ %bigmod2.k.read_arg_inner, %loop.exit133 ], [ %add164, %loop.latch162 ]
  %array_getter138 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.5
  %div139 = load i128, i128* %array_getter138, align 4
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 2
  %bigmult.a.read_input_outter142 = load [256 x i128]*, [256 x i128]** %struct_getter141, align 8
  %array_getter144 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter142, i128 0, i128 %i.5
  %mul145 = load i128, i128* %array_getter144, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul145, i128 %div139, i1* @constraint.223)
  %struct_getter147 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 2
  %bigmult.a.read_input_outter148 = load [256 x i128]*, [256 x i128]** %struct_getter147, align 8
  %mul150 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter148, i128 0, i128 %i.5
  store i128 %div139, i128* %mul150, align 4
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 3
  %bigmult.b.read_input_outter153 = load [256 x i128]*, [256 x i128]** %struct_getter152, align 8
  %array_getter155 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter153, i128 0, i128 %i.5
  %mul156 = load i128, i128* %array_getter155, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul156, i128 0, i1* @constraint.224)
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 3
  %bigmult.b.read_input_outter159 = load [256 x i128]*, [256 x i128]** %struct_getter158, align 8
  %mul161 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter159, i128 0, i128 %i.5
  store i128 0, i128* %mul161, align 4
  br label %loop.latch162

loop.latch162:                                    ; preds = %loop.body135
  %add164 = add i128 %i.5, 1
  %sub168 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %sle169 = icmp sle i128 %add164, %sub168
  br i1 %sle169, label %loop.body135, label %loop.exit170

loop.exit170:                                     ; preds = %loop.latch162
  br label %loop.body172

loop.body172:                                     ; preds = %loop.latch178, %loop.exit170
  %i.6 = phi i128 [ %bigmod2.m.read_arg_inner, %loop.exit170 ], [ %add180, %loop.latch178 ]
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter174, align 8
  %array_getter176 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.6
  %mul177 = load i128, i128* %array_getter176, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul177, i128 0, i1* @constraint.225)
  br label %loop.latch178

loop.latch178:                                    ; preds = %loop.body172
  %add180 = add i128 %i.6, 1
  %sub184 = sub i128 %bigmod2.m.read_arg_inner, %bigmod2.k.read_arg_inner
  %mul185 = mul i128 2, %sub184
  %add186 = add i128 %mul185, 2
  %slt187 = icmp slt i128 %add180, %add186
  br i1 %slt187, label %loop.body172, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch178
  %call191 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigmod2.n.read_arg_inner, i128 %bigmod2.m.read_arg_inner)
  br label %loop.body192

loop.body192:                                     ; preds = %loop.latch237, %loop.exit188
  %i.7 = phi i128 [ 0, %loop.exit188 ], [ %add239, %loop.latch237 ]
  %struct_getter194 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call97, i32 0, i32 4
  %bigmult.out.read_output_outter195 = load [256 x i128]*, [256 x i128]** %struct_getter194, align 8
  %array_getter197 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter195, i128 0, i128 %i.7
  %mul198 = load i128, i128* %array_getter197, align 4
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter200, align 8
  %array_getter202 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.7
  %add203 = load i128, i128* %array_getter202, align 4
  call void @fn_intrinsic_add_constraint(i128 %add203, i128 %mul198, i1* @constraint.226)
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 2
  %bigadd.a.read_input_outter206 = load [256 x i128]*, [256 x i128]** %struct_getter205, align 8
  %add208 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter206, i128 0, i128 %i.7
  store i128 %mul198, i128* %add208, align 4
  %slt211 = icmp slt i128 %i.7, %bigmod2.k.read_arg_inner
  br i1 %slt211, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body192
  %array_getter214 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.7
  %mod215 = load i128, i128* %array_getter214, align 4
  %struct_getter217 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter217, align 8
  %array_getter219 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.7
  %add220 = load i128, i128* %array_getter219, align 4
  call void @fn_intrinsic_add_constraint(i128 %add220, i128 %mod215, i1* @constraint.227)
  %struct_getter222 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 3
  %bigadd.b.read_input_outter223 = load [256 x i128]*, [256 x i128]** %struct_getter222, align 8
  %add225 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter223, i128 0, i128 %i.7
  store i128 %mod215, i128* %add225, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body192
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 3
  %bigadd.b.read_input_outter228 = load [256 x i128]*, [256 x i128]** %struct_getter227, align 8
  %array_getter230 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter228, i128 0, i128 %i.7
  %add231 = load i128, i128* %array_getter230, align 4
  call void @fn_intrinsic_add_constraint(i128 %add231, i128 0, i1* @constraint.228)
  %struct_getter233 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 3
  %bigadd.b.read_input_outter234 = load [256 x i128]*, [256 x i128]** %struct_getter233, align 8
  %add236 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter234, i128 0, i128 %i.7
  store i128 0, i128* %add236, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch237

loop.latch237:                                    ; preds = %if.exit
  %add239 = add i128 %i.7, 1
  %slt242 = icmp slt i128 %add239, %bigmod2.m.read_arg_inner
  br i1 %slt242, label %loop.body192, label %loop.exit243

loop.exit243:                                     ; preds = %loop.latch237
  br label %loop.body244

loop.body244:                                     ; preds = %loop.latch254, %loop.exit243
  %i.8 = phi i128 [ 0, %loop.exit243 ], [ %add256, %loop.latch254 ]
  %struct_getter246 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter246, align 8
  %array_getter248 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.8
  %add249 = load i128, i128* %array_getter248, align 4
  %array_getter252 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod2.a.read_input_inner, i128 0, i128 %i.8
  %a253 = load i128, i128* %array_getter252, align 4
  call void @fn_intrinsic_add_constraint(i128 %add249, i128 %a253, i1* @constraint.229)
  br label %loop.latch254

loop.latch254:                                    ; preds = %loop.body244
  %add256 = add i128 %i.8, 1
  %slt259 = icmp slt i128 %add256, %bigmod2.m.read_arg_inner
  br i1 %slt259, label %loop.body244, label %loop.exit260

loop.exit260:                                     ; preds = %loop.latch254
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call191, i32 0, i32 4
  %bigadd.out.read_output_outter263 = load [256 x i128]*, [256 x i128]** %struct_getter262, align 8
  %array_getter265 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter263, i128 0, i128 %bigmod2.m.read_arg_inner
  %add266 = load i128, i128* %array_getter265, align 4
  call void @fn_intrinsic_add_constraint(i128 %add266, i128 0, i1* @constraint.230)
  %call269 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %bigmod2.n.read_arg_inner, i128 %bigmod2.k.read_arg_inner)
  br label %loop.body270

loop.body270:                                     ; preds = %loop.latch299, %loop.exit260
  %i.9 = phi i128 [ 0, %loop.exit260 ], [ %add301, %loop.latch299 ]
  %array_getter273 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.9
  %mod274 = load i128, i128* %array_getter273, align 4
  %struct_getter276 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call269, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter276, align 8
  %array_getter278 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.9
  %lt279 = load i128, i128* %array_getter278, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt279, i128 %mod274, i1* @constraint.231)
  %struct_getter281 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call269, i32 0, i32 2
  %biglessthan.a.read_input_outter282 = load [256 x i128]*, [256 x i128]** %struct_getter281, align 8
  %lt284 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter282, i128 0, i128 %i.9
  store i128 %mod274, i128* %lt284, align 4
  %array_getter287 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod2.b.read_input_inner, i128 0, i128 %i.9
  %b288 = load i128, i128* %array_getter287, align 4
  %struct_getter290 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call269, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter290, align 8
  %array_getter292 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.9
  %lt293 = load i128, i128* %array_getter292, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt293, i128 %b288, i1* @constraint.232)
  %struct_getter295 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call269, i32 0, i32 3
  %biglessthan.b.read_input_outter296 = load [256 x i128]*, [256 x i128]** %struct_getter295, align 8
  %lt298 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter296, i128 0, i128 %i.9
  store i128 %b288, i128* %lt298, align 4
  br label %loop.latch299

loop.latch299:                                    ; preds = %loop.body270
  %add301 = add i128 %i.9, 1
  %slt304 = icmp slt i128 %add301, %bigmod2.k.read_arg_inner
  br i1 %slt304, label %loop.body270, label %loop.exit305

loop.exit305:                                     ; preds = %loop.latch299
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call269, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter307, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.233)
  br label %exit

exit:                                             ; preds = %loop.exit305
  %bigmod2.div.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 5
  store [256 x i128]* %div, [256 x i128]** %bigmod2.div.write_output_inner, align 8
  %bigmod2.mod.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %0, i32 0, i32 6
  store [256 x i128]* %mod, [256 x i128]** %bigmod2.mod.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmod2* @fn_template_build_bigmod2(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_bigmod2 = alloca %struct_template_circuit_bigmod2, align 8
  %bigmod2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2, i32 0, i32 0
  store i128 %0, i128* %bigmod2.n.write_arg_inner, align 4
  %bigmod2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2, i32 0, i32 1
  store i128 %1, i128* %bigmod2.k.write_arg_inner, align 4
  %bigmod2.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod2, %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2, i32 0, i32 2
  store i128 %2, i128* %bigmod2.m.write_arg_inner, align 4
  ret %struct_template_circuit_bigmod2* %struct_template_circuit_bigmod2
}

define [256 x i128]* @mod_inv(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %isZero2 = call i128 @fn_intrinsic_inline_init()
  %i5 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %isZero.0 = phi i128 [ 1, %entry ], [ %isZero.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %2, i128 0, i128 %i.0
  %a9 = load i128, i128* %array_getter, align 4
  %ne = icmp ne i128 %a9, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %isZero.1 = phi i128 [ 0, %if.true ], [ %isZero.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %eq = icmp eq i128 %isZero.1, 1
  br i1 %eq, label %if.true12, label %if.false13

if.true12:                                        ; preds = %loop.exit
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body15

if.false13:                                       ; preds = %loop.exit
  br label %if.exit26

loop.body15:                                      ; preds = %loop.latch18, %if.true12
  %i.1 = phi i128 [ 0, %if.true12 ], [ %add20, %loop.latch18 ]
  %ret17 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  store i128 0, i128* %ret17, align 4
  br label %loop.latch18

loop.latch18:                                     ; preds = %loop.body15
  %add20 = add i128 %i.1, 1
  %slt23 = icmp slt i128 %add20, %1
  br i1 %slt23, label %loop.body15, label %loop.exit24

loop.exit24:                                      ; preds = %loop.latch18
  ret [256 x i128]* %uniform_array

if.exit26:                                        ; preds = %if.false13
  %uniform_array27 = alloca [256 x i128], align 8
  br label %loop.body28

loop.body28:                                      ; preds = %loop.latch44, %if.exit26
  %i.2 = phi i128 [ 0, %if.exit26 ], [ %add46, %loop.latch44 ]
  %slt33 = icmp slt i128 %i.2, %1
  br i1 %slt33, label %if.true29, label %if.false30

if.true29:                                        ; preds = %loop.body28
  %array_getter35 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.2
  %p36 = load i128, i128* %array_getter35, align 4
  %pCopy39 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array27, i128 0, i128 %i.2
  store i128 %p36, i128* %pCopy39, align 4
  br label %if.exit43

if.false30:                                       ; preds = %loop.body28
  %pCopy42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array27, i128 0, i128 %i.2
  store i128 0, i128* %pCopy42, align 4
  br label %if.exit43

if.exit43:                                        ; preds = %if.false30, %if.true29
  br label %loop.latch44

loop.latch44:                                     ; preds = %if.exit43
  %add46 = add i128 %i.2, 1
  %slt48 = icmp slt i128 %add46, 50
  br i1 %slt48, label %loop.body28, label %loop.exit49

loop.exit49:                                      ; preds = %loop.latch44
  %uniform_array50 = alloca [256 x i128], align 8
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch55, %loop.exit49
  %i.3 = phi i128 [ 0, %loop.exit49 ], [ %add57, %loop.latch55 ]
  %two54 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array50, i128 0, i128 %i.3
  store i128 0, i128* %two54, align 4
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.body51
  %add57 = add i128 %i.3, 1
  %slt59 = icmp slt i128 %add57, 50
  br i1 %slt59, label %loop.body51, label %loop.exit60

loop.exit60:                                      ; preds = %loop.latch55
  %two62 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array50, i128 0, i128 0
  store i128 2, i128* %two62, align 4
  %uniform_array63 = alloca [256 x i128], align 8
  %call = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %uniform_array27, [256 x i128]* %uniform_array50)
  %uniform_array67 = alloca [256 x i128], align 8
  %call73 = call [256 x i128]* @mod_exp(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %uniform_array27, [256 x i128]* %call)
  ret [256 x i128]* %call73
}

define void @fn_template_init_fp2sgn0(%struct_template_circuit_fp2sgn0* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 0
  %fp2sgn0.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 1
  %fp2sgn0.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 2
  %fp2sgn0.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 3
  %fp2sgn0.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %sgn4 = alloca [256 x %struct_template_circuit_fpsgn0*], align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %idx5 = call i128 @fn_intrinsic_inline_init()
  %i6 = call i128 @fn_intrinsic_inline_init()
  %sgn1 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch32, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add34, %loop.latch32 ]
  %call = call %struct_template_circuit_fpsgn0* @fn_template_build_fpsgn0(i128 %fp2sgn0.n.read_arg_inner, i128 %fp2sgn0.k.read_arg_inner, [256 x i128]* %fp2sgn0.p.read_arg_inner)
  %sgn8 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn4, i128 0, i128 %i.0
  store %struct_template_circuit_fpsgn0* %call, %struct_template_circuit_fpsgn0** %sgn8, align 8
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2sgn0.in.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %in12 = load i128, i128* %array_getter, align 4
  %array_getter15 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn4, i128 0, i128 %i.0
  %sgn16 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter15, align 8
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn16, i32 0, i32 3
  %fpsgn0.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_outter, i128 0, i128 %idx.0
  %sgn20 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_add_constraint(i128 %sgn20, i128 %in12, i1* @constraint.234)
  %array_getter23 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn4, i128 0, i128 %i.0
  %sgn24 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter23, align 8
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn24, i32 0, i32 3
  %fpsgn0.in.read_input_outter26 = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %sgn28 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsgn0.in.read_input_outter26, i128 0, i128 %idx.0
  store i128 %in12, i128* %sgn28, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body9
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fp2sgn0.k.read_arg_inner
  br i1 %slt, label %loop.body9, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch32

loop.latch32:                                     ; preds = %loop.exit
  %add34 = add i128 %i.0, 1
  %slt36 = icmp slt i128 %add34, 2
  br i1 %slt36, label %loop.body, label %loop.exit37

loop.exit37:                                      ; preds = %loop.latch32
  %call39 = call %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %fp2sgn0.k.read_arg_inner)
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch55, %loop.exit37
  %idx.1 = phi i128 [ 0, %loop.exit37 ], [ %add57, %loop.latch55 ]
  %array_getter43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2sgn0.in.read_input_inner, i128 0, i128 0, i128 %idx.1
  %in44 = load i128, i128* %array_getter43, align 4
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call39, i32 0, i32 1
  %bigiszero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter, i128 0, i128 %idx.1
  %isZero49 = load i128, i128* %array_getter48, align 4
  call void @fn_intrinsic_add_constraint(i128 %isZero49, i128 %in44, i1* @constraint.235)
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call39, i32 0, i32 1
  %bigiszero.in.read_input_outter52 = load [256 x i128]*, [256 x i128]** %struct_getter51, align 8
  %isZero54 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter52, i128 0, i128 %idx.1
  store i128 %in44, i128* %isZero54, align 4
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.body40
  %add57 = add i128 %idx.1, 1
  %slt60 = icmp slt i128 %add57, %fp2sgn0.k.read_arg_inner
  br i1 %slt60, label %loop.body40, label %loop.exit61

loop.exit61:                                      ; preds = %loop.latch55
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call39, i32 0, i32 2
  %bigiszero.out.read_output_outter = load i128, i128* %struct_getter63, align 4
  %array_getter65 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn4, i128 0, i128 1
  %sgn66 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter65, align 8
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn66, i32 0, i32 5
  %fpsgn0.out.read_output_outter = load i128, i128* %struct_getter67, align 4
  %mul = mul i128 %bigiszero.out.read_output_outter, %fpsgn0.out.read_output_outter
  call void @fn_intrinsic_add_constraint(i128 %sgn1, i128 %mul, i1* @constraint.236)
  %fp2sgn0.sgn1.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 4
  store i128 %mul, i128* %fp2sgn0.sgn1.write_inter_inner, align 4
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 4
  %fp2sgn0.sgn1.read_inter_inner = load i128, i128* %struct_getter71, align 4
  %array_getter73 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn4, i128 0, i128 0
  %sgn74 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter73, align 8
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn74, i32 0, i32 5
  %fpsgn0.out.read_output_outter76 = load i128, i128* %struct_getter75, align 4
  %add78 = add i128 %fpsgn0.out.read_output_outter76, %fp2sgn0.sgn1.read_inter_inner
  %array_getter80 = getelementptr inbounds [256 x %struct_template_circuit_fpsgn0*], [256 x %struct_template_circuit_fpsgn0*]* %sgn4, i128 0, i128 0
  %sgn81 = load %struct_template_circuit_fpsgn0*, %struct_template_circuit_fpsgn0** %array_getter80, align 8
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_fpsgn0, %struct_template_circuit_fpsgn0* %sgn81, i32 0, i32 5
  %fpsgn0.out.read_output_outter83 = load i128, i128* %struct_getter82, align 4
  %mul85 = mul i128 %fpsgn0.out.read_output_outter83, %fp2sgn0.sgn1.read_inter_inner
  %sub = sub i128 %add78, %mul85
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %sub, i1* @constraint.237)
  %fp2sgn0.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 5
  store i128 %sub, i128* %fp2sgn0.out.write_output_inner, align 4
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 5
  %fp2sgn0.out.read_output_inner = load i128, i128* %struct_getter89, align 4
  br label %exit

exit:                                             ; preds = %loop.exit61
  %fp2sgn0.sgn1.write_inter_inner91 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 4
  store i128 %fp2sgn0.sgn1.read_inter_inner, i128* %fp2sgn0.sgn1.write_inter_inner91, align 4
  %fp2sgn0.out.write_output_inner93 = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %0, i32 0, i32 5
  store i128 %fp2sgn0.out.read_output_inner, i128* %fp2sgn0.out.write_output_inner93, align 4
  ret void
}

define %struct_template_circuit_fp2sgn0* @fn_template_build_fp2sgn0(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2sgn0 = alloca %struct_template_circuit_fp2sgn0, align 8
  %fp2sgn0.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0, i32 0, i32 0
  store i128 %0, i128* %fp2sgn0.n.write_arg_inner, align 4
  %fp2sgn0.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0, i32 0, i32 1
  store i128 %1, i128* %fp2sgn0.k.write_arg_inner, align 4
  %fp2sgn0.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2sgn0, %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2sgn0.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2sgn0* %struct_template_circuit_fp2sgn0
}

define [256 x [256 x [256 x i128]]]* @get_signed_Fp2_carry_witness(i128 %0, i128 %1, i128 %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %i.0
  %a4 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a4, [256 x i128]* %spice_inline_array, align 4
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %0, i128 %1, i128 %2, [256 x i128]* %spice_inline_array, [256 x i128]* %4)
  %out6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.0
  %5 = bitcast [256 x [256 x i128]]* %out6 to i8*
  %6 = bitcast [256 x [256 x i128]]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 2
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a2 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a2, [256 x i128]* %spice_inline_array, align 4
  %array_getter3 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 0
  %b4 = load [256 x i128], [256 x i128]* %array_getter3, align 4
  %spice_inline_array5 = alloca [256 x i128], align 8
  store [256 x i128] %b4, [256 x i128]* %spice_inline_array5, align 4
  %call = call [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array5, [256 x i128]* %4)
  %out6 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %5 = bitcast [256 x i128]* %out6 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] %a11, [256 x i128]* %spice_inline_array12, align 4
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 1
  %b15 = load [256 x i128], [256 x i128]* %array_getter14, align 4
  %spice_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] %b15, [256 x i128]* %spice_inline_array16, align 4
  %call18 = call [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array12, [256 x i128]* %spice_inline_array16, [256 x i128]* %4)
  %out20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %7 = bitcast [256 x i128]* %out20 to i8*
  %8 = bitcast [256 x i128]* %call18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_bigaddmodp(%struct_template_circuit_bigaddmodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 0
  %bigaddmodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 1
  %bigaddmodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 2
  %bigaddmodp.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 3
  %bigaddmodp.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 4
  %bigaddmodp.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %call = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigaddmodp.n.read_arg_inner, i128 %bigaddmodp.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add31, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigaddmodp.a.read_input_inner, i128 0, i128 %i.0
  %a7 = load i128, i128* %array_getter, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.0
  %add12 = load i128, i128* %array_getter11, align 4
  call void @fn_intrinsic_add_constraint(i128 %add12, i128 %a7, i1* @constraint.238)
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter14 = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %add16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter14, i128 0, i128 %i.0
  store i128 %a7, i128* %add16, align 4
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %bigaddmodp.b.read_input_inner, i128 0, i128 %i.0
  %b19 = load i128, i128* %array_getter18, align 4
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.0
  %add24 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %add24, i128 %b19, i1* @constraint.239)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %add29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter27, i128 0, i128 %i.0
  store i128 %b19, i128* %add29, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add31 = add i128 %i.0, 1
  %slt = icmp slt i128 %add31, %bigaddmodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add36 = add i128 %bigaddmodp.k.read_arg_inner, 1
  %call37 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %bigaddmodp.n.read_arg_inner, i128 %add36)
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch67, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add69, %loop.latch67 ]
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.1
  %add43 = load i128, i128* %array_getter42, align 4
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter45, align 8
  %array_getter47 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.1
  %lt48 = load i128, i128* %array_getter47, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt48, i128 %add43, i1* @constraint.240)
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter51 = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %lt53 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter51, i128 0, i128 %i.1
  store i128 %add43, i128* %lt53, align 4
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %bigaddmodp.p.read_input_inner, i128 0, i128 %i.1
  %p56 = load i128, i128* %array_getter55, align 4
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.1
  %lt61 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt61, i128 %p56, i1* @constraint.241)
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %lt66 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter64, i128 0, i128 %i.1
  store i128 %p56, i128* %lt66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body38
  %add69 = add i128 %i.1, 1
  %slt72 = icmp slt i128 %add69, %bigaddmodp.k.read_arg_inner
  br i1 %slt72, label %loop.body38, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter76 = load [256 x i128]*, [256 x i128]** %struct_getter75, align 8
  %array_getter78 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter76, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %add79 = load i128, i128* %array_getter78, align 4
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter82 = load [256 x i128]*, [256 x i128]** %struct_getter81, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter82, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %lt85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt85, i128 %add79, i1* @constraint.242)
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter88 = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %lt90 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter88, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 %add79, i128* %lt90, align 4
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter93 = load [256 x i128]*, [256 x i128]** %struct_getter92, align 8
  %array_getter95 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter93, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %lt96 = load i128, i128* %array_getter95, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt96, i128 0, i1* @constraint.243)
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter99 = load [256 x i128]*, [256 x i128]** %struct_getter98, align 8
  %lt101 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter99, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 0, i128* %lt101, align 4
  %add104 = add i128 %bigaddmodp.k.read_arg_inner, 1
  %call105 = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %bigaddmodp.n.read_arg_inner, i128 %add104)
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch140, %loop.exit73
  %i.2 = phi i128 [ 0, %loop.exit73 ], [ %add142, %loop.latch140 ]
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter109 = load [256 x i128]*, [256 x i128]** %struct_getter108, align 8
  %array_getter111 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter109, i128 0, i128 %i.2
  %add112 = load i128, i128* %array_getter111, align 4
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter114, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.2
  %sub117 = load i128, i128* %array_getter116, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub117, i128 %add112, i1* @constraint.244)
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter120 = load [256 x i128]*, [256 x i128]** %struct_getter119, align 8
  %sub122 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter120, i128 0, i128 %i.2
  store i128 %add112, i128* %sub122, align 4
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter124, align 4
  %sub125 = sub i128 1, %biglessthan.out.read_output_outter
  %array_getter128 = getelementptr inbounds [256 x i128], [256 x i128]* %bigaddmodp.p.read_input_inner, i128 0, i128 %i.2
  %p129 = load i128, i128* %array_getter128, align 4
  %mul = mul i128 %sub125, %p129
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter131, align 8
  %array_getter133 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.2
  %sub134 = load i128, i128* %array_getter133, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub134, i128 %mul, i1* @constraint.245)
  %struct_getter136 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter137 = load [256 x i128]*, [256 x i128]** %struct_getter136, align 8
  %sub139 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter137, i128 0, i128 %i.2
  store i128 %mul, i128* %sub139, align 4
  br label %loop.latch140

loop.latch140:                                    ; preds = %loop.body106
  %add142 = add i128 %i.2, 1
  %slt145 = icmp slt i128 %add142, %bigaddmodp.k.read_arg_inner
  br i1 %slt145, label %loop.body106, label %loop.exit146

loop.exit146:                                     ; preds = %loop.latch140
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter149 = load [256 x i128]*, [256 x i128]** %struct_getter148, align 8
  %array_getter151 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter149, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %add152 = load i128, i128* %array_getter151, align 4
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %array_getter157 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter155, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %sub158 = load i128, i128* %array_getter157, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub158, i128 %add152, i1* @constraint.246)
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter161 = load [256 x i128]*, [256 x i128]** %struct_getter160, align 8
  %sub163 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter161, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 %add152, i128* %sub163, align 4
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter166 = load [256 x i128]*, [256 x i128]** %struct_getter165, align 8
  %array_getter168 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter166, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %sub169 = load i128, i128* %array_getter168, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub169, i128 0, i1* @constraint.247)
  %struct_getter171 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter172 = load [256 x i128]*, [256 x i128]** %struct_getter171, align 8
  %sub174 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter172, i128 0, i128 %bigaddmodp.k.read_arg_inner
  store i128 0, i128* %sub174, align 4
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter176, align 8
  %array_getter178 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %bigaddmodp.k.read_arg_inner
  %sub179 = load i128, i128* %array_getter178, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub179, i128 0, i1* @constraint.248)
  br label %loop.body180

loop.body180:                                     ; preds = %loop.latch194, %loop.exit146
  %i.3 = phi i128 [ 0, %loop.exit146 ], [ %add196, %loop.latch194 ]
  %struct_getter182 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 4
  %bigsub.out.read_output_outter183 = load [256 x i128]*, [256 x i128]** %struct_getter182, align 8
  %array_getter185 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter183, i128 0, i128 %i.3
  %sub186 = load i128, i128* %array_getter185, align 4
  %array_getter189 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  %out190 = load i128, i128* %array_getter189, align 4
  call void @fn_intrinsic_add_constraint(i128 %out190, i128 %sub186, i1* @constraint.249)
  %out193 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  store i128 %sub186, i128* %out193, align 4
  br label %loop.latch194

loop.latch194:                                    ; preds = %loop.body180
  %add196 = add i128 %i.3, 1
  %slt199 = icmp slt i128 %add196, %bigaddmodp.k.read_arg_inner
  br i1 %slt199, label %loop.body180, label %loop.exit200

loop.exit200:                                     ; preds = %loop.latch194
  br label %exit

exit:                                             ; preds = %loop.exit200
  %bigaddmodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %0, i32 0, i32 5
  store [256 x i128]* %out, [256 x i128]** %bigaddmodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigaddmodp* @fn_template_build_bigaddmodp(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigaddmodp = alloca %struct_template_circuit_bigaddmodp, align 8
  %bigaddmodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %struct_template_circuit_bigaddmodp, i32 0, i32 0
  store i128 %0, i128* %bigaddmodp.n.write_arg_inner, align 4
  %bigaddmodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigaddmodp, %struct_template_circuit_bigaddmodp* %struct_template_circuit_bigaddmodp, i32 0, i32 1
  store i128 %1, i128* %bigaddmodp.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigaddmodp* %struct_template_circuit_bigaddmodp
}

define [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %call = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3)
  %call6 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call, [256 x i128]* %4)
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call6, i128 0, i128 1
  %temp8 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %temp8, [256 x i128]* %spice_inline_array, align 4
  ret [256 x i128]* %spice_inline_array
}

define void @fn_template_init_bigmod(%struct_template_circuit_bigmod* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 0
  %bigmod.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 1
  %bigmod.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 2
  %bigmod.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 3
  %bigmod.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %div = bitcast i8* %malloccall to [256 x i128]*
  %mod_range_checks5 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %div_range_checks7 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %malloccall8 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %mod = bitcast i8* %malloccall8 to [256 x i128]*
  %call = call [256 x [256 x i128]]* @long_div(i128 %bigmod.n.read_arg_inner, i128 %bigmod.k.read_arg_inner, [256 x i128]* %bigmod.a.read_input_inner, [256 x i128]* %bigmod.b.read_input_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add22, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 0, i128 %i.0
  %longdiv11 = load i128, i128* %array_getter, align 4
  %div13 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.0
  store i128 %longdiv11, i128* %div13, align 4
  %array_getter16 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 1, i128 %i.0
  %longdiv17 = load i128, i128* %array_getter16, align 4
  %mod20 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.0
  store i128 %longdiv17, i128* %mod20, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add22 = add i128 %i.0, 1
  %slt = icmp slt i128 %add22, %bigmod.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %array_getter27 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 0, i128 %bigmod.k.read_arg_inner
  %longdiv28 = load i128, i128* %array_getter27, align 4
  %div31 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %bigmod.k.read_arg_inner
  store i128 %longdiv28, i128* %div31, align 4
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch51, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add53, %loop.latch51 ]
  %call34 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod.n.read_arg_inner)
  %div_range_checks37 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks7, i128 0, i128 %i.1
  store %struct_template_circuit_num2bits* %call34, %struct_template_circuit_num2bits** %div_range_checks37, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.1
  %div41 = load i128, i128* %array_getter40, align 4
  %array_getter44 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks7, i128 0, i128 %i.1
  %div_range_checks45 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks45, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter46, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %div41, i1* @constraint.250)
  %array_getter49 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %div_range_checks7, i128 0, i128 %i.1
  %div_range_checks50 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter49, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %div_range_checks50, i32 0, i32 1
  store i128 %div41, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.body32
  %add53 = add i128 %i.1, 1
  %sle = icmp sle i128 %add53, %bigmod.k.read_arg_inner
  br i1 %sle, label %loop.body32, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  br label %loop.body57

loop.body57:                                      ; preds = %loop.latch78, %loop.exit56
  %i.2 = phi i128 [ 0, %loop.exit56 ], [ %add80, %loop.latch78 ]
  %call59 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmod.n.read_arg_inner)
  %mod_range_checks62 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks5, i128 0, i128 %i.2
  store %struct_template_circuit_num2bits* %call59, %struct_template_circuit_num2bits** %mod_range_checks62, align 8
  %array_getter65 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.2
  %mod66 = load i128, i128* %array_getter65, align 4
  %array_getter69 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks5, i128 0, i128 %i.2
  %mod_range_checks70 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter69, align 8
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks70, i32 0, i32 1
  %num2bits.in.read_input_outter72 = load i128, i128* %struct_getter71, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter72, i128 %mod66, i1* @constraint.251)
  %array_getter75 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %mod_range_checks5, i128 0, i128 %i.2
  %mod_range_checks76 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter75, align 8
  %num2bits.in.write_input_outter77 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %mod_range_checks76, i32 0, i32 1
  store i128 %mod66, i128* %num2bits.in.write_input_outter77, align 4
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.body57
  %add80 = add i128 %i.2, 1
  %slt83 = icmp slt i128 %add80, %bigmod.k.read_arg_inner
  br i1 %slt83, label %loop.body57, label %loop.exit84

loop.exit84:                                      ; preds = %loop.latch78
  %add87 = add i128 %bigmod.k.read_arg_inner, 1
  %call88 = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmod.n.read_arg_inner, i128 %add87)
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch118, %loop.exit84
  %i.3 = phi i128 [ 0, %loop.exit84 ], [ %add120, %loop.latch118 ]
  %array_getter92 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %i.3
  %div93 = load i128, i128* %array_getter92, align 4
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter95, align 8
  %array_getter97 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.3
  %mul98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul98, i128 %div93, i1* @constraint.252)
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 2
  %bigmult.a.read_input_outter101 = load [256 x i128]*, [256 x i128]** %struct_getter100, align 8
  %mul103 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter101, i128 0, i128 %i.3
  store i128 %div93, i128* %mul103, align 4
  %array_getter106 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_inner, i128 0, i128 %i.3
  %b107 = load i128, i128* %array_getter106, align 4
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter109, align 8
  %array_getter111 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.3
  %mul112 = load i128, i128* %array_getter111, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul112, i128 %b107, i1* @constraint.253)
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 3
  %bigmult.b.read_input_outter115 = load [256 x i128]*, [256 x i128]** %struct_getter114, align 8
  %mul117 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter115, i128 0, i128 %i.3
  store i128 %b107, i128* %mul117, align 4
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.body89
  %add120 = add i128 %i.3, 1
  %slt123 = icmp slt i128 %add120, %bigmod.k.read_arg_inner
  br i1 %slt123, label %loop.body89, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  %array_getter127 = getelementptr inbounds [256 x i128], [256 x i128]* %div, i128 0, i128 %bigmod.k.read_arg_inner
  %div128 = load i128, i128* %array_getter127, align 4
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 2
  %bigmult.a.read_input_outter131 = load [256 x i128]*, [256 x i128]** %struct_getter130, align 8
  %array_getter133 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter131, i128 0, i128 %bigmod.k.read_arg_inner
  %mul134 = load i128, i128* %array_getter133, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul134, i128 %div128, i1* @constraint.254)
  %struct_getter136 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 2
  %bigmult.a.read_input_outter137 = load [256 x i128]*, [256 x i128]** %struct_getter136, align 8
  %mul139 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter137, i128 0, i128 %bigmod.k.read_arg_inner
  store i128 %div128, i128* %mul139, align 4
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 3
  %bigmult.b.read_input_outter142 = load [256 x i128]*, [256 x i128]** %struct_getter141, align 8
  %array_getter144 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter142, i128 0, i128 %bigmod.k.read_arg_inner
  %mul145 = load i128, i128* %array_getter144, align 4
  call void @fn_intrinsic_add_constraint(i128 %mul145, i128 0, i1* @constraint.255)
  %struct_getter147 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 3
  %bigmult.b.read_input_outter148 = load [256 x i128]*, [256 x i128]** %struct_getter147, align 8
  %mul150 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter148, i128 0, i128 %bigmod.k.read_arg_inner
  store i128 0, i128* %mul150, align 4
  br label %loop.body151

loop.body151:                                     ; preds = %loop.latch152, %loop.exit124
  %i.4 = phi i128 [ 0, %loop.exit124 ], [ %add154, %loop.latch152 ]
  br label %loop.latch152

loop.latch152:                                    ; preds = %loop.body151
  %add154 = add i128 %i.4, 1
  %mul157 = mul i128 2, %bigmod.k.read_arg_inner
  %add158 = add i128 %mul157, 2
  %slt159 = icmp slt i128 %add154, %add158
  br i1 %slt159, label %loop.body151, label %loop.exit160

loop.exit160:                                     ; preds = %loop.latch152
  %mul163 = mul i128 2, %bigmod.k.read_arg_inner
  %add164 = add i128 %mul163, 2
  %call165 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigmod.n.read_arg_inner, i128 %add164)
  br label %loop.body166

loop.body166:                                     ; preds = %loop.latch210, %loop.exit160
  %i.5 = phi i128 [ 0, %loop.exit160 ], [ %add212, %loop.latch210 ]
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter168, align 8
  %array_getter170 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.5
  %mul171 = load i128, i128* %array_getter170, align 4
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter173, align 8
  %array_getter175 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.5
  %add176 = load i128, i128* %array_getter175, align 4
  call void @fn_intrinsic_add_constraint(i128 %add176, i128 %mul171, i1* @constraint.256)
  %struct_getter178 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 2
  %bigadd.a.read_input_outter179 = load [256 x i128]*, [256 x i128]** %struct_getter178, align 8
  %add181 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter179, i128 0, i128 %i.5
  store i128 %mul171, i128* %add181, align 4
  %slt184 = icmp slt i128 %i.5, %bigmod.k.read_arg_inner
  br i1 %slt184, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body166
  %array_getter187 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.5
  %mod188 = load i128, i128* %array_getter187, align 4
  %struct_getter190 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter190, align 8
  %array_getter192 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.5
  %add193 = load i128, i128* %array_getter192, align 4
  call void @fn_intrinsic_add_constraint(i128 %add193, i128 %mod188, i1* @constraint.257)
  %struct_getter195 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter196 = load [256 x i128]*, [256 x i128]** %struct_getter195, align 8
  %add198 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter196, i128 0, i128 %i.5
  store i128 %mod188, i128* %add198, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body166
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter201 = load [256 x i128]*, [256 x i128]** %struct_getter200, align 8
  %array_getter203 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter201, i128 0, i128 %i.5
  %add204 = load i128, i128* %array_getter203, align 4
  call void @fn_intrinsic_add_constraint(i128 %add204, i128 0, i1* @constraint.258)
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter207 = load [256 x i128]*, [256 x i128]** %struct_getter206, align 8
  %add209 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter207, i128 0, i128 %i.5
  store i128 0, i128* %add209, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch210

loop.latch210:                                    ; preds = %if.exit
  %add212 = add i128 %i.5, 1
  %mul215 = mul i128 2, %bigmod.k.read_arg_inner
  %slt216 = icmp slt i128 %add212, %mul215
  br i1 %slt216, label %loop.body166, label %loop.exit217

loop.exit217:                                     ; preds = %loop.latch210
  %struct_getter219 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 4
  %bigmult.out.read_output_outter220 = load [256 x i128]*, [256 x i128]** %struct_getter219, align 8
  %mul222 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter223 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter220, i128 0, i128 %mul222
  %mul224 = load i128, i128* %array_getter223, align 4
  %struct_getter226 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 2
  %bigadd.a.read_input_outter227 = load [256 x i128]*, [256 x i128]** %struct_getter226, align 8
  %mul229 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter230 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter227, i128 0, i128 %mul229
  %add231 = load i128, i128* %array_getter230, align 4
  call void @fn_intrinsic_add_constraint(i128 %add231, i128 %mul224, i1* @constraint.259)
  %struct_getter233 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 2
  %bigadd.a.read_input_outter234 = load [256 x i128]*, [256 x i128]** %struct_getter233, align 8
  %mul236 = mul i128 2, %bigmod.k.read_arg_inner
  %add237 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter234, i128 0, i128 %mul236
  store i128 %mul224, i128* %add237, align 4
  %struct_getter239 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call88, i32 0, i32 4
  %bigmult.out.read_output_outter240 = load [256 x i128]*, [256 x i128]** %struct_getter239, align 8
  %mul242 = mul i128 2, %bigmod.k.read_arg_inner
  %add243 = add i128 %mul242, 1
  %array_getter244 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter240, i128 0, i128 %add243
  %mul245 = load i128, i128* %array_getter244, align 4
  %struct_getter247 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 2
  %bigadd.a.read_input_outter248 = load [256 x i128]*, [256 x i128]** %struct_getter247, align 8
  %mul250 = mul i128 2, %bigmod.k.read_arg_inner
  %add251 = add i128 %mul250, 1
  %array_getter252 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter248, i128 0, i128 %add251
  %add253 = load i128, i128* %array_getter252, align 4
  call void @fn_intrinsic_add_constraint(i128 %add253, i128 %mul245, i1* @constraint.260)
  %struct_getter255 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 2
  %bigadd.a.read_input_outter256 = load [256 x i128]*, [256 x i128]** %struct_getter255, align 8
  %mul258 = mul i128 2, %bigmod.k.read_arg_inner
  %add259 = add i128 %mul258, 1
  %add260 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter256, i128 0, i128 %add259
  store i128 %mul245, i128* %add260, align 4
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter263 = load [256 x i128]*, [256 x i128]** %struct_getter262, align 8
  %mul265 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter266 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter263, i128 0, i128 %mul265
  %add267 = load i128, i128* %array_getter266, align 4
  call void @fn_intrinsic_add_constraint(i128 %add267, i128 0, i1* @constraint.261)
  %struct_getter269 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter270 = load [256 x i128]*, [256 x i128]** %struct_getter269, align 8
  %mul272 = mul i128 2, %bigmod.k.read_arg_inner
  %add273 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter270, i128 0, i128 %mul272
  store i128 0, i128* %add273, align 4
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter276 = load [256 x i128]*, [256 x i128]** %struct_getter275, align 8
  %mul278 = mul i128 2, %bigmod.k.read_arg_inner
  %add279 = add i128 %mul278, 1
  %array_getter280 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter276, i128 0, i128 %add279
  %add281 = load i128, i128* %array_getter280, align 4
  call void @fn_intrinsic_add_constraint(i128 %add281, i128 0, i1* @constraint.262)
  %struct_getter283 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 3
  %bigadd.b.read_input_outter284 = load [256 x i128]*, [256 x i128]** %struct_getter283, align 8
  %mul286 = mul i128 2, %bigmod.k.read_arg_inner
  %add287 = add i128 %mul286, 1
  %add288 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter284, i128 0, i128 %add287
  store i128 0, i128* %add288, align 4
  br label %loop.body289

loop.body289:                                     ; preds = %loop.latch290, %loop.exit217
  %i.6 = phi i128 [ 0, %loop.exit217 ], [ %add292, %loop.latch290 ]
  br label %loop.latch290

loop.latch290:                                    ; preds = %loop.body289
  %add292 = add i128 %i.6, 1
  %mul295 = mul i128 2, %bigmod.k.read_arg_inner
  %add296 = add i128 %mul295, 2
  %slt297 = icmp slt i128 %add292, %add296
  br i1 %slt297, label %loop.body289, label %loop.exit298

loop.exit298:                                     ; preds = %loop.latch290
  br label %loop.body299

loop.body299:                                     ; preds = %loop.latch309, %loop.exit298
  %i.7 = phi i128 [ 0, %loop.exit298 ], [ %add311, %loop.latch309 ]
  %struct_getter301 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter301, align 8
  %array_getter303 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.7
  %add304 = load i128, i128* %array_getter303, align 4
  %array_getter307 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_inner, i128 0, i128 %i.7
  %a308 = load i128, i128* %array_getter307, align 4
  call void @fn_intrinsic_add_constraint(i128 %add304, i128 %a308, i1* @constraint.263)
  br label %loop.latch309

loop.latch309:                                    ; preds = %loop.body299
  %add311 = add i128 %i.7, 1
  %mul314 = mul i128 2, %bigmod.k.read_arg_inner
  %slt315 = icmp slt i128 %add311, %mul314
  br i1 %slt315, label %loop.body299, label %loop.exit316

loop.exit316:                                     ; preds = %loop.latch309
  %struct_getter318 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 4
  %bigadd.out.read_output_outter319 = load [256 x i128]*, [256 x i128]** %struct_getter318, align 8
  %mul321 = mul i128 2, %bigmod.k.read_arg_inner
  %array_getter322 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter319, i128 0, i128 %mul321
  %add323 = load i128, i128* %array_getter322, align 4
  call void @fn_intrinsic_add_constraint(i128 %add323, i128 0, i1* @constraint.264)
  %struct_getter325 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call165, i32 0, i32 4
  %bigadd.out.read_output_outter326 = load [256 x i128]*, [256 x i128]** %struct_getter325, align 8
  %mul328 = mul i128 2, %bigmod.k.read_arg_inner
  %add329 = add i128 %mul328, 1
  %array_getter330 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter326, i128 0, i128 %add329
  %add331 = load i128, i128* %array_getter330, align 4
  call void @fn_intrinsic_add_constraint(i128 %add331, i128 0, i1* @constraint.265)
  %call334 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %bigmod.n.read_arg_inner, i128 %bigmod.k.read_arg_inner)
  br label %loop.body335

loop.body335:                                     ; preds = %loop.latch364, %loop.exit316
  %i.8 = phi i128 [ 0, %loop.exit316 ], [ %add366, %loop.latch364 ]
  %array_getter338 = getelementptr inbounds [256 x i128], [256 x i128]* %mod, i128 0, i128 %i.8
  %mod339 = load i128, i128* %array_getter338, align 4
  %struct_getter341 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call334, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter341, align 8
  %array_getter343 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.8
  %lt344 = load i128, i128* %array_getter343, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt344, i128 %mod339, i1* @constraint.266)
  %struct_getter346 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call334, i32 0, i32 2
  %biglessthan.a.read_input_outter347 = load [256 x i128]*, [256 x i128]** %struct_getter346, align 8
  %lt349 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter347, i128 0, i128 %i.8
  store i128 %mod339, i128* %lt349, align 4
  %array_getter352 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_inner, i128 0, i128 %i.8
  %b353 = load i128, i128* %array_getter352, align 4
  %struct_getter355 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call334, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter355, align 8
  %array_getter357 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.8
  %lt358 = load i128, i128* %array_getter357, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt358, i128 %b353, i1* @constraint.267)
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call334, i32 0, i32 3
  %biglessthan.b.read_input_outter361 = load [256 x i128]*, [256 x i128]** %struct_getter360, align 8
  %lt363 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter361, i128 0, i128 %i.8
  store i128 %b353, i128* %lt363, align 4
  br label %loop.latch364

loop.latch364:                                    ; preds = %loop.body335
  %add366 = add i128 %i.8, 1
  %slt369 = icmp slt i128 %add366, %bigmod.k.read_arg_inner
  br i1 %slt369, label %loop.body335, label %loop.exit370

loop.exit370:                                     ; preds = %loop.latch364
  %struct_getter372 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call334, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter372, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.268)
  br label %exit

exit:                                             ; preds = %loop.exit370
  %bigmod.div.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 4
  store [256 x i128]* %div, [256 x i128]** %bigmod.div.write_output_inner, align 8
  %bigmod.mod.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %0, i32 0, i32 5
  store [256 x i128]* %mod, [256 x i128]** %bigmod.mod.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmod* @fn_template_build_bigmod(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmod = alloca %struct_template_circuit_bigmod, align 8
  %bigmod.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %struct_template_circuit_bigmod, i32 0, i32 0
  store i128 %0, i128* %bigmod.n.write_arg_inner, align 4
  %bigmod.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %struct_template_circuit_bigmod, i32 0, i32 1
  store i128 %1, i128* %bigmod.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmod* %struct_template_circuit_bigmod
}

define void @fn_template_init_signedcheckcarrymodtozero(%struct_template_circuit_signedcheckcarrymodtozero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 0
  %signedcheckcarrymodtozero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 1
  %signedcheckcarrymodtozero.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 2
  %signedcheckcarrymodtozero.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 3
  %signedcheckcarrymodtozero.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %X_range_checks7 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x i128]*
  %m8 = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %signedcheckcarrymodtozero.overflow.read_arg_inner, %signedcheckcarrymodtozero.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedcheckcarrymodtozero.n.read_arg_inner
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedcheckcarrymodtozero.n.read_arg_inner, i128 %signedcheckcarrymodtozero.k.read_arg_inner, i128 %sdiv, [256 x i128]* %signedcheckcarrymodtozero.in.read_input_inner, [256 x i128]* %signedcheckcarrymodtozero.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add39, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 0, i128 %i.0
  %Xvar14 = load i128, i128* %array_getter, align 4
  %X16 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.0
  store i128 %Xvar14, i128* %X16, align 4
  %add18 = add i128 %signedcheckcarrymodtozero.n.read_arg_inner, 1
  %call19 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add18)
  %X_range_checks22 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks7, i128 0, i128 %i.0
  store %struct_template_circuit_num2bits* %call19, %struct_template_circuit_num2bits** %X_range_checks22, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.0
  %X26 = load i128, i128* %array_getter25, align 4
  %lshift = shl i128 1, %signedcheckcarrymodtozero.n.read_arg_inner
  %add28 = add i128 %X26, %lshift
  %array_getter31 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks7, i128 0, i128 %i.0
  %X_range_checks32 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter31, align 8
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks32, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter33, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %add28, i1* @constraint.269)
  %array_getter36 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %X_range_checks7, i128 0, i128 %i.0
  %X_range_checks37 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter36, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks37, i32 0, i32 1
  store i128 %add28, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add39 = add i128 %i.0, 1
  %slt = icmp slt i128 %add39, %sdiv
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call47 = call %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %signedcheckcarrymodtozero.n.read_arg_inner, i128 %signedcheckcarrymodtozero.k.read_arg_inner, i128 %sdiv, i128 %signedcheckcarrymodtozero.overflow.read_arg_inner, [256 x i128]* %signedcheckcarrymodtozero.p.read_arg_inner)
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch73, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add75, %loop.latch73 ]
  %array_getter51 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_inner, i128 0, i128 %i.1
  %in52 = load i128, i128* %array_getter51, align 4
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call47, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter, i128 0, i128 %i.1
  %mod_check57 = load i128, i128* %array_getter56, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check57, i128 %in52, i1* @constraint.270)
  %struct_getter59 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call47, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter60 = load [256 x i128]*, [256 x i128]** %struct_getter59, align 8
  %mod_check62 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter60, i128 0, i128 %i.1
  store i128 %in52, i128* %mod_check62, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call47, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter, i128 0, i128 %i.1
  %mod_check67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check67, i128 0, i1* @constraint.271)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call47, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter70 = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %mod_check72 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter70, i128 0, i128 %i.1
  store i128 0, i128* %mod_check72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.body48
  %add75 = add i128 %i.1, 1
  %slt78 = icmp slt i128 %add75, %signedcheckcarrymodtozero.k.read_arg_inner
  br i1 %slt78, label %loop.body48, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch95, %loop.exit79
  %i.2 = phi i128 [ 0, %loop.exit79 ], [ %add97, %loop.latch95 ]
  %array_getter83 = getelementptr inbounds [256 x i128], [256 x i128]* %X, i128 0, i128 %i.2
  %X84 = load i128, i128* %array_getter83, align 4
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call47, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter86, align 8
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter, i128 0, i128 %i.2
  %mod_check89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check89, i128 %X84, i1* @constraint.272)
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %call47, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter92 = load [256 x i128]*, [256 x i128]** %struct_getter91, align 8
  %mod_check94 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter92, i128 0, i128 %i.2
  store i128 %X84, i128* %mod_check94, align 4
  br label %loop.latch95

loop.latch95:                                     ; preds = %loop.body80
  %add97 = add i128 %i.2, 1
  %slt100 = icmp slt i128 %add97, %sdiv
  br i1 %slt100, label %loop.body80, label %loop.exit101

loop.exit101:                                     ; preds = %loop.latch95
  br label %exit

exit:                                             ; preds = %loop.exit101
  %signedcheckcarrymodtozero.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %0, i32 0, i32 5
  store [256 x i128]* %X, [256 x i128]** %signedcheckcarrymodtozero.x.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedcheckcarrymodtozero = alloca %struct_template_circuit_signedcheckcarrymodtozero, align 8
  %signedcheckcarrymodtozero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 0
  store i128 %0, i128* %signedcheckcarrymodtozero.n.write_arg_inner, align 4
  %signedcheckcarrymodtozero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 1
  store i128 %1, i128* %signedcheckcarrymodtozero.k.write_arg_inner, align 4
  %signedcheckcarrymodtozero.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 2
  store i128 %2, i128* %signedcheckcarrymodtozero.overflow.write_arg_inner, align 4
  %signedcheckcarrymodtozero.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedcheckcarrymodtozero.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedcheckcarrymodtozero* %struct_template_circuit_signedcheckcarrymodtozero
}

define void @fn_template_init_bigsubmodp(%struct_template_circuit_bigsubmodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 0
  %bigsubmodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 1
  %bigsubmodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 2
  %bigsubmodp.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 3
  %bigsubmodp.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 4
  %bigsubmodp.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %flag = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall to [256 x i128]*
  %malloccall5 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall5 to [256 x i128]*
  %i6 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %bigsubmodp.n.read_arg_inner, i128 %bigsubmodp.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add32, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigsubmodp.a.read_input_inner, i128 0, i128 %i.0
  %a8 = load i128, i128* %array_getter, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.0
  %sub13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub13, i128 %a8, i1* @constraint.273)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %sub17 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter15, i128 0, i128 %i.0
  store i128 %a8, i128* %sub17, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsubmodp.b.read_input_inner, i128 0, i128 %i.0
  %b20 = load i128, i128* %array_getter19, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.0
  %sub25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub25, i128 %b20, i1* @constraint.274)
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %sub30 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter28, i128 0, i128 %i.0
  store i128 %b20, i128* %sub30, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add32 = add i128 %i.0, 1
  %slt = icmp slt i128 %add32, %bigsubmodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 5
  %bigsub.underflow.read_output_outter = load i128, i128* %struct_getter36, align 4
  call void @fn_intrinsic_add_constraint(i128 %flag, i128 %bigsub.underflow.read_output_outter, i1* @constraint.275)
  %bigsubmodp.flag.write_inter_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 5
  store i128 %bigsub.underflow.read_output_outter, i128* %bigsubmodp.flag.write_inter_inner, align 4
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 5
  %bigsubmodp.flag.read_inter_inner = load i128, i128* %struct_getter40, align 4
  %call43 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %bigsubmodp.n.read_arg_inner, i128 %bigsubmodp.k.read_arg_inner)
  br label %loop.body44

loop.body44:                                      ; preds = %loop.latch73, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add75, %loop.latch73 ]
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %i.1
  %sub49 = load i128, i128* %array_getter48, align 4
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter51, align 8
  %array_getter53 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.1
  %add54 = load i128, i128* %array_getter53, align 4
  call void @fn_intrinsic_add_constraint(i128 %add54, i128 %sub49, i1* @constraint.276)
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 2
  %bigadd.a.read_input_outter57 = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %add59 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter57, i128 0, i128 %i.1
  store i128 %sub49, i128* %add59, align 4
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsubmodp.p.read_input_inner, i128 0, i128 %i.1
  %p62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.1
  %add67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %add67, i128 %p62, i1* @constraint.277)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 3
  %bigadd.b.read_input_outter70 = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %add72 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter70, i128 0, i128 %i.1
  store i128 %p62, i128* %add72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.body44
  %add75 = add i128 %i.1, 1
  %slt78 = icmp slt i128 %add75, %bigsubmodp.k.read_arg_inner
  br i1 %slt78, label %loop.body44, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch115, %loop.exit79
  %i.2 = phi i128 [ 0, %loop.exit79 ], [ %add117, %loop.latch115 ]
  %sub82 = sub i128 1, %bigsubmodp.flag.read_inter_inner
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter85 = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %array_getter87 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter85, i128 0, i128 %i.2
  %sub88 = load i128, i128* %array_getter87, align 4
  %mul = mul i128 %sub82, %sub88
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp, i128 0, i128 %i.2
  %tmp92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp92, i128 %mul, i1* @constraint.278)
  %tmp95 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp, i128 0, i128 %i.2
  store i128 %mul, i128* %tmp95, align 4
  %array_getter98 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp, i128 0, i128 %i.2
  %tmp99 = load i128, i128* %array_getter98, align 4
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter102, align 8
  %array_getter104 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.2
  %add105 = load i128, i128* %array_getter104, align 4
  %mul106 = mul i128 %bigsubmodp.flag.read_inter_inner, %add105
  %add107 = add i128 %tmp99, %mul106
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  %out111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_add_constraint(i128 %out111, i128 %add107, i1* @constraint.279)
  %out114 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  store i128 %add107, i128* %out114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body80
  %add117 = add i128 %i.2, 1
  %slt120 = icmp slt i128 %add117, %bigsubmodp.k.read_arg_inner
  br i1 %slt120, label %loop.body80, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %exit

exit:                                             ; preds = %loop.exit121
  %bigsubmodp.flag.write_inter_inner123 = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 5
  store i128 %bigsubmodp.flag.read_inter_inner, i128* %bigsubmodp.flag.write_inter_inner123, align 4
  %bigsubmodp.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 6
  store [256 x i128]* %tmp, [256 x i128]** %bigsubmodp.tmp.write_inter_inner, align 8
  %bigsubmodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %0, i32 0, i32 7
  store [256 x i128]* %out, [256 x i128]** %bigsubmodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigsubmodp* @fn_template_build_bigsubmodp(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigsubmodp = alloca %struct_template_circuit_bigsubmodp, align 8
  %bigsubmodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %struct_template_circuit_bigsubmodp, i32 0, i32 0
  store i128 %0, i128* %bigsubmodp.n.write_arg_inner, align 4
  %bigsubmodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigsubmodp, %struct_template_circuit_bigsubmodp* %struct_template_circuit_bigsubmodp, i32 0, i32 1
  store i128 %1, i128* %bigsubmodp.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigsubmodp* %struct_template_circuit_bigsubmodp
}

define void @fn_template_init_signedfp2carrymodp(%struct_template_circuit_signedfp2carrymodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 0
  %signedfp2carrymodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 1
  %signedfp2carrymodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 2
  %signedfp2carrymodp.overflow.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 3
  %signedfp2carrymodp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %carry5 = alloca [256 x %struct_template_circuit_signedfpcarrymodp*], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall6 to [256 x [256 x i128]]*
  %idx7 = call i128 @fn_intrinsic_inline_init()
  %m8 = call i128 @fn_intrinsic_inline_init()
  %i9 = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %signedfp2carrymodp.overflow.read_arg_inner, %signedfp2carrymodp.n.read_arg_inner
  %sub = sub i128 %add, 1
  %sdiv = sdiv i128 %sub, %signedfp2carrymodp.n.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch89, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add91, %loop.latch89 ]
  %call = call %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %signedfp2carrymodp.n.read_arg_inner, i128 %signedfp2carrymodp.k.read_arg_inner, i128 %signedfp2carrymodp.overflow.read_arg_inner, [256 x i128]* %signedfp2carrymodp.p.read_arg_inner)
  %carry14 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry5, i128 0, i128 %i.0
  store %struct_template_circuit_signedfpcarrymodp* %call, %struct_template_circuit_signedfpcarrymodp** %carry14, align 8
  br label %loop.body15

loop.body15:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add36, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %in18 = load i128, i128* %array_getter, align 4
  %array_getter21 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry5, i128 0, i128 %i.0
  %carry22 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter21, align 8
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry22, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter, i128 0, i128 %idx.0
  %carry26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry26, i128 %in18, i1* @constraint.280)
  %array_getter29 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry5, i128 0, i128 %i.0
  %carry30 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter29, align 8
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry30, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %carry34 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter32, i128 0, i128 %idx.0
  store i128 %in18, i128* %carry34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body15
  %add36 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add36, %signedfp2carrymodp.k.read_arg_inner
  br i1 %slt, label %loop.body15, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch57, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add59, %loop.latch57 ]
  %array_getter42 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry5, i128 0, i128 %i.0
  %carry43 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter42, align 8
  %struct_getter44 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry43, i32 0, i32 5
  %signedfpcarrymodp.x.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter44, align 8
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.x.read_output_outter, i128 0, i128 %idx.1
  %carry47 = load i128, i128* %array_getter46, align 4
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X, i128 0, i128 %i.0, i128 %idx.1
  %X52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_add_constraint(i128 %X52, i128 %carry47, i1* @constraint.281)
  %X56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X, i128 0, i128 %i.0, i128 %idx.1
  store i128 %carry47, i128* %X56, align 4
  br label %loop.latch57

loop.latch57:                                     ; preds = %loop.body39
  %add59 = add i128 %idx.1, 1
  %slt62 = icmp slt i128 %add59, %sdiv
  br i1 %slt62, label %loop.body39, label %loop.exit63

loop.exit63:                                      ; preds = %loop.latch57
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch82, %loop.exit63
  %idx.2 = phi i128 [ 0, %loop.exit63 ], [ %add84, %loop.latch82 ]
  %array_getter67 = getelementptr inbounds [256 x %struct_template_circuit_signedfpcarrymodp*], [256 x %struct_template_circuit_signedfpcarrymodp*]* %carry5, i128 0, i128 %i.0
  %carry68 = load %struct_template_circuit_signedfpcarrymodp*, %struct_template_circuit_signedfpcarrymodp** %array_getter67, align 8
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %carry68, i32 0, i32 6
  %signedfpcarrymodp.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.out.read_output_outter, i128 0, i128 %idx.2
  %carry72 = load i128, i128* %array_getter71, align 4
  %array_getter76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.0, i128 %idx.2
  %out77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %out77, i128 %carry72, i1* @constraint.282)
  %out81 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.0, i128 %idx.2
  store i128 %carry72, i128* %out81, align 4
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.body64
  %add84 = add i128 %idx.2, 1
  %slt87 = icmp slt i128 %add84, %signedfp2carrymodp.k.read_arg_inner
  br i1 %slt87, label %loop.body64, label %loop.exit88

loop.exit88:                                      ; preds = %loop.latch82
  br label %loop.latch89

loop.latch89:                                     ; preds = %loop.exit88
  %add91 = add i128 %i.0, 1
  %slt93 = icmp slt i128 %add91, 2
  br i1 %slt93, label %loop.body, label %loop.exit94

loop.exit94:                                      ; preds = %loop.latch89
  br label %exit

exit:                                             ; preds = %loop.exit94
  %signedfp2carrymodp.x.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %X, [256 x [256 x i128]]** %signedfp2carrymodp.x.write_output_inner, align 8
  %signedfp2carrymodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2carrymodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_signedfp2carrymodp = alloca %struct_template_circuit_signedfp2carrymodp, align 8
  %signedfp2carrymodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 0
  store i128 %0, i128* %signedfp2carrymodp.n.write_arg_inner, align 4
  %signedfp2carrymodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 1
  store i128 %1, i128* %signedfp2carrymodp.k.write_arg_inner, align 4
  %signedfp2carrymodp.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 2
  store i128 %2, i128* %signedfp2carrymodp.overflow.write_arg_inner, align 4
  %signedfp2carrymodp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %signedfp2carrymodp.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp2carrymodp* %struct_template_circuit_signedfp2carrymodp
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_sum(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %2, [256 x [256 x [256 x i128]]]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %2, i128 0, i128 %i.0
  %a4 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a4, [256 x [256 x i128]]* %spice_inline_array, align 4
  %array_getter6 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %i.0
  %b7 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter6, align 4
  %spice_inline_array8 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b7, [256 x [256 x i128]]* %spice_inline_array8, align 4
  %call = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array8, [256 x i128]* %4)
  %out10 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.0
  %5 = bitcast [256 x [256 x i128]]* %out10 to i8*
  %6 = bitcast [256 x [256 x i128]]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 6
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_fpiszero(%struct_template_circuit_fpiszero* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 0
  %fpiszero.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 1
  %fpiszero.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 2
  %fpiszero.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 3
  %fpiszero.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %out = call i128 @fn_intrinsic_inline_init()
  %i4 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpiszero.n.read_arg_inner, i128 %fpiszero.k.read_arg_inner)
  %call6 = call %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %fpiszero.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpiszero.in.read_input_inner, i128 0, i128 %i.0
  %in8 = load i128, i128* %array_getter, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lt13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt13, i128 %in8, i1* @constraint.283)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 2
  %biglessthan.a.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %lt17 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter15, i128 0, i128 %i.0
  store i128 %in8, i128* %lt17, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %fpiszero.p.read_arg_inner, i128 0, i128 %i.0
  %p20 = load i128, i128* %array_getter19, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lt25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt25, i128 %p20, i1* @constraint.284)
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 3
  %biglessthan.b.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %lt30 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter28, i128 0, i128 %i.0
  store i128 %p20, i128* %lt30, align 4
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %fpiszero.in.read_input_inner, i128 0, i128 %i.0
  %in34 = load i128, i128* %array_getter33, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call6, i32 0, i32 1
  %bigiszero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter, i128 0, i128 %i.0
  %isZero39 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_add_constraint(i128 %isZero39, i128 %in34, i1* @constraint.285)
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call6, i32 0, i32 1
  %bigiszero.in.read_input_outter42 = load [256 x i128]*, [256 x i128]** %struct_getter41, align 8
  %isZero44 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter42, i128 0, i128 %i.0
  store i128 %in34, i128* %isZero44, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fpiszero.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter49, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.286)
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call6, i32 0, i32 2
  %bigiszero.out.read_output_outter = load i128, i128* %struct_getter51, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %bigiszero.out.read_output_outter, i1* @constraint.287)
  %fpiszero.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 4
  store i128 %bigiszero.out.read_output_outter, i128* %fpiszero.out.write_output_inner, align 4
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 4
  %fpiszero.out.read_output_inner = load i128, i128* %struct_getter55, align 4
  br label %exit

exit:                                             ; preds = %loop.exit
  %fpiszero.out.write_output_inner57 = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %0, i32 0, i32 4
  store i128 %fpiszero.out.read_output_inner, i128* %fpiszero.out.write_output_inner57, align 4
  ret void
}

define %struct_template_circuit_fpiszero* @fn_template_build_fpiszero(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpiszero = alloca %struct_template_circuit_fpiszero, align 8
  %fpiszero.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero, i32 0, i32 0
  store i128 %0, i128* %fpiszero.n.write_arg_inner, align 4
  %fpiszero.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero, i32 0, i32 1
  store i128 %1, i128* %fpiszero.k.write_arg_inner, align 4
  %fpiszero.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpiszero, %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpiszero.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpiszero* %struct_template_circuit_fpiszero
}

define void @fn_template_init_fp2isequal(%struct_template_circuit_fp2isequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 0
  %fp2isequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 1
  %fp2isequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 2
  %fp2isequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 3
  %fp2isequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 4
  %fp2isequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %isEquals5 = alloca [256 x [256 x %struct_template_circuit_isequal*]], align 8
  %j6 = call i128 @fn_intrinsic_inline_init()
  %lta7 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  %total8 = call i128 @fn_intrinsic_inline_init()
  %out = call i128 @fn_intrinsic_inline_init()
  %i9 = call i128 @fn_intrinsic_inline_init()
  %ltb10 = alloca [256 x %struct_template_circuit_biglessthan*], align 8
  %mul = mul i128 2, %fp2isequal.k.read_arg_inner
  br label %loop.body

loop.body:                                        ; preds = %loop.latch170, %entry
  %j.0 = phi i128 [ 0, %entry ], [ %add172, %loop.latch170 ]
  %total.0 = phi i128 [ %mul, %entry ], [ %sub, %loop.latch170 ]
  %call = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fp2isequal.n.read_arg_inner, i128 %fp2isequal.k.read_arg_inner)
  %lta13 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta7, i128 0, i128 %j.0
  store %struct_template_circuit_biglessthan* %call, %struct_template_circuit_biglessthan** %lta13, align 8
  %call16 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fp2isequal.n.read_arg_inner, i128 %fp2isequal.k.read_arg_inner)
  %ltb19 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb10, i128 0, i128 %j.0
  store %struct_template_circuit_biglessthan* %call16, %struct_template_circuit_biglessthan** %ltb19, align 8
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch, %loop.body
  %total.1 = phi i128 [ %total.0, %loop.body ], [ %sub, %loop.latch ]
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %a23 = load i128, i128* %array_getter, align 4
  %array_getter26 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta7, i128 0, i128 %j.0
  %lta27 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter26, align 8
  %struct_getter28 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta27, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter28, align 8
  %array_getter30 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.0
  %lta31 = load i128, i128* %array_getter30, align 4
  call void @fn_intrinsic_add_constraint(i128 %lta31, i128 %a23, i1* @constraint.288)
  %array_getter34 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta7, i128 0, i128 %j.0
  %lta35 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter34, align 8
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta35, i32 0, i32 2
  %biglessthan.a.read_input_outter37 = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %lta39 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter37, i128 0, i128 %i.0
  store i128 %a23, i128* %lta39, align 4
  %array_getter41 = getelementptr inbounds [256 x i128], [256 x i128]* %fp2isequal.p.read_arg_inner, i128 0, i128 %i.0
  %p42 = load i128, i128* %array_getter41, align 4
  %array_getter45 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta7, i128 0, i128 %j.0
  %lta46 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter45, align 8
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta46, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %array_getter49 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.0
  %lta50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_add_constraint(i128 %lta50, i128 %p42, i1* @constraint.289)
  %array_getter53 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta7, i128 0, i128 %j.0
  %lta54 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter53, align 8
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta54, i32 0, i32 3
  %biglessthan.b.read_input_outter56 = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %lta58 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter56, i128 0, i128 %i.0
  store i128 %p42, i128* %lta58, align 4
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %b62 = load i128, i128* %array_getter61, align 4
  %array_getter65 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb10, i128 0, i128 %j.0
  %ltb66 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter65, align 8
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb66, i32 0, i32 2
  %biglessthan.a.read_input_outter68 = load [256 x i128]*, [256 x i128]** %struct_getter67, align 8
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter68, i128 0, i128 %i.0
  %ltb71 = load i128, i128* %array_getter70, align 4
  call void @fn_intrinsic_add_constraint(i128 %ltb71, i128 %b62, i1* @constraint.290)
  %array_getter74 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb10, i128 0, i128 %j.0
  %ltb75 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter74, align 8
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb75, i32 0, i32 2
  %biglessthan.a.read_input_outter77 = load [256 x i128]*, [256 x i128]** %struct_getter76, align 8
  %ltb79 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter77, i128 0, i128 %i.0
  store i128 %b62, i128* %ltb79, align 4
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %fp2isequal.p.read_arg_inner, i128 0, i128 %i.0
  %p83 = load i128, i128* %array_getter82, align 4
  %array_getter86 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb10, i128 0, i128 %j.0
  %ltb87 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter86, align 8
  %struct_getter88 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb87, i32 0, i32 3
  %biglessthan.b.read_input_outter89 = load [256 x i128]*, [256 x i128]** %struct_getter88, align 8
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter89, i128 0, i128 %i.0
  %ltb92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_add_constraint(i128 %ltb92, i128 %p83, i1* @constraint.291)
  %array_getter95 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb10, i128 0, i128 %j.0
  %ltb96 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter95, align 8
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb96, i32 0, i32 3
  %biglessthan.b.read_input_outter98 = load [256 x i128]*, [256 x i128]** %struct_getter97, align 8
  %ltb100 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter98, i128 0, i128 %i.0
  store i128 %p83, i128* %ltb100, align 4
  %call101 = call %struct_template_circuit_isequal* @fn_template_build_isequal()
  %isEquals105 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals5, i128 0, i128 %j.0, i128 %i.0
  store %struct_template_circuit_isequal* %call101, %struct_template_circuit_isequal** %isEquals105, align 8
  %array_getter109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %a110 = load i128, i128* %array_getter109, align 4
  %array_getter114 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals5, i128 0, i128 %j.0, i128 %i.0
  %isEquals115 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter114, align 8
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals115, i32 0, i32 0
  %isequal.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter116, align 8
  %array_getter117 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter, i128 0, i128 0
  %isEquals118 = load i128, i128* %array_getter117, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEquals118, i128 %a110, i1* @constraint.292)
  %array_getter122 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals5, i128 0, i128 %j.0, i128 %i.0
  %isEquals123 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter122, align 8
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals123, i32 0, i32 0
  %isequal.in.read_input_outter125 = load [256 x i128]*, [256 x i128]** %struct_getter124, align 8
  %isEquals126 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter125, i128 0, i128 0
  store i128 %a110, i128* %isEquals126, align 4
  %array_getter130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %b131 = load i128, i128* %array_getter130, align 4
  %array_getter135 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals5, i128 0, i128 %j.0, i128 %i.0
  %isEquals136 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter135, align 8
  %struct_getter137 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals136, i32 0, i32 0
  %isequal.in.read_input_outter138 = load [256 x i128]*, [256 x i128]** %struct_getter137, align 8
  %array_getter139 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter138, i128 0, i128 1
  %isEquals140 = load i128, i128* %array_getter139, align 4
  call void @fn_intrinsic_add_constraint(i128 %isEquals140, i128 %b131, i1* @constraint.293)
  %array_getter144 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals5, i128 0, i128 %j.0, i128 %i.0
  %isEquals145 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter144, align 8
  %struct_getter146 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals145, i32 0, i32 0
  %isequal.in.read_input_outter147 = load [256 x i128]*, [256 x i128]** %struct_getter146, align 8
  %isEquals148 = getelementptr inbounds [256 x i128], [256 x i128]* %isequal.in.read_input_outter147, i128 0, i128 1
  store i128 %b131, i128* %isEquals148, align 4
  %array_getter153 = getelementptr inbounds [256 x [256 x %struct_template_circuit_isequal*]], [256 x [256 x %struct_template_circuit_isequal*]]* %isEquals5, i128 0, i128 %j.0, i128 %i.0
  %isEquals154 = load %struct_template_circuit_isequal*, %struct_template_circuit_isequal** %array_getter153, align 8
  %struct_getter155 = getelementptr inbounds %struct_template_circuit_isequal, %struct_template_circuit_isequal* %isEquals154, i32 0, i32 1
  %isequal.out.read_output_outter = load i128, i128* %struct_getter155, align 4
  %sub = sub i128 %total.1, %isequal.out.read_output_outter
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body20
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2isequal.k.read_arg_inner
  br i1 %slt, label %loop.body20, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %array_getter161 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %lta7, i128 0, i128 %j.0
  %lta162 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter161, align 8
  %struct_getter163 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %lta162, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter163, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter, i128 1, i1* @constraint.294)
  %array_getter166 = getelementptr inbounds [256 x %struct_template_circuit_biglessthan*], [256 x %struct_template_circuit_biglessthan*]* %ltb10, i128 0, i128 %j.0
  %ltb167 = load %struct_template_circuit_biglessthan*, %struct_template_circuit_biglessthan** %array_getter166, align 8
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %ltb167, i32 0, i32 4
  %biglessthan.out.read_output_outter169 = load i128, i128* %struct_getter168, align 4
  call void @fn_intrinsic_add_constraint(i128 %biglessthan.out.read_output_outter169, i128 1, i1* @constraint.295)
  br label %loop.latch170

loop.latch170:                                    ; preds = %loop.exit
  %add172 = add i128 %j.0, 1
  %slt174 = icmp slt i128 %add172, 2
  br i1 %slt174, label %loop.body, label %loop.exit175

loop.exit175:                                     ; preds = %loop.latch170
  %call176 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call176, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter179, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %sub, i1* @constraint.296)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call176, i32 0, i32 0
  store i128 %sub, i128* %iszero.in.write_input_outter, align 4
  %struct_getter182 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call176, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter182, align 4
  call void @fn_intrinsic_add_constraint(i128 %out, i128 %iszero.out.read_output_outter, i1* @constraint.297)
  %fp2isequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 5
  store i128 %iszero.out.read_output_outter, i128* %fp2isequal.out.write_output_inner, align 4
  %struct_getter186 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 5
  %fp2isequal.out.read_output_inner = load i128, i128* %struct_getter186, align 4
  br label %exit

exit:                                             ; preds = %loop.exit175
  %fp2isequal.out.write_output_inner188 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %0, i32 0, i32 5
  store i128 %fp2isequal.out.read_output_inner, i128* %fp2isequal.out.write_output_inner188, align 4
  ret void
}

define %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2isequal = alloca %struct_template_circuit_fp2isequal, align 8
  %fp2isequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal, i32 0, i32 0
  store i128 %0, i128* %fp2isequal.n.write_arg_inner, align 4
  %fp2isequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal, i32 0, i32 1
  store i128 %1, i128* %fp2isequal.k.write_arg_inner, align 4
  %fp2isequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2isequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2isequal* %struct_template_circuit_fp2isequal
}

define [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x [256 x i128]]* %3, [256 x i128]* %4) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %j2 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array5 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch18, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add20, %loop.latch18 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 %i.0
  %a8 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a8, [256 x i128]* %spice_inline_array, align 4
  %array_getter10 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %3, i128 0, i128 %j.0
  %b11 = load [256 x i128], [256 x i128]* %array_getter10, align 4
  %spice_inline_array12 = alloca [256 x i128], align 8
  store [256 x i128] %b11, [256 x i128]* %spice_inline_array12, align 4
  %call = call [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array12, [256 x i128]* %4)
  %ab15 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 %i.0, i128 %j.0
  %5 = bitcast [256 x i128]* %ab15 to i8*
  %6 = bitcast [256 x i128]* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body6
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, 2
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch18

loop.latch18:                                     ; preds = %loop.exit
  %add20 = add i128 %i.0, 1
  %slt22 = icmp slt i128 %add20, 2
  br i1 %slt22, label %loop.body, label %loop.exit23

loop.exit23:                                      ; preds = %loop.latch18
  %array_getter27 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 0, i128 0
  %ab28 = load [256 x i128], [256 x i128]* %array_getter27, align 4
  %spice_inline_array29 = alloca [256 x i128], align 8
  store [256 x i128] %ab28, [256 x i128]* %spice_inline_array29, align 4
  %array_getter31 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 1, i128 1
  %ab32 = load [256 x i128], [256 x i128]* %array_getter31, align 4
  %spice_inline_array33 = alloca [256 x i128], align 8
  store [256 x i128] %ab32, [256 x i128]* %spice_inline_array33, align 4
  %call35 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array29, [256 x i128]* %spice_inline_array33, [256 x i128]* %4)
  %out37 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %7 = bitcast [256 x i128]* %out37 to i8*
  %8 = bitcast [256 x i128]* %call35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter41 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 0, i128 1
  %ab42 = load [256 x i128], [256 x i128]* %array_getter41, align 4
  %spice_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] %ab42, [256 x i128]* %spice_inline_array43, align 4
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array5, i128 0, i128 1, i128 0
  %ab46 = load [256 x i128], [256 x i128]* %array_getter45, align 4
  %spice_inline_array47 = alloca [256 x i128], align 8
  store [256 x i128] %ab46, [256 x i128]* %spice_inline_array47, align 4
  %call49 = call [256 x i128]* @long_add_mod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array43, [256 x i128]* %spice_inline_array47, [256 x i128]* %4)
  %out51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %9 = bitcast [256 x i128]* %out51 to i8*
  %10 = bitcast [256 x i128]* %call49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define [256 x [256 x i128]]* @find_Fp2_exp(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %i2 = call i128 @fn_intrinsic_inline_init()
  %bitLength3 = call i128 @fn_intrinsic_inline_init()
  %j4 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch31, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add33, %loop.latch31 ]
  %bitLength.0 = phi i128 [ 0, %entry ], [ %bitLength.2, %loop.latch31 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %bitLength.1 = phi i128 [ %bitLength.0, %loop.body ], [ %bitLength.2, %loop.latch ]
  %j.0 = phi i128 [ 0, %loop.body ], [ %add28, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %4, i128 0, i128 %i.0
  %e8 = load i128, i128* %array_getter, align 4
  %rshift = lshr i128 %e8, %j.0
  %and = and i128 %rshift, 1
  %mul = mul i128 %0, %i.0
  %add = add i128 %j.0, %mul
  %eBits12 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add
  store i128 %and, i128* %eBits12, align 4
  %mul17 = mul i128 %0, %i.0
  %add18 = add i128 %j.0, %mul17
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %add18
  %eBits20 = load i128, i128* %array_getter19, align 4
  %eq = icmp eq i128 %eBits20, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body6
  %mul24 = mul i128 %0, %i.0
  %add25 = add i128 %j.0, %mul24
  %add26 = add i128 %add25, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body6
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %bitLength.2 = phi i128 [ %add26, %if.true ], [ %bitLength.1, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add28 = add i128 %j.0, 1
  %slt = icmp slt i128 %add28, %0
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch31

loop.latch31:                                     ; preds = %loop.exit
  %add33 = add i128 %i.0, 1
  %mul35 = mul i128 2, %1
  %slt36 = icmp slt i128 %add33, %mul35
  br i1 %slt36, label %loop.body, label %loop.exit37

loop.exit37:                                      ; preds = %loop.latch31
  %uniform_array38 = alloca [256 x [256 x i128]], align 8
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch46, %loop.exit37
  %i.1 = phi i128 [ 0, %loop.exit37 ], [ %add48, %loop.latch46 ]
  %out42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array38, i128 0, i128 0, i128 %i.1
  store i128 0, i128* %out42, align 4
  %out45 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array38, i128 0, i128 1, i128 %i.1
  store i128 0, i128* %out45, align 4
  br label %loop.latch46

loop.latch46:                                     ; preds = %loop.body39
  %add48 = add i128 %i.1, 1
  %slt50 = icmp slt i128 %add48, 50
  br i1 %slt50, label %loop.body39, label %loop.exit51

loop.exit51:                                      ; preds = %loop.latch46
  %out53 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array38, i128 0, i128 0, i128 0
  store i128 1, i128* %out53, align 4
  %sub = sub i128 %bitLength.2, 1
  br label %loop.body55

loop.body55:                                      ; preds = %loop.latch77, %loop.exit51
  %out.0 = phi [256 x [256 x i128]]* [ %uniform_array38, %loop.exit51 ], [ %out.2, %loop.latch77 ]
  %i.2 = phi i128 [ %sub, %loop.exit51 ], [ %sub79, %loop.latch77 ]
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.2
  %eBits61 = load i128, i128* %array_getter60, align 4
  %eq62 = icmp eq i128 %eBits61, 1
  br i1 %eq62, label %if.true56, label %if.false57

if.true56:                                        ; preds = %loop.body55
  %call = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %out.0, [256 x [256 x i128]]* %2, [256 x i128]* %3)
  br label %if.exit66

if.false57:                                       ; preds = %loop.body55
  br label %if.exit66

if.exit66:                                        ; preds = %if.false57, %if.true56
  %out.1 = phi [256 x [256 x i128]]* [ %call, %if.true56 ], [ %out.0, %if.false57 ]
  %sgt = icmp sgt i128 %i.2, 0
  br i1 %sgt, label %if.true67, label %if.false68

if.true67:                                        ; preds = %if.exit66
  %call75 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %out.1, [256 x [256 x i128]]* %out.1, [256 x i128]* %3)
  br label %if.exit76

if.false68:                                       ; preds = %if.exit66
  br label %if.exit76

if.exit76:                                        ; preds = %if.false68, %if.true67
  %out.2 = phi [256 x [256 x i128]]* [ %call75, %if.true67 ], [ %out.1, %if.false68 ]
  br label %loop.latch77

loop.latch77:                                     ; preds = %if.exit76
  %sub79 = sub i128 %i.2, 1
  %sge = icmp sge i128 %sub79, 0
  br i1 %sge, label %loop.body55, label %loop.exit81

loop.exit81:                                      ; preds = %loop.latch77
  ret [256 x [256 x i128]]* %out.2
}

define void @fn_template_init_bigmodinv(%struct_template_circuit_bigmodinv* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 0
  %bigmodinv.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 1
  %bigmodinv.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 2
  %bigmodinv.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 3
  %bigmodinv.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i4 = call i128 @fn_intrinsic_inline_init()
  %range_checks6 = alloca [256 x %struct_template_circuit_num2bits*], align 8
  %call = call [256 x i128]* @mod_inv(i128 %bigmodinv.n.read_arg_inner, i128 %bigmodinv.k.read_arg_inner, [256 x i128]* %bigmodinv.in.read_input_inner, [256 x i128]* %bigmodinv.p.read_input_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %call, i128 0, i128 %i.0
  %inv9 = load i128, i128* %array_getter, align 4
  %out11 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.0
  store i128 %inv9, i128* %out11, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigmodinv.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body15

loop.body15:                                      ; preds = %loop.latch34, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add36, %loop.latch34 ]
  %call17 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %bigmodinv.n.read_arg_inner)
  %range_checks20 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks6, i128 0, i128 %i.1
  store %struct_template_circuit_num2bits* %call17, %struct_template_circuit_num2bits** %range_checks20, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.1
  %out24 = load i128, i128* %array_getter23, align 4
  %array_getter27 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks6, i128 0, i128 %i.1
  %range_checks28 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter27, align 8
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks28, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter29, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %out24, i1* @constraint.298)
  %array_getter32 = getelementptr inbounds [256 x %struct_template_circuit_num2bits*], [256 x %struct_template_circuit_num2bits*]* %range_checks6, i128 0, i128 %i.1
  %range_checks33 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter32, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %range_checks33, i32 0, i32 1
  store i128 %out24, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch34

loop.latch34:                                     ; preds = %loop.body15
  %add36 = add i128 %i.1, 1
  %slt39 = icmp slt i128 %add36, %bigmodinv.k.read_arg_inner
  br i1 %slt39, label %loop.body15, label %loop.exit40

loop.exit40:                                      ; preds = %loop.latch34
  %call43 = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmodinv.n.read_arg_inner, i128 %bigmodinv.k.read_arg_inner)
  br label %loop.body44

loop.body44:                                      ; preds = %loop.latch73, %loop.exit40
  %i.2 = phi i128 [ 0, %loop.exit40 ], [ %add75, %loop.latch73 ]
  %array_getter47 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmodinv.in.read_input_inner, i128 0, i128 %i.2
  %in48 = load i128, i128* %array_getter47, align 4
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call43, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.2
  %mult53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult53, i128 %in48, i1* @constraint.299)
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call43, i32 0, i32 2
  %bigmult.a.read_input_outter56 = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %mult58 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter56, i128 0, i128 %i.2
  store i128 %in48, i128* %mult58, align 4
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  %out62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call43, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.2
  %mult67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult67, i128 %out62, i1* @constraint.300)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call43, i32 0, i32 3
  %bigmult.b.read_input_outter70 = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %mult72 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter70, i128 0, i128 %i.2
  store i128 %out62, i128* %mult72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.body44
  %add75 = add i128 %i.2, 1
  %slt78 = icmp slt i128 %add75, %bigmodinv.k.read_arg_inner
  br i1 %slt78, label %loop.body44, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  %call82 = call %struct_template_circuit_bigmod* @fn_template_build_bigmod(i128 %bigmodinv.n.read_arg_inner, i128 %bigmodinv.k.read_arg_inner)
  br label %loop.body83

loop.body83:                                      ; preds = %loop.latch99, %loop.exit79
  %i.3 = phi i128 [ 0, %loop.exit79 ], [ %add101, %loop.latch99 ]
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call43, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter85, align 8
  %array_getter87 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.3
  %mult88 = load i128, i128* %array_getter87, align 4
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call82, i32 0, i32 2
  %bigmod.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter90, align 8
  %array_getter92 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter, i128 0, i128 %i.3
  %mod93 = load i128, i128* %array_getter92, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod93, i128 %mult88, i1* @constraint.301)
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call82, i32 0, i32 2
  %bigmod.a.read_input_outter96 = load [256 x i128]*, [256 x i128]** %struct_getter95, align 8
  %mod98 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter96, i128 0, i128 %i.3
  store i128 %mult88, i128* %mod98, align 4
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.body83
  %add101 = add i128 %i.3, 1
  %mul = mul i128 2, %bigmodinv.k.read_arg_inner
  %slt104 = icmp slt i128 %add101, %mul
  br i1 %slt104, label %loop.body83, label %loop.exit105

loop.exit105:                                     ; preds = %loop.latch99
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch121, %loop.exit105
  %i.4 = phi i128 [ 0, %loop.exit105 ], [ %add123, %loop.latch121 ]
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmodinv.p.read_input_inner, i128 0, i128 %i.4
  %p110 = load i128, i128* %array_getter109, align 4
  %struct_getter112 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call82, i32 0, i32 3
  %bigmod.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter112, align 8
  %array_getter114 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter, i128 0, i128 %i.4
  %mod115 = load i128, i128* %array_getter114, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod115, i128 %p110, i1* @constraint.302)
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call82, i32 0, i32 3
  %bigmod.b.read_input_outter118 = load [256 x i128]*, [256 x i128]** %struct_getter117, align 8
  %mod120 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter118, i128 0, i128 %i.4
  store i128 %p110, i128* %mod120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body106
  %add123 = add i128 %i.4, 1
  %slt126 = icmp slt i128 %add123, %bigmodinv.k.read_arg_inner
  br i1 %slt126, label %loop.body106, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  %struct_getter129 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call82, i32 0, i32 5
  %bigmod.mod.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter129, align 8
  %array_getter130 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.mod.read_output_outter, i128 0, i128 0
  %mod131 = load i128, i128* %array_getter130, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod131, i128 1, i1* @constraint.303)
  br label %loop.body132

loop.body132:                                     ; preds = %loop.latch139, %loop.exit127
  %i.5 = phi i128 [ 1, %loop.exit127 ], [ %add141, %loop.latch139 ]
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call82, i32 0, i32 5
  %bigmod.mod.read_output_outter135 = load [256 x i128]*, [256 x i128]** %struct_getter134, align 8
  %array_getter137 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.mod.read_output_outter135, i128 0, i128 %i.5
  %mod138 = load i128, i128* %array_getter137, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod138, i128 0, i1* @constraint.304)
  br label %loop.latch139

loop.latch139:                                    ; preds = %loop.body132
  %add141 = add i128 %i.5, 1
  %slt144 = icmp slt i128 %add141, %bigmodinv.k.read_arg_inner
  br i1 %slt144, label %loop.body132, label %loop.exit145

loop.exit145:                                     ; preds = %loop.latch139
  br label %exit

exit:                                             ; preds = %loop.exit145
  %bigmodinv.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %0, i32 0, i32 4
  store [256 x i128]* %out, [256 x i128]** %bigmodinv.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmodinv* @fn_template_build_bigmodinv(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmodinv = alloca %struct_template_circuit_bigmodinv, align 8
  %bigmodinv.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %struct_template_circuit_bigmodinv, i32 0, i32 0
  store i128 %0, i128* %bigmodinv.n.write_arg_inner, align 4
  %bigmodinv.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmodinv, %struct_template_circuit_bigmodinv* %struct_template_circuit_bigmodinv, i32 0, i32 1
  store i128 %1, i128* %bigmodinv.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmodinv* %struct_template_circuit_bigmodinv
}

define [256 x i128]* @find_Fp_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %i1 = call i128 @fn_intrinsic_inline_init()
  %ka6 = call i128 @fn_intrinsic_inline_init()
  %l14 = call i128 @fn_intrinsic_inline_init()
  %call = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 0, [256 x i128]* %2, [256 x i128]* %3)
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array16 = alloca [256 x i128], align 8
  %uniform_array17 = alloca [256 x i128], align 8
  %uniform_array18 = alloca [256 x i128], align 8
  %uniform_array19 = alloca [256 x i128], align 8
  %uniform_array20 = alloca [256 x i128], align 8
  %uniform_array21 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 1, i128 %i.0
  %amodp24 = load i128, i128* %array_getter, align 4
  %a26 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %amodp24, i128* %a26, align 4
  %array_getter29 = getelementptr inbounds [256 x i128], [256 x i128]* %3, i128 0, i128 %i.0
  %p30 = load i128, i128* %array_getter29, align 4
  %b33 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %i.0
  store i128 %p30, i128* %b33, align 4
  %x36 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array17, i128 0, i128 %i.0
  store i128 0, i128* %x36, align 4
  %y39 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %i.0
  store i128 0, i128* %y39, align 4
  %u42 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 %i.0
  store i128 0, i128* %u42, align 4
  %v45 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array20, i128 0, i128 %i.0
  store i128 0, i128* %v45, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %y50 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 0
  store i128 1, i128* %y50, align 4
  %u52 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 0
  store i128 1, i128* %u52, align 4
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch210, %loop.exit
  %l.0 = phi i128 [ 0, %loop.exit ], [ %add212, %loop.latch210 ]
  br label %loop.body54

loop.body54:                                      ; preds = %loop.latch61, %loop.body53
  %ka.0 = phi i128 [ 0, %loop.body53 ], [ %ka.1, %loop.latch61 ]
  %i.1 = phi i128 [ 0, %loop.body53 ], [ %add63, %loop.latch61 ]
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %a58 = load i128, i128* %array_getter57, align 4
  %ne = icmp ne i128 %a58, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body54
  %add60 = add i128 %i.1, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body54
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %ka.1 = phi i128 [ %add60, %if.true ], [ %ka.0, %if.false ]
  br label %loop.latch61

loop.latch61:                                     ; preds = %if.exit
  %add63 = add i128 %i.1, 1
  %slt66 = icmp slt i128 %add63, %1
  br i1 %slt66, label %loop.body54, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch61
  %eq = icmp eq i128 %ka.1, 0
  br i1 %eq, label %if.true68, label %if.false69

if.true68:                                        ; preds = %loop.exit67
  br label %loop.body71

if.false69:                                       ; preds = %loop.exit67
  br label %if.exit87

loop.body71:                                      ; preds = %loop.latch79, %if.true68
  %i.2 = phi i128 [ 0, %if.true68 ], [ %add81, %loop.latch79 ]
  %array_getter74 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array17, i128 0, i128 %i.2
  %x75 = load i128, i128* %array_getter74, align 4
  %ret78 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array21, i128 0, i128 %i.2
  store i128 %x75, i128* %ret78, align 4
  br label %loop.latch79

loop.latch79:                                     ; preds = %loop.body71
  %add81 = add i128 %i.2, 1
  %slt84 = icmp slt i128 %add81, %1
  br i1 %slt84, label %loop.body71, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch79
  ret [256 x i128]* %uniform_array21

if.exit87:                                        ; preds = %if.false69
  %sub = sub i128 %1, %ka.1
  %call94 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %ka.1, i128 %sub, [256 x i128]* %uniform_array16, [256 x i128]* %uniform_array)
  %uniform_array95 = alloca [256 x i128], align 8
  br label %loop.body96

loop.body96:                                      ; preds = %loop.latch104, %if.exit87
  %i.3 = phi i128 [ 0, %if.exit87 ], [ %add106, %loop.latch104 ]
  %array_getter99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call94, i128 0, i128 0, i128 %i.3
  %r100 = load i128, i128* %array_getter99, align 4
  %q103 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array95, i128 0, i128 %i.3
  store i128 %r100, i128* %q103, align 4
  br label %loop.latch104

loop.latch104:                                    ; preds = %loop.body96
  %add106 = add i128 %i.3, 1
  %sub110 = sub i128 %1, %ka.1
  %add111 = add i128 %sub110, 1
  %slt112 = icmp slt i128 %add106, %add111
  br i1 %slt112, label %loop.body96, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch104
  %sub116 = sub i128 %1, %ka.1
  %add117 = add i128 %sub116, 1
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch122, %loop.exit113
  %i.4 = phi i128 [ %add117, %loop.exit113 ], [ %add124, %loop.latch122 ]
  %q121 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array95, i128 0, i128 %i.4
  store i128 0, i128* %q121, align 4
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.body118
  %add124 = add i128 %i.4, 1
  %slt127 = icmp slt i128 %add124, %1
  br i1 %slt127, label %loop.body118, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch122
  %call137 = call [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array19, [256 x i128]* %uniform_array95, [256 x i128]* %3)
  %call139 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array17, [256 x i128]* %call137, [256 x i128]* %3)
  %call148 = call [256 x i128]* @prod_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array20, [256 x i128]* %uniform_array95, [256 x i128]* %3)
  %call150 = call [256 x i128]* @long_sub_mod(i128 %0, i128 %1, [256 x i128]* %uniform_array18, [256 x i128]* %call148, [256 x i128]* %3)
  br label %loop.body151

loop.body151:                                     ; preds = %loop.latch203, %loop.exit128
  %i.5 = phi i128 [ 0, %loop.exit128 ], [ %add205, %loop.latch203 ]
  %array_getter154 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  %a155 = load i128, i128* %array_getter154, align 4
  %b158 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array16, i128 0, i128 %i.5
  store i128 %a155, i128* %b158, align 4
  %slt163 = icmp slt i128 %i.5, %ka.1
  br i1 %slt163, label %if.true159, label %if.false160

if.true159:                                       ; preds = %loop.body151
  %array_getter166 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call94, i128 0, i128 1, i128 %i.5
  %r167 = load i128, i128* %array_getter166, align 4
  %a170 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 %r167, i128* %a170, align 4
  br label %if.exit174

if.false160:                                      ; preds = %loop.body151
  %a173 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.5
  store i128 0, i128* %a173, align 4
  br label %if.exit174

if.exit174:                                       ; preds = %if.false160, %if.true159
  %array_getter177 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 %i.5
  %u178 = load i128, i128* %array_getter177, align 4
  %x181 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array17, i128 0, i128 %i.5
  store i128 %u178, i128* %x181, align 4
  %array_getter184 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array20, i128 0, i128 %i.5
  %v185 = load i128, i128* %array_getter184, align 4
  %y188 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array18, i128 0, i128 %i.5
  store i128 %v185, i128* %y188, align 4
  %array_getter191 = getelementptr inbounds [256 x i128], [256 x i128]* %call139, i128 0, i128 %i.5
  %newu192 = load i128, i128* %array_getter191, align 4
  %u195 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array19, i128 0, i128 %i.5
  store i128 %newu192, i128* %u195, align 4
  %array_getter198 = getelementptr inbounds [256 x i128], [256 x i128]* %call150, i128 0, i128 %i.5
  %newv199 = load i128, i128* %array_getter198, align 4
  %v202 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array20, i128 0, i128 %i.5
  store i128 %newv199, i128* %v202, align 4
  br label %loop.latch203

loop.latch203:                                    ; preds = %if.exit174
  %add205 = add i128 %i.5, 1
  %slt208 = icmp slt i128 %add205, %1
  br i1 %slt208, label %loop.body151, label %loop.exit209

loop.exit209:                                     ; preds = %loop.latch203
  br label %loop.latch210

loop.latch210:                                    ; preds = %loop.exit209
  %add212 = add i128 %l.0, 1
  %slt214 = icmp slt i128 %add212, 1000
  br i1 %slt214, label %loop.body53, label %loop.exit215

loop.exit215:                                     ; preds = %loop.latch210
  ret [256 x i128]* %uniform_array21
}

define [256 x [256 x i128]]* @find_Fp2_inverse(i128 %0, i128 %1, [256 x [256 x i128]]* %2, [256 x i128]* %3) {
entry:
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a12 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a12, [256 x i128]* %spice_inline_array, align 4
  %array_getter14 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a15 = load [256 x i128], [256 x i128]* %array_getter14, align 4
  %spice_inline_array16 = alloca [256 x i128], align 8
  store [256 x i128] %a15, [256 x i128]* %spice_inline_array16, align 4
  %call = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array16)
  %array_getter20 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a21 = load [256 x i128], [256 x i128]* %array_getter20, align 4
  %spice_inline_array22 = alloca [256 x i128], align 8
  store [256 x i128] %a21, [256 x i128]* %spice_inline_array22, align 4
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a25 = load [256 x i128], [256 x i128]* %array_getter24, align 4
  %spice_inline_array26 = alloca [256 x i128], align 8
  store [256 x i128] %a25, [256 x i128]* %spice_inline_array26, align 4
  %call27 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %spice_inline_array22, [256 x i128]* %spice_inline_array26)
  %mul = mul i128 2, %1
  %call32 = call [256 x i128]* @long_add(i128 %0, i128 %mul, [256 x i128]* %call, [256 x i128]* %call27)
  %add = add i128 %1, 1
  %call37 = call [256 x [256 x i128]]* @long_div2(i128 %0, i128 %1, i128 %add, [256 x i128]* %call32, [256 x i128]* %3)
  %array_getter41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call37, i128 0, i128 1
  %sq_sum_div42 = load [256 x i128], [256 x i128]* %array_getter41, align 4
  %spice_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] %sq_sum_div42, [256 x i128]* %spice_inline_array43, align 4
  %call45 = call [256 x i128]* @mod_inv(i128 %0, i128 %1, [256 x i128]* %spice_inline_array43, [256 x i128]* %3)
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 0
  %a51 = load [256 x i128], [256 x i128]* %array_getter50, align 4
  %spice_inline_array52 = alloca [256 x i128], align 8
  store [256 x i128] %a51, [256 x i128]* %spice_inline_array52, align 4
  %call53 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %call45, [256 x i128]* %spice_inline_array52)
  %call58 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call53, [256 x i128]* %3)
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call58, i128 0, i128 1
  %out0_div61 = load [256 x i128], [256 x i128]* %array_getter60, align 4
  %spice_inline_array62 = alloca [256 x i128], align 8
  store [256 x i128] %out0_div61, [256 x i128]* %spice_inline_array62, align 4
  %out63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0
  %4 = bitcast [256 x i128]* %out63 to i8*
  %5 = bitcast [256 x i128]* %spice_inline_array62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter68 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %2, i128 0, i128 1
  %a69 = load [256 x i128], [256 x i128]* %array_getter68, align 4
  %spice_inline_array70 = alloca [256 x i128], align 8
  store [256 x i128] %a69, [256 x i128]* %spice_inline_array70, align 4
  %call71 = call [256 x i128]* @long_sub(i128 %0, i128 %1, [256 x i128]* %3, [256 x i128]* %spice_inline_array70)
  %call76 = call [256 x i128]* @prod(i128 %0, i128 %1, [256 x i128]* %call45, [256 x i128]* %call71)
  %call81 = call [256 x [256 x i128]]* @long_div(i128 %0, i128 %1, [256 x i128]* %call76, [256 x i128]* %3)
  %array_getter83 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call81, i128 0, i128 1
  %out1_div84 = load [256 x i128], [256 x i128]* %array_getter83, align 4
  %spice_inline_array85 = alloca [256 x i128], align 8
  store [256 x i128] %out1_div84, [256 x i128]* %spice_inline_array85, align 4
  %out87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1
  %6 = bitcast [256 x i128]* %out87 to i8*
  %7 = bitcast [256 x i128]* %spice_inline_array85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x i128]]* %uniform_array
}

define void @fn_template_init_fpnegate(%struct_template_circuit_fpnegate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 0
  %fpnegate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 1
  %fpnegate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 2
  %fpnegate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 3
  %fpnegate.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %idx4 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %call = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %fpnegate.n.read_arg_inner, i128 %fpnegate.k.read_arg_inner)
  %call6 = call %struct_template_circuit_bigiszero* @fn_template_build_bigiszero(i128 %fpnegate.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.p.read_arg_inner, i128 0, i128 %idx.0
  %p8 = load i128, i128* %array_getter, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %idx.0
  %neg13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %neg13, i128 %p8, i1* @constraint.305)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %neg17 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter15, i128 0, i128 %idx.0
  store i128 %p8, i128* %neg17, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_inner, i128 0, i128 %idx.0
  %in20 = load i128, i128* %array_getter19, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %idx.0
  %neg25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %neg25, i128 %in20, i1* @constraint.306)
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %neg30 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter28, i128 0, i128 %idx.0
  store i128 %in20, i128* %neg30, align 4
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_inner, i128 0, i128 %idx.0
  %in34 = load i128, i128* %array_getter33, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call6, i32 0, i32 1
  %bigiszero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter, i128 0, i128 %idx.0
  %is_zero39 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_add_constraint(i128 %is_zero39, i128 %in34, i1* @constraint.307)
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call6, i32 0, i32 1
  %bigiszero.in.read_input_outter42 = load [256 x i128]*, [256 x i128]** %struct_getter41, align 8
  %is_zero44 = getelementptr inbounds [256 x i128], [256 x i128]* %bigiszero.in.read_input_outter42, i128 0, i128 %idx.0
  store i128 %in34, i128* %is_zero44, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fpnegate.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 5
  %bigsub.underflow.read_output_outter = load i128, i128* %struct_getter49, align 4
  call void @fn_intrinsic_add_constraint(i128 %bigsub.underflow.read_output_outter, i128 0, i1* @constraint.308)
  br label %loop.body50

loop.body50:                                      ; preds = %loop.latch65, %loop.exit
  %idx.1 = phi i128 [ 0, %loop.exit ], [ %add67, %loop.latch65 ]
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_bigiszero, %struct_template_circuit_bigiszero* %call6, i32 0, i32 2
  %bigiszero.out.read_output_outter = load i128, i128* %struct_getter52, align 4
  %sub = sub i128 1, %bigiszero.out.read_output_outter
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter56 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %idx.1
  %neg57 = load i128, i128* %array_getter56, align 4
  %mul = mul i128 %sub, %neg57
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %idx.1
  %out61 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_add_constraint(i128 %out61, i128 %mul, i1* @constraint.309)
  %out64 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %idx.1
  store i128 %mul, i128* %out64, align 4
  br label %loop.latch65

loop.latch65:                                     ; preds = %loop.body50
  %add67 = add i128 %idx.1, 1
  %slt70 = icmp slt i128 %add67, %fpnegate.k.read_arg_inner
  br i1 %slt70, label %loop.body50, label %loop.exit71

loop.exit71:                                      ; preds = %loop.latch65
  br label %exit

exit:                                             ; preds = %loop.exit71
  %fpnegate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %0, i32 0, i32 4
  store [256 x i128]* %out, [256 x i128]** %fpnegate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpnegate = alloca %struct_template_circuit_fpnegate, align 8
  %fpnegate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate, i32 0, i32 0
  store i128 %0, i128* %fpnegate.n.write_arg_inner, align 4
  %fpnegate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate, i32 0, i32 1
  store i128 %1, i128* %fpnegate.k.write_arg_inner, align 4
  %fpnegate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpnegate.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpnegate* %struct_template_circuit_fpnegate
}

define void @fn_template_init_fpadd(%struct_template_circuit_fpadd* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 0
  %fpadd.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 1
  %fpadd.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 2
  %fpadd.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 3
  %fpadd.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 4
  %fpadd.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i5 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %fpadd.n.read_arg_inner, i128 %fpadd.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add31, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_inner, i128 0, i128 %i.0
  %a7 = load i128, i128* %array_getter, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.0
  %add12 = load i128, i128* %array_getter11, align 4
  call void @fn_intrinsic_add_constraint(i128 %add12, i128 %a7, i1* @constraint.310)
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 2
  %bigadd.a.read_input_outter14 = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %add16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter14, i128 0, i128 %i.0
  store i128 %a7, i128* %add16, align 4
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_inner, i128 0, i128 %i.0
  %b19 = load i128, i128* %array_getter18, align 4
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.0
  %add24 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %add24, i128 %b19, i1* @constraint.311)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 3
  %bigadd.b.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %add29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter27, i128 0, i128 %i.0
  store i128 %b19, i128* %add29, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add31 = add i128 %i.0, 1
  %slt = icmp slt i128 %add31, %fpadd.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add36 = add i128 %fpadd.k.read_arg_inner, 1
  %call37 = call %struct_template_circuit_biglessthan* @fn_template_build_biglessthan(i128 %fpadd.n.read_arg_inner, i128 %add36)
  br label %loop.body38

loop.body38:                                      ; preds = %loop.latch67, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add69, %loop.latch67 ]
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.1
  %add43 = load i128, i128* %array_getter42, align 4
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter45, align 8
  %array_getter47 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter, i128 0, i128 %i.1
  %lt48 = load i128, i128* %array_getter47, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt48, i128 %add43, i1* @constraint.312)
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter51 = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %lt53 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter51, i128 0, i128 %i.1
  store i128 %add43, i128* %lt53, align 4
  %array_getter55 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.p.read_arg_inner, i128 0, i128 %i.1
  %p56 = load i128, i128* %array_getter55, align 4
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter, i128 0, i128 %i.1
  %lt61 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt61, i128 %p56, i1* @constraint.313)
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter64 = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %lt66 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter64, i128 0, i128 %i.1
  store i128 %p56, i128* %lt66, align 4
  br label %loop.latch67

loop.latch67:                                     ; preds = %loop.body38
  %add69 = add i128 %i.1, 1
  %slt72 = icmp slt i128 %add69, %fpadd.k.read_arg_inner
  br i1 %slt72, label %loop.body38, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch67
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter76 = load [256 x i128]*, [256 x i128]** %struct_getter75, align 8
  %array_getter78 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter76, i128 0, i128 %fpadd.k.read_arg_inner
  %add79 = load i128, i128* %array_getter78, align 4
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter82 = load [256 x i128]*, [256 x i128]** %struct_getter81, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter82, i128 0, i128 %fpadd.k.read_arg_inner
  %lt85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt85, i128 %add79, i1* @constraint.314)
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 2
  %biglessthan.a.read_input_outter88 = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %lt90 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.a.read_input_outter88, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 %add79, i128* %lt90, align 4
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter93 = load [256 x i128]*, [256 x i128]** %struct_getter92, align 8
  %array_getter95 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter93, i128 0, i128 %fpadd.k.read_arg_inner
  %lt96 = load i128, i128* %array_getter95, align 4
  call void @fn_intrinsic_add_constraint(i128 %lt96, i128 0, i1* @constraint.315)
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 3
  %biglessthan.b.read_input_outter99 = load [256 x i128]*, [256 x i128]** %struct_getter98, align 8
  %lt101 = getelementptr inbounds [256 x i128], [256 x i128]* %biglessthan.b.read_input_outter99, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 0, i128* %lt101, align 4
  %add104 = add i128 %fpadd.k.read_arg_inner, 1
  %call105 = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %fpadd.n.read_arg_inner, i128 %add104)
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch144, %loop.exit73
  %i.2 = phi i128 [ 0, %loop.exit73 ], [ %add146, %loop.latch144 ]
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter109 = load [256 x i128]*, [256 x i128]** %struct_getter108, align 8
  %array_getter111 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter109, i128 0, i128 %i.2
  %add112 = load i128, i128* %array_getter111, align 4
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter114, align 8
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.2
  %sub117 = load i128, i128* %array_getter116, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub117, i128 %add112, i1* @constraint.316)
  %struct_getter119 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter120 = load [256 x i128]*, [256 x i128]** %struct_getter119, align 8
  %sub122 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter120, i128 0, i128 %i.2
  store i128 %add112, i128* %sub122, align 4
  %array_getter125 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.p.read_arg_inner, i128 0, i128 %i.2
  %p126 = load i128, i128* %array_getter125, align 4
  %struct_getter128 = getelementptr inbounds %struct_template_circuit_biglessthan, %struct_template_circuit_biglessthan* %call37, i32 0, i32 4
  %biglessthan.out.read_output_outter = load i128, i128* %struct_getter128, align 4
  %array_getter131 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.p.read_arg_inner, i128 0, i128 %i.2
  %p132 = load i128, i128* %array_getter131, align 4
  %mul = mul i128 %biglessthan.out.read_output_outter, %p132
  %sub133 = sub i128 %p126, %mul
  %struct_getter135 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter135, align 8
  %array_getter137 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.2
  %sub138 = load i128, i128* %array_getter137, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub138, i128 %sub133, i1* @constraint.317)
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter141 = load [256 x i128]*, [256 x i128]** %struct_getter140, align 8
  %sub143 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter141, i128 0, i128 %i.2
  store i128 %sub133, i128* %sub143, align 4
  br label %loop.latch144

loop.latch144:                                    ; preds = %loop.body106
  %add146 = add i128 %i.2, 1
  %slt149 = icmp slt i128 %add146, %fpadd.k.read_arg_inner
  br i1 %slt149, label %loop.body106, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch144
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call, i32 0, i32 4
  %bigadd.out.read_output_outter153 = load [256 x i128]*, [256 x i128]** %struct_getter152, align 8
  %array_getter155 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter153, i128 0, i128 %fpadd.k.read_arg_inner
  %add156 = load i128, i128* %array_getter155, align 4
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter159 = load [256 x i128]*, [256 x i128]** %struct_getter158, align 8
  %array_getter161 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter159, i128 0, i128 %fpadd.k.read_arg_inner
  %sub162 = load i128, i128* %array_getter161, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub162, i128 %add156, i1* @constraint.318)
  %struct_getter164 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 2
  %bigsub.a.read_input_outter165 = load [256 x i128]*, [256 x i128]** %struct_getter164, align 8
  %sub167 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter165, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 %add156, i128* %sub167, align 4
  %struct_getter169 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter170 = load [256 x i128]*, [256 x i128]** %struct_getter169, align 8
  %array_getter172 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter170, i128 0, i128 %fpadd.k.read_arg_inner
  %sub173 = load i128, i128* %array_getter172, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub173, i128 0, i1* @constraint.319)
  %struct_getter175 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 3
  %bigsub.b.read_input_outter176 = load [256 x i128]*, [256 x i128]** %struct_getter175, align 8
  %sub178 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter176, i128 0, i128 %fpadd.k.read_arg_inner
  store i128 0, i128* %sub178, align 4
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter180, align 8
  %array_getter182 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %fpadd.k.read_arg_inner
  %sub183 = load i128, i128* %array_getter182, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub183, i128 0, i1* @constraint.320)
  br label %loop.body184

loop.body184:                                     ; preds = %loop.latch198, %loop.exit150
  %i.3 = phi i128 [ 0, %loop.exit150 ], [ %add200, %loop.latch198 ]
  %struct_getter186 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call105, i32 0, i32 4
  %bigsub.out.read_output_outter187 = load [256 x i128]*, [256 x i128]** %struct_getter186, align 8
  %array_getter189 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter187, i128 0, i128 %i.3
  %sub190 = load i128, i128* %array_getter189, align 4
  %array_getter193 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  %out194 = load i128, i128* %array_getter193, align 4
  call void @fn_intrinsic_add_constraint(i128 %out194, i128 %sub190, i1* @constraint.321)
  %out197 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  store i128 %sub190, i128* %out197, align 4
  br label %loop.latch198

loop.latch198:                                    ; preds = %loop.body184
  %add200 = add i128 %i.3, 1
  %slt203 = icmp slt i128 %add200, %fpadd.k.read_arg_inner
  br i1 %slt203, label %loop.body184, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch198
  br label %exit

exit:                                             ; preds = %loop.exit204
  %fpadd.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %0, i32 0, i32 5
  store [256 x i128]* %out, [256 x i128]** %fpadd.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpadd* @fn_template_build_fpadd(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpadd = alloca %struct_template_circuit_fpadd, align 8
  %fpadd.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %struct_template_circuit_fpadd, i32 0, i32 0
  store i128 %0, i128* %fpadd.n.write_arg_inner, align 4
  %fpadd.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %struct_template_circuit_fpadd, i32 0, i32 1
  store i128 %1, i128* %fpadd.k.write_arg_inner, align 4
  %fpadd.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %struct_template_circuit_fpadd, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpadd.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpadd* %struct_template_circuit_fpadd
}

define void @fn_template_init_fp2negate(%struct_template_circuit_fp2negate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 0
  %fp2negate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 1
  %fp2negate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 2
  %fp2negate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 3
  %fp2negate.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %j4 = call i128 @fn_intrinsic_inline_init()
  %neg5 = alloca [256 x %struct_template_circuit_fpnegate*], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i6 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch57, %entry
  %j.0 = phi i128 [ 0, %entry ], [ %add59, %loop.latch57 ]
  %call = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %fp2negate.n.read_arg_inner, i128 %fp2negate.k.read_arg_inner, [256 x i128]* %fp2negate.p.read_arg_inner)
  %neg8 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg5, i128 0, i128 %j.0
  store %struct_template_circuit_fpnegate* %call, %struct_template_circuit_fpnegate** %neg8, align 8
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch, %loop.body
  %i.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2negate.in.read_input_inner, i128 0, i128 %j.0, i128 %i.0
  %in12 = load i128, i128* %array_getter, align 4
  %array_getter15 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg5, i128 0, i128 %j.0
  %neg16 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter15, align 8
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg16, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %i.0
  %neg20 = load i128, i128* %array_getter19, align 4
  call void @fn_intrinsic_add_constraint(i128 %neg20, i128 %in12, i1* @constraint.322)
  %array_getter23 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg5, i128 0, i128 %j.0
  %neg24 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter23, align 8
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg24, i32 0, i32 3
  %fpnegate.in.read_input_outter26 = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %neg28 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter26, i128 0, i128 %i.0
  store i128 %in12, i128* %neg28, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body9
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2negate.k.read_arg_inner
  br i1 %slt, label %loop.body9, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch50, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add52, %loop.latch50 ]
  %array_getter35 = getelementptr inbounds [256 x %struct_template_circuit_fpnegate*], [256 x %struct_template_circuit_fpnegate*]* %neg5, i128 0, i128 %j.0
  %neg36 = load %struct_template_circuit_fpnegate*, %struct_template_circuit_fpnegate** %array_getter35, align 8
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %neg36, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter37, align 8
  %array_getter39 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %i.1
  %neg40 = load i128, i128* %array_getter39, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.0, i128 %i.1
  %out45 = load i128, i128* %array_getter44, align 4
  call void @fn_intrinsic_add_constraint(i128 %out45, i128 %neg40, i1* @constraint.323)
  %out49 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.0, i128 %i.1
  store i128 %neg40, i128* %out49, align 4
  br label %loop.latch50

loop.latch50:                                     ; preds = %loop.body32
  %add52 = add i128 %i.1, 1
  %slt55 = icmp slt i128 %add52, %fp2negate.k.read_arg_inner
  br i1 %slt55, label %loop.body32, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch50
  br label %loop.latch57

loop.latch57:                                     ; preds = %loop.exit56
  %add59 = add i128 %j.0, 1
  %slt61 = icmp slt i128 %add59, 2
  br i1 %slt61, label %loop.body, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch57
  br label %exit

exit:                                             ; preds = %loop.exit62
  %fp2negate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2negate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2negate* @fn_template_build_fp2negate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2negate = alloca %struct_template_circuit_fp2negate, align 8
  %fp2negate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate, i32 0, i32 0
  store i128 %0, i128* %fp2negate.n.write_arg_inner, align 4
  %fp2negate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate, i32 0, i32 1
  store i128 %1, i128* %fp2negate.k.write_arg_inner, align 4
  %fp2negate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2negate, %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2negate.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2negate* %struct_template_circuit_fp2negate
}

define void @fn_template_init_primereduce(%struct_template_circuit_primereduce* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 0
  %primereduce.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 1
  %primereduce.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 2
  %primereduce.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 3
  %primereduce.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 4
  %primereduce.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 5
  %primereduce.in.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter5, align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %j10 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array14 = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %two16 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %two16, align 4
  %e19 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array14, i128 0, i128 %i.0
  store i128 0, i128* %e19, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %primereduce.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %two23 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 0
  store i128 2, i128* %two23, align 4
  %e25 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array14, i128 0, i128 0
  store i128 %primereduce.n.read_arg_inner, i128* %e25, align 4
  %call = call [256 x i128]* @mod_exp(i128 %primereduce.n.read_arg_inner, i128 %primereduce.k.read_arg_inner, [256 x i128]* %uniform_array, [256 x i128]* %primereduce.p.read_arg_inner, [256 x i128]* %uniform_array14)
  %e32 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array14, i128 0, i128 0
  store i128 %primereduce.k.read_arg_inner, i128* %e32, align 4
  %call38 = call [256 x i128]* @mod_exp(i128 %primereduce.n.read_arg_inner, i128 %primereduce.k.read_arg_inner, [256 x i128]* %call, [256 x i128]* %primereduce.p.read_arg_inner, [256 x i128]* %uniform_array14)
  %uniform_array39 = alloca [256 x [256 x i128]], align 8
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch57, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add59, %loop.latch57 ]
  %eq = icmp eq i128 %i.1, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body40
  %r45 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array39, i128 0, i128 %i.1
  %1 = bitcast [256 x i128]* %r45 to i8*
  %2 = bitcast [256 x i128]* %call38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.false:                                         ; preds = %loop.body40
  %sub = sub i128 %i.1, 1
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array39, i128 0, i128 %sub
  %r50 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %r50, [256 x i128]* %spice_inline_array, align 4
  %call53 = call [256 x i128]* @prod_mod(i128 %primereduce.n.read_arg_inner, i128 %primereduce.k.read_arg_inner, [256 x i128]* %spice_inline_array, [256 x i128]* %call, [256 x i128]* %primereduce.p.read_arg_inner)
  %r56 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array39, i128 0, i128 %i.1
  %3 = bitcast [256 x i128]* %r56 to i8*
  %4 = bitcast [256 x i128]* %call53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch57

loop.latch57:                                     ; preds = %if.exit
  %add59 = add i128 %i.1, 1
  %slt61 = icmp slt i128 %add59, %primereduce.m.read_arg_inner
  br i1 %slt61, label %loop.body40, label %loop.exit62

loop.exit62:                                      ; preds = %loop.latch57
  %uniform_array63 = alloca [256 x i128], align 8
  br label %loop.body64

loop.body64:                                      ; preds = %loop.latch71, %loop.exit62
  %i.2 = phi i128 [ 0, %loop.exit62 ], [ %add73, %loop.latch71 ]
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_inner, i128 0, i128 %i.2
  %in67 = load i128, i128* %array_getter66, align 4
  %out_sum70 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array63, i128 0, i128 %i.2
  store i128 %in67, i128* %out_sum70, align 4
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.body64
  %add73 = add i128 %i.2, 1
  %slt76 = icmp slt i128 %add73, %primereduce.k.read_arg_inner
  br i1 %slt76, label %loop.body64, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch71
  br label %loop.body78

loop.body78:                                      ; preds = %loop.latch106, %loop.exit77
  %i.3 = phi i128 [ 0, %loop.exit77 ], [ %add108, %loop.latch106 ]
  br label %loop.body79

loop.body79:                                      ; preds = %loop.latch99, %loop.body78
  %j.0 = phi i128 [ 0, %loop.body78 ], [ %add101, %loop.latch99 ]
  %array_getter82 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array63, i128 0, i128 %j.0
  %out_sum83 = load i128, i128* %array_getter82, align 4
  %add87 = add i128 %i.3, %primereduce.k.read_arg_inner
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_inner, i128 0, i128 %add87
  %in89 = load i128, i128* %array_getter88, align 4
  %array_getter93 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array39, i128 0, i128 %i.3, i128 %j.0
  %r94 = load i128, i128* %array_getter93, align 4
  %mul = mul i128 %in89, %r94
  %add95 = add i128 %out_sum83, %mul
  %out_sum98 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array63, i128 0, i128 %j.0
  store i128 %add95, i128* %out_sum98, align 4
  br label %loop.latch99

loop.latch99:                                     ; preds = %loop.body79
  %add101 = add i128 %j.0, 1
  %slt104 = icmp slt i128 %add101, %primereduce.k.read_arg_inner
  br i1 %slt104, label %loop.body79, label %loop.exit105

loop.exit105:                                     ; preds = %loop.latch99
  br label %loop.latch106

loop.latch106:                                    ; preds = %loop.exit105
  %add108 = add i128 %i.3, 1
  %slt111 = icmp slt i128 %add108, %primereduce.m.read_arg_inner
  br i1 %slt111, label %loop.body78, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch106
  br label %loop.body113

loop.body113:                                     ; preds = %loop.latch125, %loop.exit112
  %i.4 = phi i128 [ 0, %loop.exit112 ], [ %add127, %loop.latch125 ]
  %array_getter116 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array63, i128 0, i128 %i.4
  %out_sum117 = load i128, i128* %array_getter116, align 4
  %array_getter120 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.4
  %out121 = load i128, i128* %array_getter120, align 4
  call void @fn_intrinsic_add_constraint(i128 %out121, i128 %out_sum117, i1* @constraint.324)
  %out124 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.4
  store i128 %out_sum117, i128* %out124, align 4
  br label %loop.latch125

loop.latch125:                                    ; preds = %loop.body113
  %add127 = add i128 %i.4, 1
  %slt130 = icmp slt i128 %add127, %primereduce.k.read_arg_inner
  br i1 %slt130, label %loop.body113, label %loop.exit131

loop.exit131:                                     ; preds = %loop.latch125
  br label %exit

exit:                                             ; preds = %loop.exit131
  %primereduce.out.write_output_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %0, i32 0, i32 6
  store [256 x i128]* %out, [256 x i128]** %primereduce.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, i128 %4) {
entry:
  %struct_template_circuit_primereduce = alloca %struct_template_circuit_primereduce, align 8
  %primereduce.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 0
  store i128 %0, i128* %primereduce.n.write_arg_inner, align 4
  %primereduce.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 1
  store i128 %1, i128* %primereduce.k.write_arg_inner, align 4
  %primereduce.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 2
  store i128 %2, i128* %primereduce.m.write_arg_inner, align 4
  %primereduce.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %primereduce.p.write_arg_inner, align 8
  %primereduce.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %struct_template_circuit_primereduce, i32 0, i32 4
  store i128 %4, i128* %primereduce.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_primereduce* %struct_template_circuit_primereduce
}

define void @fn_template_init_fpsubtract(%struct_template_circuit_fpsubtract* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 0
  %fpsubtract.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 1
  %fpsubtract.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 2
  %fpsubtract.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 3
  %fpsubtract.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 4
  %fpsubtract.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %flag = call i128 @fn_intrinsic_inline_init()
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall6 to [256 x i128]*
  %call = call %struct_template_circuit_bigsub* @fn_template_build_bigsub(i128 %fpsubtract.n.read_arg_inner, i128 %fpsubtract.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add32, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_inner, i128 0, i128 %i.0
  %a8 = load i128, i128* %array_getter, align 4
  %struct_getter10 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter10, align 8
  %array_getter12 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter, i128 0, i128 %i.0
  %sub13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub13, i128 %a8, i1* @constraint.325)
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 2
  %bigsub.a.read_input_outter15 = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %sub17 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.a.read_input_outter15, i128 0, i128 %i.0
  store i128 %a8, i128* %sub17, align 4
  %array_getter19 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_inner, i128 0, i128 %i.0
  %b20 = load i128, i128* %array_getter19, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter, i128 0, i128 %i.0
  %sub25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub25, i128 %b20, i1* @constraint.326)
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 3
  %bigsub.b.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %sub30 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.b.read_input_outter28, i128 0, i128 %i.0
  store i128 %b20, i128* %sub30, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add32 = add i128 %i.0, 1
  %slt = icmp slt i128 %add32, %fpsubtract.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 5
  %bigsub.underflow.read_output_outter = load i128, i128* %struct_getter36, align 4
  call void @fn_intrinsic_add_constraint(i128 %flag, i128 %bigsub.underflow.read_output_outter, i1* @constraint.327)
  %fpsubtract.flag.write_inter_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 5
  store i128 %bigsub.underflow.read_output_outter, i128* %fpsubtract.flag.write_inter_inner, align 4
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 5
  %fpsubtract.flag.read_inter_inner = load i128, i128* %struct_getter40, align 4
  %call43 = call %struct_template_circuit_bigadd* @fn_template_build_bigadd(i128 %fpsubtract.n.read_arg_inner, i128 %fpsubtract.k.read_arg_inner)
  br label %loop.body44

loop.body44:                                      ; preds = %loop.latch73, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add75, %loop.latch73 ]
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter, i128 0, i128 %i.1
  %sub49 = load i128, i128* %array_getter48, align 4
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 2
  %bigadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter51, align 8
  %array_getter53 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter, i128 0, i128 %i.1
  %add54 = load i128, i128* %array_getter53, align 4
  call void @fn_intrinsic_add_constraint(i128 %add54, i128 %sub49, i1* @constraint.328)
  %struct_getter56 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 2
  %bigadd.a.read_input_outter57 = load [256 x i128]*, [256 x i128]** %struct_getter56, align 8
  %add59 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.a.read_input_outter57, i128 0, i128 %i.1
  store i128 %sub49, i128* %add59, align 4
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.p.read_arg_inner, i128 0, i128 %i.1
  %p62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 3
  %bigadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter, i128 0, i128 %i.1
  %add67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %add67, i128 %p62, i1* @constraint.329)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 3
  %bigadd.b.read_input_outter70 = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %add72 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.b.read_input_outter70, i128 0, i128 %i.1
  store i128 %p62, i128* %add72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.body44
  %add75 = add i128 %i.1, 1
  %slt78 = icmp slt i128 %add75, %fpsubtract.k.read_arg_inner
  br i1 %slt78, label %loop.body44, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch115, %loop.exit79
  %i.2 = phi i128 [ 0, %loop.exit79 ], [ %add117, %loop.latch115 ]
  %sub82 = sub i128 1, %fpsubtract.flag.read_inter_inner
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_bigsub, %struct_template_circuit_bigsub* %call, i32 0, i32 4
  %bigsub.out.read_output_outter85 = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %array_getter87 = getelementptr inbounds [256 x i128], [256 x i128]* %bigsub.out.read_output_outter85, i128 0, i128 %i.2
  %sub88 = load i128, i128* %array_getter87, align 4
  %mul = mul i128 %sub82, %sub88
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp, i128 0, i128 %i.2
  %tmp92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp92, i128 %mul, i1* @constraint.330)
  %tmp95 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp, i128 0, i128 %i.2
  store i128 %mul, i128* %tmp95, align 4
  %array_getter98 = getelementptr inbounds [256 x i128], [256 x i128]* %tmp, i128 0, i128 %i.2
  %tmp99 = load i128, i128* %array_getter98, align 4
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_bigadd, %struct_template_circuit_bigadd* %call43, i32 0, i32 4
  %bigadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter102, align 8
  %array_getter104 = getelementptr inbounds [256 x i128], [256 x i128]* %bigadd.out.read_output_outter, i128 0, i128 %i.2
  %add105 = load i128, i128* %array_getter104, align 4
  %mul106 = mul i128 %fpsubtract.flag.read_inter_inner, %add105
  %add107 = add i128 %tmp99, %mul106
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  %out111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_add_constraint(i128 %out111, i128 %add107, i1* @constraint.331)
  %out114 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.2
  store i128 %add107, i128* %out114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body80
  %add117 = add i128 %i.2, 1
  %slt120 = icmp slt i128 %add117, %fpsubtract.k.read_arg_inner
  br i1 %slt120, label %loop.body80, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch115
  br label %exit

exit:                                             ; preds = %loop.exit121
  %fpsubtract.flag.write_inter_inner123 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 5
  store i128 %fpsubtract.flag.read_inter_inner, i128* %fpsubtract.flag.write_inter_inner123, align 4
  %fpsubtract.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 6
  store [256 x i128]* %tmp, [256 x i128]** %fpsubtract.tmp.write_inter_inner, align 8
  %fpsubtract.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %0, i32 0, i32 7
  store [256 x i128]* %out, [256 x i128]** %fpsubtract.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpsubtract* @fn_template_build_fpsubtract(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpsubtract = alloca %struct_template_circuit_fpsubtract, align 8
  %fpsubtract.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract, i32 0, i32 0
  store i128 %0, i128* %fpsubtract.n.write_arg_inner, align 4
  %fpsubtract.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract, i32 0, i32 1
  store i128 %1, i128* %fpsubtract.k.write_arg_inner, align 4
  %fpsubtract.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpsubtract.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpsubtract* %struct_template_circuit_fpsubtract
}

define void @fn_template_init_bigmultmodp(%struct_template_circuit_bigmultmodp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 0
  %bigmultmodp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 1
  %bigmultmodp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 2
  %bigmultmodp.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 3
  %bigmultmodp.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 4
  %bigmultmodp.p.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i5 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_bigmult* @fn_template_build_bigmult(i128 %bigmultmodp.n.read_arg_inner, i128 %bigmultmodp.k.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultmodp.a.read_input_inner, i128 0, i128 %i.0
  %a7 = load i128, i128* %array_getter, align 4
  %struct_getter9 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 2
  %bigmult.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter9, align 8
  %array_getter11 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter, i128 0, i128 %i.0
  %big_mult12 = load i128, i128* %array_getter11, align 4
  call void @fn_intrinsic_add_constraint(i128 %big_mult12, i128 %a7, i1* @constraint.332)
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 2
  %bigmult.a.read_input_outter14 = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %big_mult16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.a.read_input_outter14, i128 0, i128 %i.0
  store i128 %a7, i128* %big_mult16, align 4
  %array_getter18 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultmodp.b.read_input_inner, i128 0, i128 %i.0
  %b19 = load i128, i128* %array_getter18, align 4
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 3
  %bigmult.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter21, align 8
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter, i128 0, i128 %i.0
  %big_mult24 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %big_mult24, i128 %b19, i1* @constraint.333)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 3
  %bigmult.b.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %big_mult29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.b.read_input_outter27, i128 0, i128 %i.0
  store i128 %b19, i128* %big_mult29, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %bigmultmodp.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call35 = call %struct_template_circuit_bigmod* @fn_template_build_bigmod(i128 %bigmultmodp.n.read_arg_inner, i128 %bigmultmodp.k.read_arg_inner)
  br label %loop.body36

loop.body36:                                      ; preds = %loop.latch52, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add54, %loop.latch52 ]
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_bigmult, %struct_template_circuit_bigmult* %call, i32 0, i32 4
  %bigmult.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmult.out.read_output_outter, i128 0, i128 %i.1
  %big_mult41 = load i128, i128* %array_getter40, align 4
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call35, i32 0, i32 2
  %bigmod.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter43, align 8
  %array_getter45 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter, i128 0, i128 %i.1
  %big_mod46 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_add_constraint(i128 %big_mod46, i128 %big_mult41, i1* @constraint.334)
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call35, i32 0, i32 2
  %bigmod.a.read_input_outter49 = load [256 x i128]*, [256 x i128]** %struct_getter48, align 8
  %big_mod51 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.a.read_input_outter49, i128 0, i128 %i.1
  store i128 %big_mult41, i128* %big_mod51, align 4
  br label %loop.latch52

loop.latch52:                                     ; preds = %loop.body36
  %add54 = add i128 %i.1, 1
  %mul = mul i128 2, %bigmultmodp.k.read_arg_inner
  %slt57 = icmp slt i128 %add54, %mul
  br i1 %slt57, label %loop.body36, label %loop.exit58

loop.exit58:                                      ; preds = %loop.latch52
  br label %loop.body59

loop.body59:                                      ; preds = %loop.latch73, %loop.exit58
  %i.2 = phi i128 [ 0, %loop.exit58 ], [ %add75, %loop.latch73 ]
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultmodp.p.read_input_inner, i128 0, i128 %i.2
  %p62 = load i128, i128* %array_getter61, align 4
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call35, i32 0, i32 3
  %bigmod.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter, i128 0, i128 %i.2
  %big_mod67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %big_mod67, i128 %p62, i1* @constraint.335)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call35, i32 0, i32 3
  %bigmod.b.read_input_outter70 = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %big_mod72 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.b.read_input_outter70, i128 0, i128 %i.2
  store i128 %p62, i128* %big_mod72, align 4
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.body59
  %add75 = add i128 %i.2, 1
  %slt78 = icmp slt i128 %add75, %bigmultmodp.k.read_arg_inner
  br i1 %slt78, label %loop.body59, label %loop.exit79

loop.exit79:                                      ; preds = %loop.latch73
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch93, %loop.exit79
  %i.3 = phi i128 [ 0, %loop.exit79 ], [ %add95, %loop.latch93 ]
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_bigmod, %struct_template_circuit_bigmod* %call35, i32 0, i32 5
  %bigmod.mod.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter82, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmod.mod.read_output_outter, i128 0, i128 %i.3
  %big_mod85 = load i128, i128* %array_getter84, align 4
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  %out89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_add_constraint(i128 %out89, i128 %big_mod85, i1* @constraint.336)
  %out92 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  store i128 %big_mod85, i128* %out92, align 4
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.body80
  %add95 = add i128 %i.3, 1
  %slt98 = icmp slt i128 %add95, %bigmultmodp.k.read_arg_inner
  br i1 %slt98, label %loop.body80, label %loop.exit99

loop.exit99:                                      ; preds = %loop.latch93
  br label %exit

exit:                                             ; preds = %loop.exit99
  %bigmultmodp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %0, i32 0, i32 5
  store [256 x i128]* %out, [256 x i128]** %bigmultmodp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_bigmultmodp* @fn_template_build_bigmultmodp(i128 %0, i128 %1) {
entry:
  %struct_template_circuit_bigmultmodp = alloca %struct_template_circuit_bigmultmodp, align 8
  %bigmultmodp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %struct_template_circuit_bigmultmodp, i32 0, i32 0
  store i128 %0, i128* %bigmultmodp.n.write_arg_inner, align 4
  %bigmultmodp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_bigmultmodp, %struct_template_circuit_bigmultmodp* %struct_template_circuit_bigmultmodp, i32 0, i32 1
  store i128 %1, i128* %bigmultmodp.k.write_arg_inner, align 4
  ret %struct_template_circuit_bigmultmodp* %struct_template_circuit_bigmultmodp
}

define void @fn_template_init_fp2conjugate(%struct_template_circuit_fp2conjugate* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 0
  %fp2conjugate.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 1
  %fp2conjugate.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 2
  %fp2conjugate.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 3
  %fp2conjugate.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i4 = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %fp2conjugate.n.read_arg_inner, i128 %fp2conjugate.k.read_arg_inner, [256 x i128]* %fp2conjugate.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2conjugate.in.read_input_inner, i128 0, i128 1, i128 %i.0
  %in6 = load i128, i128* %array_getter, align 4
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter8, align 8
  %array_getter10 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %i.0
  %neg111 = load i128, i128* %array_getter10, align 4
  call void @fn_intrinsic_add_constraint(i128 %neg111, i128 %in6, i1* @constraint.337)
  %struct_getter12 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter13 = load [256 x i128]*, [256 x i128]** %struct_getter12, align 8
  %neg115 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter13, i128 0, i128 %i.0
  store i128 %in6, i128* %neg115, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2conjugate.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body19

loop.body19:                                      ; preds = %loop.latch43, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add45, %loop.latch43 ]
  %array_getter22 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2conjugate.in.read_input_inner, i128 0, i128 0, i128 %i.1
  %in23 = load i128, i128* %array_getter22, align 4
  %array_getter26 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.1
  %out27 = load i128, i128* %array_getter26, align 4
  call void @fn_intrinsic_add_constraint(i128 %out27, i128 %in23, i1* @constraint.338)
  %out30 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.1
  store i128 %in23, i128* %out30, align 4
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter32, align 8
  %array_getter34 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %i.1
  %neg135 = load i128, i128* %array_getter34, align 4
  %array_getter38 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.1
  %out39 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_add_constraint(i128 %out39, i128 %neg135, i1* @constraint.339)
  %out42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.1
  store i128 %neg135, i128* %out42, align 4
  br label %loop.latch43

loop.latch43:                                     ; preds = %loop.body19
  %add45 = add i128 %i.1, 1
  %slt48 = icmp slt i128 %add45, %fp2conjugate.k.read_arg_inner
  br i1 %slt48, label %loop.body19, label %loop.exit49

loop.exit49:                                      ; preds = %loop.latch43
  br label %exit

exit:                                             ; preds = %loop.exit49
  %fp2conjugate.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2conjugate.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2conjugate* @fn_template_build_fp2conjugate(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2conjugate = alloca %struct_template_circuit_fp2conjugate, align 8
  %fp2conjugate.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate, i32 0, i32 0
  store i128 %0, i128* %fp2conjugate.n.write_arg_inner, align 4
  %fp2conjugate.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate, i32 0, i32 1
  store i128 %1, i128* %fp2conjugate.k.write_arg_inner, align 4
  %fp2conjugate.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2conjugate, %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2conjugate.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2conjugate* %struct_template_circuit_fp2conjugate
}

define void @fn_template_init_fp2add(%struct_template_circuit_fp2add* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 0
  %fp2add.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 1
  %fp2add.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 2
  %fp2add.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 3
  %fp2add.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 4
  %fp2add.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %adders5 = alloca [256 x %struct_template_circuit_fpadd*], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i6 = call i128 @fn_intrinsic_inline_init()
  %j7 = call i128 @fn_intrinsic_inline_init()
  br label %loop.body

loop.body:                                        ; preds = %loop.latch78, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add80, %loop.latch78 ]
  %call = call %struct_template_circuit_fpadd* @fn_template_build_fpadd(i128 %fp2add.n.read_arg_inner, i128 %fp2add.k.read_arg_inner, [256 x i128]* %fp2add.p.read_arg_inner)
  %adders9 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders5, i128 0, i128 %i.0
  store %struct_template_circuit_fpadd* %call, %struct_template_circuit_fpadd** %adders9, align 8
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2add.a.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %a13 = load i128, i128* %array_getter, align 4
  %array_getter16 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders5, i128 0, i128 %i.0
  %adders17 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter16, align 8
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders17, i32 0, i32 3
  %fpadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %array_getter20 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter, i128 0, i128 %j.0
  %adders21 = load i128, i128* %array_getter20, align 4
  call void @fn_intrinsic_add_constraint(i128 %adders21, i128 %a13, i1* @constraint.340)
  %array_getter24 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders5, i128 0, i128 %i.0
  %adders25 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter24, align 8
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders25, i32 0, i32 3
  %fpadd.a.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %adders29 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter27, i128 0, i128 %j.0
  store i128 %a13, i128* %adders29, align 4
  %array_getter32 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2add.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %b33 = load i128, i128* %array_getter32, align 4
  %array_getter36 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders5, i128 0, i128 %i.0
  %adders37 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter36, align 8
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders37, i32 0, i32 4
  %fpadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter38, align 8
  %array_getter40 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter, i128 0, i128 %j.0
  %adders41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_add_constraint(i128 %adders41, i128 %b33, i1* @constraint.341)
  %array_getter44 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders5, i128 0, i128 %i.0
  %adders45 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders45, i32 0, i32 4
  %fpadd.b.read_input_outter47 = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %adders49 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter47, i128 0, i128 %j.0
  store i128 %b33, i128* %adders49, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body10
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp2add.k.read_arg_inner
  br i1 %slt, label %loop.body10, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body53

loop.body53:                                      ; preds = %loop.latch71, %loop.exit
  %j.1 = phi i128 [ 0, %loop.exit ], [ %add73, %loop.latch71 ]
  %array_getter56 = getelementptr inbounds [256 x %struct_template_circuit_fpadd*], [256 x %struct_template_circuit_fpadd*]* %adders5, i128 0, i128 %i.0
  %adders57 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter56, align 8
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders57, i32 0, i32 5
  %fpadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %array_getter60 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.out.read_output_outter, i128 0, i128 %j.1
  %adders61 = load i128, i128* %array_getter60, align 4
  %array_getter65 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.0, i128 %j.1
  %out66 = load i128, i128* %array_getter65, align 4
  call void @fn_intrinsic_add_constraint(i128 %out66, i128 %adders61, i1* @constraint.342)
  %out70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.0, i128 %j.1
  store i128 %adders61, i128* %out70, align 4
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.body53
  %add73 = add i128 %j.1, 1
  %slt76 = icmp slt i128 %add73, %fp2add.k.read_arg_inner
  br i1 %slt76, label %loop.body53, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch71
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.exit77
  %add80 = add i128 %i.0, 1
  %slt82 = icmp slt i128 %add80, 2
  br i1 %slt82, label %loop.body, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch78
  br label %exit

exit:                                             ; preds = %loop.exit83
  %fp2add.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2add.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2add* @fn_template_build_fp2add(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2add = alloca %struct_template_circuit_fp2add, align 8
  %fp2add.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %struct_template_circuit_fp2add, i32 0, i32 0
  store i128 %0, i128* %fp2add.n.write_arg_inner, align 4
  %fp2add.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %struct_template_circuit_fp2add, i32 0, i32 1
  store i128 %1, i128* %fp2add.k.write_arg_inner, align 4
  %fp2add.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2add, %struct_template_circuit_fp2add* %struct_template_circuit_fp2add, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2add.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2add* %struct_template_circuit_fp2add
}

define void @fn_template_init_pointoncurve(%struct_template_circuit_pointoncurve* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 0
  %pointoncurve.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 1
  %pointoncurve.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 2
  %pointoncurve.a.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 3
  %pointoncurve.b.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 4
  %pointoncurve.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %0, i32 0, i32 5
  %pointoncurve.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %LOGK27 = call i128 @fn_intrinsic_inline_init()
  %LOGK8 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %pointoncurve.k.read_arg_inner)
  %mul = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul12 = mul i128 %pointoncurve.k.read_arg_inner, %pointoncurve.k.read_arg_inner
  %add = add i128 %mul12, 1
  %mul13 = mul i128 %sub, %add
  %call14 = call i128 @log_ceil(i128 %mul13)
  %mul17 = mul i128 2, %pointoncurve.n.read_arg_inner
  %add19 = add i128 %mul17, %call
  %call20 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %add19)
  %mul24 = mul i128 2, %pointoncurve.n.read_arg_inner
  %add26 = add i128 %mul24, %call
  %call27 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %add26)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add84, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 0, i128 %i.0
  %in29 = load i128, i128* %array_getter, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call20, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %array_getter33 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %x_sq34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq34, i128 %in29, i1* @constraint.343)
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call20, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter36 = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %x_sq38 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter36, i128 0, i128 %i.0
  store i128 %in29, i128* %x_sq38, align 4
  %array_getter41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 0, i128 %i.0
  %in42 = load i128, i128* %array_getter41, align 4
  %struct_getter44 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call20, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter44, align 8
  %array_getter46 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %x_sq47 = load i128, i128* %array_getter46, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq47, i128 %in42, i1* @constraint.344)
  %struct_getter49 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call20, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter50 = load [256 x i128]*, [256 x i128]** %struct_getter49, align 8
  %x_sq52 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter50, i128 0, i128 %i.0
  store i128 %in42, i128* %x_sq52, align 4
  %array_getter55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 1, i128 %i.0
  %in56 = load i128, i128* %array_getter55, align 4
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call27, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter59 = load [256 x i128]*, [256 x i128]** %struct_getter58, align 8
  %array_getter61 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter59, i128 0, i128 %i.0
  %y_sq62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_sq62, i128 %in56, i1* @constraint.345)
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call27, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter65 = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %y_sq67 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter65, i128 0, i128 %i.0
  store i128 %in56, i128* %y_sq67, align 4
  %array_getter70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 1, i128 %i.0
  %in71 = load i128, i128* %array_getter70, align 4
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call27, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter74 = load [256 x i128]*, [256 x i128]** %struct_getter73, align 8
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter74, i128 0, i128 %i.0
  %y_sq77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_sq77, i128 %in71, i1* @constraint.346)
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call27, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %y_sq82 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter80, i128 0, i128 %i.0
  store i128 %in71, i128* %y_sq82, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add84 = add i128 %i.0, 1
  %slt = icmp slt i128 %add84, %pointoncurve.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul89 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub90 = sub i128 %mul89, 1
  %mul93 = mul i128 3, %pointoncurve.n.read_arg_inner
  %mul95 = mul i128 2, %call
  %add96 = add i128 %mul93, %mul95
  %call97 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %pointoncurve.n.read_arg_inner, i128 %sub90, i128 %pointoncurve.k.read_arg_inner, i128 %add96)
  br label %loop.body98

loop.body98:                                      ; preds = %loop.latch114, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add116, %loop.latch114 ]
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call20, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter100, align 8
  %array_getter102 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %x_sq103 = load i128, i128* %array_getter102, align 4
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter105, align 8
  %array_getter107 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.1
  %x_cu108 = load i128, i128* %array_getter107, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_cu108, i128 %x_sq103, i1* @constraint.347)
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter111 = load [256 x i128]*, [256 x i128]** %struct_getter110, align 8
  %x_cu113 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter111, i128 0, i128 %i.1
  store i128 %x_sq103, i128* %x_cu113, align 4
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.body98
  %add116 = add i128 %i.1, 1
  %mul119 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub120 = sub i128 %mul119, 1
  %slt121 = icmp slt i128 %add116, %sub120
  br i1 %slt121, label %loop.body98, label %loop.exit122

loop.exit122:                                     ; preds = %loop.latch114
  br label %loop.body123

loop.body123:                                     ; preds = %loop.latch138, %loop.exit122
  %i.2 = phi i128 [ 0, %loop.exit122 ], [ %add140, %loop.latch138 ]
  %array_getter126 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 0, i128 %i.2
  %in127 = load i128, i128* %array_getter126, align 4
  %struct_getter129 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter129, align 8
  %array_getter131 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.2
  %x_cu132 = load i128, i128* %array_getter131, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_cu132, i128 %in127, i1* @constraint.348)
  %struct_getter134 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter135 = load [256 x i128]*, [256 x i128]** %struct_getter134, align 8
  %x_cu137 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter135, i128 0, i128 %i.2
  store i128 %in127, i128* %x_cu137, align 4
  br label %loop.latch138

loop.latch138:                                    ; preds = %loop.body123
  %add140 = add i128 %i.2, 1
  %slt143 = icmp slt i128 %add140, %pointoncurve.k.read_arg_inner
  br i1 %slt143, label %loop.body123, label %loop.exit144

loop.exit144:                                     ; preds = %loop.latch138
  %mul148 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub149 = sub i128 %mul148, 2
  %mul151 = mul i128 4, %pointoncurve.n.read_arg_inner
  %mul153 = mul i128 3, %call
  %add154 = add i128 %mul151, %mul153
  %add155 = add i128 %add154, 1
  %call156 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %sub149, [256 x i128]* %pointoncurve.p.read_arg_inner, i128 %add155)
  br label %loop.body157

loop.body157:                                     ; preds = %loop.latch228, %loop.exit144
  %i.3 = phi i128 [ 0, %loop.exit144 ], [ %add230, %loop.latch228 ]
  %eq = icmp eq i128 %i.3, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body157
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter160, align 8
  %array_getter162 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.3
  %x_cu163 = load i128, i128* %array_getter162, align 4
  %array_getter166 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 0, i128 %i.3
  %in167 = load i128, i128* %array_getter166, align 4
  %mul168 = mul i128 %pointoncurve.a.read_arg_inner, %in167
  %add169 = add i128 %x_cu163, %mul168
  %add170 = add i128 %add169, %pointoncurve.b.read_arg_inner
  %struct_getter172 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter172, align 8
  %array_getter174 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.3
  %cu_red175 = load i128, i128* %array_getter174, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red175, i128 %add170, i1* @constraint.349)
  %struct_getter177 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 5
  %primereduce.in.read_input_outter178 = load [256 x i128]*, [256 x i128]** %struct_getter177, align 8
  %cu_red180 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter178, i128 0, i128 %i.3
  store i128 %add170, i128* %cu_red180, align 4
  br label %if.exit227

if.false:                                         ; preds = %loop.body157
  %slt185 = icmp slt i128 %i.3, %pointoncurve.k.read_arg_inner
  br i1 %slt185, label %if.true181, label %if.false182

if.true181:                                       ; preds = %if.false
  %struct_getter187 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter188 = load [256 x i128]*, [256 x i128]** %struct_getter187, align 8
  %array_getter190 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter188, i128 0, i128 %i.3
  %x_cu191 = load i128, i128* %array_getter190, align 4
  %array_getter195 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_inner, i128 0, i128 0, i128 %i.3
  %in196 = load i128, i128* %array_getter195, align 4
  %mul197 = mul i128 %pointoncurve.a.read_arg_inner, %in196
  %add198 = add i128 %x_cu191, %mul197
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 5
  %primereduce.in.read_input_outter201 = load [256 x i128]*, [256 x i128]** %struct_getter200, align 8
  %array_getter203 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter201, i128 0, i128 %i.3
  %cu_red204 = load i128, i128* %array_getter203, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red204, i128 %add198, i1* @constraint.350)
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 5
  %primereduce.in.read_input_outter207 = load [256 x i128]*, [256 x i128]** %struct_getter206, align 8
  %cu_red209 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter207, i128 0, i128 %i.3
  store i128 %add198, i128* %cu_red209, align 4
  br label %if.exit

if.false182:                                      ; preds = %if.false
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call97, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter212 = load [256 x i128]*, [256 x i128]** %struct_getter211, align 8
  %array_getter214 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter212, i128 0, i128 %i.3
  %x_cu215 = load i128, i128* %array_getter214, align 4
  %struct_getter217 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 5
  %primereduce.in.read_input_outter218 = load [256 x i128]*, [256 x i128]** %struct_getter217, align 8
  %array_getter220 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter218, i128 0, i128 %i.3
  %cu_red221 = load i128, i128* %array_getter220, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red221, i128 %x_cu215, i1* @constraint.351)
  %struct_getter223 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 5
  %primereduce.in.read_input_outter224 = load [256 x i128]*, [256 x i128]** %struct_getter223, align 8
  %cu_red226 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter224, i128 0, i128 %i.3
  store i128 %x_cu215, i128* %cu_red226, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false182, %if.true181
  br label %if.exit227

if.exit227:                                       ; preds = %if.exit, %if.true
  br label %loop.latch228

loop.latch228:                                    ; preds = %if.exit227
  %add230 = add i128 %i.3, 1
  %mul233 = mul i128 3, %pointoncurve.k.read_arg_inner
  %sub234 = sub i128 %mul233, 2
  %slt235 = icmp slt i128 %add230, %sub234
  br i1 %slt235, label %loop.body157, label %loop.exit236

loop.exit236:                                     ; preds = %loop.latch228
  %sub240 = sub i128 %pointoncurve.k.read_arg_inner, 1
  %mul243 = mul i128 3, %pointoncurve.n.read_arg_inner
  %mul245 = mul i128 2, %call
  %add246 = add i128 %mul243, %mul245
  %add247 = add i128 %add246, 1
  %call248 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %sub240, [256 x i128]* %pointoncurve.p.read_arg_inner, i128 %add247)
  br label %loop.body249

loop.body249:                                     ; preds = %loop.latch267, %loop.exit236
  %i.4 = phi i128 [ 0, %loop.exit236 ], [ %add269, %loop.latch267 ]
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call27, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter252 = load [256 x i128]*, [256 x i128]** %struct_getter251, align 8
  %array_getter254 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter252, i128 0, i128 %i.4
  %y_sq255 = load i128, i128* %array_getter254, align 4
  %struct_getter257 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call248, i32 0, i32 5
  %primereduce.in.read_input_outter258 = load [256 x i128]*, [256 x i128]** %struct_getter257, align 8
  %array_getter260 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter258, i128 0, i128 %i.4
  %y_sq_red261 = load i128, i128* %array_getter260, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_sq_red261, i128 %y_sq255, i1* @constraint.352)
  %struct_getter263 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call248, i32 0, i32 5
  %primereduce.in.read_input_outter264 = load [256 x i128]*, [256 x i128]** %struct_getter263, align 8
  %y_sq_red266 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter264, i128 0, i128 %i.4
  store i128 %y_sq255, i128* %y_sq_red266, align 4
  br label %loop.latch267

loop.latch267:                                    ; preds = %loop.body249
  %add269 = add i128 %i.4, 1
  %mul272 = mul i128 2, %pointoncurve.k.read_arg_inner
  %sub273 = sub i128 %mul272, 1
  %slt274 = icmp slt i128 %add269, %sub273
  br i1 %slt274, label %loop.body249, label %loop.exit275

loop.exit275:                                     ; preds = %loop.latch267
  %mul279 = mul i128 4, %pointoncurve.n.read_arg_inner
  %add281 = add i128 %mul279, %call14
  %call283 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointoncurve.n.read_arg_inner, i128 %pointoncurve.k.read_arg_inner, i128 %add281, [256 x i128]* %pointoncurve.p.read_arg_inner)
  br label %loop.body284

loop.body284:                                     ; preds = %loop.latch307, %loop.exit275
  %i.5 = phi i128 [ 0, %loop.exit275 ], [ %add309, %loop.latch307 ]
  %struct_getter286 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call156, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter286, align 8
  %array_getter288 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.5
  %cu_red289 = load i128, i128* %array_getter288, align 4
  %struct_getter291 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call248, i32 0, i32 6
  %primereduce.out.read_output_outter292 = load [256 x i128]*, [256 x i128]** %struct_getter291, align 8
  %array_getter294 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter292, i128 0, i128 %i.5
  %y_sq_red295 = load i128, i128* %array_getter294, align 4
  %sub296 = sub i128 %cu_red289, %y_sq_red295
  %struct_getter298 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call283, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter298, align 8
  %array_getter300 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.5
  %constraint301 = load i128, i128* %array_getter300, align 4
  call void @fn_intrinsic_add_constraint(i128 %constraint301, i128 %sub296, i1* @constraint.353)
  %struct_getter303 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call283, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter304 = load [256 x i128]*, [256 x i128]** %struct_getter303, align 8
  %constraint306 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter304, i128 0, i128 %i.5
  store i128 %sub296, i128* %constraint306, align 4
  br label %loop.latch307

loop.latch307:                                    ; preds = %loop.body284
  %add309 = add i128 %i.5, 1
  %slt312 = icmp slt i128 %add309, %pointoncurve.k.read_arg_inner
  br i1 %slt312, label %loop.body284, label %loop.exit313

loop.exit313:                                     ; preds = %loop.latch307
  br label %exit

exit:                                             ; preds = %loop.exit313
  ret void
}

define %struct_template_circuit_pointoncurve* @fn_template_build_pointoncurve(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_pointoncurve = alloca %struct_template_circuit_pointoncurve, align 8
  %pointoncurve.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 0
  store i128 %0, i128* %pointoncurve.n.write_arg_inner, align 4
  %pointoncurve.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 1
  store i128 %1, i128* %pointoncurve.k.write_arg_inner, align 4
  %pointoncurve.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 2
  store i128 %2, i128* %pointoncurve.a.write_arg_inner, align 4
  %pointoncurve.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 3
  store i128 %3, i128* %pointoncurve.b.write_arg_inner, align 4
  %pointoncurve.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %pointoncurve.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointoncurve* %struct_template_circuit_pointoncurve
}

define void @fn_template_init_fpmultiply(%struct_template_circuit_fpmultiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 0
  %fpmultiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 1
  %fpmultiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 2
  %fpmultiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 3
  %fpmultiply.a.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 4
  %fpmultiply.b.read_input_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x i128]*
  %i5 = call i128 @fn_intrinsic_inline_init()
  %LOGK6 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %fpmultiply.k.read_arg_inner)
  %mul = mul i128 2, %fpmultiply.n.read_arg_inner
  %add = add i128 %mul, %call
  %call10 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %fpmultiply.n.read_arg_inner, i128 %fpmultiply.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add36, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_inner, i128 0, i128 %i.0
  %a12 = load i128, i128* %array_getter, align 4
  %struct_getter14 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call10, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter14, align 8
  %array_getter16 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %nocarry17 = load i128, i128* %array_getter16, align 4
  call void @fn_intrinsic_add_constraint(i128 %nocarry17, i128 %a12, i1* @constraint.354)
  %struct_getter18 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call10, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter19 = load [256 x i128]*, [256 x i128]** %struct_getter18, align 8
  %nocarry21 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter19, i128 0, i128 %i.0
  store i128 %a12, i128* %nocarry21, align 4
  %array_getter23 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_inner, i128 0, i128 %i.0
  %b24 = load i128, i128* %array_getter23, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call10, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %array_getter28 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %nocarry29 = load i128, i128* %array_getter28, align 4
  call void @fn_intrinsic_add_constraint(i128 %nocarry29, i128 %b24, i1* @constraint.355)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call10, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter32 = load [256 x i128]*, [256 x i128]** %struct_getter31, align 8
  %nocarry34 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter32, i128 0, i128 %i.0
  store i128 %b24, i128* %nocarry34, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add36 = add i128 %i.0, 1
  %slt = icmp slt i128 %add36, %fpmultiply.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %fpmultiply.k.read_arg_inner, 1
  %mul43 = mul i128 3, %fpmultiply.n.read_arg_inner
  %mul45 = mul i128 2, %call
  %add46 = add i128 %mul43, %mul45
  %call47 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %fpmultiply.n.read_arg_inner, i128 %fpmultiply.k.read_arg_inner, i128 %sub, [256 x i128]* %fpmultiply.p.read_arg_inner, i128 %add46)
  br label %loop.body48

loop.body48:                                      ; preds = %loop.latch64, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add66, %loop.latch64 ]
  %struct_getter50 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call10, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter50, align 8
  %array_getter52 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %nocarry53 = load i128, i128* %array_getter52, align 4
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call47, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.1
  %red58 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %red58, i128 %nocarry53, i1* @constraint.356)
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call47, i32 0, i32 5
  %primereduce.in.read_input_outter61 = load [256 x i128]*, [256 x i128]** %struct_getter60, align 8
  %red63 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter61, i128 0, i128 %i.1
  store i128 %nocarry53, i128* %red63, align 4
  br label %loop.latch64

loop.latch64:                                     ; preds = %loop.body48
  %add66 = add i128 %i.1, 1
  %mul69 = mul i128 2, %fpmultiply.k.read_arg_inner
  %sub70 = sub i128 %mul69, 1
  %slt71 = icmp slt i128 %add66, %sub70
  br i1 %slt71, label %loop.body48, label %loop.exit72

loop.exit72:                                      ; preds = %loop.latch64
  %mul76 = mul i128 3, %fpmultiply.n.read_arg_inner
  %mul78 = mul i128 2, %call
  %add79 = add i128 %mul76, %mul78
  %call81 = call %struct_template_circuit_signedfpcarrymodp* @fn_template_build_signedfpcarrymodp(i128 %fpmultiply.n.read_arg_inner, i128 %fpmultiply.k.read_arg_inner, i128 %add79, [256 x i128]* %fpmultiply.p.read_arg_inner)
  br label %loop.body82

loop.body82:                                      ; preds = %loop.latch98, %loop.exit72
  %i.2 = phi i128 [ 0, %loop.exit72 ], [ %add100, %loop.latch98 ]
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call47, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter84, align 8
  %array_getter86 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.2
  %red87 = load i128, i128* %array_getter86, align 4
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %call81, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter89, align 8
  %array_getter91 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter, i128 0, i128 %i.2
  %big_mod92 = load i128, i128* %array_getter91, align 4
  call void @fn_intrinsic_add_constraint(i128 %big_mod92, i128 %red87, i1* @constraint.357)
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %call81, i32 0, i32 4
  %signedfpcarrymodp.in.read_input_outter95 = load [256 x i128]*, [256 x i128]** %struct_getter94, align 8
  %big_mod97 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.in.read_input_outter95, i128 0, i128 %i.2
  store i128 %red87, i128* %big_mod97, align 4
  br label %loop.latch98

loop.latch98:                                     ; preds = %loop.body82
  %add100 = add i128 %i.2, 1
  %slt103 = icmp slt i128 %add100, %fpmultiply.k.read_arg_inner
  br i1 %slt103, label %loop.body82, label %loop.exit104

loop.exit104:                                     ; preds = %loop.latch98
  br label %loop.body105

loop.body105:                                     ; preds = %loop.latch118, %loop.exit104
  %i.3 = phi i128 [ 0, %loop.exit104 ], [ %add120, %loop.latch118 ]
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_signedfpcarrymodp, %struct_template_circuit_signedfpcarrymodp* %call81, i32 0, i32 6
  %signedfpcarrymodp.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter107, align 8
  %array_getter109 = getelementptr inbounds [256 x i128], [256 x i128]* %signedfpcarrymodp.out.read_output_outter, i128 0, i128 %i.3
  %big_mod110 = load i128, i128* %array_getter109, align 4
  %array_getter113 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  %out114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_add_constraint(i128 %out114, i128 %big_mod110, i1* @constraint.358)
  %out117 = getelementptr inbounds [256 x i128], [256 x i128]* %out, i128 0, i128 %i.3
  store i128 %big_mod110, i128* %out117, align 4
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.body105
  %add120 = add i128 %i.3, 1
  %slt123 = icmp slt i128 %add120, %fpmultiply.k.read_arg_inner
  br i1 %slt123, label %loop.body105, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  br label %exit

exit:                                             ; preds = %loop.exit124
  %fpmultiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %0, i32 0, i32 5
  store [256 x i128]* %out, [256 x i128]** %fpmultiply.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fpmultiply* @fn_template_build_fpmultiply(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fpmultiply = alloca %struct_template_circuit_fpmultiply, align 8
  %fpmultiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply, i32 0, i32 0
  store i128 %0, i128* %fpmultiply.n.write_arg_inner, align 4
  %fpmultiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply, i32 0, i32 1
  store i128 %1, i128* %fpmultiply.k.write_arg_inner, align 4
  %fpmultiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fpmultiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_fpmultiply* %struct_template_circuit_fpmultiply
}

define void @fn_template_init_pointoncurvefp2(%struct_template_circuit_pointoncurvefp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 0
  %pointoncurvefp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 1
  %pointoncurvefp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 2
  %pointoncurvefp2.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 3
  %pointoncurvefp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 4
  %pointoncurvefp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %0, i32 0, i32 5
  %pointoncurvefp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %y_sq_red6 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %i7 = call i128 @fn_intrinsic_inline_init()
  %cu_red8 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %constraint9 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  %LOGK310 = call i128 @fn_intrinsic_inline_init()
  %LOGK11 = call i128 @fn_intrinsic_inline_init()
  %j12 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %pointoncurvefp2.k.read_arg_inner)
  %mul = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul15 = mul i128 4, %pointoncurvefp2.k.read_arg_inner
  %mul17 = mul i128 %mul15, %pointoncurvefp2.k.read_arg_inner
  %mul18 = mul i128 %sub, %mul17
  %add = add i128 %mul18, 1
  %call19 = call i128 @log_ceil(i128 %add)
  %mul23 = mul i128 2, %pointoncurvefp2.n.read_arg_inner
  %add24 = add i128 %mul23, 1
  %add26 = add i128 %add24, %call
  %call27 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add26)
  %mul32 = mul i128 2, %pointoncurvefp2.n.read_arg_inner
  %add33 = add i128 %mul32, 1
  %add35 = add i128 %add33, %call
  %call36 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add35)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch109, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add111, %loop.latch109 ]
  br label %loop.body37

loop.body37:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add106, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in40 = load i128, i128* %array_getter, align 4
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call27, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter42, align 8
  %array_getter45 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq46 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq46, i128 %in40, i1* @constraint.359)
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call27, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter48 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter47, align 8
  %x_sq51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter48, i128 0, i128 %i.0, i128 %j.0
  store i128 %in40, i128* %x_sq51, align 4
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in56 = load i128, i128* %array_getter55, align 4
  %struct_getter58 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call27, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter58, align 8
  %array_getter61 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq62 = load i128, i128* %array_getter61, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq62, i128 %in56, i1* @constraint.360)
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call27, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter65 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter64, align 8
  %x_sq68 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter65, i128 0, i128 %i.0, i128 %j.0
  store i128 %in56, i128* %x_sq68, align 4
  %array_getter72 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in73 = load i128, i128* %array_getter72, align 4
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call36, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter76 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter75, align 8
  %array_getter79 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter76, i128 0, i128 %i.0, i128 %j.0
  %y_sq80 = load i128, i128* %array_getter79, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_sq80, i128 %in73, i1* @constraint.361)
  %struct_getter82 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call36, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter83 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter82, align 8
  %y_sq86 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter83, i128 0, i128 %i.0, i128 %j.0
  store i128 %in73, i128* %y_sq86, align 4
  %array_getter90 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in91 = load i128, i128* %array_getter90, align 4
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call36, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter94 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter93, align 8
  %array_getter97 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter94, i128 0, i128 %i.0, i128 %j.0
  %y_sq98 = load i128, i128* %array_getter97, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_sq98, i128 %in91, i1* @constraint.362)
  %struct_getter100 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call36, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter101 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter100, align 8
  %y_sq104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter101, i128 0, i128 %i.0, i128 %j.0
  store i128 %in91, i128* %y_sq104, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body37
  %add106 = add i128 %j.0, 1
  %slt = icmp slt i128 %add106, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt, label %loop.body37, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.exit
  %add111 = add i128 %i.0, 1
  %slt113 = icmp slt i128 %add111, 2
  br i1 %slt113, label %loop.body, label %loop.exit114

loop.exit114:                                     ; preds = %loop.latch109
  %mul117 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub118 = sub i128 %mul117, 1
  %mul121 = mul i128 3, %pointoncurvefp2.n.read_arg_inner
  %mul123 = mul i128 2, %call
  %add124 = add i128 %mul121, %mul123
  %add125 = add i128 %add124, 2
  %call126 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointoncurvefp2.n.read_arg_inner, i128 %sub118, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add125)
  br label %loop.body127

loop.body127:                                     ; preds = %loop.latch183, %loop.exit114
  %i.1 = phi i128 [ 0, %loop.exit114 ], [ %add185, %loop.latch183 ]
  br label %loop.body128

loop.body128:                                     ; preds = %loop.latch148, %loop.body127
  %j.1 = phi i128 [ 0, %loop.body127 ], [ %add150, %loop.latch148 ]
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call27, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter130, align 8
  %array_getter133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1
  %x_sq134 = load i128, i128* %array_getter133, align 4
  %struct_getter136 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter137 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter136, align 8
  %array_getter140 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter137, i128 0, i128 %i.1, i128 %j.1
  %x_cu141 = load i128, i128* %array_getter140, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_cu141, i128 %x_sq134, i1* @constraint.363)
  %struct_getter143 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter144 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter143, align 8
  %x_cu147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter144, i128 0, i128 %i.1, i128 %j.1
  store i128 %x_sq134, i128* %x_cu147, align 4
  br label %loop.latch148

loop.latch148:                                    ; preds = %loop.body128
  %add150 = add i128 %j.1, 1
  %mul153 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub154 = sub i128 %mul153, 1
  %slt155 = icmp slt i128 %add150, %sub154
  br i1 %slt155, label %loop.body128, label %loop.exit156

loop.exit156:                                     ; preds = %loop.latch148
  br label %loop.body157

loop.body157:                                     ; preds = %loop.latch176, %loop.exit156
  %j.2 = phi i128 [ 0, %loop.exit156 ], [ %add178, %loop.latch176 ]
  %array_getter161 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 %i.1, i128 %j.2
  %in162 = load i128, i128* %array_getter161, align 4
  %struct_getter164 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter165 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter164, align 8
  %array_getter168 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter165, i128 0, i128 %i.1, i128 %j.2
  %x_cu169 = load i128, i128* %array_getter168, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_cu169, i128 %in162, i1* @constraint.364)
  %struct_getter171 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter172 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter171, align 8
  %x_cu175 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter172, i128 0, i128 %i.1, i128 %j.2
  store i128 %in162, i128* %x_cu175, align 4
  br label %loop.latch176

loop.latch176:                                    ; preds = %loop.body157
  %add178 = add i128 %j.2, 1
  %slt181 = icmp slt i128 %add178, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt181, label %loop.body157, label %loop.exit182

loop.exit182:                                     ; preds = %loop.latch176
  br label %loop.latch183

loop.latch183:                                    ; preds = %loop.exit182
  %add185 = add i128 %i.1, 1
  %slt187 = icmp slt i128 %add185, 2
  br i1 %slt187, label %loop.body127, label %loop.exit188

loop.exit188:                                     ; preds = %loop.latch183
  br label %loop.body189

loop.body189:                                     ; preds = %loop.latch431, %loop.exit188
  %j.3 = phi i128 [ 0, %loop.exit188 ], [ %add433, %loop.latch431 ]
  %mul193 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub194 = sub i128 %mul193, 2
  %mul196 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %mul198 = mul i128 3, %call
  %add199 = add i128 %mul196, %mul198
  %add200 = add i128 %add199, 4
  %call201 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %sub194, [256 x i128]* %pointoncurvefp2.p.read_arg_inner, i128 %add200)
  %cu_red204 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  store %struct_template_circuit_primereduce* %call201, %struct_template_circuit_primereduce** %cu_red204, align 8
  br label %loop.body205

loop.body205:                                     ; preds = %loop.latch422, %loop.body189
  %i.2 = phi i128 [ 0, %loop.body189 ], [ %add424, %loop.latch422 ]
  %eq = icmp eq i128 %i.2, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body205
  %eq210 = icmp eq i128 %j.3, 0
  br i1 %eq210, label %if.true207, label %if.false208

if.false:                                         ; preds = %loop.body205
  %slt306 = icmp slt i128 %i.2, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt306, label %if.true302, label %if.false303

if.true207:                                       ; preds = %if.true
  %struct_getter212 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter213 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter212, align 8
  %array_getter216 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter213, i128 0, i128 %j.3, i128 %i.2
  %x_cu217 = load i128, i128* %array_getter216, align 4
  %array_getter218 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a219 = load i128, i128* %array_getter218, align 4
  %array_getter222 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %in223 = load i128, i128* %array_getter222, align 4
  %mul224 = mul i128 %a219, %in223
  %add225 = add i128 %x_cu217, %mul224
  %array_getter227 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a228 = load i128, i128* %array_getter227, align 4
  %array_getter231 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.2
  %in232 = load i128, i128* %array_getter231, align 4
  %mul233 = mul i128 %a228, %in232
  %sub234 = sub i128 %add225, %mul233
  %array_getter236 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.b.read_arg_inner, i128 0, i128 %j.3
  %b237 = load i128, i128* %array_getter236, align 4
  %add238 = add i128 %sub234, %b237
  %array_getter241 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red242 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter241, align 8
  %struct_getter243 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red242, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter243, align 8
  %array_getter245 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %cu_red246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red246, i128 %add238, i1* @constraint.365)
  %array_getter249 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red250 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter249, align 8
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red250, i32 0, i32 5
  %primereduce.in.read_input_outter252 = load [256 x i128]*, [256 x i128]** %struct_getter251, align 8
  %cu_red254 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter252, i128 0, i128 %i.2
  store i128 %add238, i128* %cu_red254, align 4
  br label %if.exit

if.false208:                                      ; preds = %if.true
  %struct_getter256 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter257 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter256, align 8
  %array_getter260 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter257, i128 0, i128 %j.3, i128 %i.2
  %x_cu261 = load i128, i128* %array_getter260, align 4
  %array_getter263 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a264 = load i128, i128* %array_getter263, align 4
  %array_getter267 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.2
  %in268 = load i128, i128* %array_getter267, align 4
  %mul269 = mul i128 %a264, %in268
  %add270 = add i128 %x_cu261, %mul269
  %array_getter272 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a273 = load i128, i128* %array_getter272, align 4
  %array_getter276 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %in277 = load i128, i128* %array_getter276, align 4
  %mul278 = mul i128 %a273, %in277
  %add279 = add i128 %add270, %mul278
  %array_getter282 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.b.read_arg_inner, i128 0, i128 %j.3
  %b283 = load i128, i128* %array_getter282, align 4
  %add284 = add i128 %add279, %b283
  %array_getter287 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red288 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter287, align 8
  %struct_getter289 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red288, i32 0, i32 5
  %primereduce.in.read_input_outter290 = load [256 x i128]*, [256 x i128]** %struct_getter289, align 8
  %array_getter292 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter290, i128 0, i128 %i.2
  %cu_red293 = load i128, i128* %array_getter292, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red293, i128 %add284, i1* @constraint.366)
  %array_getter296 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red297 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter296, align 8
  %struct_getter298 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red297, i32 0, i32 5
  %primereduce.in.read_input_outter299 = load [256 x i128]*, [256 x i128]** %struct_getter298, align 8
  %cu_red301 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter299, i128 0, i128 %i.2
  store i128 %add284, i128* %cu_red301, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false208, %if.true207
  br label %if.exit421

if.true302:                                       ; preds = %if.false
  %eq310 = icmp eq i128 %j.3, 0
  br i1 %eq310, label %if.true307, label %if.false308

if.false303:                                      ; preds = %if.false
  %struct_getter397 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter398 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter397, align 8
  %array_getter401 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter398, i128 0, i128 %j.3, i128 %i.2
  %x_cu402 = load i128, i128* %array_getter401, align 4
  %array_getter405 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red406 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter405, align 8
  %struct_getter407 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red406, i32 0, i32 5
  %primereduce.in.read_input_outter408 = load [256 x i128]*, [256 x i128]** %struct_getter407, align 8
  %array_getter410 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter408, i128 0, i128 %i.2
  %cu_red411 = load i128, i128* %array_getter410, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red411, i128 %x_cu402, i1* @constraint.369)
  %array_getter414 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red415 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter414, align 8
  %struct_getter416 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red415, i32 0, i32 5
  %primereduce.in.read_input_outter417 = load [256 x i128]*, [256 x i128]** %struct_getter416, align 8
  %cu_red419 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter417, i128 0, i128 %i.2
  store i128 %x_cu402, i128* %cu_red419, align 4
  br label %if.exit420

if.true307:                                       ; preds = %if.true302
  %struct_getter312 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter313 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter312, align 8
  %array_getter316 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter313, i128 0, i128 %j.3, i128 %i.2
  %x_cu317 = load i128, i128* %array_getter316, align 4
  %array_getter319 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a320 = load i128, i128* %array_getter319, align 4
  %array_getter323 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %in324 = load i128, i128* %array_getter323, align 4
  %mul325 = mul i128 %a320, %in324
  %add326 = add i128 %x_cu317, %mul325
  %array_getter328 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a329 = load i128, i128* %array_getter328, align 4
  %array_getter332 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.2
  %in333 = load i128, i128* %array_getter332, align 4
  %mul334 = mul i128 %a329, %in333
  %sub335 = sub i128 %add326, %mul334
  %array_getter338 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red339 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter338, align 8
  %struct_getter340 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red339, i32 0, i32 5
  %primereduce.in.read_input_outter341 = load [256 x i128]*, [256 x i128]** %struct_getter340, align 8
  %array_getter343 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter341, i128 0, i128 %i.2
  %cu_red344 = load i128, i128* %array_getter343, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red344, i128 %sub335, i1* @constraint.367)
  %array_getter347 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red348 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter347, align 8
  %struct_getter349 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red348, i32 0, i32 5
  %primereduce.in.read_input_outter350 = load [256 x i128]*, [256 x i128]** %struct_getter349, align 8
  %cu_red352 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter350, i128 0, i128 %i.2
  store i128 %sub335, i128* %cu_red352, align 4
  br label %if.exit395

if.false308:                                      ; preds = %if.true302
  %struct_getter354 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call126, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter355 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter354, align 8
  %array_getter358 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter355, i128 0, i128 %j.3, i128 %i.2
  %x_cu359 = load i128, i128* %array_getter358, align 4
  %array_getter361 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 0
  %a362 = load i128, i128* %array_getter361, align 4
  %array_getter365 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.2
  %in366 = load i128, i128* %array_getter365, align 4
  %mul367 = mul i128 %a362, %in366
  %add368 = add i128 %x_cu359, %mul367
  %array_getter370 = getelementptr inbounds [256 x i128], [256 x i128]* %pointoncurvefp2.a.read_arg_inner, i128 0, i128 1
  %a371 = load i128, i128* %array_getter370, align 4
  %array_getter374 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %in375 = load i128, i128* %array_getter374, align 4
  %mul376 = mul i128 %a371, %in375
  %add377 = add i128 %add368, %mul376
  %array_getter380 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red381 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter380, align 8
  %struct_getter382 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red381, i32 0, i32 5
  %primereduce.in.read_input_outter383 = load [256 x i128]*, [256 x i128]** %struct_getter382, align 8
  %array_getter385 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter383, i128 0, i128 %i.2
  %cu_red386 = load i128, i128* %array_getter385, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red386, i128 %add377, i1* @constraint.368)
  %array_getter389 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 %j.3
  %cu_red390 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter389, align 8
  %struct_getter391 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red390, i32 0, i32 5
  %primereduce.in.read_input_outter392 = load [256 x i128]*, [256 x i128]** %struct_getter391, align 8
  %cu_red394 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter392, i128 0, i128 %i.2
  store i128 %add377, i128* %cu_red394, align 4
  br label %if.exit395

if.exit395:                                       ; preds = %if.false308, %if.true307
  br label %if.exit420

if.exit420:                                       ; preds = %if.exit395, %if.false303
  br label %if.exit421

if.exit421:                                       ; preds = %if.exit420, %if.exit
  br label %loop.latch422

loop.latch422:                                    ; preds = %if.exit421
  %add424 = add i128 %i.2, 1
  %mul427 = mul i128 3, %pointoncurvefp2.k.read_arg_inner
  %sub428 = sub i128 %mul427, 2
  %slt429 = icmp slt i128 %add424, %sub428
  br i1 %slt429, label %loop.body205, label %loop.exit430

loop.exit430:                                     ; preds = %loop.latch422
  br label %loop.latch431

loop.latch431:                                    ; preds = %loop.exit430
  %add433 = add i128 %j.3, 1
  %slt435 = icmp slt i128 %add433, 2
  br i1 %slt435, label %loop.body189, label %loop.exit436

loop.exit436:                                     ; preds = %loop.latch431
  br label %loop.body437

loop.body437:                                     ; preds = %loop.latch487, %loop.exit436
  %i.3 = phi i128 [ 0, %loop.exit436 ], [ %add489, %loop.latch487 ]
  %sub441 = sub i128 %pointoncurvefp2.k.read_arg_inner, 1
  %mul444 = mul i128 3, %pointoncurvefp2.n.read_arg_inner
  %mul446 = mul i128 2, %call
  %add447 = add i128 %mul444, %mul446
  %add448 = add i128 %add447, 1
  %call449 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %sub441, [256 x i128]* %pointoncurvefp2.p.read_arg_inner, i128 %add448)
  %y_sq_red452 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red6, i128 0, i128 %i.3
  store %struct_template_circuit_primereduce* %call449, %struct_template_circuit_primereduce** %y_sq_red452, align 8
  br label %loop.body453

loop.body453:                                     ; preds = %loop.latch478, %loop.body437
  %j.4 = phi i128 [ 0, %loop.body437 ], [ %add480, %loop.latch478 ]
  %struct_getter455 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call36, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter456 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter455, align 8
  %array_getter459 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter456, i128 0, i128 %i.3, i128 %j.4
  %y_sq460 = load i128, i128* %array_getter459, align 4
  %array_getter463 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red6, i128 0, i128 %i.3
  %y_sq_red464 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter463, align 8
  %struct_getter465 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red464, i32 0, i32 5
  %primereduce.in.read_input_outter466 = load [256 x i128]*, [256 x i128]** %struct_getter465, align 8
  %array_getter468 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter466, i128 0, i128 %j.4
  %y_sq_red469 = load i128, i128* %array_getter468, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_sq_red469, i128 %y_sq460, i1* @constraint.370)
  %array_getter472 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red6, i128 0, i128 %i.3
  %y_sq_red473 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter472, align 8
  %struct_getter474 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red473, i32 0, i32 5
  %primereduce.in.read_input_outter475 = load [256 x i128]*, [256 x i128]** %struct_getter474, align 8
  %y_sq_red477 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter475, i128 0, i128 %j.4
  store i128 %y_sq460, i128* %y_sq_red477, align 4
  br label %loop.latch478

loop.latch478:                                    ; preds = %loop.body453
  %add480 = add i128 %j.4, 1
  %mul483 = mul i128 2, %pointoncurvefp2.k.read_arg_inner
  %sub484 = sub i128 %mul483, 1
  %slt485 = icmp slt i128 %add480, %sub484
  br i1 %slt485, label %loop.body453, label %loop.exit486

loop.exit486:                                     ; preds = %loop.latch478
  br label %loop.latch487

loop.latch487:                                    ; preds = %loop.exit486
  %add489 = add i128 %i.3, 1
  %slt491 = icmp slt i128 %add489, 2
  br i1 %slt491, label %loop.body437, label %loop.exit492

loop.exit492:                                     ; preds = %loop.latch487
  %mul496 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %add498 = add i128 %mul496, %call19
  %call500 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add498, [256 x i128]* %pointoncurvefp2.p.read_arg_inner)
  %constraint502 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, i128 0, i128 0
  store %struct_template_circuit_signedcheckcarrymodtozero* %call500, %struct_template_circuit_signedcheckcarrymodtozero** %constraint502, align 8
  %mul506 = mul i128 4, %pointoncurvefp2.n.read_arg_inner
  %add508 = add i128 %mul506, %call19
  %call510 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointoncurvefp2.n.read_arg_inner, i128 %pointoncurvefp2.k.read_arg_inner, i128 %add508, [256 x i128]* %pointoncurvefp2.p.read_arg_inner)
  %constraint512 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, i128 0, i128 1
  store %struct_template_circuit_signedcheckcarrymodtozero* %call510, %struct_template_circuit_signedcheckcarrymodtozero** %constraint512, align 8
  br label %loop.body513

loop.body513:                                     ; preds = %loop.latch576, %loop.exit492
  %i.4 = phi i128 [ 0, %loop.exit492 ], [ %add578, %loop.latch576 ]
  %array_getter515 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 0
  %cu_red516 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter515, align 8
  %struct_getter517 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red516, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter517, align 8
  %array_getter519 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.4
  %cu_red520 = load i128, i128* %array_getter519, align 4
  %array_getter522 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red6, i128 0, i128 0
  %y_sq_red523 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter522, align 8
  %struct_getter524 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red523, i32 0, i32 6
  %primereduce.out.read_output_outter525 = load [256 x i128]*, [256 x i128]** %struct_getter524, align 8
  %array_getter527 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter525, i128 0, i128 %i.4
  %y_sq_red528 = load i128, i128* %array_getter527, align 4
  %sub529 = sub i128 %cu_red520, %y_sq_red528
  %array_getter531 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, i128 0, i128 0
  %constraint532 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter531, align 8
  %struct_getter533 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint532, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter533, align 8
  %array_getter535 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.4
  %constraint536 = load i128, i128* %array_getter535, align 4
  call void @fn_intrinsic_add_constraint(i128 %constraint536, i128 %sub529, i1* @constraint.371)
  %array_getter538 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, i128 0, i128 0
  %constraint539 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter538, align 8
  %struct_getter540 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint539, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter541 = load [256 x i128]*, [256 x i128]** %struct_getter540, align 8
  %constraint543 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter541, i128 0, i128 %i.4
  store i128 %sub529, i128* %constraint543, align 4
  %array_getter545 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red8, i128 0, i128 1
  %cu_red546 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter545, align 8
  %struct_getter547 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red546, i32 0, i32 6
  %primereduce.out.read_output_outter548 = load [256 x i128]*, [256 x i128]** %struct_getter547, align 8
  %array_getter550 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter548, i128 0, i128 %i.4
  %cu_red551 = load i128, i128* %array_getter550, align 4
  %array_getter553 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %y_sq_red6, i128 0, i128 1
  %y_sq_red554 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter553, align 8
  %struct_getter555 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %y_sq_red554, i32 0, i32 6
  %primereduce.out.read_output_outter556 = load [256 x i128]*, [256 x i128]** %struct_getter555, align 8
  %array_getter558 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter556, i128 0, i128 %i.4
  %y_sq_red559 = load i128, i128* %array_getter558, align 4
  %sub560 = sub i128 %cu_red551, %y_sq_red559
  %array_getter562 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, i128 0, i128 1
  %constraint563 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter562, align 8
  %struct_getter564 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint563, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter565 = load [256 x i128]*, [256 x i128]** %struct_getter564, align 8
  %array_getter567 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter565, i128 0, i128 %i.4
  %constraint568 = load i128, i128* %array_getter567, align 4
  call void @fn_intrinsic_add_constraint(i128 %constraint568, i128 %sub560, i1* @constraint.372)
  %array_getter570 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint9, i128 0, i128 1
  %constraint571 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter570, align 8
  %struct_getter572 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint571, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter573 = load [256 x i128]*, [256 x i128]** %struct_getter572, align 8
  %constraint575 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter573, i128 0, i128 %i.4
  store i128 %sub560, i128* %constraint575, align 4
  br label %loop.latch576

loop.latch576:                                    ; preds = %loop.body513
  %add578 = add i128 %i.4, 1
  %slt581 = icmp slt i128 %add578, %pointoncurvefp2.k.read_arg_inner
  br i1 %slt581, label %loop.body513, label %loop.exit582

loop.exit582:                                     ; preds = %loop.latch576
  br label %exit

exit:                                             ; preds = %loop.exit582
  ret void
}

define %struct_template_circuit_pointoncurvefp2* @fn_template_build_pointoncurvefp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_pointoncurvefp2 = alloca %struct_template_circuit_pointoncurvefp2, align 8
  %pointoncurvefp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 0
  store i128 %0, i128* %pointoncurvefp2.n.write_arg_inner, align 4
  %pointoncurvefp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 1
  store i128 %1, i128* %pointoncurvefp2.k.write_arg_inner, align 4
  %pointoncurvefp2.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointoncurvefp2.a.write_arg_inner, align 8
  %pointoncurvefp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %pointoncurvefp2.b.write_arg_inner, align 8
  %pointoncurvefp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %pointoncurvefp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointoncurvefp2* %struct_template_circuit_pointoncurvefp2
}

define void @fn_template_init_pointonlinefp2(%struct_template_circuit_pointonlinefp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 0
  %pointonlinefp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 1
  %pointonlinefp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 2
  %pointonlinefp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %0, i32 0, i32 3
  %pointonlinefp2.in.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter3, align 8
  %LOGK4 = call i128 @fn_intrinsic_inline_init()
  %j5 = call i128 @fn_intrinsic_inline_init()
  %LOGK26 = call i128 @fn_intrinsic_inline_init()
  %diff_red7 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %diff_mod8 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  %i9 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %pointonlinefp2.k.read_arg_inner)
  %mul = mul i128 6, %pointonlinefp2.k.read_arg_inner
  %mul12 = mul i128 %mul, %pointonlinefp2.k.read_arg_inner
  %call13 = call i128 @log_ceil(i128 %mul12)
  %call15 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 2)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch62, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add64, %loop.latch62 ]
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add59, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.0, i128 %j.0
  %in19 = load i128, i128* %array_getter, align 4
  %array_getter23 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 2, i128 1, i128 %i.0, i128 %j.0
  %in24 = load i128, i128* %array_getter23, align 4
  %add = add i128 %in19, %in24
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter26, align 8
  %array_getter29 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %left30 = load i128, i128* %array_getter29, align 4
  call void @fn_intrinsic_add_constraint(i128 %left30, i128 %add, i1* @constraint.373)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter32 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %left35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter32, i128 0, i128 %i.0, i128 %j.0
  store i128 %add, i128* %left35, align 4
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 1, i128 0, i128 %i.0, i128 %j.0
  %in40 = load i128, i128* %array_getter39, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in45 = load i128, i128* %array_getter44, align 4
  %sub = sub i128 %in40, %in45
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter47, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %left51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_add_constraint(i128 %left51, i128 %sub, i1* @constraint.374)
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter54 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter53, align 8
  %left57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter54, i128 0, i128 %i.0, i128 %j.0
  store i128 %sub, i128* %left57, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body16
  %add59 = add i128 %j.0, 1
  %slt = icmp slt i128 %add59, %pointonlinefp2.k.read_arg_inner
  br i1 %slt, label %loop.body16, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.exit
  %add64 = add i128 %i.0, 1
  %slt66 = icmp slt i128 %add64, 2
  br i1 %slt66, label %loop.body, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch62
  %call70 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 2)
  br label %loop.body71

loop.body71:                                      ; preds = %loop.latch128, %loop.exit67
  %i.1 = phi i128 [ 0, %loop.exit67 ], [ %add130, %loop.latch128 ]
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch121, %loop.body71
  %j.1 = phi i128 [ 0, %loop.body71 ], [ %add123, %loop.latch121 ]
  %array_getter76 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 1, i128 1, i128 %i.1, i128 %j.1
  %in77 = load i128, i128* %array_getter76, align 4
  %array_getter81 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.1, i128 %j.1
  %in82 = load i128, i128* %array_getter81, align 4
  %sub83 = sub i128 %in77, %in82
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter86 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter85, align 8
  %array_getter89 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter86, i128 0, i128 %i.1, i128 %j.1
  %right90 = load i128, i128* %array_getter89, align 4
  call void @fn_intrinsic_add_constraint(i128 %right90, i128 %sub83, i1* @constraint.375)
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter93 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter92, align 8
  %right96 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter93, i128 0, i128 %i.1, i128 %j.1
  store i128 %sub83, i128* %right96, align 4
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.1, i128 %j.1
  %in101 = load i128, i128* %array_getter100, align 4
  %array_getter105 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_inner, i128 0, i128 2, i128 0, i128 %i.1, i128 %j.1
  %in106 = load i128, i128* %array_getter105, align 4
  %sub107 = sub i128 %in101, %in106
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter110 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter109, align 8
  %array_getter113 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter110, i128 0, i128 %i.1, i128 %j.1
  %right114 = load i128, i128* %array_getter113, align 4
  call void @fn_intrinsic_add_constraint(i128 %right114, i128 %sub107, i1* @constraint.376)
  %struct_getter116 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter117 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter116, align 8
  %right120 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter117, i128 0, i128 %i.1, i128 %j.1
  store i128 %sub107, i128* %right120, align 4
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.body72
  %add123 = add i128 %j.1, 1
  %slt126 = icmp slt i128 %add123, %pointonlinefp2.k.read_arg_inner
  br i1 %slt126, label %loop.body72, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %i.1, 1
  %slt132 = icmp slt i128 %add130, 2
  br i1 %slt132, label %loop.body71, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch128
  %sub137 = sub i128 %pointonlinefp2.k.read_arg_inner, 1
  %mul139 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %mul141 = mul i128 2, %call
  %add142 = add i128 %mul139, %mul141
  %add143 = add i128 %add142, 2
  %call144 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 %sub137, [256 x i128]* %pointonlinefp2.p.read_arg_inner, i128 %add143)
  %diff_red146 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 0
  store %struct_template_circuit_primereduce* %call144, %struct_template_circuit_primereduce** %diff_red146, align 8
  %sub150 = sub i128 %pointonlinefp2.k.read_arg_inner, 1
  %mul153 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %mul155 = mul i128 2, %call
  %add156 = add i128 %mul153, %mul155
  %add157 = add i128 %add156, 1
  %call158 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 %sub150, [256 x i128]* %pointonlinefp2.p.read_arg_inner, i128 %add157)
  %diff_red160 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 1
  store %struct_template_circuit_primereduce* %call158, %struct_template_circuit_primereduce** %diff_red160, align 8
  br label %loop.body161

loop.body161:                                     ; preds = %loop.latch230, %loop.exit133
  %i.2 = phi i128 [ 0, %loop.exit133 ], [ %add232, %loop.latch230 ]
  %struct_getter163 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter163, align 8
  %array_getter165 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter, i128 0, i128 0, i128 %i.2
  %left166 = load i128, i128* %array_getter165, align 4
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter169 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter168, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter169, i128 0, i128 2, i128 %i.2
  %left172 = load i128, i128* %array_getter171, align 4
  %sub173 = sub i128 %left166, %left172
  %struct_getter175 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter176 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter175, align 8
  %array_getter178 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter176, i128 0, i128 0, i128 %i.2
  %right179 = load i128, i128* %array_getter178, align 4
  %sub180 = sub i128 %sub173, %right179
  %struct_getter182 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter183 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter182, align 8
  %array_getter185 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter183, i128 0, i128 2, i128 %i.2
  %right186 = load i128, i128* %array_getter185, align 4
  %add187 = add i128 %sub180, %right186
  %array_getter189 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 0
  %diff_red190 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter189, align 8
  %struct_getter191 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red190, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter191, align 8
  %array_getter193 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %diff_red194 = load i128, i128* %array_getter193, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red194, i128 %add187, i1* @constraint.377)
  %array_getter196 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 0
  %diff_red197 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter196, align 8
  %struct_getter198 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red197, i32 0, i32 5
  %primereduce.in.read_input_outter199 = load [256 x i128]*, [256 x i128]** %struct_getter198, align 8
  %diff_red201 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter199, i128 0, i128 %i.2
  store i128 %add187, i128* %diff_red201, align 4
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call15, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter204 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter203, align 8
  %array_getter206 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter204, i128 0, i128 1, i128 %i.2
  %left207 = load i128, i128* %array_getter206, align 4
  %struct_getter209 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call70, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter210 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter209, align 8
  %array_getter212 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter210, i128 0, i128 1, i128 %i.2
  %right213 = load i128, i128* %array_getter212, align 4
  %sub214 = sub i128 %left207, %right213
  %array_getter216 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 1
  %diff_red217 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter216, align 8
  %struct_getter218 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red217, i32 0, i32 5
  %primereduce.in.read_input_outter219 = load [256 x i128]*, [256 x i128]** %struct_getter218, align 8
  %array_getter221 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter219, i128 0, i128 %i.2
  %diff_red222 = load i128, i128* %array_getter221, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red222, i128 %sub214, i1* @constraint.378)
  %array_getter224 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 1
  %diff_red225 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter224, align 8
  %struct_getter226 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red225, i32 0, i32 5
  %primereduce.in.read_input_outter227 = load [256 x i128]*, [256 x i128]** %struct_getter226, align 8
  %diff_red229 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter227, i128 0, i128 %i.2
  store i128 %sub214, i128* %diff_red229, align 4
  br label %loop.latch230

loop.latch230:                                    ; preds = %loop.body161
  %add232 = add i128 %i.2, 1
  %mul235 = mul i128 2, %pointonlinefp2.k.read_arg_inner
  %sub236 = sub i128 %mul235, 1
  %slt237 = icmp slt i128 %add232, %sub236
  br i1 %slt237, label %loop.body161, label %loop.exit238

loop.exit238:                                     ; preds = %loop.latch230
  br label %loop.body239

loop.body239:                                     ; preds = %loop.latch283, %loop.exit238
  %j.2 = phi i128 [ 0, %loop.exit238 ], [ %add285, %loop.latch283 ]
  %mul243 = mul i128 3, %pointonlinefp2.n.read_arg_inner
  %add245 = add i128 %mul243, %call13
  %call247 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointonlinefp2.n.read_arg_inner, i128 %pointonlinefp2.k.read_arg_inner, i128 %add245, [256 x i128]* %pointonlinefp2.p.read_arg_inner)
  %diff_mod250 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %diff_mod8, i128 0, i128 %j.2
  store %struct_template_circuit_signedcheckcarrymodtozero* %call247, %struct_template_circuit_signedcheckcarrymodtozero** %diff_mod250, align 8
  br label %loop.body251

loop.body251:                                     ; preds = %loop.latch276, %loop.body239
  %i.3 = phi i128 [ 0, %loop.body239 ], [ %add278, %loop.latch276 ]
  %array_getter254 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red7, i128 0, i128 %j.2
  %diff_red255 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter254, align 8
  %struct_getter256 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red255, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter256, align 8
  %array_getter258 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.3
  %diff_red259 = load i128, i128* %array_getter258, align 4
  %array_getter262 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %diff_mod8, i128 0, i128 %j.2
  %diff_mod263 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter262, align 8
  %struct_getter264 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %diff_mod263, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter264, align 8
  %array_getter266 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.3
  %diff_mod267 = load i128, i128* %array_getter266, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_mod267, i128 %diff_red259, i1* @constraint.379)
  %array_getter270 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %diff_mod8, i128 0, i128 %j.2
  %diff_mod271 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter270, align 8
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %diff_mod271, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter273 = load [256 x i128]*, [256 x i128]** %struct_getter272, align 8
  %diff_mod275 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter273, i128 0, i128 %i.3
  store i128 %diff_red259, i128* %diff_mod275, align 4
  br label %loop.latch276

loop.latch276:                                    ; preds = %loop.body251
  %add278 = add i128 %i.3, 1
  %slt281 = icmp slt i128 %add278, %pointonlinefp2.k.read_arg_inner
  br i1 %slt281, label %loop.body251, label %loop.exit282

loop.exit282:                                     ; preds = %loop.latch276
  br label %loop.latch283

loop.latch283:                                    ; preds = %loop.exit282
  %add285 = add i128 %j.2, 1
  %slt287 = icmp slt i128 %add285, 2
  br i1 %slt287, label %loop.body239, label %loop.exit288

loop.exit288:                                     ; preds = %loop.latch283
  br label %exit

exit:                                             ; preds = %loop.exit288
  ret void
}

define %struct_template_circuit_pointonlinefp2* @fn_template_build_pointonlinefp2(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_pointonlinefp2 = alloca %struct_template_circuit_pointonlinefp2, align 8
  %pointonlinefp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2, i32 0, i32 0
  store i128 %0, i128* %pointonlinefp2.n.write_arg_inner, align 4
  %pointonlinefp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2, i32 0, i32 1
  store i128 %1, i128* %pointonlinefp2.k.write_arg_inner, align 4
  %pointonlinefp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointonlinefp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointonlinefp2* %struct_template_circuit_pointonlinefp2
}

define void @fn_template_init_ellipticcurvefunction(%struct_template_circuit_ellipticcurvefunction* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 0
  %ellipticcurvefunction.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 1
  %ellipticcurvefunction.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 2
  %ellipticcurvefunction.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 3
  %ellipticcurvefunction.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 4
  %ellipticcurvefunction.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 5
  %ellipticcurvefunction.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %LOGK6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i7 = call i128 @fn_intrinsic_inline_init()
  %LOGK38 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %cu_red10 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %call = call i128 @log_ceil(i128 %ellipticcurvefunction.k.read_arg_inner)
  %mul = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul13 = mul i128 4, %ellipticcurvefunction.k.read_arg_inner
  %mul15 = mul i128 %mul13, %ellipticcurvefunction.k.read_arg_inner
  %mul16 = mul i128 %sub, %mul15
  %add = add i128 %mul16, 1
  %call17 = call i128 @log_ceil(i128 %add)
  %mul21 = mul i128 2, %ellipticcurvefunction.n.read_arg_inner
  %add22 = add i128 %mul21, 1
  %add24 = add i128 %add22, %call
  %call25 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %add24)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch62, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add64, %loop.latch62 ]
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add59, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %in29 = load i128, i128* %array_getter, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq35, i128 %in29, i1* @constraint.380)
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter37 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %x_sq40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter37, i128 0, i128 %i.0, i128 %j.0
  store i128 %in29, i128* %x_sq40, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %in45 = load i128, i128* %array_getter44, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter47, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq51, i128 %in45, i1* @constraint.381)
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter54 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter53, align 8
  %x_sq57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter54, i128 0, i128 %i.0, i128 %j.0
  store i128 %in45, i128* %x_sq57, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body26
  %add59 = add i128 %j.0, 1
  %slt = icmp slt i128 %add59, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt, label %loop.body26, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.exit
  %add64 = add i128 %i.0, 1
  %slt66 = icmp slt i128 %add64, 2
  br i1 %slt66, label %loop.body, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch62
  %mul70 = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub71 = sub i128 %mul70, 1
  %mul74 = mul i128 3, %ellipticcurvefunction.n.read_arg_inner
  %mul76 = mul i128 2, %call
  %add77 = add i128 %mul74, %mul76
  %add78 = add i128 %add77, 2
  %call79 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %sub71, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %add78)
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch136, %loop.exit67
  %i.1 = phi i128 [ 0, %loop.exit67 ], [ %add138, %loop.latch136 ]
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch101, %loop.body80
  %j.1 = phi i128 [ 0, %loop.body80 ], [ %add103, %loop.latch101 ]
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter83, align 8
  %array_getter86 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1
  %x_sq87 = load i128, i128* %array_getter86, align 4
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter90 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter89, align 8
  %array_getter93 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter90, i128 0, i128 %i.1, i128 %j.1
  %x_cu94 = load i128, i128* %array_getter93, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_cu94, i128 %x_sq87, i1* @constraint.382)
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter97 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter96, align 8
  %x_cu100 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter97, i128 0, i128 %i.1, i128 %j.1
  store i128 %x_sq87, i128* %x_cu100, align 4
  br label %loop.latch101

loop.latch101:                                    ; preds = %loop.body81
  %add103 = add i128 %j.1, 1
  %mul106 = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub107 = sub i128 %mul106, 1
  %slt108 = icmp slt i128 %add103, %sub107
  br i1 %slt108, label %loop.body81, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch101
  br label %loop.body110

loop.body110:                                     ; preds = %loop.latch129, %loop.exit109
  %j.2 = phi i128 [ 0, %loop.exit109 ], [ %add131, %loop.latch129 ]
  %array_getter114 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 %i.1, i128 %j.2
  %in115 = load i128, i128* %array_getter114, align 4
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter118 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter117, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter118, i128 0, i128 %i.1, i128 %j.2
  %x_cu122 = load i128, i128* %array_getter121, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_cu122, i128 %in115, i1* @constraint.383)
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter125 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter124, align 8
  %x_cu128 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter125, i128 0, i128 %i.1, i128 %j.2
  store i128 %in115, i128* %x_cu128, align 4
  br label %loop.latch129

loop.latch129:                                    ; preds = %loop.body110
  %add131 = add i128 %j.2, 1
  %slt134 = icmp slt i128 %add131, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt134, label %loop.body110, label %loop.exit135

loop.exit135:                                     ; preds = %loop.latch129
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.exit135
  %add138 = add i128 %i.1, 1
  %slt140 = icmp slt i128 %add138, 2
  br i1 %slt140, label %loop.body80, label %loop.exit141

loop.exit141:                                     ; preds = %loop.latch136
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch384, %loop.exit141
  %j.3 = phi i128 [ 0, %loop.exit141 ], [ %add386, %loop.latch384 ]
  %mul146 = mul i128 2, %ellipticcurvefunction.k.read_arg_inner
  %sub147 = sub i128 %mul146, 2
  %mul149 = mul i128 4, %ellipticcurvefunction.n.read_arg_inner
  %mul151 = mul i128 3, %call
  %add152 = add i128 %mul149, %mul151
  %add153 = add i128 %add152, 4
  %call154 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %sub147, [256 x i128]* %ellipticcurvefunction.p.read_arg_inner, i128 %add153)
  %cu_red157 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  store %struct_template_circuit_primereduce* %call154, %struct_template_circuit_primereduce** %cu_red157, align 8
  br label %loop.body158

loop.body158:                                     ; preds = %loop.latch375, %loop.body142
  %i.2 = phi i128 [ 0, %loop.body142 ], [ %add377, %loop.latch375 ]
  %eq = icmp eq i128 %i.2, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body158
  %eq163 = icmp eq i128 %j.3, 0
  br i1 %eq163, label %if.true160, label %if.false161

if.false:                                         ; preds = %loop.body158
  %slt259 = icmp slt i128 %i.2, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt259, label %if.true255, label %if.false256

if.true160:                                       ; preds = %if.true
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter166 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter165, align 8
  %array_getter169 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter166, i128 0, i128 %j.3, i128 %i.2
  %x_cu170 = load i128, i128* %array_getter169, align 4
  %array_getter171 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a172 = load i128, i128* %array_getter171, align 4
  %array_getter175 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 0, i128 %i.2
  %in176 = load i128, i128* %array_getter175, align 4
  %mul177 = mul i128 %a172, %in176
  %add178 = add i128 %x_cu170, %mul177
  %array_getter180 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a181 = load i128, i128* %array_getter180, align 4
  %array_getter184 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 1, i128 %i.2
  %in185 = load i128, i128* %array_getter184, align 4
  %mul186 = mul i128 %a181, %in185
  %sub187 = sub i128 %add178, %mul186
  %array_getter189 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.b.read_arg_inner, i128 0, i128 %j.3
  %b190 = load i128, i128* %array_getter189, align 4
  %add191 = add i128 %sub187, %b190
  %array_getter194 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red195 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter194, align 8
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red195, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter196, align 8
  %array_getter198 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %cu_red199 = load i128, i128* %array_getter198, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red199, i128 %add191, i1* @constraint.384)
  %array_getter202 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red203 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter202, align 8
  %struct_getter204 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red203, i32 0, i32 5
  %primereduce.in.read_input_outter205 = load [256 x i128]*, [256 x i128]** %struct_getter204, align 8
  %cu_red207 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter205, i128 0, i128 %i.2
  store i128 %add191, i128* %cu_red207, align 4
  br label %if.exit

if.false161:                                      ; preds = %if.true
  %struct_getter209 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter210 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter209, align 8
  %array_getter213 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter210, i128 0, i128 %j.3, i128 %i.2
  %x_cu214 = load i128, i128* %array_getter213, align 4
  %array_getter216 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a217 = load i128, i128* %array_getter216, align 4
  %array_getter220 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 1, i128 %i.2
  %in221 = load i128, i128* %array_getter220, align 4
  %mul222 = mul i128 %a217, %in221
  %add223 = add i128 %x_cu214, %mul222
  %array_getter225 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a226 = load i128, i128* %array_getter225, align 4
  %array_getter229 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 0, i128 %i.2
  %in230 = load i128, i128* %array_getter229, align 4
  %mul231 = mul i128 %a226, %in230
  %add232 = add i128 %add223, %mul231
  %array_getter235 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.b.read_arg_inner, i128 0, i128 %j.3
  %b236 = load i128, i128* %array_getter235, align 4
  %add237 = add i128 %add232, %b236
  %array_getter240 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red241 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter240, align 8
  %struct_getter242 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red241, i32 0, i32 5
  %primereduce.in.read_input_outter243 = load [256 x i128]*, [256 x i128]** %struct_getter242, align 8
  %array_getter245 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter243, i128 0, i128 %i.2
  %cu_red246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red246, i128 %add237, i1* @constraint.385)
  %array_getter249 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red250 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter249, align 8
  %struct_getter251 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red250, i32 0, i32 5
  %primereduce.in.read_input_outter252 = load [256 x i128]*, [256 x i128]** %struct_getter251, align 8
  %cu_red254 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter252, i128 0, i128 %i.2
  store i128 %add237, i128* %cu_red254, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false161, %if.true160
  br label %if.exit374

if.true255:                                       ; preds = %if.false
  %eq263 = icmp eq i128 %j.3, 0
  br i1 %eq263, label %if.true260, label %if.false261

if.false256:                                      ; preds = %if.false
  %struct_getter350 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter351 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter350, align 8
  %array_getter354 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter351, i128 0, i128 %j.3, i128 %i.2
  %x_cu355 = load i128, i128* %array_getter354, align 4
  %array_getter358 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red359 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter358, align 8
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red359, i32 0, i32 5
  %primereduce.in.read_input_outter361 = load [256 x i128]*, [256 x i128]** %struct_getter360, align 8
  %array_getter363 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter361, i128 0, i128 %i.2
  %cu_red364 = load i128, i128* %array_getter363, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red364, i128 %x_cu355, i1* @constraint.388)
  %array_getter367 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red368 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter367, align 8
  %struct_getter369 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red368, i32 0, i32 5
  %primereduce.in.read_input_outter370 = load [256 x i128]*, [256 x i128]** %struct_getter369, align 8
  %cu_red372 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter370, i128 0, i128 %i.2
  store i128 %x_cu355, i128* %cu_red372, align 4
  br label %if.exit373

if.true260:                                       ; preds = %if.true255
  %struct_getter265 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter266 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter265, align 8
  %array_getter269 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter266, i128 0, i128 %j.3, i128 %i.2
  %x_cu270 = load i128, i128* %array_getter269, align 4
  %array_getter272 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a273 = load i128, i128* %array_getter272, align 4
  %array_getter276 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 0, i128 %i.2
  %in277 = load i128, i128* %array_getter276, align 4
  %mul278 = mul i128 %a273, %in277
  %add279 = add i128 %x_cu270, %mul278
  %array_getter281 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a282 = load i128, i128* %array_getter281, align 4
  %array_getter285 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 1, i128 %i.2
  %in286 = load i128, i128* %array_getter285, align 4
  %mul287 = mul i128 %a282, %in286
  %sub288 = sub i128 %add279, %mul287
  %array_getter291 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red292 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter291, align 8
  %struct_getter293 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red292, i32 0, i32 5
  %primereduce.in.read_input_outter294 = load [256 x i128]*, [256 x i128]** %struct_getter293, align 8
  %array_getter296 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter294, i128 0, i128 %i.2
  %cu_red297 = load i128, i128* %array_getter296, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red297, i128 %sub288, i1* @constraint.386)
  %array_getter300 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red301 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter300, align 8
  %struct_getter302 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red301, i32 0, i32 5
  %primereduce.in.read_input_outter303 = load [256 x i128]*, [256 x i128]** %struct_getter302, align 8
  %cu_red305 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter303, i128 0, i128 %i.2
  store i128 %sub288, i128* %cu_red305, align 4
  br label %if.exit348

if.false261:                                      ; preds = %if.true255
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter308 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter307, align 8
  %array_getter311 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter308, i128 0, i128 %j.3, i128 %i.2
  %x_cu312 = load i128, i128* %array_getter311, align 4
  %array_getter314 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 0
  %a315 = load i128, i128* %array_getter314, align 4
  %array_getter318 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 1, i128 %i.2
  %in319 = load i128, i128* %array_getter318, align 4
  %mul320 = mul i128 %a315, %in319
  %add321 = add i128 %x_cu312, %mul320
  %array_getter323 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvefunction.a.read_arg_inner, i128 0, i128 1
  %a324 = load i128, i128* %array_getter323, align 4
  %array_getter327 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvefunction.in.read_input_inner, i128 0, i128 0, i128 %i.2
  %in328 = load i128, i128* %array_getter327, align 4
  %mul329 = mul i128 %a324, %in328
  %add330 = add i128 %add321, %mul329
  %array_getter333 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red334 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter333, align 8
  %struct_getter335 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red334, i32 0, i32 5
  %primereduce.in.read_input_outter336 = load [256 x i128]*, [256 x i128]** %struct_getter335, align 8
  %array_getter338 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter336, i128 0, i128 %i.2
  %cu_red339 = load i128, i128* %array_getter338, align 4
  call void @fn_intrinsic_add_constraint(i128 %cu_red339, i128 %add330, i1* @constraint.387)
  %array_getter342 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.3
  %cu_red343 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter342, align 8
  %struct_getter344 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red343, i32 0, i32 5
  %primereduce.in.read_input_outter345 = load [256 x i128]*, [256 x i128]** %struct_getter344, align 8
  %cu_red347 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter345, i128 0, i128 %i.2
  store i128 %add330, i128* %cu_red347, align 4
  br label %if.exit348

if.exit348:                                       ; preds = %if.false261, %if.true260
  br label %if.exit373

if.exit373:                                       ; preds = %if.exit348, %if.false256
  br label %if.exit374

if.exit374:                                       ; preds = %if.exit373, %if.exit
  br label %loop.latch375

loop.latch375:                                    ; preds = %if.exit374
  %add377 = add i128 %i.2, 1
  %mul380 = mul i128 3, %ellipticcurvefunction.k.read_arg_inner
  %sub381 = sub i128 %mul380, 2
  %slt382 = icmp slt i128 %add377, %sub381
  br i1 %slt382, label %loop.body158, label %loop.exit383

loop.exit383:                                     ; preds = %loop.latch375
  br label %loop.latch384

loop.latch384:                                    ; preds = %loop.exit383
  %add386 = add i128 %j.3, 1
  %slt388 = icmp slt i128 %add386, 2
  br i1 %slt388, label %loop.body142, label %loop.exit389

loop.exit389:                                     ; preds = %loop.latch384
  %mul393 = mul i128 4, %ellipticcurvefunction.n.read_arg_inner
  %add395 = add i128 %mul393, %call17
  %call397 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %ellipticcurvefunction.n.read_arg_inner, i128 %ellipticcurvefunction.k.read_arg_inner, i128 %add395, [256 x i128]* %ellipticcurvefunction.p.read_arg_inner)
  br label %loop.body398

loop.body398:                                     ; preds = %loop.latch427, %loop.exit389
  %j.4 = phi i128 [ 0, %loop.exit389 ], [ %add429, %loop.latch427 ]
  br label %loop.body399

loop.body399:                                     ; preds = %loop.latch420, %loop.body398
  %i.3 = phi i128 [ 0, %loop.body398 ], [ %add422, %loop.latch420 ]
  %array_getter402 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cu_red10, i128 0, i128 %j.4
  %cu_red403 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter402, align 8
  %struct_getter404 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cu_red403, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter404, align 8
  %array_getter406 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.3
  %cu_red407 = load i128, i128* %array_getter406, align 4
  %struct_getter409 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call397, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter409, align 8
  %array_getter412 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %j.4, i128 %i.3
  %carry413 = load i128, i128* %array_getter412, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry413, i128 %cu_red407, i1* @constraint.389)
  %struct_getter415 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call397, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter416 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter415, align 8
  %carry419 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter416, i128 0, i128 %j.4, i128 %i.3
  store i128 %cu_red407, i128* %carry419, align 4
  br label %loop.latch420

loop.latch420:                                    ; preds = %loop.body399
  %add422 = add i128 %i.3, 1
  %slt425 = icmp slt i128 %add422, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt425, label %loop.body399, label %loop.exit426

loop.exit426:                                     ; preds = %loop.latch420
  br label %loop.latch427

loop.latch427:                                    ; preds = %loop.exit426
  %add429 = add i128 %j.4, 1
  %slt431 = icmp slt i128 %add429, 2
  br i1 %slt431, label %loop.body398, label %loop.exit432

loop.exit432:                                     ; preds = %loop.latch427
  br label %loop.body433

loop.body433:                                     ; preds = %loop.latch457, %loop.exit432
  %j.5 = phi i128 [ 0, %loop.exit432 ], [ %add459, %loop.latch457 ]
  br label %loop.body434

loop.body434:                                     ; preds = %loop.latch450, %loop.body433
  %i.4 = phi i128 [ 0, %loop.body433 ], [ %add452, %loop.latch450 ]
  %struct_getter436 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call397, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter436, align 8
  %array_getter439 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %j.5, i128 %i.4
  %carry440 = load i128, i128* %array_getter439, align 4
  %array_getter444 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.5, i128 %i.4
  %out445 = load i128, i128* %array_getter444, align 4
  call void @fn_intrinsic_add_constraint(i128 %out445, i128 %carry440, i1* @constraint.390)
  %out449 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.5, i128 %i.4
  store i128 %carry440, i128* %out449, align 4
  br label %loop.latch450

loop.latch450:                                    ; preds = %loop.body434
  %add452 = add i128 %i.4, 1
  %slt455 = icmp slt i128 %add452, %ellipticcurvefunction.k.read_arg_inner
  br i1 %slt455, label %loop.body434, label %loop.exit456

loop.exit456:                                     ; preds = %loop.latch450
  br label %loop.latch457

loop.latch457:                                    ; preds = %loop.exit456
  %add459 = add i128 %j.5, 1
  %slt461 = icmp slt i128 %add459, 2
  br i1 %slt461, label %loop.body433, label %loop.exit462

loop.exit462:                                     ; preds = %loop.latch457
  br label %exit

exit:                                             ; preds = %loop.exit462
  %ellipticcurvefunction.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvefunction.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvefunction* @fn_template_build_ellipticcurvefunction(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvefunction = alloca %struct_template_circuit_ellipticcurvefunction, align 8
  %ellipticcurvefunction.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvefunction.n.write_arg_inner, align 4
  %ellipticcurvefunction.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvefunction.k.write_arg_inner, align 4
  %ellipticcurvefunction.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvefunction.a.write_arg_inner, align 8
  %ellipticcurvefunction.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %ellipticcurvefunction.b.write_arg_inner, align 8
  %ellipticcurvefunction.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvefunction, %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvefunction.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvefunction* %struct_template_circuit_ellipticcurvefunction
}

define void @fn_template_init_fp12add(%struct_template_circuit_fp12add* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 0
  %fp12add.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 1
  %fp12add.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 2
  %fp12add.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 3
  %fp12add.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 4
  %fp12add.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %j6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %m7 = call i128 @fn_intrinsic_inline_init()
  %adders8 = alloca [256 x [256 x %struct_template_circuit_fpadd*]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch96, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add98, %loop.latch96 ]
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch90, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add92, %loop.latch90 ]
  %call = call %struct_template_circuit_fpadd* @fn_template_build_fpadd(i128 %fp12add.n.read_arg_inner, i128 %fp12add.k.read_arg_inner, [256 x i128]* %fp12add.p.read_arg_inner)
  %adders12 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_fpadd* %call, %struct_template_circuit_fpadd** %adders12, align 8
  br label %loop.body13

loop.body13:                                      ; preds = %loop.latch, %loop.body9
  %m.0 = phi i128 [ 0, %loop.body9 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12add.a.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  %a17 = load i128, i128* %array_getter, align 4
  %array_getter21 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, i128 0, i128 %i.0, i128 %j.0
  %adders22 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter21, align 8
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders22, i32 0, i32 3
  %fpadd.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter23, align 8
  %array_getter25 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter, i128 0, i128 %m.0
  %adders26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_add_constraint(i128 %adders26, i128 %a17, i1* @constraint.391)
  %array_getter30 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, i128 0, i128 %i.0, i128 %j.0
  %adders31 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter30, align 8
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders31, i32 0, i32 3
  %fpadd.a.read_input_outter33 = load [256 x i128]*, [256 x i128]** %struct_getter32, align 8
  %adders35 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.a.read_input_outter33, i128 0, i128 %m.0
  store i128 %a17, i128* %adders35, align 4
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12add.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  %b40 = load i128, i128* %array_getter39, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, i128 0, i128 %i.0, i128 %j.0
  %adders45 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter44, align 8
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders45, i32 0, i32 4
  %fpadd.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter46, align 8
  %array_getter48 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter, i128 0, i128 %m.0
  %adders49 = load i128, i128* %array_getter48, align 4
  call void @fn_intrinsic_add_constraint(i128 %adders49, i128 %b40, i1* @constraint.392)
  %array_getter53 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, i128 0, i128 %i.0, i128 %j.0
  %adders54 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter53, align 8
  %struct_getter55 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders54, i32 0, i32 4
  %fpadd.b.read_input_outter56 = load [256 x i128]*, [256 x i128]** %struct_getter55, align 8
  %adders58 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.b.read_input_outter56, i128 0, i128 %m.0
  store i128 %b40, i128* %adders58, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body13
  %add = add i128 %m.0, 1
  %slt = icmp slt i128 %add, %fp12add.k.read_arg_inner
  br i1 %slt, label %loop.body13, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body62

loop.body62:                                      ; preds = %loop.latch83, %loop.exit
  %m.1 = phi i128 [ 0, %loop.exit ], [ %add85, %loop.latch83 ]
  %array_getter66 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpadd*]], [256 x [256 x %struct_template_circuit_fpadd*]]* %adders8, i128 0, i128 %i.0, i128 %j.0
  %adders67 = load %struct_template_circuit_fpadd*, %struct_template_circuit_fpadd** %array_getter66, align 8
  %struct_getter68 = getelementptr inbounds %struct_template_circuit_fpadd, %struct_template_circuit_fpadd* %adders67, i32 0, i32 5
  %fpadd.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter68, align 8
  %array_getter70 = getelementptr inbounds [256 x i128], [256 x i128]* %fpadd.out.read_output_outter, i128 0, i128 %m.1
  %adders71 = load i128, i128* %array_getter70, align 4
  %array_getter76 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 %j.0, i128 %m.1
  %out77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %out77, i128 %adders71, i1* @constraint.393)
  %out82 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 %j.0, i128 %m.1
  store i128 %adders71, i128* %out82, align 4
  br label %loop.latch83

loop.latch83:                                     ; preds = %loop.body62
  %add85 = add i128 %m.1, 1
  %slt88 = icmp slt i128 %add85, %fp12add.k.read_arg_inner
  br i1 %slt88, label %loop.body62, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch83
  br label %loop.latch90

loop.latch90:                                     ; preds = %loop.exit89
  %add92 = add i128 %j.0, 1
  %slt94 = icmp slt i128 %add92, 2
  br i1 %slt94, label %loop.body9, label %loop.exit95

loop.exit95:                                      ; preds = %loop.latch90
  br label %loop.latch96

loop.latch96:                                     ; preds = %loop.exit95
  %add98 = add i128 %i.0, 1
  %slt100 = icmp slt i128 %add98, 6
  br i1 %slt100, label %loop.body, label %loop.exit101

loop.exit101:                                     ; preds = %loop.latch96
  br label %exit

exit:                                             ; preds = %loop.exit101
  %fp12add.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12add.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12add* @fn_template_build_fp12add(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12add = alloca %struct_template_circuit_fp12add, align 8
  %fp12add.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %struct_template_circuit_fp12add, i32 0, i32 0
  store i128 %0, i128* %fp12add.n.write_arg_inner, align 4
  %fp12add.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %struct_template_circuit_fp12add, i32 0, i32 1
  store i128 %1, i128* %fp12add.k.write_arg_inner, align 4
  %fp12add.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12add, %struct_template_circuit_fp12add* %struct_template_circuit_fp12add, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12add.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12add* %struct_template_circuit_fp12add
}

define void @fn_template_init_ellipticcurveaddunequalfp2(%struct_template_circuit_ellipticcurveaddunequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 0
  %ellipticcurveaddunequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 1
  %ellipticcurveaddunequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 2
  %ellipticcurveaddunequalfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %cubic_mod5 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  %range_check7 = alloca [256 x %struct_template_circuit_rangecheck2d*], align 8
  %cubic_red9 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %LOGK10 = call i128 @fn_intrinsic_inline_init()
  %j12 = call i128 @fn_intrinsic_inline_init()
  %i14 = call i128 @fn_intrinsic_inline_init()
  %ind15 = call i128 @fn_intrinsic_inline_init()
  %LOGK316 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %call = call i128 @log_ceil(i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %mul = mul i128 12, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %mul22 = mul i128 %mul, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %mul24 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub = sub i128 %mul24, 1
  %mul25 = mul i128 %mul22, %sub
  %add = add i128 %mul25, 1
  %call26 = call i128 @log_ceil(i128 %add)
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 1
  %b28 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b28, [256 x [256 x i128]]* %spice_inline_array, align 4
  %array_getter29 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 1
  %a30 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter29, align 4
  %spice_inline_array31 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a30, [256 x [256 x i128]]* %spice_inline_array31, align 4
  %call32 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array31, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %array_getter36 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 0
  %b37 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter36, align 4
  %spice_inline_array38 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b37, [256 x [256 x i128]]* %spice_inline_array38, align 4
  %array_getter40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0
  %a41 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter40, align 4
  %spice_inline_array42 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a41, [256 x [256 x i128]]* %spice_inline_array42, align 4
  %call44 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array38, [256 x [256 x i128]]* %spice_inline_array42, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %call49 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call44, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %call55 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call32, [256 x [256 x i128]]* %call49, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %call61 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call55, [256 x [256 x i128]]* %call55, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %array_getter68 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0
  %a69 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter68, align 4
  %spice_inline_array70 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a69, [256 x [256 x i128]]* %spice_inline_array70, align 4
  %call72 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call61, [256 x [256 x i128]]* %spice_inline_array70, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %array_getter74 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 0
  %b75 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter74, align 4
  %spice_inline_array76 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %b75, [256 x [256 x i128]]* %spice_inline_array76, align 4
  %call78 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call72, [256 x [256 x i128]]* %spice_inline_array76, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %array_getter87 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0
  %a88 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter87, align 4
  %spice_inline_array89 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a88, [256 x [256 x i128]]* %spice_inline_array89, align 4
  %call92 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array89, [256 x [256 x i128]]* %call78, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %call94 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call55, [256 x [256 x i128]]* %call92, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %array_getter96 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 1
  %a97 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter96, align 4
  %spice_inline_array98 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %a97, [256 x [256 x i128]]* %spice_inline_array98, align 4
  %call100 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x [256 x i128]]* %call94, [256 x [256 x i128]]* %spice_inline_array98, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add129, %loop.latch ]
  %array_getter103 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call78, i128 0, i128 0, i128 %i.0
  %x3104 = load i128, i128* %array_getter103, align 4
  %out106 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %i.0
  store i128 %x3104, i128* %out106, align 4
  %array_getter109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call78, i128 0, i128 1, i128 %i.0
  %x3110 = load i128, i128* %array_getter109, align 4
  %out113 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %i.0
  store i128 %x3110, i128* %out113, align 4
  %array_getter116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call100, i128 0, i128 0, i128 %i.0
  %y3117 = load i128, i128* %array_getter116, align 4
  %out120 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 1, i128 0, i128 %i.0
  store i128 %y3117, i128* %out120, align 4
  %array_getter123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call100, i128 0, i128 1, i128 %i.0
  %y3124 = load i128, i128* %array_getter123, align 4
  %out127 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 1, i128 1, i128 %i.0
  store i128 %y3124, i128* %out127, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add129 = add i128 %i.0, 1
  %slt = icmp slt i128 %add129, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call134 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 2)
  %call137 = call %struct_template_circuit_bigmultshortlong2d* @fn_template_build_bigmultshortlong2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 2)
  br label %loop.body138

loop.body138:                                     ; preds = %loop.latch241, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add243, %loop.latch241 ]
  br label %loop.body139

loop.body139:                                     ; preds = %loop.latch234, %loop.body138
  %j.0 = phi i128 [ 0, %loop.body138 ], [ %add236, %loop.latch234 ]
  %array_getter143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 0, i128 %i.1, i128 %j.0
  %b144 = load i128, i128* %array_getter143, align 4
  %array_getter148 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0, i128 %i.1, i128 %j.0
  %a149 = load i128, i128* %array_getter148, align 4
  %sub150 = sub i128 %b144, %a149
  %struct_getter152 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter152, align 8
  %array_getter155 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %dx_sq156 = load i128, i128* %array_getter155, align 4
  call void @fn_intrinsic_add_constraint(i128 %dx_sq156, i128 %sub150, i1* @constraint.394)
  %struct_getter158 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter159 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter158, align 8
  %dx_sq162 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter159, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub150, i128* %dx_sq162, align 4
  %array_getter166 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 0, i128 %i.1, i128 %j.0
  %b167 = load i128, i128* %array_getter166, align 4
  %array_getter171 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0, i128 %i.1, i128 %j.0
  %a172 = load i128, i128* %array_getter171, align 4
  %sub173 = sub i128 %b167, %a172
  %struct_getter175 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter175, align 8
  %array_getter178 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %dx_sq179 = load i128, i128* %array_getter178, align 4
  call void @fn_intrinsic_add_constraint(i128 %dx_sq179, i128 %sub173, i1* @constraint.395)
  %struct_getter181 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter182 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter181, align 8
  %dx_sq185 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter182, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub173, i128* %dx_sq185, align 4
  %array_getter189 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 1, i128 %i.1, i128 %j.0
  %b190 = load i128, i128* %array_getter189, align 4
  %array_getter194 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 1, i128 %i.1, i128 %j.0
  %a195 = load i128, i128* %array_getter194, align 4
  %sub196 = sub i128 %b190, %a195
  %struct_getter198 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter199 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter198, align 8
  %array_getter202 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter199, i128 0, i128 %i.1, i128 %j.0
  %dy_sq203 = load i128, i128* %array_getter202, align 4
  call void @fn_intrinsic_add_constraint(i128 %dy_sq203, i128 %sub196, i1* @constraint.396)
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 3
  %bigmultshortlong2d.a.read_input_outter206 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter205, align 8
  %dy_sq209 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.a.read_input_outter206, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub196, i128* %dy_sq209, align 4
  %array_getter213 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 1, i128 %i.1, i128 %j.0
  %b214 = load i128, i128* %array_getter213, align 4
  %array_getter218 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 1, i128 %i.1, i128 %j.0
  %a219 = load i128, i128* %array_getter218, align 4
  %sub220 = sub i128 %b214, %a219
  %struct_getter222 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter223 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter222, align 8
  %array_getter226 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter223, i128 0, i128 %i.1, i128 %j.0
  %dy_sq227 = load i128, i128* %array_getter226, align 4
  call void @fn_intrinsic_add_constraint(i128 %dy_sq227, i128 %sub220, i1* @constraint.397)
  %struct_getter229 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 4
  %bigmultshortlong2d.b.read_input_outter230 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter229, align 8
  %dy_sq233 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.b.read_input_outter230, i128 0, i128 %i.1, i128 %j.0
  store i128 %sub220, i128* %dy_sq233, align 4
  br label %loop.latch234

loop.latch234:                                    ; preds = %loop.body139
  %add236 = add i128 %j.0, 1
  %slt239 = icmp slt i128 %add236, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt239, label %loop.body139, label %loop.exit240

loop.exit240:                                     ; preds = %loop.latch234
  br label %loop.latch241

loop.latch241:                                    ; preds = %loop.exit240
  %add243 = add i128 %i.1, 1
  %slt245 = icmp slt i128 %add243, 2
  br i1 %slt245, label %loop.body138, label %loop.exit246

loop.exit246:                                     ; preds = %loop.latch241
  %mul250 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub251 = sub i128 %mul250, 1
  %call252 = call %struct_template_circuit_bigmultshortlong2dunequal* @fn_template_build_bigmultshortlong2dunequal(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %sub251, i128 2, i128 2)
  br label %loop.body253

loop.body253:                                     ; preds = %loop.latch303, %loop.exit246
  %i.2 = phi i128 [ 0, %loop.exit246 ], [ %add305, %loop.latch303 ]
  %array_getter256 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %a257 = load i128, i128* %array_getter256, align 4
  %array_getter260 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %b261 = load i128, i128* %array_getter260, align 4
  %add262 = add i128 %a257, %b261
  %array_getter265 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %i.2
  %out266 = load i128, i128* %array_getter265, align 4
  %add267 = add i128 %add262, %out266
  %struct_getter269 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter269, align 8
  %array_getter271 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter, i128 0, i128 0, i128 %i.2
  %cubic272 = load i128, i128* %array_getter271, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic272, i128 %add267, i1* @constraint.398)
  %struct_getter274 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter275 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter274, align 8
  %cubic277 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter275, i128 0, i128 0, i128 %i.2
  store i128 %add267, i128* %cubic277, align 4
  %array_getter280 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 0, i128 1, i128 %i.2
  %a281 = load i128, i128* %array_getter280, align 4
  %array_getter284 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 0, i128 1, i128 %i.2
  %b285 = load i128, i128* %array_getter284, align 4
  %add286 = add i128 %a281, %b285
  %array_getter289 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %i.2
  %out290 = load i128, i128* %array_getter289, align 4
  %add291 = add i128 %add286, %out290
  %struct_getter293 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter294 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter293, align 8
  %array_getter296 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter294, i128 0, i128 1, i128 %i.2
  %cubic297 = load i128, i128* %array_getter296, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic297, i128 %add291, i1* @constraint.399)
  %struct_getter299 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 5
  %bigmultshortlong2dunequal.a.read_input_outter300 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter299, align 8
  %cubic302 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.a.read_input_outter300, i128 0, i128 1, i128 %i.2
  store i128 %add291, i128* %cubic302, align 4
  br label %loop.latch303

loop.latch303:                                    ; preds = %loop.body253
  %add305 = add i128 %i.2, 1
  %slt308 = icmp slt i128 %add305, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt308, label %loop.body253, label %loop.exit309

loop.exit309:                                     ; preds = %loop.latch303
  br label %loop.body310

loop.body310:                                     ; preds = %loop.latch350, %loop.exit309
  %i.3 = phi i128 [ 0, %loop.exit309 ], [ %add352, %loop.latch350 ]
  %struct_getter312 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter312, align 8
  %array_getter314 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter, i128 0, i128 0, i128 %i.3
  %dx_sq315 = load i128, i128* %array_getter314, align 4
  %struct_getter317 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter318 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter317, align 8
  %array_getter320 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter318, i128 0, i128 2, i128 %i.3
  %dx_sq321 = load i128, i128* %array_getter320, align 4
  %sub322 = sub i128 %dx_sq315, %dx_sq321
  %struct_getter324 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter324, align 8
  %array_getter326 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter, i128 0, i128 0, i128 %i.3
  %cubic327 = load i128, i128* %array_getter326, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic327, i128 %sub322, i1* @constraint.400)
  %struct_getter329 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter330 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter329, align 8
  %cubic332 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter330, i128 0, i128 0, i128 %i.3
  store i128 %sub322, i128* %cubic332, align 4
  %struct_getter334 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call134, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter335 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter334, align 8
  %array_getter337 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter335, i128 0, i128 1, i128 %i.3
  %dx_sq338 = load i128, i128* %array_getter337, align 4
  %struct_getter340 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter341 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter340, align 8
  %array_getter343 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter341, i128 0, i128 1, i128 %i.3
  %cubic344 = load i128, i128* %array_getter343, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic344, i128 %dx_sq338, i1* @constraint.401)
  %struct_getter346 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 6
  %bigmultshortlong2dunequal.b.read_input_outter347 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter346, align 8
  %cubic349 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.b.read_input_outter347, i128 0, i128 1, i128 %i.3
  store i128 %dx_sq338, i128* %cubic349, align 4
  br label %loop.latch350

loop.latch350:                                    ; preds = %loop.body310
  %add352 = add i128 %i.3, 1
  %mul355 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub356 = sub i128 %mul355, 1
  %slt357 = icmp slt i128 %add352, %sub356
  br i1 %slt357, label %loop.body310, label %loop.exit358

loop.exit358:                                     ; preds = %loop.latch350
  %mul362 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub363 = sub i128 %mul362, 2
  %mul366 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add368 = add i128 %mul366, %call26
  %add369 = add i128 %add368, 2
  %call370 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %sub363, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner, i128 %add369)
  %cubic_red372 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 0
  store %struct_template_circuit_primereduce* %call370, %struct_template_circuit_primereduce** %cubic_red372, align 8
  %mul376 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub377 = sub i128 %mul376, 2
  %mul380 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add382 = add i128 %mul380, %call26
  %add383 = add i128 %add382, 2
  %call384 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %sub377, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner, i128 %add383)
  %cubic_red386 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 1
  store %struct_template_circuit_primereduce* %call384, %struct_template_circuit_primereduce** %cubic_red386, align 8
  br label %loop.body387

loop.body387:                                     ; preds = %loop.latch456, %loop.exit358
  %i.4 = phi i128 [ 0, %loop.exit358 ], [ %add458, %loop.latch456 ]
  %struct_getter389 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter389, align 8
  %array_getter391 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter, i128 0, i128 0, i128 %i.4
  %cubic392 = load i128, i128* %array_getter391, align 4
  %struct_getter394 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter395 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter394, align 8
  %array_getter397 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter395, i128 0, i128 2, i128 %i.4
  %cubic398 = load i128, i128* %array_getter397, align 4
  %sub399 = sub i128 %cubic392, %cubic398
  %struct_getter401 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter402 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter401, align 8
  %array_getter404 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter402, i128 0, i128 0, i128 %i.4
  %dy_sq405 = load i128, i128* %array_getter404, align 4
  %sub406 = sub i128 %sub399, %dy_sq405
  %struct_getter408 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter409 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter408, align 8
  %array_getter411 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter409, i128 0, i128 2, i128 %i.4
  %dy_sq412 = load i128, i128* %array_getter411, align 4
  %add413 = add i128 %sub406, %dy_sq412
  %array_getter415 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 0
  %cubic_red416 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter415, align 8
  %struct_getter417 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red416, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter417, align 8
  %array_getter419 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.4
  %cubic_red420 = load i128, i128* %array_getter419, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_red420, i128 %add413, i1* @constraint.402)
  %array_getter422 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 0
  %cubic_red423 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter422, align 8
  %struct_getter424 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red423, i32 0, i32 5
  %primereduce.in.read_input_outter425 = load [256 x i128]*, [256 x i128]** %struct_getter424, align 8
  %cubic_red427 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter425, i128 0, i128 %i.4
  store i128 %add413, i128* %cubic_red427, align 4
  %struct_getter429 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter430 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter429, align 8
  %array_getter432 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter430, i128 0, i128 1, i128 %i.4
  %cubic433 = load i128, i128* %array_getter432, align 4
  %struct_getter435 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2d, %struct_template_circuit_bigmultshortlong2d* %call137, i32 0, i32 5
  %bigmultshortlong2d.out.read_output_outter436 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter435, align 8
  %array_getter438 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2d.out.read_output_outter436, i128 0, i128 1, i128 %i.4
  %dy_sq439 = load i128, i128* %array_getter438, align 4
  %sub440 = sub i128 %cubic433, %dy_sq439
  %array_getter442 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 1
  %cubic_red443 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter442, align 8
  %struct_getter444 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red443, i32 0, i32 5
  %primereduce.in.read_input_outter445 = load [256 x i128]*, [256 x i128]** %struct_getter444, align 8
  %array_getter447 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter445, i128 0, i128 %i.4
  %cubic_red448 = load i128, i128* %array_getter447, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_red448, i128 %sub440, i1* @constraint.403)
  %array_getter450 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 1
  %cubic_red451 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter450, align 8
  %struct_getter452 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red451, i32 0, i32 5
  %primereduce.in.read_input_outter453 = load [256 x i128]*, [256 x i128]** %struct_getter452, align 8
  %cubic_red455 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter453, i128 0, i128 %i.4
  store i128 %sub440, i128* %cubic_red455, align 4
  br label %loop.latch456

loop.latch456:                                    ; preds = %loop.body387
  %add458 = add i128 %i.4, 1
  %mul461 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub462 = sub i128 %mul461, 1
  %slt463 = icmp slt i128 %add458, %sub462
  br i1 %slt463, label %loop.body387, label %loop.exit464

loop.exit464:                                     ; preds = %loop.latch456
  %mul466 = mul i128 2, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub467 = sub i128 %mul466, 1
  br label %loop.body468

loop.body468:                                     ; preds = %loop.latch518, %loop.exit464
  %i.5 = phi i128 [ %sub467, %loop.exit464 ], [ %add520, %loop.latch518 ]
  %struct_getter470 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter471 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter470, align 8
  %array_getter473 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter471, i128 0, i128 0, i128 %i.5
  %cubic474 = load i128, i128* %array_getter473, align 4
  %struct_getter476 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter477 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter476, align 8
  %array_getter479 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter477, i128 0, i128 2, i128 %i.5
  %cubic480 = load i128, i128* %array_getter479, align 4
  %sub481 = sub i128 %cubic474, %cubic480
  %array_getter483 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 0
  %cubic_red484 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter483, align 8
  %struct_getter485 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red484, i32 0, i32 5
  %primereduce.in.read_input_outter486 = load [256 x i128]*, [256 x i128]** %struct_getter485, align 8
  %array_getter488 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter486, i128 0, i128 %i.5
  %cubic_red489 = load i128, i128* %array_getter488, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_red489, i128 %sub481, i1* @constraint.404)
  %array_getter491 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 0
  %cubic_red492 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter491, align 8
  %struct_getter493 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red492, i32 0, i32 5
  %primereduce.in.read_input_outter494 = load [256 x i128]*, [256 x i128]** %struct_getter493, align 8
  %cubic_red496 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter494, i128 0, i128 %i.5
  store i128 %sub481, i128* %cubic_red496, align 4
  %struct_getter498 = getelementptr inbounds %struct_template_circuit_bigmultshortlong2dunequal, %struct_template_circuit_bigmultshortlong2dunequal* %call252, i32 0, i32 7
  %bigmultshortlong2dunequal.out.read_output_outter499 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter498, align 8
  %array_getter501 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %bigmultshortlong2dunequal.out.read_output_outter499, i128 0, i128 1, i128 %i.5
  %cubic502 = load i128, i128* %array_getter501, align 4
  %array_getter504 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 1
  %cubic_red505 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter504, align 8
  %struct_getter506 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red505, i32 0, i32 5
  %primereduce.in.read_input_outter507 = load [256 x i128]*, [256 x i128]** %struct_getter506, align 8
  %array_getter509 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter507, i128 0, i128 %i.5
  %cubic_red510 = load i128, i128* %array_getter509, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_red510, i128 %cubic502, i1* @constraint.405)
  %array_getter512 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 1
  %cubic_red513 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter512, align 8
  %struct_getter514 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red513, i32 0, i32 5
  %primereduce.in.read_input_outter515 = load [256 x i128]*, [256 x i128]** %struct_getter514, align 8
  %cubic_red517 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter515, i128 0, i128 %i.5
  store i128 %cubic502, i128* %cubic_red517, align 4
  br label %loop.latch518

loop.latch518:                                    ; preds = %loop.body468
  %add520 = add i128 %i.5, 1
  %mul523 = mul i128 3, %ellipticcurveaddunequalfp2.k.read_arg_inner
  %sub524 = sub i128 %mul523, 2
  %slt525 = icmp slt i128 %add520, %sub524
  br i1 %slt525, label %loop.body468, label %loop.exit526

loop.exit526:                                     ; preds = %loop.latch518
  %mul530 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add532 = add i128 %mul530, %call26
  %add533 = add i128 %add532, 2
  %call535 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %add533, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %cubic_mod537 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod5, i128 0, i128 0
  store %struct_template_circuit_signedcheckcarrymodtozero* %call535, %struct_template_circuit_signedcheckcarrymodtozero** %cubic_mod537, align 8
  %mul541 = mul i128 4, %ellipticcurveaddunequalfp2.n.read_arg_inner
  %add543 = add i128 %mul541, %call26
  %add544 = add i128 %add543, 2
  %call546 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, i128 %add544, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  %cubic_mod548 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod5, i128 0, i128 1
  store %struct_template_circuit_signedcheckcarrymodtozero* %call546, %struct_template_circuit_signedcheckcarrymodtozero** %cubic_mod548, align 8
  br label %loop.body549

loop.body549:                                     ; preds = %loop.latch594, %loop.exit526
  %i.6 = phi i128 [ 0, %loop.exit526 ], [ %add596, %loop.latch594 ]
  %array_getter551 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 0
  %cubic_red552 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter551, align 8
  %struct_getter553 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red552, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter553, align 8
  %array_getter555 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.6
  %cubic_red556 = load i128, i128* %array_getter555, align 4
  %array_getter558 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod5, i128 0, i128 0
  %cubic_mod559 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter558, align 8
  %struct_getter560 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod559, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter560, align 8
  %array_getter562 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.6
  %cubic_mod563 = load i128, i128* %array_getter562, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_mod563, i128 %cubic_red556, i1* @constraint.406)
  %array_getter565 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod5, i128 0, i128 0
  %cubic_mod566 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter565, align 8
  %struct_getter567 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod566, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter568 = load [256 x i128]*, [256 x i128]** %struct_getter567, align 8
  %cubic_mod570 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter568, i128 0, i128 %i.6
  store i128 %cubic_red556, i128* %cubic_mod570, align 4
  %array_getter572 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %cubic_red9, i128 0, i128 1
  %cubic_red573 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter572, align 8
  %struct_getter574 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %cubic_red573, i32 0, i32 6
  %primereduce.out.read_output_outter575 = load [256 x i128]*, [256 x i128]** %struct_getter574, align 8
  %array_getter577 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter575, i128 0, i128 %i.6
  %cubic_red578 = load i128, i128* %array_getter577, align 4
  %array_getter580 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod5, i128 0, i128 1
  %cubic_mod581 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter580, align 8
  %struct_getter582 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod581, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter583 = load [256 x i128]*, [256 x i128]** %struct_getter582, align 8
  %array_getter585 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter583, i128 0, i128 %i.6
  %cubic_mod586 = load i128, i128* %array_getter585, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_mod586, i128 %cubic_red578, i1* @constraint.407)
  %array_getter588 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %cubic_mod5, i128 0, i128 1
  %cubic_mod589 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter588, align 8
  %struct_getter590 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %cubic_mod589, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter591 = load [256 x i128]*, [256 x i128]** %struct_getter590, align 8
  %cubic_mod593 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter591, i128 0, i128 %i.6
  store i128 %cubic_red578, i128* %cubic_mod593, align 4
  br label %loop.latch594

loop.latch594:                                    ; preds = %loop.body549
  %add596 = add i128 %i.6, 1
  %slt599 = icmp slt i128 %add596, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt599, label %loop.body549, label %loop.exit600

loop.exit600:                                     ; preds = %loop.latch594
  %call604 = call %struct_template_circuit_pointonlinefp2* @fn_template_build_pointonlinefp2(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddunequalfp2.p.read_arg_inner)
  br label %loop.body605

loop.body605:                                     ; preds = %loop.latch682, %loop.exit600
  %i.7 = phi i128 [ 0, %loop.exit600 ], [ %add684, %loop.latch682 ]
  br label %loop.body606

loop.body606:                                     ; preds = %loop.latch676, %loop.body605
  %j.1 = phi i128 [ 0, %loop.body605 ], [ %add678, %loop.latch676 ]
  br label %loop.body607

loop.body607:                                     ; preds = %loop.latch670, %loop.body606
  %ind.0 = phi i128 [ 0, %loop.body606 ], [ %add672, %loop.latch670 ]
  %array_getter612 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_inner, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %a613 = load i128, i128* %array_getter612, align 4
  %struct_getter615 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call604, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter615, align 8
  %array_getter619 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter, i128 0, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %y_constraint620 = load i128, i128* %array_getter619, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_constraint620, i128 %a613, i1* @constraint.408)
  %struct_getter622 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call604, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter623 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter622, align 8
  %y_constraint627 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter623, i128 0, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  store i128 %a613, i128* %y_constraint627, align 4
  %array_getter632 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_inner, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %b633 = load i128, i128* %array_getter632, align 4
  %struct_getter635 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call604, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter636 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter635, align 8
  %array_getter640 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter636, i128 0, i128 1, i128 %j.1, i128 %ind.0, i128 %i.7
  %y_constraint641 = load i128, i128* %array_getter640, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_constraint641, i128 %b633, i1* @constraint.409)
  %struct_getter643 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call604, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter644 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter643, align 8
  %y_constraint648 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter644, i128 0, i128 1, i128 %j.1, i128 %ind.0, i128 %i.7
  store i128 %b633, i128* %y_constraint648, align 4
  %array_getter653 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %j.1, i128 %ind.0, i128 %i.7
  %out654 = load i128, i128* %array_getter653, align 4
  %struct_getter656 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call604, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter657 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter656, align 8
  %array_getter661 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter657, i128 0, i128 2, i128 %j.1, i128 %ind.0, i128 %i.7
  %y_constraint662 = load i128, i128* %array_getter661, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_constraint662, i128 %out654, i1* @constraint.410)
  %struct_getter664 = getelementptr inbounds %struct_template_circuit_pointonlinefp2, %struct_template_circuit_pointonlinefp2* %call604, i32 0, i32 3
  %pointonlinefp2.in.read_input_outter665 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter664, align 8
  %y_constraint669 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointonlinefp2.in.read_input_outter665, i128 0, i128 2, i128 %j.1, i128 %ind.0, i128 %i.7
  store i128 %out654, i128* %y_constraint669, align 4
  br label %loop.latch670

loop.latch670:                                    ; preds = %loop.body607
  %add672 = add i128 %ind.0, 1
  %slt674 = icmp slt i128 %add672, 2
  br i1 %slt674, label %loop.body607, label %loop.exit675

loop.exit675:                                     ; preds = %loop.latch670
  br label %loop.latch676

loop.latch676:                                    ; preds = %loop.exit675
  %add678 = add i128 %j.1, 1
  %slt680 = icmp slt i128 %add678, 2
  br i1 %slt680, label %loop.body606, label %loop.exit681

loop.exit681:                                     ; preds = %loop.latch676
  br label %loop.latch682

loop.latch682:                                    ; preds = %loop.exit681
  %add684 = add i128 %i.7, 1
  %slt687 = icmp slt i128 %add684, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt687, label %loop.body605, label %loop.exit688

loop.exit688:                                     ; preds = %loop.latch682
  %call691 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %range_check693 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check7, i128 0, i128 0
  store %struct_template_circuit_rangecheck2d* %call691, %struct_template_circuit_rangecheck2d** %range_check693, align 8
  %call696 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurveaddunequalfp2.n.read_arg_inner, i128 %ellipticcurveaddunequalfp2.k.read_arg_inner)
  %range_check698 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check7, i128 0, i128 1
  store %struct_template_circuit_rangecheck2d* %call696, %struct_template_circuit_rangecheck2d** %range_check698, align 8
  br label %loop.body699

loop.body699:                                     ; preds = %loop.latch751, %loop.exit688
  %j.2 = phi i128 [ 0, %loop.exit688 ], [ %add753, %loop.latch751 ]
  br label %loop.body700

loop.body700:                                     ; preds = %loop.latch744, %loop.body699
  %i.8 = phi i128 [ 0, %loop.body699 ], [ %add746, %loop.latch744 ]
  %array_getter704 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 %j.2, i128 %i.8
  %out705 = load i128, i128* %array_getter704, align 4
  %array_getter707 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check7, i128 0, i128 0
  %range_check708 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter707, align 8
  %struct_getter709 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check708, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter709, align 8
  %array_getter712 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.2, i128 %i.8
  %range_check713 = load i128, i128* %array_getter712, align 4
  call void @fn_intrinsic_add_constraint(i128 %range_check713, i128 %out705, i1* @constraint.411)
  %array_getter715 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check7, i128 0, i128 0
  %range_check716 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter715, align 8
  %struct_getter717 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check716, i32 0, i32 2
  %rangecheck2d.in.read_input_outter718 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter717, align 8
  %range_check721 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter718, i128 0, i128 %j.2, i128 %i.8
  store i128 %out705, i128* %range_check721, align 4
  %array_getter725 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 1, i128 %j.2, i128 %i.8
  %out726 = load i128, i128* %array_getter725, align 4
  %array_getter728 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check7, i128 0, i128 1
  %range_check729 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter728, align 8
  %struct_getter730 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check729, i32 0, i32 2
  %rangecheck2d.in.read_input_outter731 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter730, align 8
  %array_getter734 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter731, i128 0, i128 %j.2, i128 %i.8
  %range_check735 = load i128, i128* %array_getter734, align 4
  call void @fn_intrinsic_add_constraint(i128 %range_check735, i128 %out726, i1* @constraint.412)
  %array_getter737 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check7, i128 0, i128 1
  %range_check738 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter737, align 8
  %struct_getter739 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check738, i32 0, i32 2
  %rangecheck2d.in.read_input_outter740 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter739, align 8
  %range_check743 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter740, i128 0, i128 %j.2, i128 %i.8
  store i128 %out726, i128* %range_check743, align 4
  br label %loop.latch744

loop.latch744:                                    ; preds = %loop.body700
  %add746 = add i128 %i.8, 1
  %slt749 = icmp slt i128 %add746, %ellipticcurveaddunequalfp2.k.read_arg_inner
  br i1 %slt749, label %loop.body700, label %loop.exit750

loop.exit750:                                     ; preds = %loop.latch744
  br label %loop.latch751

loop.latch751:                                    ; preds = %loop.exit750
  %add753 = add i128 %j.2, 1
  %slt755 = icmp slt i128 %add753, 2
  br i1 %slt755, label %loop.body699, label %loop.exit756

loop.exit756:                                     ; preds = %loop.latch751
  br label %exit

exit:                                             ; preds = %loop.exit756
  %ellipticcurveaddunequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurveaddunequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_ellipticcurveaddunequalfp2 = alloca %struct_template_circuit_ellipticcurveaddunequalfp2, align 8
  %ellipticcurveaddunequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveaddunequalfp2.n.write_arg_inner, align 4
  %ellipticcurveaddunequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveaddunequalfp2.k.write_arg_inner, align 4
  %ellipticcurveaddunequalfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurveaddunequalfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveaddunequalfp2* %struct_template_circuit_ellipticcurveaddunequalfp2
}

define void @fn_template_init_fp2frobeniusmap(%struct_template_circuit_fp2frobeniusmap* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 0
  %fp2frobeniusmap.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 1
  %fp2frobeniusmap.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 2
  %fp2frobeniusmap.power.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 3
  %fp2frobeniusmap.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %pow5 = call i128 @fn_intrinsic_inline_init()
  %i6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %mod = srem i128 %fp2frobeniusmap.power.read_arg_inner, 2
  %call = call %struct_template_circuit_fpnegate* @fn_template_build_fpnegate(i128 %fp2frobeniusmap.n.read_arg_inner, i128 %fp2frobeniusmap.k.read_arg_inner, [256 x i128]* %fp2frobeniusmap.p.read_arg_inner)
  %eq = icmp eq i128 %mod, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  br label %loop.body

if.false:                                         ; preds = %entry
  br label %loop.body30

loop.body:                                        ; preds = %loop.latch, %if.true
  %i.0 = phi i128 [ 0, %if.true ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_inner, i128 0, i128 0, i128 %i.0
  %in9 = load i128, i128* %array_getter, align 4
  %array_getter12 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.0
  %out13 = load i128, i128* %array_getter12, align 4
  call void @fn_intrinsic_add_constraint(i128 %out13, i128 %in9, i1* @constraint.413)
  %out15 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.0
  store i128 %in9, i128* %out15, align 4
  %array_getter18 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_inner, i128 0, i128 1, i128 %i.0
  %in19 = load i128, i128* %array_getter18, align 4
  %array_getter22 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.0
  %out23 = load i128, i128* %array_getter22, align 4
  call void @fn_intrinsic_add_constraint(i128 %out23, i128 %in19, i1* @constraint.414)
  %out26 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.0
  store i128 %in19, i128* %out26, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2frobeniusmap.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %if.exit

loop.body30:                                      ; preds = %loop.latch45, %if.false
  %i.1 = phi i128 [ 0, %if.false ], [ %add47, %loop.latch45 ]
  %array_getter33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_inner, i128 0, i128 1, i128 %i.1
  %in34 = load i128, i128* %array_getter33, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter36, align 8
  %array_getter38 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter, i128 0, i128 %i.1
  %neg139 = load i128, i128* %array_getter38, align 4
  call void @fn_intrinsic_add_constraint(i128 %neg139, i128 %in34, i1* @constraint.415)
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 3
  %fpnegate.in.read_input_outter42 = load [256 x i128]*, [256 x i128]** %struct_getter41, align 8
  %neg144 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.in.read_input_outter42, i128 0, i128 %i.1
  store i128 %in34, i128* %neg144, align 4
  br label %loop.latch45

loop.latch45:                                     ; preds = %loop.body30
  %add47 = add i128 %i.1, 1
  %slt50 = icmp slt i128 %add47, %fp2frobeniusmap.k.read_arg_inner
  br i1 %slt50, label %loop.body30, label %loop.exit51

loop.exit51:                                      ; preds = %loop.latch45
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch76, %loop.exit51
  %i.2 = phi i128 [ 0, %loop.exit51 ], [ %add78, %loop.latch76 ]
  %array_getter55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_inner, i128 0, i128 0, i128 %i.2
  %in56 = load i128, i128* %array_getter55, align 4
  %array_getter59 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.2
  %out60 = load i128, i128* %array_getter59, align 4
  call void @fn_intrinsic_add_constraint(i128 %out60, i128 %in56, i1* @constraint.416)
  %out63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.2
  store i128 %in56, i128* %out63, align 4
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_fpnegate, %struct_template_circuit_fpnegate* %call, i32 0, i32 4
  %fpnegate.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter65, align 8
  %array_getter67 = getelementptr inbounds [256 x i128], [256 x i128]* %fpnegate.out.read_output_outter, i128 0, i128 %i.2
  %neg168 = load i128, i128* %array_getter67, align 4
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.2
  %out72 = load i128, i128* %array_getter71, align 4
  call void @fn_intrinsic_add_constraint(i128 %out72, i128 %neg168, i1* @constraint.417)
  %out75 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.2
  store i128 %neg168, i128* %out75, align 4
  br label %loop.latch76

loop.latch76:                                     ; preds = %loop.body52
  %add78 = add i128 %i.2, 1
  %slt81 = icmp slt i128 %add78, %fp2frobeniusmap.k.read_arg_inner
  br i1 %slt81, label %loop.body52, label %loop.exit82

loop.exit82:                                      ; preds = %loop.latch76
  br label %if.exit

if.exit:                                          ; preds = %loop.exit82, %loop.exit
  br label %exit

exit:                                             ; preds = %if.exit
  %fp2frobeniusmap.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2frobeniusmap.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2frobeniusmap* @fn_template_build_fp2frobeniusmap(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_fp2frobeniusmap = alloca %struct_template_circuit_fp2frobeniusmap, align 8
  %fp2frobeniusmap.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 0
  store i128 %0, i128* %fp2frobeniusmap.n.write_arg_inner, align 4
  %fp2frobeniusmap.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 1
  store i128 %1, i128* %fp2frobeniusmap.k.write_arg_inner, align 4
  %fp2frobeniusmap.power.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 2
  store i128 %2, i128* %fp2frobeniusmap.power.write_arg_inner, align 4
  %fp2frobeniusmap.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp2frobeniusmap.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2frobeniusmap* %struct_template_circuit_fp2frobeniusmap
}

define void @fn_template_init_pointontangentfp2(%struct_template_circuit_pointontangentfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 0
  %pointontangentfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 1
  %pointontangentfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 2
  %pointontangentfp2.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 3
  %pointontangentfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %0, i32 0, i32 4
  %pointontangentfp2.in.read_input_inner = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter4, align 8
  %diff_red5 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %j7 = call i128 @fn_intrinsic_inline_init()
  %LOGK8 = call i128 @fn_intrinsic_inline_init()
  %LOGK39 = call i128 @fn_intrinsic_inline_init()
  %constraint10 = alloca [256 x %struct_template_circuit_signedcheckcarrymodtozero*], align 8
  %call = call i128 @log_ceil(i128 %pointontangentfp2.k.read_arg_inner)
  %mul = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub = sub i128 %mul, 1
  %mul13 = mul i128 12, %pointontangentfp2.k.read_arg_inner
  %mul15 = mul i128 %mul13, %pointontangentfp2.k.read_arg_inner
  %mul16 = mul i128 %sub, %mul15
  %add = add i128 %mul16, 1
  %call17 = call i128 @log_ceil(i128 %add)
  %mul21 = mul i128 2, %pointontangentfp2.n.read_arg_inner
  %add22 = add i128 %mul21, 1
  %add24 = add i128 %add22, %call
  %call25 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %add24)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch62, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add64, %loop.latch62 ]
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add59, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in29 = load i128, i128* %array_getter, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq35, i128 %in29, i1* @constraint.418)
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter37 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %x_sq40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter37, i128 0, i128 %i.0, i128 %j.0
  store i128 %in29, i128* %x_sq40, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.0, i128 %j.0
  %in45 = load i128, i128* %array_getter44, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter47, align 8
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0
  %x_sq51 = load i128, i128* %array_getter50, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq51, i128 %in45, i1* @constraint.419)
  %struct_getter53 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter54 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter53, align 8
  %x_sq57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter54, i128 0, i128 %i.0, i128 %j.0
  store i128 %in45, i128* %x_sq57, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body26
  %add59 = add i128 %j.0, 1
  %slt = icmp slt i128 %add59, %pointontangentfp2.k.read_arg_inner
  br i1 %slt, label %loop.body26, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.exit
  %add64 = add i128 %i.0, 1
  %slt66 = icmp slt i128 %add64, 2
  br i1 %slt66, label %loop.body, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch62
  %mul70 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub71 = sub i128 %mul70, 1
  %mul74 = mul i128 3, %pointontangentfp2.n.read_arg_inner
  %mul76 = mul i128 2, %call
  %add77 = add i128 %mul74, %mul76
  %add78 = add i128 %add77, 3
  %call79 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointontangentfp2.n.read_arg_inner, i128 %sub71, i128 %pointontangentfp2.k.read_arg_inner, i128 %add78)
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch160, %loop.exit67
  %i.1 = phi i128 [ 0, %loop.exit67 ], [ %add162, %loop.latch160 ]
  %eq = icmp eq i128 %i.1, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body80
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter83, align 8
  %array_getter85 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 0, i128 %i.1
  %x_sq86 = load i128, i128* %array_getter85, align 4
  %mul87 = mul i128 3, %x_sq86
  %array_getter88 = getelementptr inbounds [256 x i128], [256 x i128]* %pointontangentfp2.a.read_arg_inner, i128 0, i128 0
  %a89 = load i128, i128* %array_getter88, align 4
  %add90 = add i128 %mul87, %a89
  %struct_getter92 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter93 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter92, align 8
  %array_getter95 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter93, i128 0, i128 0, i128 %i.1
  %right96 = load i128, i128* %array_getter95, align 4
  call void @fn_intrinsic_add_constraint(i128 %right96, i128 %add90, i1* @constraint.420)
  %struct_getter98 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter99 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter98, align 8
  %right101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter99, i128 0, i128 0, i128 %i.1
  store i128 %add90, i128* %right101, align 4
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter104 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter103, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter104, i128 0, i128 1, i128 %i.1
  %x_sq107 = load i128, i128* %array_getter106, align 4
  %mul108 = mul i128 3, %x_sq107
  %array_getter110 = getelementptr inbounds [256 x i128], [256 x i128]* %pointontangentfp2.a.read_arg_inner, i128 0, i128 1
  %a111 = load i128, i128* %array_getter110, align 4
  %add112 = add i128 %mul108, %a111
  %struct_getter114 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter115 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter114, align 8
  %array_getter117 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter115, i128 0, i128 1, i128 %i.1
  %right118 = load i128, i128* %array_getter117, align 4
  call void @fn_intrinsic_add_constraint(i128 %right118, i128 %add112, i1* @constraint.421)
  %struct_getter120 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter121 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter120, align 8
  %right123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter121, i128 0, i128 1, i128 %i.1
  store i128 %add112, i128* %right123, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body80
  %struct_getter125 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter126 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter125, align 8
  %array_getter128 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter126, i128 0, i128 0, i128 %i.1
  %x_sq129 = load i128, i128* %array_getter128, align 4
  %mul130 = mul i128 3, %x_sq129
  %struct_getter132 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter133 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter132, align 8
  %array_getter135 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter133, i128 0, i128 0, i128 %i.1
  %right136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_add_constraint(i128 %right136, i128 %mul130, i1* @constraint.422)
  %struct_getter138 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter139 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter138, align 8
  %right141 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter139, i128 0, i128 0, i128 %i.1
  store i128 %mul130, i128* %right141, align 4
  %struct_getter143 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call25, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter144 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter143, align 8
  %array_getter146 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter144, i128 0, i128 1, i128 %i.1
  %x_sq147 = load i128, i128* %array_getter146, align 4
  %mul148 = mul i128 3, %x_sq147
  %struct_getter150 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter151 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter150, align 8
  %array_getter153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter151, i128 0, i128 1, i128 %i.1
  %right154 = load i128, i128* %array_getter153, align 4
  call void @fn_intrinsic_add_constraint(i128 %right154, i128 %mul148, i1* @constraint.423)
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter157 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter156, align 8
  %right159 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter157, i128 0, i128 1, i128 %i.1
  store i128 %mul148, i128* %right159, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch160

loop.latch160:                                    ; preds = %if.exit
  %add162 = add i128 %i.1, 1
  %mul165 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub166 = sub i128 %mul165, 1
  %slt167 = icmp slt i128 %add162, %sub166
  br i1 %slt167, label %loop.body80, label %loop.exit168

loop.exit168:                                     ; preds = %loop.latch160
  br label %loop.body169

loop.body169:                                     ; preds = %loop.latch210, %loop.exit168
  %i.2 = phi i128 [ 0, %loop.exit168 ], [ %add212, %loop.latch210 ]
  %array_getter172 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 0, i128 %i.2
  %in173 = load i128, i128* %array_getter172, align 4
  %array_getter176 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 1, i128 0, i128 0, i128 %i.2
  %in177 = load i128, i128* %array_getter176, align 4
  %sub178 = sub i128 %in173, %in177
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter181 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter180, align 8
  %array_getter183 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter181, i128 0, i128 0, i128 %i.2
  %right184 = load i128, i128* %array_getter183, align 4
  call void @fn_intrinsic_add_constraint(i128 %right184, i128 %sub178, i1* @constraint.424)
  %struct_getter186 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter187 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter186, align 8
  %right189 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter187, i128 0, i128 0, i128 %i.2
  store i128 %sub178, i128* %right189, align 4
  %array_getter192 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 0, i128 1, i128 %i.2
  %in193 = load i128, i128* %array_getter192, align 4
  %array_getter196 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 1, i128 0, i128 1, i128 %i.2
  %in197 = load i128, i128* %array_getter196, align 4
  %sub198 = sub i128 %in193, %in197
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter201 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter200, align 8
  %array_getter203 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter201, i128 0, i128 1, i128 %i.2
  %right204 = load i128, i128* %array_getter203, align 4
  call void @fn_intrinsic_add_constraint(i128 %right204, i128 %sub198, i1* @constraint.425)
  %struct_getter206 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter207 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter206, align 8
  %right209 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter207, i128 0, i128 1, i128 %i.2
  store i128 %sub198, i128* %right209, align 4
  br label %loop.latch210

loop.latch210:                                    ; preds = %loop.body169
  %add212 = add i128 %i.2, 1
  %slt215 = icmp slt i128 %add212, %pointontangentfp2.k.read_arg_inner
  br i1 %slt215, label %loop.body169, label %loop.exit216

loop.exit216:                                     ; preds = %loop.latch210
  %mul221 = mul i128 2, %pointontangentfp2.n.read_arg_inner
  %add222 = add i128 %mul221, 3
  %add224 = add i128 %add222, %call
  %call225 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %add224)
  br label %loop.body226

loop.body226:                                     ; preds = %loop.latch299, %loop.exit216
  %i.3 = phi i128 [ 0, %loop.exit216 ], [ %add301, %loop.latch299 ]
  %array_getter229 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 0, i128 %i.3
  %in230 = load i128, i128* %array_getter229, align 4
  %mul231 = mul i128 2, %in230
  %struct_getter233 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter234 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter233, align 8
  %array_getter236 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter234, i128 0, i128 0, i128 %i.3
  %left237 = load i128, i128* %array_getter236, align 4
  call void @fn_intrinsic_add_constraint(i128 %left237, i128 %mul231, i1* @constraint.426)
  %struct_getter239 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter240 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter239, align 8
  %left242 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter240, i128 0, i128 0, i128 %i.3
  store i128 %mul231, i128* %left242, align 4
  %array_getter245 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 1, i128 %i.3
  %in246 = load i128, i128* %array_getter245, align 4
  %mul247 = mul i128 2, %in246
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter250 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter249, align 8
  %array_getter252 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter250, i128 0, i128 1, i128 %i.3
  %left253 = load i128, i128* %array_getter252, align 4
  call void @fn_intrinsic_add_constraint(i128 %left253, i128 %mul247, i1* @constraint.427)
  %struct_getter255 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter256 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter255, align 8
  %left258 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter256, i128 0, i128 1, i128 %i.3
  store i128 %mul247, i128* %left258, align 4
  %array_getter261 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 0, i128 %i.3
  %in262 = load i128, i128* %array_getter261, align 4
  %array_getter265 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 1, i128 1, i128 0, i128 %i.3
  %in266 = load i128, i128* %array_getter265, align 4
  %add267 = add i128 %in262, %in266
  %struct_getter269 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter270 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter269, align 8
  %array_getter272 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter270, i128 0, i128 0, i128 %i.3
  %left273 = load i128, i128* %array_getter272, align 4
  call void @fn_intrinsic_add_constraint(i128 %left273, i128 %add267, i1* @constraint.428)
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter276 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter275, align 8
  %left278 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter276, i128 0, i128 0, i128 %i.3
  store i128 %add267, i128* %left278, align 4
  %array_getter281 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 0, i128 1, i128 1, i128 %i.3
  %in282 = load i128, i128* %array_getter281, align 4
  %array_getter285 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_inner, i128 0, i128 1, i128 1, i128 1, i128 %i.3
  %in286 = load i128, i128* %array_getter285, align 4
  %add287 = add i128 %in282, %in286
  %struct_getter289 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter290 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter289, align 8
  %array_getter292 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter290, i128 0, i128 1, i128 %i.3
  %left293 = load i128, i128* %array_getter292, align 4
  call void @fn_intrinsic_add_constraint(i128 %left293, i128 %add287, i1* @constraint.429)
  %struct_getter295 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter296 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter295, align 8
  %left298 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter296, i128 0, i128 1, i128 %i.3
  store i128 %add287, i128* %left298, align 4
  br label %loop.latch299

loop.latch299:                                    ; preds = %loop.body226
  %add301 = add i128 %i.3, 1
  %slt304 = icmp slt i128 %add301, %pointontangentfp2.k.read_arg_inner
  br i1 %slt304, label %loop.body226, label %loop.exit305

loop.exit305:                                     ; preds = %loop.latch299
  br label %loop.body306

loop.body306:                                     ; preds = %loop.latch393, %loop.exit305
  %i.4 = phi i128 [ 0, %loop.exit305 ], [ %add395, %loop.latch393 ]
  %mul310 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub311 = sub i128 %mul310, 2
  %mul313 = mul i128 4, %pointontangentfp2.n.read_arg_inner
  %add315 = add i128 %mul313, %call17
  %call316 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %sub311, [256 x i128]* %pointontangentfp2.p.read_arg_inner, i128 %add315)
  %diff_red319 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red5, i128 0, i128 %i.4
  store %struct_template_circuit_primereduce* %call316, %struct_template_circuit_primereduce** %diff_red319, align 8
  br label %loop.body320

loop.body320:                                     ; preds = %loop.latch384, %loop.body306
  %j.1 = phi i128 [ 0, %loop.body306 ], [ %add386, %loop.latch384 ]
  %mul325 = mul i128 2, %pointontangentfp2.k.read_arg_inner
  %sub326 = sub i128 %mul325, 1
  %slt327 = icmp slt i128 %j.1, %sub326
  br i1 %slt327, label %if.true321, label %if.false322

if.true321:                                       ; preds = %loop.body320
  %struct_getter329 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter330 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter329, align 8
  %array_getter333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter330, i128 0, i128 %i.4, i128 %j.1
  %right334 = load i128, i128* %array_getter333, align 4
  %struct_getter336 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call225, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter337 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter336, align 8
  %array_getter340 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter337, i128 0, i128 %i.4, i128 %j.1
  %left341 = load i128, i128* %array_getter340, align 4
  %sub342 = sub i128 %right334, %left341
  %array_getter345 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red5, i128 0, i128 %i.4
  %diff_red346 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter345, align 8
  %struct_getter347 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red346, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter347, align 8
  %array_getter349 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %j.1
  %diff_red350 = load i128, i128* %array_getter349, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red350, i128 %sub342, i1* @constraint.430)
  %array_getter353 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red5, i128 0, i128 %i.4
  %diff_red354 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter353, align 8
  %struct_getter355 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red354, i32 0, i32 5
  %primereduce.in.read_input_outter356 = load [256 x i128]*, [256 x i128]** %struct_getter355, align 8
  %diff_red358 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter356, i128 0, i128 %j.1
  store i128 %sub342, i128* %diff_red358, align 4
  br label %if.exit383

if.false322:                                      ; preds = %loop.body320
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call79, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter361 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter360, align 8
  %array_getter364 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter361, i128 0, i128 %i.4, i128 %j.1
  %right365 = load i128, i128* %array_getter364, align 4
  %array_getter368 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red5, i128 0, i128 %i.4
  %diff_red369 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter368, align 8
  %struct_getter370 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red369, i32 0, i32 5
  %primereduce.in.read_input_outter371 = load [256 x i128]*, [256 x i128]** %struct_getter370, align 8
  %array_getter373 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter371, i128 0, i128 %j.1
  %diff_red374 = load i128, i128* %array_getter373, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red374, i128 %right365, i1* @constraint.431)
  %array_getter377 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red5, i128 0, i128 %i.4
  %diff_red378 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter377, align 8
  %struct_getter379 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red378, i32 0, i32 5
  %primereduce.in.read_input_outter380 = load [256 x i128]*, [256 x i128]** %struct_getter379, align 8
  %diff_red382 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter380, i128 0, i128 %j.1
  store i128 %right365, i128* %diff_red382, align 4
  br label %if.exit383

if.exit383:                                       ; preds = %if.false322, %if.true321
  br label %loop.latch384

loop.latch384:                                    ; preds = %if.exit383
  %add386 = add i128 %j.1, 1
  %mul389 = mul i128 3, %pointontangentfp2.k.read_arg_inner
  %sub390 = sub i128 %mul389, 2
  %slt391 = icmp slt i128 %add386, %sub390
  br i1 %slt391, label %loop.body320, label %loop.exit392

loop.exit392:                                     ; preds = %loop.latch384
  br label %loop.latch393

loop.latch393:                                    ; preds = %loop.exit392
  %add395 = add i128 %i.4, 1
  %slt397 = icmp slt i128 %add395, 2
  br i1 %slt397, label %loop.body306, label %loop.exit398

loop.exit398:                                     ; preds = %loop.latch393
  br label %loop.body399

loop.body399:                                     ; preds = %loop.latch443, %loop.exit398
  %i.5 = phi i128 [ 0, %loop.exit398 ], [ %add445, %loop.latch443 ]
  %mul403 = mul i128 4, %pointontangentfp2.n.read_arg_inner
  %add405 = add i128 %mul403, %call17
  %call407 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointontangentfp2.n.read_arg_inner, i128 %pointontangentfp2.k.read_arg_inner, i128 %add405, [256 x i128]* %pointontangentfp2.p.read_arg_inner)
  %constraint410 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint10, i128 0, i128 %i.5
  store %struct_template_circuit_signedcheckcarrymodtozero* %call407, %struct_template_circuit_signedcheckcarrymodtozero** %constraint410, align 8
  br label %loop.body411

loop.body411:                                     ; preds = %loop.latch436, %loop.body399
  %j.2 = phi i128 [ 0, %loop.body399 ], [ %add438, %loop.latch436 ]
  %array_getter414 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %diff_red5, i128 0, i128 %i.5
  %diff_red415 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter414, align 8
  %struct_getter416 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %diff_red415, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter416, align 8
  %array_getter418 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %j.2
  %diff_red419 = load i128, i128* %array_getter418, align 4
  %array_getter422 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint10, i128 0, i128 %i.5
  %constraint423 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter422, align 8
  %struct_getter424 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint423, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter424, align 8
  %array_getter426 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %j.2
  %constraint427 = load i128, i128* %array_getter426, align 4
  call void @fn_intrinsic_add_constraint(i128 %constraint427, i128 %diff_red419, i1* @constraint.432)
  %array_getter430 = getelementptr inbounds [256 x %struct_template_circuit_signedcheckcarrymodtozero*], [256 x %struct_template_circuit_signedcheckcarrymodtozero*]* %constraint10, i128 0, i128 %i.5
  %constraint431 = load %struct_template_circuit_signedcheckcarrymodtozero*, %struct_template_circuit_signedcheckcarrymodtozero** %array_getter430, align 8
  %struct_getter432 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %constraint431, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter433 = load [256 x i128]*, [256 x i128]** %struct_getter432, align 8
  %constraint435 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter433, i128 0, i128 %j.2
  store i128 %diff_red419, i128* %constraint435, align 4
  br label %loop.latch436

loop.latch436:                                    ; preds = %loop.body411
  %add438 = add i128 %j.2, 1
  %slt441 = icmp slt i128 %add438, %pointontangentfp2.k.read_arg_inner
  br i1 %slt441, label %loop.body411, label %loop.exit442

loop.exit442:                                     ; preds = %loop.latch436
  br label %loop.latch443

loop.latch443:                                    ; preds = %loop.exit442
  %add445 = add i128 %i.5, 1
  %slt447 = icmp slt i128 %add445, 2
  br i1 %slt447, label %loop.body399, label %loop.exit448

loop.exit448:                                     ; preds = %loop.latch443
  br label %exit

exit:                                             ; preds = %loop.exit448
  ret void
}

define %struct_template_circuit_pointontangentfp2* @fn_template_build_pointontangentfp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_pointontangentfp2 = alloca %struct_template_circuit_pointontangentfp2, align 8
  %pointontangentfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 0
  store i128 %0, i128* %pointontangentfp2.n.write_arg_inner, align 4
  %pointontangentfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 1
  store i128 %1, i128* %pointontangentfp2.k.write_arg_inner, align 4
  %pointontangentfp2.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointontangentfp2.a.write_arg_inner, align 8
  %pointontangentfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %pointontangentfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointontangentfp2* %struct_template_circuit_pointontangentfp2
}

define [256 x [256 x [256 x i128]]]* @find_Fp6_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %5) {
entry:
  %m24 = call i128 @fn_intrinsic_inline_init()
  %i27 = call i128 @fn_intrinsic_inline_init()
  %j31 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %call = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %3, [256 x i128]* %2)
  %call38 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %4, [256 x i128]* %2)
  %call43 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %5, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %call49 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %4, [256 x i128]* %2)
  %call55 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %call61 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %call67 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call49, [256 x [256 x i128]]* %5, [256 x i128]* %2)
  %uniform_array68 = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch81, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add83, %loop.latch81 ]
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %eq = icmp eq i128 %j.0, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body69
  %v373 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array68, i128 0, i128 %i.0, i128 %j.0
  store i128 1, i128* %v373, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body69
  %v377 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array68, i128 0, i128 %i.0, i128 %j.0
  store i128 0, i128* %v377, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %1
  br i1 %slt, label %loop.body69, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch81

loop.latch81:                                     ; preds = %loop.exit
  %add83 = add i128 %i.0, 1
  %slt85 = icmp slt i128 %add83, 2
  br i1 %slt85, label %loop.body, label %loop.exit86

loop.exit86:                                      ; preds = %loop.latch81
  %uniform_array87 = alloca [256 x [256 x i128]], align 8
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch110, %loop.exit86
  %i.1 = phi i128 [ 0, %loop.exit86 ], [ %add112, %loop.latch110 ]
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch103, %loop.body88
  %j.1 = phi i128 [ 0, %loop.body88 ], [ %add105, %loop.latch103 ]
  %eq93 = icmp eq i128 %j.1, 0
  br i1 %eq93, label %if.true90, label %if.false91

if.true90:                                        ; preds = %loop.body89
  %three_v397 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array87, i128 0, i128 %i.1, i128 %j.1
  store i128 3, i128* %three_v397, align 4
  br label %if.exit102

if.false91:                                       ; preds = %loop.body89
  %three_v3101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array87, i128 0, i128 %i.1, i128 %j.1
  store i128 0, i128* %three_v3101, align 4
  br label %if.exit102

if.exit102:                                       ; preds = %if.false91, %if.true90
  br label %loop.latch103

loop.latch103:                                    ; preds = %if.exit102
  %add105 = add i128 %j.1, 1
  %slt108 = icmp slt i128 %add105, %1
  br i1 %slt108, label %loop.body89, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch103
  br label %loop.latch110

loop.latch110:                                    ; preds = %loop.exit109
  %add112 = add i128 %i.1, 1
  %slt114 = icmp slt i128 %add112, 2
  br i1 %slt114, label %loop.body88, label %loop.exit115

loop.exit115:                                     ; preds = %loop.latch110
  %uniform_array116 = alloca [256 x [256 x i128]], align 8
  br label %loop.body117

loop.body117:                                     ; preds = %loop.latch141, %loop.exit115
  %i.2 = phi i128 [ 0, %loop.exit115 ], [ %add143, %loop.latch141 ]
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch134, %loop.body117
  %j.2 = phi i128 [ 0, %loop.body117 ], [ %add136, %loop.latch134 ]
  %eq122 = icmp eq i128 %i.2, 1
  %eq124 = icmp eq i128 %j.2, 0
  %and = and i1 %eq122, %eq124
  br i1 %and, label %if.true119, label %if.false120

if.true119:                                       ; preds = %loop.body118
  %v6128 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array116, i128 0, i128 %i.2, i128 %j.2
  store i128 2, i128* %v6128, align 4
  br label %if.exit133

if.false120:                                      ; preds = %loop.body118
  %v6132 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array116, i128 0, i128 %i.2, i128 %j.2
  store i128 0, i128* %v6132, align 4
  br label %if.exit133

if.exit133:                                       ; preds = %if.false120, %if.true119
  br label %loop.latch134

loop.latch134:                                    ; preds = %if.exit133
  %add136 = add i128 %j.2, 1
  %slt139 = icmp slt i128 %add136, %1
  br i1 %slt139, label %loop.body118, label %loop.exit140

loop.exit140:                                     ; preds = %loop.latch134
  br label %loop.latch141

loop.latch141:                                    ; preds = %loop.exit140
  %add143 = add i128 %i.2, 1
  %slt145 = icmp slt i128 %add143, 2
  br i1 %slt145, label %loop.body117, label %loop.exit146

loop.exit146:                                     ; preds = %loop.latch141
  %call152 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call61, [256 x [256 x i128]]* %uniform_array68, [256 x i128]* %2)
  %call158 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call, [256 x [256 x i128]]* %call152, [256 x i128]* %2)
  %call164 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call43, [256 x [256 x i128]]* %uniform_array68, [256 x i128]* %2)
  %call170 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call164, [256 x [256 x i128]]* %call49, [256 x i128]* %2)
  %call176 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call38, [256 x [256 x i128]]* %call55, [256 x i128]* %2)
  %call182 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %3, [256 x [256 x i128]]* %call, [256 x i128]* %2)
  %call188 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %4, [256 x [256 x i128]]* %call38, [256 x i128]* %2)
  %call194 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %5, [256 x [256 x i128]]* %call43, [256 x i128]* %2)
  %call200 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call188, [256 x [256 x i128]]* %uniform_array68, [256 x i128]* %2)
  %call206 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call194, [256 x [256 x i128]]* %uniform_array116, [256 x i128]* %2)
  %call212 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call67, [256 x [256 x i128]]* %uniform_array87, [256 x i128]* %2)
  %call218 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %call182, [256 x [256 x i128]]* %call200, [256 x i128]* %2)
  %call224 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %0, i128 %1, [256 x [256 x i128]]* %call206, [256 x [256 x i128]]* %call212, [256 x i128]* %2)
  %call230 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %0, i128 %1, [256 x [256 x i128]]* %call218, [256 x [256 x i128]]* %call224, [256 x i128]* %2)
  %call235 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %0, i128 %1, [256 x [256 x i128]]* %call230, [256 x i128]* %2)
  %call241 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call158, [256 x [256 x i128]]* %call235, [256 x i128]* %2)
  %call247 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call170, [256 x [256 x i128]]* %call235, [256 x i128]* %2)
  %call253 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %0, i128 %1, [256 x [256 x i128]]* %call176, [256 x [256 x i128]]* %call235, [256 x i128]* %2)
  br label %loop.body254

loop.body254:                                     ; preds = %loop.latch283, %loop.exit146
  %i.3 = phi i128 [ 1, %loop.exit146 ], [ %add285, %loop.latch283 ]
  br label %loop.body255

loop.body255:                                     ; preds = %loop.latch277, %loop.body254
  %j.3 = phi i128 [ 0, %loop.body254 ], [ %add279, %loop.latch277 ]
  br label %loop.body256

loop.body256:                                     ; preds = %loop.latch271, %loop.body255
  %m.0 = phi i128 [ 0, %loop.body255 ], [ %add273, %loop.latch271 ]
  %sgt = icmp sgt i128 %i.3, 1
  br i1 %sgt, label %if.true257, label %if.false258

if.true257:                                       ; preds = %loop.body256
  %out264 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.3, i128 %j.3, i128 %m.0
  store i128 0, i128* %out264, align 4
  br label %if.exit270

if.false258:                                      ; preds = %loop.body256
  %out269 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %i.3, i128 %j.3, i128 %m.0
  store i128 0, i128* %out269, align 4
  br label %if.exit270

if.exit270:                                       ; preds = %if.false258, %if.true257
  br label %loop.latch271

loop.latch271:                                    ; preds = %if.exit270
  %add273 = add i128 %m.0, 1
  %slt275 = icmp slt i128 %add273, 50
  br i1 %slt275, label %loop.body256, label %loop.exit276

loop.exit276:                                     ; preds = %loop.latch271
  br label %loop.latch277

loop.latch277:                                    ; preds = %loop.exit276
  %add279 = add i128 %j.3, 1
  %slt281 = icmp slt i128 %add279, 2
  br i1 %slt281, label %loop.body255, label %loop.exit282

loop.exit282:                                     ; preds = %loop.latch277
  br label %loop.latch283

loop.latch283:                                    ; preds = %loop.exit282
  %add285 = add i128 %i.3, 2
  %slt287 = icmp slt i128 %add285, 6
  br i1 %slt287, label %loop.body254, label %loop.exit288

loop.exit288:                                     ; preds = %loop.latch283
  %out291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 0
  %6 = bitcast [256 x [256 x i128]]* %out291 to i8*
  %7 = bitcast [256 x [256 x i128]]* %call241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  %out294 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 2
  %8 = bitcast [256 x [256 x i128]]* %out294 to i8*
  %9 = bitcast [256 x [256 x i128]]* %call247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  %out297 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 4
  %10 = bitcast [256 x [256 x i128]]* %out297 to i8*
  %11 = bitcast [256 x [256 x i128]]* %call253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i64), i1 false)
  ret [256 x [256 x [256 x i128]]]* %uniform_array
}

define void @fn_template_init_fp2compress(%struct_template_circuit_fp2compress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 0
  %fp2compress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 1
  %fp2compress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 2
  %fp2compress.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 3
  %fp2compress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 4
  %fp2compress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 5
  %fp2compress.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %c7 = alloca [256 x %struct_template_circuit_primereduce*], align 8
  %j8 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  br label %loop.body

loop.body:                                        ; preds = %loop.latch36, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add38, %loop.latch36 ]
  %call = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %fp2compress.n.read_arg_inner, i128 %fp2compress.k.read_arg_inner, i128 %fp2compress.m.read_arg_inner, [256 x i128]* %fp2compress.p.read_arg_inner, i128 %fp2compress.m_out.read_arg_inner)
  %c10 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %c7, i128 0, i128 %i.0
  store %struct_template_circuit_primereduce* %call, %struct_template_circuit_primereduce** %c10, align 8
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_inner, i128 0, i128 %i.0, i128 %j.0
  %in14 = load i128, i128* %array_getter, align 4
  %array_getter17 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %c7, i128 0, i128 %i.0
  %c18 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter17, align 8
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %c18, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %j.0
  %c22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_add_constraint(i128 %c22, i128 %in14, i1* @constraint.433)
  %array_getter25 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %c7, i128 0, i128 %i.0
  %c26 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter25, align 8
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %c26, i32 0, i32 5
  %primereduce.in.read_input_outter28 = load [256 x i128]*, [256 x i128]** %struct_getter27, align 8
  %c30 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter28, i128 0, i128 %j.0
  store i128 %in14, i128* %c30, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add = add i128 %j.0, 1
  %add35 = add i128 %fp2compress.k.read_arg_inner, %fp2compress.m.read_arg_inner
  %slt = icmp slt i128 %add, %add35
  br i1 %slt, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch36

loop.latch36:                                     ; preds = %loop.exit
  %add38 = add i128 %i.0, 1
  %slt40 = icmp slt i128 %add38, 2
  br i1 %slt40, label %loop.body, label %loop.exit41

loop.exit41:                                      ; preds = %loop.latch36
  br label %loop.body42

loop.body42:                                      ; preds = %loop.latch68, %loop.exit41
  %i.1 = phi i128 [ 0, %loop.exit41 ], [ %add70, %loop.latch68 ]
  br label %loop.body43

loop.body43:                                      ; preds = %loop.latch61, %loop.body42
  %j.1 = phi i128 [ 0, %loop.body42 ], [ %add63, %loop.latch61 ]
  %array_getter46 = getelementptr inbounds [256 x %struct_template_circuit_primereduce*], [256 x %struct_template_circuit_primereduce*]* %c7, i128 0, i128 %i.1
  %c47 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter46, align 8
  %struct_getter48 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %c47, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter48, align 8
  %array_getter50 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %j.1
  %c51 = load i128, i128* %array_getter50, align 4
  %array_getter55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  %out56 = load i128, i128* %array_getter55, align 4
  call void @fn_intrinsic_add_constraint(i128 %out56, i128 %c51, i1* @constraint.434)
  %out60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  store i128 %c51, i128* %out60, align 4
  br label %loop.latch61

loop.latch61:                                     ; preds = %loop.body43
  %add63 = add i128 %j.1, 1
  %slt66 = icmp slt i128 %add63, %fp2compress.k.read_arg_inner
  br i1 %slt66, label %loop.body43, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch61
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit67
  %add70 = add i128 %i.1, 1
  %slt72 = icmp slt i128 %add70, 2
  br i1 %slt72, label %loop.body42, label %loop.exit73

loop.exit73:                                      ; preds = %loop.latch68
  br label %exit

exit:                                             ; preds = %loop.exit73
  %fp2compress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2compress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, i128 %4) {
entry:
  %struct_template_circuit_fp2compress = alloca %struct_template_circuit_fp2compress, align 8
  %fp2compress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 0
  store i128 %0, i128* %fp2compress.n.write_arg_inner, align 4
  %fp2compress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 1
  store i128 %1, i128* %fp2compress.k.write_arg_inner, align 4
  %fp2compress.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 2
  store i128 %2, i128* %fp2compress.m.write_arg_inner, align 4
  %fp2compress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp2compress.p.write_arg_inner, align 8
  %fp2compress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress, i32 0, i32 4
  store i128 %4, i128* %fp2compress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_fp2compress* %struct_template_circuit_fp2compress
}

define void @fn_template_init_pointonline(%struct_template_circuit_pointonline* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 0
  %pointonline.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 1
  %pointonline.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 2
  %pointonline.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %0, i32 0, i32 3
  %pointonline.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %i4 = call i128 @fn_intrinsic_inline_init()
  %LOGK25 = call i128 @fn_intrinsic_inline_init()
  %LOGK6 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %pointonline.k.read_arg_inner)
  %mul = mul i128 3, %pointonline.k.read_arg_inner
  %mul9 = mul i128 %mul, %pointonline.k.read_arg_inner
  %call10 = call i128 @log_ceil(i128 %mul9)
  %mul13 = mul i128 2, %pointonline.n.read_arg_inner
  %add = add i128 %mul13, %call
  %add15 = add i128 %add, 1
  %call16 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %add15)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add52, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.0
  %in18 = load i128, i128* %array_getter, align 4
  %array_getter21 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 2, i128 1, i128 %i.0
  %in22 = load i128, i128* %array_getter21, align 4
  %add23 = add i128 %in18, %in22
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call16, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %left28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_add_constraint(i128 %left28, i128 %add23, i1* @constraint.435)
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call16, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter30 = load [256 x i128]*, [256 x i128]** %struct_getter29, align 8
  %left32 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter30, i128 0, i128 %i.0
  store i128 %add23, i128* %left32, align 4
  %array_getter35 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 1, i128 0, i128 %i.0
  %in36 = load i128, i128* %array_getter35, align 4
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.0
  %in40 = load i128, i128* %array_getter39, align 4
  %sub = sub i128 %in36, %in40
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call16, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter42, align 8
  %array_getter44 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %left45 = load i128, i128* %array_getter44, align 4
  call void @fn_intrinsic_add_constraint(i128 %left45, i128 %sub, i1* @constraint.436)
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call16, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter48 = load [256 x i128]*, [256 x i128]** %struct_getter47, align 8
  %left50 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter48, i128 0, i128 %i.0
  store i128 %sub, i128* %left50, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add52 = add i128 %i.0, 1
  %slt = icmp slt i128 %add52, %pointonline.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul58 = mul i128 2, %pointonline.n.read_arg_inner
  %add60 = add i128 %mul58, %call
  %call61 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %add60)
  br label %loop.body62

loop.body62:                                      ; preds = %loop.latch103, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add105, %loop.latch103 ]
  %array_getter65 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 1, i128 1, i128 %i.1
  %in66 = load i128, i128* %array_getter65, align 4
  %array_getter69 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.1
  %in70 = load i128, i128* %array_getter69, align 4
  %sub71 = sub i128 %in66, %in70
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call61, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter74 = load [256 x i128]*, [256 x i128]** %struct_getter73, align 8
  %array_getter76 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter74, i128 0, i128 %i.1
  %right77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %right77, i128 %sub71, i1* @constraint.437)
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call61, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter80 = load [256 x i128]*, [256 x i128]** %struct_getter79, align 8
  %right82 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter80, i128 0, i128 %i.1
  store i128 %sub71, i128* %right82, align 4
  %array_getter85 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.1
  %in86 = load i128, i128* %array_getter85, align 4
  %array_getter89 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_inner, i128 0, i128 2, i128 0, i128 %i.1
  %in90 = load i128, i128* %array_getter89, align 4
  %sub91 = sub i128 %in86, %in90
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call61, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter94 = load [256 x i128]*, [256 x i128]** %struct_getter93, align 8
  %array_getter96 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter94, i128 0, i128 %i.1
  %right97 = load i128, i128* %array_getter96, align 4
  call void @fn_intrinsic_add_constraint(i128 %right97, i128 %sub91, i1* @constraint.438)
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call61, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter100 = load [256 x i128]*, [256 x i128]** %struct_getter99, align 8
  %right102 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter100, i128 0, i128 %i.1
  store i128 %sub91, i128* %right102, align 4
  br label %loop.latch103

loop.latch103:                                    ; preds = %loop.body62
  %add105 = add i128 %i.1, 1
  %slt108 = icmp slt i128 %add105, %pointonline.k.read_arg_inner
  br i1 %slt108, label %loop.body62, label %loop.exit109

loop.exit109:                                     ; preds = %loop.latch103
  %sub113 = sub i128 %pointonline.k.read_arg_inner, 1
  %mul115 = mul i128 3, %pointonline.n.read_arg_inner
  %add117 = add i128 %mul115, %call10
  %call118 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %sub113, [256 x i128]* %pointonline.p.read_arg_inner, i128 %add117)
  br label %loop.body119

loop.body119:                                     ; preds = %loop.latch142, %loop.exit109
  %i.2 = phi i128 [ 0, %loop.exit109 ], [ %add144, %loop.latch142 ]
  %struct_getter121 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call16, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter121, align 8
  %array_getter123 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.2
  %left124 = load i128, i128* %array_getter123, align 4
  %struct_getter126 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call61, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter127 = load [256 x i128]*, [256 x i128]** %struct_getter126, align 8
  %array_getter129 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter127, i128 0, i128 %i.2
  %right130 = load i128, i128* %array_getter129, align 4
  %sub131 = sub i128 %left124, %right130
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call118, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter133, align 8
  %array_getter135 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.2
  %diff_red136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red136, i128 %sub131, i1* @constraint.439)
  %struct_getter138 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call118, i32 0, i32 5
  %primereduce.in.read_input_outter139 = load [256 x i128]*, [256 x i128]** %struct_getter138, align 8
  %diff_red141 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter139, i128 0, i128 %i.2
  store i128 %sub131, i128* %diff_red141, align 4
  br label %loop.latch142

loop.latch142:                                    ; preds = %loop.body119
  %add144 = add i128 %i.2, 1
  %mul147 = mul i128 2, %pointonline.k.read_arg_inner
  %sub148 = sub i128 %mul147, 1
  %slt149 = icmp slt i128 %add144, %sub148
  br i1 %slt149, label %loop.body119, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch142
  %mul154 = mul i128 3, %pointonline.n.read_arg_inner
  %add156 = add i128 %mul154, %call10
  %call158 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointonline.n.read_arg_inner, i128 %pointonline.k.read_arg_inner, i128 %add156, [256 x i128]* %pointonline.p.read_arg_inner)
  br label %loop.body159

loop.body159:                                     ; preds = %loop.latch175, %loop.exit150
  %i.3 = phi i128 [ 0, %loop.exit150 ], [ %add177, %loop.latch175 ]
  %struct_getter161 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call118, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter161, align 8
  %array_getter163 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.3
  %diff_red164 = load i128, i128* %array_getter163, align 4
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call158, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter166, align 8
  %array_getter168 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.3
  %diff_mod169 = load i128, i128* %array_getter168, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_mod169, i128 %diff_red164, i1* @constraint.440)
  %struct_getter171 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call158, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter172 = load [256 x i128]*, [256 x i128]** %struct_getter171, align 8
  %diff_mod174 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter172, i128 0, i128 %i.3
  store i128 %diff_red164, i128* %diff_mod174, align 4
  br label %loop.latch175

loop.latch175:                                    ; preds = %loop.body159
  %add177 = add i128 %i.3, 1
  %slt180 = icmp slt i128 %add177, %pointonline.k.read_arg_inner
  br i1 %slt180, label %loop.body159, label %loop.exit181

loop.exit181:                                     ; preds = %loop.latch175
  br label %exit

exit:                                             ; preds = %loop.exit181
  ret void
}

define %struct_template_circuit_pointonline* @fn_template_build_pointonline(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_pointonline = alloca %struct_template_circuit_pointonline, align 8
  %pointonline.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %struct_template_circuit_pointonline, i32 0, i32 0
  store i128 %0, i128* %pointonline.n.write_arg_inner, align 4
  %pointonline.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %struct_template_circuit_pointonline, i32 0, i32 1
  store i128 %1, i128* %pointonline.k.write_arg_inner, align 4
  %pointonline.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %struct_template_circuit_pointonline, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %pointonline.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointonline* %struct_template_circuit_pointonline
}

define void @fn_template_init_fp12compress(%struct_template_circuit_fp12compress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 0
  %fp12compress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 1
  %fp12compress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 2
  %fp12compress.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 3
  %fp12compress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 4
  %fp12compress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 5
  %fp12compress.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %l6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %j7 = call i128 @fn_intrinsic_inline_init()
  %idx8 = call i128 @fn_intrinsic_inline_init()
  %i9 = call i128 @fn_intrinsic_inline_init()
  %reduce10 = alloca [256 x [256 x %struct_template_circuit_primereduce*]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch49, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add51, %loop.latch49 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch43, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add45, %loop.latch43 ]
  %call = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %fp12compress.n.read_arg_inner, i128 %fp12compress.k.read_arg_inner, i128 %fp12compress.m.read_arg_inner, [256 x i128]* %fp12compress.p.read_arg_inner, i128 %fp12compress.m_out.read_arg_inner)
  %reduce14 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce10, i128 0, i128 %i.0, i128 %j.0
  store %struct_template_circuit_primereduce* %call, %struct_template_circuit_primereduce** %reduce14, align 8
  br label %loop.body15

loop.body15:                                      ; preds = %loop.latch, %loop.body11
  %idx.0 = phi i128 [ 0, %loop.body11 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %in19 = load i128, i128* %array_getter, align 4
  %array_getter23 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce10, i128 0, i128 %i.0, i128 %j.0
  %reduce24 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter23, align 8
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce24, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %idx.0
  %reduce28 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_add_constraint(i128 %reduce28, i128 %in19, i1* @constraint.441)
  %array_getter32 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce10, i128 0, i128 %i.0, i128 %j.0
  %reduce33 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter32, align 8
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce33, i32 0, i32 5
  %primereduce.in.read_input_outter35 = load [256 x i128]*, [256 x i128]** %struct_getter34, align 8
  %reduce37 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter35, i128 0, i128 %idx.0
  store i128 %in19, i128* %reduce37, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body15
  %add = add i128 %idx.0, 1
  %add42 = add i128 %fp12compress.k.read_arg_inner, %fp12compress.m.read_arg_inner
  %slt = icmp slt i128 %add, %add42
  br i1 %slt, label %loop.body15, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch43

loop.latch43:                                     ; preds = %loop.exit
  %add45 = add i128 %j.0, 1
  %slt47 = icmp slt i128 %add45, 2
  br i1 %slt47, label %loop.body11, label %loop.exit48

loop.exit48:                                      ; preds = %loop.latch43
  br label %loop.latch49

loop.latch49:                                     ; preds = %loop.exit48
  %add51 = add i128 %i.0, 1
  %slt54 = icmp slt i128 %add51, 6
  br i1 %slt54, label %loop.body, label %loop.exit55

loop.exit55:                                      ; preds = %loop.latch49
  br label %loop.body56

loop.body56:                                      ; preds = %loop.latch92, %loop.exit55
  %i.1 = phi i128 [ 0, %loop.exit55 ], [ %add94, %loop.latch92 ]
  br label %loop.body57

loop.body57:                                      ; preds = %loop.latch86, %loop.body56
  %j.1 = phi i128 [ 0, %loop.body56 ], [ %add88, %loop.latch86 ]
  br label %loop.body58

loop.body58:                                      ; preds = %loop.latch79, %loop.body57
  %idx.1 = phi i128 [ 0, %loop.body57 ], [ %add81, %loop.latch79 ]
  %array_getter62 = getelementptr inbounds [256 x [256 x %struct_template_circuit_primereduce*]], [256 x [256 x %struct_template_circuit_primereduce*]]* %reduce10, i128 0, i128 %i.1, i128 %j.1
  %reduce63 = load %struct_template_circuit_primereduce*, %struct_template_circuit_primereduce** %array_getter62, align 8
  %struct_getter64 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %reduce63, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter64, align 8
  %array_getter66 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %idx.1
  %reduce67 = load i128, i128* %array_getter66, align 4
  %array_getter72 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %out73 = load i128, i128* %array_getter72, align 4
  call void @fn_intrinsic_add_constraint(i128 %out73, i128 %reduce67, i1* @constraint.442)
  %out78 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %reduce67, i128* %out78, align 4
  br label %loop.latch79

loop.latch79:                                     ; preds = %loop.body58
  %add81 = add i128 %idx.1, 1
  %slt84 = icmp slt i128 %add81, %fp12compress.k.read_arg_inner
  br i1 %slt84, label %loop.body58, label %loop.exit85

loop.exit85:                                      ; preds = %loop.latch79
  br label %loop.latch86

loop.latch86:                                     ; preds = %loop.exit85
  %add88 = add i128 %j.1, 1
  %slt90 = icmp slt i128 %add88, 2
  br i1 %slt90, label %loop.body57, label %loop.exit91

loop.exit91:                                      ; preds = %loop.latch86
  br label %loop.latch92

loop.latch92:                                     ; preds = %loop.exit91
  %add94 = add i128 %i.1, 1
  %slt97 = icmp slt i128 %add94, 6
  br i1 %slt97, label %loop.body56, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch92
  br label %exit

exit:                                             ; preds = %loop.exit98
  %fp12compress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12compress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %0, i128 %1, i128 %2, [256 x i128]* %3, i128 %4) {
entry:
  %struct_template_circuit_fp12compress = alloca %struct_template_circuit_fp12compress, align 8
  %fp12compress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 0
  store i128 %0, i128* %fp12compress.n.write_arg_inner, align 4
  %fp12compress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 1
  store i128 %1, i128* %fp12compress.k.write_arg_inner, align 4
  %fp12compress.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 2
  store i128 %2, i128* %fp12compress.m.write_arg_inner, align 4
  %fp12compress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp12compress.p.write_arg_inner, align 8
  %fp12compress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress, i32 0, i32 4
  store i128 %4, i128* %fp12compress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_fp12compress* %struct_template_circuit_fp12compress
}

define void @fn_template_init_pointontangent(%struct_template_circuit_pointontangent* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 0
  %pointontangent.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 1
  %pointontangent.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 2
  %pointontangent.a.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 3
  %pointontangent.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %0, i32 0, i32 4
  %pointontangent.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %LOGK35 = call i128 @fn_intrinsic_inline_init()
  %i6 = call i128 @fn_intrinsic_inline_init()
  %LOGK7 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %pointontangent.k.read_arg_inner)
  %mul = mul i128 3, %pointontangent.k.read_arg_inner
  %mul10 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub = sub i128 %mul10, 1
  %mul11 = mul i128 %mul, %sub
  %add = add i128 %mul11, 1
  %call12 = call i128 @log_ceil(i128 %add)
  %mul15 = mul i128 2, %pointontangent.n.read_arg_inner
  %add17 = add i128 %mul15, %call
  %call18 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %add17)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add45, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.0
  %in20 = load i128, i128* %array_getter, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call18, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter22, align 8
  %array_getter24 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.0
  %x_sq25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq25, i128 %in20, i1* @constraint.443)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call18, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter27 = load [256 x i128]*, [256 x i128]** %struct_getter26, align 8
  %x_sq29 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter27, i128 0, i128 %i.0
  store i128 %in20, i128* %x_sq29, align 4
  %array_getter32 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.0
  %in33 = load i128, i128* %array_getter32, align 4
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call18, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter35, align 8
  %array_getter37 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.0
  %x_sq38 = load i128, i128* %array_getter37, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_sq38, i128 %in33, i1* @constraint.444)
  %struct_getter40 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call18, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter41 = load [256 x i128]*, [256 x i128]** %struct_getter40, align 8
  %x_sq43 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter41, i128 0, i128 %i.0
  store i128 %in33, i128* %x_sq43, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add45 = add i128 %i.0, 1
  %slt = icmp slt i128 %add45, %pointontangent.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul50 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub51 = sub i128 %mul50, 1
  %mul54 = mul i128 3, %pointontangent.n.read_arg_inner
  %mul56 = mul i128 2, %call
  %add57 = add i128 %mul54, %mul56
  %add58 = add i128 %add57, 3
  %call59 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %pointontangent.n.read_arg_inner, i128 %sub51, i128 %pointontangent.k.read_arg_inner, i128 %add58)
  br label %loop.body60

loop.body60:                                      ; preds = %loop.latch97, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add99, %loop.latch97 ]
  %eq = icmp eq i128 %i.1, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body60
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call18, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter63, align 8
  %array_getter65 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.1
  %x_sq66 = load i128, i128* %array_getter65, align 4
  %mul67 = mul i128 3, %x_sq66
  %add68 = add i128 %mul67, %pointontangent.a.read_arg_inner
  %struct_getter70 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter70, align 8
  %array_getter72 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.1
  %right73 = load i128, i128* %array_getter72, align 4
  call void @fn_intrinsic_add_constraint(i128 %right73, i128 %add68, i1* @constraint.445)
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter76 = load [256 x i128]*, [256 x i128]** %struct_getter75, align 8
  %right78 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter76, i128 0, i128 %i.1
  store i128 %add68, i128* %right78, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body60
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call18, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter81 = load [256 x i128]*, [256 x i128]** %struct_getter80, align 8
  %array_getter83 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter81, i128 0, i128 %i.1
  %x_sq84 = load i128, i128* %array_getter83, align 4
  %mul85 = mul i128 3, %x_sq84
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter88 = load [256 x i128]*, [256 x i128]** %struct_getter87, align 8
  %array_getter90 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter88, i128 0, i128 %i.1
  %right91 = load i128, i128* %array_getter90, align 4
  call void @fn_intrinsic_add_constraint(i128 %right91, i128 %mul85, i1* @constraint.446)
  %struct_getter93 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter94 = load [256 x i128]*, [256 x i128]** %struct_getter93, align 8
  %right96 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter94, i128 0, i128 %i.1
  store i128 %mul85, i128* %right96, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch97

loop.latch97:                                     ; preds = %if.exit
  %add99 = add i128 %i.1, 1
  %mul102 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub103 = sub i128 %mul102, 1
  %slt104 = icmp slt i128 %add99, %sub103
  br i1 %slt104, label %loop.body60, label %loop.exit105

loop.exit105:                                     ; preds = %loop.latch97
  br label %loop.body106

loop.body106:                                     ; preds = %loop.latch126, %loop.exit105
  %i.2 = phi i128 [ 0, %loop.exit105 ], [ %add128, %loop.latch126 ]
  %array_getter109 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 0, i128 0, i128 %i.2
  %in110 = load i128, i128* %array_getter109, align 4
  %array_getter113 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 1, i128 0, i128 %i.2
  %in114 = load i128, i128* %array_getter113, align 4
  %sub115 = sub i128 %in110, %in114
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter117, align 8
  %array_getter119 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.2
  %right120 = load i128, i128* %array_getter119, align 4
  call void @fn_intrinsic_add_constraint(i128 %right120, i128 %sub115, i1* @constraint.447)
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter123 = load [256 x i128]*, [256 x i128]** %struct_getter122, align 8
  %right125 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter123, i128 0, i128 %i.2
  store i128 %sub115, i128* %right125, align 4
  br label %loop.latch126

loop.latch126:                                    ; preds = %loop.body106
  %add128 = add i128 %i.2, 1
  %slt131 = icmp slt i128 %add128, %pointontangent.k.read_arg_inner
  br i1 %slt131, label %loop.body106, label %loop.exit132

loop.exit132:                                     ; preds = %loop.latch126
  %mul136 = mul i128 2, %pointontangent.n.read_arg_inner
  %add137 = add i128 %mul136, 2
  %add139 = add i128 %add137, %call
  %call140 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %add139)
  br label %loop.body141

loop.body141:                                     ; preds = %loop.latch178, %loop.exit132
  %i.3 = phi i128 [ 0, %loop.exit132 ], [ %add180, %loop.latch178 ]
  %array_getter144 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.3
  %in145 = load i128, i128* %array_getter144, align 4
  %mul146 = mul i128 2, %in145
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call140, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter149 = load [256 x i128]*, [256 x i128]** %struct_getter148, align 8
  %array_getter151 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter149, i128 0, i128 %i.3
  %left152 = load i128, i128* %array_getter151, align 4
  call void @fn_intrinsic_add_constraint(i128 %left152, i128 %mul146, i1* @constraint.448)
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call140, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter155 = load [256 x i128]*, [256 x i128]** %struct_getter154, align 8
  %left157 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter155, i128 0, i128 %i.3
  store i128 %mul146, i128* %left157, align 4
  %array_getter160 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 0, i128 1, i128 %i.3
  %in161 = load i128, i128* %array_getter160, align 4
  %array_getter164 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_inner, i128 0, i128 1, i128 1, i128 %i.3
  %in165 = load i128, i128* %array_getter164, align 4
  %add166 = add i128 %in161, %in165
  %struct_getter168 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call140, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter169 = load [256 x i128]*, [256 x i128]** %struct_getter168, align 8
  %array_getter171 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter169, i128 0, i128 %i.3
  %left172 = load i128, i128* %array_getter171, align 4
  call void @fn_intrinsic_add_constraint(i128 %left172, i128 %add166, i1* @constraint.449)
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call140, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter175 = load [256 x i128]*, [256 x i128]** %struct_getter174, align 8
  %left177 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter175, i128 0, i128 %i.3
  store i128 %add166, i128* %left177, align 4
  br label %loop.latch178

loop.latch178:                                    ; preds = %loop.body141
  %add180 = add i128 %i.3, 1
  %slt183 = icmp slt i128 %add180, %pointontangent.k.read_arg_inner
  br i1 %slt183, label %loop.body141, label %loop.exit184

loop.exit184:                                     ; preds = %loop.latch178
  %mul188 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub189 = sub i128 %mul188, 2
  %mul191 = mul i128 4, %pointontangent.n.read_arg_inner
  %add193 = add i128 %mul191, %call12
  %call194 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %sub189, [256 x i128]* %pointontangent.p.read_arg_inner, i128 %add193)
  br label %loop.body195

loop.body195:                                     ; preds = %loop.latch243, %loop.exit184
  %i.4 = phi i128 [ 0, %loop.exit184 ], [ %add245, %loop.latch243 ]
  %mul200 = mul i128 2, %pointontangent.k.read_arg_inner
  %sub201 = sub i128 %mul200, 1
  %slt202 = icmp slt i128 %i.4, %sub201
  br i1 %slt202, label %if.true196, label %if.false197

if.true196:                                       ; preds = %loop.body195
  %struct_getter204 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter204, align 8
  %array_getter206 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.4
  %right207 = load i128, i128* %array_getter206, align 4
  %struct_getter209 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call140, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter210 = load [256 x i128]*, [256 x i128]** %struct_getter209, align 8
  %array_getter212 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter210, i128 0, i128 %i.4
  %left213 = load i128, i128* %array_getter212, align 4
  %sub214 = sub i128 %right207, %left213
  %struct_getter216 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call194, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter216, align 8
  %array_getter218 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.4
  %diff_red219 = load i128, i128* %array_getter218, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red219, i128 %sub214, i1* @constraint.450)
  %struct_getter221 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call194, i32 0, i32 5
  %primereduce.in.read_input_outter222 = load [256 x i128]*, [256 x i128]** %struct_getter221, align 8
  %diff_red224 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter222, i128 0, i128 %i.4
  store i128 %sub214, i128* %diff_red224, align 4
  br label %if.exit242

if.false197:                                      ; preds = %loop.body195
  %struct_getter226 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call59, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter227 = load [256 x i128]*, [256 x i128]** %struct_getter226, align 8
  %array_getter229 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter227, i128 0, i128 %i.4
  %right230 = load i128, i128* %array_getter229, align 4
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call194, i32 0, i32 5
  %primereduce.in.read_input_outter233 = load [256 x i128]*, [256 x i128]** %struct_getter232, align 8
  %array_getter235 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter233, i128 0, i128 %i.4
  %diff_red236 = load i128, i128* %array_getter235, align 4
  call void @fn_intrinsic_add_constraint(i128 %diff_red236, i128 %right230, i1* @constraint.451)
  %struct_getter238 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call194, i32 0, i32 5
  %primereduce.in.read_input_outter239 = load [256 x i128]*, [256 x i128]** %struct_getter238, align 8
  %diff_red241 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter239, i128 0, i128 %i.4
  store i128 %right230, i128* %diff_red241, align 4
  br label %if.exit242

if.exit242:                                       ; preds = %if.false197, %if.true196
  br label %loop.latch243

loop.latch243:                                    ; preds = %if.exit242
  %add245 = add i128 %i.4, 1
  %mul248 = mul i128 3, %pointontangent.k.read_arg_inner
  %sub249 = sub i128 %mul248, 2
  %slt250 = icmp slt i128 %add245, %sub249
  br i1 %slt250, label %loop.body195, label %loop.exit251

loop.exit251:                                     ; preds = %loop.latch243
  %mul255 = mul i128 4, %pointontangent.n.read_arg_inner
  %add257 = add i128 %mul255, %call12
  %call259 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %pointontangent.n.read_arg_inner, i128 %pointontangent.k.read_arg_inner, i128 %add257, [256 x i128]* %pointontangent.p.read_arg_inner)
  br label %loop.body260

loop.body260:                                     ; preds = %loop.latch276, %loop.exit251
  %i.5 = phi i128 [ 0, %loop.exit251 ], [ %add278, %loop.latch276 ]
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call194, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter262, align 8
  %array_getter264 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.5
  %diff_red265 = load i128, i128* %array_getter264, align 4
  %struct_getter267 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call259, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter267, align 8
  %array_getter269 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.5
  %constraint270 = load i128, i128* %array_getter269, align 4
  call void @fn_intrinsic_add_constraint(i128 %constraint270, i128 %diff_red265, i1* @constraint.452)
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call259, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter273 = load [256 x i128]*, [256 x i128]** %struct_getter272, align 8
  %constraint275 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter273, i128 0, i128 %i.5
  store i128 %diff_red265, i128* %constraint275, align 4
  br label %loop.latch276

loop.latch276:                                    ; preds = %loop.body260
  %add278 = add i128 %i.5, 1
  %slt281 = icmp slt i128 %add278, %pointontangent.k.read_arg_inner
  br i1 %slt281, label %loop.body260, label %loop.exit282

loop.exit282:                                     ; preds = %loop.latch276
  br label %exit

exit:                                             ; preds = %loop.exit282
  ret void
}

define %struct_template_circuit_pointontangent* @fn_template_build_pointontangent(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_pointontangent = alloca %struct_template_circuit_pointontangent, align 8
  %pointontangent.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 0
  store i128 %0, i128* %pointontangent.n.write_arg_inner, align 4
  %pointontangent.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 1
  store i128 %1, i128* %pointontangent.k.write_arg_inner, align 4
  %pointontangent.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 2
  store i128 %2, i128* %pointontangent.a.write_arg_inner, align 4
  %pointontangent.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %pointontangent.p.write_arg_inner, align 8
  ret %struct_template_circuit_pointontangent* %struct_template_circuit_pointontangent
}

define void @fn_template_init_ellipticcurvedoublefp2(%struct_template_circuit_ellipticcurvedoublefp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 0
  %ellipticcurvedoublefp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 1
  %ellipticcurvedoublefp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 2
  %ellipticcurvedoublefp2.a.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 3
  %ellipticcurvedoublefp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 4
  %ellipticcurvedoublefp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %range_check6 = alloca [256 x %struct_template_circuit_rangecheck2d*], align 8
  %i13 = call i128 @fn_intrinsic_inline_init()
  %j14 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array16 = alloca [256 x [256 x i128]], align 8
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, i128 0, i128 0
  %a17 = load i128, i128* %array_getter, align 4
  %long_a18 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 0
  store i128 %a17, i128* %long_a18, align 4
  %long_320 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array16, i128 0, i128 0, i128 0
  store i128 3, i128* %long_320, align 4
  %array_getter22 = getelementptr inbounds [256 x i128], [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, i128 0, i128 1
  %a23 = load i128, i128* %array_getter22, align 4
  %long_a25 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 0
  store i128 %a23, i128* %long_a25, align 4
  %long_327 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array16, i128 0, i128 1, i128 0
  store i128 0, i128* %long_327, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %long_a30 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 0, i128 %i.0
  store i128 0, i128* %long_a30, align 4
  %long_333 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array16, i128 0, i128 0, i128 %i.0
  store i128 0, i128* %long_333, align 4
  %long_a36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 1, i128 %i.0
  store i128 0, i128* %long_a36, align 4
  %long_339 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array16, i128 0, i128 1, i128 %i.0
  store i128 0, i128* %long_339, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 0
  %in50 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter49, align 4
  %spice_inline_array = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in50, [256 x [256 x i128]]* %spice_inline_array, align 4
  %array_getter52 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 0
  %in53 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter52, align 4
  %spice_inline_array54 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in53, [256 x [256 x i128]]* %spice_inline_array54, align 4
  %call = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array, [256 x [256 x i128]]* %spice_inline_array54, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call56 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %uniform_array16, [256 x [256 x i128]]* %call, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call58 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %call56, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %array_getter62 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 1
  %in63 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter62, align 4
  %spice_inline_array64 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in63, [256 x [256 x i128]]* %spice_inline_array64, align 4
  %array_getter66 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 1
  %in67 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter66, align 4
  %spice_inline_array68 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in67, [256 x [256 x i128]]* %spice_inline_array68, align 4
  %call70 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array64, [256 x [256 x i128]]* %spice_inline_array68, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call78 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call70, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call80 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call58, [256 x [256 x i128]]* %call78, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call88 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call80, [256 x [256 x i128]]* %call80, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %array_getter92 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 0
  %in93 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter92, align 4
  %spice_inline_array94 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in93, [256 x [256 x i128]]* %spice_inline_array94, align 4
  %array_getter96 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 0
  %in97 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter96, align 4
  %spice_inline_array98 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in97, [256 x [256 x i128]]* %spice_inline_array98, align 4
  %call100 = call [256 x [256 x i128]]* @find_Fp2_sum(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array94, [256 x [256 x i128]]* %spice_inline_array98, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call102 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call88, [256 x [256 x i128]]* %call100, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %array_getter111 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 0
  %in112 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter111, align 4
  %spice_inline_array113 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in112, [256 x [256 x i128]]* %spice_inline_array113, align 4
  %call116 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %spice_inline_array113, [256 x [256 x i128]]* %call102, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %call118 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call80, [256 x [256 x i128]]* %call116, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  %array_getter120 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 1
  %in121 = load [256 x [256 x i128]], [256 x [256 x i128]]* %array_getter120, align 4
  %spice_inline_array122 = alloca [256 x [256 x i128]], align 8
  store [256 x [256 x i128]] %in121, [256 x [256 x i128]]* %spice_inline_array122, align 4
  %call124 = call [256 x [256 x i128]]* @find_Fp2_diff(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x [256 x i128]]* %call118, [256 x [256 x i128]]* %spice_inline_array122, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body125

loop.body125:                                     ; preds = %loop.latch154, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add156, %loop.latch154 ]
  %array_getter128 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call102, i128 0, i128 0, i128 %i.1
  %x3129 = load i128, i128* %array_getter128, align 4
  %out132 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %i.1
  store i128 %x3129, i128* %out132, align 4
  %array_getter135 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call102, i128 0, i128 1, i128 %i.1
  %x3136 = load i128, i128* %array_getter135, align 4
  %out139 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %i.1
  store i128 %x3136, i128* %out139, align 4
  %array_getter142 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call124, i128 0, i128 0, i128 %i.1
  %y3143 = load i128, i128* %array_getter142, align 4
  %out146 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 1, i128 0, i128 %i.1
  store i128 %y3143, i128* %out146, align 4
  %array_getter149 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call124, i128 0, i128 1, i128 %i.1
  %y3150 = load i128, i128* %array_getter149, align 4
  %out153 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 1, i128 1, i128 %i.1
  store i128 %y3150, i128* %out153, align 4
  br label %loop.latch154

loop.latch154:                                    ; preds = %loop.body125
  %add156 = add i128 %i.1, 1
  %slt159 = icmp slt i128 %add156, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt159, label %loop.body125, label %loop.exit160

loop.exit160:                                     ; preds = %loop.latch154
  %call163 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %range_check165 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check6, i128 0, i128 0
  store %struct_template_circuit_rangecheck2d* %call163, %struct_template_circuit_rangecheck2d** %range_check165, align 8
  %call168 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner)
  %range_check170 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check6, i128 0, i128 1
  store %struct_template_circuit_rangecheck2d* %call168, %struct_template_circuit_rangecheck2d** %range_check170, align 8
  br label %loop.body171

loop.body171:                                     ; preds = %loop.latch223, %loop.exit160
  %j.0 = phi i128 [ 0, %loop.exit160 ], [ %add225, %loop.latch223 ]
  br label %loop.body172

loop.body172:                                     ; preds = %loop.latch216, %loop.body171
  %i.2 = phi i128 [ 0, %loop.body171 ], [ %add218, %loop.latch216 ]
  %array_getter176 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 %j.0, i128 %i.2
  %out177 = load i128, i128* %array_getter176, align 4
  %array_getter179 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check6, i128 0, i128 0
  %range_check180 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter179, align 8
  %struct_getter181 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check180, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter181, align 8
  %array_getter184 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.0, i128 %i.2
  %range_check185 = load i128, i128* %array_getter184, align 4
  call void @fn_intrinsic_add_constraint(i128 %range_check185, i128 %out177, i1* @constraint.453)
  %array_getter187 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check6, i128 0, i128 0
  %range_check188 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter187, align 8
  %struct_getter189 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check188, i32 0, i32 2
  %rangecheck2d.in.read_input_outter190 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter189, align 8
  %range_check193 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter190, i128 0, i128 %j.0, i128 %i.2
  store i128 %out177, i128* %range_check193, align 4
  %array_getter197 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 1, i128 %j.0, i128 %i.2
  %out198 = load i128, i128* %array_getter197, align 4
  %array_getter200 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check6, i128 0, i128 1
  %range_check201 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter200, align 8
  %struct_getter202 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check201, i32 0, i32 2
  %rangecheck2d.in.read_input_outter203 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter202, align 8
  %array_getter206 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter203, i128 0, i128 %j.0, i128 %i.2
  %range_check207 = load i128, i128* %array_getter206, align 4
  call void @fn_intrinsic_add_constraint(i128 %range_check207, i128 %out198, i1* @constraint.454)
  %array_getter209 = getelementptr inbounds [256 x %struct_template_circuit_rangecheck2d*], [256 x %struct_template_circuit_rangecheck2d*]* %range_check6, i128 0, i128 1
  %range_check210 = load %struct_template_circuit_rangecheck2d*, %struct_template_circuit_rangecheck2d** %array_getter209, align 8
  %struct_getter211 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %range_check210, i32 0, i32 2
  %rangecheck2d.in.read_input_outter212 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter211, align 8
  %range_check215 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter212, i128 0, i128 %j.0, i128 %i.2
  store i128 %out198, i128* %range_check215, align 4
  br label %loop.latch216

loop.latch216:                                    ; preds = %loop.body172
  %add218 = add i128 %i.2, 1
  %slt221 = icmp slt i128 %add218, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt221, label %loop.body172, label %loop.exit222

loop.exit222:                                     ; preds = %loop.latch216
  br label %loop.latch223

loop.latch223:                                    ; preds = %loop.exit222
  %add225 = add i128 %j.0, 1
  %slt227 = icmp slt i128 %add225, 2
  br i1 %slt227, label %loop.body171, label %loop.exit228

loop.exit228:                                     ; preds = %loop.latch223
  %call233 = call %struct_template_circuit_pointontangentfp2* @fn_template_build_pointontangentfp2(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body234

loop.body234:                                     ; preds = %loop.latch314, %loop.exit228
  %j.1 = phi i128 [ 0, %loop.exit228 ], [ %add316, %loop.latch314 ]
  br label %loop.body235

loop.body235:                                     ; preds = %loop.latch307, %loop.body234
  %i.3 = phi i128 [ 0, %loop.body234 ], [ %add309, %loop.latch307 ]
  %array_getter239 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 %j.1, i128 0, i128 %i.3
  %in240 = load i128, i128* %array_getter239, align 4
  %struct_getter242 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter242, align 8
  %array_getter245 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter, i128 0, i128 0, i128 %j.1, i128 0, i128 %i.3
  %point_on_tangent246 = load i128, i128* %array_getter245, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_tangent246, i128 %in240, i1* @constraint.455)
  %struct_getter248 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter249 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter248, align 8
  %point_on_tangent252 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter249, i128 0, i128 0, i128 %j.1, i128 0, i128 %i.3
  store i128 %in240, i128* %point_on_tangent252, align 4
  %array_getter256 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 %j.1, i128 1, i128 %i.3
  %in257 = load i128, i128* %array_getter256, align 4
  %struct_getter259 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter260 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter259, align 8
  %array_getter263 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter260, i128 0, i128 0, i128 %j.1, i128 1, i128 %i.3
  %point_on_tangent264 = load i128, i128* %array_getter263, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_tangent264, i128 %in257, i1* @constraint.456)
  %struct_getter266 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter267 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter266, align 8
  %point_on_tangent270 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter267, i128 0, i128 0, i128 %j.1, i128 1, i128 %i.3
  store i128 %in257, i128* %point_on_tangent270, align 4
  %array_getter274 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %j.1, i128 0, i128 %i.3
  %out275 = load i128, i128* %array_getter274, align 4
  %struct_getter277 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter278 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter277, align 8
  %array_getter281 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter278, i128 0, i128 1, i128 %j.1, i128 0, i128 %i.3
  %point_on_tangent282 = load i128, i128* %array_getter281, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_tangent282, i128 %out275, i1* @constraint.457)
  %struct_getter284 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter285 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter284, align 8
  %point_on_tangent288 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter285, i128 0, i128 1, i128 %j.1, i128 0, i128 %i.3
  store i128 %out275, i128* %point_on_tangent288, align 4
  %array_getter292 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %j.1, i128 1, i128 %i.3
  %out293 = load i128, i128* %array_getter292, align 4
  %struct_getter295 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter296 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter295, align 8
  %array_getter299 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter296, i128 0, i128 1, i128 %j.1, i128 1, i128 %i.3
  %point_on_tangent300 = load i128, i128* %array_getter299, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_tangent300, i128 %out293, i1* @constraint.458)
  %struct_getter302 = getelementptr inbounds %struct_template_circuit_pointontangentfp2, %struct_template_circuit_pointontangentfp2* %call233, i32 0, i32 4
  %pointontangentfp2.in.read_input_outter303 = load [256 x [256 x [256 x [256 x i128]]]]*, [256 x [256 x [256 x [256 x i128]]]]** %struct_getter302, align 8
  %point_on_tangent306 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %pointontangentfp2.in.read_input_outter303, i128 0, i128 1, i128 %j.1, i128 1, i128 %i.3
  store i128 %out293, i128* %point_on_tangent306, align 4
  br label %loop.latch307

loop.latch307:                                    ; preds = %loop.body235
  %add309 = add i128 %i.3, 1
  %slt312 = icmp slt i128 %add309, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt312, label %loop.body235, label %loop.exit313

loop.exit313:                                     ; preds = %loop.latch307
  br label %loop.latch314

loop.latch314:                                    ; preds = %loop.exit313
  %add316 = add i128 %j.1, 1
  %slt318 = icmp slt i128 %add316, 2
  br i1 %slt318, label %loop.body234, label %loop.exit319

loop.exit319:                                     ; preds = %loop.latch314
  %call324 = call %struct_template_circuit_pointoncurvefp2* @fn_template_build_pointoncurvefp2(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.a.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.b.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body325

loop.body325:                                     ; preds = %loop.latch369, %loop.exit319
  %j.2 = phi i128 [ 0, %loop.exit319 ], [ %add371, %loop.latch369 ]
  br label %loop.body326

loop.body326:                                     ; preds = %loop.latch362, %loop.body325
  %i.4 = phi i128 [ 0, %loop.body325 ], [ %add364, %loop.latch362 ]
  %array_getter330 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %j.2, i128 0, i128 %i.4
  %out331 = load i128, i128* %array_getter330, align 4
  %struct_getter333 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call324, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter333, align 8
  %array_getter336 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter, i128 0, i128 %j.2, i128 0, i128 %i.4
  %point_on_curve337 = load i128, i128* %array_getter336, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_curve337, i128 %out331, i1* @constraint.459)
  %struct_getter339 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call324, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter340 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter339, align 8
  %point_on_curve343 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter340, i128 0, i128 %j.2, i128 0, i128 %i.4
  store i128 %out331, i128* %point_on_curve343, align 4
  %array_getter347 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %j.2, i128 1, i128 %i.4
  %out348 = load i128, i128* %array_getter347, align 4
  %struct_getter350 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call324, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter351 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter350, align 8
  %array_getter354 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter351, i128 0, i128 %j.2, i128 1, i128 %i.4
  %point_on_curve355 = load i128, i128* %array_getter354, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_curve355, i128 %out348, i1* @constraint.460)
  %struct_getter357 = getelementptr inbounds %struct_template_circuit_pointoncurvefp2, %struct_template_circuit_pointoncurvefp2* %call324, i32 0, i32 5
  %pointoncurvefp2.in.read_input_outter358 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter357, align 8
  %point_on_curve361 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointoncurvefp2.in.read_input_outter358, i128 0, i128 %j.2, i128 1, i128 %i.4
  store i128 %out348, i128* %point_on_curve361, align 4
  br label %loop.latch362

loop.latch362:                                    ; preds = %loop.body326
  %add364 = add i128 %i.4, 1
  %slt367 = icmp slt i128 %add364, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt367, label %loop.body326, label %loop.exit368

loop.exit368:                                     ; preds = %loop.latch362
  br label %loop.latch369

loop.latch369:                                    ; preds = %loop.exit368
  %add371 = add i128 %j.2, 1
  %slt373 = icmp slt i128 %add371, 2
  br i1 %slt373, label %loop.body325, label %loop.exit374

loop.exit374:                                     ; preds = %loop.latch369
  %call378 = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurvedoublefp2.n.read_arg_inner, i128 %ellipticcurvedoublefp2.k.read_arg_inner, [256 x i128]* %ellipticcurvedoublefp2.p.read_arg_inner)
  br label %loop.body379

loop.body379:                                     ; preds = %loop.latch422, %loop.exit374
  %j.3 = phi i128 [ 0, %loop.exit374 ], [ %add424, %loop.latch422 ]
  br label %loop.body380

loop.body380:                                     ; preds = %loop.latch415, %loop.body379
  %i.5 = phi i128 [ 0, %loop.body379 ], [ %add417, %loop.latch415 ]
  %array_getter384 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 %j.3, i128 %i.5
  %out385 = load i128, i128* %array_getter384, align 4
  %struct_getter387 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call378, i32 0, i32 3
  %fp2isequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter387, align 8
  %array_getter390 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter, i128 0, i128 %j.3, i128 %i.5
  %x3_eq_x1391 = load i128, i128* %array_getter390, align 4
  call void @fn_intrinsic_add_constraint(i128 %x3_eq_x1391, i128 %out385, i1* @constraint.461)
  %struct_getter393 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call378, i32 0, i32 3
  %fp2isequal.a.read_input_outter394 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter393, align 8
  %x3_eq_x1397 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter394, i128 0, i128 %j.3, i128 %i.5
  store i128 %out385, i128* %x3_eq_x1397, align 4
  %array_getter401 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_inner, i128 0, i128 0, i128 %j.3, i128 %i.5
  %in402 = load i128, i128* %array_getter401, align 4
  %struct_getter404 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call378, i32 0, i32 4
  %fp2isequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter404, align 8
  %array_getter407 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter, i128 0, i128 %j.3, i128 %i.5
  %x3_eq_x1408 = load i128, i128* %array_getter407, align 4
  call void @fn_intrinsic_add_constraint(i128 %x3_eq_x1408, i128 %in402, i1* @constraint.462)
  %struct_getter410 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call378, i32 0, i32 4
  %fp2isequal.b.read_input_outter411 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter410, align 8
  %x3_eq_x1414 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter411, i128 0, i128 %j.3, i128 %i.5
  store i128 %in402, i128* %x3_eq_x1414, align 4
  br label %loop.latch415

loop.latch415:                                    ; preds = %loop.body380
  %add417 = add i128 %i.5, 1
  %slt420 = icmp slt i128 %add417, %ellipticcurvedoublefp2.k.read_arg_inner
  br i1 %slt420, label %loop.body380, label %loop.exit421

loop.exit421:                                     ; preds = %loop.latch415
  br label %loop.latch422

loop.latch422:                                    ; preds = %loop.exit421
  %add424 = add i128 %j.3, 1
  %slt426 = icmp slt i128 %add424, 2
  br i1 %slt426, label %loop.body379, label %loop.exit427

loop.exit427:                                     ; preds = %loop.latch422
  %struct_getter429 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call378, i32 0, i32 5
  %fp2isequal.out.read_output_outter = load i128, i128* %struct_getter429, align 4
  call void @fn_intrinsic_add_constraint(i128 %fp2isequal.out.read_output_outter, i128 0, i1* @constraint.463)
  br label %exit

exit:                                             ; preds = %loop.exit427
  %ellipticcurvedoublefp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurvedoublefp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvedoublefp2 = alloca %struct_template_circuit_ellipticcurvedoublefp2, align 8
  %ellipticcurvedoublefp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvedoublefp2.n.write_arg_inner, align 4
  %ellipticcurvedoublefp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvedoublefp2.k.write_arg_inner, align 4
  %ellipticcurvedoublefp2.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvedoublefp2.a.write_arg_inner, align 8
  %ellipticcurvedoublefp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %ellipticcurvedoublefp2.b.write_arg_inner, align 8
  %ellipticcurvedoublefp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvedoublefp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvedoublefp2* %struct_template_circuit_ellipticcurvedoublefp2
}

define void @fn_template_init_ellipticcurvedouble(%struct_template_circuit_ellipticcurvedouble* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 0
  %ellipticcurvedouble.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 1
  %ellipticcurvedouble.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 2
  %ellipticcurvedouble.a.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 3
  %ellipticcurvedouble.b.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 4
  %ellipticcurvedouble.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i7 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x i128], align 8
  %uniform_array15 = alloca [256 x i128], align 8
  %long_a16 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 0
  store i128 %ellipticcurvedouble.a.read_arg_inner, i128* %long_a16, align 4
  %long_318 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array15, i128 0, i128 0
  store i128 3, i128* %long_318, align 4
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 1, %entry ], [ %add, %loop.latch ]
  %long_a21 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 0, i128* %long_a21, align 4
  %long_324 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array15, i128 0, i128 %i.0
  store i128 0, i128* %long_324, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 0
  %in34 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %in34, [256 x i128]* %spice_inline_array, align 4
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 0
  %in37 = load [256 x i128], [256 x i128]* %array_getter36, align 4
  %spice_inline_array38 = alloca [256 x i128], align 8
  store [256 x i128] %in37, [256 x i128]* %spice_inline_array38, align 4
  %call = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array38, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call40 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %uniform_array15, [256 x i128]* %call, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call42 = call [256 x i128]* @long_add_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %uniform_array, [256 x i128]* %call40, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %array_getter46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 1
  %in47 = load [256 x i128], [256 x i128]* %array_getter46, align 4
  %spice_inline_array48 = alloca [256 x i128], align 8
  store [256 x i128] %in47, [256 x i128]* %spice_inline_array48, align 4
  %array_getter50 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 1
  %in51 = load [256 x i128], [256 x i128]* %array_getter50, align 4
  %spice_inline_array52 = alloca [256 x i128], align 8
  store [256 x i128] %in51, [256 x i128]* %spice_inline_array52, align 4
  %call54 = call [256 x i128]* @long_add_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array48, [256 x i128]* %spice_inline_array52, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call62 = call [256 x i128]* @mod_inv(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call54, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call64 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call42, [256 x i128]* %call62, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call72 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call64, [256 x i128]* %call64, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %array_getter76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 0
  %in77 = load [256 x i128], [256 x i128]* %array_getter76, align 4
  %spice_inline_array78 = alloca [256 x i128], align 8
  store [256 x i128] %in77, [256 x i128]* %spice_inline_array78, align 4
  %array_getter80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 0
  %in81 = load [256 x i128], [256 x i128]* %array_getter80, align 4
  %spice_inline_array82 = alloca [256 x i128], align 8
  store [256 x i128] %in81, [256 x i128]* %spice_inline_array82, align 4
  %call84 = call [256 x i128]* @long_add_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array78, [256 x i128]* %spice_inline_array82, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call86 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call72, [256 x i128]* %call84, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %array_getter95 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 0
  %in96 = load [256 x i128], [256 x i128]* %array_getter95, align 4
  %spice_inline_array97 = alloca [256 x i128], align 8
  store [256 x i128] %in96, [256 x i128]* %spice_inline_array97, align 4
  %call100 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %spice_inline_array97, [256 x i128]* %call86, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %call102 = call [256 x i128]* @prod_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call64, [256 x i128]* %call100, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 1
  %in105 = load [256 x i128], [256 x i128]* %array_getter104, align 4
  %spice_inline_array106 = alloca [256 x i128], align 8
  store [256 x i128] %in105, [256 x i128]* %spice_inline_array106, align 4
  %call108 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %call102, [256 x i128]* %spice_inline_array106, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body109

loop.body109:                                     ; preds = %loop.latch124, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add126, %loop.latch124 ]
  %array_getter112 = getelementptr inbounds [256 x i128], [256 x i128]* %call86, i128 0, i128 %i.1
  %x3113 = load i128, i128* %array_getter112, align 4
  %out116 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.1
  store i128 %x3113, i128* %out116, align 4
  %array_getter119 = getelementptr inbounds [256 x i128], [256 x i128]* %call108, i128 0, i128 %i.1
  %y3120 = load i128, i128* %array_getter119, align 4
  %out123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.1
  store i128 %y3120, i128* %out123, align 4
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.body109
  %add126 = add i128 %i.1, 1
  %slt129 = icmp slt i128 %add126, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt129, label %loop.body109, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch124
  %call133 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner)
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch160, %loop.exit130
  %j.0 = phi i128 [ 0, %loop.exit130 ], [ %add162, %loop.latch160 ]
  br label %loop.body135

loop.body135:                                     ; preds = %loop.latch153, %loop.body134
  %i.2 = phi i128 [ 0, %loop.body134 ], [ %add155, %loop.latch153 ]
  %array_getter139 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.0, i128 %i.2
  %out140 = load i128, i128* %array_getter139, align 4
  %struct_getter142 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call133, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter142, align 8
  %array_getter145 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.0, i128 %i.2
  %range_check146 = load i128, i128* %array_getter145, align 4
  call void @fn_intrinsic_add_constraint(i128 %range_check146, i128 %out140, i1* @constraint.464)
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call133, i32 0, i32 2
  %rangecheck2d.in.read_input_outter149 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter148, align 8
  %range_check152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter149, i128 0, i128 %j.0, i128 %i.2
  store i128 %out140, i128* %range_check152, align 4
  br label %loop.latch153

loop.latch153:                                    ; preds = %loop.body135
  %add155 = add i128 %i.2, 1
  %slt158 = icmp slt i128 %add155, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt158, label %loop.body135, label %loop.exit159

loop.exit159:                                     ; preds = %loop.latch153
  br label %loop.latch160

loop.latch160:                                    ; preds = %loop.exit159
  %add162 = add i128 %j.0, 1
  %slt164 = icmp slt i128 %add162, 2
  br i1 %slt164, label %loop.body134, label %loop.exit165

loop.exit165:                                     ; preds = %loop.latch160
  %call170 = call %struct_template_circuit_pointontangent* @fn_template_build_pointontangent(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, i128 %ellipticcurvedouble.a.read_arg_inner, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body171

loop.body171:                                     ; preds = %loop.latch215, %loop.exit165
  %j.1 = phi i128 [ 0, %loop.exit165 ], [ %add217, %loop.latch215 ]
  br label %loop.body172

loop.body172:                                     ; preds = %loop.latch208, %loop.body171
  %i.3 = phi i128 [ 0, %loop.body171 ], [ %add210, %loop.latch208 ]
  %array_getter176 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 %j.1, i128 %i.3
  %in177 = load i128, i128* %array_getter176, align 4
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call170, i32 0, i32 4
  %pointontangent.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter179, align 8
  %array_getter182 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter, i128 0, i128 0, i128 %j.1, i128 %i.3
  %point_on_tangent183 = load i128, i128* %array_getter182, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_tangent183, i128 %in177, i1* @constraint.465)
  %struct_getter185 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call170, i32 0, i32 4
  %pointontangent.in.read_input_outter186 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter185, align 8
  %point_on_tangent189 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter186, i128 0, i128 0, i128 %j.1, i128 %i.3
  store i128 %in177, i128* %point_on_tangent189, align 4
  %array_getter193 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.1, i128 %i.3
  %out194 = load i128, i128* %array_getter193, align 4
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call170, i32 0, i32 4
  %pointontangent.in.read_input_outter197 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter196, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter197, i128 0, i128 1, i128 %j.1, i128 %i.3
  %point_on_tangent201 = load i128, i128* %array_getter200, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_tangent201, i128 %out194, i1* @constraint.466)
  %struct_getter203 = getelementptr inbounds %struct_template_circuit_pointontangent, %struct_template_circuit_pointontangent* %call170, i32 0, i32 4
  %pointontangent.in.read_input_outter204 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter203, align 8
  %point_on_tangent207 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointontangent.in.read_input_outter204, i128 0, i128 1, i128 %j.1, i128 %i.3
  store i128 %out194, i128* %point_on_tangent207, align 4
  br label %loop.latch208

loop.latch208:                                    ; preds = %loop.body172
  %add210 = add i128 %i.3, 1
  %slt213 = icmp slt i128 %add210, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt213, label %loop.body172, label %loop.exit214

loop.exit214:                                     ; preds = %loop.latch208
  br label %loop.latch215

loop.latch215:                                    ; preds = %loop.exit214
  %add217 = add i128 %j.1, 1
  %slt219 = icmp slt i128 %add217, 2
  br i1 %slt219, label %loop.body171, label %loop.exit220

loop.exit220:                                     ; preds = %loop.latch215
  %call225 = call %struct_template_circuit_pointoncurve* @fn_template_build_pointoncurve(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, i128 %ellipticcurvedouble.a.read_arg_inner, i128 %ellipticcurvedouble.b.read_arg_inner, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body226

loop.body226:                                     ; preds = %loop.latch252, %loop.exit220
  %j.2 = phi i128 [ 0, %loop.exit220 ], [ %add254, %loop.latch252 ]
  br label %loop.body227

loop.body227:                                     ; preds = %loop.latch245, %loop.body226
  %i.4 = phi i128 [ 0, %loop.body226 ], [ %add247, %loop.latch245 ]
  %array_getter231 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.2, i128 %i.4
  %out232 = load i128, i128* %array_getter231, align 4
  %struct_getter234 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %call225, i32 0, i32 5
  %pointoncurve.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter234, align 8
  %array_getter237 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_outter, i128 0, i128 %j.2, i128 %i.4
  %point_on_curve238 = load i128, i128* %array_getter237, align 4
  call void @fn_intrinsic_add_constraint(i128 %point_on_curve238, i128 %out232, i1* @constraint.467)
  %struct_getter240 = getelementptr inbounds %struct_template_circuit_pointoncurve, %struct_template_circuit_pointoncurve* %call225, i32 0, i32 5
  %pointoncurve.in.read_input_outter241 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter240, align 8
  %point_on_curve244 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %pointoncurve.in.read_input_outter241, i128 0, i128 %j.2, i128 %i.4
  store i128 %out232, i128* %point_on_curve244, align 4
  br label %loop.latch245

loop.latch245:                                    ; preds = %loop.body227
  %add247 = add i128 %i.4, 1
  %slt250 = icmp slt i128 %add247, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt250, label %loop.body227, label %loop.exit251

loop.exit251:                                     ; preds = %loop.latch245
  br label %loop.latch252

loop.latch252:                                    ; preds = %loop.exit251
  %add254 = add i128 %j.2, 1
  %slt256 = icmp slt i128 %add254, 2
  br i1 %slt256, label %loop.body226, label %loop.exit257

loop.exit257:                                     ; preds = %loop.latch252
  %call261 = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurvedouble.n.read_arg_inner, i128 %ellipticcurvedouble.k.read_arg_inner, [256 x i128]* %ellipticcurvedouble.p.read_arg_inner)
  br label %loop.body262

loop.body262:                                     ; preds = %loop.latch292, %loop.exit257
  %i.5 = phi i128 [ 0, %loop.exit257 ], [ %add294, %loop.latch292 ]
  %array_getter265 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.5
  %out266 = load i128, i128* %array_getter265, align 4
  %struct_getter268 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call261, i32 0, i32 3
  %fpisequal.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter268, align 8
  %array_getter270 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter, i128 0, i128 0, i128 %i.5
  %x3_eq_x1271 = load i128, i128* %array_getter270, align 4
  call void @fn_intrinsic_add_constraint(i128 %x3_eq_x1271, i128 %out266, i1* @constraint.468)
  %struct_getter273 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call261, i32 0, i32 3
  %fpisequal.in.read_input_outter274 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter273, align 8
  %x3_eq_x1276 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter274, i128 0, i128 0, i128 %i.5
  store i128 %out266, i128* %x3_eq_x1276, align 4
  %array_getter279 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_inner, i128 0, i128 0, i128 %i.5
  %in280 = load i128, i128* %array_getter279, align 4
  %struct_getter282 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call261, i32 0, i32 3
  %fpisequal.in.read_input_outter283 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter282, align 8
  %array_getter285 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter283, i128 0, i128 1, i128 %i.5
  %x3_eq_x1286 = load i128, i128* %array_getter285, align 4
  call void @fn_intrinsic_add_constraint(i128 %x3_eq_x1286, i128 %in280, i1* @constraint.469)
  %struct_getter288 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call261, i32 0, i32 3
  %fpisequal.in.read_input_outter289 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter288, align 8
  %x3_eq_x1291 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter289, i128 0, i128 1, i128 %i.5
  store i128 %in280, i128* %x3_eq_x1291, align 4
  br label %loop.latch292

loop.latch292:                                    ; preds = %loop.body262
  %add294 = add i128 %i.5, 1
  %slt297 = icmp slt i128 %add294, %ellipticcurvedouble.k.read_arg_inner
  br i1 %slt297, label %loop.body262, label %loop.exit298

loop.exit298:                                     ; preds = %loop.latch292
  %struct_getter300 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call261, i32 0, i32 4
  %fpisequal.out.read_output_outter = load i128, i128* %struct_getter300, align 4
  call void @fn_intrinsic_add_constraint(i128 %fpisequal.out.read_output_outter, i128 0, i1* @constraint.470)
  br label %exit

exit:                                             ; preds = %loop.exit298
  %ellipticcurvedouble.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvedouble.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvedouble = alloca %struct_template_circuit_ellipticcurvedouble, align 8
  %ellipticcurvedouble.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvedouble.n.write_arg_inner, align 4
  %ellipticcurvedouble.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvedouble.k.write_arg_inner, align 4
  %ellipticcurvedouble.a.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 2
  store i128 %2, i128* %ellipticcurvedouble.a.write_arg_inner, align 4
  %ellipticcurvedouble.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvedouble.b.write_arg_inner, align 4
  %ellipticcurvedouble.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvedouble.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvedouble* %struct_template_circuit_ellipticcurvedouble
}

define void @fn_template_init_fp2subtract(%struct_template_circuit_fp2subtract* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 0
  %fp2subtract.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 1
  %fp2subtract.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 2
  %fp2subtract.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 3
  %fp2subtract.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 4
  %fp2subtract.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %call = call %struct_template_circuit_fpsubtract* @fn_template_build_fpsubtract(i128 %fp2subtract.n.read_arg_inner, i128 %fp2subtract.k.read_arg_inner, [256 x i128]* %fp2subtract.p.read_arg_inner)
  %call9 = call %struct_template_circuit_fpsubtract* @fn_template_build_fpsubtract(i128 %fp2subtract.n.read_arg_inner, i128 %fp2subtract.k.read_arg_inner, [256 x i128]* %fp2subtract.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2subtract.a.read_input_inner, i128 0, i128 0, i128 %i.0
  %a11 = load i128, i128* %array_getter, align 4
  %struct_getter13 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 3
  %fpsubtract.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter13, align 8
  %array_getter15 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter, i128 0, i128 %i.0
  %sub016 = load i128, i128* %array_getter15, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub016, i128 %a11, i1* @constraint.471)
  %struct_getter17 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 3
  %fpsubtract.a.read_input_outter18 = load [256 x i128]*, [256 x i128]** %struct_getter17, align 8
  %sub020 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter18, i128 0, i128 %i.0
  store i128 %a11, i128* %sub020, align 4
  %array_getter22 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2subtract.b.read_input_inner, i128 0, i128 0, i128 %i.0
  %b23 = load i128, i128* %array_getter22, align 4
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 4
  %fpsubtract.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter25, align 8
  %array_getter27 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter, i128 0, i128 %i.0
  %sub028 = load i128, i128* %array_getter27, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub028, i128 %b23, i1* @constraint.472)
  %struct_getter30 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 4
  %fpsubtract.b.read_input_outter31 = load [256 x i128]*, [256 x i128]** %struct_getter30, align 8
  %sub033 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter31, i128 0, i128 %i.0
  store i128 %b23, i128* %sub033, align 4
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2subtract.a.read_input_inner, i128 0, i128 1, i128 %i.0
  %a37 = load i128, i128* %array_getter36, align 4
  %struct_getter39 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call9, i32 0, i32 3
  %fpsubtract.a.read_input_outter40 = load [256 x i128]*, [256 x i128]** %struct_getter39, align 8
  %array_getter42 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter40, i128 0, i128 %i.0
  %sub143 = load i128, i128* %array_getter42, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub143, i128 %a37, i1* @constraint.473)
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call9, i32 0, i32 3
  %fpsubtract.a.read_input_outter46 = load [256 x i128]*, [256 x i128]** %struct_getter45, align 8
  %sub148 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.a.read_input_outter46, i128 0, i128 %i.0
  store i128 %a37, i128* %sub148, align 4
  %array_getter51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2subtract.b.read_input_inner, i128 0, i128 1, i128 %i.0
  %b52 = load i128, i128* %array_getter51, align 4
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call9, i32 0, i32 4
  %fpsubtract.b.read_input_outter55 = load [256 x i128]*, [256 x i128]** %struct_getter54, align 8
  %array_getter57 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter55, i128 0, i128 %i.0
  %sub158 = load i128, i128* %array_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %sub158, i128 %b52, i1* @constraint.474)
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call9, i32 0, i32 4
  %fpsubtract.b.read_input_outter61 = load [256 x i128]*, [256 x i128]** %struct_getter60, align 8
  %sub163 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.b.read_input_outter61, i128 0, i128 %i.0
  store i128 %b52, i128* %sub163, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, %fp2subtract.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body67

loop.body67:                                      ; preds = %loop.latch93, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add95, %loop.latch93 ]
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call, i32 0, i32 7
  %fpsubtract.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter69, align 8
  %array_getter71 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.out.read_output_outter, i128 0, i128 %i.1
  %sub072 = load i128, i128* %array_getter71, align 4
  %array_getter75 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.1
  %out76 = load i128, i128* %array_getter75, align 4
  call void @fn_intrinsic_add_constraint(i128 %out76, i128 %sub072, i1* @constraint.475)
  %out79 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.1
  store i128 %sub072, i128* %out79, align 4
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_fpsubtract, %struct_template_circuit_fpsubtract* %call9, i32 0, i32 7
  %fpsubtract.out.read_output_outter82 = load [256 x i128]*, [256 x i128]** %struct_getter81, align 8
  %array_getter84 = getelementptr inbounds [256 x i128], [256 x i128]* %fpsubtract.out.read_output_outter82, i128 0, i128 %i.1
  %sub185 = load i128, i128* %array_getter84, align 4
  %array_getter88 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.1
  %out89 = load i128, i128* %array_getter88, align 4
  call void @fn_intrinsic_add_constraint(i128 %out89, i128 %sub185, i1* @constraint.476)
  %out92 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.1
  store i128 %sub185, i128* %out92, align 4
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.body67
  %add95 = add i128 %i.1, 1
  %slt98 = icmp slt i128 %add95, %fp2subtract.k.read_arg_inner
  br i1 %slt98, label %loop.body67, label %loop.exit99

loop.exit99:                                      ; preds = %loop.latch93
  br label %exit

exit:                                             ; preds = %loop.exit99
  %fp2subtract.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2subtract.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2subtract* @fn_template_build_fp2subtract(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2subtract = alloca %struct_template_circuit_fp2subtract, align 8
  %fp2subtract.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract, i32 0, i32 0
  store i128 %0, i128* %fp2subtract.n.write_arg_inner, align 4
  %fp2subtract.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract, i32 0, i32 1
  store i128 %1, i128* %fp2subtract.k.write_arg_inner, align 4
  %fp2subtract.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2subtract, %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2subtract.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2subtract* %struct_template_circuit_fp2subtract
}

define void @fn_template_init_signedfp2compresscarry(%struct_template_circuit_signedfp2compresscarry* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 0
  %signedfp2compresscarry.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 1
  %signedfp2compresscarry.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 2
  %signedfp2compresscarry.m.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 3
  %signedfp2compresscarry.overflow.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 4
  %signedfp2compresscarry.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 5
  %signedfp2compresscarry.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %LOGM7 = call i128 @fn_intrinsic_inline_init()
  %idx8 = call i128 @fn_intrinsic_inline_init()
  %add = add i128 %signedfp2compresscarry.m.read_arg_inner, 1
  %call = call i128 @log_ceil(i128 %add)
  %add11 = add i128 %signedfp2compresscarry.overflow.read_arg_inner, %signedfp2compresscarry.n.read_arg_inner
  %add13 = add i128 %add11, %call
  %call14 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %signedfp2compresscarry.n.read_arg_inner, i128 %signedfp2compresscarry.k.read_arg_inner, i128 %signedfp2compresscarry.m.read_arg_inner, [256 x i128]* %signedfp2compresscarry.p.read_arg_inner, i128 %add13)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch36, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add38, %loop.latch36 ]
  br label %loop.body15

loop.body15:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add31, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2compresscarry.in.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %in18 = load i128, i128* %array_getter, align 4
  %struct_getter20 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call14, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter20, align 8
  %array_getter23 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress24 = load i128, i128* %array_getter23, align 4
  call void @fn_intrinsic_add_constraint(i128 %compress24, i128 %in18, i1* @constraint.477)
  %struct_getter25 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call14, i32 0, i32 5
  %fp2compress.in.read_input_outter26 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter25, align 8
  %compress29 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter26, i128 0, i128 %i.0, i128 %idx.0
  store i128 %in18, i128* %compress29, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body15
  %add31 = add i128 %idx.0, 1
  %add35 = add i128 %signedfp2compresscarry.k.read_arg_inner, %signedfp2compresscarry.m.read_arg_inner
  %slt = icmp slt i128 %add31, %add35
  br i1 %slt, label %loop.body15, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch36

loop.latch36:                                     ; preds = %loop.exit
  %add38 = add i128 %i.0, 1
  %slt40 = icmp slt i128 %add38, 2
  br i1 %slt40, label %loop.body, label %loop.exit41

loop.exit41:                                      ; preds = %loop.latch36
  %add46 = add i128 %signedfp2compresscarry.overflow.read_arg_inner, %signedfp2compresscarry.n.read_arg_inner
  %add48 = add i128 %add46, %call
  %call50 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %signedfp2compresscarry.n.read_arg_inner, i128 %signedfp2compresscarry.k.read_arg_inner, i128 %add48, [256 x i128]* %signedfp2compresscarry.p.read_arg_inner)
  br label %loop.body51

loop.body51:                                      ; preds = %loop.latch78, %loop.exit41
  %i.1 = phi i128 [ 0, %loop.exit41 ], [ %add80, %loop.latch78 ]
  br label %loop.body52

loop.body52:                                      ; preds = %loop.latch71, %loop.body51
  %idx.1 = phi i128 [ 0, %loop.body51 ], [ %add73, %loop.latch71 ]
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call14, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter54, align 8
  %array_getter57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.1
  %compress58 = load i128, i128* %array_getter57, align 4
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call50, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter60, align 8
  %array_getter63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %idx.1
  %carry64 = load i128, i128* %array_getter63, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry64, i128 %compress58, i1* @constraint.478)
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call50, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter66, align 8
  %carry70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter67, i128 0, i128 %i.1, i128 %idx.1
  store i128 %compress58, i128* %carry70, align 4
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.body52
  %add73 = add i128 %idx.1, 1
  %slt76 = icmp slt i128 %add73, %signedfp2compresscarry.k.read_arg_inner
  br i1 %slt76, label %loop.body52, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch71
  br label %loop.latch78

loop.latch78:                                     ; preds = %loop.exit77
  %add80 = add i128 %i.1, 1
  %slt82 = icmp slt i128 %add80, 2
  br i1 %slt82, label %loop.body51, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch78
  br label %loop.body84

loop.body84:                                      ; preds = %loop.latch108, %loop.exit83
  %i.2 = phi i128 [ 0, %loop.exit83 ], [ %add110, %loop.latch108 ]
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch101, %loop.body84
  %idx.2 = phi i128 [ 0, %loop.body84 ], [ %add103, %loop.latch101 ]
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call50, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter87, align 8
  %array_getter90 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %idx.2
  %carry91 = load i128, i128* %array_getter90, align 4
  %array_getter95 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %idx.2
  %out96 = load i128, i128* %array_getter95, align 4
  call void @fn_intrinsic_add_constraint(i128 %out96, i128 %carry91, i1* @constraint.479)
  %out100 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %idx.2
  store i128 %carry91, i128* %out100, align 4
  br label %loop.latch101

loop.latch101:                                    ; preds = %loop.body85
  %add103 = add i128 %idx.2, 1
  %slt106 = icmp slt i128 %add103, %signedfp2compresscarry.k.read_arg_inner
  br i1 %slt106, label %loop.body85, label %loop.exit107

loop.exit107:                                     ; preds = %loop.latch101
  br label %loop.latch108

loop.latch108:                                    ; preds = %loop.exit107
  %add110 = add i128 %i.2, 1
  %slt112 = icmp slt i128 %add110, 2
  br i1 %slt112, label %loop.body84, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch108
  br label %exit

exit:                                             ; preds = %loop.exit113
  %signedfp2compresscarry.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2compresscarry.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2compresscarry* @fn_template_build_signedfp2compresscarry(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_signedfp2compresscarry = alloca %struct_template_circuit_signedfp2compresscarry, align 8
  %signedfp2compresscarry.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 0
  store i128 %0, i128* %signedfp2compresscarry.n.write_arg_inner, align 4
  %signedfp2compresscarry.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 1
  store i128 %1, i128* %signedfp2compresscarry.k.write_arg_inner, align 4
  %signedfp2compresscarry.m.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 2
  store i128 %2, i128* %signedfp2compresscarry.m.write_arg_inner, align 4
  %signedfp2compresscarry.overflow.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 3
  store i128 %3, i128* %signedfp2compresscarry.overflow.write_arg_inner, align 4
  %signedfp2compresscarry.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2compresscarry, %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %signedfp2compresscarry.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp2compresscarry* %struct_template_circuit_signedfp2compresscarry
}

define void @fn_template_init_ellipticcurveaddunequal(%struct_template_circuit_ellipticcurveaddunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 0
  %ellipticcurveaddunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 1
  %ellipticcurveaddunequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 2
  %ellipticcurveaddunequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %LOGK35 = call i128 @fn_intrinsic_inline_init()
  %LOGK9 = call i128 @fn_intrinsic_inline_init()
  %j14 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i15 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %ellipticcurveaddunequal.k.read_arg_inner)
  %mul = mul i128 3, %ellipticcurveaddunequal.k.read_arg_inner
  %mul18 = mul i128 %mul, %ellipticcurveaddunequal.k.read_arg_inner
  %mul20 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub = sub i128 %mul20, 1
  %mul21 = mul i128 %mul18, %sub
  %add = add i128 %mul21, 1
  %call22 = call i128 @log_ceil(i128 %add)
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 1
  %b24 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %b24, [256 x i128]* %spice_inline_array, align 4
  %array_getter25 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 1
  %a26 = load [256 x i128], [256 x i128]* %array_getter25, align 4
  %spice_inline_array27 = alloca [256 x i128], align 8
  store [256 x i128] %a26, [256 x i128]* %spice_inline_array27, align 4
  %call28 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %spice_inline_array, [256 x i128]* %spice_inline_array27, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %array_getter32 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 0
  %b33 = load [256 x i128], [256 x i128]* %array_getter32, align 4
  %spice_inline_array34 = alloca [256 x i128], align 8
  store [256 x i128] %b33, [256 x i128]* %spice_inline_array34, align 4
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 0
  %a37 = load [256 x i128], [256 x i128]* %array_getter36, align 4
  %spice_inline_array38 = alloca [256 x i128], align 8
  store [256 x i128] %a37, [256 x i128]* %spice_inline_array38, align 4
  %call40 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %spice_inline_array34, [256 x i128]* %spice_inline_array38, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %call45 = call [256 x i128]* @mod_inv(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call40, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %call51 = call [256 x i128]* @prod_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call28, [256 x i128]* %call45, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %call57 = call [256 x i128]* @prod_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call51, [256 x i128]* %call51, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %array_getter64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 0
  %a65 = load [256 x i128], [256 x i128]* %array_getter64, align 4
  %spice_inline_array66 = alloca [256 x i128], align 8
  store [256 x i128] %a65, [256 x i128]* %spice_inline_array66, align 4
  %call68 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call57, [256 x i128]* %spice_inline_array66, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %array_getter70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 0
  %b71 = load [256 x i128], [256 x i128]* %array_getter70, align 4
  %spice_inline_array72 = alloca [256 x i128], align 8
  store [256 x i128] %b71, [256 x i128]* %spice_inline_array72, align 4
  %call74 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call68, [256 x i128]* %spice_inline_array72, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %array_getter83 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 0
  %a84 = load [256 x i128], [256 x i128]* %array_getter83, align 4
  %spice_inline_array85 = alloca [256 x i128], align 8
  store [256 x i128] %a84, [256 x i128]* %spice_inline_array85, align 4
  %call88 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %spice_inline_array85, [256 x i128]* %call74, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %call90 = call [256 x i128]* @prod_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call51, [256 x i128]* %call88, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  %array_getter92 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 1
  %a93 = load [256 x i128], [256 x i128]* %array_getter92, align 4
  %spice_inline_array94 = alloca [256 x i128], align 8
  store [256 x i128] %a93, [256 x i128]* %spice_inline_array94, align 4
  %call96 = call [256 x i128]* @long_sub_mod(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %call90, [256 x i128]* %spice_inline_array94, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add111, %loop.latch ]
  %array_getter99 = getelementptr inbounds [256 x i128], [256 x i128]* %call74, i128 0, i128 %i.0
  %x3100 = load i128, i128* %array_getter99, align 4
  %out102 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.0
  store i128 %x3100, i128* %out102, align 4
  %array_getter105 = getelementptr inbounds [256 x i128], [256 x i128]* %call96, i128 0, i128 %i.0
  %y3106 = load i128, i128* %array_getter105, align 4
  %out109 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 1, i128 %i.0
  store i128 %y3106, i128* %out109, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add111 = add i128 %i.0, 1
  %slt = icmp slt i128 %add111, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul117 = mul i128 2, %ellipticcurveaddunequal.n.read_arg_inner
  %add119 = add i128 %mul117, %call
  %add120 = add i128 %add119, 2
  %call121 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %add120)
  %mul125 = mul i128 2, %ellipticcurveaddunequal.n.read_arg_inner
  %add127 = add i128 %mul125, %call
  %add128 = add i128 %add127, 2
  %call129 = call %struct_template_circuit_bigmultshortlong* @fn_template_build_bigmultshortlong(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %add128)
  br label %loop.body130

loop.body130:                                     ; preds = %loop.latch209, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add211, %loop.latch209 ]
  %array_getter133 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 0, i128 %i.1
  %b134 = load i128, i128* %array_getter133, align 4
  %array_getter137 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 0, i128 %i.1
  %a138 = load i128, i128* %array_getter137, align 4
  %sub139 = sub i128 %b134, %a138
  %struct_getter141 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call121, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter141, align 8
  %array_getter143 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter, i128 0, i128 %i.1
  %dx_sq144 = load i128, i128* %array_getter143, align 4
  call void @fn_intrinsic_add_constraint(i128 %dx_sq144, i128 %sub139, i1* @constraint.480)
  %struct_getter146 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call121, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter147 = load [256 x i128]*, [256 x i128]** %struct_getter146, align 8
  %dx_sq149 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter147, i128 0, i128 %i.1
  store i128 %sub139, i128* %dx_sq149, align 4
  %array_getter152 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 0, i128 %i.1
  %b153 = load i128, i128* %array_getter152, align 4
  %array_getter156 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 0, i128 %i.1
  %a157 = load i128, i128* %array_getter156, align 4
  %sub158 = sub i128 %b153, %a157
  %struct_getter160 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call121, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter160, align 8
  %array_getter162 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter, i128 0, i128 %i.1
  %dx_sq163 = load i128, i128* %array_getter162, align 4
  call void @fn_intrinsic_add_constraint(i128 %dx_sq163, i128 %sub158, i1* @constraint.481)
  %struct_getter165 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call121, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter166 = load [256 x i128]*, [256 x i128]** %struct_getter165, align 8
  %dx_sq168 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter166, i128 0, i128 %i.1
  store i128 %sub158, i128* %dx_sq168, align 4
  %array_getter171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 1, i128 %i.1
  %b172 = load i128, i128* %array_getter171, align 4
  %array_getter175 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 1, i128 %i.1
  %a176 = load i128, i128* %array_getter175, align 4
  %sub177 = sub i128 %b172, %a176
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter180 = load [256 x i128]*, [256 x i128]** %struct_getter179, align 8
  %array_getter182 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter180, i128 0, i128 %i.1
  %dy_sq183 = load i128, i128* %array_getter182, align 4
  call void @fn_intrinsic_add_constraint(i128 %dy_sq183, i128 %sub177, i1* @constraint.482)
  %struct_getter185 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 3
  %bigmultshortlong.a.read_input_outter186 = load [256 x i128]*, [256 x i128]** %struct_getter185, align 8
  %dy_sq188 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.a.read_input_outter186, i128 0, i128 %i.1
  store i128 %sub177, i128* %dy_sq188, align 4
  %array_getter191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 1, i128 %i.1
  %b192 = load i128, i128* %array_getter191, align 4
  %array_getter195 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 1, i128 %i.1
  %a196 = load i128, i128* %array_getter195, align 4
  %sub197 = sub i128 %b192, %a196
  %struct_getter199 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter200 = load [256 x i128]*, [256 x i128]** %struct_getter199, align 8
  %array_getter202 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter200, i128 0, i128 %i.1
  %dy_sq203 = load i128, i128* %array_getter202, align 4
  call void @fn_intrinsic_add_constraint(i128 %dy_sq203, i128 %sub197, i1* @constraint.483)
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 4
  %bigmultshortlong.b.read_input_outter206 = load [256 x i128]*, [256 x i128]** %struct_getter205, align 8
  %dy_sq208 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.b.read_input_outter206, i128 0, i128 %i.1
  store i128 %sub197, i128* %dy_sq208, align 4
  br label %loop.latch209

loop.latch209:                                    ; preds = %loop.body130
  %add211 = add i128 %i.1, 1
  %slt214 = icmp slt i128 %add211, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt214, label %loop.body130, label %loop.exit215

loop.exit215:                                     ; preds = %loop.latch209
  %mul219 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub220 = sub i128 %mul219, 1
  %mul222 = mul i128 3, %ellipticcurveaddunequal.n.read_arg_inner
  %add223 = add i128 %mul222, 4
  %mul225 = mul i128 2, %call
  %add226 = add i128 %add223, %mul225
  %call227 = call %struct_template_circuit_bigmultshortlongunequal* @fn_template_build_bigmultshortlongunequal(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %sub220, i128 %add226)
  br label %loop.body228

loop.body228:                                     ; preds = %loop.latch253, %loop.exit215
  %i.2 = phi i128 [ 0, %loop.exit215 ], [ %add255, %loop.latch253 ]
  %array_getter231 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 0, i128 %i.2
  %a232 = load i128, i128* %array_getter231, align 4
  %array_getter235 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 0, i128 %i.2
  %b236 = load i128, i128* %array_getter235, align 4
  %add237 = add i128 %a232, %b236
  %array_getter240 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 0, i128 %i.2
  %out241 = load i128, i128* %array_getter240, align 4
  %add242 = add i128 %add237, %out241
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call227, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter244, align 8
  %array_getter246 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter, i128 0, i128 %i.2
  %cubic247 = load i128, i128* %array_getter246, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic247, i128 %add242, i1* @constraint.484)
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call227, i32 0, i32 4
  %bigmultshortlongunequal.a.read_input_outter250 = load [256 x i128]*, [256 x i128]** %struct_getter249, align 8
  %cubic252 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.a.read_input_outter250, i128 0, i128 %i.2
  store i128 %add242, i128* %cubic252, align 4
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.body228
  %add255 = add i128 %i.2, 1
  %slt258 = icmp slt i128 %add255, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt258, label %loop.body228, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch253
  br label %loop.body260

loop.body260:                                     ; preds = %loop.latch276, %loop.exit259
  %i.3 = phi i128 [ 0, %loop.exit259 ], [ %add278, %loop.latch276 ]
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call121, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter262, align 8
  %array_getter264 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter, i128 0, i128 %i.3
  %dx_sq265 = load i128, i128* %array_getter264, align 4
  %struct_getter267 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call227, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter267, align 8
  %array_getter269 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter, i128 0, i128 %i.3
  %cubic270 = load i128, i128* %array_getter269, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic270, i128 %dx_sq265, i1* @constraint.485)
  %struct_getter272 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call227, i32 0, i32 5
  %bigmultshortlongunequal.b.read_input_outter273 = load [256 x i128]*, [256 x i128]** %struct_getter272, align 8
  %cubic275 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.b.read_input_outter273, i128 0, i128 %i.3
  store i128 %dx_sq265, i128* %cubic275, align 4
  br label %loop.latch276

loop.latch276:                                    ; preds = %loop.body260
  %add278 = add i128 %i.3, 1
  %mul281 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub282 = sub i128 %mul281, 1
  %slt283 = icmp slt i128 %add278, %sub282
  br i1 %slt283, label %loop.body260, label %loop.exit284

loop.exit284:                                     ; preds = %loop.latch276
  %mul288 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub289 = sub i128 %mul288, 2
  %mul292 = mul i128 4, %ellipticcurveaddunequal.n.read_arg_inner
  %add294 = add i128 %mul292, %call22
  %call295 = call %struct_template_circuit_primereduce* @fn_template_build_primereduce(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %sub289, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner, i128 %add294)
  br label %loop.body296

loop.body296:                                     ; preds = %loop.latch319, %loop.exit284
  %i.4 = phi i128 [ 0, %loop.exit284 ], [ %add321, %loop.latch319 ]
  %struct_getter298 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call227, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter298, align 8
  %array_getter300 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter, i128 0, i128 %i.4
  %cubic301 = load i128, i128* %array_getter300, align 4
  %struct_getter303 = getelementptr inbounds %struct_template_circuit_bigmultshortlong, %struct_template_circuit_bigmultshortlong* %call129, i32 0, i32 5
  %bigmultshortlong.out.read_output_outter304 = load [256 x i128]*, [256 x i128]** %struct_getter303, align 8
  %array_getter306 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlong.out.read_output_outter304, i128 0, i128 %i.4
  %dy_sq307 = load i128, i128* %array_getter306, align 4
  %sub308 = sub i128 %cubic301, %dy_sq307
  %struct_getter310 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call295, i32 0, i32 5
  %primereduce.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter310, align 8
  %array_getter312 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter, i128 0, i128 %i.4
  %cubic_red313 = load i128, i128* %array_getter312, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_red313, i128 %sub308, i1* @constraint.486)
  %struct_getter315 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call295, i32 0, i32 5
  %primereduce.in.read_input_outter316 = load [256 x i128]*, [256 x i128]** %struct_getter315, align 8
  %cubic_red318 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter316, i128 0, i128 %i.4
  store i128 %sub308, i128* %cubic_red318, align 4
  br label %loop.latch319

loop.latch319:                                    ; preds = %loop.body296
  %add321 = add i128 %i.4, 1
  %mul324 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub325 = sub i128 %mul324, 1
  %slt326 = icmp slt i128 %add321, %sub325
  br i1 %slt326, label %loop.body296, label %loop.exit327

loop.exit327:                                     ; preds = %loop.latch319
  %mul329 = mul i128 2, %ellipticcurveaddunequal.k.read_arg_inner
  %sub330 = sub i128 %mul329, 1
  br label %loop.body331

loop.body331:                                     ; preds = %loop.latch349, %loop.exit327
  %i.5 = phi i128 [ %sub330, %loop.exit327 ], [ %add351, %loop.latch349 ]
  %struct_getter333 = getelementptr inbounds %struct_template_circuit_bigmultshortlongunequal, %struct_template_circuit_bigmultshortlongunequal* %call227, i32 0, i32 6
  %bigmultshortlongunequal.out.read_output_outter334 = load [256 x i128]*, [256 x i128]** %struct_getter333, align 8
  %array_getter336 = getelementptr inbounds [256 x i128], [256 x i128]* %bigmultshortlongunequal.out.read_output_outter334, i128 0, i128 %i.5
  %cubic337 = load i128, i128* %array_getter336, align 4
  %struct_getter339 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call295, i32 0, i32 5
  %primereduce.in.read_input_outter340 = load [256 x i128]*, [256 x i128]** %struct_getter339, align 8
  %array_getter342 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter340, i128 0, i128 %i.5
  %cubic_red343 = load i128, i128* %array_getter342, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_red343, i128 %cubic337, i1* @constraint.487)
  %struct_getter345 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call295, i32 0, i32 5
  %primereduce.in.read_input_outter346 = load [256 x i128]*, [256 x i128]** %struct_getter345, align 8
  %cubic_red348 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.in.read_input_outter346, i128 0, i128 %i.5
  store i128 %cubic337, i128* %cubic_red348, align 4
  br label %loop.latch349

loop.latch349:                                    ; preds = %loop.body331
  %add351 = add i128 %i.5, 1
  %mul354 = mul i128 3, %ellipticcurveaddunequal.k.read_arg_inner
  %sub355 = sub i128 %mul354, 2
  %slt356 = icmp slt i128 %add351, %sub355
  br i1 %slt356, label %loop.body331, label %loop.exit357

loop.exit357:                                     ; preds = %loop.latch349
  %mul361 = mul i128 4, %ellipticcurveaddunequal.n.read_arg_inner
  %add363 = add i128 %mul361, %call22
  %call365 = call %struct_template_circuit_signedcheckcarrymodtozero* @fn_template_build_signedcheckcarrymodtozero(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, i128 %add363, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  br label %loop.body366

loop.body366:                                     ; preds = %loop.latch382, %loop.exit357
  %i.6 = phi i128 [ 0, %loop.exit357 ], [ %add384, %loop.latch382 ]
  %struct_getter368 = getelementptr inbounds %struct_template_circuit_primereduce, %struct_template_circuit_primereduce* %call295, i32 0, i32 6
  %primereduce.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter368, align 8
  %array_getter370 = getelementptr inbounds [256 x i128], [256 x i128]* %primereduce.out.read_output_outter, i128 0, i128 %i.6
  %cubic_red371 = load i128, i128* %array_getter370, align 4
  %struct_getter373 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call365, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter373, align 8
  %array_getter375 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter, i128 0, i128 %i.6
  %cubic_mod376 = load i128, i128* %array_getter375, align 4
  call void @fn_intrinsic_add_constraint(i128 %cubic_mod376, i128 %cubic_red371, i1* @constraint.488)
  %struct_getter378 = getelementptr inbounds %struct_template_circuit_signedcheckcarrymodtozero, %struct_template_circuit_signedcheckcarrymodtozero* %call365, i32 0, i32 4
  %signedcheckcarrymodtozero.in.read_input_outter379 = load [256 x i128]*, [256 x i128]** %struct_getter378, align 8
  %cubic_mod381 = getelementptr inbounds [256 x i128], [256 x i128]* %signedcheckcarrymodtozero.in.read_input_outter379, i128 0, i128 %i.6
  store i128 %cubic_red371, i128* %cubic_mod381, align 4
  br label %loop.latch382

loop.latch382:                                    ; preds = %loop.body366
  %add384 = add i128 %i.6, 1
  %slt387 = icmp slt i128 %add384, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt387, label %loop.body366, label %loop.exit388

loop.exit388:                                     ; preds = %loop.latch382
  %call392 = call %struct_template_circuit_pointonline* @fn_template_build_pointonline(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner, [256 x i128]* %ellipticcurveaddunequal.p.read_arg_inner)
  br label %loop.body393

loop.body393:                                     ; preds = %loop.latch454, %loop.exit388
  %i.7 = phi i128 [ 0, %loop.exit388 ], [ %add456, %loop.latch454 ]
  br label %loop.body394

loop.body394:                                     ; preds = %loop.latch448, %loop.body393
  %j.0 = phi i128 [ 0, %loop.body393 ], [ %add450, %loop.latch448 ]
  %array_getter398 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_inner, i128 0, i128 %j.0, i128 %i.7
  %a399 = load i128, i128* %array_getter398, align 4
  %struct_getter401 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call392, i32 0, i32 3
  %pointonline.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter401, align 8
  %array_getter404 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter, i128 0, i128 0, i128 %j.0, i128 %i.7
  %y_constraint405 = load i128, i128* %array_getter404, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_constraint405, i128 %a399, i1* @constraint.489)
  %struct_getter407 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call392, i32 0, i32 3
  %pointonline.in.read_input_outter408 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter407, align 8
  %y_constraint411 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter408, i128 0, i128 0, i128 %j.0, i128 %i.7
  store i128 %a399, i128* %y_constraint411, align 4
  %array_getter415 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_inner, i128 0, i128 %j.0, i128 %i.7
  %b416 = load i128, i128* %array_getter415, align 4
  %struct_getter418 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call392, i32 0, i32 3
  %pointonline.in.read_input_outter419 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter418, align 8
  %array_getter422 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter419, i128 0, i128 1, i128 %j.0, i128 %i.7
  %y_constraint423 = load i128, i128* %array_getter422, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_constraint423, i128 %b416, i1* @constraint.490)
  %struct_getter425 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call392, i32 0, i32 3
  %pointonline.in.read_input_outter426 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter425, align 8
  %y_constraint429 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter426, i128 0, i128 1, i128 %j.0, i128 %i.7
  store i128 %b416, i128* %y_constraint429, align 4
  %array_getter433 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.0, i128 %i.7
  %out434 = load i128, i128* %array_getter433, align 4
  %struct_getter436 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call392, i32 0, i32 3
  %pointonline.in.read_input_outter437 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter436, align 8
  %array_getter440 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter437, i128 0, i128 2, i128 %j.0, i128 %i.7
  %y_constraint441 = load i128, i128* %array_getter440, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_constraint441, i128 %out434, i1* @constraint.491)
  %struct_getter443 = getelementptr inbounds %struct_template_circuit_pointonline, %struct_template_circuit_pointonline* %call392, i32 0, i32 3
  %pointonline.in.read_input_outter444 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter443, align 8
  %y_constraint447 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %pointonline.in.read_input_outter444, i128 0, i128 2, i128 %j.0, i128 %i.7
  store i128 %out434, i128* %y_constraint447, align 4
  br label %loop.latch448

loop.latch448:                                    ; preds = %loop.body394
  %add450 = add i128 %j.0, 1
  %slt452 = icmp slt i128 %add450, 2
  br i1 %slt452, label %loop.body394, label %loop.exit453

loop.exit453:                                     ; preds = %loop.latch448
  br label %loop.latch454

loop.latch454:                                    ; preds = %loop.exit453
  %add456 = add i128 %i.7, 1
  %slt459 = icmp slt i128 %add456, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt459, label %loop.body393, label %loop.exit460

loop.exit460:                                     ; preds = %loop.latch454
  %call463 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %ellipticcurveaddunequal.n.read_arg_inner, i128 %ellipticcurveaddunequal.k.read_arg_inner)
  br label %loop.body464

loop.body464:                                     ; preds = %loop.latch490, %loop.exit460
  %j.1 = phi i128 [ 0, %loop.exit460 ], [ %add492, %loop.latch490 ]
  br label %loop.body465

loop.body465:                                     ; preds = %loop.latch483, %loop.body464
  %i.8 = phi i128 [ 0, %loop.body464 ], [ %add485, %loop.latch483 ]
  %array_getter469 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %j.1, i128 %i.8
  %out470 = load i128, i128* %array_getter469, align 4
  %struct_getter472 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call463, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter472, align 8
  %array_getter475 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %j.1, i128 %i.8
  %range_check476 = load i128, i128* %array_getter475, align 4
  call void @fn_intrinsic_add_constraint(i128 %range_check476, i128 %out470, i1* @constraint.492)
  %struct_getter478 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call463, i32 0, i32 2
  %rangecheck2d.in.read_input_outter479 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter478, align 8
  %range_check482 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter479, i128 0, i128 %j.1, i128 %i.8
  store i128 %out470, i128* %range_check482, align 4
  br label %loop.latch483

loop.latch483:                                    ; preds = %loop.body465
  %add485 = add i128 %i.8, 1
  %slt488 = icmp slt i128 %add485, %ellipticcurveaddunequal.k.read_arg_inner
  br i1 %slt488, label %loop.body465, label %loop.exit489

loop.exit489:                                     ; preds = %loop.latch483
  br label %loop.latch490

loop.latch490:                                    ; preds = %loop.exit489
  %add492 = add i128 %j.1, 1
  %slt494 = icmp slt i128 %add492, 2
  br i1 %slt494, label %loop.body464, label %loop.exit495

loop.exit495:                                     ; preds = %loop.latch490
  br label %exit

exit:                                             ; preds = %loop.exit495
  %ellipticcurveaddunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurveaddunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_ellipticcurveaddunequal = alloca %struct_template_circuit_ellipticcurveaddunequal, align 8
  %ellipticcurveaddunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveaddunequal.n.write_arg_inner, align 4
  %ellipticcurveaddunequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveaddunequal.k.write_arg_inner, align 4
  %ellipticcurveaddunequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurveaddunequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveaddunequal* %struct_template_circuit_ellipticcurveaddunequal
}

define void @fn_template_init_ellipticcurveadd(%struct_template_circuit_ellipticcurveadd* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 0
  %ellipticcurveadd.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 1
  %ellipticcurveadd.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 2
  %ellipticcurveadd.a1.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 3
  %ellipticcurveadd.b1.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 4
  %ellipticcurveadd.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 5
  %ellipticcurveadd.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 6
  %ellipticcurveadd.aisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 7
  %ellipticcurveadd.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter7, align 8
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 8
  %ellipticcurveadd.bisinfinity.read_input_inner = load i128, i128* %struct_getter8, align 4
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %anegb = call i128 @fn_intrinsic_inline_init()
  %idx9 = call i128 @fn_intrinsic_inline_init()
  %add_is_double = call i128 @fn_intrinsic_inline_init()
  %ab0 = call i128 @fn_intrinsic_inline_init()
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall10 to [256 x [256 x [256 x i128]]]*
  %i11 = call i128 @fn_intrinsic_inline_init()
  %isInfinity = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  %call15 = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %idx.0 = phi i128 [ 0, %entry ], [ %add72, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, i128 0, i128 0, i128 %idx.0
  %a17 = load i128, i128* %array_getter, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter, i128 0, i128 0, i128 %idx.0
  %x_equal22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_equal22, i128 %a17, i1* @constraint.493)
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter24 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter23, align 8
  %x_equal26 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter24, i128 0, i128 0, i128 %idx.0
  store i128 %a17, i128* %x_equal26, align 4
  %array_getter28 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 0, i128 %idx.0
  %b29 = load i128, i128* %array_getter28, align 4
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter32 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %array_getter34 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter32, i128 0, i128 1, i128 %idx.0
  %x_equal35 = load i128, i128* %array_getter34, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_equal35, i128 %b29, i1* @constraint.494)
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 3
  %fpisequal.in.read_input_outter38 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter37, align 8
  %x_equal40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter38, i128 0, i128 1, i128 %idx.0
  store i128 %b29, i128* %x_equal40, align 4
  %array_getter43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, i128 0, i128 1, i128 %idx.0
  %a44 = load i128, i128* %array_getter43, align 4
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call15, i32 0, i32 3
  %fpisequal.in.read_input_outter47 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter46, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter47, i128 0, i128 0, i128 %idx.0
  %y_equal50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_equal50, i128 %a44, i1* @constraint.495)
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call15, i32 0, i32 3
  %fpisequal.in.read_input_outter53 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter52, align 8
  %y_equal55 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter53, i128 0, i128 0, i128 %idx.0
  store i128 %a44, i128* %y_equal55, align 4
  %array_getter58 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 1, i128 %idx.0
  %b59 = load i128, i128* %array_getter58, align 4
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call15, i32 0, i32 3
  %fpisequal.in.read_input_outter62 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter61, align 8
  %array_getter64 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter62, i128 0, i128 1, i128 %idx.0
  %y_equal65 = load i128, i128* %array_getter64, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_equal65, i128 %b59, i1* @constraint.496)
  %struct_getter67 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call15, i32 0, i32 3
  %fpisequal.in.read_input_outter68 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter67, align 8
  %y_equal70 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter68, i128 0, i128 1, i128 %idx.0
  store i128 %b59, i128* %y_equal70, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add72 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add72, %ellipticcurveadd.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %struct_getter76 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter = load i128, i128* %struct_getter76, align 4
  %struct_getter78 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call15, i32 0, i32 4
  %fpisequal.out.read_output_outter79 = load i128, i128* %struct_getter78, align 4
  %mul = mul i128 %fpisequal.out.read_output_outter, %fpisequal.out.read_output_outter79
  call void @fn_intrinsic_add_constraint(i128 %add_is_double, i128 %mul, i1* @constraint.497)
  %ellipticcurveadd.add_is_double.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 9
  store i128 %mul, i128* %ellipticcurveadd.add_is_double.write_inter_inner, align 4
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 9
  %ellipticcurveadd.add_is_double.read_inter_inner = load i128, i128* %struct_getter83, align 4
  %call84 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %array_getter86 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 0, i128 0
  %b87 = load i128, i128* %array_getter86, align 4
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call84, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter89, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %b87, i1* @constraint.498)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call84, i32 0, i32 0
  store i128 %b87, i128* %iszero.in.write_input_outter, align 4
  %call94 = call %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  %call98 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %ellipticcurveadd.n.read_arg_inner, i128 %ellipticcurveadd.k.read_arg_inner, i128 %ellipticcurveadd.a1.read_arg_inner, i128 %ellipticcurveadd.b1.read_arg_inner, [256 x i128]* %ellipticcurveadd.p.read_arg_inner)
  br label %loop.body99

loop.body99:                                      ; preds = %loop.latch192, %loop.exit
  %i.0 = phi i128 [ 0, %loop.exit ], [ %add194, %loop.latch192 ]
  br label %loop.body100

loop.body100:                                     ; preds = %loop.latch185, %loop.body99
  %idx.1 = phi i128 [ 0, %loop.body99 ], [ %add187, %loop.latch185 ]
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, i128 0, i128 %i.0, i128 %idx.1
  %a105 = load i128, i128* %array_getter104, align 4
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter107, align 8
  %array_getter110 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.1
  %add111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_add_constraint(i128 %add111, i128 %a105, i1* @constraint.499)
  %struct_getter113 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter114 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter113, align 8
  %add117 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter114, i128 0, i128 %i.0, i128 %idx.1
  store i128 %a105, i128* %add117, align 4
  %eq = icmp eq i128 %i.0, 0
  %eq120 = icmp eq i128 %idx.1, 0
  %and = and i1 %eq, %eq120
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body100
  %array_getter124 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 %i.0, i128 %idx.1
  %b125 = load i128, i128* %array_getter124, align 4
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter128 = load i128, i128* %struct_getter127, align 4
  %struct_getter130 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call84, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter130, align 4
  %array_getter134 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 %i.0, i128 %idx.1
  %b135 = load i128, i128* %array_getter134, align 4
  %sub = sub i128 %iszero.out.read_output_outter, %b135
  %mul136 = mul i128 %fpisequal.out.read_output_outter128, %sub
  %add137 = add i128 %b125, %mul136
  %struct_getter139 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter139, align 8
  %array_getter142 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.1
  %add143 = load i128, i128* %array_getter142, align 4
  call void @fn_intrinsic_add_constraint(i128 %add143, i128 %add137, i1* @constraint.500)
  %struct_getter145 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter146 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter145, align 8
  %add149 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter146, i128 0, i128 %i.0, i128 %idx.1
  store i128 %add137, i128* %add149, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body100
  %array_getter153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 %i.0, i128 %idx.1
  %b154 = load i128, i128* %array_getter153, align 4
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter157 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter156, align 8
  %array_getter160 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter157, i128 0, i128 %i.0, i128 %idx.1
  %add161 = load i128, i128* %array_getter160, align 4
  call void @fn_intrinsic_add_constraint(i128 %add161, i128 %b154, i1* @constraint.501)
  %struct_getter163 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter164 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter163, align 8
  %add167 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter164, i128 0, i128 %i.0, i128 %idx.1
  store i128 %b154, i128* %add167, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %array_getter171 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, i128 0, i128 %i.0, i128 %idx.1
  %a172 = load i128, i128* %array_getter171, align 4
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %call98, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter174, align 8
  %array_getter177 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %i.0, i128 %idx.1
  %doub178 = load i128, i128* %array_getter177, align 4
  call void @fn_intrinsic_add_constraint(i128 %doub178, i128 %a172, i1* @constraint.502)
  %struct_getter180 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %call98, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter181 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter180, align 8
  %doub184 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter181, i128 0, i128 %i.0, i128 %idx.1
  store i128 %a172, i128* %doub184, align 4
  br label %loop.latch185

loop.latch185:                                    ; preds = %if.exit
  %add187 = add i128 %idx.1, 1
  %slt190 = icmp slt i128 %add187, %ellipticcurveadd.k.read_arg_inner
  br i1 %slt190, label %loop.body100, label %loop.exit191

loop.exit191:                                     ; preds = %loop.latch185
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.exit191
  %add194 = add i128 %i.0, 1
  %slt196 = icmp slt i128 %add194, 2
  br i1 %slt196, label %loop.body99, label %loop.exit197

loop.exit197:                                     ; preds = %loop.latch192
  %mul198 = mul i128 %ellipticcurveadd.aisinfinity.read_input_inner, %ellipticcurveadd.bisinfinity.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %ab0, i128 %mul198, i1* @constraint.503)
  %ellipticcurveadd.ab0.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 10
  store i128 %mul198, i128* %ellipticcurveadd.ab0.write_inter_inner, align 4
  %struct_getter202 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 10
  %ellipticcurveadd.ab0.read_inter_inner = load i128, i128* %struct_getter202, align 4
  %struct_getter204 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter205 = load i128, i128* %struct_getter204, align 4
  %struct_getter207 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call, i32 0, i32 4
  %fpisequal.out.read_output_outter208 = load i128, i128* %struct_getter207, align 4
  %struct_getter210 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %call15, i32 0, i32 4
  %fpisequal.out.read_output_outter211 = load i128, i128* %struct_getter210, align 4
  %mul212 = mul i128 %fpisequal.out.read_output_outter208, %fpisequal.out.read_output_outter211
  %sub213 = sub i128 %fpisequal.out.read_output_outter205, %mul212
  call void @fn_intrinsic_add_constraint(i128 %anegb, i128 %sub213, i1* @constraint.504)
  %ellipticcurveadd.anegb.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 11
  store i128 %sub213, i128* %ellipticcurveadd.anegb.write_inter_inner, align 4
  %struct_getter217 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 11
  %ellipticcurveadd.anegb.read_inter_inner = load i128, i128* %struct_getter217, align 4
  %add220 = add i128 %ellipticcurveadd.ab0.read_inter_inner, %ellipticcurveadd.anegb.read_inter_inner
  %mul223 = mul i128 %ellipticcurveadd.ab0.read_inter_inner, %ellipticcurveadd.anegb.read_inter_inner
  %sub224 = sub i128 %add220, %mul223
  call void @fn_intrinsic_add_constraint(i128 %isInfinity, i128 %sub224, i1* @constraint.505)
  %ellipticcurveadd.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 14
  store i128 %sub224, i128* %ellipticcurveadd.isinfinity.write_output_inner, align 4
  %struct_getter228 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 14
  %ellipticcurveadd.isinfinity.read_output_inner = load i128, i128* %struct_getter228, align 4
  br label %loop.body229

loop.body229:                                     ; preds = %loop.latch354, %loop.exit197
  %i.1 = phi i128 [ 0, %loop.exit197 ], [ %add356, %loop.latch354 ]
  br label %loop.body230

loop.body230:                                     ; preds = %loop.latch347, %loop.body229
  %idx.2 = phi i128 [ 0, %loop.body229 ], [ %add349, %loop.latch347 ]
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter232, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.2
  %add236 = load i128, i128* %array_getter235, align 4
  %struct_getter239 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %call98, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter239, align 8
  %array_getter242 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.2
  %doub243 = load i128, i128* %array_getter242, align 4
  %struct_getter245 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %call94, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter246 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter245, align 8
  %array_getter249 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter246, i128 0, i128 %i.1, i128 %idx.2
  %add250 = load i128, i128* %array_getter249, align 4
  %sub251 = sub i128 %doub243, %add250
  %mul252 = mul i128 %ellipticcurveadd.add_is_double.read_inter_inner, %sub251
  %add253 = add i128 %add236, %mul252
  %array_getter257 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 0, i128 %i.1, i128 %idx.2
  %tmp258 = load i128, i128* %array_getter257, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp258, i128 %add253, i1* @constraint.506)
  %tmp262 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 0, i128 %i.1, i128 %idx.2
  store i128 %add253, i128* %tmp262, align 4
  %array_getter266 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 0, i128 %i.1, i128 %idx.2
  %tmp267 = load i128, i128* %array_getter266, align 4
  %array_getter272 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_inner, i128 0, i128 %i.1, i128 %idx.2
  %b273 = load i128, i128* %array_getter272, align 4
  %array_getter277 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 0, i128 %i.1, i128 %idx.2
  %tmp278 = load i128, i128* %array_getter277, align 4
  %sub279 = sub i128 %b273, %tmp278
  %mul280 = mul i128 %ellipticcurveadd.aisinfinity.read_input_inner, %sub279
  %add281 = add i128 %tmp267, %mul280
  %array_getter285 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 1, i128 %i.1, i128 %idx.2
  %tmp286 = load i128, i128* %array_getter285, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp286, i128 %add281, i1* @constraint.507)
  %tmp290 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 1, i128 %i.1, i128 %idx.2
  store i128 %add281, i128* %tmp290, align 4
  %array_getter294 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 1, i128 %i.1, i128 %idx.2
  %tmp295 = load i128, i128* %array_getter294, align 4
  %array_getter300 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, i128 0, i128 %i.1, i128 %idx.2
  %a301 = load i128, i128* %array_getter300, align 4
  %array_getter305 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 1, i128 %i.1, i128 %idx.2
  %tmp306 = load i128, i128* %array_getter305, align 4
  %sub307 = sub i128 %a301, %tmp306
  %mul308 = mul i128 %ellipticcurveadd.bisinfinity.read_input_inner, %sub307
  %add309 = add i128 %tmp295, %mul308
  %array_getter313 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 2, i128 %i.1, i128 %idx.2
  %tmp314 = load i128, i128* %array_getter313, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp314, i128 %add309, i1* @constraint.508)
  %tmp318 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 2, i128 %i.1, i128 %idx.2
  store i128 %add309, i128* %tmp318, align 4
  %array_getter322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 2, i128 %i.1, i128 %idx.2
  %tmp323 = load i128, i128* %array_getter322, align 4
  %array_getter328 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_inner, i128 0, i128 %i.1, i128 %idx.2
  %a329 = load i128, i128* %array_getter328, align 4
  %array_getter333 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %tmp, i128 0, i128 2, i128 %i.1, i128 %idx.2
  %tmp334 = load i128, i128* %array_getter333, align 4
  %sub335 = sub i128 %a329, %tmp334
  %mul336 = mul i128 %ellipticcurveadd.isinfinity.read_output_inner, %sub335
  %add337 = add i128 %tmp323, %mul336
  %array_getter341 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %idx.2
  %out342 = load i128, i128* %array_getter341, align 4
  call void @fn_intrinsic_add_constraint(i128 %out342, i128 %add337, i1* @constraint.509)
  %out346 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %idx.2
  store i128 %add337, i128* %out346, align 4
  br label %loop.latch347

loop.latch347:                                    ; preds = %loop.body230
  %add349 = add i128 %idx.2, 1
  %slt352 = icmp slt i128 %add349, %ellipticcurveadd.k.read_arg_inner
  br i1 %slt352, label %loop.body230, label %loop.exit353

loop.exit353:                                     ; preds = %loop.latch347
  br label %loop.latch354

loop.latch354:                                    ; preds = %loop.exit353
  %add356 = add i128 %i.1, 1
  %slt358 = icmp slt i128 %add356, 2
  br i1 %slt358, label %loop.body229, label %loop.exit359

loop.exit359:                                     ; preds = %loop.latch354
  br label %exit

exit:                                             ; preds = %loop.exit359
  %ellipticcurveadd.add_is_double.write_inter_inner361 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 9
  store i128 %ellipticcurveadd.add_is_double.read_inter_inner, i128* %ellipticcurveadd.add_is_double.write_inter_inner361, align 4
  %ellipticcurveadd.ab0.write_inter_inner363 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 10
  store i128 %ellipticcurveadd.ab0.read_inter_inner, i128* %ellipticcurveadd.ab0.write_inter_inner363, align 4
  %ellipticcurveadd.anegb.write_inter_inner365 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 11
  store i128 %ellipticcurveadd.anegb.read_inter_inner, i128* %ellipticcurveadd.anegb.write_inter_inner365, align 4
  %ellipticcurveadd.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 12
  store [256 x [256 x [256 x i128]]]* %tmp, [256 x [256 x [256 x i128]]]** %ellipticcurveadd.tmp.write_inter_inner, align 8
  %ellipticcurveadd.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 13
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurveadd.out.write_output_inner, align 8
  %ellipticcurveadd.isinfinity.write_output_inner369 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %0, i32 0, i32 14
  store i128 %ellipticcurveadd.isinfinity.read_output_inner, i128* %ellipticcurveadd.isinfinity.write_output_inner369, align 4
  ret void
}

define %struct_template_circuit_ellipticcurveadd* @fn_template_build_ellipticcurveadd(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurveadd = alloca %struct_template_circuit_ellipticcurveadd, align 8
  %ellipticcurveadd.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveadd.n.write_arg_inner, align 4
  %ellipticcurveadd.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveadd.k.write_arg_inner, align 4
  %ellipticcurveadd.a1.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 2
  store i128 %2, i128* %ellipticcurveadd.a1.write_arg_inner, align 4
  %ellipticcurveadd.b1.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 3
  store i128 %3, i128* %ellipticcurveadd.b1.write_arg_inner, align 4
  %ellipticcurveadd.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurveadd.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveadd* %struct_template_circuit_ellipticcurveadd
}

define void @fn_template_init_signedfp2multiplynocarrycompressthree(%struct_template_circuit_signedfp2multiplynocarrycompressthree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 0
  %signedfp2multiplynocarrycompressthree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 1
  %signedfp2multiplynocarrycompressthree.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 2
  %signedfp2multiplynocarrycompressthree.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 3
  %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 4
  %signedfp2multiplynocarrycompressthree.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 5
  %signedfp2multiplynocarrycompressthree.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 6
  %signedfp2multiplynocarrycompressthree.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 7
  %signedfp2multiplynocarrycompressthree.c.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter7, align 8
  %LOGK8 = call i128 @fn_intrinsic_inline_init()
  %i9 = call i128 @fn_intrinsic_inline_init()
  %idx10 = call i128 @fn_intrinsic_inline_init()
  %j11 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %call = call i128 @log_ceil(i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner)
  %mul = mul i128 2, %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner
  %add = add i128 %mul, %call
  %add14 = add i128 %add, 1
  %call15 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp2multiplynocarrycompressthree.n.read_arg_inner, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner, i128 %add14)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch51, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add53, %loop.latch51 ]
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add48, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.a.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %a19 = load i128, i128* %array_getter, align 4
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter21, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab25, i128 %a19, i1* @constraint.510)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter27 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter26, align 8
  %ab30 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter27, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a19, i128* %ab30, align 4
  %array_getter33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.b.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %b34 = load i128, i128* %array_getter33, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab40, i128 %b34, i1* @constraint.511)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter43 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter42, align 8
  %ab46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter43, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b34, i128* %ab46, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body16
  %add48 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add48, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  br i1 %slt, label %loop.body16, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.exit
  %add53 = add i128 %i.0, 1
  %slt55 = icmp slt i128 %add53, 2
  br i1 %slt55, label %loop.body, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  %mul59 = mul i128 2, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub = sub i128 %mul59, 1
  %mul62 = mul i128 3, %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner
  %mul64 = mul i128 2, %call
  %add65 = add i128 %mul62, %mul64
  %add66 = add i128 %add65, 2
  %call67 = call %struct_template_circuit_signedfp2multiplynocarryunequal* @fn_template_build_signedfp2multiplynocarryunequal(i128 %signedfp2multiplynocarrycompressthree.n.read_arg_inner, i128 %sub, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner, i128 %add66)
  br label %loop.body68

loop.body68:                                      ; preds = %loop.latch121, %loop.exit56
  %i.1 = phi i128 [ 0, %loop.exit56 ], [ %add123, %loop.latch121 ]
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch88, %loop.body68
  %idx.1 = phi i128 [ 0, %loop.body68 ], [ %add90, %loop.latch88 ]
  %struct_getter71 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter71, align 8
  %array_getter74 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %idx.1
  %ab75 = load i128, i128* %array_getter74, align 4
  %struct_getter77 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call67, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter77, align 8
  %array_getter80 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter, i128 0, i128 %i.1, i128 %idx.1
  %abc81 = load i128, i128* %array_getter80, align 4
  call void @fn_intrinsic_add_constraint(i128 %abc81, i128 %ab75, i1* @constraint.512)
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call67, i32 0, i32 4
  %signedfp2multiplynocarryunequal.a.read_input_outter84 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter83, align 8
  %abc87 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.a.read_input_outter84, i128 0, i128 %i.1, i128 %idx.1
  store i128 %ab75, i128* %abc87, align 4
  br label %loop.latch88

loop.latch88:                                     ; preds = %loop.body69
  %add90 = add i128 %idx.1, 1
  %mul93 = mul i128 2, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub94 = sub i128 %mul93, 1
  %slt95 = icmp slt i128 %add90, %sub94
  br i1 %slt95, label %loop.body69, label %loop.exit96

loop.exit96:                                      ; preds = %loop.latch88
  br label %loop.body97

loop.body97:                                      ; preds = %loop.latch114, %loop.exit96
  %idx.2 = phi i128 [ 0, %loop.exit96 ], [ %add116, %loop.latch114 ]
  %array_getter100 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.c.read_input_inner, i128 0, i128 %i.1, i128 %idx.2
  %c101 = load i128, i128* %array_getter100, align 4
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call67, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter103, align 8
  %array_getter106 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter, i128 0, i128 %i.1, i128 %idx.2
  %abc107 = load i128, i128* %array_getter106, align 4
  call void @fn_intrinsic_add_constraint(i128 %abc107, i128 %c101, i1* @constraint.513)
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call67, i32 0, i32 5
  %signedfp2multiplynocarryunequal.b.read_input_outter110 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter109, align 8
  %abc113 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.b.read_input_outter110, i128 0, i128 %i.1, i128 %idx.2
  store i128 %c101, i128* %abc113, align 4
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.body97
  %add116 = add i128 %idx.2, 1
  %slt119 = icmp slt i128 %add116, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  br i1 %slt119, label %loop.body97, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch114
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.exit120
  %add123 = add i128 %i.1, 1
  %slt125 = icmp slt i128 %add123, 2
  br i1 %slt125, label %loop.body68, label %loop.exit126

loop.exit126:                                     ; preds = %loop.latch121
  %mul130 = mul i128 2, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub131 = sub i128 %mul130, 2
  %mul133 = mul i128 3, %signedfp2multiplynocarrycompressthree.m_in.read_arg_inner
  %add135 = add i128 %mul133, %signedfp2multiplynocarrycompressthree.n.read_arg_inner
  %mul137 = mul i128 3, %call
  %add138 = add i128 %add135, %mul137
  %add139 = add i128 %add138, 3
  %call140 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %signedfp2multiplynocarrycompressthree.n.read_arg_inner, i128 %signedfp2multiplynocarrycompressthree.k.read_arg_inner, i128 %sub131, [256 x i128]* %signedfp2multiplynocarrycompressthree.p.read_arg_inner, i128 %add139)
  br label %loop.body141

loop.body141:                                     ; preds = %loop.latch170, %loop.exit126
  %i.2 = phi i128 [ 0, %loop.exit126 ], [ %add172, %loop.latch170 ]
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch161, %loop.body141
  %j.0 = phi i128 [ 0, %loop.body141 ], [ %add163, %loop.latch161 ]
  %struct_getter144 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarryunequal, %struct_template_circuit_signedfp2multiplynocarryunequal* %call67, i32 0, i32 6
  %signedfp2multiplynocarryunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter144, align 8
  %array_getter147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarryunequal.out.read_output_outter, i128 0, i128 %i.2, i128 %j.0
  %abc148 = load i128, i128* %array_getter147, align 4
  %struct_getter150 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call140, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter150, align 8
  %array_getter153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.2, i128 %j.0
  %compress154 = load i128, i128* %array_getter153, align 4
  call void @fn_intrinsic_add_constraint(i128 %compress154, i128 %abc148, i1* @constraint.514)
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call140, i32 0, i32 5
  %fp2compress.in.read_input_outter157 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter156, align 8
  %compress160 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter157, i128 0, i128 %i.2, i128 %j.0
  store i128 %abc148, i128* %compress160, align 4
  br label %loop.latch161

loop.latch161:                                    ; preds = %loop.body142
  %add163 = add i128 %j.0, 1
  %mul166 = mul i128 3, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  %sub167 = sub i128 %mul166, 2
  %slt168 = icmp slt i128 %add163, %sub167
  br i1 %slt168, label %loop.body142, label %loop.exit169

loop.exit169:                                     ; preds = %loop.latch161
  br label %loop.latch170

loop.latch170:                                    ; preds = %loop.exit169
  %add172 = add i128 %i.2, 1
  %slt174 = icmp slt i128 %add172, 2
  br i1 %slt174, label %loop.body141, label %loop.exit175

loop.exit175:                                     ; preds = %loop.latch170
  br label %loop.body176

loop.body176:                                     ; preds = %loop.latch200, %loop.exit175
  %i.3 = phi i128 [ 0, %loop.exit175 ], [ %add202, %loop.latch200 ]
  br label %loop.body177

loop.body177:                                     ; preds = %loop.latch193, %loop.body176
  %j.1 = phi i128 [ 0, %loop.body176 ], [ %add195, %loop.latch193 ]
  %struct_getter179 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call140, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter179, align 8
  %array_getter182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.3, i128 %j.1
  %compress183 = load i128, i128* %array_getter182, align 4
  %array_getter187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.3, i128 %j.1
  %out188 = load i128, i128* %array_getter187, align 4
  call void @fn_intrinsic_add_constraint(i128 %out188, i128 %compress183, i1* @constraint.515)
  %out192 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.3, i128 %j.1
  store i128 %compress183, i128* %out192, align 4
  br label %loop.latch193

loop.latch193:                                    ; preds = %loop.body177
  %add195 = add i128 %j.1, 1
  %slt198 = icmp slt i128 %add195, %signedfp2multiplynocarrycompressthree.k.read_arg_inner
  br i1 %slt198, label %loop.body177, label %loop.exit199

loop.exit199:                                     ; preds = %loop.latch193
  br label %loop.latch200

loop.latch200:                                    ; preds = %loop.exit199
  %add202 = add i128 %i.3, 1
  %slt204 = icmp slt i128 %add202, 2
  br i1 %slt204, label %loop.body176, label %loop.exit205

loop.exit205:                                     ; preds = %loop.latch200
  br label %exit

exit:                                             ; preds = %loop.exit205
  %signedfp2multiplynocarrycompressthree.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %0, i32 0, i32 8
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarrycompressthree.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarrycompressthree* @fn_template_build_signedfp2multiplynocarrycompressthree(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_signedfp2multiplynocarrycompressthree = alloca %struct_template_circuit_signedfp2multiplynocarrycompressthree, align 8
  %signedfp2multiplynocarrycompressthree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarrycompressthree.n.write_arg_inner, align 4
  %signedfp2multiplynocarrycompressthree.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarrycompressthree.k.write_arg_inner, align 4
  %signedfp2multiplynocarrycompressthree.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %signedfp2multiplynocarrycompressthree.p.write_arg_inner, align 8
  %signedfp2multiplynocarrycompressthree.m_in.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 3
  store i128 %3, i128* %signedfp2multiplynocarrycompressthree.m_in.write_arg_inner, align 4
  %signedfp2multiplynocarrycompressthree.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree, i32 0, i32 4
  store i128 %4, i128* %signedfp2multiplynocarrycompressthree.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarrycompressthree* %struct_template_circuit_signedfp2multiplynocarrycompressthree
}

define [256 x [256 x [256 x i128]]]* @find_Fp12_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x [256 x [256 x i128]]]* %3) {
entry:
  %i8 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %m13 = call i128 @fn_intrinsic_inline_init()
  %uniform_array = alloca [256 x [256 x [256 x i128]]], align 8
  %uniform_array18 = alloca [256 x [256 x [256 x i128]]], align 8
  %uniform_array19 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch88, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add90, %loop.latch88 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch82, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add84, %loop.latch82 ]
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch, %loop.body20
  %m.0 = phi i128 [ 0, %loop.body20 ], [ %add80, %loop.latch ]
  %mul = mul i128 2, %i.0
  %add = add i128 %mul, 1
  %A25 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %add, i128 %j.0, i128 %m.0
  store i128 0, i128* %A25, align 4
  %mul28 = mul i128 2, %i.0
  %add29 = add i128 %mul28, 1
  %B32 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array18, i128 0, i128 %add29, i128 %j.0, i128 %m.0
  store i128 0, i128* %B32, align 4
  %mul34 = mul i128 2, %i.0
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %mul34, i128 %j.0, i128 %m.0
  %a37 = load i128, i128* %array_getter, align 4
  %mul40 = mul i128 2, %i.0
  %A43 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array, i128 0, i128 %mul40, i128 %j.0, i128 %m.0
  store i128 %a37, i128* %A43, align 4
  %mul46 = mul i128 2, %i.0
  %add47 = add i128 %mul46, 1
  %array_getter50 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %add47, i128 %j.0, i128 %m.0
  %a51 = load i128, i128* %array_getter50, align 4
  %mul54 = mul i128 2, %i.0
  %B57 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array18, i128 0, i128 %mul54, i128 %j.0, i128 %m.0
  store i128 %a51, i128* %B57, align 4
  %mul60 = mul i128 2, %i.0
  %Bw63 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array19, i128 0, i128 %mul60, i128 %j.0, i128 %m.0
  store i128 0, i128* %Bw63, align 4
  %mul66 = mul i128 2, %i.0
  %add67 = add i128 %mul66, 1
  %array_getter70 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %3, i128 0, i128 %add67, i128 %j.0, i128 %m.0
  %a71 = load i128, i128* %array_getter70, align 4
  %mul74 = mul i128 2, %i.0
  %add75 = add i128 %mul74, 1
  %Bw78 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array19, i128 0, i128 %add75, i128 %j.0, i128 %m.0
  store i128 %a71, i128* %Bw78, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body21
  %add80 = add i128 %m.0, 1
  %slt = icmp slt i128 %add80, %1
  br i1 %slt, label %loop.body21, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch82

loop.latch82:                                     ; preds = %loop.exit
  %add84 = add i128 %j.0, 1
  %slt86 = icmp slt i128 %add84, 2
  br i1 %slt86, label %loop.body20, label %loop.exit87

loop.exit87:                                      ; preds = %loop.latch82
  br label %loop.latch88

loop.latch88:                                     ; preds = %loop.exit87
  %add90 = add i128 %i.0, 1
  %slt92 = icmp slt i128 %add90, 3
  br i1 %slt92, label %loop.body, label %loop.exit93

loop.exit93:                                      ; preds = %loop.latch88
  %call = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %uniform_array, [256 x [256 x [256 x i128]]]* %uniform_array, [256 x i128]* %2)
  %call102 = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %uniform_array18, [256 x [256 x [256 x i128]]]* %uniform_array18, [256 x i128]* %2)
  %call108 = call [256 x [256 x [256 x i128]]]* @find_Fp12_diff(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %uniform_array, [256 x [256 x [256 x i128]]]* %uniform_array19, [256 x i128]* %2)
  %uniform_array109 = alloca [256 x [256 x [256 x i128]]], align 8
  br label %loop.body110

loop.body110:                                     ; preds = %loop.latch142, %loop.exit93
  %i.1 = phi i128 [ 0, %loop.exit93 ], [ %add144, %loop.latch142 ]
  br label %loop.body111

loop.body111:                                     ; preds = %loop.latch136, %loop.body110
  %j.1 = phi i128 [ 0, %loop.body110 ], [ %add138, %loop.latch136 ]
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch129, %loop.body111
  %m.1 = phi i128 [ 0, %loop.body111 ], [ %add131, %loop.latch129 ]
  %eq = icmp eq i128 %i.1, 2
  %eq115 = icmp eq i128 %j.1, 0
  %and = and i1 %eq, %eq115
  %eq117 = icmp eq i128 %m.1, 0
  %and118 = and i1 %and, %eq117
  br i1 %and118, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body112
  %w2123 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array109, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  store i128 1, i128* %w2123, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body112
  %w2128 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %uniform_array109, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  store i128 0, i128* %w2128, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch129

loop.latch129:                                    ; preds = %if.exit
  %add131 = add i128 %m.1, 1
  %slt134 = icmp slt i128 %add131, %1
  br i1 %slt134, label %loop.body112, label %loop.exit135

loop.exit135:                                     ; preds = %loop.latch129
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.exit135
  %add138 = add i128 %j.1, 1
  %slt140 = icmp slt i128 %add138, 2
  br i1 %slt140, label %loop.body111, label %loop.exit141

loop.exit141:                                     ; preds = %loop.latch136
  br label %loop.latch142

loop.latch142:                                    ; preds = %loop.exit141
  %add144 = add i128 %i.1, 1
  %slt146 = icmp slt i128 %add144, 6
  br i1 %slt146, label %loop.body110, label %loop.exit147

loop.exit147:                                     ; preds = %loop.latch142
  %call153 = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %call102, [256 x [256 x [256 x i128]]]* %uniform_array109, [256 x i128]* %2)
  %call159 = call [256 x [256 x [256 x i128]]]* @find_Fp12_diff(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %call, [256 x [256 x [256 x i128]]]* %call153, [256 x i128]* %2)
  %uniform_array160 = alloca [256 x [256 x i128]], align 8
  %uniform_array161 = alloca [256 x [256 x i128]], align 8
  %uniform_array162 = alloca [256 x [256 x i128]], align 8
  br label %loop.body163

loop.body163:                                     ; preds = %loop.latch199, %loop.exit147
  %i.2 = phi i128 [ 0, %loop.exit147 ], [ %add201, %loop.latch199 ]
  br label %loop.body164

loop.body164:                                     ; preds = %loop.latch192, %loop.body163
  %m.2 = phi i128 [ 0, %loop.body163 ], [ %add194, %loop.latch192 ]
  %array_getter168 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call159, i128 0, i128 0, i128 %i.2, i128 %m.2
  %conjProd169 = load i128, i128* %array_getter168, align 4
  %a0173 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array160, i128 0, i128 %i.2, i128 %m.2
  store i128 %conjProd169, i128* %a0173, align 4
  %array_getter177 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call159, i128 0, i128 2, i128 %i.2, i128 %m.2
  %conjProd178 = load i128, i128* %array_getter177, align 4
  %a1182 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array161, i128 0, i128 %i.2, i128 %m.2
  store i128 %conjProd178, i128* %a1182, align 4
  %array_getter186 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call159, i128 0, i128 4, i128 %i.2, i128 %m.2
  %conjProd187 = load i128, i128* %array_getter186, align 4
  %a2191 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array162, i128 0, i128 %i.2, i128 %m.2
  store i128 %conjProd187, i128* %a2191, align 4
  br label %loop.latch192

loop.latch192:                                    ; preds = %loop.body164
  %add194 = add i128 %m.2, 1
  %slt197 = icmp slt i128 %add194, %1
  br i1 %slt197, label %loop.body164, label %loop.exit198

loop.exit198:                                     ; preds = %loop.latch192
  br label %loop.latch199

loop.latch199:                                    ; preds = %loop.exit198
  %add201 = add i128 %i.2, 1
  %slt203 = icmp slt i128 %add201, 2
  br i1 %slt203, label %loop.body163, label %loop.exit204

loop.exit204:                                     ; preds = %loop.latch199
  %call211 = call [256 x [256 x [256 x i128]]]* @find_Fp6_inverse(i128 %0, i128 %1, [256 x i128]* %2, [256 x [256 x i128]]* %uniform_array160, [256 x [256 x i128]]* %uniform_array161, [256 x [256 x i128]]* %uniform_array162)
  %call217 = call [256 x [256 x [256 x i128]]]* @find_Fp12_product(i128 %0, i128 %1, [256 x [256 x [256 x i128]]]* %call108, [256 x [256 x [256 x i128]]]* %call211, [256 x i128]* %2)
  ret [256 x [256 x [256 x i128]]]* %call217
}

define void @fn_template_init_fp6invert(%struct_template_circuit_fp6invert* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 0
  %fp6invert.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 1
  %fp6invert.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 2
  %fp6invert.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 3
  %fp6invert.a0.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 4
  %fp6invert.a1.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 5
  %fp6invert.a2.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %real_out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %idx8 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %call = call [256 x [256 x [256 x i128]]]* @find_Fp6_inverse(i128 %fp6invert.n.read_arg_inner, i128 %fp6invert.k.read_arg_inner, [256 x i128]* %fp6invert.p.read_arg_inner, [256 x [256 x i128]]* %fp6invert.a0.read_input_inner, [256 x [256 x i128]]* %fp6invert.a1.read_input_inner, [256 x [256 x i128]]* %fp6invert.a2.read_input_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch30, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add32, %loop.latch30 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch24, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add26, %loop.latch24 ]
  br label %loop.body11

loop.body11:                                      ; preds = %loop.latch, %loop.body10
  %idx.0 = phi i128 [ 0, %loop.body10 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %out16 = load i128, i128* %array_getter, align 4
  %real_out20 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %real_out, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %out16, i128* %real_out20, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body11
  %add = add i128 %idx.0, 1
  %slt = icmp slt i128 %add, %fp6invert.k.read_arg_inner
  br i1 %slt, label %loop.body11, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch24

loop.latch24:                                     ; preds = %loop.exit
  %add26 = add i128 %j.0, 1
  %slt28 = icmp slt i128 %add26, 2
  br i1 %slt28, label %loop.body10, label %loop.exit29

loop.exit29:                                      ; preds = %loop.latch24
  br label %loop.latch30

loop.latch30:                                     ; preds = %loop.exit29
  %add32 = add i128 %i.0, 1
  %slt34 = icmp slt i128 %add32, 6
  br i1 %slt34, label %loop.body, label %loop.exit35

loop.exit35:                                      ; preds = %loop.latch30
  br label %exit

exit:                                             ; preds = %loop.exit35
  %fp6invert.real_out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %real_out, [256 x [256 x [256 x i128]]]** %fp6invert.real_out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp6invert* @fn_template_build_fp6invert(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp6invert = alloca %struct_template_circuit_fp6invert, align 8
  %fp6invert.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert, i32 0, i32 0
  store i128 %0, i128* %fp6invert.n.write_arg_inner, align 4
  %fp6invert.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert, i32 0, i32 1
  store i128 %1, i128* %fp6invert.k.write_arg_inner, align 4
  %fp6invert.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp6invert, %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp6invert.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp6invert* %struct_template_circuit_fp6invert
}

define void @fn_template_init_signedfp2multiplynocarrycompress(%struct_template_circuit_signedfp2multiplynocarrycompress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 0
  %signedfp2multiplynocarrycompress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 1
  %signedfp2multiplynocarrycompress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 2
  %signedfp2multiplynocarrycompress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 3
  %signedfp2multiplynocarrycompress.m_in.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 4
  %signedfp2multiplynocarrycompress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %LOGK17 = call i128 @fn_intrinsic_inline_init()
  %LOGK28 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %idx10 = call i128 @fn_intrinsic_inline_init()
  %i11 = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 2, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul)
  %mul13 = mul i128 2, %signedfp2multiplynocarrycompress.m_in.read_arg_inner
  %add = add i128 %mul13, %call
  %call15 = call %struct_template_circuit_signedfp2multiplynocarry* @fn_template_build_signedfp2multiplynocarry(i128 %signedfp2multiplynocarrycompress.n.read_arg_inner, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch51, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add53, %loop.latch51 ]
  br label %loop.body16

loop.body16:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add48, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %a19 = load i128, i128* %array_getter, align 4
  %struct_getter21 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter21, align 8
  %array_getter24 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab25 = load i128, i128* %array_getter24, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab25, i128 %a19, i1* @constraint.516)
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 3
  %signedfp2multiplynocarry.a.read_input_outter27 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter26, align 8
  %ab30 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.a.read_input_outter27, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a19, i128* %ab30, align 4
  %array_getter33 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %b34 = load i128, i128* %array_getter33, align 4
  %struct_getter36 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter36, align 8
  %array_getter39 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %ab40 = load i128, i128* %array_getter39, align 4
  call void @fn_intrinsic_add_constraint(i128 %ab40, i128 %b34, i1* @constraint.517)
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 4
  %signedfp2multiplynocarry.b.read_input_outter43 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter42, align 8
  %ab46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.b.read_input_outter43, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b34, i128* %ab46, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body16
  %add48 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add48, %signedfp2multiplynocarrycompress.k.read_arg_inner
  br i1 %slt, label %loop.body16, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch51

loop.latch51:                                     ; preds = %loop.exit
  %add53 = add i128 %i.0, 1
  %slt55 = icmp slt i128 %add53, 2
  br i1 %slt55, label %loop.body, label %loop.exit56

loop.exit56:                                      ; preds = %loop.latch51
  %mul58 = mul i128 2, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %mul60 = mul i128 %mul58, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %call61 = call i128 @log_ceil(i128 %mul60)
  %sub = sub i128 %signedfp2multiplynocarrycompress.k.read_arg_inner, 1
  %mul66 = mul i128 2, %signedfp2multiplynocarrycompress.m_in.read_arg_inner
  %add68 = add i128 %mul66, %signedfp2multiplynocarrycompress.n.read_arg_inner
  %add70 = add i128 %add68, %call61
  %call71 = call %struct_template_circuit_fp2compress* @fn_template_build_fp2compress(i128 %signedfp2multiplynocarrycompress.n.read_arg_inner, i128 %signedfp2multiplynocarrycompress.k.read_arg_inner, i128 %sub, [256 x i128]* %signedfp2multiplynocarrycompress.p.read_arg_inner, i128 %add70)
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch101, %loop.exit56
  %i.1 = phi i128 [ 0, %loop.exit56 ], [ %add103, %loop.latch101 ]
  br label %loop.body73

loop.body73:                                      ; preds = %loop.latch92, %loop.body72
  %j.0 = phi i128 [ 0, %loop.body72 ], [ %add94, %loop.latch92 ]
  %struct_getter75 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarry, %struct_template_circuit_signedfp2multiplynocarry* %call15, i32 0, i32 5
  %signedfp2multiplynocarry.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter75, align 8
  %array_getter78 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %j.0
  %ab79 = load i128, i128* %array_getter78, align 4
  %struct_getter81 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call71, i32 0, i32 5
  %fp2compress.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter81, align 8
  %array_getter84 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %compress85 = load i128, i128* %array_getter84, align 4
  call void @fn_intrinsic_add_constraint(i128 %compress85, i128 %ab79, i1* @constraint.518)
  %struct_getter87 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call71, i32 0, i32 5
  %fp2compress.in.read_input_outter88 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter87, align 8
  %compress91 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.in.read_input_outter88, i128 0, i128 %i.1, i128 %j.0
  store i128 %ab79, i128* %compress91, align 4
  br label %loop.latch92

loop.latch92:                                     ; preds = %loop.body73
  %add94 = add i128 %j.0, 1
  %mul97 = mul i128 2, %signedfp2multiplynocarrycompress.k.read_arg_inner
  %sub98 = sub i128 %mul97, 1
  %slt99 = icmp slt i128 %add94, %sub98
  br i1 %slt99, label %loop.body73, label %loop.exit100

loop.exit100:                                     ; preds = %loop.latch92
  br label %loop.latch101

loop.latch101:                                    ; preds = %loop.exit100
  %add103 = add i128 %i.1, 1
  %slt105 = icmp slt i128 %add103, 2
  br i1 %slt105, label %loop.body72, label %loop.exit106

loop.exit106:                                     ; preds = %loop.latch101
  br label %loop.body107

loop.body107:                                     ; preds = %loop.latch131, %loop.exit106
  %i.2 = phi i128 [ 0, %loop.exit106 ], [ %add133, %loop.latch131 ]
  br label %loop.body108

loop.body108:                                     ; preds = %loop.latch124, %loop.body107
  %j.1 = phi i128 [ 0, %loop.body107 ], [ %add126, %loop.latch124 ]
  %struct_getter110 = getelementptr inbounds %struct_template_circuit_fp2compress, %struct_template_circuit_fp2compress* %call71, i32 0, i32 6
  %fp2compress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter110, align 8
  %array_getter113 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2compress.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1
  %compress114 = load i128, i128* %array_getter113, align 4
  %array_getter118 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.1
  %out119 = load i128, i128* %array_getter118, align 4
  call void @fn_intrinsic_add_constraint(i128 %out119, i128 %compress114, i1* @constraint.519)
  %out123 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.1
  store i128 %compress114, i128* %out123, align 4
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.body108
  %add126 = add i128 %j.1, 1
  %slt129 = icmp slt i128 %add126, %signedfp2multiplynocarrycompress.k.read_arg_inner
  br i1 %slt129, label %loop.body108, label %loop.exit130

loop.exit130:                                     ; preds = %loop.latch124
  br label %loop.latch131

loop.latch131:                                    ; preds = %loop.exit130
  %add133 = add i128 %i.2, 1
  %slt135 = icmp slt i128 %add133, 2
  br i1 %slt135, label %loop.body107, label %loop.exit136

loop.exit136:                                     ; preds = %loop.latch131
  br label %exit

exit:                                             ; preds = %loop.exit136
  %signedfp2multiplynocarrycompress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2multiplynocarrycompress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_signedfp2multiplynocarrycompress = alloca %struct_template_circuit_signedfp2multiplynocarrycompress, align 8
  %signedfp2multiplynocarrycompress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 0
  store i128 %0, i128* %signedfp2multiplynocarrycompress.n.write_arg_inner, align 4
  %signedfp2multiplynocarrycompress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 1
  store i128 %1, i128* %signedfp2multiplynocarrycompress.k.write_arg_inner, align 4
  %signedfp2multiplynocarrycompress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %signedfp2multiplynocarrycompress.p.write_arg_inner, align 8
  %signedfp2multiplynocarrycompress.m_in.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 3
  store i128 %3, i128* %signedfp2multiplynocarrycompress.m_in.write_arg_inner, align 4
  %signedfp2multiplynocarrycompress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress, i32 0, i32 4
  store i128 %4, i128* %signedfp2multiplynocarrycompress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp2multiplynocarrycompress* %struct_template_circuit_signedfp2multiplynocarrycompress
}

define void @fn_template_init_ellipticcurveaddfp2(%struct_template_circuit_ellipticcurveaddfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 0
  %ellipticcurveaddfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 1
  %ellipticcurveaddfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 2
  %ellipticcurveaddfp2.a2.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 3
  %ellipticcurveaddfp2.b2.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 4
  %ellipticcurveaddfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 5
  %ellipticcurveaddfp2.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 6
  %ellipticcurveaddfp2.aisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %struct_getter7 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 7
  %ellipticcurveaddfp2.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter7, align 8
  %struct_getter8 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 8
  %ellipticcurveaddfp2.bisinfinity.read_input_inner = load i128, i128* %struct_getter8, align 4
  %i9 = call i128 @fn_intrinsic_inline_init()
  %j10 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %tmp = bitcast i8* %malloccall to [256 x [256 x [256 x [256 x i128]]]]*
  %add_is_double = call i128 @fn_intrinsic_inline_init()
  %idx11 = call i128 @fn_intrinsic_inline_init()
  %ab0 = call i128 @fn_intrinsic_inline_init()
  %anegb = call i128 @fn_intrinsic_inline_init()
  %malloccall12 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall12 to [256 x [256 x [256 x i128]]]*
  %isInfinity = call i128 @fn_intrinsic_inline_init()
  %call = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  %call16 = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch88, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add90, %loop.latch88 ]
  br label %loop.body17

loop.body17:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add85, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, i128 0, i128 0, i128 %i.0, i128 %idx.0
  %a20 = load i128, i128* %array_getter, align 4
  %struct_getter22 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 3
  %fp2isequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter22, align 8
  %array_getter25 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %x_equal26 = load i128, i128* %array_getter25, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_equal26, i128 %a20, i1* @constraint.520)
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 3
  %fp2isequal.a.read_input_outter28 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter27, align 8
  %x_equal31 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter28, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a20, i128* %x_equal31, align 4
  %array_getter34 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 0, i128 %i.0, i128 %idx.0
  %b35 = load i128, i128* %array_getter34, align 4
  %struct_getter37 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 4
  %fp2isequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter37, align 8
  %array_getter40 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %x_equal41 = load i128, i128* %array_getter40, align 4
  call void @fn_intrinsic_add_constraint(i128 %x_equal41, i128 %b35, i1* @constraint.521)
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 4
  %fp2isequal.b.read_input_outter44 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter43, align 8
  %x_equal47 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter44, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b35, i128* %x_equal47, align 4
  %array_getter51 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, i128 0, i128 1, i128 %i.0, i128 %idx.0
  %a52 = load i128, i128* %array_getter51, align 4
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call16, i32 0, i32 3
  %fp2isequal.a.read_input_outter55 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter54, align 8
  %array_getter58 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter55, i128 0, i128 %i.0, i128 %idx.0
  %y_equal59 = load i128, i128* %array_getter58, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_equal59, i128 %a52, i1* @constraint.522)
  %struct_getter61 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call16, i32 0, i32 3
  %fp2isequal.a.read_input_outter62 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter61, align 8
  %y_equal65 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter62, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a52, i128* %y_equal65, align 4
  %array_getter69 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 1, i128 %i.0, i128 %idx.0
  %b70 = load i128, i128* %array_getter69, align 4
  %struct_getter72 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call16, i32 0, i32 4
  %fp2isequal.b.read_input_outter73 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter72, align 8
  %array_getter76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter73, i128 0, i128 %i.0, i128 %idx.0
  %y_equal77 = load i128, i128* %array_getter76, align 4
  call void @fn_intrinsic_add_constraint(i128 %y_equal77, i128 %b70, i1* @constraint.523)
  %struct_getter79 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call16, i32 0, i32 4
  %fp2isequal.b.read_input_outter80 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter79, align 8
  %y_equal83 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter80, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b70, i128* %y_equal83, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body17
  %add85 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add85, %ellipticcurveaddfp2.k.read_arg_inner
  br i1 %slt, label %loop.body17, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch88

loop.latch88:                                     ; preds = %loop.exit
  %add90 = add i128 %i.0, 1
  %slt92 = icmp slt i128 %add90, 2
  br i1 %slt92, label %loop.body, label %loop.exit93

loop.exit93:                                      ; preds = %loop.latch88
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter = load i128, i128* %struct_getter95, align 4
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call16, i32 0, i32 5
  %fp2isequal.out.read_output_outter98 = load i128, i128* %struct_getter97, align 4
  %mul = mul i128 %fp2isequal.out.read_output_outter, %fp2isequal.out.read_output_outter98
  call void @fn_intrinsic_add_constraint(i128 %add_is_double, i128 %mul, i1* @constraint.524)
  %ellipticcurveaddfp2.add_is_double.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 9
  store i128 %mul, i128* %ellipticcurveaddfp2.add_is_double.write_inter_inner, align 4
  %struct_getter102 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 9
  %ellipticcurveaddfp2.add_is_double.read_inter_inner = load i128, i128* %struct_getter102, align 4
  %call103 = call %struct_template_circuit_iszero* @fn_template_build_iszero()
  %array_getter105 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 0, i128 0, i128 0
  %b106 = load i128, i128* %array_getter105, align 4
  %struct_getter108 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call103, i32 0, i32 0
  %iszero.in.read_input_outter = load i128, i128* %struct_getter108, align 4
  call void @fn_intrinsic_add_constraint(i128 %iszero.in.read_input_outter, i128 %b106, i1* @constraint.525)
  %iszero.in.write_input_outter = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call103, i32 0, i32 0
  store i128 %b106, i128* %iszero.in.write_input_outter, align 4
  %call113 = call %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  %call117 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %ellipticcurveaddfp2.n.read_arg_inner, i128 %ellipticcurveaddfp2.k.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.a2.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.b2.read_arg_inner, [256 x i128]* %ellipticcurveaddfp2.p.read_arg_inner)
  br label %loop.body118

loop.body118:                                     ; preds = %loop.latch234, %loop.exit93
  %i.1 = phi i128 [ 0, %loop.exit93 ], [ %add236, %loop.latch234 ]
  br label %loop.body119

loop.body119:                                     ; preds = %loop.latch228, %loop.body118
  %j.0 = phi i128 [ 0, %loop.body118 ], [ %add230, %loop.latch228 ]
  br label %loop.body120

loop.body120:                                     ; preds = %loop.latch221, %loop.body119
  %idx.1 = phi i128 [ 0, %loop.body119 ], [ %add223, %loop.latch221 ]
  %array_getter125 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %a126 = load i128, i128* %array_getter125, align 4
  %struct_getter128 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter128, align 8
  %array_getter132 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %add133 = load i128, i128* %array_getter132, align 4
  call void @fn_intrinsic_add_constraint(i128 %add133, i128 %a126, i1* @constraint.526)
  %struct_getter135 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter136 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter135, align 8
  %add140 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter136, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %a126, i128* %add140, align 4
  %eq = icmp eq i128 %i.1, 0
  %eq143 = icmp eq i128 %j.0, 0
  %and = and i1 %eq, %eq143
  %eq145 = icmp eq i128 %idx.1, 0
  %and146 = and i1 %and, %eq145
  br i1 %and146, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body120
  %array_getter151 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %b152 = load i128, i128* %array_getter151, align 4
  %struct_getter154 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter155 = load i128, i128* %struct_getter154, align 4
  %struct_getter157 = getelementptr inbounds %struct_template_circuit_iszero, %struct_template_circuit_iszero* %call103, i32 0, i32 2
  %iszero.out.read_output_outter = load i128, i128* %struct_getter157, align 4
  %array_getter162 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %b163 = load i128, i128* %array_getter162, align 4
  %sub = sub i128 %iszero.out.read_output_outter, %b163
  %mul164 = mul i128 %fp2isequal.out.read_output_outter155, %sub
  %add165 = add i128 %b152, %mul164
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter167, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %add172 = load i128, i128* %array_getter171, align 4
  call void @fn_intrinsic_add_constraint(i128 %add172, i128 %add165, i1* @constraint.527)
  %struct_getter174 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter175 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter174, align 8
  %add179 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter175, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %add165, i128* %add179, align 4
  br label %if.exit

if.false:                                         ; preds = %loop.body120
  %array_getter184 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %b185 = load i128, i128* %array_getter184, align 4
  %struct_getter187 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter188 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter187, align 8
  %array_getter192 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter188, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %add193 = load i128, i128* %array_getter192, align 4
  call void @fn_intrinsic_add_constraint(i128 %add193, i128 %b185, i1* @constraint.528)
  %struct_getter195 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter196 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter195, align 8
  %add200 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter196, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %b185, i128* %add200, align 4
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %array_getter205 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %a206 = load i128, i128* %array_getter205, align 4
  %struct_getter208 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %call117, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter208, align 8
  %array_getter212 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  %doub213 = load i128, i128* %array_getter212, align 4
  call void @fn_intrinsic_add_constraint(i128 %doub213, i128 %a206, i1* @constraint.529)
  %struct_getter215 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %call117, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter216 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter215, align 8
  %doub220 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter216, i128 0, i128 %i.1, i128 %j.0, i128 %idx.1
  store i128 %a206, i128* %doub220, align 4
  br label %loop.latch221

loop.latch221:                                    ; preds = %if.exit
  %add223 = add i128 %idx.1, 1
  %slt226 = icmp slt i128 %add223, %ellipticcurveaddfp2.k.read_arg_inner
  br i1 %slt226, label %loop.body120, label %loop.exit227

loop.exit227:                                     ; preds = %loop.latch221
  br label %loop.latch228

loop.latch228:                                    ; preds = %loop.exit227
  %add230 = add i128 %j.0, 1
  %slt232 = icmp slt i128 %add230, 2
  br i1 %slt232, label %loop.body119, label %loop.exit233

loop.exit233:                                     ; preds = %loop.latch228
  br label %loop.latch234

loop.latch234:                                    ; preds = %loop.exit233
  %add236 = add i128 %i.1, 1
  %slt238 = icmp slt i128 %add236, 2
  br i1 %slt238, label %loop.body118, label %loop.exit239

loop.exit239:                                     ; preds = %loop.latch234
  %mul240 = mul i128 %ellipticcurveaddfp2.aisinfinity.read_input_inner, %ellipticcurveaddfp2.bisinfinity.read_input_inner
  call void @fn_intrinsic_add_constraint(i128 %ab0, i128 %mul240, i1* @constraint.530)
  %ellipticcurveaddfp2.ab0.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 10
  store i128 %mul240, i128* %ellipticcurveaddfp2.ab0.write_inter_inner, align 4
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 10
  %ellipticcurveaddfp2.ab0.read_inter_inner = load i128, i128* %struct_getter244, align 4
  %struct_getter246 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter247 = load i128, i128* %struct_getter246, align 4
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call, i32 0, i32 5
  %fp2isequal.out.read_output_outter250 = load i128, i128* %struct_getter249, align 4
  %struct_getter252 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %call16, i32 0, i32 5
  %fp2isequal.out.read_output_outter253 = load i128, i128* %struct_getter252, align 4
  %mul254 = mul i128 %fp2isequal.out.read_output_outter250, %fp2isequal.out.read_output_outter253
  %sub255 = sub i128 %fp2isequal.out.read_output_outter247, %mul254
  call void @fn_intrinsic_add_constraint(i128 %anegb, i128 %sub255, i1* @constraint.531)
  %ellipticcurveaddfp2.anegb.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 11
  store i128 %sub255, i128* %ellipticcurveaddfp2.anegb.write_inter_inner, align 4
  %struct_getter259 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 11
  %ellipticcurveaddfp2.anegb.read_inter_inner = load i128, i128* %struct_getter259, align 4
  %add262 = add i128 %ellipticcurveaddfp2.ab0.read_inter_inner, %ellipticcurveaddfp2.anegb.read_inter_inner
  %mul265 = mul i128 %ellipticcurveaddfp2.ab0.read_inter_inner, %ellipticcurveaddfp2.anegb.read_inter_inner
  %sub266 = sub i128 %add262, %mul265
  call void @fn_intrinsic_add_constraint(i128 %isInfinity, i128 %sub266, i1* @constraint.532)
  %ellipticcurveaddfp2.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 14
  store i128 %sub266, i128* %ellipticcurveaddfp2.isinfinity.write_output_inner, align 4
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 14
  %ellipticcurveaddfp2.isinfinity.read_output_inner = load i128, i128* %struct_getter270, align 4
  br label %loop.body271

loop.body271:                                     ; preds = %loop.latch423, %loop.exit239
  %i.2 = phi i128 [ 0, %loop.exit239 ], [ %add425, %loop.latch423 ]
  br label %loop.body272

loop.body272:                                     ; preds = %loop.latch417, %loop.body271
  %j.1 = phi i128 [ 0, %loop.body271 ], [ %add419, %loop.latch417 ]
  br label %loop.body273

loop.body273:                                     ; preds = %loop.latch410, %loop.body272
  %idx.2 = phi i128 [ 0, %loop.body272 ], [ %add412, %loop.latch410 ]
  %struct_getter275 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter275, align 8
  %array_getter279 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %add280 = load i128, i128* %array_getter279, align 4
  %struct_getter283 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %call117, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter283, align 8
  %array_getter287 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %doub288 = load i128, i128* %array_getter287, align 4
  %struct_getter290 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %call113, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter291 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter290, align 8
  %array_getter295 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter291, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %add296 = load i128, i128* %array_getter295, align 4
  %sub297 = sub i128 %doub288, %add296
  %mul298 = mul i128 %ellipticcurveaddfp2.add_is_double.read_inter_inner, %sub297
  %add299 = add i128 %add280, %mul298
  %array_getter304 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp305 = load i128, i128* %array_getter304, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp305, i128 %add299, i1* @constraint.533)
  %tmp310 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add299, i128* %tmp310, align 4
  %array_getter315 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp316 = load i128, i128* %array_getter315, align 4
  %array_getter322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_inner, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %b323 = load i128, i128* %array_getter322, align 4
  %array_getter328 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp329 = load i128, i128* %array_getter328, align 4
  %sub330 = sub i128 %b323, %tmp329
  %mul331 = mul i128 %ellipticcurveaddfp2.aisinfinity.read_input_inner, %sub330
  %add332 = add i128 %tmp316, %mul331
  %array_getter337 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp338 = load i128, i128* %array_getter337, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp338, i128 %add332, i1* @constraint.534)
  %tmp343 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add332, i128* %tmp343, align 4
  %array_getter348 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp349 = load i128, i128* %array_getter348, align 4
  %array_getter355 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %a356 = load i128, i128* %array_getter355, align 4
  %array_getter361 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 1, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp362 = load i128, i128* %array_getter361, align 4
  %sub363 = sub i128 %a356, %tmp362
  %mul364 = mul i128 %ellipticcurveaddfp2.bisinfinity.read_input_inner, %sub363
  %add365 = add i128 %tmp349, %mul364
  %array_getter370 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp371 = load i128, i128* %array_getter370, align 4
  call void @fn_intrinsic_add_constraint(i128 %tmp371, i128 %add365, i1* @constraint.535)
  %tmp376 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add365, i128* %tmp376, align 4
  %array_getter381 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp382 = load i128, i128* %array_getter381, align 4
  %array_getter388 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_inner, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %a389 = load i128, i128* %array_getter388, align 4
  %array_getter394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %tmp, i128 0, i128 2, i128 %i.2, i128 %j.1, i128 %idx.2
  %tmp395 = load i128, i128* %array_getter394, align 4
  %sub396 = sub i128 %a389, %tmp395
  %mul397 = mul i128 %ellipticcurveaddfp2.isinfinity.read_output_inner, %sub396
  %add398 = add i128 %tmp382, %mul397
  %array_getter403 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  %out404 = load i128, i128* %array_getter403, align 4
  call void @fn_intrinsic_add_constraint(i128 %out404, i128 %add398, i1* @constraint.536)
  %out409 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.1, i128 %idx.2
  store i128 %add398, i128* %out409, align 4
  br label %loop.latch410

loop.latch410:                                    ; preds = %loop.body273
  %add412 = add i128 %idx.2, 1
  %slt415 = icmp slt i128 %add412, %ellipticcurveaddfp2.k.read_arg_inner
  br i1 %slt415, label %loop.body273, label %loop.exit416

loop.exit416:                                     ; preds = %loop.latch410
  br label %loop.latch417

loop.latch417:                                    ; preds = %loop.exit416
  %add419 = add i128 %j.1, 1
  %slt421 = icmp slt i128 %add419, 2
  br i1 %slt421, label %loop.body272, label %loop.exit422

loop.exit422:                                     ; preds = %loop.latch417
  br label %loop.latch423

loop.latch423:                                    ; preds = %loop.exit422
  %add425 = add i128 %i.2, 1
  %slt427 = icmp slt i128 %add425, 2
  br i1 %slt427, label %loop.body271, label %loop.exit428

loop.exit428:                                     ; preds = %loop.latch423
  br label %exit

exit:                                             ; preds = %loop.exit428
  %ellipticcurveaddfp2.add_is_double.write_inter_inner430 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 9
  store i128 %ellipticcurveaddfp2.add_is_double.read_inter_inner, i128* %ellipticcurveaddfp2.add_is_double.write_inter_inner430, align 4
  %ellipticcurveaddfp2.ab0.write_inter_inner432 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 10
  store i128 %ellipticcurveaddfp2.ab0.read_inter_inner, i128* %ellipticcurveaddfp2.ab0.write_inter_inner432, align 4
  %ellipticcurveaddfp2.anegb.write_inter_inner434 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 11
  store i128 %ellipticcurveaddfp2.anegb.read_inter_inner, i128* %ellipticcurveaddfp2.anegb.write_inter_inner434, align 4
  %ellipticcurveaddfp2.tmp.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 12
  store [256 x [256 x [256 x [256 x i128]]]]* %tmp, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurveaddfp2.tmp.write_inter_inner, align 8
  %ellipticcurveaddfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 13
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurveaddfp2.out.write_output_inner, align 8
  %ellipticcurveaddfp2.isinfinity.write_output_inner438 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %0, i32 0, i32 14
  store i128 %ellipticcurveaddfp2.isinfinity.read_output_inner, i128* %ellipticcurveaddfp2.isinfinity.write_output_inner438, align 4
  ret void
}

define %struct_template_circuit_ellipticcurveaddfp2* @fn_template_build_ellipticcurveaddfp2(i128 %0, i128 %1, [256 x i128]* %2, [256 x i128]* %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurveaddfp2 = alloca %struct_template_circuit_ellipticcurveaddfp2, align 8
  %ellipticcurveaddfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurveaddfp2.n.write_arg_inner, align 4
  %ellipticcurveaddfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurveaddfp2.k.write_arg_inner, align 4
  %ellipticcurveaddfp2.a2.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurveaddfp2.a2.write_arg_inner, align 8
  %ellipticcurveaddfp2.b2.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %ellipticcurveaddfp2.b2.write_arg_inner, align 8
  %ellipticcurveaddfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurveaddfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurveaddfp2* %struct_template_circuit_ellipticcurveaddfp2
}

define void @fn_template_init_fp2multiply(%struct_template_circuit_fp2multiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 0
  %fp2multiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 1
  %fp2multiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 2
  %fp2multiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 3
  %fp2multiply.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 4
  %fp2multiply.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %LOGK25 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i6 = call i128 @fn_intrinsic_inline_init()
  %j7 = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 2, %fp2multiply.k.read_arg_inner
  %mul9 = mul i128 %mul, %fp2multiply.k.read_arg_inner
  %call = call i128 @log_ceil(i128 %mul9)
  %mul13 = mul i128 3, %fp2multiply.n.read_arg_inner
  %add = add i128 %mul13, %call
  %call15 = call %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %fp2multiply.n.read_arg_inner, i128 %fp2multiply.k.read_arg_inner, [256 x i128]* %fp2multiply.p.read_arg_inner, i128 %fp2multiply.n.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add71, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_inner, i128 0, i128 0, i128 %i.0
  %a17 = load i128, i128* %array_getter, align 4
  %struct_getter19 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter19, align 8
  %array_getter21 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter, i128 0, i128 0, i128 %i.0
  %c22 = load i128, i128* %array_getter21, align 4
  call void @fn_intrinsic_add_constraint(i128 %c22, i128 %a17, i1* @constraint.537)
  %struct_getter23 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter24 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter23, align 8
  %c26 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter24, i128 0, i128 0, i128 %i.0
  store i128 %a17, i128* %c26, align 4
  %array_getter29 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_inner, i128 0, i128 1, i128 %i.0
  %a30 = load i128, i128* %array_getter29, align 4
  %struct_getter32 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter33 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter32, align 8
  %array_getter35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter33, i128 0, i128 1, i128 %i.0
  %c36 = load i128, i128* %array_getter35, align 4
  call void @fn_intrinsic_add_constraint(i128 %c36, i128 %a30, i1* @constraint.538)
  %struct_getter38 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter39 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter38, align 8
  %c41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter39, i128 0, i128 1, i128 %i.0
  store i128 %a30, i128* %c41, align 4
  %array_getter43 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_inner, i128 0, i128 0, i128 %i.0
  %b44 = load i128, i128* %array_getter43, align 4
  %struct_getter46 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter46, align 8
  %array_getter48 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter, i128 0, i128 0, i128 %i.0
  %c49 = load i128, i128* %array_getter48, align 4
  call void @fn_intrinsic_add_constraint(i128 %c49, i128 %b44, i1* @constraint.539)
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter52 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter51, align 8
  %c54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter52, i128 0, i128 0, i128 %i.0
  store i128 %b44, i128* %c54, align 4
  %array_getter57 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_inner, i128 0, i128 1, i128 %i.0
  %b58 = load i128, i128* %array_getter57, align 4
  %struct_getter60 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter61 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter60, align 8
  %array_getter63 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter61, i128 0, i128 1, i128 %i.0
  %c64 = load i128, i128* %array_getter63, align 4
  call void @fn_intrinsic_add_constraint(i128 %c64, i128 %b58, i1* @constraint.540)
  %struct_getter66 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter67 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter66, align 8
  %c69 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter67, i128 0, i128 1, i128 %i.0
  store i128 %b58, i128* %c69, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add71 = add i128 %i.0, 1
  %slt = icmp slt i128 %add71, %fp2multiply.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %mul77 = mul i128 3, %fp2multiply.n.read_arg_inner
  %add79 = add i128 %mul77, %call
  %call81 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp2multiply.n.read_arg_inner, i128 %fp2multiply.k.read_arg_inner, i128 %add79, [256 x i128]* %fp2multiply.p.read_arg_inner)
  br label %loop.body82

loop.body82:                                      ; preds = %loop.latch109, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add111, %loop.latch109 ]
  br label %loop.body83

loop.body83:                                      ; preds = %loop.latch102, %loop.body82
  %j.0 = phi i128 [ 0, %loop.body82 ], [ %add104, %loop.latch102 ]
  %struct_getter85 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call15, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter85, align 8
  %array_getter88 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter, i128 0, i128 %i.1, i128 %j.0
  %c89 = load i128, i128* %array_getter88, align 4
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call81, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter91, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %carry_mod95 = load i128, i128* %array_getter94, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry_mod95, i128 %c89, i1* @constraint.541)
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call81, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter98 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter97, align 8
  %carry_mod101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter98, i128 0, i128 %i.1, i128 %j.0
  store i128 %c89, i128* %carry_mod101, align 4
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.body83
  %add104 = add i128 %j.0, 1
  %slt107 = icmp slt i128 %add104, %fp2multiply.k.read_arg_inner
  br i1 %slt107, label %loop.body83, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch102
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.exit108
  %add111 = add i128 %i.1, 1
  %slt113 = icmp slt i128 %add111, 2
  br i1 %slt113, label %loop.body82, label %loop.exit114

loop.exit114:                                     ; preds = %loop.latch109
  br label %loop.body115

loop.body115:                                     ; preds = %loop.latch139, %loop.exit114
  %i.2 = phi i128 [ 0, %loop.exit114 ], [ %add141, %loop.latch139 ]
  br label %loop.body116

loop.body116:                                     ; preds = %loop.latch132, %loop.body115
  %j.1 = phi i128 [ 0, %loop.body115 ], [ %add134, %loop.latch132 ]
  %struct_getter118 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call81, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter118, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1
  %carry_mod122 = load i128, i128* %array_getter121, align 4
  %array_getter126 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.1
  %out127 = load i128, i128* %array_getter126, align 4
  call void @fn_intrinsic_add_constraint(i128 %out127, i128 %carry_mod122, i1* @constraint.542)
  %out131 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.1
  store i128 %carry_mod122, i128* %out131, align 4
  br label %loop.latch132

loop.latch132:                                    ; preds = %loop.body116
  %add134 = add i128 %j.1, 1
  %slt137 = icmp slt i128 %add134, %fp2multiply.k.read_arg_inner
  br i1 %slt137, label %loop.body116, label %loop.exit138

loop.exit138:                                     ; preds = %loop.latch132
  br label %loop.latch139

loop.latch139:                                    ; preds = %loop.exit138
  %add141 = add i128 %i.2, 1
  %slt143 = icmp slt i128 %add141, 2
  br i1 %slt143, label %loop.body115, label %loop.exit144

loop.exit144:                                     ; preds = %loop.latch139
  br label %exit

exit:                                             ; preds = %loop.exit144
  %fp2multiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %0, i32 0, i32 5
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2multiply.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2multiply* @fn_template_build_fp2multiply(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2multiply = alloca %struct_template_circuit_fp2multiply, align 8
  %fp2multiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply, i32 0, i32 0
  store i128 %0, i128* %fp2multiply.n.write_arg_inner, align 4
  %fp2multiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply, i32 0, i32 1
  store i128 %1, i128* %fp2multiply.k.write_arg_inner, align 4
  %fp2multiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2multiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2multiply* %struct_template_circuit_fp2multiply
}

define void @fn_template_init_signedfp12multiplynocarrycompress(%struct_template_circuit_signedfp12multiplynocarrycompress* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 0
  %signedfp12multiplynocarrycompress.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 1
  %signedfp12multiplynocarrycompress.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 2
  %signedfp12multiplynocarrycompress.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 3
  %signedfp12multiplynocarrycompress.m_in.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 4
  %signedfp12multiplynocarrycompress.m_out.read_arg_inner = load i128, i128* %struct_getter4, align 4
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 5
  %signedfp12multiplynocarrycompress.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 6
  %signedfp12multiplynocarrycompress.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter6, align 8
  %idx7 = call i128 @fn_intrinsic_inline_init()
  %l8 = call i128 @fn_intrinsic_inline_init()
  %LOGK19 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %i10 = call i128 @fn_intrinsic_inline_init()
  %XI011 = call i128 @fn_intrinsic_inline_init()
  %j12 = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 6, %signedfp12multiplynocarrycompress.k.read_arg_inner
  %add = add i128 2, 1
  %mul14 = mul i128 %mul, %add
  %call = call i128 @log_ceil(i128 %mul14)
  %mul16 = mul i128 2, %signedfp12multiplynocarrycompress.m_in.read_arg_inner
  %add18 = add i128 %mul16, %call
  %call19 = call %struct_template_circuit_signedfp12multiplynocarry* @fn_template_build_signedfp12multiplynocarry(i128 %signedfp12multiplynocarrycompress.n.read_arg_inner, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner, i128 %add18)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch68, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add70, %loop.latch68 ]
  br label %loop.body20

loop.body20:                                      ; preds = %loop.latch62, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add64, %loop.latch62 ]
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch, %loop.body20
  %idx.0 = phi i128 [ 0, %loop.body20 ], [ %add59, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.a.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %a25 = load i128, i128* %array_getter, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call19, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter27, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %nocarry32 = load i128, i128* %array_getter31, align 4
  call void @fn_intrinsic_add_constraint(i128 %nocarry32, i128 %a25, i1* @constraint.543)
  %struct_getter33 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call19, i32 0, i32 3
  %signedfp12multiplynocarry.a.read_input_outter34 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter33, align 8
  %nocarry38 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.a.read_input_outter34, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %a25, i128* %nocarry38, align 4
  %array_getter42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b43 = load i128, i128* %array_getter42, align 4
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call19, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter45, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %nocarry50 = load i128, i128* %array_getter49, align 4
  call void @fn_intrinsic_add_constraint(i128 %nocarry50, i128 %b43, i1* @constraint.544)
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call19, i32 0, i32 4
  %signedfp12multiplynocarry.b.read_input_outter53 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter52, align 8
  %nocarry57 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.b.read_input_outter53, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %b43, i128* %nocarry57, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body21
  %add59 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add59, %signedfp12multiplynocarrycompress.k.read_arg_inner
  br i1 %slt, label %loop.body21, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.exit
  %add64 = add i128 %j.0, 1
  %slt66 = icmp slt i128 %add64, 2
  br i1 %slt66, label %loop.body20, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch62
  br label %loop.latch68

loop.latch68:                                     ; preds = %loop.exit67
  %add70 = add i128 %i.0, 1
  %slt73 = icmp slt i128 %add70, 6
  br i1 %slt73, label %loop.body, label %loop.exit74

loop.exit74:                                      ; preds = %loop.latch68
  %sub = sub i128 %signedfp12multiplynocarrycompress.k.read_arg_inner, 1
  %call78 = call %struct_template_circuit_fp12compress* @fn_template_build_fp12compress(i128 %signedfp12multiplynocarrycompress.n.read_arg_inner, i128 %signedfp12multiplynocarrycompress.k.read_arg_inner, i128 %sub, [256 x i128]* %signedfp12multiplynocarrycompress.p.read_arg_inner, i128 %signedfp12multiplynocarrycompress.m_out.read_arg_inner)
  br label %loop.body79

loop.body79:                                      ; preds = %loop.latch118, %loop.exit74
  %i.1 = phi i128 [ 0, %loop.exit74 ], [ %add120, %loop.latch118 ]
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch112, %loop.body79
  %j.1 = phi i128 [ 0, %loop.body79 ], [ %add114, %loop.latch112 ]
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch103, %loop.body80
  %idx.1 = phi i128 [ 0, %loop.body80 ], [ %add105, %loop.latch103 ]
  %struct_getter83 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarry, %struct_template_circuit_signedfp12multiplynocarry* %call19, i32 0, i32 5
  %signedfp12multiplynocarry.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter83, align 8
  %array_getter87 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarry.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %nocarry88 = load i128, i128* %array_getter87, align 4
  %struct_getter90 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call78, i32 0, i32 5
  %fp12compress.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter90, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %reduce95 = load i128, i128* %array_getter94, align 4
  call void @fn_intrinsic_add_constraint(i128 %reduce95, i128 %nocarry88, i1* @constraint.545)
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call78, i32 0, i32 5
  %fp12compress.in.read_input_outter98 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter97, align 8
  %reduce102 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.in.read_input_outter98, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %nocarry88, i128* %reduce102, align 4
  br label %loop.latch103

loop.latch103:                                    ; preds = %loop.body81
  %add105 = add i128 %idx.1, 1
  %mul108 = mul i128 2, %signedfp12multiplynocarrycompress.k.read_arg_inner
  %sub109 = sub i128 %mul108, 1
  %slt110 = icmp slt i128 %add105, %sub109
  br i1 %slt110, label %loop.body81, label %loop.exit111

loop.exit111:                                     ; preds = %loop.latch103
  br label %loop.latch112

loop.latch112:                                    ; preds = %loop.exit111
  %add114 = add i128 %j.1, 1
  %slt116 = icmp slt i128 %add114, 2
  br i1 %slt116, label %loop.body80, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch112
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.exit117
  %add120 = add i128 %i.1, 1
  %slt123 = icmp slt i128 %add120, 6
  br i1 %slt123, label %loop.body79, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch118
  br label %loop.body125

loop.body125:                                     ; preds = %loop.latch159, %loop.exit124
  %i.2 = phi i128 [ 0, %loop.exit124 ], [ %add161, %loop.latch159 ]
  br label %loop.body126

loop.body126:                                     ; preds = %loop.latch153, %loop.body125
  %j.2 = phi i128 [ 0, %loop.body125 ], [ %add155, %loop.latch153 ]
  br label %loop.body127

loop.body127:                                     ; preds = %loop.latch146, %loop.body126
  %idx.2 = phi i128 [ 0, %loop.body126 ], [ %add148, %loop.latch146 ]
  %struct_getter129 = getelementptr inbounds %struct_template_circuit_fp12compress, %struct_template_circuit_fp12compress* %call78, i32 0, i32 6
  %fp12compress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter129, align 8
  %array_getter133 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12compress.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %reduce134 = load i128, i128* %array_getter133, align 4
  %array_getter139 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %out140 = load i128, i128* %array_getter139, align 4
  call void @fn_intrinsic_add_constraint(i128 %out140, i128 %reduce134, i1* @constraint.546)
  %out145 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  store i128 %reduce134, i128* %out145, align 4
  br label %loop.latch146

loop.latch146:                                    ; preds = %loop.body127
  %add148 = add i128 %idx.2, 1
  %slt151 = icmp slt i128 %add148, %signedfp12multiplynocarrycompress.k.read_arg_inner
  br i1 %slt151, label %loop.body127, label %loop.exit152

loop.exit152:                                     ; preds = %loop.latch146
  br label %loop.latch153

loop.latch153:                                    ; preds = %loop.exit152
  %add155 = add i128 %j.2, 1
  %slt157 = icmp slt i128 %add155, 2
  br i1 %slt157, label %loop.body126, label %loop.exit158

loop.exit158:                                     ; preds = %loop.latch153
  br label %loop.latch159

loop.latch159:                                    ; preds = %loop.exit158
  %add161 = add i128 %i.2, 1
  %slt164 = icmp slt i128 %add161, 6
  br i1 %slt164, label %loop.body125, label %loop.exit165

loop.exit165:                                     ; preds = %loop.latch159
  br label %exit

exit:                                             ; preds = %loop.exit165
  %signedfp12multiplynocarrycompress.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %signedfp12multiplynocarrycompress.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp12multiplynocarrycompress* @fn_template_build_signedfp12multiplynocarrycompress(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, i128 %4) {
entry:
  %struct_template_circuit_signedfp12multiplynocarrycompress = alloca %struct_template_circuit_signedfp12multiplynocarrycompress, align 8
  %signedfp12multiplynocarrycompress.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 0
  store i128 %0, i128* %signedfp12multiplynocarrycompress.n.write_arg_inner, align 4
  %signedfp12multiplynocarrycompress.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 1
  store i128 %1, i128* %signedfp12multiplynocarrycompress.k.write_arg_inner, align 4
  %signedfp12multiplynocarrycompress.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %signedfp12multiplynocarrycompress.p.write_arg_inner, align 8
  %signedfp12multiplynocarrycompress.m_in.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 3
  store i128 %3, i128* %signedfp12multiplynocarrycompress.m_in.write_arg_inner, align 4
  %signedfp12multiplynocarrycompress.m_out.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress, i32 0, i32 4
  store i128 %4, i128* %signedfp12multiplynocarrycompress.m_out.write_arg_inner, align 4
  ret %struct_template_circuit_signedfp12multiplynocarrycompress* %struct_template_circuit_signedfp12multiplynocarrycompress
}

define void @fn_template_init_ellipticcurvescalarmultiplyunequalfp2(%struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 0
  %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 1
  %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 2
  %ellipticcurvescalarmultiplyunequalfp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 3
  %ellipticcurvescalarmultiplyunequalfp2.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 4
  %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 5
  %ellipticcurvescalarmultiplyunequalfp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %idx6 = call i128 @fn_intrinsic_inline_init()
  %SigBits7 = call i128 @fn_intrinsic_inline_init()
  %j8 = call i128 @fn_intrinsic_inline_init()
  %l9 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall10 to [256 x [256 x [256 x [256 x i128]]]]*
  %Padd11 = alloca [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], align 8
  %i12 = call i128 @fn_intrinsic_inline_init()
  %add_exception14 = alloca [256 x %struct_template_circuit_fp2isequal*], align 8
  %curid15 = call i128 @fn_intrinsic_inline_init()
  %LOGK16 = call i128 @fn_intrinsic_inline_init()
  %BitLength17 = call i128 @fn_intrinsic_inline_init()
  %Pdouble18 = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*], align 8
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add29, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiplyunequalfp2.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %Bits21 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %and, i128* %Bits21, align 4
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %Bits24 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits24, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add27 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  %BitLength.1 = phi i128 [ %add27, %if.true ], [ %BitLength.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add29 = add i128 %i.0, 1
  %slt = icmp slt i128 %add29, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch399, %loop.exit
  %i.1 = phi i128 [ %sub, %loop.exit ], [ %sub401, %loop.latch399 ]
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch399 ]
  %sub37 = sub i128 %BitLength.1, 1
  %eq38 = icmp eq i128 %i.1, %sub37
  br i1 %eq38, label %if.true33, label %if.false34

if.true33:                                        ; preds = %loop.body32
  br label %loop.body39

if.false34:                                       ; preds = %loop.body32
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array, align 4
  %call80 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner, [256 x i128]* %const_inline_array, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner)
  %Pdouble83 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble18, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedoublefp2* %call80, %struct_template_circuit_ellipticcurvedoublefp2** %Pdouble83, align 8
  br label %loop.body84

loop.body39:                                      ; preds = %loop.latch73, %if.true33
  %j.0 = phi i128 [ 0, %if.true33 ], [ %add75, %loop.latch73 ]
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch66, %loop.body39
  %idx.0 = phi i128 [ 0, %loop.body39 ], [ %add68, %loop.latch66 ]
  br label %loop.body41

loop.body41:                                      ; preds = %loop.latch60, %loop.body40
  %l.0 = phi i128 [ 0, %loop.body40 ], [ %add62, %loop.latch60 ]
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyunequalfp2.in.read_input_inner, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  %in46 = load i128, i128* %array_getter45, align 4
  %array_getter52 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.0
  %R53 = load i128, i128* %array_getter52, align 4
  call void @fn_intrinsic_add_constraint(i128 %R53, i128 %in46, i1* @constraint.547)
  %R59 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.0, i128 %l.0, i128 %idx.0
  store i128 %in46, i128* %R59, align 4
  br label %loop.latch60

loop.latch60:                                     ; preds = %loop.body41
  %add62 = add i128 %l.0, 1
  %slt64 = icmp slt i128 %add62, 2
  br i1 %slt64, label %loop.body41, label %loop.exit65

loop.exit65:                                      ; preds = %loop.latch60
  br label %loop.latch66

loop.latch66:                                     ; preds = %loop.exit65
  %add68 = add i128 %idx.0, 1
  %slt71 = icmp slt i128 %add68, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt71, label %loop.body40, label %loop.exit72

loop.exit72:                                      ; preds = %loop.latch66
  br label %loop.latch73

loop.latch73:                                     ; preds = %loop.exit72
  %add75 = add i128 %j.0, 1
  %slt77 = icmp slt i128 %add75, 2
  br i1 %slt77, label %loop.body39, label %loop.exit78

loop.exit78:                                      ; preds = %loop.latch73
  br label %if.exit398

loop.body84:                                      ; preds = %loop.latch128, %if.false34
  %j.1 = phi i128 [ 0, %if.false34 ], [ %add130, %loop.latch128 ]
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch121, %loop.body84
  %idx.1 = phi i128 [ 0, %loop.body84 ], [ %add123, %loop.latch121 ]
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch115, %loop.body85
  %l.1 = phi i128 [ 0, %loop.body85 ], [ %add117, %loop.latch115 ]
  %add89 = add i128 %i.1, 1
  %array_getter93 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %add89, i128 %j.1, i128 %l.1, i128 %idx.1
  %R94 = load i128, i128* %array_getter93, align 4
  %array_getter97 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble18, i128 0, i128 %i.1
  %Pdouble98 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter97, align 8
  %struct_getter99 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble98, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter99, align 8
  %array_getter103 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  %Pdouble104 = load i128, i128* %array_getter103, align 4
  call void @fn_intrinsic_add_constraint(i128 %Pdouble104, i128 %R94, i1* @constraint.548)
  %array_getter107 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble18, i128 0, i128 %i.1
  %Pdouble108 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter107, align 8
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble108, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter110 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter109, align 8
  %Pdouble114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter110, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  store i128 %R94, i128* %Pdouble114, align 4
  br label %loop.latch115

loop.latch115:                                    ; preds = %loop.body86
  %add117 = add i128 %l.1, 1
  %slt119 = icmp slt i128 %add117, 2
  br i1 %slt119, label %loop.body86, label %loop.exit120

loop.exit120:                                     ; preds = %loop.latch115
  br label %loop.latch121

loop.latch121:                                    ; preds = %loop.exit120
  %add123 = add i128 %idx.1, 1
  %slt126 = icmp slt i128 %add123, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt126, label %loop.body85, label %loop.exit127

loop.exit127:                                     ; preds = %loop.latch121
  br label %loop.latch128

loop.latch128:                                    ; preds = %loop.exit127
  %add130 = add i128 %j.1, 1
  %slt132 = icmp slt i128 %add130, 2
  br i1 %slt132, label %loop.body84, label %loop.exit133

loop.exit133:                                     ; preds = %loop.latch128
  %array_getter138 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %Bits139 = load i128, i128* %array_getter138, align 4
  %eq140 = icmp eq i128 %Bits139, 0
  br i1 %eq140, label %if.true134, label %if.false135

if.true134:                                       ; preds = %loop.exit133
  br label %loop.body141

if.false135:                                      ; preds = %loop.exit133
  %call189 = call %struct_template_circuit_fp2isequal* @fn_template_build_fp2isequal(i128 %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner)
  %add_exception192 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception14, i128 0, i128 %curid.0
  store %struct_template_circuit_fp2isequal* %call189, %struct_template_circuit_fp2isequal** %add_exception192, align 8
  br label %loop.body193

loop.body141:                                     ; preds = %loop.latch180, %if.true134
  %j.2 = phi i128 [ 0, %if.true134 ], [ %add182, %loop.latch180 ]
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch173, %loop.body141
  %idx.2 = phi i128 [ 0, %loop.body141 ], [ %add175, %loop.latch173 ]
  br label %loop.body143

loop.body143:                                     ; preds = %loop.latch167, %loop.body142
  %l.2 = phi i128 [ 0, %loop.body142 ], [ %add169, %loop.latch167 ]
  %array_getter146 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble18, i128 0, i128 %i.1
  %Pdouble147 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter146, align 8
  %struct_getter148 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble147, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter148, align 8
  %array_getter152 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %j.2, i128 %l.2, i128 %idx.2
  %Pdouble153 = load i128, i128* %array_getter152, align 4
  %array_getter159 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.2, i128 %l.2, i128 %idx.2
  %R160 = load i128, i128* %array_getter159, align 4
  call void @fn_intrinsic_add_constraint(i128 %R160, i128 %Pdouble153, i1* @constraint.549)
  %R166 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.2, i128 %l.2, i128 %idx.2
  store i128 %Pdouble153, i128* %R166, align 4
  br label %loop.latch167

loop.latch167:                                    ; preds = %loop.body143
  %add169 = add i128 %l.2, 1
  %slt171 = icmp slt i128 %add169, 2
  br i1 %slt171, label %loop.body143, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch167
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.exit172
  %add175 = add i128 %idx.2, 1
  %slt178 = icmp slt i128 %add175, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt178, label %loop.body142, label %loop.exit179

loop.exit179:                                     ; preds = %loop.latch173
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.exit179
  %add182 = add i128 %j.2, 1
  %slt184 = icmp slt i128 %add182, 2
  br i1 %slt184, label %loop.body141, label %loop.exit185

loop.exit185:                                     ; preds = %loop.latch180
  br label %if.exit397

loop.body193:                                     ; preds = %loop.latch253, %if.false135
  %j.3 = phi i128 [ 0, %if.false135 ], [ %add255, %loop.latch253 ]
  br label %loop.body194

loop.body194:                                     ; preds = %loop.latch246, %loop.body193
  %idx.3 = phi i128 [ 0, %loop.body193 ], [ %add248, %loop.latch246 ]
  %array_getter197 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble18, i128 0, i128 %i.1
  %Pdouble198 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter197, align 8
  %struct_getter199 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble198, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter200 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter199, align 8
  %array_getter203 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter200, i128 0, i128 0, i128 %j.3, i128 %idx.3
  %Pdouble204 = load i128, i128* %array_getter203, align 4
  %array_getter207 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception14, i128 0, i128 %curid.0
  %add_exception208 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter207, align 8
  %struct_getter209 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception208, i32 0, i32 3
  %fp2isequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter209, align 8
  %array_getter212 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter, i128 0, i128 %j.3, i128 %idx.3
  %add_exception213 = load i128, i128* %array_getter212, align 4
  call void @fn_intrinsic_add_constraint(i128 %add_exception213, i128 %Pdouble204, i1* @constraint.550)
  %array_getter216 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception14, i128 0, i128 %curid.0
  %add_exception217 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter216, align 8
  %struct_getter218 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception217, i32 0, i32 3
  %fp2isequal.a.read_input_outter219 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter218, align 8
  %add_exception222 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.a.read_input_outter219, i128 0, i128 %j.3, i128 %idx.3
  store i128 %Pdouble204, i128* %add_exception222, align 4
  %array_getter226 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyunequalfp2.in.read_input_inner, i128 0, i128 0, i128 %j.3, i128 %idx.3
  %in227 = load i128, i128* %array_getter226, align 4
  %array_getter230 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception14, i128 0, i128 %curid.0
  %add_exception231 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter230, align 8
  %struct_getter232 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception231, i32 0, i32 4
  %fp2isequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter232, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter, i128 0, i128 %j.3, i128 %idx.3
  %add_exception236 = load i128, i128* %array_getter235, align 4
  call void @fn_intrinsic_add_constraint(i128 %add_exception236, i128 %in227, i1* @constraint.551)
  %array_getter239 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception14, i128 0, i128 %curid.0
  %add_exception240 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter239, align 8
  %struct_getter241 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception240, i32 0, i32 4
  %fp2isequal.b.read_input_outter242 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter241, align 8
  %add_exception245 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2isequal.b.read_input_outter242, i128 0, i128 %j.3, i128 %idx.3
  store i128 %in227, i128* %add_exception245, align 4
  br label %loop.latch246

loop.latch246:                                    ; preds = %loop.body194
  %add248 = add i128 %idx.3, 1
  %slt251 = icmp slt i128 %add248, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt251, label %loop.body194, label %loop.exit252

loop.exit252:                                     ; preds = %loop.latch246
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.exit252
  %add255 = add i128 %j.3, 1
  %slt257 = icmp slt i128 %add255, 2
  br i1 %slt257, label %loop.body193, label %loop.exit258

loop.exit258:                                     ; preds = %loop.latch253
  %array_getter261 = getelementptr inbounds [256 x %struct_template_circuit_fp2isequal*], [256 x %struct_template_circuit_fp2isequal*]* %add_exception14, i128 0, i128 %curid.0
  %add_exception262 = load %struct_template_circuit_fp2isequal*, %struct_template_circuit_fp2isequal** %array_getter261, align 8
  %struct_getter263 = getelementptr inbounds %struct_template_circuit_fp2isequal, %struct_template_circuit_fp2isequal* %add_exception262, i32 0, i32 5
  %fp2isequal.out.read_output_outter = load i128, i128* %struct_getter263, align 4
  call void @fn_intrinsic_add_constraint(i128 %fp2isequal.out.read_output_outter, i128 0, i1* @constraint.552)
  %call267 = call %struct_template_circuit_ellipticcurveaddunequalfp2* @fn_template_build_ellipticcurveaddunequalfp2(i128 %ellipticcurvescalarmultiplyunequalfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequalfp2.p.read_arg_inner)
  %Padd270 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd11, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddunequalfp2* %call267, %struct_template_circuit_ellipticcurveaddunequalfp2** %Padd270, align 8
  br label %loop.body271

loop.body271:                                     ; preds = %loop.latch344, %loop.exit258
  %j.4 = phi i128 [ 0, %loop.exit258 ], [ %add346, %loop.latch344 ]
  br label %loop.body272

loop.body272:                                     ; preds = %loop.latch338, %loop.body271
  %l.3 = phi i128 [ 0, %loop.body271 ], [ %add340, %loop.latch338 ]
  br label %loop.body273

loop.body273:                                     ; preds = %loop.latch331, %loop.body272
  %idx.4 = phi i128 [ 0, %loop.body272 ], [ %add333, %loop.latch331 ]
  %array_getter276 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble18, i128 0, i128 %i.1
  %Pdouble277 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter276, align 8
  %struct_getter278 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble277, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter279 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter278, align 8
  %array_getter283 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter279, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %Pdouble284 = load i128, i128* %array_getter283, align 4
  %array_getter287 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd11, i128 0, i128 %curid.0
  %Padd288 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter287, align 8
  %struct_getter289 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd288, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter289, align 8
  %array_getter293 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %Padd294 = load i128, i128* %array_getter293, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd294, i128 %Pdouble284, i1* @constraint.553)
  %array_getter297 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd11, i128 0, i128 %curid.0
  %Padd298 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter297, align 8
  %struct_getter299 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd298, i32 0, i32 3
  %ellipticcurveaddunequalfp2.a.read_input_outter300 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter299, align 8
  %Padd304 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.a.read_input_outter300, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  store i128 %Pdouble284, i128* %Padd304, align 4
  %array_getter309 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyunequalfp2.in.read_input_inner, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %in310 = load i128, i128* %array_getter309, align 4
  %array_getter313 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd11, i128 0, i128 %curid.0
  %Padd314 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter313, align 8
  %struct_getter315 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd314, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter315, align 8
  %array_getter319 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  %Padd320 = load i128, i128* %array_getter319, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd320, i128 %in310, i1* @constraint.554)
  %array_getter323 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd11, i128 0, i128 %curid.0
  %Padd324 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter323, align 8
  %struct_getter325 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd324, i32 0, i32 4
  %ellipticcurveaddunequalfp2.b.read_input_outter326 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter325, align 8
  %Padd330 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.b.read_input_outter326, i128 0, i128 %j.4, i128 %l.3, i128 %idx.4
  store i128 %in310, i128* %Padd330, align 4
  br label %loop.latch331

loop.latch331:                                    ; preds = %loop.body273
  %add333 = add i128 %idx.4, 1
  %slt336 = icmp slt i128 %add333, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt336, label %loop.body273, label %loop.exit337

loop.exit337:                                     ; preds = %loop.latch331
  br label %loop.latch338

loop.latch338:                                    ; preds = %loop.exit337
  %add340 = add i128 %l.3, 1
  %slt342 = icmp slt i128 %add340, 2
  br i1 %slt342, label %loop.body272, label %loop.exit343

loop.exit343:                                     ; preds = %loop.latch338
  br label %loop.latch344

loop.latch344:                                    ; preds = %loop.exit343
  %add346 = add i128 %j.4, 1
  %slt348 = icmp slt i128 %add346, 2
  br i1 %slt348, label %loop.body271, label %loop.exit349

loop.exit349:                                     ; preds = %loop.latch344
  br label %loop.body350

loop.body350:                                     ; preds = %loop.latch389, %loop.exit349
  %j.5 = phi i128 [ 0, %loop.exit349 ], [ %add391, %loop.latch389 ]
  br label %loop.body351

loop.body351:                                     ; preds = %loop.latch383, %loop.body350
  %l.4 = phi i128 [ 0, %loop.body350 ], [ %add385, %loop.latch383 ]
  br label %loop.body352

loop.body352:                                     ; preds = %loop.latch376, %loop.body351
  %idx.5 = phi i128 [ 0, %loop.body351 ], [ %add378, %loop.latch376 ]
  %array_getter355 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*], [256 x %struct_template_circuit_ellipticcurveaddunequalfp2*]* %Padd11, i128 0, i128 %curid.0
  %Padd356 = load %struct_template_circuit_ellipticcurveaddunequalfp2*, %struct_template_circuit_ellipticcurveaddunequalfp2** %array_getter355, align 8
  %struct_getter357 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequalfp2, %struct_template_circuit_ellipticcurveaddunequalfp2* %Padd356, i32 0, i32 5
  %ellipticcurveaddunequalfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter357, align 8
  %array_getter361 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddunequalfp2.out.read_output_outter, i128 0, i128 %j.5, i128 %l.4, i128 %idx.5
  %Padd362 = load i128, i128* %array_getter361, align 4
  %array_getter368 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.5, i128 %l.4, i128 %idx.5
  %R369 = load i128, i128* %array_getter368, align 4
  call void @fn_intrinsic_add_constraint(i128 %R369, i128 %Padd362, i1* @constraint.555)
  %R375 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.5, i128 %l.4, i128 %idx.5
  store i128 %Padd362, i128* %R375, align 4
  br label %loop.latch376

loop.latch376:                                    ; preds = %loop.body352
  %add378 = add i128 %idx.5, 1
  %slt381 = icmp slt i128 %add378, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt381, label %loop.body352, label %loop.exit382

loop.exit382:                                     ; preds = %loop.latch376
  br label %loop.latch383

loop.latch383:                                    ; preds = %loop.exit382
  %add385 = add i128 %l.4, 1
  %slt387 = icmp slt i128 %add385, 2
  br i1 %slt387, label %loop.body351, label %loop.exit388

loop.exit388:                                     ; preds = %loop.latch383
  br label %loop.latch389

loop.latch389:                                    ; preds = %loop.exit388
  %add391 = add i128 %j.5, 1
  %slt393 = icmp slt i128 %add391, 2
  br i1 %slt393, label %loop.body350, label %loop.exit394

loop.exit394:                                     ; preds = %loop.latch389
  %add396 = add i128 %curid.0, 1
  br label %if.exit397

if.exit397:                                       ; preds = %loop.exit394, %loop.exit185
  %curid.1 = phi i128 [ %curid.0, %loop.exit185 ], [ %add396, %loop.exit394 ]
  br label %if.exit398

if.exit398:                                       ; preds = %if.exit397, %loop.exit78
  %curid.2 = phi i128 [ %curid.0, %loop.exit78 ], [ %curid.1, %if.exit397 ]
  br label %loop.latch399

loop.latch399:                                    ; preds = %if.exit398
  %sub401 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub401, 0
  br i1 %sge, label %loop.body32, label %loop.exit403

loop.exit403:                                     ; preds = %loop.latch399
  br label %loop.body404

loop.body404:                                     ; preds = %loop.latch437, %loop.exit403
  %i.2 = phi i128 [ 0, %loop.exit403 ], [ %add439, %loop.latch437 ]
  br label %loop.body405

loop.body405:                                     ; preds = %loop.latch431, %loop.body404
  %j.6 = phi i128 [ 0, %loop.body404 ], [ %add433, %loop.latch431 ]
  br label %loop.body406

loop.body406:                                     ; preds = %loop.latch424, %loop.body405
  %idx.6 = phi i128 [ 0, %loop.body405 ], [ %add426, %loop.latch424 ]
  %array_getter411 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %R412 = load i128, i128* %array_getter411, align 4
  %array_getter417 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %out418 = load i128, i128* %array_getter417, align 4
  call void @fn_intrinsic_add_constraint(i128 %out418, i128 %R412, i1* @constraint.556)
  %out423 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  store i128 %R412, i128* %out423, align 4
  br label %loop.latch424

loop.latch424:                                    ; preds = %loop.body406
  %add426 = add i128 %idx.6, 1
  %slt429 = icmp slt i128 %add426, %ellipticcurvescalarmultiplyunequalfp2.k.read_arg_inner
  br i1 %slt429, label %loop.body406, label %loop.exit430

loop.exit430:                                     ; preds = %loop.latch424
  br label %loop.latch431

loop.latch431:                                    ; preds = %loop.exit430
  %add433 = add i128 %j.6, 1
  %slt435 = icmp slt i128 %add433, 2
  br i1 %slt435, label %loop.body405, label %loop.exit436

loop.exit436:                                     ; preds = %loop.latch431
  br label %loop.latch437

loop.latch437:                                    ; preds = %loop.exit436
  %add439 = add i128 %i.2, 1
  %slt441 = icmp slt i128 %add439, 2
  br i1 %slt441, label %loop.body404, label %loop.exit442

loop.exit442:                                     ; preds = %loop.latch437
  br label %exit

exit:                                             ; preds = %loop.exit442
  %ellipticcurvescalarmultiplyunequalfp2.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 6
  store [256 x [256 x [256 x [256 x i128]]]]* %R, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyunequalfp2.r.write_inter_inner, align 8
  %ellipticcurvescalarmultiplyunequalfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequalfp2.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* @fn_template_build_ellipticcurvescalarmultiplyunequalfp2(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2 = alloca %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, align 8
  %ellipticcurvescalarmultiplyunequalfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiplyunequalfp2.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequalfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiplyunequalfp2.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequalfp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvescalarmultiplyunequalfp2.b.write_arg_inner, align 8
  %ellipticcurvescalarmultiplyunequalfp2.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiplyunequalfp2.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequalfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiplyunequalfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2* %struct_template_circuit_ellipticcurvescalarmultiplyunequalfp2
}

define void @fn_template_init_fp12frobeniusmap(%struct_template_circuit_fp12frobeniusmap* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 0
  %fp12frobeniusmap.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 1
  %fp12frobeniusmap.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 2
  %fp12frobeniusmap.power.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 3
  %fp12frobeniusmap.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %in_frob5 = alloca [256 x %struct_template_circuit_fp2frobeniusmap*], align 8
  %i6 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %eps8 = call i128 @fn_intrinsic_inline_init()
  %pow9 = call i128 @fn_intrinsic_inline_init()
  %mult_odd10 = alloca [256 x %struct_template_circuit_fp2multiply*], align 8
  %mult_even11 = alloca [256 x [256 x %struct_template_circuit_fpmultiply*]], align 8
  %j12 = call i128 @fn_intrinsic_inline_init()
  %call = call [256 x i128]* @get_BLS12_381_prime(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner)
  %call15 = call [256 x [256 x [256 x [256 x i128]]]]* @get_Fp12_frobenius(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner)
  %mod = srem i128 %fp12frobeniusmap.power.read_arg_inner, 12
  %mod17 = srem i128 %mod, 2
  %eq = icmp eq i128 %mod17, 0
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %entry
  br label %loop.body

if.false:                                         ; preds = %entry
  br label %loop.body200

loop.body:                                        ; preds = %loop.latch, %if.true
  %j.0 = phi i128 [ 0, %if.true ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, i128 0, i128 0, i128 0, i128 %j.0
  %in19 = load i128, i128* %array_getter, align 4
  %array_getter22 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %j.0
  %out23 = load i128, i128* %array_getter22, align 4
  call void @fn_intrinsic_add_constraint(i128 %out23, i128 %in19, i1* @constraint.557)
  %out25 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %j.0
  store i128 %in19, i128* %out25, align 4
  %array_getter28 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, i128 0, i128 0, i128 1, i128 %j.0
  %in29 = load i128, i128* %array_getter28, align 4
  %array_getter32 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %j.0
  %out33 = load i128, i128* %array_getter32, align 4
  call void @fn_intrinsic_add_constraint(i128 %out33, i128 %in29, i1* @constraint.558)
  %out36 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %j.0
  store i128 %in29, i128* %out36, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body40

loop.body40:                                      ; preds = %loop.latch194, %loop.exit
  %i.0 = phi i128 [ 1, %loop.exit ], [ %add196, %loop.latch194 ]
  %call44 = call %struct_template_circuit_fpmultiply* @fn_template_build_fpmultiply(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, [256 x i128]* %call)
  %mult_even47 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 0
  store %struct_template_circuit_fpmultiply* %call44, %struct_template_circuit_fpmultiply** %mult_even47, align 8
  %call51 = call %struct_template_circuit_fpmultiply* @fn_template_build_fpmultiply(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, [256 x i128]* %call)
  %mult_even54 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 1
  store %struct_template_circuit_fpmultiply* %call51, %struct_template_circuit_fpmultiply** %mult_even54, align 8
  br label %loop.body55

loop.body55:                                      ; preds = %loop.latch144, %loop.body40
  %j.1 = phi i128 [ 0, %loop.body40 ], [ %add146, %loop.latch144 ]
  %array_getter59 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.1
  %in60 = load i128, i128* %array_getter59, align 4
  %array_getter63 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 0
  %mult_even64 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter63, align 8
  %struct_getter65 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even64, i32 0, i32 3
  %fpmultiply.a.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter65, align 8
  %array_getter67 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter, i128 0, i128 %j.1
  %mult_even68 = load i128, i128* %array_getter67, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult_even68, i128 %in60, i1* @constraint.559)
  %array_getter71 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 0
  %mult_even72 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter71, align 8
  %struct_getter73 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even72, i32 0, i32 3
  %fpmultiply.a.read_input_outter74 = load [256 x i128]*, [256 x i128]** %struct_getter73, align 8
  %mult_even76 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter74, i128 0, i128 %j.1
  store i128 %in60, i128* %mult_even76, align 4
  %array_getter80 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.1
  %in81 = load i128, i128* %array_getter80, align 4
  %array_getter84 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 1
  %mult_even85 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter84, align 8
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even85, i32 0, i32 3
  %fpmultiply.a.read_input_outter87 = load [256 x i128]*, [256 x i128]** %struct_getter86, align 8
  %array_getter89 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter87, i128 0, i128 %j.1
  %mult_even90 = load i128, i128* %array_getter89, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult_even90, i128 %in81, i1* @constraint.560)
  %array_getter93 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 1
  %mult_even94 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter93, align 8
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even94, i32 0, i32 3
  %fpmultiply.a.read_input_outter96 = load [256 x i128]*, [256 x i128]** %struct_getter95, align 8
  %mult_even98 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.a.read_input_outter96, i128 0, i128 %j.1
  store i128 %in81, i128* %mult_even98, align 4
  %array_getter103 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %call15, i128 0, i128 %mod, i128 %i.0, i128 0, i128 %j.1
  %FP12_FROBENIUS_COEFFICIENTS104 = load i128, i128* %array_getter103, align 4
  %array_getter107 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 0
  %mult_even108 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter107, align 8
  %struct_getter109 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even108, i32 0, i32 4
  %fpmultiply.b.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter109, align 8
  %array_getter111 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter, i128 0, i128 %j.1
  %mult_even112 = load i128, i128* %array_getter111, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult_even112, i128 %FP12_FROBENIUS_COEFFICIENTS104, i1* @constraint.561)
  %array_getter115 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 0
  %mult_even116 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter115, align 8
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even116, i32 0, i32 4
  %fpmultiply.b.read_input_outter118 = load [256 x i128]*, [256 x i128]** %struct_getter117, align 8
  %mult_even120 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter118, i128 0, i128 %j.1
  store i128 %FP12_FROBENIUS_COEFFICIENTS104, i128* %mult_even120, align 4
  %array_getter125 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %call15, i128 0, i128 %mod, i128 %i.0, i128 0, i128 %j.1
  %FP12_FROBENIUS_COEFFICIENTS126 = load i128, i128* %array_getter125, align 4
  %array_getter129 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 1
  %mult_even130 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter129, align 8
  %struct_getter131 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even130, i32 0, i32 4
  %fpmultiply.b.read_input_outter132 = load [256 x i128]*, [256 x i128]** %struct_getter131, align 8
  %array_getter134 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter132, i128 0, i128 %j.1
  %mult_even135 = load i128, i128* %array_getter134, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult_even135, i128 %FP12_FROBENIUS_COEFFICIENTS126, i1* @constraint.562)
  %array_getter138 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 1
  %mult_even139 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter138, align 8
  %struct_getter140 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even139, i32 0, i32 4
  %fpmultiply.b.read_input_outter141 = load [256 x i128]*, [256 x i128]** %struct_getter140, align 8
  %mult_even143 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.b.read_input_outter141, i128 0, i128 %j.1
  store i128 %FP12_FROBENIUS_COEFFICIENTS126, i128* %mult_even143, align 4
  br label %loop.latch144

loop.latch144:                                    ; preds = %loop.body55
  %add146 = add i128 %j.1, 1
  %slt149 = icmp slt i128 %add146, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt149, label %loop.body55, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch144
  br label %loop.body151

loop.body151:                                     ; preds = %loop.latch187, %loop.exit150
  %j.2 = phi i128 [ 0, %loop.exit150 ], [ %add189, %loop.latch187 ]
  %array_getter154 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 0
  %mult_even155 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter154, align 8
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even155, i32 0, i32 5
  %fpmultiply.out.read_output_outter = load [256 x i128]*, [256 x i128]** %struct_getter156, align 8
  %array_getter158 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.out.read_output_outter, i128 0, i128 %j.2
  %mult_even159 = load i128, i128* %array_getter158, align 4
  %array_getter163 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 0, i128 %j.2
  %out164 = load i128, i128* %array_getter163, align 4
  call void @fn_intrinsic_add_constraint(i128 %out164, i128 %mult_even159, i1* @constraint.563)
  %out168 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 0, i128 %j.2
  store i128 %mult_even159, i128* %out168, align 4
  %array_getter171 = getelementptr inbounds [256 x [256 x %struct_template_circuit_fpmultiply*]], [256 x [256 x %struct_template_circuit_fpmultiply*]]* %mult_even11, i128 0, i128 %i.0, i128 1
  %mult_even172 = load %struct_template_circuit_fpmultiply*, %struct_template_circuit_fpmultiply** %array_getter171, align 8
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_fpmultiply, %struct_template_circuit_fpmultiply* %mult_even172, i32 0, i32 5
  %fpmultiply.out.read_output_outter174 = load [256 x i128]*, [256 x i128]** %struct_getter173, align 8
  %array_getter176 = getelementptr inbounds [256 x i128], [256 x i128]* %fpmultiply.out.read_output_outter174, i128 0, i128 %j.2
  %mult_even177 = load i128, i128* %array_getter176, align 4
  %array_getter181 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 1, i128 %j.2
  %out182 = load i128, i128* %array_getter181, align 4
  call void @fn_intrinsic_add_constraint(i128 %out182, i128 %mult_even177, i1* @constraint.564)
  %out186 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 1, i128 %j.2
  store i128 %mult_even177, i128* %out186, align 4
  br label %loop.latch187

loop.latch187:                                    ; preds = %loop.body151
  %add189 = add i128 %j.2, 1
  %slt192 = icmp slt i128 %add189, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt192, label %loop.body151, label %loop.exit193

loop.exit193:                                     ; preds = %loop.latch187
  br label %loop.latch194

loop.latch194:                                    ; preds = %loop.exit193
  %add196 = add i128 %i.0, 1
  %slt198 = icmp slt i128 %add196, 6
  br i1 %slt198, label %loop.body40, label %loop.exit199

loop.exit199:                                     ; preds = %loop.latch194
  br label %if.exit

loop.body200:                                     ; preds = %loop.latch260, %if.false
  %i.1 = phi i128 [ 0, %if.false ], [ %add262, %loop.latch260 ]
  %call205 = call %struct_template_circuit_fp2frobeniusmap* @fn_template_build_fp2frobeniusmap(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, i128 %mod, [256 x i128]* %call)
  %in_frob208 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 %i.1
  store %struct_template_circuit_fp2frobeniusmap* %call205, %struct_template_circuit_fp2frobeniusmap** %in_frob208, align 8
  br label %loop.body209

loop.body209:                                     ; preds = %loop.latch253, %loop.body200
  %j.3 = phi i128 [ 0, %loop.body200 ], [ %add255, %loop.latch253 ]
  %array_getter213 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, i128 0, i128 %i.1, i128 0, i128 %j.3
  %in214 = load i128, i128* %array_getter213, align 4
  %array_getter217 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 %i.1
  %in_frob218 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter217, align 8
  %struct_getter219 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob218, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter219, align 8
  %array_getter221 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter, i128 0, i128 0, i128 %j.3
  %in_frob222 = load i128, i128* %array_getter221, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_frob222, i128 %in214, i1* @constraint.565)
  %array_getter225 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 %i.1
  %in_frob226 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter225, align 8
  %struct_getter227 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob226, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter228 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter227, align 8
  %in_frob230 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter228, i128 0, i128 0, i128 %j.3
  store i128 %in214, i128* %in_frob230, align 4
  %array_getter234 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12frobeniusmap.in.read_input_inner, i128 0, i128 %i.1, i128 1, i128 %j.3
  %in235 = load i128, i128* %array_getter234, align 4
  %array_getter238 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 %i.1
  %in_frob239 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter238, align 8
  %struct_getter240 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob239, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter241 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter240, align 8
  %array_getter243 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter241, i128 0, i128 1, i128 %j.3
  %in_frob244 = load i128, i128* %array_getter243, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_frob244, i128 %in235, i1* @constraint.566)
  %array_getter247 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 %i.1
  %in_frob248 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter247, align 8
  %struct_getter249 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob248, i32 0, i32 4
  %fp2frobeniusmap.in.read_input_outter250 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter249, align 8
  %in_frob252 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.in.read_input_outter250, i128 0, i128 1, i128 %j.3
  store i128 %in235, i128* %in_frob252, align 4
  br label %loop.latch253

loop.latch253:                                    ; preds = %loop.body209
  %add255 = add i128 %j.3, 1
  %slt258 = icmp slt i128 %add255, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt258, label %loop.body209, label %loop.exit259

loop.exit259:                                     ; preds = %loop.latch253
  br label %loop.latch260

loop.latch260:                                    ; preds = %loop.exit259
  %add262 = add i128 %i.1, 1
  %slt264 = icmp slt i128 %add262, 6
  br i1 %slt264, label %loop.body200, label %loop.exit265

loop.exit265:                                     ; preds = %loop.latch260
  br label %loop.body266

loop.body266:                                     ; preds = %loop.latch296, %loop.exit265
  %j.4 = phi i128 [ 0, %loop.exit265 ], [ %add298, %loop.latch296 ]
  %array_getter268 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 0
  %in_frob269 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter268, align 8
  %struct_getter270 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob269, i32 0, i32 5
  %fp2frobeniusmap.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter270, align 8
  %array_getter272 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.out.read_output_outter, i128 0, i128 0, i128 %j.4
  %in_frob273 = load i128, i128* %array_getter272, align 4
  %array_getter276 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %j.4
  %out277 = load i128, i128* %array_getter276, align 4
  call void @fn_intrinsic_add_constraint(i128 %out277, i128 %in_frob273, i1* @constraint.567)
  %out280 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 0, i128 %j.4
  store i128 %in_frob273, i128* %out280, align 4
  %array_getter282 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 0
  %in_frob283 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter282, align 8
  %struct_getter284 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob283, i32 0, i32 5
  %fp2frobeniusmap.out.read_output_outter285 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter284, align 8
  %array_getter287 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.out.read_output_outter285, i128 0, i128 1, i128 %j.4
  %in_frob288 = load i128, i128* %array_getter287, align 4
  %array_getter291 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %j.4
  %out292 = load i128, i128* %array_getter291, align 4
  call void @fn_intrinsic_add_constraint(i128 %out292, i128 %in_frob288, i1* @constraint.568)
  %out295 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 0, i128 1, i128 %j.4
  store i128 %in_frob288, i128* %out295, align 4
  br label %loop.latch296

loop.latch296:                                    ; preds = %loop.body266
  %add298 = add i128 %j.4, 1
  %slt301 = icmp slt i128 %add298, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt301, label %loop.body266, label %loop.exit302

loop.exit302:                                     ; preds = %loop.latch296
  br label %loop.body303

loop.body303:                                     ; preds = %loop.latch422, %loop.exit302
  %i.2 = phi i128 [ 1, %loop.exit302 ], [ %add424, %loop.latch422 ]
  %call307 = call %struct_template_circuit_fp2multiply* @fn_template_build_fp2multiply(i128 %fp12frobeniusmap.n.read_arg_inner, i128 %fp12frobeniusmap.k.read_arg_inner, [256 x i128]* %call)
  %mult_odd310 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  store %struct_template_circuit_fp2multiply* %call307, %struct_template_circuit_fp2multiply** %mult_odd310, align 8
  br label %loop.body311

loop.body311:                                     ; preds = %loop.latch372, %loop.body303
  %j.5 = phi i128 [ 0, %loop.body303 ], [ %add374, %loop.latch372 ]
  br label %loop.body312

loop.body312:                                     ; preds = %loop.latch366, %loop.body311
  %eps.0 = phi i128 [ 0, %loop.body311 ], [ %add368, %loop.latch366 ]
  %array_getter315 = getelementptr inbounds [256 x %struct_template_circuit_fp2frobeniusmap*], [256 x %struct_template_circuit_fp2frobeniusmap*]* %in_frob5, i128 0, i128 %i.2
  %in_frob316 = load %struct_template_circuit_fp2frobeniusmap*, %struct_template_circuit_fp2frobeniusmap** %array_getter315, align 8
  %struct_getter317 = getelementptr inbounds %struct_template_circuit_fp2frobeniusmap, %struct_template_circuit_fp2frobeniusmap* %in_frob316, i32 0, i32 5
  %fp2frobeniusmap.out.read_output_outter318 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter317, align 8
  %array_getter321 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2frobeniusmap.out.read_output_outter318, i128 0, i128 %eps.0, i128 %j.5
  %in_frob322 = load i128, i128* %array_getter321, align 4
  %array_getter325 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  %mult_odd326 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter325, align 8
  %struct_getter327 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd326, i32 0, i32 3
  %fp2multiply.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter327, align 8
  %array_getter330 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter, i128 0, i128 %eps.0, i128 %j.5
  %mult_odd331 = load i128, i128* %array_getter330, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult_odd331, i128 %in_frob322, i1* @constraint.569)
  %array_getter334 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  %mult_odd335 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter334, align 8
  %struct_getter336 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd335, i32 0, i32 3
  %fp2multiply.a.read_input_outter337 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter336, align 8
  %mult_odd340 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter337, i128 0, i128 %eps.0, i128 %j.5
  store i128 %in_frob322, i128* %mult_odd340, align 4
  %array_getter346 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %call15, i128 0, i128 %mod, i128 %i.2, i128 %eps.0, i128 %j.5
  %FP12_FROBENIUS_COEFFICIENTS347 = load i128, i128* %array_getter346, align 4
  %array_getter350 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  %mult_odd351 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter350, align 8
  %struct_getter352 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd351, i32 0, i32 4
  %fp2multiply.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter352, align 8
  %array_getter355 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter, i128 0, i128 %eps.0, i128 %j.5
  %mult_odd356 = load i128, i128* %array_getter355, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult_odd356, i128 %FP12_FROBENIUS_COEFFICIENTS347, i1* @constraint.570)
  %array_getter359 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  %mult_odd360 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter359, align 8
  %struct_getter361 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd360, i32 0, i32 4
  %fp2multiply.b.read_input_outter362 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter361, align 8
  %mult_odd365 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter362, i128 0, i128 %eps.0, i128 %j.5
  store i128 %FP12_FROBENIUS_COEFFICIENTS347, i128* %mult_odd365, align 4
  br label %loop.latch366

loop.latch366:                                    ; preds = %loop.body312
  %add368 = add i128 %eps.0, 1
  %slt370 = icmp slt i128 %add368, 2
  br i1 %slt370, label %loop.body312, label %loop.exit371

loop.exit371:                                     ; preds = %loop.latch366
  br label %loop.latch372

loop.latch372:                                    ; preds = %loop.exit371
  %add374 = add i128 %j.5, 1
  %slt377 = icmp slt i128 %add374, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt377, label %loop.body311, label %loop.exit378

loop.exit378:                                     ; preds = %loop.latch372
  br label %loop.body379

loop.body379:                                     ; preds = %loop.latch415, %loop.exit378
  %j.6 = phi i128 [ 0, %loop.exit378 ], [ %add417, %loop.latch415 ]
  %array_getter382 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  %mult_odd383 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter382, align 8
  %struct_getter384 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd383, i32 0, i32 5
  %fp2multiply.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter384, align 8
  %array_getter386 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter, i128 0, i128 0, i128 %j.6
  %mult_odd387 = load i128, i128* %array_getter386, align 4
  %array_getter391 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 0, i128 %j.6
  %out392 = load i128, i128* %array_getter391, align 4
  call void @fn_intrinsic_add_constraint(i128 %out392, i128 %mult_odd387, i1* @constraint.571)
  %out396 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 0, i128 %j.6
  store i128 %mult_odd387, i128* %out396, align 4
  %array_getter399 = getelementptr inbounds [256 x %struct_template_circuit_fp2multiply*], [256 x %struct_template_circuit_fp2multiply*]* %mult_odd10, i128 0, i128 %i.2
  %mult_odd400 = load %struct_template_circuit_fp2multiply*, %struct_template_circuit_fp2multiply** %array_getter399, align 8
  %struct_getter401 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %mult_odd400, i32 0, i32 5
  %fp2multiply.out.read_output_outter402 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter401, align 8
  %array_getter404 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter402, i128 0, i128 1, i128 %j.6
  %mult_odd405 = load i128, i128* %array_getter404, align 4
  %array_getter409 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 1, i128 %j.6
  %out410 = load i128, i128* %array_getter409, align 4
  call void @fn_intrinsic_add_constraint(i128 %out410, i128 %mult_odd405, i1* @constraint.572)
  %out414 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 1, i128 %j.6
  store i128 %mult_odd405, i128* %out414, align 4
  br label %loop.latch415

loop.latch415:                                    ; preds = %loop.body379
  %add417 = add i128 %j.6, 1
  %slt420 = icmp slt i128 %add417, %fp12frobeniusmap.k.read_arg_inner
  br i1 %slt420, label %loop.body379, label %loop.exit421

loop.exit421:                                     ; preds = %loop.latch415
  br label %loop.latch422

loop.latch422:                                    ; preds = %loop.exit421
  %add424 = add i128 %i.2, 1
  %slt426 = icmp slt i128 %add424, 6
  br i1 %slt426, label %loop.body303, label %loop.exit427

loop.exit427:                                     ; preds = %loop.latch422
  br label %if.exit

if.exit:                                          ; preds = %loop.exit427, %loop.exit199
  br label %exit

exit:                                             ; preds = %if.exit
  %fp12frobeniusmap.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12frobeniusmap.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12frobeniusmap* @fn_template_build_fp12frobeniusmap(i128 %0, i128 %1, i128 %2) {
entry:
  %struct_template_circuit_fp12frobeniusmap = alloca %struct_template_circuit_fp12frobeniusmap, align 8
  %fp12frobeniusmap.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap, i32 0, i32 0
  store i128 %0, i128* %fp12frobeniusmap.n.write_arg_inner, align 4
  %fp12frobeniusmap.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap, i32 0, i32 1
  store i128 %1, i128* %fp12frobeniusmap.k.write_arg_inner, align 4
  %fp12frobeniusmap.power.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12frobeniusmap, %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap, i32 0, i32 2
  store i128 %2, i128* %fp12frobeniusmap.power.write_arg_inner, align 4
  ret %struct_template_circuit_fp12frobeniusmap* %struct_template_circuit_fp12frobeniusmap
}

define void @fn_template_init_ellipticcurvescalarmultiply(%struct_template_circuit_ellipticcurvescalarmultiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 0
  %ellipticcurvescalarmultiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 1
  %ellipticcurvescalarmultiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 2
  %ellipticcurvescalarmultiply.b.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 3
  %ellipticcurvescalarmultiply.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 4
  %ellipticcurvescalarmultiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 5
  %ellipticcurvescalarmultiply.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 6
  %ellipticcurvescalarmultiply.inisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %i7 = call i128 @fn_intrinsic_inline_init()
  %SigBits9 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %Pdouble10 = alloca [256 x %struct_template_circuit_ellipticcurvedouble*], align 8
  %j11 = call i128 @fn_intrinsic_inline_init()
  %idx12 = call i128 @fn_intrinsic_inline_init()
  %malloccall13 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall13 to [256 x [256 x i128]]*
  %LOGK14 = call i128 @fn_intrinsic_inline_init()
  %BitLength15 = call i128 @fn_intrinsic_inline_init()
  %isInfinity = call i128 @fn_intrinsic_inline_init()
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %R_isO = bitcast i8* %malloccall16 to [256 x i128]*
  %malloccall17 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %P = bitcast i8* %malloccall17 to [256 x [256 x i128]]*
  %curid18 = call i128 @fn_intrinsic_inline_init()
  %Padd19 = alloca [256 x %struct_template_circuit_ellipticcurveadd*], align 8
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiply.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add30, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiply.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %Bits22 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %and, i128* %Bits22, align 4
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %Bits25 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits25, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add28 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  %BitLength.1 = phi i128 [ %add28, %if.true ], [ %BitLength.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add30 = add i128 %i.0, 1
  %slt = icmp slt i128 %add30, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch54, %loop.exit
  %j.0 = phi i128 [ 0, %loop.exit ], [ %add56, %loop.latch54 ]
  br label %loop.body33

loop.body33:                                      ; preds = %loop.latch47, %loop.body32
  %idx.0 = phi i128 [ 0, %loop.body32 ], [ %add49, %loop.latch47 ]
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvescalarmultiply.in.read_input_inner, i128 0, i128 %j.0, i128 %idx.0
  %in37 = load i128, i128* %array_getter36, align 4
  %array_getter41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %j.0, i128 %idx.0
  %P42 = load i128, i128* %array_getter41, align 4
  call void @fn_intrinsic_add_constraint(i128 %P42, i128 %in37, i1* @constraint.573)
  %P46 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %j.0, i128 %idx.0
  store i128 %in37, i128* %P46, align 4
  br label %loop.latch47

loop.latch47:                                     ; preds = %loop.body33
  %add49 = add i128 %idx.0, 1
  %slt52 = icmp slt i128 %add49, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt52, label %loop.body33, label %loop.exit53

loop.exit53:                                      ; preds = %loop.latch47
  br label %loop.latch54

loop.latch54:                                     ; preds = %loop.exit53
  %add56 = add i128 %j.0, 1
  %slt58 = icmp slt i128 %add56, 2
  br i1 %slt58, label %loop.body32, label %loop.exit59

loop.exit59:                                      ; preds = %loop.latch54
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body61

loop.body61:                                      ; preds = %loop.latch353, %loop.exit59
  %i.1 = phi i128 [ %sub, %loop.exit59 ], [ %sub355, %loop.latch353 ]
  %curid.0 = phi i128 [ 0, %loop.exit59 ], [ %curid.2, %loop.latch353 ]
  %sub66 = sub i128 %BitLength.1, 1
  %eq67 = icmp eq i128 %i.1, %sub66
  br i1 %eq67, label %if.true62, label %if.false63

if.true62:                                        ; preds = %loop.body61
  br label %loop.body68

if.false63:                                       ; preds = %loop.body61
  %call107 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %ellipticcurvescalarmultiply.n.read_arg_inner, i128 %ellipticcurvescalarmultiply.k.read_arg_inner, i128 0, i128 %ellipticcurvescalarmultiply.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiply.p.read_arg_inner)
  %Pdouble110 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble10, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedouble* %call107, %struct_template_circuit_ellipticcurvedouble** %Pdouble110, align 8
  br label %loop.body111

loop.body68:                                      ; preds = %loop.latch93, %if.true62
  %j.1 = phi i128 [ 0, %if.true62 ], [ %add95, %loop.latch93 ]
  br label %loop.body69

loop.body69:                                      ; preds = %loop.latch86, %loop.body68
  %idx.1 = phi i128 [ 0, %loop.body68 ], [ %add88, %loop.latch86 ]
  %array_getter73 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %j.1, i128 %idx.1
  %P74 = load i128, i128* %array_getter73, align 4
  %array_getter79 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %R80 = load i128, i128* %array_getter79, align 4
  call void @fn_intrinsic_add_constraint(i128 %R80, i128 %P74, i1* @constraint.574)
  %R85 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %P74, i128* %R85, align 4
  br label %loop.latch86

loop.latch86:                                     ; preds = %loop.body69
  %add88 = add i128 %idx.1, 1
  %slt91 = icmp slt i128 %add88, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt91, label %loop.body69, label %loop.exit92

loop.exit92:                                      ; preds = %loop.latch86
  br label %loop.latch93

loop.latch93:                                     ; preds = %loop.exit92
  %add95 = add i128 %j.1, 1
  %slt97 = icmp slt i128 %add95, 2
  br i1 %slt97, label %loop.body68, label %loop.exit98

loop.exit98:                                      ; preds = %loop.latch93
  %array_getter101 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  %R_isO102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_add_constraint(i128 %R_isO102, i128 0, i1* @constraint.575)
  %R_isO105 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  store i128 0, i128* %R_isO105, align 4
  br label %if.exit352

loop.body111:                                     ; preds = %loop.latch145, %if.false63
  %j.2 = phi i128 [ 0, %if.false63 ], [ %add147, %loop.latch145 ]
  br label %loop.body112

loop.body112:                                     ; preds = %loop.latch138, %loop.body111
  %idx.2 = phi i128 [ 0, %loop.body111 ], [ %add140, %loop.latch138 ]
  %add115 = add i128 %i.1, 1
  %array_getter118 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %add115, i128 %j.2, i128 %idx.2
  %R119 = load i128, i128* %array_getter118, align 4
  %array_getter122 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble10, i128 0, i128 %i.1
  %Pdouble123 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter122, align 8
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble123, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter124, align 8
  %array_getter127 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %j.2, i128 %idx.2
  %Pdouble128 = load i128, i128* %array_getter127, align 4
  call void @fn_intrinsic_add_constraint(i128 %Pdouble128, i128 %R119, i1* @constraint.576)
  %array_getter131 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble10, i128 0, i128 %i.1
  %Pdouble132 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter131, align 8
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble132, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter134 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter133, align 8
  %Pdouble137 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter134, i128 0, i128 %j.2, i128 %idx.2
  store i128 %R119, i128* %Pdouble137, align 4
  br label %loop.latch138

loop.latch138:                                    ; preds = %loop.body112
  %add140 = add i128 %idx.2, 1
  %slt143 = icmp slt i128 %add140, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt143, label %loop.body112, label %loop.exit144

loop.exit144:                                     ; preds = %loop.latch138
  br label %loop.latch145

loop.latch145:                                    ; preds = %loop.exit144
  %add147 = add i128 %j.2, 1
  %slt149 = icmp slt i128 %add147, 2
  br i1 %slt149, label %loop.body111, label %loop.exit150

loop.exit150:                                     ; preds = %loop.latch145
  %array_getter155 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %Bits156 = load i128, i128* %array_getter155, align 4
  %eq157 = icmp eq i128 %Bits156, 0
  br i1 %eq157, label %if.true151, label %if.false152

if.true151:                                       ; preds = %loop.exit150
  br label %loop.body158

if.false152:                                      ; preds = %loop.exit150
  %call209 = call %struct_template_circuit_ellipticcurveadd* @fn_template_build_ellipticcurveadd(i128 %ellipticcurvescalarmultiply.n.read_arg_inner, i128 %ellipticcurvescalarmultiply.k.read_arg_inner, i128 0, i128 %ellipticcurvescalarmultiply.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiply.p.read_arg_inner)
  %Padd212 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveadd* %call209, %struct_template_circuit_ellipticcurveadd** %Padd212, align 8
  br label %loop.body213

loop.body158:                                     ; preds = %loop.latch187, %if.true151
  %j.3 = phi i128 [ 0, %if.true151 ], [ %add189, %loop.latch187 ]
  br label %loop.body159

loop.body159:                                     ; preds = %loop.latch180, %loop.body158
  %idx.3 = phi i128 [ 0, %loop.body158 ], [ %add182, %loop.latch180 ]
  %array_getter162 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble10, i128 0, i128 %i.1
  %Pdouble163 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter162, align 8
  %struct_getter164 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble163, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter164, align 8
  %array_getter167 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %j.3, i128 %idx.3
  %Pdouble168 = load i128, i128* %array_getter167, align 4
  %array_getter173 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.3, i128 %idx.3
  %R174 = load i128, i128* %array_getter173, align 4
  call void @fn_intrinsic_add_constraint(i128 %R174, i128 %Pdouble168, i1* @constraint.577)
  %R179 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.3, i128 %idx.3
  store i128 %Pdouble168, i128* %R179, align 4
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.body159
  %add182 = add i128 %idx.3, 1
  %slt185 = icmp slt i128 %add182, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt185, label %loop.body159, label %loop.exit186

loop.exit186:                                     ; preds = %loop.latch180
  br label %loop.latch187

loop.latch187:                                    ; preds = %loop.exit186
  %add189 = add i128 %j.3, 1
  %slt191 = icmp slt i128 %add189, 2
  br i1 %slt191, label %loop.body158, label %loop.exit192

loop.exit192:                                     ; preds = %loop.latch187
  %add195 = add i128 %i.1, 1
  %array_getter196 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %add195
  %R_isO197 = load i128, i128* %array_getter196, align 4
  %array_getter200 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  %R_isO201 = load i128, i128* %array_getter200, align 4
  call void @fn_intrinsic_add_constraint(i128 %R_isO201, i128 %R_isO197, i1* @constraint.578)
  %R_isO204 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  store i128 %R_isO197, i128* %R_isO204, align 4
  br label %if.exit351

loop.body213:                                     ; preds = %loop.latch273, %if.false152
  %j.4 = phi i128 [ 0, %if.false152 ], [ %add275, %loop.latch273 ]
  br label %loop.body214

loop.body214:                                     ; preds = %loop.latch266, %loop.body213
  %idx.4 = phi i128 [ 0, %loop.body213 ], [ %add268, %loop.latch266 ]
  %array_getter217 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble10, i128 0, i128 %i.1
  %Pdouble218 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter217, align 8
  %struct_getter219 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble218, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter220 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter219, align 8
  %array_getter223 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter220, i128 0, i128 %j.4, i128 %idx.4
  %Pdouble224 = load i128, i128* %array_getter223, align 4
  %array_getter227 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd228 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter227, align 8
  %struct_getter229 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd228, i32 0, i32 5
  %ellipticcurveadd.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter229, align 8
  %array_getter232 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_outter, i128 0, i128 %j.4, i128 %idx.4
  %Padd233 = load i128, i128* %array_getter232, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd233, i128 %Pdouble224, i1* @constraint.579)
  %array_getter236 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd237 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter236, align 8
  %struct_getter238 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd237, i32 0, i32 5
  %ellipticcurveadd.a.read_input_outter239 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter238, align 8
  %Padd242 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.a.read_input_outter239, i128 0, i128 %j.4, i128 %idx.4
  store i128 %Pdouble224, i128* %Padd242, align 4
  %array_getter246 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %P, i128 0, i128 %j.4, i128 %idx.4
  %P247 = load i128, i128* %array_getter246, align 4
  %array_getter250 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd251 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter250, align 8
  %struct_getter252 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd251, i32 0, i32 7
  %ellipticcurveadd.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter252, align 8
  %array_getter255 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_outter, i128 0, i128 %j.4, i128 %idx.4
  %Padd256 = load i128, i128* %array_getter255, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd256, i128 %P247, i1* @constraint.580)
  %array_getter259 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd260 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter259, align 8
  %struct_getter261 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd260, i32 0, i32 7
  %ellipticcurveadd.b.read_input_outter262 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter261, align 8
  %Padd265 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.b.read_input_outter262, i128 0, i128 %j.4, i128 %idx.4
  store i128 %P247, i128* %Padd265, align 4
  br label %loop.latch266

loop.latch266:                                    ; preds = %loop.body214
  %add268 = add i128 %idx.4, 1
  %slt271 = icmp slt i128 %add268, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt271, label %loop.body214, label %loop.exit272

loop.exit272:                                     ; preds = %loop.latch266
  br label %loop.latch273

loop.latch273:                                    ; preds = %loop.exit272
  %add275 = add i128 %j.4, 1
  %slt277 = icmp slt i128 %add275, 2
  br i1 %slt277, label %loop.body213, label %loop.exit278

loop.exit278:                                     ; preds = %loop.latch273
  %add281 = add i128 %i.1, 1
  %array_getter282 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %add281
  %R_isO283 = load i128, i128* %array_getter282, align 4
  %array_getter286 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd287 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter286, align 8
  %struct_getter288 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd287, i32 0, i32 6
  %ellipticcurveadd.aisinfinity.read_input_outter = load i128, i128* %struct_getter288, align 4
  call void @fn_intrinsic_add_constraint(i128 %ellipticcurveadd.aisinfinity.read_input_outter, i128 %R_isO283, i1* @constraint.581)
  %array_getter291 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd292 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter291, align 8
  %ellipticcurveadd.aisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd292, i32 0, i32 6
  store i128 %R_isO283, i128* %ellipticcurveadd.aisinfinity.write_input_outter, align 4
  %array_getter295 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd296 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter295, align 8
  %struct_getter297 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd296, i32 0, i32 8
  %ellipticcurveadd.bisinfinity.read_input_outter = load i128, i128* %struct_getter297, align 4
  call void @fn_intrinsic_add_constraint(i128 %ellipticcurveadd.bisinfinity.read_input_outter, i128 0, i1* @constraint.582)
  %array_getter300 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd301 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter300, align 8
  %ellipticcurveadd.bisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd301, i32 0, i32 8
  store i128 0, i128* %ellipticcurveadd.bisinfinity.write_input_outter, align 4
  %array_getter304 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd305 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter304, align 8
  %struct_getter306 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd305, i32 0, i32 14
  %ellipticcurveadd.isinfinity.read_output_outter = load i128, i128* %struct_getter306, align 4
  %array_getter309 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  %R_isO310 = load i128, i128* %array_getter309, align 4
  call void @fn_intrinsic_add_constraint(i128 %R_isO310, i128 %ellipticcurveadd.isinfinity.read_output_outter, i1* @constraint.583)
  %R_isO313 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  store i128 %ellipticcurveadd.isinfinity.read_output_outter, i128* %R_isO313, align 4
  br label %loop.body314

loop.body314:                                     ; preds = %loop.latch343, %loop.exit278
  %j.5 = phi i128 [ 0, %loop.exit278 ], [ %add345, %loop.latch343 ]
  br label %loop.body315

loop.body315:                                     ; preds = %loop.latch336, %loop.body314
  %idx.5 = phi i128 [ 0, %loop.body314 ], [ %add338, %loop.latch336 ]
  %array_getter318 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveadd*], [256 x %struct_template_circuit_ellipticcurveadd*]* %Padd19, i128 0, i128 %curid.0
  %Padd319 = load %struct_template_circuit_ellipticcurveadd*, %struct_template_circuit_ellipticcurveadd** %array_getter318, align 8
  %struct_getter320 = getelementptr inbounds %struct_template_circuit_ellipticcurveadd, %struct_template_circuit_ellipticcurveadd* %Padd319, i32 0, i32 13
  %ellipticcurveadd.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter320, align 8
  %array_getter323 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveadd.out.read_output_outter, i128 0, i128 %j.5, i128 %idx.5
  %Padd324 = load i128, i128* %array_getter323, align 4
  %array_getter329 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.5, i128 %idx.5
  %R330 = load i128, i128* %array_getter329, align 4
  call void @fn_intrinsic_add_constraint(i128 %R330, i128 %Padd324, i1* @constraint.584)
  %R335 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.5, i128 %idx.5
  store i128 %Padd324, i128* %R335, align 4
  br label %loop.latch336

loop.latch336:                                    ; preds = %loop.body315
  %add338 = add i128 %idx.5, 1
  %slt341 = icmp slt i128 %add338, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt341, label %loop.body315, label %loop.exit342

loop.exit342:                                     ; preds = %loop.latch336
  br label %loop.latch343

loop.latch343:                                    ; preds = %loop.exit342
  %add345 = add i128 %j.5, 1
  %slt347 = icmp slt i128 %add345, 2
  br i1 %slt347, label %loop.body314, label %loop.exit348

loop.exit348:                                     ; preds = %loop.latch343
  %add350 = add i128 %curid.0, 1
  br label %if.exit351

if.exit351:                                       ; preds = %loop.exit348, %loop.exit192
  %curid.1 = phi i128 [ %curid.0, %loop.exit192 ], [ %add350, %loop.exit348 ]
  br label %if.exit352

if.exit352:                                       ; preds = %if.exit351, %loop.exit98
  %curid.2 = phi i128 [ %curid.0, %loop.exit98 ], [ %curid.1, %if.exit351 ]
  br label %loop.latch353

loop.latch353:                                    ; preds = %if.exit352
  %sub355 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub355, 0
  br i1 %sge, label %loop.body61, label %loop.exit357

loop.exit357:                                     ; preds = %loop.latch353
  %array_getter359 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 0
  %R_isO360 = load i128, i128* %array_getter359, align 4
  %add361 = add i128 %ellipticcurvescalarmultiply.inisinfinity.read_input_inner, %R_isO360
  %array_getter364 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 0
  %R_isO365 = load i128, i128* %array_getter364, align 4
  %mul = mul i128 %ellipticcurvescalarmultiply.inisinfinity.read_input_inner, %R_isO365
  %sub366 = sub i128 %add361, %mul
  call void @fn_intrinsic_add_constraint(i128 %isInfinity, i128 %sub366, i1* @constraint.585)
  %ellipticcurvescalarmultiply.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 11
  store i128 %sub366, i128* %ellipticcurvescalarmultiply.isinfinity.write_output_inner, align 4
  %struct_getter370 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 11
  %ellipticcurvescalarmultiply.isinfinity.read_output_inner = load i128, i128* %struct_getter370, align 4
  br label %loop.body371

loop.body371:                                     ; preds = %loop.latch408, %loop.exit357
  %i.2 = phi i128 [ 0, %loop.exit357 ], [ %add410, %loop.latch408 ]
  br label %loop.body372

loop.body372:                                     ; preds = %loop.latch401, %loop.body371
  %idx.6 = phi i128 [ 0, %loop.body371 ], [ %add403, %loop.latch401 ]
  %array_getter376 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 0, i128 %i.2, i128 %idx.6
  %R377 = load i128, i128* %array_getter376, align 4
  %array_getter382 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvescalarmultiply.in.read_input_inner, i128 0, i128 %i.2, i128 %idx.6
  %in383 = load i128, i128* %array_getter382, align 4
  %array_getter387 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 0, i128 %i.2, i128 %idx.6
  %R388 = load i128, i128* %array_getter387, align 4
  %sub389 = sub i128 %in383, %R388
  %mul390 = mul i128 %ellipticcurvescalarmultiply.isinfinity.read_output_inner, %sub389
  %add391 = add i128 %R377, %mul390
  %array_getter395 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %idx.6
  %out396 = load i128, i128* %array_getter395, align 4
  call void @fn_intrinsic_add_constraint(i128 %out396, i128 %add391, i1* @constraint.586)
  %out400 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %idx.6
  store i128 %add391, i128* %out400, align 4
  br label %loop.latch401

loop.latch401:                                    ; preds = %loop.body372
  %add403 = add i128 %idx.6, 1
  %slt406 = icmp slt i128 %add403, %ellipticcurvescalarmultiply.k.read_arg_inner
  br i1 %slt406, label %loop.body372, label %loop.exit407

loop.exit407:                                     ; preds = %loop.latch401
  br label %loop.latch408

loop.latch408:                                    ; preds = %loop.exit407
  %add410 = add i128 %i.2, 1
  %slt412 = icmp slt i128 %add410, 2
  br i1 %slt412, label %loop.body371, label %loop.exit413

loop.exit413:                                     ; preds = %loop.latch408
  br label %exit

exit:                                             ; preds = %loop.exit413
  %ellipticcurvescalarmultiply.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 7
  store [256 x [256 x [256 x i128]]]* %R, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiply.r.write_inter_inner, align 8
  %ellipticcurvescalarmultiply.r_iso.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 8
  store [256 x i128]* %R_isO, [256 x i128]** %ellipticcurvescalarmultiply.r_iso.write_inter_inner, align 8
  %ellipticcurvescalarmultiply.p.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 9
  store [256 x [256 x i128]]* %P, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.p.write_inter_inner, align 8
  %ellipticcurvescalarmultiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 10
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvescalarmultiply.out.write_output_inner, align 8
  %ellipticcurvescalarmultiply.isinfinity.write_output_inner419 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %0, i32 0, i32 11
  store i128 %ellipticcurvescalarmultiply.isinfinity.read_output_inner, i128* %ellipticcurvescalarmultiply.isinfinity.write_output_inner419, align 4
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiply* @fn_template_build_ellipticcurvescalarmultiply(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiply = alloca %struct_template_circuit_ellipticcurvescalarmultiply, align 8
  %ellipticcurvescalarmultiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiply.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiply.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 2
  store i128 %2, i128* %ellipticcurvescalarmultiply.b.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiply.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiply, %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiply* %struct_template_circuit_ellipticcurvescalarmultiply
}

define void @fn_template_init_signedfp2divide(%struct_template_circuit_signedfp2divide* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 0
  %signedfp2divide.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 1
  %signedfp2divide.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 2
  %signedfp2divide.overflowa.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 3
  %signedfp2divide.overflowb.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 4
  %signedfp2divide.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 5
  %signedfp2divide.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 6
  %signedfp2divide.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter6, align 8
  %LOGK27 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %eps8 = call i128 @fn_intrinsic_inline_init()
  %i11 = call i128 @fn_intrinsic_inline_init()
  %m13 = call i128 @fn_intrinsic_inline_init()
  %X_range_checks15 = alloca [256 x [256 x %struct_template_circuit_num2bits*]], align 8
  %mod_check16 = alloca [256 x %struct_template_circuit_checkcarrymodp*], align 8
  %overflow18 = call i128 @fn_intrinsic_inline_init()
  %mb19 = call i128 @fn_intrinsic_inline_init()
  %malloccall21 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %X = bitcast i8* %malloccall21 to [256 x [256 x i128]]*
  %ma23 = call i128 @fn_intrinsic_inline_init()
  %sdiv = sdiv i128 %signedfp2divide.overflowa.read_arg_inner, %signedfp2divide.n.read_arg_inner
  %sdiv25 = sdiv i128 %signedfp2divide.overflowb.read_arg_inner, %signedfp2divide.n.read_arg_inner
  %uniform_array = alloca [256 x [256 x i128]], align 8
  %uniform_array26 = alloca [256 x [256 x i128]], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %eps.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.a.read_input_inner, i128 0, i128 %eps.0
  %a30 = load [256 x i128], [256 x i128]* %array_getter, align 4
  %spice_inline_array = alloca [256 x i128], align 8
  store [256 x i128] %a30, [256 x i128]* %spice_inline_array, align 4
  %call = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %sdiv, [256 x i128]* %spice_inline_array, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  %array_getter32 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 1
  %temp33 = load [256 x i128], [256 x i128]* %array_getter32, align 4
  %spice_inline_array34 = alloca [256 x i128], align 8
  store [256 x i128] %temp33, [256 x i128]* %spice_inline_array34, align 4
  %a_mod36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array, i128 0, i128 %eps.0
  %1 = bitcast [256 x i128]* %a_mod36 to i8*
  %2 = bitcast [256 x i128]* %spice_inline_array34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  %array_getter41 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.b.read_input_inner, i128 0, i128 %eps.0
  %b42 = load [256 x i128], [256 x i128]* %array_getter41, align 4
  %spice_inline_array43 = alloca [256 x i128], align 8
  store [256 x i128] %b42, [256 x i128]* %spice_inline_array43, align 4
  %call45 = call [256 x [256 x i128]]* @get_signed_Fp_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %sdiv25, [256 x i128]* %spice_inline_array43, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  %array_getter47 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call45, i128 0, i128 1
  %temp48 = load [256 x i128], [256 x i128]* %array_getter47, align 4
  %spice_inline_array49 = alloca [256 x i128], align 8
  store [256 x i128] %temp48, [256 x i128]* %spice_inline_array49, align 4
  %b_mod52 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %uniform_array26, i128 0, i128 %eps.0
  %3 = bitcast [256 x i128]* %b_mod52 to i8*
  %4 = bitcast [256 x i128]* %spice_inline_array49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i64), i1 false)
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body
  %add = add i128 %eps.0, 1
  %slt = icmp slt i128 %add, 2
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %call59 = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, [256 x [256 x i128]]* %uniform_array26, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  %call65 = call [256 x [256 x i128]]* @find_Fp2_product(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, [256 x [256 x i128]]* %uniform_array, [256 x [256 x i128]]* %call59, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  br label %loop.body66

loop.body66:                                      ; preds = %loop.latch84, %loop.exit
  %eps.1 = phi i128 [ 0, %loop.exit ], [ %add86, %loop.latch84 ]
  br label %loop.body67

loop.body67:                                      ; preds = %loop.latch77, %loop.body66
  %i.0 = phi i128 [ 0, %loop.body66 ], [ %add79, %loop.latch77 ]
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call65, i128 0, i128 %eps.1, i128 %i.0
  %out_var72 = load i128, i128* %array_getter71, align 4
  %out76 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %eps.1, i128 %i.0
  store i128 %out_var72, i128* %out76, align 4
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.body67
  %add79 = add i128 %i.0, 1
  %slt82 = icmp slt i128 %add79, %signedfp2divide.k.read_arg_inner
  br i1 %slt82, label %loop.body67, label %loop.exit83

loop.exit83:                                      ; preds = %loop.latch77
  br label %loop.latch84

loop.latch84:                                     ; preds = %loop.exit83
  %add86 = add i128 %eps.1, 1
  %slt88 = icmp slt i128 %add86, 2
  br i1 %slt88, label %loop.body66, label %loop.exit89

loop.exit89:                                      ; preds = %loop.latch84
  %call92 = call %struct_template_circuit_rangecheck2d* @fn_template_build_rangecheck2d(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner)
  br label %loop.body93

loop.body93:                                      ; preds = %loop.latch119, %loop.exit89
  %eps.2 = phi i128 [ 0, %loop.exit89 ], [ %add121, %loop.latch119 ]
  br label %loop.body94

loop.body94:                                      ; preds = %loop.latch112, %loop.body93
  %i.1 = phi i128 [ 0, %loop.body93 ], [ %add114, %loop.latch112 ]
  %array_getter98 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %eps.2, i128 %i.1
  %out99 = load i128, i128* %array_getter98, align 4
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call92, i32 0, i32 2
  %rangecheck2d.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter101, align 8
  %array_getter104 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter, i128 0, i128 %eps.2, i128 %i.1
  %check105 = load i128, i128* %array_getter104, align 4
  call void @fn_intrinsic_add_constraint(i128 %check105, i128 %out99, i1* @constraint.587)
  %struct_getter107 = getelementptr inbounds %struct_template_circuit_rangecheck2d, %struct_template_circuit_rangecheck2d* %call92, i32 0, i32 2
  %rangecheck2d.in.read_input_outter108 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter107, align 8
  %check111 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %rangecheck2d.in.read_input_outter108, i128 0, i128 %eps.2, i128 %i.1
  store i128 %out99, i128* %check111, align 4
  br label %loop.latch112

loop.latch112:                                    ; preds = %loop.body94
  %add114 = add i128 %i.1, 1
  %slt117 = icmp slt i128 %add114, %signedfp2divide.k.read_arg_inner
  br i1 %slt117, label %loop.body94, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch112
  br label %loop.latch119

loop.latch119:                                    ; preds = %loop.exit118
  %add121 = add i128 %eps.2, 1
  %slt123 = icmp slt i128 %add121, 2
  br i1 %slt123, label %loop.body93, label %loop.exit124

loop.exit124:                                     ; preds = %loop.latch119
  %mul = mul i128 2, %signedfp2divide.k.read_arg_inner
  %mul127 = mul i128 %mul, %signedfp2divide.k.read_arg_inner
  %call128 = call i128 @log_ceil(i128 %mul127)
  %call134 = call i128 @max(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.overflowb.read_arg_inner)
  %mul136 = mul i128 2, %signedfp2divide.n.read_arg_inner
  %add138 = add i128 %mul136, %signedfp2divide.overflowb.read_arg_inner
  %add140 = add i128 %add138, %call128
  %call141 = call %struct_template_circuit_signedfp2multiplynocarrycompress* @fn_template_build_signedfp2multiplynocarrycompress(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, [256 x i128]* %signedfp2divide.p.read_arg_inner, i128 %call134, i128 %add140)
  br label %loop.body142

loop.body142:                                     ; preds = %loop.latch185, %loop.exit124
  %eps.3 = phi i128 [ 0, %loop.exit124 ], [ %add187, %loop.latch185 ]
  br label %loop.body143

loop.body143:                                     ; preds = %loop.latch178, %loop.body142
  %i.2 = phi i128 [ 0, %loop.body142 ], [ %add180, %loop.latch178 ]
  %array_getter147 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %eps.3, i128 %i.2
  %out148 = load i128, i128* %array_getter147, align 4
  %struct_getter150 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call141, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter150, align 8
  %array_getter153 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter, i128 0, i128 %eps.3, i128 %i.2
  %mult154 = load i128, i128* %array_getter153, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult154, i128 %out148, i1* @constraint.588)
  %struct_getter156 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call141, i32 0, i32 5
  %signedfp2multiplynocarrycompress.a.read_input_outter157 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter156, align 8
  %mult160 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.a.read_input_outter157, i128 0, i128 %eps.3, i128 %i.2
  store i128 %out148, i128* %mult160, align 4
  %array_getter164 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.b.read_input_inner, i128 0, i128 %eps.3, i128 %i.2
  %b165 = load i128, i128* %array_getter164, align 4
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call141, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter167, align 8
  %array_getter170 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter, i128 0, i128 %eps.3, i128 %i.2
  %mult171 = load i128, i128* %array_getter170, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult171, i128 %b165, i1* @constraint.589)
  %struct_getter173 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call141, i32 0, i32 6
  %signedfp2multiplynocarrycompress.b.read_input_outter174 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter173, align 8
  %mult177 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.b.read_input_outter174, i128 0, i128 %eps.3, i128 %i.2
  store i128 %b165, i128* %mult177, align 4
  br label %loop.latch178

loop.latch178:                                    ; preds = %loop.body143
  %add180 = add i128 %i.2, 1
  %slt183 = icmp slt i128 %add180, %signedfp2divide.k.read_arg_inner
  br i1 %slt183, label %loop.body143, label %loop.exit184

loop.exit184:                                     ; preds = %loop.latch178
  br label %loop.latch185

loop.latch185:                                    ; preds = %loop.exit184
  %add187 = add i128 %eps.3, 1
  %slt189 = icmp slt i128 %add187, 2
  br i1 %slt189, label %loop.body142, label %loop.exit190

loop.exit190:                                     ; preds = %loop.latch185
  %add193 = add i128 %sdiv25, %signedfp2divide.k.read_arg_inner
  %call195 = call i128 @max(i128 %add193, i128 %sdiv)
  %struct_getter200 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call141, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter200, align 8
  %call202 = call [256 x [256 x [256 x i128]]]* @get_signed_Fp2_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %call195, [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  %call208 = call [256 x [256 x [256 x i128]]]* @get_signed_Fp2_carry_witness(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %call195, [256 x [256 x i128]]* %signedfp2divide.a.read_input_inner, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  br label %loop.body209

loop.body209:                                     ; preds = %loop.latch258, %loop.exit190
  %eps.4 = phi i128 [ 0, %loop.exit190 ], [ %add260, %loop.latch258 ]
  br label %loop.body210

loop.body210:                                     ; preds = %loop.latch251, %loop.body209
  %i.3 = phi i128 [ 0, %loop.body209 ], [ %add253, %loop.latch251 ]
  %array_getter214 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call202, i128 0, i128 %eps.4, i128 0, i128 %i.3
  %XY215 = load i128, i128* %array_getter214, align 4
  %array_getter219 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call208, i128 0, i128 %eps.4, i128 0, i128 %i.3
  %XY1220 = load i128, i128* %array_getter219, align 4
  %sub = sub i128 %XY215, %XY1220
  %X224 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X, i128 0, i128 %eps.4, i128 %i.3
  store i128 %sub, i128* %X224, align 4
  %add226 = add i128 %signedfp2divide.n.read_arg_inner, 2
  %call227 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %add226)
  %X_range_checks231 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %X_range_checks15, i128 0, i128 %eps.4, i128 %i.3
  store %struct_template_circuit_num2bits* %call227, %struct_template_circuit_num2bits** %X_range_checks231, align 8
  %array_getter235 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X, i128 0, i128 %eps.4, i128 %i.3
  %X236 = load i128, i128* %array_getter235, align 4
  %add238 = add i128 %signedfp2divide.n.read_arg_inner, 1
  %lshift = shl i128 1, %add238
  %add239 = add i128 %X236, %lshift
  %array_getter243 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %X_range_checks15, i128 0, i128 %eps.4, i128 %i.3
  %X_range_checks244 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter243, align 8
  %struct_getter245 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks244, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter245, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %add239, i1* @constraint.590)
  %array_getter249 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %X_range_checks15, i128 0, i128 %eps.4, i128 %i.3
  %X_range_checks250 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter249, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %X_range_checks250, i32 0, i32 1
  store i128 %add239, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch251

loop.latch251:                                    ; preds = %loop.body210
  %add253 = add i128 %i.3, 1
  %slt256 = icmp slt i128 %add253, %call195
  br i1 %slt256, label %loop.body210, label %loop.exit257

loop.exit257:                                     ; preds = %loop.latch251
  br label %loop.latch258

loop.latch258:                                    ; preds = %loop.exit257
  %add260 = add i128 %eps.4, 1
  %slt262 = icmp slt i128 %add260, 2
  br i1 %slt262, label %loop.body209, label %loop.exit263

loop.exit263:                                     ; preds = %loop.latch258
  %mul265 = mul i128 2, %signedfp2divide.n.read_arg_inner
  %add267 = add i128 %mul265, %signedfp2divide.overflowb.read_arg_inner
  %add269 = add i128 %add267, %call128
  %call271 = call i128 @max(i128 %add269, i128 %signedfp2divide.overflowa.read_arg_inner)
  br label %loop.body272

loop.body272:                                     ; preds = %loop.latch365, %loop.exit263
  %eps.5 = phi i128 [ 0, %loop.exit263 ], [ %add367, %loop.latch365 ]
  %add277 = add i128 %call271, 1
  %call279 = call %struct_template_circuit_checkcarrymodp* @fn_template_build_checkcarrymodp(i128 %signedfp2divide.n.read_arg_inner, i128 %signedfp2divide.k.read_arg_inner, i128 %call195, i128 %add277, [256 x i128]* %signedfp2divide.p.read_arg_inner)
  %mod_check282 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  store %struct_template_circuit_checkcarrymodp* %call279, %struct_template_circuit_checkcarrymodp** %mod_check282, align 8
  br label %loop.body283

loop.body283:                                     ; preds = %loop.latch329, %loop.body272
  %i.4 = phi i128 [ 0, %loop.body272 ], [ %add331, %loop.latch329 ]
  %struct_getter285 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompress, %struct_template_circuit_signedfp2multiplynocarrycompress* %call141, i32 0, i32 7
  %signedfp2multiplynocarrycompress.out.read_output_outter286 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter285, align 8
  %array_getter289 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompress.out.read_output_outter286, i128 0, i128 %eps.5, i128 %i.4
  %mult290 = load i128, i128* %array_getter289, align 4
  %array_getter294 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2divide.a.read_input_inner, i128 0, i128 %eps.5, i128 %i.4
  %a295 = load i128, i128* %array_getter294, align 4
  %sub296 = sub i128 %mult290, %a295
  %array_getter299 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  %mod_check300 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter299, align 8
  %struct_getter301 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check300, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter301, align 8
  %array_getter303 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter, i128 0, i128 %i.4
  %mod_check304 = load i128, i128* %array_getter303, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check304, i128 %sub296, i1* @constraint.591)
  %array_getter307 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  %mod_check308 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter307, align 8
  %struct_getter309 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check308, i32 0, i32 5
  %checkcarrymodp.in.read_input_outter310 = load [256 x i128]*, [256 x i128]** %struct_getter309, align 8
  %mod_check312 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.in.read_input_outter310, i128 0, i128 %i.4
  store i128 %sub296, i128* %mod_check312, align 4
  %array_getter315 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  %mod_check316 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter315, align 8
  %struct_getter317 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check316, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter317, align 8
  %array_getter319 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter, i128 0, i128 %i.4
  %mod_check320 = load i128, i128* %array_getter319, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check320, i128 0, i1* @constraint.592)
  %array_getter323 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  %mod_check324 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter323, align 8
  %struct_getter325 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check324, i32 0, i32 7
  %checkcarrymodp.y.read_input_outter326 = load [256 x i128]*, [256 x i128]** %struct_getter325, align 8
  %mod_check328 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.y.read_input_outter326, i128 0, i128 %i.4
  store i128 0, i128* %mod_check328, align 4
  br label %loop.latch329

loop.latch329:                                    ; preds = %loop.body283
  %add331 = add i128 %i.4, 1
  %slt334 = icmp slt i128 %add331, %signedfp2divide.k.read_arg_inner
  br i1 %slt334, label %loop.body283, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch329
  br label %loop.body336

loop.body336:                                     ; preds = %loop.latch358, %loop.exit335
  %i.5 = phi i128 [ 0, %loop.exit335 ], [ %add360, %loop.latch358 ]
  %array_getter340 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %X, i128 0, i128 %eps.5, i128 %i.5
  %X341 = load i128, i128* %array_getter340, align 4
  %array_getter344 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  %mod_check345 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter344, align 8
  %struct_getter346 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check345, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter = load [256 x i128]*, [256 x i128]** %struct_getter346, align 8
  %array_getter348 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter, i128 0, i128 %i.5
  %mod_check349 = load i128, i128* %array_getter348, align 4
  call void @fn_intrinsic_add_constraint(i128 %mod_check349, i128 %X341, i1* @constraint.593)
  %array_getter352 = getelementptr inbounds [256 x %struct_template_circuit_checkcarrymodp*], [256 x %struct_template_circuit_checkcarrymodp*]* %mod_check16, i128 0, i128 %eps.5
  %mod_check353 = load %struct_template_circuit_checkcarrymodp*, %struct_template_circuit_checkcarrymodp** %array_getter352, align 8
  %struct_getter354 = getelementptr inbounds %struct_template_circuit_checkcarrymodp, %struct_template_circuit_checkcarrymodp* %mod_check353, i32 0, i32 6
  %checkcarrymodp.x.read_input_outter355 = load [256 x i128]*, [256 x i128]** %struct_getter354, align 8
  %mod_check357 = getelementptr inbounds [256 x i128], [256 x i128]* %checkcarrymodp.x.read_input_outter355, i128 0, i128 %i.5
  store i128 %X341, i128* %mod_check357, align 4
  br label %loop.latch358

loop.latch358:                                    ; preds = %loop.body336
  %add360 = add i128 %i.5, 1
  %slt363 = icmp slt i128 %add360, %call195
  br i1 %slt363, label %loop.body336, label %loop.exit364

loop.exit364:                                     ; preds = %loop.latch358
  br label %loop.latch365

loop.latch365:                                    ; preds = %loop.exit364
  %add367 = add i128 %eps.5, 1
  %slt369 = icmp slt i128 %add367, 2
  br i1 %slt369, label %loop.body272, label %loop.exit370

loop.exit370:                                     ; preds = %loop.latch365
  br label %exit

exit:                                             ; preds = %loop.exit370
  %signedfp2divide.x.write_inter_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %X, [256 x [256 x i128]]** %signedfp2divide.x.write_inter_inner, align 8
  %signedfp2divide.out.write_output_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %0, i32 0, i32 8
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %signedfp2divide.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_signedfp2divide* @fn_template_build_signedfp2divide(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_signedfp2divide = alloca %struct_template_circuit_signedfp2divide, align 8
  %signedfp2divide.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 0
  store i128 %0, i128* %signedfp2divide.n.write_arg_inner, align 4
  %signedfp2divide.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 1
  store i128 %1, i128* %signedfp2divide.k.write_arg_inner, align 4
  %signedfp2divide.overflowa.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 2
  store i128 %2, i128* %signedfp2divide.overflowa.write_arg_inner, align 4
  %signedfp2divide.overflowb.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 3
  store i128 %3, i128* %signedfp2divide.overflowb.write_arg_inner, align 4
  %signedfp2divide.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_signedfp2divide, %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %signedfp2divide.p.write_arg_inner, align 8
  ret %struct_template_circuit_signedfp2divide* %struct_template_circuit_signedfp2divide
}

define void @fn_template_init_ellipticcurvescalarmultiplyunequal(%struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 0
  %ellipticcurvescalarmultiplyunequal.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 1
  %ellipticcurvescalarmultiplyunequal.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 2
  %ellipticcurvescalarmultiplyunequal.b.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 3
  %ellipticcurvescalarmultiplyunequal.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 4
  %ellipticcurvescalarmultiplyunequal.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 5
  %ellipticcurvescalarmultiplyunequal.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %BitLength6 = call i128 @fn_intrinsic_inline_init()
  %Pdouble7 = alloca [256 x %struct_template_circuit_ellipticcurvedouble*], align 8
  %LOGK8 = call i128 @fn_intrinsic_inline_init()
  %i9 = call i128 @fn_intrinsic_inline_init()
  %SigBits10 = call i128 @fn_intrinsic_inline_init()
  %j12 = call i128 @fn_intrinsic_inline_init()
  %add_exception13 = alloca [256 x %struct_template_circuit_fpisequal*], align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %idx14 = call i128 @fn_intrinsic_inline_init()
  %malloccall15 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall15 to [256 x [256 x [256 x i128]]]*
  %Padd16 = alloca [256 x %struct_template_circuit_ellipticcurveaddunequal*], align 8
  %curid17 = call i128 @fn_intrinsic_inline_init()
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add28, %loop.latch ]
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiplyunequal.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %Bits20 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %and, i128* %Bits20, align 4
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %Bits23 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits23, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add26 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BitLength.1 = phi i128 [ %add26, %if.true ], [ %BitLength.0, %if.false ]
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add28 = add i128 %i.0, 1
  %slt = icmp slt i128 %add28, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body31

loop.body31:                                      ; preds = %loop.latch333, %loop.exit
  %i.1 = phi i128 [ %sub, %loop.exit ], [ %sub335, %loop.latch333 ]
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.2, %loop.latch333 ]
  %sub36 = sub i128 %BitLength.1, 1
  %eq37 = icmp eq i128 %i.1, %sub36
  br i1 %eq37, label %if.true32, label %if.false33

if.true32:                                        ; preds = %loop.body31
  br label %loop.body38

if.false33:                                       ; preds = %loop.body31
  %call69 = call %struct_template_circuit_ellipticcurvedouble* @fn_template_build_ellipticcurvedouble(i128 %ellipticcurvescalarmultiplyunequal.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner, i128 0, i128 %ellipticcurvescalarmultiplyunequal.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequal.p.read_arg_inner)
  %Pdouble72 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble7, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedouble* %call69, %struct_template_circuit_ellipticcurvedouble** %Pdouble72, align 8
  br label %loop.body73

loop.body38:                                      ; preds = %loop.latch62, %if.true32
  %j.0 = phi i128 [ 0, %if.true32 ], [ %add64, %loop.latch62 ]
  br label %loop.body39

loop.body39:                                      ; preds = %loop.latch55, %loop.body38
  %idx.0 = phi i128 [ 0, %loop.body38 ], [ %add57, %loop.latch55 ]
  %array_getter42 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvescalarmultiplyunequal.in.read_input_inner, i128 0, i128 %j.0, i128 %idx.0
  %in43 = load i128, i128* %array_getter42, align 4
  %array_getter48 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  %R49 = load i128, i128* %array_getter48, align 4
  call void @fn_intrinsic_add_constraint(i128 %R49, i128 %in43, i1* @constraint.594)
  %R54 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.0, i128 %idx.0
  store i128 %in43, i128* %R54, align 4
  br label %loop.latch55

loop.latch55:                                     ; preds = %loop.body39
  %add57 = add i128 %idx.0, 1
  %slt60 = icmp slt i128 %add57, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt60, label %loop.body39, label %loop.exit61

loop.exit61:                                      ; preds = %loop.latch55
  br label %loop.latch62

loop.latch62:                                     ; preds = %loop.exit61
  %add64 = add i128 %j.0, 1
  %slt66 = icmp slt i128 %add64, 2
  br i1 %slt66, label %loop.body38, label %loop.exit67

loop.exit67:                                      ; preds = %loop.latch62
  br label %if.exit332

loop.body73:                                      ; preds = %loop.latch107, %if.false33
  %j.1 = phi i128 [ 0, %if.false33 ], [ %add109, %loop.latch107 ]
  br label %loop.body74

loop.body74:                                      ; preds = %loop.latch100, %loop.body73
  %idx.1 = phi i128 [ 0, %loop.body73 ], [ %add102, %loop.latch100 ]
  %add77 = add i128 %i.1, 1
  %array_getter80 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %add77, i128 %j.1, i128 %idx.1
  %R81 = load i128, i128* %array_getter80, align 4
  %array_getter84 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble7, i128 0, i128 %i.1
  %Pdouble85 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter84, align 8
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble85, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter86, align 8
  %array_getter89 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter, i128 0, i128 %j.1, i128 %idx.1
  %Pdouble90 = load i128, i128* %array_getter89, align 4
  call void @fn_intrinsic_add_constraint(i128 %Pdouble90, i128 %R81, i1* @constraint.595)
  %array_getter93 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble7, i128 0, i128 %i.1
  %Pdouble94 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter93, align 8
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble94, i32 0, i32 5
  %ellipticcurvedouble.in.read_input_outter96 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter95, align 8
  %Pdouble99 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.in.read_input_outter96, i128 0, i128 %j.1, i128 %idx.1
  store i128 %R81, i128* %Pdouble99, align 4
  br label %loop.latch100

loop.latch100:                                    ; preds = %loop.body74
  %add102 = add i128 %idx.1, 1
  %slt105 = icmp slt i128 %add102, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt105, label %loop.body74, label %loop.exit106

loop.exit106:                                     ; preds = %loop.latch100
  br label %loop.latch107

loop.latch107:                                    ; preds = %loop.exit106
  %add109 = add i128 %j.1, 1
  %slt111 = icmp slt i128 %add109, 2
  br i1 %slt111, label %loop.body73, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch107
  %array_getter117 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %Bits118 = load i128, i128* %array_getter117, align 4
  %eq119 = icmp eq i128 %Bits118, 0
  br i1 %eq119, label %if.true113, label %if.false114

if.true113:                                       ; preds = %loop.exit112
  br label %loop.body120

if.false114:                                      ; preds = %loop.exit112
  %call158 = call %struct_template_circuit_fpisequal* @fn_template_build_fpisequal(i128 %ellipticcurvescalarmultiplyunequal.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequal.p.read_arg_inner)
  %add_exception161 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception13, i128 0, i128 %curid.0
  store %struct_template_circuit_fpisequal* %call158, %struct_template_circuit_fpisequal** %add_exception161, align 8
  br label %loop.body162

loop.body120:                                     ; preds = %loop.latch149, %if.true113
  %j.2 = phi i128 [ 0, %if.true113 ], [ %add151, %loop.latch149 ]
  br label %loop.body121

loop.body121:                                     ; preds = %loop.latch142, %loop.body120
  %idx.2 = phi i128 [ 0, %loop.body120 ], [ %add144, %loop.latch142 ]
  %array_getter124 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble7, i128 0, i128 %i.1
  %Pdouble125 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter124, align 8
  %struct_getter126 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble125, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter126, align 8
  %array_getter129 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter, i128 0, i128 %j.2, i128 %idx.2
  %Pdouble130 = load i128, i128* %array_getter129, align 4
  %array_getter135 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  %R136 = load i128, i128* %array_getter135, align 4
  call void @fn_intrinsic_add_constraint(i128 %R136, i128 %Pdouble130, i1* @constraint.596)
  %R141 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.2, i128 %idx.2
  store i128 %Pdouble130, i128* %R141, align 4
  br label %loop.latch142

loop.latch142:                                    ; preds = %loop.body121
  %add144 = add i128 %idx.2, 1
  %slt147 = icmp slt i128 %add144, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt147, label %loop.body121, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch142
  br label %loop.latch149

loop.latch149:                                    ; preds = %loop.exit148
  %add151 = add i128 %j.2, 1
  %slt153 = icmp slt i128 %add151, 2
  br i1 %slt153, label %loop.body120, label %loop.exit154

loop.exit154:                                     ; preds = %loop.latch149
  br label %if.exit331

loop.body162:                                     ; preds = %loop.latch209, %if.false114
  %idx.3 = phi i128 [ 0, %if.false114 ], [ %add211, %loop.latch209 ]
  %array_getter165 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble7, i128 0, i128 %i.1
  %Pdouble166 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter165, align 8
  %struct_getter167 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble166, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter168 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter167, align 8
  %array_getter170 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter168, i128 0, i128 0, i128 %idx.3
  %Pdouble171 = load i128, i128* %array_getter170, align 4
  %array_getter174 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception13, i128 0, i128 %curid.0
  %add_exception175 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter174, align 8
  %struct_getter176 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception175, i32 0, i32 3
  %fpisequal.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter176, align 8
  %array_getter178 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter, i128 0, i128 0, i128 %idx.3
  %add_exception179 = load i128, i128* %array_getter178, align 4
  call void @fn_intrinsic_add_constraint(i128 %add_exception179, i128 %Pdouble171, i1* @constraint.597)
  %array_getter182 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception13, i128 0, i128 %curid.0
  %add_exception183 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter182, align 8
  %struct_getter184 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception183, i32 0, i32 3
  %fpisequal.in.read_input_outter185 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter184, align 8
  %add_exception187 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter185, i128 0, i128 0, i128 %idx.3
  store i128 %Pdouble171, i128* %add_exception187, align 4
  %array_getter190 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvescalarmultiplyunequal.in.read_input_inner, i128 0, i128 0, i128 %idx.3
  %in191 = load i128, i128* %array_getter190, align 4
  %array_getter194 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception13, i128 0, i128 %curid.0
  %add_exception195 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter194, align 8
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception195, i32 0, i32 3
  %fpisequal.in.read_input_outter197 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter196, align 8
  %array_getter199 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter197, i128 0, i128 1, i128 %idx.3
  %add_exception200 = load i128, i128* %array_getter199, align 4
  call void @fn_intrinsic_add_constraint(i128 %add_exception200, i128 %in191, i1* @constraint.598)
  %array_getter203 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception13, i128 0, i128 %curid.0
  %add_exception204 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter203, align 8
  %struct_getter205 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception204, i32 0, i32 3
  %fpisequal.in.read_input_outter206 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter205, align 8
  %add_exception208 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fpisequal.in.read_input_outter206, i128 0, i128 1, i128 %idx.3
  store i128 %in191, i128* %add_exception208, align 4
  br label %loop.latch209

loop.latch209:                                    ; preds = %loop.body162
  %add211 = add i128 %idx.3, 1
  %slt214 = icmp slt i128 %add211, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt214, label %loop.body162, label %loop.exit215

loop.exit215:                                     ; preds = %loop.latch209
  %array_getter218 = getelementptr inbounds [256 x %struct_template_circuit_fpisequal*], [256 x %struct_template_circuit_fpisequal*]* %add_exception13, i128 0, i128 %curid.0
  %add_exception219 = load %struct_template_circuit_fpisequal*, %struct_template_circuit_fpisequal** %array_getter218, align 8
  %struct_getter220 = getelementptr inbounds %struct_template_circuit_fpisequal, %struct_template_circuit_fpisequal* %add_exception219, i32 0, i32 4
  %fpisequal.out.read_output_outter = load i128, i128* %struct_getter220, align 4
  call void @fn_intrinsic_add_constraint(i128 %fpisequal.out.read_output_outter, i128 0, i1* @constraint.599)
  %call224 = call %struct_template_circuit_ellipticcurveaddunequal* @fn_template_build_ellipticcurveaddunequal(i128 %ellipticcurvescalarmultiplyunequal.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyunequal.k.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyunequal.p.read_arg_inner)
  %Padd227 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd16, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddunequal* %call224, %struct_template_circuit_ellipticcurveaddunequal** %Padd227, align 8
  br label %loop.body228

loop.body228:                                     ; preds = %loop.latch288, %loop.exit215
  %j.3 = phi i128 [ 0, %loop.exit215 ], [ %add290, %loop.latch288 ]
  br label %loop.body229

loop.body229:                                     ; preds = %loop.latch281, %loop.body228
  %idx.4 = phi i128 [ 0, %loop.body228 ], [ %add283, %loop.latch281 ]
  %array_getter232 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedouble*], [256 x %struct_template_circuit_ellipticcurvedouble*]* %Pdouble7, i128 0, i128 %i.1
  %Pdouble233 = load %struct_template_circuit_ellipticcurvedouble*, %struct_template_circuit_ellipticcurvedouble** %array_getter232, align 8
  %struct_getter234 = getelementptr inbounds %struct_template_circuit_ellipticcurvedouble, %struct_template_circuit_ellipticcurvedouble* %Pdouble233, i32 0, i32 6
  %ellipticcurvedouble.out.read_output_outter235 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter234, align 8
  %array_getter238 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvedouble.out.read_output_outter235, i128 0, i128 %j.3, i128 %idx.4
  %Pdouble239 = load i128, i128* %array_getter238, align 4
  %array_getter242 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd16, i128 0, i128 %curid.0
  %Padd243 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter242, align 8
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd243, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter244, align 8
  %array_getter247 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter, i128 0, i128 %j.3, i128 %idx.4
  %Padd248 = load i128, i128* %array_getter247, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd248, i128 %Pdouble239, i1* @constraint.600)
  %array_getter251 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd16, i128 0, i128 %curid.0
  %Padd252 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter251, align 8
  %struct_getter253 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd252, i32 0, i32 3
  %ellipticcurveaddunequal.a.read_input_outter254 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter253, align 8
  %Padd257 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.a.read_input_outter254, i128 0, i128 %j.3, i128 %idx.4
  store i128 %Pdouble239, i128* %Padd257, align 4
  %array_getter261 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurvescalarmultiplyunequal.in.read_input_inner, i128 0, i128 %j.3, i128 %idx.4
  %in262 = load i128, i128* %array_getter261, align 4
  %array_getter265 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd16, i128 0, i128 %curid.0
  %Padd266 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter265, align 8
  %struct_getter267 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd266, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter267, align 8
  %array_getter270 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter, i128 0, i128 %j.3, i128 %idx.4
  %Padd271 = load i128, i128* %array_getter270, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd271, i128 %in262, i1* @constraint.601)
  %array_getter274 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd16, i128 0, i128 %curid.0
  %Padd275 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter274, align 8
  %struct_getter276 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd275, i32 0, i32 4
  %ellipticcurveaddunequal.b.read_input_outter277 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter276, align 8
  %Padd280 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.b.read_input_outter277, i128 0, i128 %j.3, i128 %idx.4
  store i128 %in262, i128* %Padd280, align 4
  br label %loop.latch281

loop.latch281:                                    ; preds = %loop.body229
  %add283 = add i128 %idx.4, 1
  %slt286 = icmp slt i128 %add283, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt286, label %loop.body229, label %loop.exit287

loop.exit287:                                     ; preds = %loop.latch281
  br label %loop.latch288

loop.latch288:                                    ; preds = %loop.exit287
  %add290 = add i128 %j.3, 1
  %slt292 = icmp slt i128 %add290, 2
  br i1 %slt292, label %loop.body228, label %loop.exit293

loop.exit293:                                     ; preds = %loop.latch288
  br label %loop.body294

loop.body294:                                     ; preds = %loop.latch323, %loop.exit293
  %j.4 = phi i128 [ 0, %loop.exit293 ], [ %add325, %loop.latch323 ]
  br label %loop.body295

loop.body295:                                     ; preds = %loop.latch316, %loop.body294
  %idx.5 = phi i128 [ 0, %loop.body294 ], [ %add318, %loop.latch316 ]
  %array_getter298 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddunequal*], [256 x %struct_template_circuit_ellipticcurveaddunequal*]* %Padd16, i128 0, i128 %curid.0
  %Padd299 = load %struct_template_circuit_ellipticcurveaddunequal*, %struct_template_circuit_ellipticcurveaddunequal** %array_getter298, align 8
  %struct_getter300 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddunequal, %struct_template_circuit_ellipticcurveaddunequal* %Padd299, i32 0, i32 5
  %ellipticcurveaddunequal.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter300, align 8
  %array_getter303 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %ellipticcurveaddunequal.out.read_output_outter, i128 0, i128 %j.4, i128 %idx.5
  %Padd304 = load i128, i128* %array_getter303, align 4
  %array_getter309 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.4, i128 %idx.5
  %R310 = load i128, i128* %array_getter309, align 4
  call void @fn_intrinsic_add_constraint(i128 %R310, i128 %Padd304, i1* @constraint.602)
  %R315 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 %i.1, i128 %j.4, i128 %idx.5
  store i128 %Padd304, i128* %R315, align 4
  br label %loop.latch316

loop.latch316:                                    ; preds = %loop.body295
  %add318 = add i128 %idx.5, 1
  %slt321 = icmp slt i128 %add318, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt321, label %loop.body295, label %loop.exit322

loop.exit322:                                     ; preds = %loop.latch316
  br label %loop.latch323

loop.latch323:                                    ; preds = %loop.exit322
  %add325 = add i128 %j.4, 1
  %slt327 = icmp slt i128 %add325, 2
  br i1 %slt327, label %loop.body294, label %loop.exit328

loop.exit328:                                     ; preds = %loop.latch323
  %add330 = add i128 %curid.0, 1
  br label %if.exit331

if.exit331:                                       ; preds = %loop.exit328, %loop.exit154
  %curid.1 = phi i128 [ %curid.0, %loop.exit154 ], [ %add330, %loop.exit328 ]
  br label %if.exit332

if.exit332:                                       ; preds = %if.exit331, %loop.exit67
  %curid.2 = phi i128 [ %curid.0, %loop.exit67 ], [ %curid.1, %if.exit331 ]
  br label %loop.latch333

loop.latch333:                                    ; preds = %if.exit332
  %sub335 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub335, 0
  br i1 %sge, label %loop.body31, label %loop.exit337

loop.exit337:                                     ; preds = %loop.latch333
  br label %loop.body338

loop.body338:                                     ; preds = %loop.latch361, %loop.exit337
  %i.2 = phi i128 [ 0, %loop.exit337 ], [ %add363, %loop.latch361 ]
  br label %loop.body339

loop.body339:                                     ; preds = %loop.latch354, %loop.body338
  %idx.6 = phi i128 [ 0, %loop.body338 ], [ %add356, %loop.latch354 ]
  %array_getter343 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %R, i128 0, i128 0, i128 %i.2, i128 %idx.6
  %R344 = load i128, i128* %array_getter343, align 4
  %array_getter348 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %idx.6
  %out349 = load i128, i128* %array_getter348, align 4
  call void @fn_intrinsic_add_constraint(i128 %out349, i128 %R344, i1* @constraint.603)
  %out353 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %idx.6
  store i128 %R344, i128* %out353, align 4
  br label %loop.latch354

loop.latch354:                                    ; preds = %loop.body339
  %add356 = add i128 %idx.6, 1
  %slt359 = icmp slt i128 %add356, %ellipticcurvescalarmultiplyunequal.k.read_arg_inner
  br i1 %slt359, label %loop.body339, label %loop.exit360

loop.exit360:                                     ; preds = %loop.latch354
  br label %loop.latch361

loop.latch361:                                    ; preds = %loop.exit360
  %add363 = add i128 %i.2, 1
  %slt365 = icmp slt i128 %add363, 2
  br i1 %slt365, label %loop.body338, label %loop.exit366

loop.exit366:                                     ; preds = %loop.latch361
  br label %exit

exit:                                             ; preds = %loop.exit366
  %ellipticcurvescalarmultiplyunequal.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %R, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyunequal.r.write_inter_inner, align 8
  %ellipticcurvescalarmultiplyunequal.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %0, i32 0, i32 7
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %ellipticcurvescalarmultiplyunequal.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiplyunequal* @fn_template_build_ellipticcurvescalarmultiplyunequal(i128 %0, i128 %1, i128 %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiplyunequal = alloca %struct_template_circuit_ellipticcurvescalarmultiplyunequal, align 8
  %ellipticcurvescalarmultiplyunequal.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiplyunequal.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiplyunequal.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 2
  store i128 %2, i128* %ellipticcurvescalarmultiplyunequal.b.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiplyunequal.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyunequal.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyunequal, %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiplyunequal.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiplyunequal* %struct_template_circuit_ellipticcurvescalarmultiplyunequal
}

define void @fn_template_init_fp2multiplythree(%struct_template_circuit_fp2multiplythree* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 0
  %fp2multiplythree.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 1
  %fp2multiplythree.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 2
  %fp2multiplythree.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 3
  %fp2multiplythree.a.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 4
  %fp2multiplythree.b.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 5
  %fp2multiplythree.c.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter5, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i6 = call i128 @fn_intrinsic_inline_init()
  %LOGK37 = call i128 @fn_intrinsic_inline_init()
  %idx8 = call i128 @fn_intrinsic_inline_init()
  %j9 = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 4, %fp2multiplythree.k.read_arg_inner
  %mul11 = mul i128 %mul, %fp2multiplythree.k.read_arg_inner
  %mul13 = mul i128 2, %fp2multiplythree.k.read_arg_inner
  %sub = sub i128 %mul13, 1
  %mul14 = mul i128 %mul11, %sub
  %call = call i128 @log_ceil(i128 %mul14)
  %mul18 = mul i128 4, %fp2multiplythree.n.read_arg_inner
  %add = add i128 %mul18, %call
  %call20 = call %struct_template_circuit_signedfp2multiplynocarrycompressthree* @fn_template_build_signedfp2multiplynocarrycompressthree(i128 %fp2multiplythree.n.read_arg_inner, i128 %fp2multiplythree.k.read_arg_inner, [256 x i128]* %fp2multiplythree.p.read_arg_inner, i128 %fp2multiplythree.n.read_arg_inner, i128 %add)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch72, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add74, %loop.latch72 ]
  br label %loop.body21

loop.body21:                                      ; preds = %loop.latch, %loop.body
  %idx.0 = phi i128 [ 0, %loop.body ], [ %add69, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiplythree.a.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %a24 = load i128, i128* %array_getter, align 4
  %struct_getter26 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 5
  %signedfp2multiplynocarrycompressthree.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter26, align 8
  %array_getter29 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.a.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress30 = load i128, i128* %array_getter29, align 4
  call void @fn_intrinsic_add_constraint(i128 %compress30, i128 %a24, i1* @constraint.604)
  %struct_getter31 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 5
  %signedfp2multiplynocarrycompressthree.a.read_input_outter32 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter31, align 8
  %compress35 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.a.read_input_outter32, i128 0, i128 %i.0, i128 %idx.0
  store i128 %a24, i128* %compress35, align 4
  %array_getter38 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiplythree.b.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %b39 = load i128, i128* %array_getter38, align 4
  %struct_getter41 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 6
  %signedfp2multiplynocarrycompressthree.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter41, align 8
  %array_getter44 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.b.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress45 = load i128, i128* %array_getter44, align 4
  call void @fn_intrinsic_add_constraint(i128 %compress45, i128 %b39, i1* @constraint.605)
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 6
  %signedfp2multiplynocarrycompressthree.b.read_input_outter48 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter47, align 8
  %compress51 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.b.read_input_outter48, i128 0, i128 %i.0, i128 %idx.0
  store i128 %b39, i128* %compress51, align 4
  %array_getter54 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiplythree.c.read_input_inner, i128 0, i128 %i.0, i128 %idx.0
  %c55 = load i128, i128* %array_getter54, align 4
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 7
  %signedfp2multiplynocarrycompressthree.c.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter57, align 8
  %array_getter60 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.c.read_input_outter, i128 0, i128 %i.0, i128 %idx.0
  %compress61 = load i128, i128* %array_getter60, align 4
  call void @fn_intrinsic_add_constraint(i128 %compress61, i128 %c55, i1* @constraint.606)
  %struct_getter63 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 7
  %signedfp2multiplynocarrycompressthree.c.read_input_outter64 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter63, align 8
  %compress67 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.c.read_input_outter64, i128 0, i128 %i.0, i128 %idx.0
  store i128 %c55, i128* %compress67, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body21
  %add69 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add69, %fp2multiplythree.k.read_arg_inner
  br i1 %slt, label %loop.body21, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch72

loop.latch72:                                     ; preds = %loop.exit
  %add74 = add i128 %i.0, 1
  %slt76 = icmp slt i128 %add74, 2
  br i1 %slt76, label %loop.body, label %loop.exit77

loop.exit77:                                      ; preds = %loop.latch72
  %mul81 = mul i128 4, %fp2multiplythree.n.read_arg_inner
  %add83 = add i128 %mul81, %call
  %call85 = call %struct_template_circuit_signedfp2carrymodp* @fn_template_build_signedfp2carrymodp(i128 %fp2multiplythree.n.read_arg_inner, i128 %fp2multiplythree.k.read_arg_inner, i128 %add83, [256 x i128]* %fp2multiplythree.p.read_arg_inner)
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch113, %loop.exit77
  %i.1 = phi i128 [ 0, %loop.exit77 ], [ %add115, %loop.latch113 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch106, %loop.body86
  %j.0 = phi i128 [ 0, %loop.body86 ], [ %add108, %loop.latch106 ]
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfp2multiplynocarrycompressthree, %struct_template_circuit_signedfp2multiplynocarrycompressthree* %call20, i32 0, i32 8
  %signedfp2multiplynocarrycompressthree.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter89, align 8
  %array_getter92 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2multiplynocarrycompressthree.out.read_output_outter, i128 0, i128 %i.1, i128 %j.0
  %compress93 = load i128, i128* %array_getter92, align 4
  %struct_getter95 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call85, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter95, align 8
  %array_getter98 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %j.0
  %carry_mod99 = load i128, i128* %array_getter98, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry_mod99, i128 %compress93, i1* @constraint.607)
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call85, i32 0, i32 4
  %signedfp2carrymodp.in.read_input_outter102 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter101, align 8
  %carry_mod105 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.in.read_input_outter102, i128 0, i128 %i.1, i128 %j.0
  store i128 %compress93, i128* %carry_mod105, align 4
  br label %loop.latch106

loop.latch106:                                    ; preds = %loop.body87
  %add108 = add i128 %j.0, 1
  %slt111 = icmp slt i128 %add108, %fp2multiplythree.k.read_arg_inner
  br i1 %slt111, label %loop.body87, label %loop.exit112

loop.exit112:                                     ; preds = %loop.latch106
  br label %loop.latch113

loop.latch113:                                    ; preds = %loop.exit112
  %add115 = add i128 %i.1, 1
  %slt117 = icmp slt i128 %add115, 2
  br i1 %slt117, label %loop.body86, label %loop.exit118

loop.exit118:                                     ; preds = %loop.latch113
  br label %loop.body119

loop.body119:                                     ; preds = %loop.latch143, %loop.exit118
  %i.2 = phi i128 [ 0, %loop.exit118 ], [ %add145, %loop.latch143 ]
  br label %loop.body120

loop.body120:                                     ; preds = %loop.latch136, %loop.body119
  %j.1 = phi i128 [ 0, %loop.body119 ], [ %add138, %loop.latch136 ]
  %struct_getter122 = getelementptr inbounds %struct_template_circuit_signedfp2carrymodp, %struct_template_circuit_signedfp2carrymodp* %call85, i32 0, i32 6
  %signedfp2carrymodp.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter122, align 8
  %array_getter125 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %signedfp2carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %j.1
  %carry_mod126 = load i128, i128* %array_getter125, align 4
  %array_getter130 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.1
  %out131 = load i128, i128* %array_getter130, align 4
  call void @fn_intrinsic_add_constraint(i128 %out131, i128 %carry_mod126, i1* @constraint.608)
  %out135 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.1
  store i128 %carry_mod126, i128* %out135, align 4
  br label %loop.latch136

loop.latch136:                                    ; preds = %loop.body120
  %add138 = add i128 %j.1, 1
  %slt141 = icmp slt i128 %add138, %fp2multiplythree.k.read_arg_inner
  br i1 %slt141, label %loop.body120, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch136
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %i.2, 1
  %slt147 = icmp slt i128 %add145, 2
  br i1 %slt147, label %loop.body119, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %exit

exit:                                             ; preds = %loop.exit148
  %fp2multiplythree.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %0, i32 0, i32 6
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2multiplythree.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2multiplythree* @fn_template_build_fp2multiplythree(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2multiplythree = alloca %struct_template_circuit_fp2multiplythree, align 8
  %fp2multiplythree.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree, i32 0, i32 0
  store i128 %0, i128* %fp2multiplythree.n.write_arg_inner, align 4
  %fp2multiplythree.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree, i32 0, i32 1
  store i128 %1, i128* %fp2multiplythree.k.write_arg_inner, align 4
  %fp2multiplythree.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2multiplythree, %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2multiplythree.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2multiplythree* %struct_template_circuit_fp2multiplythree
}

define void @fn_template_init_fp12multiply(%struct_template_circuit_fp12multiply* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 0
  %fp12multiply.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 1
  %fp12multiply.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 2
  %fp12multiply.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 3
  %fp12multiply.a.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 4
  %fp12multiply.b.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %LOGK25 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %l6 = call i128 @fn_intrinsic_inline_init()
  %j7 = call i128 @fn_intrinsic_inline_init()
  %XI08 = call i128 @fn_intrinsic_inline_init()
  %i9 = call i128 @fn_intrinsic_inline_init()
  %idx10 = call i128 @fn_intrinsic_inline_init()
  %mul = mul i128 6, %fp12multiply.k.read_arg_inner
  %mul12 = mul i128 %mul, %fp12multiply.k.read_arg_inner
  %add = add i128 2, 1
  %mul14 = mul i128 %mul12, %add
  %call = call i128 @log_ceil(i128 %mul14)
  %mul18 = mul i128 3, %fp12multiply.n.read_arg_inner
  %add20 = add i128 %mul18, %call
  %call21 = call %struct_template_circuit_signedfp12multiplynocarrycompress* @fn_template_build_signedfp12multiplynocarrycompress(i128 %fp12multiply.n.read_arg_inner, i128 %fp12multiply.k.read_arg_inner, [256 x i128]* %fp12multiply.p.read_arg_inner, i128 %fp12multiply.n.read_arg_inner, i128 %add20)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch70, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add72, %loop.latch70 ]
  br label %loop.body22

loop.body22:                                      ; preds = %loop.latch64, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add66, %loop.latch64 ]
  br label %loop.body23

loop.body23:                                      ; preds = %loop.latch, %loop.body22
  %idx.0 = phi i128 [ 0, %loop.body22 ], [ %add61, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %a27 = load i128, i128* %array_getter, align 4
  %struct_getter29 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call21, i32 0, i32 5
  %signedfp12multiplynocarrycompress.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter29, align 8
  %array_getter33 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.a.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %no_carry34 = load i128, i128* %array_getter33, align 4
  call void @fn_intrinsic_add_constraint(i128 %no_carry34, i128 %a27, i1* @constraint.609)
  %struct_getter35 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call21, i32 0, i32 5
  %signedfp12multiplynocarrycompress.a.read_input_outter36 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter35, align 8
  %no_carry40 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.a.read_input_outter36, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %a27, i128* %no_carry40, align 4
  %array_getter44 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_inner, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %b45 = load i128, i128* %array_getter44, align 4
  %struct_getter47 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call21, i32 0, i32 6
  %signedfp12multiplynocarrycompress.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter47, align 8
  %array_getter51 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.b.read_input_outter, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  %no_carry52 = load i128, i128* %array_getter51, align 4
  call void @fn_intrinsic_add_constraint(i128 %no_carry52, i128 %b45, i1* @constraint.610)
  %struct_getter54 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call21, i32 0, i32 6
  %signedfp12multiplynocarrycompress.b.read_input_outter55 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter54, align 8
  %no_carry59 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.b.read_input_outter55, i128 0, i128 %i.0, i128 %j.0, i128 %idx.0
  store i128 %b45, i128* %no_carry59, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body23
  %add61 = add i128 %idx.0, 1
  %slt = icmp slt i128 %add61, %fp12multiply.k.read_arg_inner
  br i1 %slt, label %loop.body23, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch64

loop.latch64:                                     ; preds = %loop.exit
  %add66 = add i128 %j.0, 1
  %slt68 = icmp slt i128 %add66, 2
  br i1 %slt68, label %loop.body22, label %loop.exit69

loop.exit69:                                      ; preds = %loop.latch64
  br label %loop.latch70

loop.latch70:                                     ; preds = %loop.exit69
  %add72 = add i128 %i.0, 1
  %slt75 = icmp slt i128 %add72, 6
  br i1 %slt75, label %loop.body, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch70
  %mul80 = mul i128 3, %fp12multiply.n.read_arg_inner
  %add82 = add i128 %mul80, %call
  %call84 = call %struct_template_circuit_signedfp12carrymodp* @fn_template_build_signedfp12carrymodp(i128 %fp12multiply.n.read_arg_inner, i128 %fp12multiply.k.read_arg_inner, i128 %add82, [256 x i128]* %fp12multiply.p.read_arg_inner)
  br label %loop.body85

loop.body85:                                      ; preds = %loop.latch122, %loop.exit76
  %i.1 = phi i128 [ 0, %loop.exit76 ], [ %add124, %loop.latch122 ]
  br label %loop.body86

loop.body86:                                      ; preds = %loop.latch116, %loop.body85
  %j.1 = phi i128 [ 0, %loop.body85 ], [ %add118, %loop.latch116 ]
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch109, %loop.body86
  %idx.1 = phi i128 [ 0, %loop.body86 ], [ %add111, %loop.latch109 ]
  %struct_getter89 = getelementptr inbounds %struct_template_circuit_signedfp12multiplynocarrycompress, %struct_template_circuit_signedfp12multiplynocarrycompress* %call21, i32 0, i32 7
  %signedfp12multiplynocarrycompress.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter89, align 8
  %array_getter93 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12multiplynocarrycompress.out.read_output_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %no_carry94 = load i128, i128* %array_getter93, align 4
  %struct_getter96 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call84, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter96, align 8
  %array_getter100 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  %carry_mod101 = load i128, i128* %array_getter100, align 4
  call void @fn_intrinsic_add_constraint(i128 %carry_mod101, i128 %no_carry94, i1* @constraint.611)
  %struct_getter103 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call84, i32 0, i32 4
  %signedfp12carrymodp.in.read_input_outter104 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter103, align 8
  %carry_mod108 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.in.read_input_outter104, i128 0, i128 %i.1, i128 %j.1, i128 %idx.1
  store i128 %no_carry94, i128* %carry_mod108, align 4
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.body87
  %add111 = add i128 %idx.1, 1
  %slt114 = icmp slt i128 %add111, %fp12multiply.k.read_arg_inner
  br i1 %slt114, label %loop.body87, label %loop.exit115

loop.exit115:                                     ; preds = %loop.latch109
  br label %loop.latch116

loop.latch116:                                    ; preds = %loop.exit115
  %add118 = add i128 %j.1, 1
  %slt120 = icmp slt i128 %add118, 2
  br i1 %slt120, label %loop.body86, label %loop.exit121

loop.exit121:                                     ; preds = %loop.latch116
  br label %loop.latch122

loop.latch122:                                    ; preds = %loop.exit121
  %add124 = add i128 %i.1, 1
  %slt127 = icmp slt i128 %add124, 6
  br i1 %slt127, label %loop.body85, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch122
  br label %loop.body129

loop.body129:                                     ; preds = %loop.latch163, %loop.exit128
  %i.2 = phi i128 [ 0, %loop.exit128 ], [ %add165, %loop.latch163 ]
  br label %loop.body130

loop.body130:                                     ; preds = %loop.latch157, %loop.body129
  %j.2 = phi i128 [ 0, %loop.body129 ], [ %add159, %loop.latch157 ]
  br label %loop.body131

loop.body131:                                     ; preds = %loop.latch150, %loop.body130
  %idx.2 = phi i128 [ 0, %loop.body130 ], [ %add152, %loop.latch150 ]
  %struct_getter133 = getelementptr inbounds %struct_template_circuit_signedfp12carrymodp, %struct_template_circuit_signedfp12carrymodp* %call84, i32 0, i32 6
  %signedfp12carrymodp.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter133, align 8
  %array_getter137 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %signedfp12carrymodp.out.read_output_outter, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %carry_mod138 = load i128, i128* %array_getter137, align 4
  %array_getter143 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  %out144 = load i128, i128* %array_getter143, align 4
  call void @fn_intrinsic_add_constraint(i128 %out144, i128 %carry_mod138, i1* @constraint.612)
  %out149 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.2, i128 %idx.2
  store i128 %carry_mod138, i128* %out149, align 4
  br label %loop.latch150

loop.latch150:                                    ; preds = %loop.body131
  %add152 = add i128 %idx.2, 1
  %slt155 = icmp slt i128 %add152, %fp12multiply.k.read_arg_inner
  br i1 %slt155, label %loop.body131, label %loop.exit156

loop.exit156:                                     ; preds = %loop.latch150
  br label %loop.latch157

loop.latch157:                                    ; preds = %loop.exit156
  %add159 = add i128 %j.2, 1
  %slt161 = icmp slt i128 %add159, 2
  br i1 %slt161, label %loop.body130, label %loop.exit162

loop.exit162:                                     ; preds = %loop.latch157
  br label %loop.latch163

loop.latch163:                                    ; preds = %loop.exit162
  %add165 = add i128 %i.2, 1
  %slt168 = icmp slt i128 %add165, 6
  br i1 %slt168, label %loop.body129, label %loop.exit169

loop.exit169:                                     ; preds = %loop.latch163
  br label %exit

exit:                                             ; preds = %loop.exit169
  %fp12multiply.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12multiply.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12multiply = alloca %struct_template_circuit_fp12multiply, align 8
  %fp12multiply.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply, i32 0, i32 0
  store i128 %0, i128* %fp12multiply.n.write_arg_inner, align 4
  %fp12multiply.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply, i32 0, i32 1
  store i128 %1, i128* %fp12multiply.k.write_arg_inner, align 4
  %fp12multiply.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12multiply.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12multiply* %struct_template_circuit_fp12multiply
}

define void @fn_template_init_fp12square(%struct_template_circuit_fp12square* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 0
  %fp12square.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 1
  %fp12square.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 2
  %fp12square.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 3
  %fp12square.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %j4 = call i128 @fn_intrinsic_inline_init()
  %i5 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %call = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12square.n.read_arg_inner, i128 %fp12square.k.read_arg_inner, [256 x i128]* %fp12square.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch77, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add79, %loop.latch77 ]
  br label %loop.body6

loop.body6:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.0
  %in9 = load i128, i128* %array_getter, align 4
  %struct_getter11 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter11, align 8
  %array_getter14 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %i.0, i128 0, i128 %j.0
  %square15 = load i128, i128* %array_getter14, align 4
  call void @fn_intrinsic_add_constraint(i128 %square15, i128 %in9, i1* @constraint.613)
  %struct_getter16 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter17 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter16, align 8
  %square20 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter17, i128 0, i128 %i.0, i128 0, i128 %j.0
  store i128 %in9, i128* %square20, align 4
  %array_getter24 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.0
  %in25 = load i128, i128* %array_getter24, align 4
  %struct_getter27 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter28 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter27, align 8
  %array_getter31 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter28, i128 0, i128 %i.0, i128 1, i128 %j.0
  %square32 = load i128, i128* %array_getter31, align 4
  call void @fn_intrinsic_add_constraint(i128 %square32, i128 %in25, i1* @constraint.614)
  %struct_getter34 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 3
  %fp12multiply.a.read_input_outter35 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter34, align 8
  %square38 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter35, i128 0, i128 %i.0, i128 1, i128 %j.0
  store i128 %in25, i128* %square38, align 4
  %array_getter42 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_inner, i128 0, i128 %i.0, i128 0, i128 %j.0
  %in43 = load i128, i128* %array_getter42, align 4
  %struct_getter45 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter45, align 8
  %array_getter48 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %i.0, i128 0, i128 %j.0
  %square49 = load i128, i128* %array_getter48, align 4
  call void @fn_intrinsic_add_constraint(i128 %square49, i128 %in43, i1* @constraint.615)
  %struct_getter51 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter52 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter51, align 8
  %square55 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter52, i128 0, i128 %i.0, i128 0, i128 %j.0
  store i128 %in43, i128* %square55, align 4
  %array_getter59 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_inner, i128 0, i128 %i.0, i128 1, i128 %j.0
  %in60 = load i128, i128* %array_getter59, align 4
  %struct_getter62 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter63 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter62, align 8
  %array_getter66 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter63, i128 0, i128 %i.0, i128 1, i128 %j.0
  %square67 = load i128, i128* %array_getter66, align 4
  call void @fn_intrinsic_add_constraint(i128 %square67, i128 %in60, i1* @constraint.616)
  %struct_getter69 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 4
  %fp12multiply.b.read_input_outter70 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter69, align 8
  %square73 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter70, i128 0, i128 %i.0, i128 1, i128 %j.0
  store i128 %in60, i128* %square73, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body6
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp12square.k.read_arg_inner
  br i1 %slt, label %loop.body6, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.exit
  %add79 = add i128 %i.0, 1
  %slt81 = icmp slt i128 %add79, 6
  br i1 %slt81, label %loop.body, label %loop.exit82

loop.exit82:                                      ; preds = %loop.latch77
  br label %loop.body83

loop.body83:                                      ; preds = %loop.latch123, %loop.exit82
  %i.1 = phi i128 [ 0, %loop.exit82 ], [ %add125, %loop.latch123 ]
  br label %loop.body84

loop.body84:                                      ; preds = %loop.latch116, %loop.body83
  %j.1 = phi i128 [ 0, %loop.body83 ], [ %add118, %loop.latch116 ]
  %struct_getter86 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter86, align 8
  %array_getter89 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %i.1, i128 0, i128 %j.1
  %square90 = load i128, i128* %array_getter89, align 4
  %array_getter94 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 0, i128 %j.1
  %out95 = load i128, i128* %array_getter94, align 4
  call void @fn_intrinsic_add_constraint(i128 %out95, i128 %square90, i1* @constraint.617)
  %out99 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 0, i128 %j.1
  store i128 %square90, i128* %out99, align 4
  %struct_getter101 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call, i32 0, i32 5
  %fp12multiply.out.read_output_outter102 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter101, align 8
  %array_getter105 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter102, i128 0, i128 %i.1, i128 1, i128 %j.1
  %square106 = load i128, i128* %array_getter105, align 4
  %array_getter110 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 1, i128 %j.1
  %out111 = load i128, i128* %array_getter110, align 4
  call void @fn_intrinsic_add_constraint(i128 %out111, i128 %square106, i1* @constraint.618)
  %out115 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 1, i128 %j.1
  store i128 %square106, i128* %out115, align 4
  br label %loop.latch116

loop.latch116:                                    ; preds = %loop.body84
  %add118 = add i128 %j.1, 1
  %slt121 = icmp slt i128 %add118, %fp12square.k.read_arg_inner
  br i1 %slt121, label %loop.body84, label %loop.exit122

loop.exit122:                                     ; preds = %loop.latch116
  br label %loop.latch123

loop.latch123:                                    ; preds = %loop.exit122
  %add125 = add i128 %i.1, 1
  %slt127 = icmp slt i128 %add125, 6
  br i1 %slt127, label %loop.body83, label %loop.exit128

loop.exit128:                                     ; preds = %loop.latch123
  br label %exit

exit:                                             ; preds = %loop.exit128
  %fp12square.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12square.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12square* @fn_template_build_fp12square(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12square = alloca %struct_template_circuit_fp12square, align 8
  %fp12square.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %struct_template_circuit_fp12square, i32 0, i32 0
  store i128 %0, i128* %fp12square.n.write_arg_inner, align 4
  %fp12square.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %struct_template_circuit_fp12square, i32 0, i32 1
  store i128 %1, i128* %fp12square.k.write_arg_inner, align 4
  %fp12square.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %struct_template_circuit_fp12square, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12square.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12square* %struct_template_circuit_fp12square
}

define void @fn_template_init_ellipticcurvescalarmultiplyfp2(%struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 0
  %ellipticcurvescalarmultiplyfp2.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 1
  %ellipticcurvescalarmultiplyfp2.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 2
  %ellipticcurvescalarmultiplyfp2.b.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 3
  %ellipticcurvescalarmultiplyfp2.x.read_arg_inner = load i128, i128* %struct_getter3, align 4
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 4
  %ellipticcurvescalarmultiplyfp2.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter4, align 8
  %struct_getter5 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 5
  %ellipticcurvescalarmultiplyfp2.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter5, align 8
  %struct_getter6 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 6
  %ellipticcurvescalarmultiplyfp2.inisinfinity.read_input_inner = load i128, i128* %struct_getter6, align 4
  %idx7 = call i128 @fn_intrinsic_inline_init()
  %LOGK8 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x [256 x i128]]]]* getelementptr ([256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* null, i32 1) to i32))
  %R = bitcast i8* %malloccall to [256 x [256 x [256 x [256 x i128]]]]*
  %l10 = call i128 @fn_intrinsic_inline_init()
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %P = bitcast i8* %malloccall11 to [256 x [256 x [256 x i128]]]*
  %isInfinity = call i128 @fn_intrinsic_inline_init()
  %Padd12 = alloca [256 x %struct_template_circuit_ellipticcurveaddfp2*], align 8
  %SigBits13 = call i128 @fn_intrinsic_inline_init()
  %BitLength14 = call i128 @fn_intrinsic_inline_init()
  %malloccall15 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall15 to [256 x [256 x [256 x i128]]]*
  %curid16 = call i128 @fn_intrinsic_inline_init()
  %i17 = call i128 @fn_intrinsic_inline_init()
  %j18 = call i128 @fn_intrinsic_inline_init()
  %malloccall19 = tail call i8* @malloc(i32 ptrtoint ([256 x i128]* getelementptr ([256 x i128], [256 x i128]* null, i32 1) to i32))
  %R_isO = bitcast i8* %malloccall19 to [256 x i128]*
  %Pdouble20 = alloca [256 x %struct_template_circuit_ellipticcurvedoublefp2*], align 8
  %call = call i128 @log_ceil(i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner)
  %uniform_array = alloca [256 x i128], align 8
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %SigBits.0 = phi i128 [ 0, %entry ], [ %SigBits.1, %loop.latch ]
  %BitLength.0 = phi i128 [ 0, %entry ], [ %BitLength.1, %loop.latch ]
  %i.0 = phi i128 [ 0, %entry ], [ %add31, %loop.latch ]
  %rshift = lshr i128 %ellipticcurvescalarmultiplyfp2.x.read_arg_inner, %i.0
  %and = and i128 %rshift, 1
  %Bits23 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  store i128 %and, i128* %Bits23, align 4
  %array_getter = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.0
  %Bits26 = load i128, i128* %array_getter, align 4
  %eq = icmp eq i128 %Bits26, 1
  br i1 %eq, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  %add = add i128 %SigBits.0, 1
  %add29 = add i128 %i.0, 1
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %SigBits.1 = phi i128 [ %add, %if.true ], [ %SigBits.0, %if.false ]
  %BitLength.1 = phi i128 [ %add29, %if.true ], [ %BitLength.0, %if.false ]
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add31 = add i128 %i.0, 1
  %slt = icmp slt i128 %add31, 250
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.body33

loop.body33:                                      ; preds = %loop.latch65, %loop.exit
  %j.0 = phi i128 [ 0, %loop.exit ], [ %add67, %loop.latch65 ]
  br label %loop.body34

loop.body34:                                      ; preds = %loop.latch58, %loop.body33
  %idx.0 = phi i128 [ 0, %loop.body33 ], [ %add60, %loop.latch58 ]
  br label %loop.body35

loop.body35:                                      ; preds = %loop.latch52, %loop.body34
  %l.0 = phi i128 [ 0, %loop.body34 ], [ %add54, %loop.latch52 ]
  %array_getter39 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyfp2.in.read_input_inner, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  %in40 = load i128, i128* %array_getter39, align 4
  %array_getter45 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  %P46 = load i128, i128* %array_getter45, align 4
  call void @fn_intrinsic_add_constraint(i128 %P46, i128 %in40, i1* @constraint.619)
  %P51 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %j.0, i128 %l.0, i128 %idx.0
  store i128 %in40, i128* %P51, align 4
  br label %loop.latch52

loop.latch52:                                     ; preds = %loop.body35
  %add54 = add i128 %l.0, 1
  %slt56 = icmp slt i128 %add54, 2
  br i1 %slt56, label %loop.body35, label %loop.exit57

loop.exit57:                                      ; preds = %loop.latch52
  br label %loop.latch58

loop.latch58:                                     ; preds = %loop.exit57
  %add60 = add i128 %idx.0, 1
  %slt63 = icmp slt i128 %add60, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt63, label %loop.body34, label %loop.exit64

loop.exit64:                                      ; preds = %loop.latch58
  br label %loop.latch65

loop.latch65:                                     ; preds = %loop.exit64
  %add67 = add i128 %j.0, 1
  %slt69 = icmp slt i128 %add67, 2
  br i1 %slt69, label %loop.body33, label %loop.exit70

loop.exit70:                                      ; preds = %loop.latch65
  %sub = sub i128 %BitLength.1, 1
  br label %loop.body72

loop.body72:                                      ; preds = %loop.latch418, %loop.exit70
  %curid.0 = phi i128 [ 0, %loop.exit70 ], [ %curid.2, %loop.latch418 ]
  %i.1 = phi i128 [ %sub, %loop.exit70 ], [ %sub420, %loop.latch418 ]
  %sub77 = sub i128 %BitLength.1, 1
  %eq78 = icmp eq i128 %i.1, %sub77
  br i1 %eq78, label %if.true73, label %if.false74

if.true73:                                        ; preds = %loop.body72
  br label %loop.body79

if.false74:                                       ; preds = %loop.body72
  %const_inline_array = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array, align 4
  %call128 = call %struct_template_circuit_ellipticcurvedoublefp2* @fn_template_build_ellipticcurvedoublefp2(i128 %ellipticcurvescalarmultiplyfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner, [256 x i128]* %const_inline_array, [256 x i128]* %ellipticcurvescalarmultiplyfp2.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyfp2.p.read_arg_inner)
  %Pdouble131 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble20, i128 0, i128 %i.1
  store %struct_template_circuit_ellipticcurvedoublefp2* %call128, %struct_template_circuit_ellipticcurvedoublefp2** %Pdouble131, align 8
  br label %loop.body132

loop.body79:                                      ; preds = %loop.latch114, %if.true73
  %j.1 = phi i128 [ 0, %if.true73 ], [ %add116, %loop.latch114 ]
  br label %loop.body80

loop.body80:                                      ; preds = %loop.latch107, %loop.body79
  %idx.1 = phi i128 [ 0, %loop.body79 ], [ %add109, %loop.latch107 ]
  br label %loop.body81

loop.body81:                                      ; preds = %loop.latch101, %loop.body80
  %l.1 = phi i128 [ 0, %loop.body80 ], [ %add103, %loop.latch101 ]
  %array_getter86 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %j.1, i128 %l.1, i128 %idx.1
  %P87 = load i128, i128* %array_getter86, align 4
  %array_getter93 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.1, i128 %l.1, i128 %idx.1
  %R94 = load i128, i128* %array_getter93, align 4
  call void @fn_intrinsic_add_constraint(i128 %R94, i128 %P87, i1* @constraint.620)
  %R100 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.1, i128 %l.1, i128 %idx.1
  store i128 %P87, i128* %R100, align 4
  br label %loop.latch101

loop.latch101:                                    ; preds = %loop.body81
  %add103 = add i128 %l.1, 1
  %slt105 = icmp slt i128 %add103, 2
  br i1 %slt105, label %loop.body81, label %loop.exit106

loop.exit106:                                     ; preds = %loop.latch101
  br label %loop.latch107

loop.latch107:                                    ; preds = %loop.exit106
  %add109 = add i128 %idx.1, 1
  %slt112 = icmp slt i128 %add109, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt112, label %loop.body80, label %loop.exit113

loop.exit113:                                     ; preds = %loop.latch107
  br label %loop.latch114

loop.latch114:                                    ; preds = %loop.exit113
  %add116 = add i128 %j.1, 1
  %slt118 = icmp slt i128 %add116, 2
  br i1 %slt118, label %loop.body79, label %loop.exit119

loop.exit119:                                     ; preds = %loop.latch114
  %array_getter122 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  %R_isO123 = load i128, i128* %array_getter122, align 4
  call void @fn_intrinsic_add_constraint(i128 %R_isO123, i128 0, i1* @constraint.621)
  %R_isO126 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  store i128 0, i128* %R_isO126, align 4
  br label %if.exit417

loop.body132:                                     ; preds = %loop.latch176, %if.false74
  %j.2 = phi i128 [ 0, %if.false74 ], [ %add178, %loop.latch176 ]
  br label %loop.body133

loop.body133:                                     ; preds = %loop.latch169, %loop.body132
  %idx.2 = phi i128 [ 0, %loop.body132 ], [ %add171, %loop.latch169 ]
  br label %loop.body134

loop.body134:                                     ; preds = %loop.latch163, %loop.body133
  %l.2 = phi i128 [ 0, %loop.body133 ], [ %add165, %loop.latch163 ]
  %add137 = add i128 %i.1, 1
  %array_getter141 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %add137, i128 %j.2, i128 %l.2, i128 %idx.2
  %R142 = load i128, i128* %array_getter141, align 4
  %array_getter145 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble20, i128 0, i128 %i.1
  %Pdouble146 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter145, align 8
  %struct_getter147 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble146, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter147, align 8
  %array_getter151 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter, i128 0, i128 %j.2, i128 %l.2, i128 %idx.2
  %Pdouble152 = load i128, i128* %array_getter151, align 4
  call void @fn_intrinsic_add_constraint(i128 %Pdouble152, i128 %R142, i1* @constraint.622)
  %array_getter155 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble20, i128 0, i128 %i.1
  %Pdouble156 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter155, align 8
  %struct_getter157 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble156, i32 0, i32 5
  %ellipticcurvedoublefp2.in.read_input_outter158 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter157, align 8
  %Pdouble162 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.in.read_input_outter158, i128 0, i128 %j.2, i128 %l.2, i128 %idx.2
  store i128 %R142, i128* %Pdouble162, align 4
  br label %loop.latch163

loop.latch163:                                    ; preds = %loop.body134
  %add165 = add i128 %l.2, 1
  %slt167 = icmp slt i128 %add165, 2
  br i1 %slt167, label %loop.body134, label %loop.exit168

loop.exit168:                                     ; preds = %loop.latch163
  br label %loop.latch169

loop.latch169:                                    ; preds = %loop.exit168
  %add171 = add i128 %idx.2, 1
  %slt174 = icmp slt i128 %add171, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt174, label %loop.body133, label %loop.exit175

loop.exit175:                                     ; preds = %loop.latch169
  br label %loop.latch176

loop.latch176:                                    ; preds = %loop.exit175
  %add178 = add i128 %j.2, 1
  %slt180 = icmp slt i128 %add178, 2
  br i1 %slt180, label %loop.body132, label %loop.exit181

loop.exit181:                                     ; preds = %loop.latch176
  %array_getter186 = getelementptr inbounds [256 x i128], [256 x i128]* %uniform_array, i128 0, i128 %i.1
  %Bits187 = load i128, i128* %array_getter186, align 4
  %eq188 = icmp eq i128 %Bits187, 0
  br i1 %eq188, label %if.true182, label %if.false183

if.true182:                                       ; preds = %loop.exit181
  br label %loop.body189

if.false183:                                      ; preds = %loop.exit181
  %const_inline_array248 = alloca [256 x i128], align 8
  store [256 x i128] zeroinitializer, [256 x i128]* %const_inline_array248, align 4
  %call251 = call %struct_template_circuit_ellipticcurveaddfp2* @fn_template_build_ellipticcurveaddfp2(i128 %ellipticcurvescalarmultiplyfp2.n.read_arg_inner, i128 %ellipticcurvescalarmultiplyfp2.k.read_arg_inner, [256 x i128]* %const_inline_array248, [256 x i128]* %ellipticcurvescalarmultiplyfp2.b.read_arg_inner, [256 x i128]* %ellipticcurvescalarmultiplyfp2.p.read_arg_inner)
  %Padd254 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  store %struct_template_circuit_ellipticcurveaddfp2* %call251, %struct_template_circuit_ellipticcurveaddfp2** %Padd254, align 8
  br label %loop.body255

loop.body189:                                     ; preds = %loop.latch228, %if.true182
  %j.3 = phi i128 [ 0, %if.true182 ], [ %add230, %loop.latch228 ]
  br label %loop.body190

loop.body190:                                     ; preds = %loop.latch221, %loop.body189
  %idx.3 = phi i128 [ 0, %loop.body189 ], [ %add223, %loop.latch221 ]
  br label %loop.body191

loop.body191:                                     ; preds = %loop.latch215, %loop.body190
  %l.3 = phi i128 [ 0, %loop.body190 ], [ %add217, %loop.latch215 ]
  %array_getter194 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble20, i128 0, i128 %i.1
  %Pdouble195 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter194, align 8
  %struct_getter196 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble195, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter196, align 8
  %array_getter200 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter, i128 0, i128 %j.3, i128 %l.3, i128 %idx.3
  %Pdouble201 = load i128, i128* %array_getter200, align 4
  %array_getter207 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.3, i128 %l.3, i128 %idx.3
  %R208 = load i128, i128* %array_getter207, align 4
  call void @fn_intrinsic_add_constraint(i128 %R208, i128 %Pdouble201, i1* @constraint.623)
  %R214 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.3, i128 %l.3, i128 %idx.3
  store i128 %Pdouble201, i128* %R214, align 4
  br label %loop.latch215

loop.latch215:                                    ; preds = %loop.body191
  %add217 = add i128 %l.3, 1
  %slt219 = icmp slt i128 %add217, 2
  br i1 %slt219, label %loop.body191, label %loop.exit220

loop.exit220:                                     ; preds = %loop.latch215
  br label %loop.latch221

loop.latch221:                                    ; preds = %loop.exit220
  %add223 = add i128 %idx.3, 1
  %slt226 = icmp slt i128 %add223, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt226, label %loop.body190, label %loop.exit227

loop.exit227:                                     ; preds = %loop.latch221
  br label %loop.latch228

loop.latch228:                                    ; preds = %loop.exit227
  %add230 = add i128 %j.3, 1
  %slt232 = icmp slt i128 %add230, 2
  br i1 %slt232, label %loop.body189, label %loop.exit233

loop.exit233:                                     ; preds = %loop.latch228
  %add236 = add i128 %i.1, 1
  %array_getter237 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %add236
  %R_isO238 = load i128, i128* %array_getter237, align 4
  %array_getter241 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  %R_isO242 = load i128, i128* %array_getter241, align 4
  call void @fn_intrinsic_add_constraint(i128 %R_isO242, i128 %R_isO238, i1* @constraint.624)
  %R_isO245 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  store i128 %R_isO238, i128* %R_isO245, align 4
  br label %if.exit416

loop.body255:                                     ; preds = %loop.latch328, %if.false183
  %j.4 = phi i128 [ 0, %if.false183 ], [ %add330, %loop.latch328 ]
  br label %loop.body256

loop.body256:                                     ; preds = %loop.latch322, %loop.body255
  %l.4 = phi i128 [ 0, %loop.body255 ], [ %add324, %loop.latch322 ]
  br label %loop.body257

loop.body257:                                     ; preds = %loop.latch315, %loop.body256
  %idx.4 = phi i128 [ 0, %loop.body256 ], [ %add317, %loop.latch315 ]
  %array_getter260 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurvedoublefp2*], [256 x %struct_template_circuit_ellipticcurvedoublefp2*]* %Pdouble20, i128 0, i128 %i.1
  %Pdouble261 = load %struct_template_circuit_ellipticcurvedoublefp2*, %struct_template_circuit_ellipticcurvedoublefp2** %array_getter260, align 8
  %struct_getter262 = getelementptr inbounds %struct_template_circuit_ellipticcurvedoublefp2, %struct_template_circuit_ellipticcurvedoublefp2* %Pdouble261, i32 0, i32 6
  %ellipticcurvedoublefp2.out.read_output_outter263 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter262, align 8
  %array_getter267 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvedoublefp2.out.read_output_outter263, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %Pdouble268 = load i128, i128* %array_getter267, align 4
  %array_getter271 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd272 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter271, align 8
  %struct_getter273 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd272, i32 0, i32 5
  %ellipticcurveaddfp2.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter273, align 8
  %array_getter277 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_outter, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %Padd278 = load i128, i128* %array_getter277, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd278, i128 %Pdouble268, i1* @constraint.625)
  %array_getter281 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd282 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter281, align 8
  %struct_getter283 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd282, i32 0, i32 5
  %ellipticcurveaddfp2.a.read_input_outter284 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter283, align 8
  %Padd288 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.a.read_input_outter284, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  store i128 %Pdouble268, i128* %Padd288, align 4
  %array_getter293 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %P, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %P294 = load i128, i128* %array_getter293, align 4
  %array_getter297 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd298 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter297, align 8
  %struct_getter299 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd298, i32 0, i32 7
  %ellipticcurveaddfp2.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter299, align 8
  %array_getter303 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_outter, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  %Padd304 = load i128, i128* %array_getter303, align 4
  call void @fn_intrinsic_add_constraint(i128 %Padd304, i128 %P294, i1* @constraint.626)
  %array_getter307 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd308 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter307, align 8
  %struct_getter309 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd308, i32 0, i32 7
  %ellipticcurveaddfp2.b.read_input_outter310 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter309, align 8
  %Padd314 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.b.read_input_outter310, i128 0, i128 %j.4, i128 %l.4, i128 %idx.4
  store i128 %P294, i128* %Padd314, align 4
  br label %loop.latch315

loop.latch315:                                    ; preds = %loop.body257
  %add317 = add i128 %idx.4, 1
  %slt320 = icmp slt i128 %add317, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt320, label %loop.body257, label %loop.exit321

loop.exit321:                                     ; preds = %loop.latch315
  br label %loop.latch322

loop.latch322:                                    ; preds = %loop.exit321
  %add324 = add i128 %l.4, 1
  %slt326 = icmp slt i128 %add324, 2
  br i1 %slt326, label %loop.body256, label %loop.exit327

loop.exit327:                                     ; preds = %loop.latch322
  br label %loop.latch328

loop.latch328:                                    ; preds = %loop.exit327
  %add330 = add i128 %j.4, 1
  %slt332 = icmp slt i128 %add330, 2
  br i1 %slt332, label %loop.body255, label %loop.exit333

loop.exit333:                                     ; preds = %loop.latch328
  %add336 = add i128 %i.1, 1
  %array_getter337 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %add336
  %R_isO338 = load i128, i128* %array_getter337, align 4
  %array_getter341 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd342 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter341, align 8
  %struct_getter343 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd342, i32 0, i32 6
  %ellipticcurveaddfp2.aisinfinity.read_input_outter = load i128, i128* %struct_getter343, align 4
  call void @fn_intrinsic_add_constraint(i128 %ellipticcurveaddfp2.aisinfinity.read_input_outter, i128 %R_isO338, i1* @constraint.627)
  %array_getter346 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd347 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter346, align 8
  %ellipticcurveaddfp2.aisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd347, i32 0, i32 6
  store i128 %R_isO338, i128* %ellipticcurveaddfp2.aisinfinity.write_input_outter, align 4
  %array_getter350 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd351 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter350, align 8
  %struct_getter352 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd351, i32 0, i32 8
  %ellipticcurveaddfp2.bisinfinity.read_input_outter = load i128, i128* %struct_getter352, align 4
  call void @fn_intrinsic_add_constraint(i128 %ellipticcurveaddfp2.bisinfinity.read_input_outter, i128 0, i1* @constraint.628)
  %array_getter355 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd356 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter355, align 8
  %ellipticcurveaddfp2.bisinfinity.write_input_outter = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd356, i32 0, i32 8
  store i128 0, i128* %ellipticcurveaddfp2.bisinfinity.write_input_outter, align 4
  %array_getter359 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd360 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter359, align 8
  %struct_getter361 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd360, i32 0, i32 14
  %ellipticcurveaddfp2.isinfinity.read_output_outter = load i128, i128* %struct_getter361, align 4
  %array_getter364 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  %R_isO365 = load i128, i128* %array_getter364, align 4
  call void @fn_intrinsic_add_constraint(i128 %R_isO365, i128 %ellipticcurveaddfp2.isinfinity.read_output_outter, i1* @constraint.629)
  %R_isO368 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 %i.1
  store i128 %ellipticcurveaddfp2.isinfinity.read_output_outter, i128* %R_isO368, align 4
  br label %loop.body369

loop.body369:                                     ; preds = %loop.latch408, %loop.exit333
  %j.5 = phi i128 [ 0, %loop.exit333 ], [ %add410, %loop.latch408 ]
  br label %loop.body370

loop.body370:                                     ; preds = %loop.latch402, %loop.body369
  %l.5 = phi i128 [ 0, %loop.body369 ], [ %add404, %loop.latch402 ]
  br label %loop.body371

loop.body371:                                     ; preds = %loop.latch395, %loop.body370
  %idx.5 = phi i128 [ 0, %loop.body370 ], [ %add397, %loop.latch395 ]
  %array_getter374 = getelementptr inbounds [256 x %struct_template_circuit_ellipticcurveaddfp2*], [256 x %struct_template_circuit_ellipticcurveaddfp2*]* %Padd12, i128 0, i128 %curid.0
  %Padd375 = load %struct_template_circuit_ellipticcurveaddfp2*, %struct_template_circuit_ellipticcurveaddfp2** %array_getter374, align 8
  %struct_getter376 = getelementptr inbounds %struct_template_circuit_ellipticcurveaddfp2, %struct_template_circuit_ellipticcurveaddfp2* %Padd375, i32 0, i32 13
  %ellipticcurveaddfp2.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter376, align 8
  %array_getter380 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurveaddfp2.out.read_output_outter, i128 0, i128 %j.5, i128 %l.5, i128 %idx.5
  %Padd381 = load i128, i128* %array_getter380, align 4
  %array_getter387 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.5, i128 %l.5, i128 %idx.5
  %R388 = load i128, i128* %array_getter387, align 4
  call void @fn_intrinsic_add_constraint(i128 %R388, i128 %Padd381, i1* @constraint.630)
  %R394 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 %i.1, i128 %j.5, i128 %l.5, i128 %idx.5
  store i128 %Padd381, i128* %R394, align 4
  br label %loop.latch395

loop.latch395:                                    ; preds = %loop.body371
  %add397 = add i128 %idx.5, 1
  %slt400 = icmp slt i128 %add397, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt400, label %loop.body371, label %loop.exit401

loop.exit401:                                     ; preds = %loop.latch395
  br label %loop.latch402

loop.latch402:                                    ; preds = %loop.exit401
  %add404 = add i128 %l.5, 1
  %slt406 = icmp slt i128 %add404, 2
  br i1 %slt406, label %loop.body370, label %loop.exit407

loop.exit407:                                     ; preds = %loop.latch402
  br label %loop.latch408

loop.latch408:                                    ; preds = %loop.exit407
  %add410 = add i128 %j.5, 1
  %slt412 = icmp slt i128 %add410, 2
  br i1 %slt412, label %loop.body369, label %loop.exit413

loop.exit413:                                     ; preds = %loop.latch408
  %add415 = add i128 %curid.0, 1
  br label %if.exit416

if.exit416:                                       ; preds = %loop.exit413, %loop.exit233
  %curid.1 = phi i128 [ %curid.0, %loop.exit233 ], [ %add415, %loop.exit413 ]
  br label %if.exit417

if.exit417:                                       ; preds = %if.exit416, %loop.exit119
  %curid.2 = phi i128 [ %curid.0, %loop.exit119 ], [ %curid.1, %if.exit416 ]
  br label %loop.latch418

loop.latch418:                                    ; preds = %if.exit417
  %sub420 = sub i128 %i.1, 1
  %sge = icmp sge i128 %sub420, 0
  br i1 %sge, label %loop.body72, label %loop.exit422

loop.exit422:                                     ; preds = %loop.latch418
  %array_getter424 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 0
  %R_isO425 = load i128, i128* %array_getter424, align 4
  %add426 = add i128 %ellipticcurvescalarmultiplyfp2.inisinfinity.read_input_inner, %R_isO425
  %array_getter429 = getelementptr inbounds [256 x i128], [256 x i128]* %R_isO, i128 0, i128 0
  %R_isO430 = load i128, i128* %array_getter429, align 4
  %mul = mul i128 %ellipticcurvescalarmultiplyfp2.inisinfinity.read_input_inner, %R_isO430
  %sub431 = sub i128 %add426, %mul
  call void @fn_intrinsic_add_constraint(i128 %isInfinity, i128 %sub431, i1* @constraint.631)
  %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 11
  store i128 %sub431, i128* %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner, align 4
  %struct_getter435 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 11
  %ellipticcurvescalarmultiplyfp2.isinfinity.read_output_inner = load i128, i128* %struct_getter435, align 4
  br label %loop.body436

loop.body436:                                     ; preds = %loop.latch485, %loop.exit422
  %i.2 = phi i128 [ 0, %loop.exit422 ], [ %add487, %loop.latch485 ]
  br label %loop.body437

loop.body437:                                     ; preds = %loop.latch479, %loop.body436
  %j.6 = phi i128 [ 0, %loop.body436 ], [ %add481, %loop.latch479 ]
  br label %loop.body438

loop.body438:                                     ; preds = %loop.latch472, %loop.body437
  %idx.6 = phi i128 [ 0, %loop.body437 ], [ %add474, %loop.latch472 ]
  %array_getter443 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %R444 = load i128, i128* %array_getter443, align 4
  %array_getter450 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %ellipticcurvescalarmultiplyfp2.in.read_input_inner, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %in451 = load i128, i128* %array_getter450, align 4
  %array_getter456 = getelementptr inbounds [256 x [256 x [256 x [256 x i128]]]], [256 x [256 x [256 x [256 x i128]]]]* %R, i128 0, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %R457 = load i128, i128* %array_getter456, align 4
  %sub458 = sub i128 %in451, %R457
  %mul459 = mul i128 %ellipticcurvescalarmultiplyfp2.isinfinity.read_output_inner, %sub458
  %add460 = add i128 %R444, %mul459
  %array_getter465 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  %out466 = load i128, i128* %array_getter465, align 4
  call void @fn_intrinsic_add_constraint(i128 %out466, i128 %add460, i1* @constraint.632)
  %out471 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.6, i128 %idx.6
  store i128 %add460, i128* %out471, align 4
  br label %loop.latch472

loop.latch472:                                    ; preds = %loop.body438
  %add474 = add i128 %idx.6, 1
  %slt477 = icmp slt i128 %add474, %ellipticcurvescalarmultiplyfp2.k.read_arg_inner
  br i1 %slt477, label %loop.body438, label %loop.exit478

loop.exit478:                                     ; preds = %loop.latch472
  br label %loop.latch479

loop.latch479:                                    ; preds = %loop.exit478
  %add481 = add i128 %j.6, 1
  %slt483 = icmp slt i128 %add481, 2
  br i1 %slt483, label %loop.body437, label %loop.exit484

loop.exit484:                                     ; preds = %loop.latch479
  br label %loop.latch485

loop.latch485:                                    ; preds = %loop.exit484
  %add487 = add i128 %i.2, 1
  %slt489 = icmp slt i128 %add487, 2
  br i1 %slt489, label %loop.body436, label %loop.exit490

loop.exit490:                                     ; preds = %loop.latch485
  br label %exit

exit:                                             ; preds = %loop.exit490
  %ellipticcurvescalarmultiplyfp2.r.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 7
  store [256 x [256 x [256 x [256 x i128]]]]* %R, [256 x [256 x [256 x [256 x i128]]]]** %ellipticcurvescalarmultiplyfp2.r.write_inter_inner, align 8
  %ellipticcurvescalarmultiplyfp2.r_iso.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 8
  store [256 x i128]* %R_isO, [256 x i128]** %ellipticcurvescalarmultiplyfp2.r_iso.write_inter_inner, align 8
  %ellipticcurvescalarmultiplyfp2.p.write_inter_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 9
  store [256 x [256 x [256 x i128]]]* %P, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.p.write_inter_inner, align 8
  %ellipticcurvescalarmultiplyfp2.out.write_output_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 10
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %ellipticcurvescalarmultiplyfp2.out.write_output_inner, align 8
  %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner496 = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %0, i32 0, i32 11
  store i128 %ellipticcurvescalarmultiplyfp2.isinfinity.read_output_inner, i128* %ellipticcurvescalarmultiplyfp2.isinfinity.write_output_inner496, align 4
  ret void
}

define %struct_template_circuit_ellipticcurvescalarmultiplyfp2* @fn_template_build_ellipticcurvescalarmultiplyfp2(i128 %0, i128 %1, [256 x i128]* %2, i128 %3, [256 x i128]* %4) {
entry:
  %struct_template_circuit_ellipticcurvescalarmultiplyfp2 = alloca %struct_template_circuit_ellipticcurvescalarmultiplyfp2, align 8
  %ellipticcurvescalarmultiplyfp2.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 0
  store i128 %0, i128* %ellipticcurvescalarmultiplyfp2.n.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyfp2.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 1
  store i128 %1, i128* %ellipticcurvescalarmultiplyfp2.k.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyfp2.b.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %ellipticcurvescalarmultiplyfp2.b.write_arg_inner, align 8
  %ellipticcurvescalarmultiplyfp2.x.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 3
  store i128 %3, i128* %ellipticcurvescalarmultiplyfp2.x.write_arg_inner, align 4
  %ellipticcurvescalarmultiplyfp2.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_ellipticcurvescalarmultiplyfp2, %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2, i32 0, i32 4
  store [256 x i128]* %4, [256 x i128]** %ellipticcurvescalarmultiplyfp2.p.write_arg_inner, align 8
  ret %struct_template_circuit_ellipticcurvescalarmultiplyfp2* %struct_template_circuit_ellipticcurvescalarmultiplyfp2
}

define void @fn_template_init_fp2invert(%struct_template_circuit_fp2invert* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 0
  %fp2invert.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 1
  %fp2invert.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 2
  %fp2invert.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 3
  %fp2invert.in.read_input_inner = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter3, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x i128]]* getelementptr ([256 x [256 x i128]], [256 x [256 x i128]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x i128]]*
  %i5 = call i128 @fn_intrinsic_inline_init()
  %j6 = call i128 @fn_intrinsic_inline_init()
  %outRangeChecks7 = alloca [256 x [256 x %struct_template_circuit_num2bits*]], align 8
  %call = call [256 x [256 x i128]]* @find_Fp2_inverse(i128 %fp2invert.n.read_arg_inner, i128 %fp2invert.k.read_arg_inner, [256 x [256 x i128]]* %fp2invert.in.read_input_inner, [256 x i128]* %fp2invert.p.read_arg_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch19, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add21, %loop.latch19 ]
  br label %loop.body8

loop.body8:                                       ; preds = %loop.latch, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %call, i128 0, i128 %i.0, i128 %j.0
  %inverse12 = load i128, i128* %array_getter, align 4
  %out15 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.0, i128 %j.0
  store i128 %inverse12, i128* %out15, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body8
  %add = add i128 %j.0, 1
  %slt = icmp slt i128 %add, %fp2invert.k.read_arg_inner
  br i1 %slt, label %loop.body8, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch19

loop.latch19:                                     ; preds = %loop.exit
  %add21 = add i128 %i.0, 1
  %slt23 = icmp slt i128 %add21, 2
  br i1 %slt23, label %loop.body, label %loop.exit24

loop.exit24:                                      ; preds = %loop.latch19
  br label %loop.body25

loop.body25:                                      ; preds = %loop.latch56, %loop.exit24
  %i.1 = phi i128 [ 0, %loop.exit24 ], [ %add58, %loop.latch56 ]
  br label %loop.body26

loop.body26:                                      ; preds = %loop.latch49, %loop.body25
  %j.1 = phi i128 [ 0, %loop.body25 ], [ %add51, %loop.latch49 ]
  %call28 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %fp2invert.n.read_arg_inner)
  %outRangeChecks32 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %outRangeChecks7, i128 0, i128 %i.1, i128 %j.1
  store %struct_template_circuit_num2bits* %call28, %struct_template_circuit_num2bits** %outRangeChecks32, align 8
  %array_getter36 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.1, i128 %j.1
  %out37 = load i128, i128* %array_getter36, align 4
  %array_getter41 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %outRangeChecks7, i128 0, i128 %i.1, i128 %j.1
  %outRangeChecks42 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter41, align 8
  %struct_getter43 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks42, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter43, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %out37, i1* @constraint.633)
  %array_getter47 = getelementptr inbounds [256 x [256 x %struct_template_circuit_num2bits*]], [256 x [256 x %struct_template_circuit_num2bits*]]* %outRangeChecks7, i128 0, i128 %i.1, i128 %j.1
  %outRangeChecks48 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter47, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks48, i32 0, i32 1
  store i128 %out37, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch49

loop.latch49:                                     ; preds = %loop.body26
  %add51 = add i128 %j.1, 1
  %slt54 = icmp slt i128 %add51, %fp2invert.k.read_arg_inner
  br i1 %slt54, label %loop.body26, label %loop.exit55

loop.exit55:                                      ; preds = %loop.latch49
  br label %loop.latch56

loop.latch56:                                     ; preds = %loop.exit55
  %add58 = add i128 %i.1, 1
  %slt60 = icmp slt i128 %add58, 2
  br i1 %slt60, label %loop.body25, label %loop.exit61

loop.exit61:                                      ; preds = %loop.latch56
  %call65 = call %struct_template_circuit_fp2multiply* @fn_template_build_fp2multiply(i128 %fp2invert.n.read_arg_inner, i128 %fp2invert.k.read_arg_inner, [256 x i128]* %fp2invert.p.read_arg_inner)
  br label %loop.body66

loop.body66:                                      ; preds = %loop.latch109, %loop.exit61
  %i.2 = phi i128 [ 0, %loop.exit61 ], [ %add111, %loop.latch109 ]
  br label %loop.body67

loop.body67:                                      ; preds = %loop.latch102, %loop.body66
  %j.2 = phi i128 [ 0, %loop.body66 ], [ %add104, %loop.latch102 ]
  %array_getter71 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2invert.in.read_input_inner, i128 0, i128 %i.2, i128 %j.2
  %in72 = load i128, i128* %array_getter71, align 4
  %struct_getter74 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call65, i32 0, i32 3
  %fp2multiply.a.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter74, align 8
  %array_getter77 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter, i128 0, i128 %i.2, i128 %j.2
  %in_out78 = load i128, i128* %array_getter77, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out78, i128 %in72, i1* @constraint.634)
  %struct_getter80 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call65, i32 0, i32 3
  %fp2multiply.a.read_input_outter81 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter80, align 8
  %in_out84 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.a.read_input_outter81, i128 0, i128 %i.2, i128 %j.2
  store i128 %in72, i128* %in_out84, align 4
  %array_getter88 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %out, i128 0, i128 %i.2, i128 %j.2
  %out89 = load i128, i128* %array_getter88, align 4
  %struct_getter91 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call65, i32 0, i32 4
  %fp2multiply.b.read_input_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter91, align 8
  %array_getter94 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter, i128 0, i128 %i.2, i128 %j.2
  %in_out95 = load i128, i128* %array_getter94, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out95, i128 %out89, i1* @constraint.635)
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call65, i32 0, i32 4
  %fp2multiply.b.read_input_outter98 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter97, align 8
  %in_out101 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.b.read_input_outter98, i128 0, i128 %i.2, i128 %j.2
  store i128 %out89, i128* %in_out101, align 4
  br label %loop.latch102

loop.latch102:                                    ; preds = %loop.body67
  %add104 = add i128 %j.2, 1
  %slt107 = icmp slt i128 %add104, %fp2invert.k.read_arg_inner
  br i1 %slt107, label %loop.body67, label %loop.exit108

loop.exit108:                                     ; preds = %loop.latch102
  br label %loop.latch109

loop.latch109:                                    ; preds = %loop.exit108
  %add111 = add i128 %i.2, 1
  %slt113 = icmp slt i128 %add111, 2
  br i1 %slt113, label %loop.body66, label %loop.exit114

loop.exit114:                                     ; preds = %loop.latch109
  br label %loop.body115

loop.body115:                                     ; preds = %loop.latch140, %loop.exit114
  %i.3 = phi i128 [ 0, %loop.exit114 ], [ %add142, %loop.latch140 ]
  br label %loop.body116

loop.body116:                                     ; preds = %loop.latch133, %loop.body115
  %j.3 = phi i128 [ 0, %loop.body115 ], [ %add135, %loop.latch133 ]
  %eq = icmp eq i128 %i.3, 0
  %eq119 = icmp eq i128 %j.3, 0
  %and = and i1 %eq, %eq119
  br i1 %and, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body116
  %struct_getter121 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call65, i32 0, i32 5
  %fp2multiply.out.read_output_outter = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter121, align 8
  %array_getter124 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter, i128 0, i128 %i.3, i128 %j.3
  %in_out125 = load i128, i128* %array_getter124, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out125, i128 1, i1* @constraint.636)
  br label %if.exit

if.false:                                         ; preds = %loop.body116
  %struct_getter127 = getelementptr inbounds %struct_template_circuit_fp2multiply, %struct_template_circuit_fp2multiply* %call65, i32 0, i32 5
  %fp2multiply.out.read_output_outter128 = load [256 x [256 x i128]]*, [256 x [256 x i128]]** %struct_getter127, align 8
  %array_getter131 = getelementptr inbounds [256 x [256 x i128]], [256 x [256 x i128]]* %fp2multiply.out.read_output_outter128, i128 0, i128 %i.3, i128 %j.3
  %in_out132 = load i128, i128* %array_getter131, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out132, i128 0, i1* @constraint.637)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch133

loop.latch133:                                    ; preds = %if.exit
  %add135 = add i128 %j.3, 1
  %slt138 = icmp slt i128 %add135, %fp2invert.k.read_arg_inner
  br i1 %slt138, label %loop.body116, label %loop.exit139

loop.exit139:                                     ; preds = %loop.latch133
  br label %loop.latch140

loop.latch140:                                    ; preds = %loop.exit139
  %add142 = add i128 %i.3, 1
  %slt144 = icmp slt i128 %add142, 2
  br i1 %slt144, label %loop.body115, label %loop.exit145

loop.exit145:                                     ; preds = %loop.latch140
  br label %exit

exit:                                             ; preds = %loop.exit145
  %fp2invert.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %0, i32 0, i32 4
  store [256 x [256 x i128]]* %out, [256 x [256 x i128]]** %fp2invert.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp2invert* @fn_template_build_fp2invert(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp2invert = alloca %struct_template_circuit_fp2invert, align 8
  %fp2invert.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert, i32 0, i32 0
  store i128 %0, i128* %fp2invert.n.write_arg_inner, align 4
  %fp2invert.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert, i32 0, i32 1
  store i128 %1, i128* %fp2invert.k.write_arg_inner, align 4
  %fp2invert.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp2invert, %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp2invert.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp2invert* %struct_template_circuit_fp2invert
}

define void @fn_template_init_fp12exp(%struct_template_circuit_fp12exp* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 0
  %fp12exp.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 1
  %fp12exp.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 2
  %fp12exp.e.read_arg_inner = load i128, i128* %struct_getter2, align 4
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 3
  %fp12exp.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter3, align 8
  %struct_getter4 = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 4
  %fp12exp.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter4, align 8
  %i5 = call i128 @fn_intrinsic_inline_init()
  %curid6 = call i128 @fn_intrinsic_inline_init()
  %id7 = call i128 @fn_intrinsic_inline_init()
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %temp8 = call i128 @fn_intrinsic_inline_init()
  %pow29 = alloca [256 x %struct_template_circuit_fp12square*], align 8
  %eps10 = call i128 @fn_intrinsic_inline_init()
  %mult11 = alloca [256 x %struct_template_circuit_fp12multiply*], align 8
  %j12 = call i128 @fn_intrinsic_inline_init()
  %BITLENGTH13 = call i128 @fn_intrinsic_inline_init()
  %malloccall14 = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %first = bitcast i8* %malloccall14 to [256 x [256 x [256 x i128]]]*
  br label %loop.body

loop.body:                                        ; preds = %loop.latch, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add, %loop.latch ]
  %temp.0 = phi i128 [ %fp12exp.e.read_arg_inner, %entry ], [ %rshift, %loop.latch ]
  %BITLENGTH.0 = phi i128 [ 0, %entry ], [ %BITLENGTH.1, %loop.latch ]
  %ne = icmp ne i128 %temp.0, 0
  br i1 %ne, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body
  br label %if.exit

if.false:                                         ; preds = %loop.body
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  %BITLENGTH.1 = phi i128 [ %i.0, %if.true ], [ %BITLENGTH.0, %if.false ]
  %rshift = lshr i128 %temp.0, 1
  br label %loop.latch

loop.latch:                                       ; preds = %if.exit
  %add = add i128 %i.0, 1
  %slt = icmp slt i128 %add, 254
  br i1 %slt, label %loop.body, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  %add21 = add i128 %BITLENGTH.1, 1
  br label %loop.body22

loop.body22:                                      ; preds = %loop.latch401, %loop.exit
  %i.1 = phi i128 [ 0, %loop.exit ], [ %add403, %loop.latch401 ]
  %curid.0 = phi i128 [ 0, %loop.exit ], [ %curid.1, %loop.latch401 ]
  %sgt = icmp sgt i128 %i.1, 0
  br i1 %sgt, label %if.true23, label %if.false24

if.true23:                                        ; preds = %loop.body22
  %call = call %struct_template_circuit_fp12square* @fn_template_build_fp12square(i128 %fp12exp.n.read_arg_inner, i128 %fp12exp.k.read_arg_inner, [256 x i128]* %fp12exp.p.read_arg_inner)
  %pow227 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  store %struct_template_circuit_fp12square* %call, %struct_template_circuit_fp12square** %pow227, align 8
  %eq = icmp eq i128 %i.1, 1
  br i1 %eq, label %if.true28, label %if.false29

if.false24:                                       ; preds = %loop.body22
  br label %if.exit131

if.true28:                                        ; preds = %if.true23
  br label %loop.body31

if.false29:                                       ; preds = %if.true23
  br label %loop.body77

loop.body31:                                      ; preds = %loop.latch71, %if.true28
  %id.0 = phi i128 [ 0, %if.true28 ], [ %add73, %loop.latch71 ]
  br label %loop.body32

loop.body32:                                      ; preds = %loop.latch65, %loop.body31
  %eps.0 = phi i128 [ 0, %loop.body31 ], [ %add67, %loop.latch65 ]
  br label %loop.body33

loop.body33:                                      ; preds = %loop.latch58, %loop.body32
  %j.0 = phi i128 [ 0, %loop.body32 ], [ %add60, %loop.latch58 ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12exp.in.read_input_inner, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %in37 = load i128, i128* %array_getter, align 4
  %array_getter40 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  %pow241 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter40, align 8
  %struct_getter42 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow241, i32 0, i32 3
  %fp12square.in.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter42, align 8
  %array_getter46 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  %pow247 = load i128, i128* %array_getter46, align 4
  call void @fn_intrinsic_add_constraint(i128 %pow247, i128 %in37, i1* @constraint.638)
  %array_getter50 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  %pow251 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter50, align 8
  %struct_getter52 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow251, i32 0, i32 3
  %fp12square.in.read_input_outter53 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter52, align 8
  %pow257 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter53, i128 0, i128 %id.0, i128 %eps.0, i128 %j.0
  store i128 %in37, i128* %pow257, align 4
  br label %loop.latch58

loop.latch58:                                     ; preds = %loop.body33
  %add60 = add i128 %j.0, 1
  %slt63 = icmp slt i128 %add60, %fp12exp.k.read_arg_inner
  br i1 %slt63, label %loop.body33, label %loop.exit64

loop.exit64:                                      ; preds = %loop.latch58
  br label %loop.latch65

loop.latch65:                                     ; preds = %loop.exit64
  %add67 = add i128 %eps.0, 1
  %slt69 = icmp slt i128 %add67, 2
  br i1 %slt69, label %loop.body32, label %loop.exit70

loop.exit70:                                      ; preds = %loop.latch65
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.exit70
  %add73 = add i128 %id.0, 1
  %slt75 = icmp slt i128 %add73, 6
  br i1 %slt75, label %loop.body31, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch71
  br label %if.exit130

loop.body77:                                      ; preds = %loop.latch124, %if.false29
  %id.1 = phi i128 [ 0, %if.false29 ], [ %add126, %loop.latch124 ]
  br label %loop.body78

loop.body78:                                      ; preds = %loop.latch118, %loop.body77
  %eps.1 = phi i128 [ 0, %loop.body77 ], [ %add120, %loop.latch118 ]
  br label %loop.body79

loop.body79:                                      ; preds = %loop.latch111, %loop.body78
  %j.1 = phi i128 [ 0, %loop.body78 ], [ %add113, %loop.latch111 ]
  %sub = sub i128 %i.1, 1
  %array_getter82 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %sub
  %pow283 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter82, align 8
  %struct_getter84 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow283, i32 0, i32 4
  %fp12square.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter84, align 8
  %array_getter88 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.out.read_output_outter, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %pow289 = load i128, i128* %array_getter88, align 4
  %array_getter92 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  %pow293 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter92, align 8
  %struct_getter94 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow293, i32 0, i32 3
  %fp12square.in.read_input_outter95 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter94, align 8
  %array_getter99 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter95, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  %pow2100 = load i128, i128* %array_getter99, align 4
  call void @fn_intrinsic_add_constraint(i128 %pow2100, i128 %pow289, i1* @constraint.639)
  %array_getter103 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  %pow2104 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter103, align 8
  %struct_getter105 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2104, i32 0, i32 3
  %fp12square.in.read_input_outter106 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter105, align 8
  %pow2110 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.in.read_input_outter106, i128 0, i128 %id.1, i128 %eps.1, i128 %j.1
  store i128 %pow289, i128* %pow2110, align 4
  br label %loop.latch111

loop.latch111:                                    ; preds = %loop.body79
  %add113 = add i128 %j.1, 1
  %slt116 = icmp slt i128 %add113, %fp12exp.k.read_arg_inner
  br i1 %slt116, label %loop.body79, label %loop.exit117

loop.exit117:                                     ; preds = %loop.latch111
  br label %loop.latch118

loop.latch118:                                    ; preds = %loop.exit117
  %add120 = add i128 %eps.1, 1
  %slt122 = icmp slt i128 %add120, 2
  br i1 %slt122, label %loop.body78, label %loop.exit123

loop.exit123:                                     ; preds = %loop.latch118
  br label %loop.latch124

loop.latch124:                                    ; preds = %loop.exit123
  %add126 = add i128 %id.1, 1
  %slt128 = icmp slt i128 %add126, 6
  br i1 %slt128, label %loop.body77, label %loop.exit129

loop.exit129:                                     ; preds = %loop.latch124
  br label %if.exit130

if.exit130:                                       ; preds = %loop.exit129, %loop.exit76
  br label %if.exit131

if.exit131:                                       ; preds = %if.exit130, %if.false24
  %rshift136 = lshr i128 %fp12exp.e.read_arg_inner, %i.1
  %and = and i128 %rshift136, 1
  %eq137 = icmp eq i128 %and, 1
  br i1 %eq137, label %if.true132, label %if.false133

if.true132:                                       ; preds = %if.exit131
  %eq141 = icmp eq i128 %curid.0, 0
  br i1 %eq141, label %if.true138, label %if.false139

if.false133:                                      ; preds = %if.exit131
  br label %if.exit400

if.true138:                                       ; preds = %if.true132
  %eq145 = icmp eq i128 %i.1, 0
  br i1 %eq145, label %if.true142, label %if.false143

if.false139:                                      ; preds = %if.true132
  %call233 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12exp.n.read_arg_inner, i128 %fp12exp.k.read_arg_inner, [256 x i128]* %fp12exp.p.read_arg_inner)
  %mult236 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  store %struct_template_circuit_fp12multiply* %call233, %struct_template_circuit_fp12multiply** %mult236, align 8
  br label %loop.body237

if.true142:                                       ; preds = %if.true138
  br label %loop.body146

if.false143:                                      ; preds = %if.true138
  br label %loop.body185

loop.body146:                                     ; preds = %loop.latch179, %if.true142
  %id.2 = phi i128 [ 0, %if.true142 ], [ %add181, %loop.latch179 ]
  br label %loop.body147

loop.body147:                                     ; preds = %loop.latch173, %loop.body146
  %eps.2 = phi i128 [ 0, %loop.body146 ], [ %add175, %loop.latch173 ]
  br label %loop.body148

loop.body148:                                     ; preds = %loop.latch166, %loop.body147
  %j.2 = phi i128 [ 0, %loop.body147 ], [ %add168, %loop.latch166 ]
  %array_getter153 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12exp.in.read_input_inner, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %in154 = load i128, i128* %array_getter153, align 4
  %array_getter159 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  %first160 = load i128, i128* %array_getter159, align 4
  call void @fn_intrinsic_add_constraint(i128 %first160, i128 %in154, i1* @constraint.640)
  %first165 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first, i128 0, i128 %id.2, i128 %eps.2, i128 %j.2
  store i128 %in154, i128* %first165, align 4
  br label %loop.latch166

loop.latch166:                                    ; preds = %loop.body148
  %add168 = add i128 %j.2, 1
  %slt171 = icmp slt i128 %add168, %fp12exp.k.read_arg_inner
  br i1 %slt171, label %loop.body148, label %loop.exit172

loop.exit172:                                     ; preds = %loop.latch166
  br label %loop.latch173

loop.latch173:                                    ; preds = %loop.exit172
  %add175 = add i128 %eps.2, 1
  %slt177 = icmp slt i128 %add175, 2
  br i1 %slt177, label %loop.body147, label %loop.exit178

loop.exit178:                                     ; preds = %loop.latch173
  br label %loop.latch179

loop.latch179:                                    ; preds = %loop.exit178
  %add181 = add i128 %id.2, 1
  %slt183 = icmp slt i128 %add181, 6
  br i1 %slt183, label %loop.body146, label %loop.exit184

loop.exit184:                                     ; preds = %loop.latch179
  br label %if.exit229

loop.body185:                                     ; preds = %loop.latch223, %if.false143
  %id.3 = phi i128 [ 0, %if.false143 ], [ %add225, %loop.latch223 ]
  br label %loop.body186

loop.body186:                                     ; preds = %loop.latch217, %loop.body185
  %eps.3 = phi i128 [ 0, %loop.body185 ], [ %add219, %loop.latch217 ]
  br label %loop.body187

loop.body187:                                     ; preds = %loop.latch210, %loop.body186
  %j.3 = phi i128 [ 0, %loop.body186 ], [ %add212, %loop.latch210 ]
  %array_getter190 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  %pow2191 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter190, align 8
  %struct_getter192 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2191, i32 0, i32 4
  %fp12square.out.read_output_outter193 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter192, align 8
  %array_getter197 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.out.read_output_outter193, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %pow2198 = load i128, i128* %array_getter197, align 4
  %array_getter203 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  %first204 = load i128, i128* %array_getter203, align 4
  call void @fn_intrinsic_add_constraint(i128 %first204, i128 %pow2198, i1* @constraint.641)
  %first209 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first, i128 0, i128 %id.3, i128 %eps.3, i128 %j.3
  store i128 %pow2198, i128* %first209, align 4
  br label %loop.latch210

loop.latch210:                                    ; preds = %loop.body187
  %add212 = add i128 %j.3, 1
  %slt215 = icmp slt i128 %add212, %fp12exp.k.read_arg_inner
  br i1 %slt215, label %loop.body187, label %loop.exit216

loop.exit216:                                     ; preds = %loop.latch210
  br label %loop.latch217

loop.latch217:                                    ; preds = %loop.exit216
  %add219 = add i128 %eps.3, 1
  %slt221 = icmp slt i128 %add219, 2
  br i1 %slt221, label %loop.body186, label %loop.exit222

loop.exit222:                                     ; preds = %loop.latch217
  br label %loop.latch223

loop.latch223:                                    ; preds = %loop.exit222
  %add225 = add i128 %id.3, 1
  %slt227 = icmp slt i128 %add225, 6
  br i1 %slt227, label %loop.body185, label %loop.exit228

loop.exit228:                                     ; preds = %loop.latch223
  br label %if.exit229

if.exit229:                                       ; preds = %loop.exit228, %loop.exit184
  br label %if.exit397

loop.body237:                                     ; preds = %loop.latch284, %if.false139
  %id.4 = phi i128 [ 0, %if.false139 ], [ %add286, %loop.latch284 ]
  br label %loop.body238

loop.body238:                                     ; preds = %loop.latch278, %loop.body237
  %eps.4 = phi i128 [ 0, %loop.body237 ], [ %add280, %loop.latch278 ]
  br label %loop.body239

loop.body239:                                     ; preds = %loop.latch271, %loop.body238
  %j.4 = phi i128 [ 0, %loop.body238 ], [ %add273, %loop.latch271 ]
  %array_getter242 = getelementptr inbounds [256 x %struct_template_circuit_fp12square*], [256 x %struct_template_circuit_fp12square*]* %pow29, i128 0, i128 %i.1
  %pow2243 = load %struct_template_circuit_fp12square*, %struct_template_circuit_fp12square** %array_getter242, align 8
  %struct_getter244 = getelementptr inbounds %struct_template_circuit_fp12square, %struct_template_circuit_fp12square* %pow2243, i32 0, i32 4
  %fp12square.out.read_output_outter245 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter244, align 8
  %array_getter249 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12square.out.read_output_outter245, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %pow2250 = load i128, i128* %array_getter249, align 4
  %array_getter253 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  %mult254 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter253, align 8
  %struct_getter255 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult254, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter255, align 8
  %array_getter259 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  %mult260 = load i128, i128* %array_getter259, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult260, i128 %pow2250, i1* @constraint.642)
  %array_getter263 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  %mult264 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter263, align 8
  %struct_getter265 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult264, i32 0, i32 3
  %fp12multiply.a.read_input_outter266 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter265, align 8
  %mult270 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter266, i128 0, i128 %id.4, i128 %eps.4, i128 %j.4
  store i128 %pow2250, i128* %mult270, align 4
  br label %loop.latch271

loop.latch271:                                    ; preds = %loop.body239
  %add273 = add i128 %j.4, 1
  %slt276 = icmp slt i128 %add273, %fp12exp.k.read_arg_inner
  br i1 %slt276, label %loop.body239, label %loop.exit277

loop.exit277:                                     ; preds = %loop.latch271
  br label %loop.latch278

loop.latch278:                                    ; preds = %loop.exit277
  %add280 = add i128 %eps.4, 1
  %slt282 = icmp slt i128 %add280, 2
  br i1 %slt282, label %loop.body238, label %loop.exit283

loop.exit283:                                     ; preds = %loop.latch278
  br label %loop.latch284

loop.latch284:                                    ; preds = %loop.exit283
  %add286 = add i128 %id.4, 1
  %slt288 = icmp slt i128 %add286, 6
  br i1 %slt288, label %loop.body237, label %loop.exit289

loop.exit289:                                     ; preds = %loop.latch284
  %eq293 = icmp eq i128 %curid.0, 1
  br i1 %eq293, label %if.true290, label %if.false291

if.true290:                                       ; preds = %loop.exit289
  br label %loop.body294

if.false291:                                      ; preds = %loop.exit289
  br label %loop.body342

loop.body294:                                     ; preds = %loop.latch336, %if.true290
  %id.5 = phi i128 [ 0, %if.true290 ], [ %add338, %loop.latch336 ]
  br label %loop.body295

loop.body295:                                     ; preds = %loop.latch330, %loop.body294
  %eps.5 = phi i128 [ 0, %loop.body294 ], [ %add332, %loop.latch330 ]
  br label %loop.body296

loop.body296:                                     ; preds = %loop.latch323, %loop.body295
  %j.5 = phi i128 [ 0, %loop.body295 ], [ %add325, %loop.latch323 ]
  %array_getter301 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %first302 = load i128, i128* %array_getter301, align 4
  %array_getter305 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  %mult306 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter305, align 8
  %struct_getter307 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult306, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter307, align 8
  %array_getter311 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  %mult312 = load i128, i128* %array_getter311, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult312, i128 %first302, i1* @constraint.643)
  %array_getter315 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  %mult316 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter315, align 8
  %struct_getter317 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult316, i32 0, i32 4
  %fp12multiply.b.read_input_outter318 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter317, align 8
  %mult322 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter318, i128 0, i128 %id.5, i128 %eps.5, i128 %j.5
  store i128 %first302, i128* %mult322, align 4
  br label %loop.latch323

loop.latch323:                                    ; preds = %loop.body296
  %add325 = add i128 %j.5, 1
  %slt328 = icmp slt i128 %add325, %fp12exp.k.read_arg_inner
  br i1 %slt328, label %loop.body296, label %loop.exit329

loop.exit329:                                     ; preds = %loop.latch323
  br label %loop.latch330

loop.latch330:                                    ; preds = %loop.exit329
  %add332 = add i128 %eps.5, 1
  %slt334 = icmp slt i128 %add332, 2
  br i1 %slt334, label %loop.body295, label %loop.exit335

loop.exit335:                                     ; preds = %loop.latch330
  br label %loop.latch336

loop.latch336:                                    ; preds = %loop.exit335
  %add338 = add i128 %id.5, 1
  %slt340 = icmp slt i128 %add338, 6
  br i1 %slt340, label %loop.body294, label %loop.exit341

loop.exit341:                                     ; preds = %loop.latch336
  br label %if.exit396

loop.body342:                                     ; preds = %loop.latch390, %if.false291
  %id.6 = phi i128 [ 0, %if.false291 ], [ %add392, %loop.latch390 ]
  br label %loop.body343

loop.body343:                                     ; preds = %loop.latch384, %loop.body342
  %eps.6 = phi i128 [ 0, %loop.body342 ], [ %add386, %loop.latch384 ]
  br label %loop.body344

loop.body344:                                     ; preds = %loop.latch377, %loop.body343
  %j.6 = phi i128 [ 0, %loop.body343 ], [ %add379, %loop.latch377 ]
  %sub347 = sub i128 %curid.0, 1
  %array_getter348 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %sub347
  %mult349 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter348, align 8
  %struct_getter350 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult349, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter350, align 8
  %array_getter354 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  %mult355 = load i128, i128* %array_getter354, align 4
  %array_getter358 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  %mult359 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter358, align 8
  %struct_getter360 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult359, i32 0, i32 4
  %fp12multiply.b.read_input_outter361 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter360, align 8
  %array_getter365 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter361, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  %mult366 = load i128, i128* %array_getter365, align 4
  call void @fn_intrinsic_add_constraint(i128 %mult366, i128 %mult355, i1* @constraint.644)
  %array_getter369 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %curid.0
  %mult370 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter369, align 8
  %struct_getter371 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult370, i32 0, i32 4
  %fp12multiply.b.read_input_outter372 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter371, align 8
  %mult376 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter372, i128 0, i128 %id.6, i128 %eps.6, i128 %j.6
  store i128 %mult355, i128* %mult376, align 4
  br label %loop.latch377

loop.latch377:                                    ; preds = %loop.body344
  %add379 = add i128 %j.6, 1
  %slt382 = icmp slt i128 %add379, %fp12exp.k.read_arg_inner
  br i1 %slt382, label %loop.body344, label %loop.exit383

loop.exit383:                                     ; preds = %loop.latch377
  br label %loop.latch384

loop.latch384:                                    ; preds = %loop.exit383
  %add386 = add i128 %eps.6, 1
  %slt388 = icmp slt i128 %add386, 2
  br i1 %slt388, label %loop.body343, label %loop.exit389

loop.exit389:                                     ; preds = %loop.latch384
  br label %loop.latch390

loop.latch390:                                    ; preds = %loop.exit389
  %add392 = add i128 %id.6, 1
  %slt394 = icmp slt i128 %add392, 6
  br i1 %slt394, label %loop.body342, label %loop.exit395

loop.exit395:                                     ; preds = %loop.latch390
  br label %if.exit396

if.exit396:                                       ; preds = %loop.exit395, %loop.exit341
  br label %if.exit397

if.exit397:                                       ; preds = %if.exit396, %if.exit229
  %add399 = add i128 %curid.0, 1
  br label %if.exit400

if.exit400:                                       ; preds = %if.exit397, %if.false133
  %curid.1 = phi i128 [ %add399, %if.exit397 ], [ %curid.0, %if.false133 ]
  br label %loop.latch401

loop.latch401:                                    ; preds = %if.exit400
  %add403 = add i128 %i.1, 1
  %slt406 = icmp slt i128 %add403, %add21
  br i1 %slt406, label %loop.body22, label %loop.exit407

loop.exit407:                                     ; preds = %loop.latch401
  %sub409 = sub i128 %curid.1, 1
  %eq413 = icmp eq i128 %sub409, 0
  br i1 %eq413, label %if.true410, label %if.false411

if.true410:                                       ; preds = %loop.exit407
  br label %loop.body414

if.false411:                                      ; preds = %loop.exit407
  br label %loop.body453

loop.body414:                                     ; preds = %loop.latch447, %if.true410
  %id.7 = phi i128 [ 0, %if.true410 ], [ %add449, %loop.latch447 ]
  br label %loop.body415

loop.body415:                                     ; preds = %loop.latch441, %loop.body414
  %eps.7 = phi i128 [ 0, %loop.body414 ], [ %add443, %loop.latch441 ]
  br label %loop.body416

loop.body416:                                     ; preds = %loop.latch434, %loop.body415
  %j.7 = phi i128 [ 0, %loop.body415 ], [ %add436, %loop.latch434 ]
  %array_getter421 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %first, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  %first422 = load i128, i128* %array_getter421, align 4
  %array_getter427 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  %out428 = load i128, i128* %array_getter427, align 4
  call void @fn_intrinsic_add_constraint(i128 %out428, i128 %first422, i1* @constraint.645)
  %out433 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %id.7, i128 %eps.7, i128 %j.7
  store i128 %first422, i128* %out433, align 4
  br label %loop.latch434

loop.latch434:                                    ; preds = %loop.body416
  %add436 = add i128 %j.7, 1
  %slt439 = icmp slt i128 %add436, %fp12exp.k.read_arg_inner
  br i1 %slt439, label %loop.body416, label %loop.exit440

loop.exit440:                                     ; preds = %loop.latch434
  br label %loop.latch441

loop.latch441:                                    ; preds = %loop.exit440
  %add443 = add i128 %eps.7, 1
  %slt445 = icmp slt i128 %add443, 2
  br i1 %slt445, label %loop.body415, label %loop.exit446

loop.exit446:                                     ; preds = %loop.latch441
  br label %loop.latch447

loop.latch447:                                    ; preds = %loop.exit446
  %add449 = add i128 %id.7, 1
  %slt451 = icmp slt i128 %add449, 6
  br i1 %slt451, label %loop.body414, label %loop.exit452

loop.exit452:                                     ; preds = %loop.latch447
  br label %if.exit497

loop.body453:                                     ; preds = %loop.latch491, %if.false411
  %id.8 = phi i128 [ 0, %if.false411 ], [ %add493, %loop.latch491 ]
  br label %loop.body454

loop.body454:                                     ; preds = %loop.latch485, %loop.body453
  %eps.8 = phi i128 [ 0, %loop.body453 ], [ %add487, %loop.latch485 ]
  br label %loop.body455

loop.body455:                                     ; preds = %loop.latch478, %loop.body454
  %j.8 = phi i128 [ 0, %loop.body454 ], [ %add480, %loop.latch478 ]
  %array_getter458 = getelementptr inbounds [256 x %struct_template_circuit_fp12multiply*], [256 x %struct_template_circuit_fp12multiply*]* %mult11, i128 0, i128 %sub409
  %mult459 = load %struct_template_circuit_fp12multiply*, %struct_template_circuit_fp12multiply** %array_getter458, align 8
  %struct_getter460 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %mult459, i32 0, i32 5
  %fp12multiply.out.read_output_outter461 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter460, align 8
  %array_getter465 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter461, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  %mult466 = load i128, i128* %array_getter465, align 4
  %array_getter471 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  %out472 = load i128, i128* %array_getter471, align 4
  call void @fn_intrinsic_add_constraint(i128 %out472, i128 %mult466, i1* @constraint.646)
  %out477 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %id.8, i128 %eps.8, i128 %j.8
  store i128 %mult466, i128* %out477, align 4
  br label %loop.latch478

loop.latch478:                                    ; preds = %loop.body455
  %add480 = add i128 %j.8, 1
  %slt483 = icmp slt i128 %add480, %fp12exp.k.read_arg_inner
  br i1 %slt483, label %loop.body455, label %loop.exit484

loop.exit484:                                     ; preds = %loop.latch478
  br label %loop.latch485

loop.latch485:                                    ; preds = %loop.exit484
  %add487 = add i128 %eps.8, 1
  %slt489 = icmp slt i128 %add487, 2
  br i1 %slt489, label %loop.body454, label %loop.exit490

loop.exit490:                                     ; preds = %loop.latch485
  br label %loop.latch491

loop.latch491:                                    ; preds = %loop.exit490
  %add493 = add i128 %id.8, 1
  %slt495 = icmp slt i128 %add493, 6
  br i1 %slt495, label %loop.body453, label %loop.exit496

loop.exit496:                                     ; preds = %loop.latch491
  br label %if.exit497

if.exit497:                                       ; preds = %loop.exit496, %loop.exit452
  br label %exit

exit:                                             ; preds = %if.exit497
  %fp12exp.first.write_inter_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 5
  store [256 x [256 x [256 x i128]]]* %first, [256 x [256 x [256 x i128]]]** %fp12exp.first.write_inter_inner, align 8
  %fp12exp.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %0, i32 0, i32 6
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12exp.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12exp* @fn_template_build_fp12exp(i128 %0, i128 %1, i128 %2, [256 x i128]* %3) {
entry:
  %struct_template_circuit_fp12exp = alloca %struct_template_circuit_fp12exp, align 8
  %fp12exp.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 0
  store i128 %0, i128* %fp12exp.n.write_arg_inner, align 4
  %fp12exp.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 1
  store i128 %1, i128* %fp12exp.k.write_arg_inner, align 4
  %fp12exp.e.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 2
  store i128 %2, i128* %fp12exp.e.write_arg_inner, align 4
  %fp12exp.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12exp, %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp, i32 0, i32 3
  store [256 x i128]* %3, [256 x i128]** %fp12exp.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12exp* %struct_template_circuit_fp12exp
}

define void @fn_template_init_fp12invert(%struct_template_circuit_fp12invert* %0) {
entry:
  %struct_getter = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 0
  %fp12invert.n.read_arg_inner = load i128, i128* %struct_getter, align 4
  %struct_getter1 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 1
  %fp12invert.k.read_arg_inner = load i128, i128* %struct_getter1, align 4
  %struct_getter2 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 2
  %fp12invert.p.read_arg_inner = load [256 x i128]*, [256 x i128]** %struct_getter2, align 8
  %struct_getter3 = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 3
  %fp12invert.in.read_input_inner = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter3, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ([256 x [256 x [256 x i128]]]* getelementptr ([256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* null, i32 1) to i32))
  %out = bitcast i8* %malloccall to [256 x [256 x [256 x i128]]]*
  %i4 = call i128 @fn_intrinsic_inline_init()
  %outRangeChecks5 = alloca [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], align 8
  %j6 = call i128 @fn_intrinsic_inline_init()
  %m7 = call i128 @fn_intrinsic_inline_init()
  %call = call [256 x [256 x [256 x i128]]]* @find_Fp12_inverse(i128 %fp12invert.n.read_arg_inner, i128 %fp12invert.k.read_arg_inner, [256 x i128]* %fp12invert.p.read_arg_inner, [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_inner)
  br label %loop.body

loop.body:                                        ; preds = %loop.latch29, %entry
  %i.0 = phi i128 [ 0, %entry ], [ %add31, %loop.latch29 ]
  br label %loop.body9

loop.body9:                                       ; preds = %loop.latch23, %loop.body
  %j.0 = phi i128 [ 0, %loop.body ], [ %add25, %loop.latch23 ]
  br label %loop.body10

loop.body10:                                      ; preds = %loop.latch, %loop.body9
  %m.0 = phi i128 [ 0, %loop.body9 ], [ %add, %loop.latch ]
  %array_getter = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %call, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  %inverse15 = load i128, i128* %array_getter, align 4
  %out19 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.0, i128 %j.0, i128 %m.0
  store i128 %inverse15, i128* %out19, align 4
  br label %loop.latch

loop.latch:                                       ; preds = %loop.body10
  %add = add i128 %m.0, 1
  %slt = icmp slt i128 %add, %fp12invert.k.read_arg_inner
  br i1 %slt, label %loop.body10, label %loop.exit

loop.exit:                                        ; preds = %loop.latch
  br label %loop.latch23

loop.latch23:                                     ; preds = %loop.exit
  %add25 = add i128 %j.0, 1
  %slt27 = icmp slt i128 %add25, 2
  br i1 %slt27, label %loop.body9, label %loop.exit28

loop.exit28:                                      ; preds = %loop.latch23
  br label %loop.latch29

loop.latch29:                                     ; preds = %loop.exit28
  %add31 = add i128 %i.0, 1
  %slt33 = icmp slt i128 %add31, 6
  br i1 %slt33, label %loop.body, label %loop.exit34

loop.exit34:                                      ; preds = %loop.latch29
  br label %loop.body35

loop.body35:                                      ; preds = %loop.latch77, %loop.exit34
  %i.1 = phi i128 [ 0, %loop.exit34 ], [ %add79, %loop.latch77 ]
  br label %loop.body36

loop.body36:                                      ; preds = %loop.latch71, %loop.body35
  %j.1 = phi i128 [ 0, %loop.body35 ], [ %add73, %loop.latch71 ]
  br label %loop.body37

loop.body37:                                      ; preds = %loop.latch64, %loop.body36
  %m.1 = phi i128 [ 0, %loop.body36 ], [ %add66, %loop.latch64 ]
  %call39 = call %struct_template_circuit_num2bits* @fn_template_build_num2bits(i128 %fp12invert.n.read_arg_inner)
  %outRangeChecks44 = getelementptr inbounds [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %outRangeChecks5, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  store %struct_template_circuit_num2bits* %call39, %struct_template_circuit_num2bits** %outRangeChecks44, align 8
  %array_getter49 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  %out50 = load i128, i128* %array_getter49, align 4
  %array_getter55 = getelementptr inbounds [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %outRangeChecks5, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  %outRangeChecks56 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter55, align 8
  %struct_getter57 = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks56, i32 0, i32 1
  %num2bits.in.read_input_outter = load i128, i128* %struct_getter57, align 4
  call void @fn_intrinsic_add_constraint(i128 %num2bits.in.read_input_outter, i128 %out50, i1* @constraint.647)
  %array_getter62 = getelementptr inbounds [256 x [256 x [256 x %struct_template_circuit_num2bits*]]], [256 x [256 x [256 x %struct_template_circuit_num2bits*]]]* %outRangeChecks5, i128 0, i128 %i.1, i128 %j.1, i128 %m.1
  %outRangeChecks63 = load %struct_template_circuit_num2bits*, %struct_template_circuit_num2bits** %array_getter62, align 8
  %num2bits.in.write_input_outter = getelementptr inbounds %struct_template_circuit_num2bits, %struct_template_circuit_num2bits* %outRangeChecks63, i32 0, i32 1
  store i128 %out50, i128* %num2bits.in.write_input_outter, align 4
  br label %loop.latch64

loop.latch64:                                     ; preds = %loop.body37
  %add66 = add i128 %m.1, 1
  %slt69 = icmp slt i128 %add66, %fp12invert.k.read_arg_inner
  br i1 %slt69, label %loop.body37, label %loop.exit70

loop.exit70:                                      ; preds = %loop.latch64
  br label %loop.latch71

loop.latch71:                                     ; preds = %loop.exit70
  %add73 = add i128 %j.1, 1
  %slt75 = icmp slt i128 %add73, 2
  br i1 %slt75, label %loop.body36, label %loop.exit76

loop.exit76:                                      ; preds = %loop.latch71
  br label %loop.latch77

loop.latch77:                                     ; preds = %loop.exit76
  %add79 = add i128 %i.1, 1
  %slt81 = icmp slt i128 %add79, 6
  br i1 %slt81, label %loop.body35, label %loop.exit82

loop.exit82:                                      ; preds = %loop.latch77
  %call86 = call %struct_template_circuit_fp12multiply* @fn_template_build_fp12multiply(i128 %fp12invert.n.read_arg_inner, i128 %fp12invert.k.read_arg_inner, [256 x i128]* %fp12invert.p.read_arg_inner)
  br label %loop.body87

loop.body87:                                      ; preds = %loop.latch143, %loop.exit82
  %i.2 = phi i128 [ 0, %loop.exit82 ], [ %add145, %loop.latch143 ]
  br label %loop.body88

loop.body88:                                      ; preds = %loop.latch137, %loop.body87
  %j.2 = phi i128 [ 0, %loop.body87 ], [ %add139, %loop.latch137 ]
  br label %loop.body89

loop.body89:                                      ; preds = %loop.latch130, %loop.body88
  %m.2 = phi i128 [ 0, %loop.body88 ], [ %add132, %loop.latch130 ]
  %array_getter94 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12invert.in.read_input_inner, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %in95 = load i128, i128* %array_getter94, align 4
  %struct_getter97 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call86, i32 0, i32 3
  %fp12multiply.a.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter97, align 8
  %array_getter101 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %in_out102 = load i128, i128* %array_getter101, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out102, i128 %in95, i1* @constraint.648)
  %struct_getter104 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call86, i32 0, i32 3
  %fp12multiply.a.read_input_outter105 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter104, align 8
  %in_out109 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.a.read_input_outter105, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  store i128 %in95, i128* %in_out109, align 4
  %array_getter114 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %out, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %out115 = load i128, i128* %array_getter114, align 4
  %struct_getter117 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call86, i32 0, i32 4
  %fp12multiply.b.read_input_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter117, align 8
  %array_getter121 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  %in_out122 = load i128, i128* %array_getter121, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out122, i128 %out115, i1* @constraint.649)
  %struct_getter124 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call86, i32 0, i32 4
  %fp12multiply.b.read_input_outter125 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter124, align 8
  %in_out129 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.b.read_input_outter125, i128 0, i128 %i.2, i128 %j.2, i128 %m.2
  store i128 %out115, i128* %in_out129, align 4
  br label %loop.latch130

loop.latch130:                                    ; preds = %loop.body89
  %add132 = add i128 %m.2, 1
  %slt135 = icmp slt i128 %add132, %fp12invert.k.read_arg_inner
  br i1 %slt135, label %loop.body89, label %loop.exit136

loop.exit136:                                     ; preds = %loop.latch130
  br label %loop.latch137

loop.latch137:                                    ; preds = %loop.exit136
  %add139 = add i128 %j.2, 1
  %slt141 = icmp slt i128 %add139, 2
  br i1 %slt141, label %loop.body88, label %loop.exit142

loop.exit142:                                     ; preds = %loop.latch137
  br label %loop.latch143

loop.latch143:                                    ; preds = %loop.exit142
  %add145 = add i128 %i.2, 1
  %slt147 = icmp slt i128 %add145, 6
  br i1 %slt147, label %loop.body87, label %loop.exit148

loop.exit148:                                     ; preds = %loop.latch143
  br label %loop.body149

loop.body149:                                     ; preds = %loop.latch186, %loop.exit148
  %i.3 = phi i128 [ 0, %loop.exit148 ], [ %add188, %loop.latch186 ]
  br label %loop.body150

loop.body150:                                     ; preds = %loop.latch180, %loop.body149
  %j.3 = phi i128 [ 0, %loop.body149 ], [ %add182, %loop.latch180 ]
  br label %loop.body151

loop.body151:                                     ; preds = %loop.latch173, %loop.body150
  %m.3 = phi i128 [ 0, %loop.body150 ], [ %add175, %loop.latch173 ]
  %eq = icmp eq i128 %i.3, 0
  %eq154 = icmp eq i128 %j.3, 0
  %and = and i1 %eq, %eq154
  %eq156 = icmp eq i128 %m.3, 0
  %and157 = and i1 %and, %eq156
  br i1 %and157, label %if.true, label %if.false

if.true:                                          ; preds = %loop.body151
  %struct_getter159 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call86, i32 0, i32 5
  %fp12multiply.out.read_output_outter = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter159, align 8
  %array_getter163 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter, i128 0, i128 %i.3, i128 %j.3, i128 %m.3
  %in_out164 = load i128, i128* %array_getter163, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out164, i128 1, i1* @constraint.650)
  br label %if.exit

if.false:                                         ; preds = %loop.body151
  %struct_getter166 = getelementptr inbounds %struct_template_circuit_fp12multiply, %struct_template_circuit_fp12multiply* %call86, i32 0, i32 5
  %fp12multiply.out.read_output_outter167 = load [256 x [256 x [256 x i128]]]*, [256 x [256 x [256 x i128]]]** %struct_getter166, align 8
  %array_getter171 = getelementptr inbounds [256 x [256 x [256 x i128]]], [256 x [256 x [256 x i128]]]* %fp12multiply.out.read_output_outter167, i128 0, i128 %i.3, i128 %j.3, i128 %m.3
  %in_out172 = load i128, i128* %array_getter171, align 4
  call void @fn_intrinsic_add_constraint(i128 %in_out172, i128 0, i1* @constraint.651)
  br label %if.exit

if.exit:                                          ; preds = %if.false, %if.true
  br label %loop.latch173

loop.latch173:                                    ; preds = %if.exit
  %add175 = add i128 %m.3, 1
  %slt178 = icmp slt i128 %add175, %fp12invert.k.read_arg_inner
  br i1 %slt178, label %loop.body151, label %loop.exit179

loop.exit179:                                     ; preds = %loop.latch173
  br label %loop.latch180

loop.latch180:                                    ; preds = %loop.exit179
  %add182 = add i128 %j.3, 1
  %slt184 = icmp slt i128 %add182, 2
  br i1 %slt184, label %loop.body150, label %loop.exit185

loop.exit185:                                     ; preds = %loop.latch180
  br label %loop.latch186

loop.latch186:                                    ; preds = %loop.exit185
  %add188 = add i128 %i.3, 1
  %slt190 = icmp slt i128 %add188, 6
  br i1 %slt190, label %loop.body149, label %loop.exit191

loop.exit191:                                     ; preds = %loop.latch186
  br label %exit

exit:                                             ; preds = %loop.exit191
  %fp12invert.out.write_output_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %0, i32 0, i32 4
  store [256 x [256 x [256 x i128]]]* %out, [256 x [256 x [256 x i128]]]** %fp12invert.out.write_output_inner, align 8
  ret void
}

define %struct_template_circuit_fp12invert* @fn_template_build_fp12invert(i128 %0, i128 %1, [256 x i128]* %2) {
entry:
  %struct_template_circuit_fp12invert = alloca %struct_template_circuit_fp12invert, align 8
  %fp12invert.n.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert, i32 0, i32 0
  store i128 %0, i128* %fp12invert.n.write_arg_inner, align 4
  %fp12invert.k.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert, i32 0, i32 1
  store i128 %1, i128* %fp12invert.k.write_arg_inner, align 4
  %fp12invert.p.write_arg_inner = getelementptr inbounds %struct_template_circuit_fp12invert, %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert, i32 0, i32 2
  store [256 x i128]* %2, [256 x i128]** %fp12invert.p.write_arg_inner, align 8
  ret %struct_template_circuit_fp12invert* %struct_template_circuit_fp12invert
}

declare noalias i8* @malloc(i32)

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #1 = { argmemonly nofree nounwind willreturn }
